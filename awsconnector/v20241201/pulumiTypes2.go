// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Definition of LoggingFilterModelProperties
type LoggingFilterModelProperties struct {
	// Default handling for logs that don't match any of the specified filtering conditions.
	DefaultBehavior *string `pulumi:"defaultBehavior"`
	// The filters that you want to apply to the logs.
	Filters []Filter `pulumi:"filters"`
}

// LoggingFilterModelPropertiesInput is an input type that accepts LoggingFilterModelPropertiesArgs and LoggingFilterModelPropertiesOutput values.
// You can construct a concrete instance of `LoggingFilterModelPropertiesInput` via:
//
//	LoggingFilterModelPropertiesArgs{...}
type LoggingFilterModelPropertiesInput interface {
	pulumi.Input

	ToLoggingFilterModelPropertiesOutput() LoggingFilterModelPropertiesOutput
	ToLoggingFilterModelPropertiesOutputWithContext(context.Context) LoggingFilterModelPropertiesOutput
}

// Definition of LoggingFilterModelProperties
type LoggingFilterModelPropertiesArgs struct {
	// Default handling for logs that don't match any of the specified filtering conditions.
	DefaultBehavior pulumi.StringPtrInput `pulumi:"defaultBehavior"`
	// The filters that you want to apply to the logs.
	Filters FilterArrayInput `pulumi:"filters"`
}

func (LoggingFilterModelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingFilterModelProperties)(nil)).Elem()
}

func (i LoggingFilterModelPropertiesArgs) ToLoggingFilterModelPropertiesOutput() LoggingFilterModelPropertiesOutput {
	return i.ToLoggingFilterModelPropertiesOutputWithContext(context.Background())
}

func (i LoggingFilterModelPropertiesArgs) ToLoggingFilterModelPropertiesOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingFilterModelPropertiesOutput)
}

func (i LoggingFilterModelPropertiesArgs) ToLoggingFilterModelPropertiesPtrOutput() LoggingFilterModelPropertiesPtrOutput {
	return i.ToLoggingFilterModelPropertiesPtrOutputWithContext(context.Background())
}

func (i LoggingFilterModelPropertiesArgs) ToLoggingFilterModelPropertiesPtrOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingFilterModelPropertiesOutput).ToLoggingFilterModelPropertiesPtrOutputWithContext(ctx)
}

// LoggingFilterModelPropertiesPtrInput is an input type that accepts LoggingFilterModelPropertiesArgs, LoggingFilterModelPropertiesPtr and LoggingFilterModelPropertiesPtrOutput values.
// You can construct a concrete instance of `LoggingFilterModelPropertiesPtrInput` via:
//
//	        LoggingFilterModelPropertiesArgs{...}
//
//	or:
//
//	        nil
type LoggingFilterModelPropertiesPtrInput interface {
	pulumi.Input

	ToLoggingFilterModelPropertiesPtrOutput() LoggingFilterModelPropertiesPtrOutput
	ToLoggingFilterModelPropertiesPtrOutputWithContext(context.Context) LoggingFilterModelPropertiesPtrOutput
}

type loggingFilterModelPropertiesPtrType LoggingFilterModelPropertiesArgs

func LoggingFilterModelPropertiesPtr(v *LoggingFilterModelPropertiesArgs) LoggingFilterModelPropertiesPtrInput {
	return (*loggingFilterModelPropertiesPtrType)(v)
}

func (*loggingFilterModelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingFilterModelProperties)(nil)).Elem()
}

func (i *loggingFilterModelPropertiesPtrType) ToLoggingFilterModelPropertiesPtrOutput() LoggingFilterModelPropertiesPtrOutput {
	return i.ToLoggingFilterModelPropertiesPtrOutputWithContext(context.Background())
}

func (i *loggingFilterModelPropertiesPtrType) ToLoggingFilterModelPropertiesPtrOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingFilterModelPropertiesPtrOutput)
}

// Definition of LoggingFilterModelProperties
type LoggingFilterModelPropertiesOutput struct{ *pulumi.OutputState }

func (LoggingFilterModelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingFilterModelProperties)(nil)).Elem()
}

func (o LoggingFilterModelPropertiesOutput) ToLoggingFilterModelPropertiesOutput() LoggingFilterModelPropertiesOutput {
	return o
}

func (o LoggingFilterModelPropertiesOutput) ToLoggingFilterModelPropertiesOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesOutput {
	return o
}

func (o LoggingFilterModelPropertiesOutput) ToLoggingFilterModelPropertiesPtrOutput() LoggingFilterModelPropertiesPtrOutput {
	return o.ToLoggingFilterModelPropertiesPtrOutputWithContext(context.Background())
}

func (o LoggingFilterModelPropertiesOutput) ToLoggingFilterModelPropertiesPtrOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingFilterModelProperties) *LoggingFilterModelProperties {
		return &v
	}).(LoggingFilterModelPropertiesPtrOutput)
}

// Default handling for logs that don't match any of the specified filtering conditions.
func (o LoggingFilterModelPropertiesOutput) DefaultBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingFilterModelProperties) *string { return v.DefaultBehavior }).(pulumi.StringPtrOutput)
}

// The filters that you want to apply to the logs.
func (o LoggingFilterModelPropertiesOutput) Filters() FilterArrayOutput {
	return o.ApplyT(func(v LoggingFilterModelProperties) []Filter { return v.Filters }).(FilterArrayOutput)
}

type LoggingFilterModelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LoggingFilterModelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingFilterModelProperties)(nil)).Elem()
}

func (o LoggingFilterModelPropertiesPtrOutput) ToLoggingFilterModelPropertiesPtrOutput() LoggingFilterModelPropertiesPtrOutput {
	return o
}

func (o LoggingFilterModelPropertiesPtrOutput) ToLoggingFilterModelPropertiesPtrOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesPtrOutput {
	return o
}

func (o LoggingFilterModelPropertiesPtrOutput) Elem() LoggingFilterModelPropertiesOutput {
	return o.ApplyT(func(v *LoggingFilterModelProperties) LoggingFilterModelProperties {
		if v != nil {
			return *v
		}
		var ret LoggingFilterModelProperties
		return ret
	}).(LoggingFilterModelPropertiesOutput)
}

// Default handling for logs that don't match any of the specified filtering conditions.
func (o LoggingFilterModelPropertiesPtrOutput) DefaultBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingFilterModelProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultBehavior
	}).(pulumi.StringPtrOutput)
}

// The filters that you want to apply to the logs.
func (o LoggingFilterModelPropertiesPtrOutput) Filters() FilterArrayOutput {
	return o.ApplyT(func(v *LoggingFilterModelProperties) []Filter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(FilterArrayOutput)
}

// Definition of LoggingFilterModelProperties
type LoggingFilterModelPropertiesResponse struct {
	// Default handling for logs that don't match any of the specified filtering conditions.
	DefaultBehavior *string `pulumi:"defaultBehavior"`
	// The filters that you want to apply to the logs.
	Filters []FilterResponse `pulumi:"filters"`
}

// Definition of LoggingFilterModelProperties
type LoggingFilterModelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LoggingFilterModelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingFilterModelPropertiesResponse)(nil)).Elem()
}

func (o LoggingFilterModelPropertiesResponseOutput) ToLoggingFilterModelPropertiesResponseOutput() LoggingFilterModelPropertiesResponseOutput {
	return o
}

func (o LoggingFilterModelPropertiesResponseOutput) ToLoggingFilterModelPropertiesResponseOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesResponseOutput {
	return o
}

// Default handling for logs that don't match any of the specified filtering conditions.
func (o LoggingFilterModelPropertiesResponseOutput) DefaultBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingFilterModelPropertiesResponse) *string { return v.DefaultBehavior }).(pulumi.StringPtrOutput)
}

// The filters that you want to apply to the logs.
func (o LoggingFilterModelPropertiesResponseOutput) Filters() FilterResponseArrayOutput {
	return o.ApplyT(func(v LoggingFilterModelPropertiesResponse) []FilterResponse { return v.Filters }).(FilterResponseArrayOutput)
}

type LoggingFilterModelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LoggingFilterModelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingFilterModelPropertiesResponse)(nil)).Elem()
}

func (o LoggingFilterModelPropertiesResponsePtrOutput) ToLoggingFilterModelPropertiesResponsePtrOutput() LoggingFilterModelPropertiesResponsePtrOutput {
	return o
}

func (o LoggingFilterModelPropertiesResponsePtrOutput) ToLoggingFilterModelPropertiesResponsePtrOutputWithContext(ctx context.Context) LoggingFilterModelPropertiesResponsePtrOutput {
	return o
}

func (o LoggingFilterModelPropertiesResponsePtrOutput) Elem() LoggingFilterModelPropertiesResponseOutput {
	return o.ApplyT(func(v *LoggingFilterModelPropertiesResponse) LoggingFilterModelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LoggingFilterModelPropertiesResponse
		return ret
	}).(LoggingFilterModelPropertiesResponseOutput)
}

// Default handling for logs that don't match any of the specified filtering conditions.
func (o LoggingFilterModelPropertiesResponsePtrOutput) DefaultBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingFilterModelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultBehavior
	}).(pulumi.StringPtrOutput)
}

// The filters that you want to apply to the logs.
func (o LoggingFilterModelPropertiesResponsePtrOutput) Filters() FilterResponseArrayOutput {
	return o.ApplyT(func(v *LoggingFilterModelPropertiesResponse) []FilterResponse {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(FilterResponseArrayOutput)
}

// Definition of LoggingProperties
type LoggingProperties struct {
	// Property bucketName
	BucketName *string `pulumi:"bucketName"`
	// Property s3KeyPrefix
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// LoggingPropertiesInput is an input type that accepts LoggingPropertiesArgs and LoggingPropertiesOutput values.
// You can construct a concrete instance of `LoggingPropertiesInput` via:
//
//	LoggingPropertiesArgs{...}
type LoggingPropertiesInput interface {
	pulumi.Input

	ToLoggingPropertiesOutput() LoggingPropertiesOutput
	ToLoggingPropertiesOutputWithContext(context.Context) LoggingPropertiesOutput
}

// Definition of LoggingProperties
type LoggingPropertiesArgs struct {
	// Property bucketName
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Property s3KeyPrefix
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (LoggingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingProperties)(nil)).Elem()
}

func (i LoggingPropertiesArgs) ToLoggingPropertiesOutput() LoggingPropertiesOutput {
	return i.ToLoggingPropertiesOutputWithContext(context.Background())
}

func (i LoggingPropertiesArgs) ToLoggingPropertiesOutputWithContext(ctx context.Context) LoggingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPropertiesOutput)
}

func (i LoggingPropertiesArgs) ToLoggingPropertiesPtrOutput() LoggingPropertiesPtrOutput {
	return i.ToLoggingPropertiesPtrOutputWithContext(context.Background())
}

func (i LoggingPropertiesArgs) ToLoggingPropertiesPtrOutputWithContext(ctx context.Context) LoggingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPropertiesOutput).ToLoggingPropertiesPtrOutputWithContext(ctx)
}

// LoggingPropertiesPtrInput is an input type that accepts LoggingPropertiesArgs, LoggingPropertiesPtr and LoggingPropertiesPtrOutput values.
// You can construct a concrete instance of `LoggingPropertiesPtrInput` via:
//
//	        LoggingPropertiesArgs{...}
//
//	or:
//
//	        nil
type LoggingPropertiesPtrInput interface {
	pulumi.Input

	ToLoggingPropertiesPtrOutput() LoggingPropertiesPtrOutput
	ToLoggingPropertiesPtrOutputWithContext(context.Context) LoggingPropertiesPtrOutput
}

type loggingPropertiesPtrType LoggingPropertiesArgs

func LoggingPropertiesPtr(v *LoggingPropertiesArgs) LoggingPropertiesPtrInput {
	return (*loggingPropertiesPtrType)(v)
}

func (*loggingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingProperties)(nil)).Elem()
}

func (i *loggingPropertiesPtrType) ToLoggingPropertiesPtrOutput() LoggingPropertiesPtrOutput {
	return i.ToLoggingPropertiesPtrOutputWithContext(context.Background())
}

func (i *loggingPropertiesPtrType) ToLoggingPropertiesPtrOutputWithContext(ctx context.Context) LoggingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPropertiesPtrOutput)
}

// Definition of LoggingProperties
type LoggingPropertiesOutput struct{ *pulumi.OutputState }

func (LoggingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingProperties)(nil)).Elem()
}

func (o LoggingPropertiesOutput) ToLoggingPropertiesOutput() LoggingPropertiesOutput {
	return o
}

func (o LoggingPropertiesOutput) ToLoggingPropertiesOutputWithContext(ctx context.Context) LoggingPropertiesOutput {
	return o
}

func (o LoggingPropertiesOutput) ToLoggingPropertiesPtrOutput() LoggingPropertiesPtrOutput {
	return o.ToLoggingPropertiesPtrOutputWithContext(context.Background())
}

func (o LoggingPropertiesOutput) ToLoggingPropertiesPtrOutputWithContext(ctx context.Context) LoggingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingProperties) *LoggingProperties {
		return &v
	}).(LoggingPropertiesPtrOutput)
}

// Property bucketName
func (o LoggingPropertiesOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingProperties) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Property s3KeyPrefix
func (o LoggingPropertiesOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingProperties) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type LoggingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LoggingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingProperties)(nil)).Elem()
}

func (o LoggingPropertiesPtrOutput) ToLoggingPropertiesPtrOutput() LoggingPropertiesPtrOutput {
	return o
}

func (o LoggingPropertiesPtrOutput) ToLoggingPropertiesPtrOutputWithContext(ctx context.Context) LoggingPropertiesPtrOutput {
	return o
}

func (o LoggingPropertiesPtrOutput) Elem() LoggingPropertiesOutput {
	return o.ApplyT(func(v *LoggingProperties) LoggingProperties {
		if v != nil {
			return *v
		}
		var ret LoggingProperties
		return ret
	}).(LoggingPropertiesOutput)
}

// Property bucketName
func (o LoggingPropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Property s3KeyPrefix
func (o LoggingPropertiesPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// Definition of LoggingProperties
type LoggingPropertiesResponse struct {
	// Property bucketName
	BucketName *string `pulumi:"bucketName"`
	// Property s3KeyPrefix
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// Definition of LoggingProperties
type LoggingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LoggingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingPropertiesResponse)(nil)).Elem()
}

func (o LoggingPropertiesResponseOutput) ToLoggingPropertiesResponseOutput() LoggingPropertiesResponseOutput {
	return o
}

func (o LoggingPropertiesResponseOutput) ToLoggingPropertiesResponseOutputWithContext(ctx context.Context) LoggingPropertiesResponseOutput {
	return o
}

// Property bucketName
func (o LoggingPropertiesResponseOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingPropertiesResponse) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Property s3KeyPrefix
func (o LoggingPropertiesResponseOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingPropertiesResponse) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type LoggingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LoggingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingPropertiesResponse)(nil)).Elem()
}

func (o LoggingPropertiesResponsePtrOutput) ToLoggingPropertiesResponsePtrOutput() LoggingPropertiesResponsePtrOutput {
	return o
}

func (o LoggingPropertiesResponsePtrOutput) ToLoggingPropertiesResponsePtrOutputWithContext(ctx context.Context) LoggingPropertiesResponsePtrOutput {
	return o
}

func (o LoggingPropertiesResponsePtrOutput) Elem() LoggingPropertiesResponseOutput {
	return o.ApplyT(func(v *LoggingPropertiesResponse) LoggingPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LoggingPropertiesResponse
		return ret
	}).(LoggingPropertiesResponseOutput)
}

// Property bucketName
func (o LoggingPropertiesResponsePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Property s3KeyPrefix
func (o LoggingPropertiesResponsePtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// Definition of Logging
type LoggingResponse struct {
	// The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.
	Bucket *string `pulumi:"bucket"`
	// <p>The cluster control plane logging configuration for your cluster.</p>
	ClusterLogging []LogSetupResponse `pulumi:"clusterLogging"`
	// Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
	IncludeCookies *bool `pulumi:"includeCookies"`
	// An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example, ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty ``Prefix`` element in the ``Logging`` element.
	Prefix *string `pulumi:"prefix"`
}

// Definition of Logging
type LoggingResponseOutput struct{ *pulumi.OutputState }

func (LoggingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingResponse)(nil)).Elem()
}

func (o LoggingResponseOutput) ToLoggingResponseOutput() LoggingResponseOutput {
	return o
}

func (o LoggingResponseOutput) ToLoggingResponseOutputWithContext(ctx context.Context) LoggingResponseOutput {
	return o
}

// The Amazon S3 bucket to store the access logs in, for example, “myawslogbucket.s3.amazonaws.com“.
func (o LoggingResponseOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingResponse) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// <p>The cluster control plane logging configuration for your cluster.</p>
func (o LoggingResponseOutput) ClusterLogging() LogSetupResponseArrayOutput {
	return o.ApplyT(func(v LoggingResponse) []LogSetupResponse { return v.ClusterLogging }).(LogSetupResponseArrayOutput)
}

// Specifies whether you want CloudFront to include cookies in access logs, specify “true“ for “IncludeCookies“. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify “false“ for “IncludeCookies“.
func (o LoggingResponseOutput) IncludeCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoggingResponse) *bool { return v.IncludeCookies }).(pulumi.BoolPtrOutput)
}

// An optional string that you want CloudFront to prefix to the access log “filenames“ for this distribution, for example, “myprefix/“. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty “Prefix“ element in the “Logging“ element.
func (o LoggingResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type LoggingResponsePtrOutput struct{ *pulumi.OutputState }

func (LoggingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingResponse)(nil)).Elem()
}

func (o LoggingResponsePtrOutput) ToLoggingResponsePtrOutput() LoggingResponsePtrOutput {
	return o
}

func (o LoggingResponsePtrOutput) ToLoggingResponsePtrOutputWithContext(ctx context.Context) LoggingResponsePtrOutput {
	return o
}

func (o LoggingResponsePtrOutput) Elem() LoggingResponseOutput {
	return o.ApplyT(func(v *LoggingResponse) LoggingResponse {
		if v != nil {
			return *v
		}
		var ret LoggingResponse
		return ret
	}).(LoggingResponseOutput)
}

// The Amazon S3 bucket to store the access logs in, for example, “myawslogbucket.s3.amazonaws.com“.
func (o LoggingResponsePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// <p>The cluster control plane logging configuration for your cluster.</p>
func (o LoggingResponsePtrOutput) ClusterLogging() LogSetupResponseArrayOutput {
	return o.ApplyT(func(v *LoggingResponse) []LogSetupResponse {
		if v == nil {
			return nil
		}
		return v.ClusterLogging
	}).(LogSetupResponseArrayOutput)
}

// Specifies whether you want CloudFront to include cookies in access logs, specify “true“ for “IncludeCookies“. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify “false“ for “IncludeCookies“.
func (o LoggingResponsePtrOutput) IncludeCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCookies
	}).(pulumi.BoolPtrOutput)
}

// An optional string that you want CloudFront to prefix to the access log “filenames“ for this distribution, for example, “myprefix/“. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty “Prefix“ element in the “Logging“ element.
func (o LoggingResponsePtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingResponse) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsConfig
type LogsConfig struct {
	// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
	CloudWatchLogs *CloudWatchLogsConfig `pulumi:"cloudWatchLogs"`
	// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
	S3Logs *S3LogsConfig `pulumi:"s3Logs"`
}

// LogsConfigInput is an input type that accepts LogsConfigArgs and LogsConfigOutput values.
// You can construct a concrete instance of `LogsConfigInput` via:
//
//	LogsConfigArgs{...}
type LogsConfigInput interface {
	pulumi.Input

	ToLogsConfigOutput() LogsConfigOutput
	ToLogsConfigOutputWithContext(context.Context) LogsConfigOutput
}

// Definition of LogsConfig
type LogsConfigArgs struct {
	// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
	CloudWatchLogs CloudWatchLogsConfigPtrInput `pulumi:"cloudWatchLogs"`
	// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
	S3Logs S3LogsConfigPtrInput `pulumi:"s3Logs"`
}

func (LogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsConfig)(nil)).Elem()
}

func (i LogsConfigArgs) ToLogsConfigOutput() LogsConfigOutput {
	return i.ToLogsConfigOutputWithContext(context.Background())
}

func (i LogsConfigArgs) ToLogsConfigOutputWithContext(ctx context.Context) LogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsConfigOutput)
}

func (i LogsConfigArgs) ToLogsConfigPtrOutput() LogsConfigPtrOutput {
	return i.ToLogsConfigPtrOutputWithContext(context.Background())
}

func (i LogsConfigArgs) ToLogsConfigPtrOutputWithContext(ctx context.Context) LogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsConfigOutput).ToLogsConfigPtrOutputWithContext(ctx)
}

// LogsConfigPtrInput is an input type that accepts LogsConfigArgs, LogsConfigPtr and LogsConfigPtrOutput values.
// You can construct a concrete instance of `LogsConfigPtrInput` via:
//
//	        LogsConfigArgs{...}
//
//	or:
//
//	        nil
type LogsConfigPtrInput interface {
	pulumi.Input

	ToLogsConfigPtrOutput() LogsConfigPtrOutput
	ToLogsConfigPtrOutputWithContext(context.Context) LogsConfigPtrOutput
}

type logsConfigPtrType LogsConfigArgs

func LogsConfigPtr(v *LogsConfigArgs) LogsConfigPtrInput {
	return (*logsConfigPtrType)(v)
}

func (*logsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsConfig)(nil)).Elem()
}

func (i *logsConfigPtrType) ToLogsConfigPtrOutput() LogsConfigPtrOutput {
	return i.ToLogsConfigPtrOutputWithContext(context.Background())
}

func (i *logsConfigPtrType) ToLogsConfigPtrOutputWithContext(ctx context.Context) LogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsConfigPtrOutput)
}

// Definition of LogsConfig
type LogsConfigOutput struct{ *pulumi.OutputState }

func (LogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsConfig)(nil)).Elem()
}

func (o LogsConfigOutput) ToLogsConfigOutput() LogsConfigOutput {
	return o
}

func (o LogsConfigOutput) ToLogsConfigOutputWithContext(ctx context.Context) LogsConfigOutput {
	return o
}

func (o LogsConfigOutput) ToLogsConfigPtrOutput() LogsConfigPtrOutput {
	return o.ToLogsConfigPtrOutputWithContext(context.Background())
}

func (o LogsConfigOutput) ToLogsConfigPtrOutputWithContext(ctx context.Context) LogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsConfig) *LogsConfig {
		return &v
	}).(LogsConfigPtrOutput)
}

// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
func (o LogsConfigOutput) CloudWatchLogs() CloudWatchLogsConfigPtrOutput {
	return o.ApplyT(func(v LogsConfig) *CloudWatchLogsConfig { return v.CloudWatchLogs }).(CloudWatchLogsConfigPtrOutput)
}

// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
func (o LogsConfigOutput) S3Logs() S3LogsConfigPtrOutput {
	return o.ApplyT(func(v LogsConfig) *S3LogsConfig { return v.S3Logs }).(S3LogsConfigPtrOutput)
}

type LogsConfigPtrOutput struct{ *pulumi.OutputState }

func (LogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsConfig)(nil)).Elem()
}

func (o LogsConfigPtrOutput) ToLogsConfigPtrOutput() LogsConfigPtrOutput {
	return o
}

func (o LogsConfigPtrOutput) ToLogsConfigPtrOutputWithContext(ctx context.Context) LogsConfigPtrOutput {
	return o
}

func (o LogsConfigPtrOutput) Elem() LogsConfigOutput {
	return o.ApplyT(func(v *LogsConfig) LogsConfig {
		if v != nil {
			return *v
		}
		var ret LogsConfig
		return ret
	}).(LogsConfigOutput)
}

// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
func (o LogsConfigPtrOutput) CloudWatchLogs() CloudWatchLogsConfigPtrOutput {
	return o.ApplyT(func(v *LogsConfig) *CloudWatchLogsConfig {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogs
	}).(CloudWatchLogsConfigPtrOutput)
}

// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
func (o LogsConfigPtrOutput) S3Logs() S3LogsConfigPtrOutput {
	return o.ApplyT(func(v *LogsConfig) *S3LogsConfig {
		if v == nil {
			return nil
		}
		return v.S3Logs
	}).(S3LogsConfigPtrOutput)
}

// Definition of LogsConfig
type LogsConfigResponse struct {
	// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
	CloudWatchLogs *CloudWatchLogsConfigResponse `pulumi:"cloudWatchLogs"`
	// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
	S3Logs *S3LogsConfigResponse `pulumi:"s3Logs"`
}

// Definition of LogsConfig
type LogsConfigResponseOutput struct{ *pulumi.OutputState }

func (LogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsConfigResponse)(nil)).Elem()
}

func (o LogsConfigResponseOutput) ToLogsConfigResponseOutput() LogsConfigResponseOutput {
	return o
}

func (o LogsConfigResponseOutput) ToLogsConfigResponseOutputWithContext(ctx context.Context) LogsConfigResponseOutput {
	return o
}

// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
func (o LogsConfigResponseOutput) CloudWatchLogs() CloudWatchLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v LogsConfigResponse) *CloudWatchLogsConfigResponse { return v.CloudWatchLogs }).(CloudWatchLogsConfigResponsePtrOutput)
}

// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
func (o LogsConfigResponseOutput) S3Logs() S3LogsConfigResponsePtrOutput {
	return o.ApplyT(func(v LogsConfigResponse) *S3LogsConfigResponse { return v.S3Logs }).(S3LogsConfigResponsePtrOutput)
}

type LogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (LogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsConfigResponse)(nil)).Elem()
}

func (o LogsConfigResponsePtrOutput) ToLogsConfigResponsePtrOutput() LogsConfigResponsePtrOutput {
	return o
}

func (o LogsConfigResponsePtrOutput) ToLogsConfigResponsePtrOutputWithContext(ctx context.Context) LogsConfigResponsePtrOutput {
	return o
}

func (o LogsConfigResponsePtrOutput) Elem() LogsConfigResponseOutput {
	return o.ApplyT(func(v *LogsConfigResponse) LogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret LogsConfigResponse
		return ret
	}).(LogsConfigResponseOutput)
}

// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
func (o LogsConfigResponsePtrOutput) CloudWatchLogs() CloudWatchLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *LogsConfigResponse) *CloudWatchLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogs
	}).(CloudWatchLogsConfigResponsePtrOutput)
}

// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
func (o LogsConfigResponsePtrOutput) S3Logs() S3LogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *LogsConfigResponse) *S3LogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.S3Logs
	}).(S3LogsConfigResponsePtrOutput)
}

// Definition of LogsConfigStatusTypeEnumValue
type LogsConfigStatusTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// LogsConfigStatusTypeEnumValueInput is an input type that accepts LogsConfigStatusTypeEnumValueArgs and LogsConfigStatusTypeEnumValueOutput values.
// You can construct a concrete instance of `LogsConfigStatusTypeEnumValueInput` via:
//
//	LogsConfigStatusTypeEnumValueArgs{...}
type LogsConfigStatusTypeEnumValueInput interface {
	pulumi.Input

	ToLogsConfigStatusTypeEnumValueOutput() LogsConfigStatusTypeEnumValueOutput
	ToLogsConfigStatusTypeEnumValueOutputWithContext(context.Context) LogsConfigStatusTypeEnumValueOutput
}

// Definition of LogsConfigStatusTypeEnumValue
type LogsConfigStatusTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LogsConfigStatusTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsConfigStatusTypeEnumValue)(nil)).Elem()
}

func (i LogsConfigStatusTypeEnumValueArgs) ToLogsConfigStatusTypeEnumValueOutput() LogsConfigStatusTypeEnumValueOutput {
	return i.ToLogsConfigStatusTypeEnumValueOutputWithContext(context.Background())
}

func (i LogsConfigStatusTypeEnumValueArgs) ToLogsConfigStatusTypeEnumValueOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsConfigStatusTypeEnumValueOutput)
}

func (i LogsConfigStatusTypeEnumValueArgs) ToLogsConfigStatusTypeEnumValuePtrOutput() LogsConfigStatusTypeEnumValuePtrOutput {
	return i.ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i LogsConfigStatusTypeEnumValueArgs) ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsConfigStatusTypeEnumValueOutput).ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(ctx)
}

// LogsConfigStatusTypeEnumValuePtrInput is an input type that accepts LogsConfigStatusTypeEnumValueArgs, LogsConfigStatusTypeEnumValuePtr and LogsConfigStatusTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `LogsConfigStatusTypeEnumValuePtrInput` via:
//
//	        LogsConfigStatusTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type LogsConfigStatusTypeEnumValuePtrInput interface {
	pulumi.Input

	ToLogsConfigStatusTypeEnumValuePtrOutput() LogsConfigStatusTypeEnumValuePtrOutput
	ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(context.Context) LogsConfigStatusTypeEnumValuePtrOutput
}

type logsConfigStatusTypeEnumValuePtrType LogsConfigStatusTypeEnumValueArgs

func LogsConfigStatusTypeEnumValuePtr(v *LogsConfigStatusTypeEnumValueArgs) LogsConfigStatusTypeEnumValuePtrInput {
	return (*logsConfigStatusTypeEnumValuePtrType)(v)
}

func (*logsConfigStatusTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsConfigStatusTypeEnumValue)(nil)).Elem()
}

func (i *logsConfigStatusTypeEnumValuePtrType) ToLogsConfigStatusTypeEnumValuePtrOutput() LogsConfigStatusTypeEnumValuePtrOutput {
	return i.ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *logsConfigStatusTypeEnumValuePtrType) ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsConfigStatusTypeEnumValuePtrOutput)
}

// Definition of LogsConfigStatusTypeEnumValue
type LogsConfigStatusTypeEnumValueOutput struct{ *pulumi.OutputState }

func (LogsConfigStatusTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsConfigStatusTypeEnumValue)(nil)).Elem()
}

func (o LogsConfigStatusTypeEnumValueOutput) ToLogsConfigStatusTypeEnumValueOutput() LogsConfigStatusTypeEnumValueOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValueOutput) ToLogsConfigStatusTypeEnumValueOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValueOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValueOutput) ToLogsConfigStatusTypeEnumValuePtrOutput() LogsConfigStatusTypeEnumValuePtrOutput {
	return o.ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o LogsConfigStatusTypeEnumValueOutput) ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsConfigStatusTypeEnumValue) *LogsConfigStatusTypeEnumValue {
		return &v
	}).(LogsConfigStatusTypeEnumValuePtrOutput)
}

// Property value
func (o LogsConfigStatusTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsConfigStatusTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LogsConfigStatusTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (LogsConfigStatusTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsConfigStatusTypeEnumValue)(nil)).Elem()
}

func (o LogsConfigStatusTypeEnumValuePtrOutput) ToLogsConfigStatusTypeEnumValuePtrOutput() LogsConfigStatusTypeEnumValuePtrOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValuePtrOutput) ToLogsConfigStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValuePtrOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValuePtrOutput) Elem() LogsConfigStatusTypeEnumValueOutput {
	return o.ApplyT(func(v *LogsConfigStatusTypeEnumValue) LogsConfigStatusTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret LogsConfigStatusTypeEnumValue
		return ret
	}).(LogsConfigStatusTypeEnumValueOutput)
}

// Property value
func (o LogsConfigStatusTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsConfigStatusTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsConfigStatusTypeEnumValue
type LogsConfigStatusTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of LogsConfigStatusTypeEnumValue
type LogsConfigStatusTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (LogsConfigStatusTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsConfigStatusTypeEnumValueResponse)(nil)).Elem()
}

func (o LogsConfigStatusTypeEnumValueResponseOutput) ToLogsConfigStatusTypeEnumValueResponseOutput() LogsConfigStatusTypeEnumValueResponseOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValueResponseOutput) ToLogsConfigStatusTypeEnumValueResponseOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o LogsConfigStatusTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsConfigStatusTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LogsConfigStatusTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (LogsConfigStatusTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsConfigStatusTypeEnumValueResponse)(nil)).Elem()
}

func (o LogsConfigStatusTypeEnumValueResponsePtrOutput) ToLogsConfigStatusTypeEnumValueResponsePtrOutput() LogsConfigStatusTypeEnumValueResponsePtrOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValueResponsePtrOutput) ToLogsConfigStatusTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) LogsConfigStatusTypeEnumValueResponsePtrOutput {
	return o
}

func (o LogsConfigStatusTypeEnumValueResponsePtrOutput) Elem() LogsConfigStatusTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *LogsConfigStatusTypeEnumValueResponse) LogsConfigStatusTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret LogsConfigStatusTypeEnumValueResponse
		return ret
	}).(LogsConfigStatusTypeEnumValueResponseOutput)
}

// Property value
func (o LogsConfigStatusTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsConfigStatusTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsLogGroup
type LogsLogGroupProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsLogGroupProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for LogsLogGroupProperties
func (val *LogsLogGroupProperties) Defaults() *LogsLogGroupProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// LogsLogGroupPropertiesInput is an input type that accepts LogsLogGroupPropertiesArgs and LogsLogGroupPropertiesOutput values.
// You can construct a concrete instance of `LogsLogGroupPropertiesInput` via:
//
//	LogsLogGroupPropertiesArgs{...}
type LogsLogGroupPropertiesInput interface {
	pulumi.Input

	ToLogsLogGroupPropertiesOutput() LogsLogGroupPropertiesOutput
	ToLogsLogGroupPropertiesOutputWithContext(context.Context) LogsLogGroupPropertiesOutput
}

// Definition of LogsLogGroup
type LogsLogGroupPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsLogsLogGroupPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for LogsLogGroupPropertiesArgs
func (val *LogsLogGroupPropertiesArgs) Defaults() *LogsLogGroupPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (LogsLogGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLogGroupProperties)(nil)).Elem()
}

func (i LogsLogGroupPropertiesArgs) ToLogsLogGroupPropertiesOutput() LogsLogGroupPropertiesOutput {
	return i.ToLogsLogGroupPropertiesOutputWithContext(context.Background())
}

func (i LogsLogGroupPropertiesArgs) ToLogsLogGroupPropertiesOutputWithContext(ctx context.Context) LogsLogGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogGroupPropertiesOutput)
}

func (i LogsLogGroupPropertiesArgs) ToLogsLogGroupPropertiesPtrOutput() LogsLogGroupPropertiesPtrOutput {
	return i.ToLogsLogGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i LogsLogGroupPropertiesArgs) ToLogsLogGroupPropertiesPtrOutputWithContext(ctx context.Context) LogsLogGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogGroupPropertiesOutput).ToLogsLogGroupPropertiesPtrOutputWithContext(ctx)
}

// LogsLogGroupPropertiesPtrInput is an input type that accepts LogsLogGroupPropertiesArgs, LogsLogGroupPropertiesPtr and LogsLogGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `LogsLogGroupPropertiesPtrInput` via:
//
//	        LogsLogGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type LogsLogGroupPropertiesPtrInput interface {
	pulumi.Input

	ToLogsLogGroupPropertiesPtrOutput() LogsLogGroupPropertiesPtrOutput
	ToLogsLogGroupPropertiesPtrOutputWithContext(context.Context) LogsLogGroupPropertiesPtrOutput
}

type logsLogGroupPropertiesPtrType LogsLogGroupPropertiesArgs

func LogsLogGroupPropertiesPtr(v *LogsLogGroupPropertiesArgs) LogsLogGroupPropertiesPtrInput {
	return (*logsLogGroupPropertiesPtrType)(v)
}

func (*logsLogGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsLogGroupProperties)(nil)).Elem()
}

func (i *logsLogGroupPropertiesPtrType) ToLogsLogGroupPropertiesPtrOutput() LogsLogGroupPropertiesPtrOutput {
	return i.ToLogsLogGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *logsLogGroupPropertiesPtrType) ToLogsLogGroupPropertiesPtrOutputWithContext(ctx context.Context) LogsLogGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogGroupPropertiesPtrOutput)
}

// Definition of LogsLogGroup
type LogsLogGroupPropertiesOutput struct{ *pulumi.OutputState }

func (LogsLogGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLogGroupProperties)(nil)).Elem()
}

func (o LogsLogGroupPropertiesOutput) ToLogsLogGroupPropertiesOutput() LogsLogGroupPropertiesOutput {
	return o
}

func (o LogsLogGroupPropertiesOutput) ToLogsLogGroupPropertiesOutputWithContext(ctx context.Context) LogsLogGroupPropertiesOutput {
	return o
}

func (o LogsLogGroupPropertiesOutput) ToLogsLogGroupPropertiesPtrOutput() LogsLogGroupPropertiesPtrOutput {
	return o.ToLogsLogGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o LogsLogGroupPropertiesOutput) ToLogsLogGroupPropertiesPtrOutputWithContext(ctx context.Context) LogsLogGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsLogGroupProperties) *LogsLogGroupProperties {
		return &v
	}).(LogsLogGroupPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o LogsLogGroupPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsLogGroupPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsLogGroupPropertiesOutput) AwsProperties() AwsLogsLogGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *AwsLogsLogGroupProperties { return v.AwsProperties }).(AwsLogsLogGroupPropertiesPtrOutput)
}

// AWS Region
func (o LogsLogGroupPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsLogGroupPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsLogGroupPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsLogGroupPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsLogGroupPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type LogsLogGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LogsLogGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsLogGroupProperties)(nil)).Elem()
}

func (o LogsLogGroupPropertiesPtrOutput) ToLogsLogGroupPropertiesPtrOutput() LogsLogGroupPropertiesPtrOutput {
	return o
}

func (o LogsLogGroupPropertiesPtrOutput) ToLogsLogGroupPropertiesPtrOutputWithContext(ctx context.Context) LogsLogGroupPropertiesPtrOutput {
	return o
}

func (o LogsLogGroupPropertiesPtrOutput) Elem() LogsLogGroupPropertiesOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) LogsLogGroupProperties {
		if v != nil {
			return *v
		}
		var ret LogsLogGroupProperties
		return ret
	}).(LogsLogGroupPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o LogsLogGroupPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsLogGroupPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsLogGroupPropertiesPtrOutput) AwsProperties() AwsLogsLogGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *AwsLogsLogGroupProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsLogsLogGroupPropertiesPtrOutput)
}

// AWS Region
func (o LogsLogGroupPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsLogGroupPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsLogGroupPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsLogGroupPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsLogGroupPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsLogGroup
type LogsLogGroupPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsLogGroupPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for LogsLogGroupPropertiesResponse
func (val *LogsLogGroupPropertiesResponse) Defaults() *LogsLogGroupPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of LogsLogGroup
type LogsLogGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LogsLogGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLogGroupPropertiesResponse)(nil)).Elem()
}

func (o LogsLogGroupPropertiesResponseOutput) ToLogsLogGroupPropertiesResponseOutput() LogsLogGroupPropertiesResponseOutput {
	return o
}

func (o LogsLogGroupPropertiesResponseOutput) ToLogsLogGroupPropertiesResponseOutputWithContext(ctx context.Context) LogsLogGroupPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o LogsLogGroupPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsLogGroupPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsLogGroupPropertiesResponseOutput) AwsProperties() AwsLogsLogGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *AwsLogsLogGroupPropertiesResponse { return v.AwsProperties }).(AwsLogsLogGroupPropertiesResponsePtrOutput)
}

// AWS Region
func (o LogsLogGroupPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsLogGroupPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsLogGroupPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o LogsLogGroupPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsLogGroupPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsLogGroupPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogGroupPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of LogsLogStream
type LogsLogStreamProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsLogStreamProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// LogsLogStreamPropertiesInput is an input type that accepts LogsLogStreamPropertiesArgs and LogsLogStreamPropertiesOutput values.
// You can construct a concrete instance of `LogsLogStreamPropertiesInput` via:
//
//	LogsLogStreamPropertiesArgs{...}
type LogsLogStreamPropertiesInput interface {
	pulumi.Input

	ToLogsLogStreamPropertiesOutput() LogsLogStreamPropertiesOutput
	ToLogsLogStreamPropertiesOutputWithContext(context.Context) LogsLogStreamPropertiesOutput
}

// Definition of LogsLogStream
type LogsLogStreamPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsLogsLogStreamPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (LogsLogStreamPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLogStreamProperties)(nil)).Elem()
}

func (i LogsLogStreamPropertiesArgs) ToLogsLogStreamPropertiesOutput() LogsLogStreamPropertiesOutput {
	return i.ToLogsLogStreamPropertiesOutputWithContext(context.Background())
}

func (i LogsLogStreamPropertiesArgs) ToLogsLogStreamPropertiesOutputWithContext(ctx context.Context) LogsLogStreamPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogStreamPropertiesOutput)
}

func (i LogsLogStreamPropertiesArgs) ToLogsLogStreamPropertiesPtrOutput() LogsLogStreamPropertiesPtrOutput {
	return i.ToLogsLogStreamPropertiesPtrOutputWithContext(context.Background())
}

func (i LogsLogStreamPropertiesArgs) ToLogsLogStreamPropertiesPtrOutputWithContext(ctx context.Context) LogsLogStreamPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogStreamPropertiesOutput).ToLogsLogStreamPropertiesPtrOutputWithContext(ctx)
}

// LogsLogStreamPropertiesPtrInput is an input type that accepts LogsLogStreamPropertiesArgs, LogsLogStreamPropertiesPtr and LogsLogStreamPropertiesPtrOutput values.
// You can construct a concrete instance of `LogsLogStreamPropertiesPtrInput` via:
//
//	        LogsLogStreamPropertiesArgs{...}
//
//	or:
//
//	        nil
type LogsLogStreamPropertiesPtrInput interface {
	pulumi.Input

	ToLogsLogStreamPropertiesPtrOutput() LogsLogStreamPropertiesPtrOutput
	ToLogsLogStreamPropertiesPtrOutputWithContext(context.Context) LogsLogStreamPropertiesPtrOutput
}

type logsLogStreamPropertiesPtrType LogsLogStreamPropertiesArgs

func LogsLogStreamPropertiesPtr(v *LogsLogStreamPropertiesArgs) LogsLogStreamPropertiesPtrInput {
	return (*logsLogStreamPropertiesPtrType)(v)
}

func (*logsLogStreamPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsLogStreamProperties)(nil)).Elem()
}

func (i *logsLogStreamPropertiesPtrType) ToLogsLogStreamPropertiesPtrOutput() LogsLogStreamPropertiesPtrOutput {
	return i.ToLogsLogStreamPropertiesPtrOutputWithContext(context.Background())
}

func (i *logsLogStreamPropertiesPtrType) ToLogsLogStreamPropertiesPtrOutputWithContext(ctx context.Context) LogsLogStreamPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsLogStreamPropertiesPtrOutput)
}

// Definition of LogsLogStream
type LogsLogStreamPropertiesOutput struct{ *pulumi.OutputState }

func (LogsLogStreamPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLogStreamProperties)(nil)).Elem()
}

func (o LogsLogStreamPropertiesOutput) ToLogsLogStreamPropertiesOutput() LogsLogStreamPropertiesOutput {
	return o
}

func (o LogsLogStreamPropertiesOutput) ToLogsLogStreamPropertiesOutputWithContext(ctx context.Context) LogsLogStreamPropertiesOutput {
	return o
}

func (o LogsLogStreamPropertiesOutput) ToLogsLogStreamPropertiesPtrOutput() LogsLogStreamPropertiesPtrOutput {
	return o.ToLogsLogStreamPropertiesPtrOutputWithContext(context.Background())
}

func (o LogsLogStreamPropertiesOutput) ToLogsLogStreamPropertiesPtrOutputWithContext(ctx context.Context) LogsLogStreamPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsLogStreamProperties) *LogsLogStreamProperties {
		return &v
	}).(LogsLogStreamPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o LogsLogStreamPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsLogStreamPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsLogStreamPropertiesOutput) AwsProperties() AwsLogsLogStreamPropertiesPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *AwsLogsLogStreamProperties { return v.AwsProperties }).(AwsLogsLogStreamPropertiesPtrOutput)
}

// AWS Region
func (o LogsLogStreamPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsLogStreamPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsLogStreamPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsLogStreamPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsLogStreamPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type LogsLogStreamPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LogsLogStreamPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsLogStreamProperties)(nil)).Elem()
}

func (o LogsLogStreamPropertiesPtrOutput) ToLogsLogStreamPropertiesPtrOutput() LogsLogStreamPropertiesPtrOutput {
	return o
}

func (o LogsLogStreamPropertiesPtrOutput) ToLogsLogStreamPropertiesPtrOutputWithContext(ctx context.Context) LogsLogStreamPropertiesPtrOutput {
	return o
}

func (o LogsLogStreamPropertiesPtrOutput) Elem() LogsLogStreamPropertiesOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) LogsLogStreamProperties {
		if v != nil {
			return *v
		}
		var ret LogsLogStreamProperties
		return ret
	}).(LogsLogStreamPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o LogsLogStreamPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsLogStreamPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsLogStreamPropertiesPtrOutput) AwsProperties() AwsLogsLogStreamPropertiesPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *AwsLogsLogStreamProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsLogsLogStreamPropertiesPtrOutput)
}

// AWS Region
func (o LogsLogStreamPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsLogStreamPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsLogStreamPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsLogStreamPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsLogStreamPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsLogStreamProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsLogStream
type LogsLogStreamPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsLogStreamPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of LogsLogStream
type LogsLogStreamPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LogsLogStreamPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsLogStreamPropertiesResponse)(nil)).Elem()
}

func (o LogsLogStreamPropertiesResponseOutput) ToLogsLogStreamPropertiesResponseOutput() LogsLogStreamPropertiesResponseOutput {
	return o
}

func (o LogsLogStreamPropertiesResponseOutput) ToLogsLogStreamPropertiesResponseOutputWithContext(ctx context.Context) LogsLogStreamPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o LogsLogStreamPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsLogStreamPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsLogStreamPropertiesResponseOutput) AwsProperties() AwsLogsLogStreamPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *AwsLogsLogStreamPropertiesResponse { return v.AwsProperties }).(AwsLogsLogStreamPropertiesResponsePtrOutput)
}

// AWS Region
func (o LogsLogStreamPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsLogStreamPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsLogStreamPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o LogsLogStreamPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsLogStreamPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsLogStreamPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsLogStreamPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of LogsMetricFilter
type LogsMetricFilterProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsMetricFilterProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// LogsMetricFilterPropertiesInput is an input type that accepts LogsMetricFilterPropertiesArgs and LogsMetricFilterPropertiesOutput values.
// You can construct a concrete instance of `LogsMetricFilterPropertiesInput` via:
//
//	LogsMetricFilterPropertiesArgs{...}
type LogsMetricFilterPropertiesInput interface {
	pulumi.Input

	ToLogsMetricFilterPropertiesOutput() LogsMetricFilterPropertiesOutput
	ToLogsMetricFilterPropertiesOutputWithContext(context.Context) LogsMetricFilterPropertiesOutput
}

// Definition of LogsMetricFilter
type LogsMetricFilterPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsLogsMetricFilterPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (LogsMetricFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsMetricFilterProperties)(nil)).Elem()
}

func (i LogsMetricFilterPropertiesArgs) ToLogsMetricFilterPropertiesOutput() LogsMetricFilterPropertiesOutput {
	return i.ToLogsMetricFilterPropertiesOutputWithContext(context.Background())
}

func (i LogsMetricFilterPropertiesArgs) ToLogsMetricFilterPropertiesOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsMetricFilterPropertiesOutput)
}

func (i LogsMetricFilterPropertiesArgs) ToLogsMetricFilterPropertiesPtrOutput() LogsMetricFilterPropertiesPtrOutput {
	return i.ToLogsMetricFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i LogsMetricFilterPropertiesArgs) ToLogsMetricFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsMetricFilterPropertiesOutput).ToLogsMetricFilterPropertiesPtrOutputWithContext(ctx)
}

// LogsMetricFilterPropertiesPtrInput is an input type that accepts LogsMetricFilterPropertiesArgs, LogsMetricFilterPropertiesPtr and LogsMetricFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `LogsMetricFilterPropertiesPtrInput` via:
//
//	        LogsMetricFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type LogsMetricFilterPropertiesPtrInput interface {
	pulumi.Input

	ToLogsMetricFilterPropertiesPtrOutput() LogsMetricFilterPropertiesPtrOutput
	ToLogsMetricFilterPropertiesPtrOutputWithContext(context.Context) LogsMetricFilterPropertiesPtrOutput
}

type logsMetricFilterPropertiesPtrType LogsMetricFilterPropertiesArgs

func LogsMetricFilterPropertiesPtr(v *LogsMetricFilterPropertiesArgs) LogsMetricFilterPropertiesPtrInput {
	return (*logsMetricFilterPropertiesPtrType)(v)
}

func (*logsMetricFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsMetricFilterProperties)(nil)).Elem()
}

func (i *logsMetricFilterPropertiesPtrType) ToLogsMetricFilterPropertiesPtrOutput() LogsMetricFilterPropertiesPtrOutput {
	return i.ToLogsMetricFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *logsMetricFilterPropertiesPtrType) ToLogsMetricFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsMetricFilterPropertiesPtrOutput)
}

// Definition of LogsMetricFilter
type LogsMetricFilterPropertiesOutput struct{ *pulumi.OutputState }

func (LogsMetricFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsMetricFilterProperties)(nil)).Elem()
}

func (o LogsMetricFilterPropertiesOutput) ToLogsMetricFilterPropertiesOutput() LogsMetricFilterPropertiesOutput {
	return o
}

func (o LogsMetricFilterPropertiesOutput) ToLogsMetricFilterPropertiesOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesOutput {
	return o
}

func (o LogsMetricFilterPropertiesOutput) ToLogsMetricFilterPropertiesPtrOutput() LogsMetricFilterPropertiesPtrOutput {
	return o.ToLogsMetricFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o LogsMetricFilterPropertiesOutput) ToLogsMetricFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsMetricFilterProperties) *LogsMetricFilterProperties {
		return &v
	}).(LogsMetricFilterPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o LogsMetricFilterPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsMetricFilterPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsMetricFilterPropertiesOutput) AwsProperties() AwsLogsMetricFilterPropertiesPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *AwsLogsMetricFilterProperties { return v.AwsProperties }).(AwsLogsMetricFilterPropertiesPtrOutput)
}

// AWS Region
func (o LogsMetricFilterPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsMetricFilterPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsMetricFilterPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsMetricFilterPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsMetricFilterPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type LogsMetricFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LogsMetricFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsMetricFilterProperties)(nil)).Elem()
}

func (o LogsMetricFilterPropertiesPtrOutput) ToLogsMetricFilterPropertiesPtrOutput() LogsMetricFilterPropertiesPtrOutput {
	return o
}

func (o LogsMetricFilterPropertiesPtrOutput) ToLogsMetricFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesPtrOutput {
	return o
}

func (o LogsMetricFilterPropertiesPtrOutput) Elem() LogsMetricFilterPropertiesOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) LogsMetricFilterProperties {
		if v != nil {
			return *v
		}
		var ret LogsMetricFilterProperties
		return ret
	}).(LogsMetricFilterPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o LogsMetricFilterPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsMetricFilterPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsMetricFilterPropertiesPtrOutput) AwsProperties() AwsLogsMetricFilterPropertiesPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *AwsLogsMetricFilterProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsLogsMetricFilterPropertiesPtrOutput)
}

// AWS Region
func (o LogsMetricFilterPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsMetricFilterPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsMetricFilterPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsMetricFilterPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsMetricFilterPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsMetricFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsMetricFilter
type LogsMetricFilterPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsMetricFilterPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of LogsMetricFilter
type LogsMetricFilterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LogsMetricFilterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsMetricFilterPropertiesResponse)(nil)).Elem()
}

func (o LogsMetricFilterPropertiesResponseOutput) ToLogsMetricFilterPropertiesResponseOutput() LogsMetricFilterPropertiesResponseOutput {
	return o
}

func (o LogsMetricFilterPropertiesResponseOutput) ToLogsMetricFilterPropertiesResponseOutputWithContext(ctx context.Context) LogsMetricFilterPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o LogsMetricFilterPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsMetricFilterPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsMetricFilterPropertiesResponseOutput) AwsProperties() AwsLogsMetricFilterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *AwsLogsMetricFilterPropertiesResponse {
		return v.AwsProperties
	}).(AwsLogsMetricFilterPropertiesResponsePtrOutput)
}

// AWS Region
func (o LogsMetricFilterPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsMetricFilterPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsMetricFilterPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o LogsMetricFilterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsMetricFilterPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsMetricFilterPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsMetricFilterPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of LogsSubscriptionFilter
type LogsSubscriptionFilterProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsSubscriptionFilterProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// LogsSubscriptionFilterPropertiesInput is an input type that accepts LogsSubscriptionFilterPropertiesArgs and LogsSubscriptionFilterPropertiesOutput values.
// You can construct a concrete instance of `LogsSubscriptionFilterPropertiesInput` via:
//
//	LogsSubscriptionFilterPropertiesArgs{...}
type LogsSubscriptionFilterPropertiesInput interface {
	pulumi.Input

	ToLogsSubscriptionFilterPropertiesOutput() LogsSubscriptionFilterPropertiesOutput
	ToLogsSubscriptionFilterPropertiesOutputWithContext(context.Context) LogsSubscriptionFilterPropertiesOutput
}

// Definition of LogsSubscriptionFilter
type LogsSubscriptionFilterPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsLogsSubscriptionFilterPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (LogsSubscriptionFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsSubscriptionFilterProperties)(nil)).Elem()
}

func (i LogsSubscriptionFilterPropertiesArgs) ToLogsSubscriptionFilterPropertiesOutput() LogsSubscriptionFilterPropertiesOutput {
	return i.ToLogsSubscriptionFilterPropertiesOutputWithContext(context.Background())
}

func (i LogsSubscriptionFilterPropertiesArgs) ToLogsSubscriptionFilterPropertiesOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsSubscriptionFilterPropertiesOutput)
}

func (i LogsSubscriptionFilterPropertiesArgs) ToLogsSubscriptionFilterPropertiesPtrOutput() LogsSubscriptionFilterPropertiesPtrOutput {
	return i.ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i LogsSubscriptionFilterPropertiesArgs) ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsSubscriptionFilterPropertiesOutput).ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(ctx)
}

// LogsSubscriptionFilterPropertiesPtrInput is an input type that accepts LogsSubscriptionFilterPropertiesArgs, LogsSubscriptionFilterPropertiesPtr and LogsSubscriptionFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `LogsSubscriptionFilterPropertiesPtrInput` via:
//
//	        LogsSubscriptionFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type LogsSubscriptionFilterPropertiesPtrInput interface {
	pulumi.Input

	ToLogsSubscriptionFilterPropertiesPtrOutput() LogsSubscriptionFilterPropertiesPtrOutput
	ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(context.Context) LogsSubscriptionFilterPropertiesPtrOutput
}

type logsSubscriptionFilterPropertiesPtrType LogsSubscriptionFilterPropertiesArgs

func LogsSubscriptionFilterPropertiesPtr(v *LogsSubscriptionFilterPropertiesArgs) LogsSubscriptionFilterPropertiesPtrInput {
	return (*logsSubscriptionFilterPropertiesPtrType)(v)
}

func (*logsSubscriptionFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsSubscriptionFilterProperties)(nil)).Elem()
}

func (i *logsSubscriptionFilterPropertiesPtrType) ToLogsSubscriptionFilterPropertiesPtrOutput() LogsSubscriptionFilterPropertiesPtrOutput {
	return i.ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *logsSubscriptionFilterPropertiesPtrType) ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsSubscriptionFilterPropertiesPtrOutput)
}

// Definition of LogsSubscriptionFilter
type LogsSubscriptionFilterPropertiesOutput struct{ *pulumi.OutputState }

func (LogsSubscriptionFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsSubscriptionFilterProperties)(nil)).Elem()
}

func (o LogsSubscriptionFilterPropertiesOutput) ToLogsSubscriptionFilterPropertiesOutput() LogsSubscriptionFilterPropertiesOutput {
	return o
}

func (o LogsSubscriptionFilterPropertiesOutput) ToLogsSubscriptionFilterPropertiesOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesOutput {
	return o
}

func (o LogsSubscriptionFilterPropertiesOutput) ToLogsSubscriptionFilterPropertiesPtrOutput() LogsSubscriptionFilterPropertiesPtrOutput {
	return o.ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o LogsSubscriptionFilterPropertiesOutput) ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsSubscriptionFilterProperties) *LogsSubscriptionFilterProperties {
		return &v
	}).(LogsSubscriptionFilterPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o LogsSubscriptionFilterPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsSubscriptionFilterPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsSubscriptionFilterPropertiesOutput) AwsProperties() AwsLogsSubscriptionFilterPropertiesPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *AwsLogsSubscriptionFilterProperties { return v.AwsProperties }).(AwsLogsSubscriptionFilterPropertiesPtrOutput)
}

// AWS Region
func (o LogsSubscriptionFilterPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsSubscriptionFilterPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsSubscriptionFilterPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsSubscriptionFilterPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsSubscriptionFilterPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type LogsSubscriptionFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LogsSubscriptionFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsSubscriptionFilterProperties)(nil)).Elem()
}

func (o LogsSubscriptionFilterPropertiesPtrOutput) ToLogsSubscriptionFilterPropertiesPtrOutput() LogsSubscriptionFilterPropertiesPtrOutput {
	return o
}

func (o LogsSubscriptionFilterPropertiesPtrOutput) ToLogsSubscriptionFilterPropertiesPtrOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesPtrOutput {
	return o
}

func (o LogsSubscriptionFilterPropertiesPtrOutput) Elem() LogsSubscriptionFilterPropertiesOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) LogsSubscriptionFilterProperties {
		if v != nil {
			return *v
		}
		var ret LogsSubscriptionFilterProperties
		return ret
	}).(LogsSubscriptionFilterPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o LogsSubscriptionFilterPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsSubscriptionFilterPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsSubscriptionFilterPropertiesPtrOutput) AwsProperties() AwsLogsSubscriptionFilterPropertiesPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *AwsLogsSubscriptionFilterProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsLogsSubscriptionFilterPropertiesPtrOutput)
}

// AWS Region
func (o LogsSubscriptionFilterPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsSubscriptionFilterPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsSubscriptionFilterPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsSubscriptionFilterPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsSubscriptionFilterPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogsSubscriptionFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of LogsSubscriptionFilter
type LogsSubscriptionFilterPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsLogsSubscriptionFilterPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of LogsSubscriptionFilter
type LogsSubscriptionFilterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LogsSubscriptionFilterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsSubscriptionFilterPropertiesResponse)(nil)).Elem()
}

func (o LogsSubscriptionFilterPropertiesResponseOutput) ToLogsSubscriptionFilterPropertiesResponseOutput() LogsSubscriptionFilterPropertiesResponseOutput {
	return o
}

func (o LogsSubscriptionFilterPropertiesResponseOutput) ToLogsSubscriptionFilterPropertiesResponseOutputWithContext(ctx context.Context) LogsSubscriptionFilterPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o LogsSubscriptionFilterPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o LogsSubscriptionFilterPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o LogsSubscriptionFilterPropertiesResponseOutput) AwsProperties() AwsLogsSubscriptionFilterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *AwsLogsSubscriptionFilterPropertiesResponse {
		return v.AwsProperties
	}).(AwsLogsSubscriptionFilterPropertiesResponsePtrOutput)
}

// AWS Region
func (o LogsSubscriptionFilterPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o LogsSubscriptionFilterPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o LogsSubscriptionFilterPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o LogsSubscriptionFilterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o LogsSubscriptionFilterPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o LogsSubscriptionFilterPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogsSubscriptionFilterPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of Macie2JobSummary
type Macie2JobSummaryProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsMacie2JobSummaryProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Macie2JobSummaryPropertiesInput is an input type that accepts Macie2JobSummaryPropertiesArgs and Macie2JobSummaryPropertiesOutput values.
// You can construct a concrete instance of `Macie2JobSummaryPropertiesInput` via:
//
//	Macie2JobSummaryPropertiesArgs{...}
type Macie2JobSummaryPropertiesInput interface {
	pulumi.Input

	ToMacie2JobSummaryPropertiesOutput() Macie2JobSummaryPropertiesOutput
	ToMacie2JobSummaryPropertiesOutputWithContext(context.Context) Macie2JobSummaryPropertiesOutput
}

// Definition of Macie2JobSummary
type Macie2JobSummaryPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsMacie2JobSummaryPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (Macie2JobSummaryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Macie2JobSummaryProperties)(nil)).Elem()
}

func (i Macie2JobSummaryPropertiesArgs) ToMacie2JobSummaryPropertiesOutput() Macie2JobSummaryPropertiesOutput {
	return i.ToMacie2JobSummaryPropertiesOutputWithContext(context.Background())
}

func (i Macie2JobSummaryPropertiesArgs) ToMacie2JobSummaryPropertiesOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Macie2JobSummaryPropertiesOutput)
}

func (i Macie2JobSummaryPropertiesArgs) ToMacie2JobSummaryPropertiesPtrOutput() Macie2JobSummaryPropertiesPtrOutput {
	return i.ToMacie2JobSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i Macie2JobSummaryPropertiesArgs) ToMacie2JobSummaryPropertiesPtrOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Macie2JobSummaryPropertiesOutput).ToMacie2JobSummaryPropertiesPtrOutputWithContext(ctx)
}

// Macie2JobSummaryPropertiesPtrInput is an input type that accepts Macie2JobSummaryPropertiesArgs, Macie2JobSummaryPropertiesPtr and Macie2JobSummaryPropertiesPtrOutput values.
// You can construct a concrete instance of `Macie2JobSummaryPropertiesPtrInput` via:
//
//	        Macie2JobSummaryPropertiesArgs{...}
//
//	or:
//
//	        nil
type Macie2JobSummaryPropertiesPtrInput interface {
	pulumi.Input

	ToMacie2JobSummaryPropertiesPtrOutput() Macie2JobSummaryPropertiesPtrOutput
	ToMacie2JobSummaryPropertiesPtrOutputWithContext(context.Context) Macie2JobSummaryPropertiesPtrOutput
}

type macie2JobSummaryPropertiesPtrType Macie2JobSummaryPropertiesArgs

func Macie2JobSummaryPropertiesPtr(v *Macie2JobSummaryPropertiesArgs) Macie2JobSummaryPropertiesPtrInput {
	return (*macie2JobSummaryPropertiesPtrType)(v)
}

func (*macie2JobSummaryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Macie2JobSummaryProperties)(nil)).Elem()
}

func (i *macie2JobSummaryPropertiesPtrType) ToMacie2JobSummaryPropertiesPtrOutput() Macie2JobSummaryPropertiesPtrOutput {
	return i.ToMacie2JobSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i *macie2JobSummaryPropertiesPtrType) ToMacie2JobSummaryPropertiesPtrOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Macie2JobSummaryPropertiesPtrOutput)
}

// Definition of Macie2JobSummary
type Macie2JobSummaryPropertiesOutput struct{ *pulumi.OutputState }

func (Macie2JobSummaryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Macie2JobSummaryProperties)(nil)).Elem()
}

func (o Macie2JobSummaryPropertiesOutput) ToMacie2JobSummaryPropertiesOutput() Macie2JobSummaryPropertiesOutput {
	return o
}

func (o Macie2JobSummaryPropertiesOutput) ToMacie2JobSummaryPropertiesOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesOutput {
	return o
}

func (o Macie2JobSummaryPropertiesOutput) ToMacie2JobSummaryPropertiesPtrOutput() Macie2JobSummaryPropertiesPtrOutput {
	return o.ToMacie2JobSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (o Macie2JobSummaryPropertiesOutput) ToMacie2JobSummaryPropertiesPtrOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Macie2JobSummaryProperties) *Macie2JobSummaryProperties {
		return &v
	}).(Macie2JobSummaryPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o Macie2JobSummaryPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Macie2JobSummaryPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Macie2JobSummaryPropertiesOutput) AwsProperties() AwsMacie2JobSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *AwsMacie2JobSummaryProperties { return v.AwsProperties }).(AwsMacie2JobSummaryPropertiesPtrOutput)
}

// AWS Region
func (o Macie2JobSummaryPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Macie2JobSummaryPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Macie2JobSummaryPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Macie2JobSummaryPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Macie2JobSummaryPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type Macie2JobSummaryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (Macie2JobSummaryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Macie2JobSummaryProperties)(nil)).Elem()
}

func (o Macie2JobSummaryPropertiesPtrOutput) ToMacie2JobSummaryPropertiesPtrOutput() Macie2JobSummaryPropertiesPtrOutput {
	return o
}

func (o Macie2JobSummaryPropertiesPtrOutput) ToMacie2JobSummaryPropertiesPtrOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesPtrOutput {
	return o
}

func (o Macie2JobSummaryPropertiesPtrOutput) Elem() Macie2JobSummaryPropertiesOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) Macie2JobSummaryProperties {
		if v != nil {
			return *v
		}
		var ret Macie2JobSummaryProperties
		return ret
	}).(Macie2JobSummaryPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o Macie2JobSummaryPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Macie2JobSummaryPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Macie2JobSummaryPropertiesPtrOutput) AwsProperties() AwsMacie2JobSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *AwsMacie2JobSummaryProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsMacie2JobSummaryPropertiesPtrOutput)
}

// AWS Region
func (o Macie2JobSummaryPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Macie2JobSummaryPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Macie2JobSummaryPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Macie2JobSummaryPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Macie2JobSummaryPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Macie2JobSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of Macie2JobSummary
type Macie2JobSummaryPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsMacie2JobSummaryPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of Macie2JobSummary
type Macie2JobSummaryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (Macie2JobSummaryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Macie2JobSummaryPropertiesResponse)(nil)).Elem()
}

func (o Macie2JobSummaryPropertiesResponseOutput) ToMacie2JobSummaryPropertiesResponseOutput() Macie2JobSummaryPropertiesResponseOutput {
	return o
}

func (o Macie2JobSummaryPropertiesResponseOutput) ToMacie2JobSummaryPropertiesResponseOutputWithContext(ctx context.Context) Macie2JobSummaryPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o Macie2JobSummaryPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Macie2JobSummaryPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Macie2JobSummaryPropertiesResponseOutput) AwsProperties() AwsMacie2JobSummaryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *AwsMacie2JobSummaryPropertiesResponse {
		return v.AwsProperties
	}).(AwsMacie2JobSummaryPropertiesResponsePtrOutput)
}

// AWS Region
func (o Macie2JobSummaryPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Macie2JobSummaryPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Macie2JobSummaryPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o Macie2JobSummaryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o Macie2JobSummaryPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Macie2JobSummaryPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Macie2JobSummaryPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of MacieAllowList
type MacieAllowListProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsMacieAllowListProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// MacieAllowListPropertiesInput is an input type that accepts MacieAllowListPropertiesArgs and MacieAllowListPropertiesOutput values.
// You can construct a concrete instance of `MacieAllowListPropertiesInput` via:
//
//	MacieAllowListPropertiesArgs{...}
type MacieAllowListPropertiesInput interface {
	pulumi.Input

	ToMacieAllowListPropertiesOutput() MacieAllowListPropertiesOutput
	ToMacieAllowListPropertiesOutputWithContext(context.Context) MacieAllowListPropertiesOutput
}

// Definition of MacieAllowList
type MacieAllowListPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsMacieAllowListPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (MacieAllowListPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MacieAllowListProperties)(nil)).Elem()
}

func (i MacieAllowListPropertiesArgs) ToMacieAllowListPropertiesOutput() MacieAllowListPropertiesOutput {
	return i.ToMacieAllowListPropertiesOutputWithContext(context.Background())
}

func (i MacieAllowListPropertiesArgs) ToMacieAllowListPropertiesOutputWithContext(ctx context.Context) MacieAllowListPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MacieAllowListPropertiesOutput)
}

func (i MacieAllowListPropertiesArgs) ToMacieAllowListPropertiesPtrOutput() MacieAllowListPropertiesPtrOutput {
	return i.ToMacieAllowListPropertiesPtrOutputWithContext(context.Background())
}

func (i MacieAllowListPropertiesArgs) ToMacieAllowListPropertiesPtrOutputWithContext(ctx context.Context) MacieAllowListPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MacieAllowListPropertiesOutput).ToMacieAllowListPropertiesPtrOutputWithContext(ctx)
}

// MacieAllowListPropertiesPtrInput is an input type that accepts MacieAllowListPropertiesArgs, MacieAllowListPropertiesPtr and MacieAllowListPropertiesPtrOutput values.
// You can construct a concrete instance of `MacieAllowListPropertiesPtrInput` via:
//
//	        MacieAllowListPropertiesArgs{...}
//
//	or:
//
//	        nil
type MacieAllowListPropertiesPtrInput interface {
	pulumi.Input

	ToMacieAllowListPropertiesPtrOutput() MacieAllowListPropertiesPtrOutput
	ToMacieAllowListPropertiesPtrOutputWithContext(context.Context) MacieAllowListPropertiesPtrOutput
}

type macieAllowListPropertiesPtrType MacieAllowListPropertiesArgs

func MacieAllowListPropertiesPtr(v *MacieAllowListPropertiesArgs) MacieAllowListPropertiesPtrInput {
	return (*macieAllowListPropertiesPtrType)(v)
}

func (*macieAllowListPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MacieAllowListProperties)(nil)).Elem()
}

func (i *macieAllowListPropertiesPtrType) ToMacieAllowListPropertiesPtrOutput() MacieAllowListPropertiesPtrOutput {
	return i.ToMacieAllowListPropertiesPtrOutputWithContext(context.Background())
}

func (i *macieAllowListPropertiesPtrType) ToMacieAllowListPropertiesPtrOutputWithContext(ctx context.Context) MacieAllowListPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MacieAllowListPropertiesPtrOutput)
}

// Definition of MacieAllowList
type MacieAllowListPropertiesOutput struct{ *pulumi.OutputState }

func (MacieAllowListPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MacieAllowListProperties)(nil)).Elem()
}

func (o MacieAllowListPropertiesOutput) ToMacieAllowListPropertiesOutput() MacieAllowListPropertiesOutput {
	return o
}

func (o MacieAllowListPropertiesOutput) ToMacieAllowListPropertiesOutputWithContext(ctx context.Context) MacieAllowListPropertiesOutput {
	return o
}

func (o MacieAllowListPropertiesOutput) ToMacieAllowListPropertiesPtrOutput() MacieAllowListPropertiesPtrOutput {
	return o.ToMacieAllowListPropertiesPtrOutputWithContext(context.Background())
}

func (o MacieAllowListPropertiesOutput) ToMacieAllowListPropertiesPtrOutputWithContext(ctx context.Context) MacieAllowListPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MacieAllowListProperties) *MacieAllowListProperties {
		return &v
	}).(MacieAllowListPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o MacieAllowListPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o MacieAllowListPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o MacieAllowListPropertiesOutput) AwsProperties() AwsMacieAllowListPropertiesPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *AwsMacieAllowListProperties { return v.AwsProperties }).(AwsMacieAllowListPropertiesPtrOutput)
}

// AWS Region
func (o MacieAllowListPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o MacieAllowListPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o MacieAllowListPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MacieAllowListProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o MacieAllowListPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o MacieAllowListPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type MacieAllowListPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MacieAllowListPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MacieAllowListProperties)(nil)).Elem()
}

func (o MacieAllowListPropertiesPtrOutput) ToMacieAllowListPropertiesPtrOutput() MacieAllowListPropertiesPtrOutput {
	return o
}

func (o MacieAllowListPropertiesPtrOutput) ToMacieAllowListPropertiesPtrOutputWithContext(ctx context.Context) MacieAllowListPropertiesPtrOutput {
	return o
}

func (o MacieAllowListPropertiesPtrOutput) Elem() MacieAllowListPropertiesOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) MacieAllowListProperties {
		if v != nil {
			return *v
		}
		var ret MacieAllowListProperties
		return ret
	}).(MacieAllowListPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o MacieAllowListPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o MacieAllowListPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o MacieAllowListPropertiesPtrOutput) AwsProperties() AwsMacieAllowListPropertiesPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *AwsMacieAllowListProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsMacieAllowListPropertiesPtrOutput)
}

// AWS Region
func (o MacieAllowListPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o MacieAllowListPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o MacieAllowListPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o MacieAllowListPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o MacieAllowListPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacieAllowListProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of MacieAllowList
type MacieAllowListPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsMacieAllowListPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of MacieAllowList
type MacieAllowListPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MacieAllowListPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MacieAllowListPropertiesResponse)(nil)).Elem()
}

func (o MacieAllowListPropertiesResponseOutput) ToMacieAllowListPropertiesResponseOutput() MacieAllowListPropertiesResponseOutput {
	return o
}

func (o MacieAllowListPropertiesResponseOutput) ToMacieAllowListPropertiesResponseOutputWithContext(ctx context.Context) MacieAllowListPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o MacieAllowListPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o MacieAllowListPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o MacieAllowListPropertiesResponseOutput) AwsProperties() AwsMacieAllowListPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *AwsMacieAllowListPropertiesResponse { return v.AwsProperties }).(AwsMacieAllowListPropertiesResponsePtrOutput)
}

// AWS Region
func (o MacieAllowListPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o MacieAllowListPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o MacieAllowListPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o MacieAllowListPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o MacieAllowListPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o MacieAllowListPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MacieAllowListPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of MasterUserSecret
type MasterUserSecret struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn *string `pulumi:"secretArn"`
}

// MasterUserSecretInput is an input type that accepts MasterUserSecretArgs and MasterUserSecretOutput values.
// You can construct a concrete instance of `MasterUserSecretInput` via:
//
//	MasterUserSecretArgs{...}
type MasterUserSecretInput interface {
	pulumi.Input

	ToMasterUserSecretOutput() MasterUserSecretOutput
	ToMasterUserSecretOutputWithContext(context.Context) MasterUserSecretOutput
}

// Definition of MasterUserSecret
type MasterUserSecretArgs struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (MasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterUserSecret)(nil)).Elem()
}

func (i MasterUserSecretArgs) ToMasterUserSecretOutput() MasterUserSecretOutput {
	return i.ToMasterUserSecretOutputWithContext(context.Background())
}

func (i MasterUserSecretArgs) ToMasterUserSecretOutputWithContext(ctx context.Context) MasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterUserSecretOutput)
}

func (i MasterUserSecretArgs) ToMasterUserSecretPtrOutput() MasterUserSecretPtrOutput {
	return i.ToMasterUserSecretPtrOutputWithContext(context.Background())
}

func (i MasterUserSecretArgs) ToMasterUserSecretPtrOutputWithContext(ctx context.Context) MasterUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterUserSecretOutput).ToMasterUserSecretPtrOutputWithContext(ctx)
}

// MasterUserSecretPtrInput is an input type that accepts MasterUserSecretArgs, MasterUserSecretPtr and MasterUserSecretPtrOutput values.
// You can construct a concrete instance of `MasterUserSecretPtrInput` via:
//
//	        MasterUserSecretArgs{...}
//
//	or:
//
//	        nil
type MasterUserSecretPtrInput interface {
	pulumi.Input

	ToMasterUserSecretPtrOutput() MasterUserSecretPtrOutput
	ToMasterUserSecretPtrOutputWithContext(context.Context) MasterUserSecretPtrOutput
}

type masterUserSecretPtrType MasterUserSecretArgs

func MasterUserSecretPtr(v *MasterUserSecretArgs) MasterUserSecretPtrInput {
	return (*masterUserSecretPtrType)(v)
}

func (*masterUserSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MasterUserSecret)(nil)).Elem()
}

func (i *masterUserSecretPtrType) ToMasterUserSecretPtrOutput() MasterUserSecretPtrOutput {
	return i.ToMasterUserSecretPtrOutputWithContext(context.Background())
}

func (i *masterUserSecretPtrType) ToMasterUserSecretPtrOutputWithContext(ctx context.Context) MasterUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterUserSecretPtrOutput)
}

// Definition of MasterUserSecret
type MasterUserSecretOutput struct{ *pulumi.OutputState }

func (MasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterUserSecret)(nil)).Elem()
}

func (o MasterUserSecretOutput) ToMasterUserSecretOutput() MasterUserSecretOutput {
	return o
}

func (o MasterUserSecretOutput) ToMasterUserSecretOutputWithContext(ctx context.Context) MasterUserSecretOutput {
	return o
}

func (o MasterUserSecretOutput) ToMasterUserSecretPtrOutput() MasterUserSecretPtrOutput {
	return o.ToMasterUserSecretPtrOutputWithContext(context.Background())
}

func (o MasterUserSecretOutput) ToMasterUserSecretPtrOutputWithContext(ctx context.Context) MasterUserSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MasterUserSecret) *MasterUserSecret {
		return &v
	}).(MasterUserSecretPtrOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o MasterUserSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterUserSecret) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o MasterUserSecretOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterUserSecret) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type MasterUserSecretPtrOutput struct{ *pulumi.OutputState }

func (MasterUserSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MasterUserSecret)(nil)).Elem()
}

func (o MasterUserSecretPtrOutput) ToMasterUserSecretPtrOutput() MasterUserSecretPtrOutput {
	return o
}

func (o MasterUserSecretPtrOutput) ToMasterUserSecretPtrOutputWithContext(ctx context.Context) MasterUserSecretPtrOutput {
	return o
}

func (o MasterUserSecretPtrOutput) Elem() MasterUserSecretOutput {
	return o.ApplyT(func(v *MasterUserSecret) MasterUserSecret {
		if v != nil {
			return *v
		}
		var ret MasterUserSecret
		return ret
	}).(MasterUserSecretOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o MasterUserSecretPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MasterUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o MasterUserSecretPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MasterUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// Definition of MasterUserSecret
type MasterUserSecretResponse struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn *string `pulumi:"secretArn"`
}

// Definition of MasterUserSecret
type MasterUserSecretResponseOutput struct{ *pulumi.OutputState }

func (MasterUserSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterUserSecretResponse)(nil)).Elem()
}

func (o MasterUserSecretResponseOutput) ToMasterUserSecretResponseOutput() MasterUserSecretResponseOutput {
	return o
}

func (o MasterUserSecretResponseOutput) ToMasterUserSecretResponseOutputWithContext(ctx context.Context) MasterUserSecretResponseOutput {
	return o
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o MasterUserSecretResponseOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterUserSecretResponse) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o MasterUserSecretResponseOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterUserSecretResponse) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type MasterUserSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (MasterUserSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MasterUserSecretResponse)(nil)).Elem()
}

func (o MasterUserSecretResponsePtrOutput) ToMasterUserSecretResponsePtrOutput() MasterUserSecretResponsePtrOutput {
	return o
}

func (o MasterUserSecretResponsePtrOutput) ToMasterUserSecretResponsePtrOutputWithContext(ctx context.Context) MasterUserSecretResponsePtrOutput {
	return o
}

func (o MasterUserSecretResponsePtrOutput) Elem() MasterUserSecretResponseOutput {
	return o.ApplyT(func(v *MasterUserSecretResponse) MasterUserSecretResponse {
		if v != nil {
			return *v
		}
		var ret MasterUserSecretResponse
		return ret
	}).(MasterUserSecretResponseOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o MasterUserSecretResponsePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MasterUserSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o MasterUserSecretResponsePtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MasterUserSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// Definition of MatchAttributes
type MatchAttributes struct {
	// Property destinationPorts
	DestinationPorts []PortRange `pulumi:"destinationPorts"`
	// Property destinations
	Destinations []Address `pulumi:"destinations"`
	// Property protocols
	Protocols []int `pulumi:"protocols"`
	// Property sourcePorts
	SourcePorts []PortRange `pulumi:"sourcePorts"`
	// Property sources
	Sources []Address `pulumi:"sources"`
	// Property tcpFlags
	TcpFlags []TCPFlagField `pulumi:"tcpFlags"`
}

// MatchAttributesInput is an input type that accepts MatchAttributesArgs and MatchAttributesOutput values.
// You can construct a concrete instance of `MatchAttributesInput` via:
//
//	MatchAttributesArgs{...}
type MatchAttributesInput interface {
	pulumi.Input

	ToMatchAttributesOutput() MatchAttributesOutput
	ToMatchAttributesOutputWithContext(context.Context) MatchAttributesOutput
}

// Definition of MatchAttributes
type MatchAttributesArgs struct {
	// Property destinationPorts
	DestinationPorts PortRangeArrayInput `pulumi:"destinationPorts"`
	// Property destinations
	Destinations AddressArrayInput `pulumi:"destinations"`
	// Property protocols
	Protocols pulumi.IntArrayInput `pulumi:"protocols"`
	// Property sourcePorts
	SourcePorts PortRangeArrayInput `pulumi:"sourcePorts"`
	// Property sources
	Sources AddressArrayInput `pulumi:"sources"`
	// Property tcpFlags
	TcpFlags TCPFlagFieldArrayInput `pulumi:"tcpFlags"`
}

func (MatchAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchAttributes)(nil)).Elem()
}

func (i MatchAttributesArgs) ToMatchAttributesOutput() MatchAttributesOutput {
	return i.ToMatchAttributesOutputWithContext(context.Background())
}

func (i MatchAttributesArgs) ToMatchAttributesOutputWithContext(ctx context.Context) MatchAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchAttributesOutput)
}

func (i MatchAttributesArgs) ToMatchAttributesPtrOutput() MatchAttributesPtrOutput {
	return i.ToMatchAttributesPtrOutputWithContext(context.Background())
}

func (i MatchAttributesArgs) ToMatchAttributesPtrOutputWithContext(ctx context.Context) MatchAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchAttributesOutput).ToMatchAttributesPtrOutputWithContext(ctx)
}

// MatchAttributesPtrInput is an input type that accepts MatchAttributesArgs, MatchAttributesPtr and MatchAttributesPtrOutput values.
// You can construct a concrete instance of `MatchAttributesPtrInput` via:
//
//	        MatchAttributesArgs{...}
//
//	or:
//
//	        nil
type MatchAttributesPtrInput interface {
	pulumi.Input

	ToMatchAttributesPtrOutput() MatchAttributesPtrOutput
	ToMatchAttributesPtrOutputWithContext(context.Context) MatchAttributesPtrOutput
}

type matchAttributesPtrType MatchAttributesArgs

func MatchAttributesPtr(v *MatchAttributesArgs) MatchAttributesPtrInput {
	return (*matchAttributesPtrType)(v)
}

func (*matchAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchAttributes)(nil)).Elem()
}

func (i *matchAttributesPtrType) ToMatchAttributesPtrOutput() MatchAttributesPtrOutput {
	return i.ToMatchAttributesPtrOutputWithContext(context.Background())
}

func (i *matchAttributesPtrType) ToMatchAttributesPtrOutputWithContext(ctx context.Context) MatchAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchAttributesPtrOutput)
}

// Definition of MatchAttributes
type MatchAttributesOutput struct{ *pulumi.OutputState }

func (MatchAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchAttributes)(nil)).Elem()
}

func (o MatchAttributesOutput) ToMatchAttributesOutput() MatchAttributesOutput {
	return o
}

func (o MatchAttributesOutput) ToMatchAttributesOutputWithContext(ctx context.Context) MatchAttributesOutput {
	return o
}

func (o MatchAttributesOutput) ToMatchAttributesPtrOutput() MatchAttributesPtrOutput {
	return o.ToMatchAttributesPtrOutputWithContext(context.Background())
}

func (o MatchAttributesOutput) ToMatchAttributesPtrOutputWithContext(ctx context.Context) MatchAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchAttributes) *MatchAttributes {
		return &v
	}).(MatchAttributesPtrOutput)
}

// Property destinationPorts
func (o MatchAttributesOutput) DestinationPorts() PortRangeArrayOutput {
	return o.ApplyT(func(v MatchAttributes) []PortRange { return v.DestinationPorts }).(PortRangeArrayOutput)
}

// Property destinations
func (o MatchAttributesOutput) Destinations() AddressArrayOutput {
	return o.ApplyT(func(v MatchAttributes) []Address { return v.Destinations }).(AddressArrayOutput)
}

// Property protocols
func (o MatchAttributesOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MatchAttributes) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

// Property sourcePorts
func (o MatchAttributesOutput) SourcePorts() PortRangeArrayOutput {
	return o.ApplyT(func(v MatchAttributes) []PortRange { return v.SourcePorts }).(PortRangeArrayOutput)
}

// Property sources
func (o MatchAttributesOutput) Sources() AddressArrayOutput {
	return o.ApplyT(func(v MatchAttributes) []Address { return v.Sources }).(AddressArrayOutput)
}

// Property tcpFlags
func (o MatchAttributesOutput) TcpFlags() TCPFlagFieldArrayOutput {
	return o.ApplyT(func(v MatchAttributes) []TCPFlagField { return v.TcpFlags }).(TCPFlagFieldArrayOutput)
}

type MatchAttributesPtrOutput struct{ *pulumi.OutputState }

func (MatchAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchAttributes)(nil)).Elem()
}

func (o MatchAttributesPtrOutput) ToMatchAttributesPtrOutput() MatchAttributesPtrOutput {
	return o
}

func (o MatchAttributesPtrOutput) ToMatchAttributesPtrOutputWithContext(ctx context.Context) MatchAttributesPtrOutput {
	return o
}

func (o MatchAttributesPtrOutput) Elem() MatchAttributesOutput {
	return o.ApplyT(func(v *MatchAttributes) MatchAttributes {
		if v != nil {
			return *v
		}
		var ret MatchAttributes
		return ret
	}).(MatchAttributesOutput)
}

// Property destinationPorts
func (o MatchAttributesPtrOutput) DestinationPorts() PortRangeArrayOutput {
	return o.ApplyT(func(v *MatchAttributes) []PortRange {
		if v == nil {
			return nil
		}
		return v.DestinationPorts
	}).(PortRangeArrayOutput)
}

// Property destinations
func (o MatchAttributesPtrOutput) Destinations() AddressArrayOutput {
	return o.ApplyT(func(v *MatchAttributes) []Address {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(AddressArrayOutput)
}

// Property protocols
func (o MatchAttributesPtrOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MatchAttributes) []int {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(pulumi.IntArrayOutput)
}

// Property sourcePorts
func (o MatchAttributesPtrOutput) SourcePorts() PortRangeArrayOutput {
	return o.ApplyT(func(v *MatchAttributes) []PortRange {
		if v == nil {
			return nil
		}
		return v.SourcePorts
	}).(PortRangeArrayOutput)
}

// Property sources
func (o MatchAttributesPtrOutput) Sources() AddressArrayOutput {
	return o.ApplyT(func(v *MatchAttributes) []Address {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(AddressArrayOutput)
}

// Property tcpFlags
func (o MatchAttributesPtrOutput) TcpFlags() TCPFlagFieldArrayOutput {
	return o.ApplyT(func(v *MatchAttributes) []TCPFlagField {
		if v == nil {
			return nil
		}
		return v.TcpFlags
	}).(TCPFlagFieldArrayOutput)
}

// Definition of MatchAttributes
type MatchAttributesResponse struct {
	// Property destinationPorts
	DestinationPorts []PortRangeResponse `pulumi:"destinationPorts"`
	// Property destinations
	Destinations []AddressResponse `pulumi:"destinations"`
	// Property protocols
	Protocols []int `pulumi:"protocols"`
	// Property sourcePorts
	SourcePorts []PortRangeResponse `pulumi:"sourcePorts"`
	// Property sources
	Sources []AddressResponse `pulumi:"sources"`
	// Property tcpFlags
	TcpFlags []TCPFlagFieldResponse `pulumi:"tcpFlags"`
}

// Definition of MatchAttributes
type MatchAttributesResponseOutput struct{ *pulumi.OutputState }

func (MatchAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchAttributesResponse)(nil)).Elem()
}

func (o MatchAttributesResponseOutput) ToMatchAttributesResponseOutput() MatchAttributesResponseOutput {
	return o
}

func (o MatchAttributesResponseOutput) ToMatchAttributesResponseOutputWithContext(ctx context.Context) MatchAttributesResponseOutput {
	return o
}

// Property destinationPorts
func (o MatchAttributesResponseOutput) DestinationPorts() PortRangeResponseArrayOutput {
	return o.ApplyT(func(v MatchAttributesResponse) []PortRangeResponse { return v.DestinationPorts }).(PortRangeResponseArrayOutput)
}

// Property destinations
func (o MatchAttributesResponseOutput) Destinations() AddressResponseArrayOutput {
	return o.ApplyT(func(v MatchAttributesResponse) []AddressResponse { return v.Destinations }).(AddressResponseArrayOutput)
}

// Property protocols
func (o MatchAttributesResponseOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MatchAttributesResponse) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

// Property sourcePorts
func (o MatchAttributesResponseOutput) SourcePorts() PortRangeResponseArrayOutput {
	return o.ApplyT(func(v MatchAttributesResponse) []PortRangeResponse { return v.SourcePorts }).(PortRangeResponseArrayOutput)
}

// Property sources
func (o MatchAttributesResponseOutput) Sources() AddressResponseArrayOutput {
	return o.ApplyT(func(v MatchAttributesResponse) []AddressResponse { return v.Sources }).(AddressResponseArrayOutput)
}

// Property tcpFlags
func (o MatchAttributesResponseOutput) TcpFlags() TCPFlagFieldResponseArrayOutput {
	return o.ApplyT(func(v MatchAttributesResponse) []TCPFlagFieldResponse { return v.TcpFlags }).(TCPFlagFieldResponseArrayOutput)
}

type MatchAttributesResponsePtrOutput struct{ *pulumi.OutputState }

func (MatchAttributesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchAttributesResponse)(nil)).Elem()
}

func (o MatchAttributesResponsePtrOutput) ToMatchAttributesResponsePtrOutput() MatchAttributesResponsePtrOutput {
	return o
}

func (o MatchAttributesResponsePtrOutput) ToMatchAttributesResponsePtrOutputWithContext(ctx context.Context) MatchAttributesResponsePtrOutput {
	return o
}

func (o MatchAttributesResponsePtrOutput) Elem() MatchAttributesResponseOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) MatchAttributesResponse {
		if v != nil {
			return *v
		}
		var ret MatchAttributesResponse
		return ret
	}).(MatchAttributesResponseOutput)
}

// Property destinationPorts
func (o MatchAttributesResponsePtrOutput) DestinationPorts() PortRangeResponseArrayOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) []PortRangeResponse {
		if v == nil {
			return nil
		}
		return v.DestinationPorts
	}).(PortRangeResponseArrayOutput)
}

// Property destinations
func (o MatchAttributesResponsePtrOutput) Destinations() AddressResponseArrayOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) []AddressResponse {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(AddressResponseArrayOutput)
}

// Property protocols
func (o MatchAttributesResponsePtrOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) []int {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(pulumi.IntArrayOutput)
}

// Property sourcePorts
func (o MatchAttributesResponsePtrOutput) SourcePorts() PortRangeResponseArrayOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) []PortRangeResponse {
		if v == nil {
			return nil
		}
		return v.SourcePorts
	}).(PortRangeResponseArrayOutput)
}

// Property sources
func (o MatchAttributesResponsePtrOutput) Sources() AddressResponseArrayOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) []AddressResponse {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(AddressResponseArrayOutput)
}

// Property tcpFlags
func (o MatchAttributesResponsePtrOutput) TcpFlags() TCPFlagFieldResponseArrayOutput {
	return o.ApplyT(func(v *MatchAttributesResponse) []TCPFlagFieldResponse {
		if v == nil {
			return nil
		}
		return v.TcpFlags
	}).(TCPFlagFieldResponseArrayOutput)
}

// Definition of Matcher
type Matcher struct {
	// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
	GrpcCode *string `pulumi:"grpcCode"`
	// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
	HttpCode *string `pulumi:"httpCode"`
}

// MatcherInput is an input type that accepts MatcherArgs and MatcherOutput values.
// You can construct a concrete instance of `MatcherInput` via:
//
//	MatcherArgs{...}
type MatcherInput interface {
	pulumi.Input

	ToMatcherOutput() MatcherOutput
	ToMatcherOutputWithContext(context.Context) MatcherOutput
}

// Definition of Matcher
type MatcherArgs struct {
	// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
	GrpcCode pulumi.StringPtrInput `pulumi:"grpcCode"`
	// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
	HttpCode pulumi.StringPtrInput `pulumi:"httpCode"`
}

func (MatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Matcher)(nil)).Elem()
}

func (i MatcherArgs) ToMatcherOutput() MatcherOutput {
	return i.ToMatcherOutputWithContext(context.Background())
}

func (i MatcherArgs) ToMatcherOutputWithContext(ctx context.Context) MatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatcherOutput)
}

func (i MatcherArgs) ToMatcherPtrOutput() MatcherPtrOutput {
	return i.ToMatcherPtrOutputWithContext(context.Background())
}

func (i MatcherArgs) ToMatcherPtrOutputWithContext(ctx context.Context) MatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatcherOutput).ToMatcherPtrOutputWithContext(ctx)
}

// MatcherPtrInput is an input type that accepts MatcherArgs, MatcherPtr and MatcherPtrOutput values.
// You can construct a concrete instance of `MatcherPtrInput` via:
//
//	        MatcherArgs{...}
//
//	or:
//
//	        nil
type MatcherPtrInput interface {
	pulumi.Input

	ToMatcherPtrOutput() MatcherPtrOutput
	ToMatcherPtrOutputWithContext(context.Context) MatcherPtrOutput
}

type matcherPtrType MatcherArgs

func MatcherPtr(v *MatcherArgs) MatcherPtrInput {
	return (*matcherPtrType)(v)
}

func (*matcherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Matcher)(nil)).Elem()
}

func (i *matcherPtrType) ToMatcherPtrOutput() MatcherPtrOutput {
	return i.ToMatcherPtrOutputWithContext(context.Background())
}

func (i *matcherPtrType) ToMatcherPtrOutputWithContext(ctx context.Context) MatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatcherPtrOutput)
}

// Definition of Matcher
type MatcherOutput struct{ *pulumi.OutputState }

func (MatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Matcher)(nil)).Elem()
}

func (o MatcherOutput) ToMatcherOutput() MatcherOutput {
	return o
}

func (o MatcherOutput) ToMatcherOutputWithContext(ctx context.Context) MatcherOutput {
	return o
}

func (o MatcherOutput) ToMatcherPtrOutput() MatcherPtrOutput {
	return o.ToMatcherPtrOutputWithContext(context.Background())
}

func (o MatcherOutput) ToMatcherPtrOutputWithContext(ctx context.Context) MatcherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Matcher) *Matcher {
		return &v
	}).(MatcherPtrOutput)
}

// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
func (o MatcherOutput) GrpcCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Matcher) *string { return v.GrpcCode }).(pulumi.StringPtrOutput)
}

// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
func (o MatcherOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Matcher) *string { return v.HttpCode }).(pulumi.StringPtrOutput)
}

type MatcherPtrOutput struct{ *pulumi.OutputState }

func (MatcherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Matcher)(nil)).Elem()
}

func (o MatcherPtrOutput) ToMatcherPtrOutput() MatcherPtrOutput {
	return o
}

func (o MatcherPtrOutput) ToMatcherPtrOutputWithContext(ctx context.Context) MatcherPtrOutput {
	return o
}

func (o MatcherPtrOutput) Elem() MatcherOutput {
	return o.ApplyT(func(v *Matcher) Matcher {
		if v != nil {
			return *v
		}
		var ret Matcher
		return ret
	}).(MatcherOutput)
}

// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
func (o MatcherPtrOutput) GrpcCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Matcher) *string {
		if v == nil {
			return nil
		}
		return v.GrpcCode
	}).(pulumi.StringPtrOutput)
}

// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
func (o MatcherPtrOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Matcher) *string {
		if v == nil {
			return nil
		}
		return v.HttpCode
	}).(pulumi.StringPtrOutput)
}

// Definition of Matcher
type MatcherResponse struct {
	// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
	GrpcCode *string `pulumi:"grpcCode"`
	// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
	HttpCode *string `pulumi:"httpCode"`
}

// Definition of Matcher
type MatcherResponseOutput struct{ *pulumi.OutputState }

func (MatcherResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatcherResponse)(nil)).Elem()
}

func (o MatcherResponseOutput) ToMatcherResponseOutput() MatcherResponseOutput {
	return o
}

func (o MatcherResponseOutput) ToMatcherResponseOutputWithContext(ctx context.Context) MatcherResponseOutput {
	return o
}

// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
func (o MatcherResponseOutput) GrpcCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatcherResponse) *string { return v.GrpcCode }).(pulumi.StringPtrOutput)
}

// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
func (o MatcherResponseOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatcherResponse) *string { return v.HttpCode }).(pulumi.StringPtrOutput)
}

type MatcherResponsePtrOutput struct{ *pulumi.OutputState }

func (MatcherResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatcherResponse)(nil)).Elem()
}

func (o MatcherResponsePtrOutput) ToMatcherResponsePtrOutput() MatcherResponsePtrOutput {
	return o
}

func (o MatcherResponsePtrOutput) ToMatcherResponsePtrOutputWithContext(ctx context.Context) MatcherResponsePtrOutput {
	return o
}

func (o MatcherResponsePtrOutput) Elem() MatcherResponseOutput {
	return o.ApplyT(func(v *MatcherResponse) MatcherResponse {
		if v != nil {
			return *v
		}
		var ret MatcherResponse
		return ret
	}).(MatcherResponseOutput)
}

// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
func (o MatcherResponsePtrOutput) GrpcCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatcherResponse) *string {
		if v == nil {
			return nil
		}
		return v.GrpcCode
	}).(pulumi.StringPtrOutput)
}

// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
func (o MatcherResponsePtrOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatcherResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpCode
	}).(pulumi.StringPtrOutput)
}

// Definition of MaxAgeRule
type MaxAgeRule struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled *bool `pulumi:"enabled"`
	// Specify the number of days to retain an application versions.
	MaxAgeInDays *int `pulumi:"maxAgeInDays"`
}

// MaxAgeRuleInput is an input type that accepts MaxAgeRuleArgs and MaxAgeRuleOutput values.
// You can construct a concrete instance of `MaxAgeRuleInput` via:
//
//	MaxAgeRuleArgs{...}
type MaxAgeRuleInput interface {
	pulumi.Input

	ToMaxAgeRuleOutput() MaxAgeRuleOutput
	ToMaxAgeRuleOutputWithContext(context.Context) MaxAgeRuleOutput
}

// Definition of MaxAgeRule
type MaxAgeRuleArgs struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 pulumi.BoolPtrInput `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specify the number of days to retain an application versions.
	MaxAgeInDays pulumi.IntPtrInput `pulumi:"maxAgeInDays"`
}

func (MaxAgeRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxAgeRule)(nil)).Elem()
}

func (i MaxAgeRuleArgs) ToMaxAgeRuleOutput() MaxAgeRuleOutput {
	return i.ToMaxAgeRuleOutputWithContext(context.Background())
}

func (i MaxAgeRuleArgs) ToMaxAgeRuleOutputWithContext(ctx context.Context) MaxAgeRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxAgeRuleOutput)
}

func (i MaxAgeRuleArgs) ToMaxAgeRulePtrOutput() MaxAgeRulePtrOutput {
	return i.ToMaxAgeRulePtrOutputWithContext(context.Background())
}

func (i MaxAgeRuleArgs) ToMaxAgeRulePtrOutputWithContext(ctx context.Context) MaxAgeRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxAgeRuleOutput).ToMaxAgeRulePtrOutputWithContext(ctx)
}

// MaxAgeRulePtrInput is an input type that accepts MaxAgeRuleArgs, MaxAgeRulePtr and MaxAgeRulePtrOutput values.
// You can construct a concrete instance of `MaxAgeRulePtrInput` via:
//
//	        MaxAgeRuleArgs{...}
//
//	or:
//
//	        nil
type MaxAgeRulePtrInput interface {
	pulumi.Input

	ToMaxAgeRulePtrOutput() MaxAgeRulePtrOutput
	ToMaxAgeRulePtrOutputWithContext(context.Context) MaxAgeRulePtrOutput
}

type maxAgeRulePtrType MaxAgeRuleArgs

func MaxAgeRulePtr(v *MaxAgeRuleArgs) MaxAgeRulePtrInput {
	return (*maxAgeRulePtrType)(v)
}

func (*maxAgeRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxAgeRule)(nil)).Elem()
}

func (i *maxAgeRulePtrType) ToMaxAgeRulePtrOutput() MaxAgeRulePtrOutput {
	return i.ToMaxAgeRulePtrOutputWithContext(context.Background())
}

func (i *maxAgeRulePtrType) ToMaxAgeRulePtrOutputWithContext(ctx context.Context) MaxAgeRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxAgeRulePtrOutput)
}

// Definition of MaxAgeRule
type MaxAgeRuleOutput struct{ *pulumi.OutputState }

func (MaxAgeRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxAgeRule)(nil)).Elem()
}

func (o MaxAgeRuleOutput) ToMaxAgeRuleOutput() MaxAgeRuleOutput {
	return o
}

func (o MaxAgeRuleOutput) ToMaxAgeRuleOutputWithContext(ctx context.Context) MaxAgeRuleOutput {
	return o
}

func (o MaxAgeRuleOutput) ToMaxAgeRulePtrOutput() MaxAgeRulePtrOutput {
	return o.ToMaxAgeRulePtrOutputWithContext(context.Background())
}

func (o MaxAgeRuleOutput) ToMaxAgeRulePtrOutputWithContext(ctx context.Context) MaxAgeRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaxAgeRule) *MaxAgeRule {
		return &v
	}).(MaxAgeRulePtrOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxAgeRuleOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxAgeRule) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxAgeRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxAgeRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the number of days to retain an application versions.
func (o MaxAgeRuleOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaxAgeRule) *int { return v.MaxAgeInDays }).(pulumi.IntPtrOutput)
}

type MaxAgeRulePtrOutput struct{ *pulumi.OutputState }

func (MaxAgeRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxAgeRule)(nil)).Elem()
}

func (o MaxAgeRulePtrOutput) ToMaxAgeRulePtrOutput() MaxAgeRulePtrOutput {
	return o
}

func (o MaxAgeRulePtrOutput) ToMaxAgeRulePtrOutputWithContext(ctx context.Context) MaxAgeRulePtrOutput {
	return o
}

func (o MaxAgeRulePtrOutput) Elem() MaxAgeRuleOutput {
	return o.ApplyT(func(v *MaxAgeRule) MaxAgeRule {
		if v != nil {
			return *v
		}
		var ret MaxAgeRule
		return ret
	}).(MaxAgeRuleOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxAgeRulePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxAgeRule) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSourceFromS3
	}).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxAgeRulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxAgeRule) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify the number of days to retain an application versions.
func (o MaxAgeRulePtrOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaxAgeRule) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeInDays
	}).(pulumi.IntPtrOutput)
}

// Definition of MaxAgeRule
type MaxAgeRuleResponse struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled *bool `pulumi:"enabled"`
	// Specify the number of days to retain an application versions.
	MaxAgeInDays *int `pulumi:"maxAgeInDays"`
}

// Definition of MaxAgeRule
type MaxAgeRuleResponseOutput struct{ *pulumi.OutputState }

func (MaxAgeRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxAgeRuleResponse)(nil)).Elem()
}

func (o MaxAgeRuleResponseOutput) ToMaxAgeRuleResponseOutput() MaxAgeRuleResponseOutput {
	return o
}

func (o MaxAgeRuleResponseOutput) ToMaxAgeRuleResponseOutputWithContext(ctx context.Context) MaxAgeRuleResponseOutput {
	return o
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxAgeRuleResponseOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxAgeRuleResponse) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxAgeRuleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxAgeRuleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the number of days to retain an application versions.
func (o MaxAgeRuleResponseOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaxAgeRuleResponse) *int { return v.MaxAgeInDays }).(pulumi.IntPtrOutput)
}

type MaxAgeRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (MaxAgeRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxAgeRuleResponse)(nil)).Elem()
}

func (o MaxAgeRuleResponsePtrOutput) ToMaxAgeRuleResponsePtrOutput() MaxAgeRuleResponsePtrOutput {
	return o
}

func (o MaxAgeRuleResponsePtrOutput) ToMaxAgeRuleResponsePtrOutputWithContext(ctx context.Context) MaxAgeRuleResponsePtrOutput {
	return o
}

func (o MaxAgeRuleResponsePtrOutput) Elem() MaxAgeRuleResponseOutput {
	return o.ApplyT(func(v *MaxAgeRuleResponse) MaxAgeRuleResponse {
		if v != nil {
			return *v
		}
		var ret MaxAgeRuleResponse
		return ret
	}).(MaxAgeRuleResponseOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxAgeRuleResponsePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxAgeRuleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSourceFromS3
	}).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxAgeRuleResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxAgeRuleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify the number of days to retain an application versions.
func (o MaxAgeRuleResponsePtrOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaxAgeRuleResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeInDays
	}).(pulumi.IntPtrOutput)
}

// Definition of MaxCountRule
type MaxCountRule struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled *bool `pulumi:"enabled"`
	// Specify the maximum number of application versions to retain.
	MaxCount *int `pulumi:"maxCount"`
}

// MaxCountRuleInput is an input type that accepts MaxCountRuleArgs and MaxCountRuleOutput values.
// You can construct a concrete instance of `MaxCountRuleInput` via:
//
//	MaxCountRuleArgs{...}
type MaxCountRuleInput interface {
	pulumi.Input

	ToMaxCountRuleOutput() MaxCountRuleOutput
	ToMaxCountRuleOutputWithContext(context.Context) MaxCountRuleOutput
}

// Definition of MaxCountRule
type MaxCountRuleArgs struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 pulumi.BoolPtrInput `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specify the maximum number of application versions to retain.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
}

func (MaxCountRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxCountRule)(nil)).Elem()
}

func (i MaxCountRuleArgs) ToMaxCountRuleOutput() MaxCountRuleOutput {
	return i.ToMaxCountRuleOutputWithContext(context.Background())
}

func (i MaxCountRuleArgs) ToMaxCountRuleOutputWithContext(ctx context.Context) MaxCountRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxCountRuleOutput)
}

func (i MaxCountRuleArgs) ToMaxCountRulePtrOutput() MaxCountRulePtrOutput {
	return i.ToMaxCountRulePtrOutputWithContext(context.Background())
}

func (i MaxCountRuleArgs) ToMaxCountRulePtrOutputWithContext(ctx context.Context) MaxCountRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxCountRuleOutput).ToMaxCountRulePtrOutputWithContext(ctx)
}

// MaxCountRulePtrInput is an input type that accepts MaxCountRuleArgs, MaxCountRulePtr and MaxCountRulePtrOutput values.
// You can construct a concrete instance of `MaxCountRulePtrInput` via:
//
//	        MaxCountRuleArgs{...}
//
//	or:
//
//	        nil
type MaxCountRulePtrInput interface {
	pulumi.Input

	ToMaxCountRulePtrOutput() MaxCountRulePtrOutput
	ToMaxCountRulePtrOutputWithContext(context.Context) MaxCountRulePtrOutput
}

type maxCountRulePtrType MaxCountRuleArgs

func MaxCountRulePtr(v *MaxCountRuleArgs) MaxCountRulePtrInput {
	return (*maxCountRulePtrType)(v)
}

func (*maxCountRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxCountRule)(nil)).Elem()
}

func (i *maxCountRulePtrType) ToMaxCountRulePtrOutput() MaxCountRulePtrOutput {
	return i.ToMaxCountRulePtrOutputWithContext(context.Background())
}

func (i *maxCountRulePtrType) ToMaxCountRulePtrOutputWithContext(ctx context.Context) MaxCountRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaxCountRulePtrOutput)
}

// Definition of MaxCountRule
type MaxCountRuleOutput struct{ *pulumi.OutputState }

func (MaxCountRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxCountRule)(nil)).Elem()
}

func (o MaxCountRuleOutput) ToMaxCountRuleOutput() MaxCountRuleOutput {
	return o
}

func (o MaxCountRuleOutput) ToMaxCountRuleOutputWithContext(ctx context.Context) MaxCountRuleOutput {
	return o
}

func (o MaxCountRuleOutput) ToMaxCountRulePtrOutput() MaxCountRulePtrOutput {
	return o.ToMaxCountRulePtrOutputWithContext(context.Background())
}

func (o MaxCountRuleOutput) ToMaxCountRulePtrOutputWithContext(ctx context.Context) MaxCountRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaxCountRule) *MaxCountRule {
		return &v
	}).(MaxCountRulePtrOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxCountRuleOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxCountRule) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxCountRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxCountRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the maximum number of application versions to retain.
func (o MaxCountRuleOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaxCountRule) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

type MaxCountRulePtrOutput struct{ *pulumi.OutputState }

func (MaxCountRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxCountRule)(nil)).Elem()
}

func (o MaxCountRulePtrOutput) ToMaxCountRulePtrOutput() MaxCountRulePtrOutput {
	return o
}

func (o MaxCountRulePtrOutput) ToMaxCountRulePtrOutputWithContext(ctx context.Context) MaxCountRulePtrOutput {
	return o
}

func (o MaxCountRulePtrOutput) Elem() MaxCountRuleOutput {
	return o.ApplyT(func(v *MaxCountRule) MaxCountRule {
		if v != nil {
			return *v
		}
		var ret MaxCountRule
		return ret
	}).(MaxCountRuleOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxCountRulePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxCountRule) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSourceFromS3
	}).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxCountRulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxCountRule) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify the maximum number of application versions to retain.
func (o MaxCountRulePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaxCountRule) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// Definition of MaxCountRule
type MaxCountRuleResponse struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled *bool `pulumi:"enabled"`
	// Specify the maximum number of application versions to retain.
	MaxCount *int `pulumi:"maxCount"`
}

// Definition of MaxCountRule
type MaxCountRuleResponseOutput struct{ *pulumi.OutputState }

func (MaxCountRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxCountRuleResponse)(nil)).Elem()
}

func (o MaxCountRuleResponseOutput) ToMaxCountRuleResponseOutput() MaxCountRuleResponseOutput {
	return o
}

func (o MaxCountRuleResponseOutput) ToMaxCountRuleResponseOutputWithContext(ctx context.Context) MaxCountRuleResponseOutput {
	return o
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxCountRuleResponseOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxCountRuleResponse) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxCountRuleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaxCountRuleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the maximum number of application versions to retain.
func (o MaxCountRuleResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaxCountRuleResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

type MaxCountRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (MaxCountRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaxCountRuleResponse)(nil)).Elem()
}

func (o MaxCountRuleResponsePtrOutput) ToMaxCountRuleResponsePtrOutput() MaxCountRuleResponsePtrOutput {
	return o
}

func (o MaxCountRuleResponsePtrOutput) ToMaxCountRuleResponsePtrOutputWithContext(ctx context.Context) MaxCountRuleResponsePtrOutput {
	return o
}

func (o MaxCountRuleResponsePtrOutput) Elem() MaxCountRuleResponseOutput {
	return o.ApplyT(func(v *MaxCountRuleResponse) MaxCountRuleResponse {
		if v != nil {
			return *v
		}
		var ret MaxCountRuleResponse
		return ret
	}).(MaxCountRuleResponseOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o MaxCountRuleResponsePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxCountRuleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSourceFromS3
	}).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o MaxCountRuleResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaxCountRuleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify the maximum number of application versions to retain.
func (o MaxCountRuleResponsePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaxCountRuleResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// Definition of MaximumExecutionFrequencyEnumValue
type MaximumExecutionFrequencyEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// MaximumExecutionFrequencyEnumValueInput is an input type that accepts MaximumExecutionFrequencyEnumValueArgs and MaximumExecutionFrequencyEnumValueOutput values.
// You can construct a concrete instance of `MaximumExecutionFrequencyEnumValueInput` via:
//
//	MaximumExecutionFrequencyEnumValueArgs{...}
type MaximumExecutionFrequencyEnumValueInput interface {
	pulumi.Input

	ToMaximumExecutionFrequencyEnumValueOutput() MaximumExecutionFrequencyEnumValueOutput
	ToMaximumExecutionFrequencyEnumValueOutputWithContext(context.Context) MaximumExecutionFrequencyEnumValueOutput
}

// Definition of MaximumExecutionFrequencyEnumValue
type MaximumExecutionFrequencyEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MaximumExecutionFrequencyEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaximumExecutionFrequencyEnumValue)(nil)).Elem()
}

func (i MaximumExecutionFrequencyEnumValueArgs) ToMaximumExecutionFrequencyEnumValueOutput() MaximumExecutionFrequencyEnumValueOutput {
	return i.ToMaximumExecutionFrequencyEnumValueOutputWithContext(context.Background())
}

func (i MaximumExecutionFrequencyEnumValueArgs) ToMaximumExecutionFrequencyEnumValueOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaximumExecutionFrequencyEnumValueOutput)
}

func (i MaximumExecutionFrequencyEnumValueArgs) ToMaximumExecutionFrequencyEnumValuePtrOutput() MaximumExecutionFrequencyEnumValuePtrOutput {
	return i.ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(context.Background())
}

func (i MaximumExecutionFrequencyEnumValueArgs) ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaximumExecutionFrequencyEnumValueOutput).ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(ctx)
}

// MaximumExecutionFrequencyEnumValuePtrInput is an input type that accepts MaximumExecutionFrequencyEnumValueArgs, MaximumExecutionFrequencyEnumValuePtr and MaximumExecutionFrequencyEnumValuePtrOutput values.
// You can construct a concrete instance of `MaximumExecutionFrequencyEnumValuePtrInput` via:
//
//	        MaximumExecutionFrequencyEnumValueArgs{...}
//
//	or:
//
//	        nil
type MaximumExecutionFrequencyEnumValuePtrInput interface {
	pulumi.Input

	ToMaximumExecutionFrequencyEnumValuePtrOutput() MaximumExecutionFrequencyEnumValuePtrOutput
	ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(context.Context) MaximumExecutionFrequencyEnumValuePtrOutput
}

type maximumExecutionFrequencyEnumValuePtrType MaximumExecutionFrequencyEnumValueArgs

func MaximumExecutionFrequencyEnumValuePtr(v *MaximumExecutionFrequencyEnumValueArgs) MaximumExecutionFrequencyEnumValuePtrInput {
	return (*maximumExecutionFrequencyEnumValuePtrType)(v)
}

func (*maximumExecutionFrequencyEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaximumExecutionFrequencyEnumValue)(nil)).Elem()
}

func (i *maximumExecutionFrequencyEnumValuePtrType) ToMaximumExecutionFrequencyEnumValuePtrOutput() MaximumExecutionFrequencyEnumValuePtrOutput {
	return i.ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(context.Background())
}

func (i *maximumExecutionFrequencyEnumValuePtrType) ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaximumExecutionFrequencyEnumValuePtrOutput)
}

// Definition of MaximumExecutionFrequencyEnumValue
type MaximumExecutionFrequencyEnumValueOutput struct{ *pulumi.OutputState }

func (MaximumExecutionFrequencyEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaximumExecutionFrequencyEnumValue)(nil)).Elem()
}

func (o MaximumExecutionFrequencyEnumValueOutput) ToMaximumExecutionFrequencyEnumValueOutput() MaximumExecutionFrequencyEnumValueOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValueOutput) ToMaximumExecutionFrequencyEnumValueOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValueOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValueOutput) ToMaximumExecutionFrequencyEnumValuePtrOutput() MaximumExecutionFrequencyEnumValuePtrOutput {
	return o.ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(context.Background())
}

func (o MaximumExecutionFrequencyEnumValueOutput) ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaximumExecutionFrequencyEnumValue) *MaximumExecutionFrequencyEnumValue {
		return &v
	}).(MaximumExecutionFrequencyEnumValuePtrOutput)
}

// Property value
func (o MaximumExecutionFrequencyEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaximumExecutionFrequencyEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MaximumExecutionFrequencyEnumValuePtrOutput struct{ *pulumi.OutputState }

func (MaximumExecutionFrequencyEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaximumExecutionFrequencyEnumValue)(nil)).Elem()
}

func (o MaximumExecutionFrequencyEnumValuePtrOutput) ToMaximumExecutionFrequencyEnumValuePtrOutput() MaximumExecutionFrequencyEnumValuePtrOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValuePtrOutput) ToMaximumExecutionFrequencyEnumValuePtrOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValuePtrOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValuePtrOutput) Elem() MaximumExecutionFrequencyEnumValueOutput {
	return o.ApplyT(func(v *MaximumExecutionFrequencyEnumValue) MaximumExecutionFrequencyEnumValue {
		if v != nil {
			return *v
		}
		var ret MaximumExecutionFrequencyEnumValue
		return ret
	}).(MaximumExecutionFrequencyEnumValueOutput)
}

// Property value
func (o MaximumExecutionFrequencyEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaximumExecutionFrequencyEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of MaximumExecutionFrequencyEnumValue
type MaximumExecutionFrequencyEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of MaximumExecutionFrequencyEnumValue
type MaximumExecutionFrequencyEnumValueResponseOutput struct{ *pulumi.OutputState }

func (MaximumExecutionFrequencyEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaximumExecutionFrequencyEnumValueResponse)(nil)).Elem()
}

func (o MaximumExecutionFrequencyEnumValueResponseOutput) ToMaximumExecutionFrequencyEnumValueResponseOutput() MaximumExecutionFrequencyEnumValueResponseOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValueResponseOutput) ToMaximumExecutionFrequencyEnumValueResponseOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValueResponseOutput {
	return o
}

// Property value
func (o MaximumExecutionFrequencyEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaximumExecutionFrequencyEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MaximumExecutionFrequencyEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (MaximumExecutionFrequencyEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaximumExecutionFrequencyEnumValueResponse)(nil)).Elem()
}

func (o MaximumExecutionFrequencyEnumValueResponsePtrOutput) ToMaximumExecutionFrequencyEnumValueResponsePtrOutput() MaximumExecutionFrequencyEnumValueResponsePtrOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValueResponsePtrOutput) ToMaximumExecutionFrequencyEnumValueResponsePtrOutputWithContext(ctx context.Context) MaximumExecutionFrequencyEnumValueResponsePtrOutput {
	return o
}

func (o MaximumExecutionFrequencyEnumValueResponsePtrOutput) Elem() MaximumExecutionFrequencyEnumValueResponseOutput {
	return o.ApplyT(func(v *MaximumExecutionFrequencyEnumValueResponse) MaximumExecutionFrequencyEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret MaximumExecutionFrequencyEnumValueResponse
		return ret
	}).(MaximumExecutionFrequencyEnumValueResponseOutput)
}

// Property value
func (o MaximumExecutionFrequencyEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaximumExecutionFrequencyEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of MemoryGiBPerVCpuRequest
type MemoryGiBPerVCpuRequest struct {
	// The memory maximum in GiB.
	Max *int `pulumi:"max"`
	// The memory minimum in GiB.
	Min *int `pulumi:"min"`
}

// MemoryGiBPerVCpuRequestInput is an input type that accepts MemoryGiBPerVCpuRequestArgs and MemoryGiBPerVCpuRequestOutput values.
// You can construct a concrete instance of `MemoryGiBPerVCpuRequestInput` via:
//
//	MemoryGiBPerVCpuRequestArgs{...}
type MemoryGiBPerVCpuRequestInput interface {
	pulumi.Input

	ToMemoryGiBPerVCpuRequestOutput() MemoryGiBPerVCpuRequestOutput
	ToMemoryGiBPerVCpuRequestOutputWithContext(context.Context) MemoryGiBPerVCpuRequestOutput
}

// Definition of MemoryGiBPerVCpuRequest
type MemoryGiBPerVCpuRequestArgs struct {
	// The memory maximum in GiB.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The memory minimum in GiB.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MemoryGiBPerVCpuRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MemoryGiBPerVCpuRequest)(nil)).Elem()
}

func (i MemoryGiBPerVCpuRequestArgs) ToMemoryGiBPerVCpuRequestOutput() MemoryGiBPerVCpuRequestOutput {
	return i.ToMemoryGiBPerVCpuRequestOutputWithContext(context.Background())
}

func (i MemoryGiBPerVCpuRequestArgs) ToMemoryGiBPerVCpuRequestOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryGiBPerVCpuRequestOutput)
}

func (i MemoryGiBPerVCpuRequestArgs) ToMemoryGiBPerVCpuRequestPtrOutput() MemoryGiBPerVCpuRequestPtrOutput {
	return i.ToMemoryGiBPerVCpuRequestPtrOutputWithContext(context.Background())
}

func (i MemoryGiBPerVCpuRequestArgs) ToMemoryGiBPerVCpuRequestPtrOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryGiBPerVCpuRequestOutput).ToMemoryGiBPerVCpuRequestPtrOutputWithContext(ctx)
}

// MemoryGiBPerVCpuRequestPtrInput is an input type that accepts MemoryGiBPerVCpuRequestArgs, MemoryGiBPerVCpuRequestPtr and MemoryGiBPerVCpuRequestPtrOutput values.
// You can construct a concrete instance of `MemoryGiBPerVCpuRequestPtrInput` via:
//
//	        MemoryGiBPerVCpuRequestArgs{...}
//
//	or:
//
//	        nil
type MemoryGiBPerVCpuRequestPtrInput interface {
	pulumi.Input

	ToMemoryGiBPerVCpuRequestPtrOutput() MemoryGiBPerVCpuRequestPtrOutput
	ToMemoryGiBPerVCpuRequestPtrOutputWithContext(context.Context) MemoryGiBPerVCpuRequestPtrOutput
}

type memoryGiBPerVCpuRequestPtrType MemoryGiBPerVCpuRequestArgs

func MemoryGiBPerVCpuRequestPtr(v *MemoryGiBPerVCpuRequestArgs) MemoryGiBPerVCpuRequestPtrInput {
	return (*memoryGiBPerVCpuRequestPtrType)(v)
}

func (*memoryGiBPerVCpuRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MemoryGiBPerVCpuRequest)(nil)).Elem()
}

func (i *memoryGiBPerVCpuRequestPtrType) ToMemoryGiBPerVCpuRequestPtrOutput() MemoryGiBPerVCpuRequestPtrOutput {
	return i.ToMemoryGiBPerVCpuRequestPtrOutputWithContext(context.Background())
}

func (i *memoryGiBPerVCpuRequestPtrType) ToMemoryGiBPerVCpuRequestPtrOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryGiBPerVCpuRequestPtrOutput)
}

// Definition of MemoryGiBPerVCpuRequest
type MemoryGiBPerVCpuRequestOutput struct{ *pulumi.OutputState }

func (MemoryGiBPerVCpuRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemoryGiBPerVCpuRequest)(nil)).Elem()
}

func (o MemoryGiBPerVCpuRequestOutput) ToMemoryGiBPerVCpuRequestOutput() MemoryGiBPerVCpuRequestOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestOutput) ToMemoryGiBPerVCpuRequestOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestOutput) ToMemoryGiBPerVCpuRequestPtrOutput() MemoryGiBPerVCpuRequestPtrOutput {
	return o.ToMemoryGiBPerVCpuRequestPtrOutputWithContext(context.Background())
}

func (o MemoryGiBPerVCpuRequestOutput) ToMemoryGiBPerVCpuRequestPtrOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MemoryGiBPerVCpuRequest) *MemoryGiBPerVCpuRequest {
		return &v
	}).(MemoryGiBPerVCpuRequestPtrOutput)
}

// The memory maximum in GiB.
func (o MemoryGiBPerVCpuRequestOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryGiBPerVCpuRequest) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The memory minimum in GiB.
func (o MemoryGiBPerVCpuRequestOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryGiBPerVCpuRequest) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MemoryGiBPerVCpuRequestPtrOutput struct{ *pulumi.OutputState }

func (MemoryGiBPerVCpuRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemoryGiBPerVCpuRequest)(nil)).Elem()
}

func (o MemoryGiBPerVCpuRequestPtrOutput) ToMemoryGiBPerVCpuRequestPtrOutput() MemoryGiBPerVCpuRequestPtrOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestPtrOutput) ToMemoryGiBPerVCpuRequestPtrOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestPtrOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestPtrOutput) Elem() MemoryGiBPerVCpuRequestOutput {
	return o.ApplyT(func(v *MemoryGiBPerVCpuRequest) MemoryGiBPerVCpuRequest {
		if v != nil {
			return *v
		}
		var ret MemoryGiBPerVCpuRequest
		return ret
	}).(MemoryGiBPerVCpuRequestOutput)
}

// The memory maximum in GiB.
func (o MemoryGiBPerVCpuRequestPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryGiBPerVCpuRequest) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The memory minimum in GiB.
func (o MemoryGiBPerVCpuRequestPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryGiBPerVCpuRequest) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of MemoryGiBPerVCpuRequest
type MemoryGiBPerVCpuRequestResponse struct {
	// The memory maximum in GiB.
	Max *int `pulumi:"max"`
	// The memory minimum in GiB.
	Min *int `pulumi:"min"`
}

// Definition of MemoryGiBPerVCpuRequest
type MemoryGiBPerVCpuRequestResponseOutput struct{ *pulumi.OutputState }

func (MemoryGiBPerVCpuRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemoryGiBPerVCpuRequestResponse)(nil)).Elem()
}

func (o MemoryGiBPerVCpuRequestResponseOutput) ToMemoryGiBPerVCpuRequestResponseOutput() MemoryGiBPerVCpuRequestResponseOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestResponseOutput) ToMemoryGiBPerVCpuRequestResponseOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestResponseOutput {
	return o
}

// The memory maximum in GiB.
func (o MemoryGiBPerVCpuRequestResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryGiBPerVCpuRequestResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The memory minimum in GiB.
func (o MemoryGiBPerVCpuRequestResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryGiBPerVCpuRequestResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MemoryGiBPerVCpuRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (MemoryGiBPerVCpuRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemoryGiBPerVCpuRequestResponse)(nil)).Elem()
}

func (o MemoryGiBPerVCpuRequestResponsePtrOutput) ToMemoryGiBPerVCpuRequestResponsePtrOutput() MemoryGiBPerVCpuRequestResponsePtrOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestResponsePtrOutput) ToMemoryGiBPerVCpuRequestResponsePtrOutputWithContext(ctx context.Context) MemoryGiBPerVCpuRequestResponsePtrOutput {
	return o
}

func (o MemoryGiBPerVCpuRequestResponsePtrOutput) Elem() MemoryGiBPerVCpuRequestResponseOutput {
	return o.ApplyT(func(v *MemoryGiBPerVCpuRequestResponse) MemoryGiBPerVCpuRequestResponse {
		if v != nil {
			return *v
		}
		var ret MemoryGiBPerVCpuRequestResponse
		return ret
	}).(MemoryGiBPerVCpuRequestResponseOutput)
}

// The memory maximum in GiB.
func (o MemoryGiBPerVCpuRequestResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryGiBPerVCpuRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The memory minimum in GiB.
func (o MemoryGiBPerVCpuRequestResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryGiBPerVCpuRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of MemoryMiBRequest
type MemoryMiBRequest struct {
	// The memory maximum in MiB.
	Max *int `pulumi:"max"`
	// The memory minimum in MiB.
	Min *int `pulumi:"min"`
}

// MemoryMiBRequestInput is an input type that accepts MemoryMiBRequestArgs and MemoryMiBRequestOutput values.
// You can construct a concrete instance of `MemoryMiBRequestInput` via:
//
//	MemoryMiBRequestArgs{...}
type MemoryMiBRequestInput interface {
	pulumi.Input

	ToMemoryMiBRequestOutput() MemoryMiBRequestOutput
	ToMemoryMiBRequestOutputWithContext(context.Context) MemoryMiBRequestOutput
}

// Definition of MemoryMiBRequest
type MemoryMiBRequestArgs struct {
	// The memory maximum in MiB.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The memory minimum in MiB.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MemoryMiBRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MemoryMiBRequest)(nil)).Elem()
}

func (i MemoryMiBRequestArgs) ToMemoryMiBRequestOutput() MemoryMiBRequestOutput {
	return i.ToMemoryMiBRequestOutputWithContext(context.Background())
}

func (i MemoryMiBRequestArgs) ToMemoryMiBRequestOutputWithContext(ctx context.Context) MemoryMiBRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryMiBRequestOutput)
}

func (i MemoryMiBRequestArgs) ToMemoryMiBRequestPtrOutput() MemoryMiBRequestPtrOutput {
	return i.ToMemoryMiBRequestPtrOutputWithContext(context.Background())
}

func (i MemoryMiBRequestArgs) ToMemoryMiBRequestPtrOutputWithContext(ctx context.Context) MemoryMiBRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryMiBRequestOutput).ToMemoryMiBRequestPtrOutputWithContext(ctx)
}

// MemoryMiBRequestPtrInput is an input type that accepts MemoryMiBRequestArgs, MemoryMiBRequestPtr and MemoryMiBRequestPtrOutput values.
// You can construct a concrete instance of `MemoryMiBRequestPtrInput` via:
//
//	        MemoryMiBRequestArgs{...}
//
//	or:
//
//	        nil
type MemoryMiBRequestPtrInput interface {
	pulumi.Input

	ToMemoryMiBRequestPtrOutput() MemoryMiBRequestPtrOutput
	ToMemoryMiBRequestPtrOutputWithContext(context.Context) MemoryMiBRequestPtrOutput
}

type memoryMiBRequestPtrType MemoryMiBRequestArgs

func MemoryMiBRequestPtr(v *MemoryMiBRequestArgs) MemoryMiBRequestPtrInput {
	return (*memoryMiBRequestPtrType)(v)
}

func (*memoryMiBRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MemoryMiBRequest)(nil)).Elem()
}

func (i *memoryMiBRequestPtrType) ToMemoryMiBRequestPtrOutput() MemoryMiBRequestPtrOutput {
	return i.ToMemoryMiBRequestPtrOutputWithContext(context.Background())
}

func (i *memoryMiBRequestPtrType) ToMemoryMiBRequestPtrOutputWithContext(ctx context.Context) MemoryMiBRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryMiBRequestPtrOutput)
}

// Definition of MemoryMiBRequest
type MemoryMiBRequestOutput struct{ *pulumi.OutputState }

func (MemoryMiBRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemoryMiBRequest)(nil)).Elem()
}

func (o MemoryMiBRequestOutput) ToMemoryMiBRequestOutput() MemoryMiBRequestOutput {
	return o
}

func (o MemoryMiBRequestOutput) ToMemoryMiBRequestOutputWithContext(ctx context.Context) MemoryMiBRequestOutput {
	return o
}

func (o MemoryMiBRequestOutput) ToMemoryMiBRequestPtrOutput() MemoryMiBRequestPtrOutput {
	return o.ToMemoryMiBRequestPtrOutputWithContext(context.Background())
}

func (o MemoryMiBRequestOutput) ToMemoryMiBRequestPtrOutputWithContext(ctx context.Context) MemoryMiBRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MemoryMiBRequest) *MemoryMiBRequest {
		return &v
	}).(MemoryMiBRequestPtrOutput)
}

// The memory maximum in MiB.
func (o MemoryMiBRequestOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryMiBRequest) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The memory minimum in MiB.
func (o MemoryMiBRequestOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryMiBRequest) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MemoryMiBRequestPtrOutput struct{ *pulumi.OutputState }

func (MemoryMiBRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemoryMiBRequest)(nil)).Elem()
}

func (o MemoryMiBRequestPtrOutput) ToMemoryMiBRequestPtrOutput() MemoryMiBRequestPtrOutput {
	return o
}

func (o MemoryMiBRequestPtrOutput) ToMemoryMiBRequestPtrOutputWithContext(ctx context.Context) MemoryMiBRequestPtrOutput {
	return o
}

func (o MemoryMiBRequestPtrOutput) Elem() MemoryMiBRequestOutput {
	return o.ApplyT(func(v *MemoryMiBRequest) MemoryMiBRequest {
		if v != nil {
			return *v
		}
		var ret MemoryMiBRequest
		return ret
	}).(MemoryMiBRequestOutput)
}

// The memory maximum in MiB.
func (o MemoryMiBRequestPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryMiBRequest) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The memory minimum in MiB.
func (o MemoryMiBRequestPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryMiBRequest) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of MemoryMiBRequest
type MemoryMiBRequestResponse struct {
	// The memory maximum in MiB.
	Max *int `pulumi:"max"`
	// The memory minimum in MiB.
	Min *int `pulumi:"min"`
}

// Definition of MemoryMiBRequest
type MemoryMiBRequestResponseOutput struct{ *pulumi.OutputState }

func (MemoryMiBRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemoryMiBRequestResponse)(nil)).Elem()
}

func (o MemoryMiBRequestResponseOutput) ToMemoryMiBRequestResponseOutput() MemoryMiBRequestResponseOutput {
	return o
}

func (o MemoryMiBRequestResponseOutput) ToMemoryMiBRequestResponseOutputWithContext(ctx context.Context) MemoryMiBRequestResponseOutput {
	return o
}

// The memory maximum in MiB.
func (o MemoryMiBRequestResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryMiBRequestResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The memory minimum in MiB.
func (o MemoryMiBRequestResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemoryMiBRequestResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MemoryMiBRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (MemoryMiBRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemoryMiBRequestResponse)(nil)).Elem()
}

func (o MemoryMiBRequestResponsePtrOutput) ToMemoryMiBRequestResponsePtrOutput() MemoryMiBRequestResponsePtrOutput {
	return o
}

func (o MemoryMiBRequestResponsePtrOutput) ToMemoryMiBRequestResponsePtrOutputWithContext(ctx context.Context) MemoryMiBRequestResponsePtrOutput {
	return o
}

func (o MemoryMiBRequestResponsePtrOutput) Elem() MemoryMiBRequestResponseOutput {
	return o.ApplyT(func(v *MemoryMiBRequestResponse) MemoryMiBRequestResponse {
		if v != nil {
			return *v
		}
		var ret MemoryMiBRequestResponse
		return ret
	}).(MemoryMiBRequestResponseOutput)
}

// The memory maximum in MiB.
func (o MemoryMiBRequestResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryMiBRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The memory minimum in MiB.
func (o MemoryMiBRequestResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MemoryMiBRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of MethodSetting
type MethodSetting struct {
	// Specifies whether the cached responses are encrypted.
	CacheDataEncrypted *bool `pulumi:"cacheDataEncrypted"`
	// Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
	CacheTtlInSeconds *int `pulumi:"cacheTtlInSeconds"`
	// Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
	CachingEnabled *bool `pulumi:"cachingEnabled"`
	// Specifies whether data trace logging is enabled for this method, which affects the log entries pushed to Amazon CloudWatch Logs. This can be useful to troubleshoot APIs, but can result in logging sensitive data. We recommend that you don't enable this option for production APIs.
	DataTraceEnabled *bool `pulumi:"dataTraceEnabled"`
	// The HTTP method. To apply settings to multiple resources and methods, specify an asterisk (``*``) for the ``HttpMethod`` and ``/*`` for the ``ResourcePath``. This parameter is required when you specify a ``MethodSetting``.
	HttpMethod *string `pulumi:"httpMethod"`
	// Specifies the logging level for this method, which affects the log entries pushed to Amazon CloudWatch Logs. Valid values are ``OFF``, ``ERROR``, and ``INFO``. Choose ``ERROR`` to write only error-level entries to CloudWatch Logs, or choose ``INFO`` to include all ``ERROR`` events as well as extra informational events.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Specifies whether Amazon CloudWatch metrics are enabled for this method.
	MetricsEnabled *bool `pulumi:"metricsEnabled"`
	// The resource path for this method. Forward slashes (``/``) are encoded as ``~1`` and the initial slash must include a forward slash. For example, the path value ``/resource/subresource`` must be encoded as ``/~1resource~1subresource``. To specify the root path, use only a slash (``/``). To apply settings to multiple resources and methods, specify an asterisk (``*``) for the ``HttpMethod`` and ``/*`` for the ``ResourcePath``. This parameter is required when you specify a ``MethodSetting``.
	ResourcePath *string `pulumi:"resourcePath"`
	// Specifies the throttling burst limit.
	ThrottlingBurstLimit *int `pulumi:"throttlingBurstLimit"`
	// Specifies the throttling rate limit.
	ThrottlingRateLimit *int `pulumi:"throttlingRateLimit"`
}

// MethodSettingInput is an input type that accepts MethodSettingArgs and MethodSettingOutput values.
// You can construct a concrete instance of `MethodSettingInput` via:
//
//	MethodSettingArgs{...}
type MethodSettingInput interface {
	pulumi.Input

	ToMethodSettingOutput() MethodSettingOutput
	ToMethodSettingOutputWithContext(context.Context) MethodSettingOutput
}

// Definition of MethodSetting
type MethodSettingArgs struct {
	// Specifies whether the cached responses are encrypted.
	CacheDataEncrypted pulumi.BoolPtrInput `pulumi:"cacheDataEncrypted"`
	// Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
	CacheTtlInSeconds pulumi.IntPtrInput `pulumi:"cacheTtlInSeconds"`
	// Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
	CachingEnabled pulumi.BoolPtrInput `pulumi:"cachingEnabled"`
	// Specifies whether data trace logging is enabled for this method, which affects the log entries pushed to Amazon CloudWatch Logs. This can be useful to troubleshoot APIs, but can result in logging sensitive data. We recommend that you don't enable this option for production APIs.
	DataTraceEnabled pulumi.BoolPtrInput `pulumi:"dataTraceEnabled"`
	// The HTTP method. To apply settings to multiple resources and methods, specify an asterisk (``*``) for the ``HttpMethod`` and ``/*`` for the ``ResourcePath``. This parameter is required when you specify a ``MethodSetting``.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// Specifies the logging level for this method, which affects the log entries pushed to Amazon CloudWatch Logs. Valid values are ``OFF``, ``ERROR``, and ``INFO``. Choose ``ERROR`` to write only error-level entries to CloudWatch Logs, or choose ``INFO`` to include all ``ERROR`` events as well as extra informational events.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// Specifies whether Amazon CloudWatch metrics are enabled for this method.
	MetricsEnabled pulumi.BoolPtrInput `pulumi:"metricsEnabled"`
	// The resource path for this method. Forward slashes (``/``) are encoded as ``~1`` and the initial slash must include a forward slash. For example, the path value ``/resource/subresource`` must be encoded as ``/~1resource~1subresource``. To specify the root path, use only a slash (``/``). To apply settings to multiple resources and methods, specify an asterisk (``*``) for the ``HttpMethod`` and ``/*`` for the ``ResourcePath``. This parameter is required when you specify a ``MethodSetting``.
	ResourcePath pulumi.StringPtrInput `pulumi:"resourcePath"`
	// Specifies the throttling burst limit.
	ThrottlingBurstLimit pulumi.IntPtrInput `pulumi:"throttlingBurstLimit"`
	// Specifies the throttling rate limit.
	ThrottlingRateLimit pulumi.IntPtrInput `pulumi:"throttlingRateLimit"`
}

func (MethodSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodSetting)(nil)).Elem()
}

func (i MethodSettingArgs) ToMethodSettingOutput() MethodSettingOutput {
	return i.ToMethodSettingOutputWithContext(context.Background())
}

func (i MethodSettingArgs) ToMethodSettingOutputWithContext(ctx context.Context) MethodSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodSettingOutput)
}

// MethodSettingArrayInput is an input type that accepts MethodSettingArray and MethodSettingArrayOutput values.
// You can construct a concrete instance of `MethodSettingArrayInput` via:
//
//	MethodSettingArray{ MethodSettingArgs{...} }
type MethodSettingArrayInput interface {
	pulumi.Input

	ToMethodSettingArrayOutput() MethodSettingArrayOutput
	ToMethodSettingArrayOutputWithContext(context.Context) MethodSettingArrayOutput
}

type MethodSettingArray []MethodSettingInput

func (MethodSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodSetting)(nil)).Elem()
}

func (i MethodSettingArray) ToMethodSettingArrayOutput() MethodSettingArrayOutput {
	return i.ToMethodSettingArrayOutputWithContext(context.Background())
}

func (i MethodSettingArray) ToMethodSettingArrayOutputWithContext(ctx context.Context) MethodSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodSettingArrayOutput)
}

// Definition of MethodSetting
type MethodSettingOutput struct{ *pulumi.OutputState }

func (MethodSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodSetting)(nil)).Elem()
}

func (o MethodSettingOutput) ToMethodSettingOutput() MethodSettingOutput {
	return o
}

func (o MethodSettingOutput) ToMethodSettingOutputWithContext(ctx context.Context) MethodSettingOutput {
	return o
}

// Specifies whether the cached responses are encrypted.
func (o MethodSettingOutput) CacheDataEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSetting) *bool { return v.CacheDataEncrypted }).(pulumi.BoolPtrOutput)
}

// Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
func (o MethodSettingOutput) CacheTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodSetting) *int { return v.CacheTtlInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
func (o MethodSettingOutput) CachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSetting) *bool { return v.CachingEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether data trace logging is enabled for this method, which affects the log entries pushed to Amazon CloudWatch Logs. This can be useful to troubleshoot APIs, but can result in logging sensitive data. We recommend that you don't enable this option for production APIs.
func (o MethodSettingOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSetting) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

// The HTTP method. To apply settings to multiple resources and methods, specify an asterisk (“*“) for the “HttpMethod“ and “/*“ for the “ResourcePath“. This parameter is required when you specify a “MethodSetting“.
func (o MethodSettingOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodSetting) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// Specifies the logging level for this method, which affects the log entries pushed to Amazon CloudWatch Logs. Valid values are “OFF“, “ERROR“, and “INFO“. Choose “ERROR“ to write only error-level entries to CloudWatch Logs, or choose “INFO“ to include all “ERROR“ events as well as extra informational events.
func (o MethodSettingOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodSetting) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Specifies whether Amazon CloudWatch metrics are enabled for this method.
func (o MethodSettingOutput) MetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSetting) *bool { return v.MetricsEnabled }).(pulumi.BoolPtrOutput)
}

// The resource path for this method. Forward slashes (“/“) are encoded as “~1“ and the initial slash must include a forward slash. For example, the path value “/resource/subresource“ must be encoded as “/~1resource~1subresource“. To specify the root path, use only a slash (“/“). To apply settings to multiple resources and methods, specify an asterisk (“*“) for the “HttpMethod“ and “/*“ for the “ResourcePath“. This parameter is required when you specify a “MethodSetting“.
func (o MethodSettingOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodSetting) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

// Specifies the throttling burst limit.
func (o MethodSettingOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodSetting) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

// Specifies the throttling rate limit.
func (o MethodSettingOutput) ThrottlingRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodSetting) *int { return v.ThrottlingRateLimit }).(pulumi.IntPtrOutput)
}

type MethodSettingArrayOutput struct{ *pulumi.OutputState }

func (MethodSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodSetting)(nil)).Elem()
}

func (o MethodSettingArrayOutput) ToMethodSettingArrayOutput() MethodSettingArrayOutput {
	return o
}

func (o MethodSettingArrayOutput) ToMethodSettingArrayOutputWithContext(ctx context.Context) MethodSettingArrayOutput {
	return o
}

func (o MethodSettingArrayOutput) Index(i pulumi.IntInput) MethodSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MethodSetting {
		return vs[0].([]MethodSetting)[vs[1].(int)]
	}).(MethodSettingOutput)
}

// Definition of MethodSetting
type MethodSettingResponse struct {
	// Specifies whether the cached responses are encrypted.
	CacheDataEncrypted *bool `pulumi:"cacheDataEncrypted"`
	// Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
	CacheTtlInSeconds *int `pulumi:"cacheTtlInSeconds"`
	// Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
	CachingEnabled *bool `pulumi:"cachingEnabled"`
	// Specifies whether data trace logging is enabled for this method, which affects the log entries pushed to Amazon CloudWatch Logs. This can be useful to troubleshoot APIs, but can result in logging sensitive data. We recommend that you don't enable this option for production APIs.
	DataTraceEnabled *bool `pulumi:"dataTraceEnabled"`
	// The HTTP method. To apply settings to multiple resources and methods, specify an asterisk (``*``) for the ``HttpMethod`` and ``/*`` for the ``ResourcePath``. This parameter is required when you specify a ``MethodSetting``.
	HttpMethod *string `pulumi:"httpMethod"`
	// Specifies the logging level for this method, which affects the log entries pushed to Amazon CloudWatch Logs. Valid values are ``OFF``, ``ERROR``, and ``INFO``. Choose ``ERROR`` to write only error-level entries to CloudWatch Logs, or choose ``INFO`` to include all ``ERROR`` events as well as extra informational events.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Specifies whether Amazon CloudWatch metrics are enabled for this method.
	MetricsEnabled *bool `pulumi:"metricsEnabled"`
	// The resource path for this method. Forward slashes (``/``) are encoded as ``~1`` and the initial slash must include a forward slash. For example, the path value ``/resource/subresource`` must be encoded as ``/~1resource~1subresource``. To specify the root path, use only a slash (``/``). To apply settings to multiple resources and methods, specify an asterisk (``*``) for the ``HttpMethod`` and ``/*`` for the ``ResourcePath``. This parameter is required when you specify a ``MethodSetting``.
	ResourcePath *string `pulumi:"resourcePath"`
	// Specifies the throttling burst limit.
	ThrottlingBurstLimit *int `pulumi:"throttlingBurstLimit"`
	// Specifies the throttling rate limit.
	ThrottlingRateLimit *int `pulumi:"throttlingRateLimit"`
}

// Definition of MethodSetting
type MethodSettingResponseOutput struct{ *pulumi.OutputState }

func (MethodSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodSettingResponse)(nil)).Elem()
}

func (o MethodSettingResponseOutput) ToMethodSettingResponseOutput() MethodSettingResponseOutput {
	return o
}

func (o MethodSettingResponseOutput) ToMethodSettingResponseOutputWithContext(ctx context.Context) MethodSettingResponseOutput {
	return o
}

// Specifies whether the cached responses are encrypted.
func (o MethodSettingResponseOutput) CacheDataEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *bool { return v.CacheDataEncrypted }).(pulumi.BoolPtrOutput)
}

// Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
func (o MethodSettingResponseOutput) CacheTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *int { return v.CacheTtlInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
func (o MethodSettingResponseOutput) CachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *bool { return v.CachingEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether data trace logging is enabled for this method, which affects the log entries pushed to Amazon CloudWatch Logs. This can be useful to troubleshoot APIs, but can result in logging sensitive data. We recommend that you don't enable this option for production APIs.
func (o MethodSettingResponseOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

// The HTTP method. To apply settings to multiple resources and methods, specify an asterisk (“*“) for the “HttpMethod“ and “/*“ for the “ResourcePath“. This parameter is required when you specify a “MethodSetting“.
func (o MethodSettingResponseOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// Specifies the logging level for this method, which affects the log entries pushed to Amazon CloudWatch Logs. Valid values are “OFF“, “ERROR“, and “INFO“. Choose “ERROR“ to write only error-level entries to CloudWatch Logs, or choose “INFO“ to include all “ERROR“ events as well as extra informational events.
func (o MethodSettingResponseOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Specifies whether Amazon CloudWatch metrics are enabled for this method.
func (o MethodSettingResponseOutput) MetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *bool { return v.MetricsEnabled }).(pulumi.BoolPtrOutput)
}

// The resource path for this method. Forward slashes (“/“) are encoded as “~1“ and the initial slash must include a forward slash. For example, the path value “/resource/subresource“ must be encoded as “/~1resource~1subresource“. To specify the root path, use only a slash (“/“). To apply settings to multiple resources and methods, specify an asterisk (“*“) for the “HttpMethod“ and “/*“ for the “ResourcePath“. This parameter is required when you specify a “MethodSetting“.
func (o MethodSettingResponseOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

// Specifies the throttling burst limit.
func (o MethodSettingResponseOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

// Specifies the throttling rate limit.
func (o MethodSettingResponseOutput) ThrottlingRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodSettingResponse) *int { return v.ThrottlingRateLimit }).(pulumi.IntPtrOutput)
}

type MethodSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (MethodSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodSettingResponse)(nil)).Elem()
}

func (o MethodSettingResponseArrayOutput) ToMethodSettingResponseArrayOutput() MethodSettingResponseArrayOutput {
	return o
}

func (o MethodSettingResponseArrayOutput) ToMethodSettingResponseArrayOutputWithContext(ctx context.Context) MethodSettingResponseArrayOutput {
	return o
}

func (o MethodSettingResponseArrayOutput) Index(i pulumi.IntInput) MethodSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MethodSettingResponse {
		return vs[0].([]MethodSettingResponse)[vs[1].(int)]
	}).(MethodSettingResponseOutput)
}

// Definition of Metric
type Metric struct {
	// The metric dimensions that you want to be used for the metric that the alarm will watch.
	Dimensions []Dimension `pulumi:"dimensions"`
	// The name of the metric that you want the alarm to watch. This is a required field.
	MetricName *string `pulumi:"metricName"`
	// The namespace of the metric that the alarm will watch.
	Namespace *string `pulumi:"namespace"`
}

// MetricInput is an input type that accepts MetricArgs and MetricOutput values.
// You can construct a concrete instance of `MetricInput` via:
//
//	MetricArgs{...}
type MetricInput interface {
	pulumi.Input

	ToMetricOutput() MetricOutput
	ToMetricOutputWithContext(context.Context) MetricOutput
}

// Definition of Metric
type MetricArgs struct {
	// The metric dimensions that you want to be used for the metric that the alarm will watch.
	Dimensions DimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric that you want the alarm to watch. This is a required field.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The namespace of the metric that the alarm will watch.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (MetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Metric)(nil)).Elem()
}

func (i MetricArgs) ToMetricOutput() MetricOutput {
	return i.ToMetricOutputWithContext(context.Background())
}

func (i MetricArgs) ToMetricOutputWithContext(ctx context.Context) MetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricOutput)
}

func (i MetricArgs) ToMetricPtrOutput() MetricPtrOutput {
	return i.ToMetricPtrOutputWithContext(context.Background())
}

func (i MetricArgs) ToMetricPtrOutputWithContext(ctx context.Context) MetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricOutput).ToMetricPtrOutputWithContext(ctx)
}

// MetricPtrInput is an input type that accepts MetricArgs, MetricPtr and MetricPtrOutput values.
// You can construct a concrete instance of `MetricPtrInput` via:
//
//	        MetricArgs{...}
//
//	or:
//
//	        nil
type MetricPtrInput interface {
	pulumi.Input

	ToMetricPtrOutput() MetricPtrOutput
	ToMetricPtrOutputWithContext(context.Context) MetricPtrOutput
}

type metricPtrType MetricArgs

func MetricPtr(v *MetricArgs) MetricPtrInput {
	return (*metricPtrType)(v)
}

func (*metricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Metric)(nil)).Elem()
}

func (i *metricPtrType) ToMetricPtrOutput() MetricPtrOutput {
	return i.ToMetricPtrOutputWithContext(context.Background())
}

func (i *metricPtrType) ToMetricPtrOutputWithContext(ctx context.Context) MetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricPtrOutput)
}

// Definition of Metric
type MetricOutput struct{ *pulumi.OutputState }

func (MetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Metric)(nil)).Elem()
}

func (o MetricOutput) ToMetricOutput() MetricOutput {
	return o
}

func (o MetricOutput) ToMetricOutputWithContext(ctx context.Context) MetricOutput {
	return o
}

func (o MetricOutput) ToMetricPtrOutput() MetricPtrOutput {
	return o.ToMetricPtrOutputWithContext(context.Background())
}

func (o MetricOutput) ToMetricPtrOutputWithContext(ctx context.Context) MetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Metric) *Metric {
		return &v
	}).(MetricPtrOutput)
}

// The metric dimensions that you want to be used for the metric that the alarm will watch.
func (o MetricOutput) Dimensions() DimensionArrayOutput {
	return o.ApplyT(func(v Metric) []Dimension { return v.Dimensions }).(DimensionArrayOutput)
}

// The name of the metric that you want the alarm to watch. This is a required field.
func (o MetricOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Metric) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The namespace of the metric that the alarm will watch.
func (o MetricOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Metric) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type MetricPtrOutput struct{ *pulumi.OutputState }

func (MetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Metric)(nil)).Elem()
}

func (o MetricPtrOutput) ToMetricPtrOutput() MetricPtrOutput {
	return o
}

func (o MetricPtrOutput) ToMetricPtrOutputWithContext(ctx context.Context) MetricPtrOutput {
	return o
}

func (o MetricPtrOutput) Elem() MetricOutput {
	return o.ApplyT(func(v *Metric) Metric {
		if v != nil {
			return *v
		}
		var ret Metric
		return ret
	}).(MetricOutput)
}

// The metric dimensions that you want to be used for the metric that the alarm will watch.
func (o MetricPtrOutput) Dimensions() DimensionArrayOutput {
	return o.ApplyT(func(v *Metric) []Dimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(DimensionArrayOutput)
}

// The name of the metric that you want the alarm to watch. This is a required field.
func (o MetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Metric) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace of the metric that the alarm will watch.
func (o MetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Metric) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Definition of MetricDataQuery
type MetricDataQuery struct {
	// The ID of the account where the metrics are located, if this is a cross-account alarm.
	AccountId *string `pulumi:"accountId"`
	// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions. For more information about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*. Within each MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both.
	Expression *string `pulumi:"expression"`
	// A short name used to tie this object to the results in the response. This name must be unique within a single call to ``GetMetricData``. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
	Id *string `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CW dashboard widget, the label is shown. If ``Label`` is omitted, CW generates a default.
	Label *string `pulumi:"label"`
	// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data. Within one MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both. This structure defines the metric to be returned, along with the statistics, period, and units.  ``MetricStat`` is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
	MetricStat *MetricStat `pulumi:"metricStat"`
	// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` operation that includes a ``StorageResolution of 1 second``.
	Period *int `pulumi:"period"`
	// This option indicates whether to return the timestamps and raw data values of this metric. When you create an alarm based on a metric math expression, specify ``True`` for this value for only the one math expression that the alarm is based on. You must specify ``False`` for ``ReturnData`` for all the other metrics and expressions used in the alarm. This field is required.
	ReturnData *bool `pulumi:"returnData"`
}

// MetricDataQueryInput is an input type that accepts MetricDataQueryArgs and MetricDataQueryOutput values.
// You can construct a concrete instance of `MetricDataQueryInput` via:
//
//	MetricDataQueryArgs{...}
type MetricDataQueryInput interface {
	pulumi.Input

	ToMetricDataQueryOutput() MetricDataQueryOutput
	ToMetricDataQueryOutputWithContext(context.Context) MetricDataQueryOutput
}

// Definition of MetricDataQuery
type MetricDataQueryArgs struct {
	// The ID of the account where the metrics are located, if this is a cross-account alarm.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions. For more information about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*. Within each MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// A short name used to tie this object to the results in the response. This name must be unique within a single call to ``GetMetricData``. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CW dashboard widget, the label is shown. If ``Label`` is omitted, CW generates a default.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data. Within one MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both. This structure defines the metric to be returned, along with the statistics, period, and units.  ``MetricStat`` is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
	MetricStat MetricStatPtrInput `pulumi:"metricStat"`
	// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` operation that includes a ``StorageResolution of 1 second``.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// This option indicates whether to return the timestamps and raw data values of this metric. When you create an alarm based on a metric math expression, specify ``True`` for this value for only the one math expression that the alarm is based on. You must specify ``False`` for ``ReturnData`` for all the other metrics and expressions used in the alarm. This field is required.
	ReturnData pulumi.BoolPtrInput `pulumi:"returnData"`
}

func (MetricDataQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDataQuery)(nil)).Elem()
}

func (i MetricDataQueryArgs) ToMetricDataQueryOutput() MetricDataQueryOutput {
	return i.ToMetricDataQueryOutputWithContext(context.Background())
}

func (i MetricDataQueryArgs) ToMetricDataQueryOutputWithContext(ctx context.Context) MetricDataQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricDataQueryOutput)
}

// MetricDataQueryArrayInput is an input type that accepts MetricDataQueryArray and MetricDataQueryArrayOutput values.
// You can construct a concrete instance of `MetricDataQueryArrayInput` via:
//
//	MetricDataQueryArray{ MetricDataQueryArgs{...} }
type MetricDataQueryArrayInput interface {
	pulumi.Input

	ToMetricDataQueryArrayOutput() MetricDataQueryArrayOutput
	ToMetricDataQueryArrayOutputWithContext(context.Context) MetricDataQueryArrayOutput
}

type MetricDataQueryArray []MetricDataQueryInput

func (MetricDataQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDataQuery)(nil)).Elem()
}

func (i MetricDataQueryArray) ToMetricDataQueryArrayOutput() MetricDataQueryArrayOutput {
	return i.ToMetricDataQueryArrayOutputWithContext(context.Background())
}

func (i MetricDataQueryArray) ToMetricDataQueryArrayOutputWithContext(ctx context.Context) MetricDataQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricDataQueryArrayOutput)
}

// Definition of MetricDataQuery
type MetricDataQueryOutput struct{ *pulumi.OutputState }

func (MetricDataQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDataQuery)(nil)).Elem()
}

func (o MetricDataQueryOutput) ToMetricDataQueryOutput() MetricDataQueryOutput {
	return o
}

func (o MetricDataQueryOutput) ToMetricDataQueryOutputWithContext(ctx context.Context) MetricDataQueryOutput {
	return o
}

// The ID of the account where the metrics are located, if this is a cross-account alarm.
func (o MetricDataQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the “Id“ of the other metrics to refer to those metrics, and can also use the “Id“ of other expressions to use the result of those expressions. For more information about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*. Within each MetricDataQuery object, you must specify either “Expression“ or “MetricStat“ but not both.
func (o MetricDataQueryOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// A short name used to tie this object to the results in the response. This name must be unique within a single call to “GetMetricData“. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
func (o MetricDataQueryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CW dashboard widget, the label is shown. If “Label“ is omitted, CW generates a default.
func (o MetricDataQueryOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data. Within one MetricDataQuery object, you must specify either “Expression“ or “MetricStat“ but not both. This structure defines the metric to be returned, along with the statistics, period, and units.  “MetricStat“ is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
func (o MetricDataQueryOutput) MetricStat() MetricStatPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *MetricStat { return v.MetricStat }).(MetricStatPtrOutput)
}

// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a “PutMetricData“ operation that includes a “StorageResolution of 1 second“.
func (o MetricDataQueryOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// This option indicates whether to return the timestamps and raw data values of this metric. When you create an alarm based on a metric math expression, specify “True“ for this value for only the one math expression that the alarm is based on. You must specify “False“ for “ReturnData“ for all the other metrics and expressions used in the alarm. This field is required.
func (o MetricDataQueryOutput) ReturnData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MetricDataQuery) *bool { return v.ReturnData }).(pulumi.BoolPtrOutput)
}

type MetricDataQueryArrayOutput struct{ *pulumi.OutputState }

func (MetricDataQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDataQuery)(nil)).Elem()
}

func (o MetricDataQueryArrayOutput) ToMetricDataQueryArrayOutput() MetricDataQueryArrayOutput {
	return o
}

func (o MetricDataQueryArrayOutput) ToMetricDataQueryArrayOutputWithContext(ctx context.Context) MetricDataQueryArrayOutput {
	return o
}

func (o MetricDataQueryArrayOutput) Index(i pulumi.IntInput) MetricDataQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricDataQuery {
		return vs[0].([]MetricDataQuery)[vs[1].(int)]
	}).(MetricDataQueryOutput)
}

// Definition of MetricDataQuery
type MetricDataQueryResponse struct {
	// The ID of the account where the metrics are located, if this is a cross-account alarm.
	AccountId *string `pulumi:"accountId"`
	// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions. For more information about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*. Within each MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both.
	Expression *string `pulumi:"expression"`
	// A short name used to tie this object to the results in the response. This name must be unique within a single call to ``GetMetricData``. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
	Id *string `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CW dashboard widget, the label is shown. If ``Label`` is omitted, CW generates a default.
	Label *string `pulumi:"label"`
	// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data. Within one MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both. This structure defines the metric to be returned, along with the statistics, period, and units.  ``MetricStat`` is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
	MetricStat *MetricStatResponse `pulumi:"metricStat"`
	// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` operation that includes a ``StorageResolution of 1 second``.
	Period *int `pulumi:"period"`
	// This option indicates whether to return the timestamps and raw data values of this metric. When you create an alarm based on a metric math expression, specify ``True`` for this value for only the one math expression that the alarm is based on. You must specify ``False`` for ``ReturnData`` for all the other metrics and expressions used in the alarm. This field is required.
	ReturnData *bool `pulumi:"returnData"`
}

// Definition of MetricDataQuery
type MetricDataQueryResponseOutput struct{ *pulumi.OutputState }

func (MetricDataQueryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDataQueryResponse)(nil)).Elem()
}

func (o MetricDataQueryResponseOutput) ToMetricDataQueryResponseOutput() MetricDataQueryResponseOutput {
	return o
}

func (o MetricDataQueryResponseOutput) ToMetricDataQueryResponseOutputWithContext(ctx context.Context) MetricDataQueryResponseOutput {
	return o
}

// The ID of the account where the metrics are located, if this is a cross-account alarm.
func (o MetricDataQueryResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the “Id“ of the other metrics to refer to those metrics, and can also use the “Id“ of other expressions to use the result of those expressions. For more information about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*. Within each MetricDataQuery object, you must specify either “Expression“ or “MetricStat“ but not both.
func (o MetricDataQueryResponseOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// A short name used to tie this object to the results in the response. This name must be unique within a single call to “GetMetricData“. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
func (o MetricDataQueryResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CW dashboard widget, the label is shown. If “Label“ is omitted, CW generates a default.
func (o MetricDataQueryResponseOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data. Within one MetricDataQuery object, you must specify either “Expression“ or “MetricStat“ but not both. This structure defines the metric to be returned, along with the statistics, period, and units.  “MetricStat“ is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
func (o MetricDataQueryResponseOutput) MetricStat() MetricStatResponsePtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *MetricStatResponse { return v.MetricStat }).(MetricStatResponsePtrOutput)
}

// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a “PutMetricData“ operation that includes a “StorageResolution of 1 second“.
func (o MetricDataQueryResponseOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// This option indicates whether to return the timestamps and raw data values of this metric. When you create an alarm based on a metric math expression, specify “True“ for this value for only the one math expression that the alarm is based on. You must specify “False“ for “ReturnData“ for all the other metrics and expressions used in the alarm. This field is required.
func (o MetricDataQueryResponseOutput) ReturnData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MetricDataQueryResponse) *bool { return v.ReturnData }).(pulumi.BoolPtrOutput)
}

type MetricDataQueryResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricDataQueryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDataQueryResponse)(nil)).Elem()
}

func (o MetricDataQueryResponseArrayOutput) ToMetricDataQueryResponseArrayOutput() MetricDataQueryResponseArrayOutput {
	return o
}

func (o MetricDataQueryResponseArrayOutput) ToMetricDataQueryResponseArrayOutputWithContext(ctx context.Context) MetricDataQueryResponseArrayOutput {
	return o
}

func (o MetricDataQueryResponseArrayOutput) Index(i pulumi.IntInput) MetricDataQueryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricDataQueryResponse {
		return vs[0].([]MetricDataQueryResponse)[vs[1].(int)]
	}).(MetricDataQueryResponseOutput)
}

// Definition of Metric
type MetricResponse struct {
	// The metric dimensions that you want to be used for the metric that the alarm will watch.
	Dimensions []DimensionResponse `pulumi:"dimensions"`
	// The name of the metric that you want the alarm to watch. This is a required field.
	MetricName *string `pulumi:"metricName"`
	// The namespace of the metric that the alarm will watch.
	Namespace *string `pulumi:"namespace"`
}

// Definition of Metric
type MetricResponseOutput struct{ *pulumi.OutputState }

func (MetricResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricResponse)(nil)).Elem()
}

func (o MetricResponseOutput) ToMetricResponseOutput() MetricResponseOutput {
	return o
}

func (o MetricResponseOutput) ToMetricResponseOutputWithContext(ctx context.Context) MetricResponseOutput {
	return o
}

// The metric dimensions that you want to be used for the metric that the alarm will watch.
func (o MetricResponseOutput) Dimensions() DimensionResponseArrayOutput {
	return o.ApplyT(func(v MetricResponse) []DimensionResponse { return v.Dimensions }).(DimensionResponseArrayOutput)
}

// The name of the metric that you want the alarm to watch. This is a required field.
func (o MetricResponseOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricResponse) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The namespace of the metric that the alarm will watch.
func (o MetricResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type MetricResponsePtrOutput struct{ *pulumi.OutputState }

func (MetricResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricResponse)(nil)).Elem()
}

func (o MetricResponsePtrOutput) ToMetricResponsePtrOutput() MetricResponsePtrOutput {
	return o
}

func (o MetricResponsePtrOutput) ToMetricResponsePtrOutputWithContext(ctx context.Context) MetricResponsePtrOutput {
	return o
}

func (o MetricResponsePtrOutput) Elem() MetricResponseOutput {
	return o.ApplyT(func(v *MetricResponse) MetricResponse {
		if v != nil {
			return *v
		}
		var ret MetricResponse
		return ret
	}).(MetricResponseOutput)
}

// The metric dimensions that you want to be used for the metric that the alarm will watch.
func (o MetricResponsePtrOutput) Dimensions() DimensionResponseArrayOutput {
	return o.ApplyT(func(v *MetricResponse) []DimensionResponse {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(DimensionResponseArrayOutput)
}

// The name of the metric that you want the alarm to watch. This is a required field.
func (o MetricResponsePtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricResponse) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace of the metric that the alarm will watch.
func (o MetricResponsePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricResponse) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Definition of MetricStat
type MetricStat struct {
	// The metric to return, including the metric name, namespace, and dimensions. The ``Metric`` property type represents a specific metric. ``Metric`` is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
	Metric *Metric `pulumi:"metric"`
	// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` call that includes a ``StorageResolution`` of 1 second. If the ``StartTime`` parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
	Period *int `pulumi:"period"`
	// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
	Stat *string `pulumi:"stat"`
	// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
	Unit *string `pulumi:"unit"`
}

// MetricStatInput is an input type that accepts MetricStatArgs and MetricStatOutput values.
// You can construct a concrete instance of `MetricStatInput` via:
//
//	MetricStatArgs{...}
type MetricStatInput interface {
	pulumi.Input

	ToMetricStatOutput() MetricStatOutput
	ToMetricStatOutputWithContext(context.Context) MetricStatOutput
}

// Definition of MetricStat
type MetricStatArgs struct {
	// The metric to return, including the metric name, namespace, and dimensions. The ``Metric`` property type represents a specific metric. ``Metric`` is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
	Metric MetricPtrInput `pulumi:"metric"`
	// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` call that includes a ``StorageResolution`` of 1 second. If the ``StartTime`` parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
	Period pulumi.IntPtrInput `pulumi:"period"`
	// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
	Stat pulumi.StringPtrInput `pulumi:"stat"`
	// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (MetricStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStat)(nil)).Elem()
}

func (i MetricStatArgs) ToMetricStatOutput() MetricStatOutput {
	return i.ToMetricStatOutputWithContext(context.Background())
}

func (i MetricStatArgs) ToMetricStatOutputWithContext(ctx context.Context) MetricStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStatOutput)
}

func (i MetricStatArgs) ToMetricStatPtrOutput() MetricStatPtrOutput {
	return i.ToMetricStatPtrOutputWithContext(context.Background())
}

func (i MetricStatArgs) ToMetricStatPtrOutputWithContext(ctx context.Context) MetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStatOutput).ToMetricStatPtrOutputWithContext(ctx)
}

// MetricStatPtrInput is an input type that accepts MetricStatArgs, MetricStatPtr and MetricStatPtrOutput values.
// You can construct a concrete instance of `MetricStatPtrInput` via:
//
//	        MetricStatArgs{...}
//
//	or:
//
//	        nil
type MetricStatPtrInput interface {
	pulumi.Input

	ToMetricStatPtrOutput() MetricStatPtrOutput
	ToMetricStatPtrOutputWithContext(context.Context) MetricStatPtrOutput
}

type metricStatPtrType MetricStatArgs

func MetricStatPtr(v *MetricStatArgs) MetricStatPtrInput {
	return (*metricStatPtrType)(v)
}

func (*metricStatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricStat)(nil)).Elem()
}

func (i *metricStatPtrType) ToMetricStatPtrOutput() MetricStatPtrOutput {
	return i.ToMetricStatPtrOutputWithContext(context.Background())
}

func (i *metricStatPtrType) ToMetricStatPtrOutputWithContext(ctx context.Context) MetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStatPtrOutput)
}

// Definition of MetricStat
type MetricStatOutput struct{ *pulumi.OutputState }

func (MetricStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStat)(nil)).Elem()
}

func (o MetricStatOutput) ToMetricStatOutput() MetricStatOutput {
	return o
}

func (o MetricStatOutput) ToMetricStatOutputWithContext(ctx context.Context) MetricStatOutput {
	return o
}

func (o MetricStatOutput) ToMetricStatPtrOutput() MetricStatPtrOutput {
	return o.ToMetricStatPtrOutputWithContext(context.Background())
}

func (o MetricStatOutput) ToMetricStatPtrOutputWithContext(ctx context.Context) MetricStatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricStat) *MetricStat {
		return &v
	}).(MetricStatPtrOutput)
}

// The metric to return, including the metric name, namespace, and dimensions. The “Metric“ property type represents a specific metric. “Metric“ is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
func (o MetricStatOutput) Metric() MetricPtrOutput {
	return o.ApplyT(func(v MetricStat) *Metric { return v.Metric }).(MetricPtrOutput)
}

// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a “PutMetricData“ call that includes a “StorageResolution“ of 1 second. If the “StartTime“ parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
func (o MetricStatOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricStat) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
func (o MetricStatOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricStat) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
func (o MetricStatOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricStat) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type MetricStatPtrOutput struct{ *pulumi.OutputState }

func (MetricStatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricStat)(nil)).Elem()
}

func (o MetricStatPtrOutput) ToMetricStatPtrOutput() MetricStatPtrOutput {
	return o
}

func (o MetricStatPtrOutput) ToMetricStatPtrOutputWithContext(ctx context.Context) MetricStatPtrOutput {
	return o
}

func (o MetricStatPtrOutput) Elem() MetricStatOutput {
	return o.ApplyT(func(v *MetricStat) MetricStat {
		if v != nil {
			return *v
		}
		var ret MetricStat
		return ret
	}).(MetricStatOutput)
}

// The metric to return, including the metric name, namespace, and dimensions. The “Metric“ property type represents a specific metric. “Metric“ is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
func (o MetricStatPtrOutput) Metric() MetricPtrOutput {
	return o.ApplyT(func(v *MetricStat) *Metric {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(MetricPtrOutput)
}

// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a “PutMetricData“ call that includes a “StorageResolution“ of 1 second. If the “StartTime“ parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
func (o MetricStatPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricStat) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
func (o MetricStatPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Stat
	}).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
func (o MetricStatPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// Definition of MetricStat
type MetricStatResponse struct {
	// The metric to return, including the metric name, namespace, and dimensions. The ``Metric`` property type represents a specific metric. ``Metric`` is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
	Metric *MetricResponse `pulumi:"metric"`
	// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` call that includes a ``StorageResolution`` of 1 second. If the ``StartTime`` parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
	Period *int `pulumi:"period"`
	// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
	Stat *string `pulumi:"stat"`
	// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
	Unit *string `pulumi:"unit"`
}

// Definition of MetricStat
type MetricStatResponseOutput struct{ *pulumi.OutputState }

func (MetricStatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStatResponse)(nil)).Elem()
}

func (o MetricStatResponseOutput) ToMetricStatResponseOutput() MetricStatResponseOutput {
	return o
}

func (o MetricStatResponseOutput) ToMetricStatResponseOutputWithContext(ctx context.Context) MetricStatResponseOutput {
	return o
}

// The metric to return, including the metric name, namespace, and dimensions. The “Metric“ property type represents a specific metric. “Metric“ is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
func (o MetricStatResponseOutput) Metric() MetricResponsePtrOutput {
	return o.ApplyT(func(v MetricStatResponse) *MetricResponse { return v.Metric }).(MetricResponsePtrOutput)
}

// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a “PutMetricData“ call that includes a “StorageResolution“ of 1 second. If the “StartTime“ parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
func (o MetricStatResponseOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricStatResponse) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
func (o MetricStatResponseOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricStatResponse) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
func (o MetricStatResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricStatResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type MetricStatResponsePtrOutput struct{ *pulumi.OutputState }

func (MetricStatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricStatResponse)(nil)).Elem()
}

func (o MetricStatResponsePtrOutput) ToMetricStatResponsePtrOutput() MetricStatResponsePtrOutput {
	return o
}

func (o MetricStatResponsePtrOutput) ToMetricStatResponsePtrOutputWithContext(ctx context.Context) MetricStatResponsePtrOutput {
	return o
}

func (o MetricStatResponsePtrOutput) Elem() MetricStatResponseOutput {
	return o.ApplyT(func(v *MetricStatResponse) MetricStatResponse {
		if v != nil {
			return *v
		}
		var ret MetricStatResponse
		return ret
	}).(MetricStatResponseOutput)
}

// The metric to return, including the metric name, namespace, and dimensions. The “Metric“ property type represents a specific metric. “Metric“ is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
func (o MetricStatResponsePtrOutput) Metric() MetricResponsePtrOutput {
	return o.ApplyT(func(v *MetricStatResponse) *MetricResponse {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(MetricResponsePtrOutput)
}

// The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a “PutMetricData“ call that includes a “StorageResolution“ of 1 second. If the “StartTime“ parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:  +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).  +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).  +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
func (o MetricStatResponsePtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricStatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

// The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
func (o MetricStatResponsePtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricStatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Stat
	}).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points.  Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
func (o MetricStatResponsePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricStatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// Definition of MetricTransformation
type MetricTransformation struct {
	// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
	DefaultValue *int `pulumi:"defaultValue"`
	// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.  Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric.  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
	Dimensions []Dimension `pulumi:"dimensions"`
	// The name of the CloudWatch metric.
	MetricName *string `pulumi:"metricName"`
	// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
	MetricNamespace *string `pulumi:"metricNamespace"`
	// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as ``$.size``.
	MetricValue *string `pulumi:"metricValue"`
	// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
	Unit *string `pulumi:"unit"`
}

// MetricTransformationInput is an input type that accepts MetricTransformationArgs and MetricTransformationOutput values.
// You can construct a concrete instance of `MetricTransformationInput` via:
//
//	MetricTransformationArgs{...}
type MetricTransformationInput interface {
	pulumi.Input

	ToMetricTransformationOutput() MetricTransformationOutput
	ToMetricTransformationOutputWithContext(context.Context) MetricTransformationOutput
}

// Definition of MetricTransformation
type MetricTransformationArgs struct {
	// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
	DefaultValue pulumi.IntPtrInput `pulumi:"defaultValue"`
	// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.  Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric.  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
	Dimensions DimensionArrayInput `pulumi:"dimensions"`
	// The name of the CloudWatch metric.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
	MetricNamespace pulumi.StringPtrInput `pulumi:"metricNamespace"`
	// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as ``$.size``.
	MetricValue pulumi.StringPtrInput `pulumi:"metricValue"`
	// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (MetricTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricTransformation)(nil)).Elem()
}

func (i MetricTransformationArgs) ToMetricTransformationOutput() MetricTransformationOutput {
	return i.ToMetricTransformationOutputWithContext(context.Background())
}

func (i MetricTransformationArgs) ToMetricTransformationOutputWithContext(ctx context.Context) MetricTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricTransformationOutput)
}

// MetricTransformationArrayInput is an input type that accepts MetricTransformationArray and MetricTransformationArrayOutput values.
// You can construct a concrete instance of `MetricTransformationArrayInput` via:
//
//	MetricTransformationArray{ MetricTransformationArgs{...} }
type MetricTransformationArrayInput interface {
	pulumi.Input

	ToMetricTransformationArrayOutput() MetricTransformationArrayOutput
	ToMetricTransformationArrayOutputWithContext(context.Context) MetricTransformationArrayOutput
}

type MetricTransformationArray []MetricTransformationInput

func (MetricTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricTransformation)(nil)).Elem()
}

func (i MetricTransformationArray) ToMetricTransformationArrayOutput() MetricTransformationArrayOutput {
	return i.ToMetricTransformationArrayOutputWithContext(context.Background())
}

func (i MetricTransformationArray) ToMetricTransformationArrayOutputWithContext(ctx context.Context) MetricTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricTransformationArrayOutput)
}

// Definition of MetricTransformation
type MetricTransformationOutput struct{ *pulumi.OutputState }

func (MetricTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricTransformation)(nil)).Elem()
}

func (o MetricTransformationOutput) ToMetricTransformationOutput() MetricTransformationOutput {
	return o
}

func (o MetricTransformationOutput) ToMetricTransformationOutputWithContext(ctx context.Context) MetricTransformationOutput {
	return o
}

// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
func (o MetricTransformationOutput) DefaultValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricTransformation) *int { return v.DefaultValue }).(pulumi.IntPtrOutput)
}

// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.  Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as “IPAddress“ or “requestID“ as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric.  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
func (o MetricTransformationOutput) Dimensions() DimensionArrayOutput {
	return o.ApplyT(func(v MetricTransformation) []Dimension { return v.Dimensions }).(DimensionArrayOutput)
}

// The name of the CloudWatch metric.
func (o MetricTransformationOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformation) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
func (o MetricTransformationOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformation) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like “Error“, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as “$.size“.
func (o MetricTransformationOutput) MetricValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformation) *string { return v.MetricValue }).(pulumi.StringPtrOutput)
}

// The unit to assign to the metric. If you omit this, the unit is set as “None“.
func (o MetricTransformationOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformation) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type MetricTransformationArrayOutput struct{ *pulumi.OutputState }

func (MetricTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricTransformation)(nil)).Elem()
}

func (o MetricTransformationArrayOutput) ToMetricTransformationArrayOutput() MetricTransformationArrayOutput {
	return o
}

func (o MetricTransformationArrayOutput) ToMetricTransformationArrayOutputWithContext(ctx context.Context) MetricTransformationArrayOutput {
	return o
}

func (o MetricTransformationArrayOutput) Index(i pulumi.IntInput) MetricTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricTransformation {
		return vs[0].([]MetricTransformation)[vs[1].(int)]
	}).(MetricTransformationOutput)
}

// Definition of MetricTransformation
type MetricTransformationResponse struct {
	// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
	DefaultValue *int `pulumi:"defaultValue"`
	// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.  Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric.  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
	Dimensions []DimensionResponse `pulumi:"dimensions"`
	// The name of the CloudWatch metric.
	MetricName *string `pulumi:"metricName"`
	// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
	MetricNamespace *string `pulumi:"metricNamespace"`
	// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as ``$.size``.
	MetricValue *string `pulumi:"metricValue"`
	// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
	Unit *string `pulumi:"unit"`
}

// Definition of MetricTransformation
type MetricTransformationResponseOutput struct{ *pulumi.OutputState }

func (MetricTransformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricTransformationResponse)(nil)).Elem()
}

func (o MetricTransformationResponseOutput) ToMetricTransformationResponseOutput() MetricTransformationResponseOutput {
	return o
}

func (o MetricTransformationResponseOutput) ToMetricTransformationResponseOutputWithContext(ctx context.Context) MetricTransformationResponseOutput {
	return o
}

// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
func (o MetricTransformationResponseOutput) DefaultValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricTransformationResponse) *int { return v.DefaultValue }).(pulumi.IntPtrOutput)
}

// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.  Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as “IPAddress“ or “requestID“ as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric.  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
func (o MetricTransformationResponseOutput) Dimensions() DimensionResponseArrayOutput {
	return o.ApplyT(func(v MetricTransformationResponse) []DimensionResponse { return v.Dimensions }).(DimensionResponseArrayOutput)
}

// The name of the CloudWatch metric.
func (o MetricTransformationResponseOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformationResponse) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
func (o MetricTransformationResponseOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformationResponse) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like “Error“, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as “$.size“.
func (o MetricTransformationResponseOutput) MetricValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformationResponse) *string { return v.MetricValue }).(pulumi.StringPtrOutput)
}

// The unit to assign to the metric. If you omit this, the unit is set as “None“.
func (o MetricTransformationResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricTransformationResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type MetricTransformationResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricTransformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricTransformationResponse)(nil)).Elem()
}

func (o MetricTransformationResponseArrayOutput) ToMetricTransformationResponseArrayOutput() MetricTransformationResponseArrayOutput {
	return o
}

func (o MetricTransformationResponseArrayOutput) ToMetricTransformationResponseArrayOutputWithContext(ctx context.Context) MetricTransformationResponseArrayOutput {
	return o
}

func (o MetricTransformationResponseArrayOutput) Index(i pulumi.IntInput) MetricTransformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricTransformationResponse {
		return vs[0].([]MetricTransformationResponse)[vs[1].(int)]
	}).(MetricTransformationResponseOutput)
}

// Definition of Metrics
type Metrics struct {
	// A container specifying the time threshold for emitting the ``s3:Replication:OperationMissedThreshold`` event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
	EventThreshold *ReplicationTimeValue `pulumi:"eventThreshold"`
	// Specifies whether the replication metrics are enabled.
	Status *string `pulumi:"status"`
}

// MetricsInput is an input type that accepts MetricsArgs and MetricsOutput values.
// You can construct a concrete instance of `MetricsInput` via:
//
//	MetricsArgs{...}
type MetricsInput interface {
	pulumi.Input

	ToMetricsOutput() MetricsOutput
	ToMetricsOutputWithContext(context.Context) MetricsOutput
}

// Definition of Metrics
type MetricsArgs struct {
	// A container specifying the time threshold for emitting the ``s3:Replication:OperationMissedThreshold`` event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
	EventThreshold ReplicationTimeValuePtrInput `pulumi:"eventThreshold"`
	// Specifies whether the replication metrics are enabled.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (MetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Metrics)(nil)).Elem()
}

func (i MetricsArgs) ToMetricsOutput() MetricsOutput {
	return i.ToMetricsOutputWithContext(context.Background())
}

func (i MetricsArgs) ToMetricsOutputWithContext(ctx context.Context) MetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsOutput)
}

func (i MetricsArgs) ToMetricsPtrOutput() MetricsPtrOutput {
	return i.ToMetricsPtrOutputWithContext(context.Background())
}

func (i MetricsArgs) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsOutput).ToMetricsPtrOutputWithContext(ctx)
}

// MetricsPtrInput is an input type that accepts MetricsArgs, MetricsPtr and MetricsPtrOutput values.
// You can construct a concrete instance of `MetricsPtrInput` via:
//
//	        MetricsArgs{...}
//
//	or:
//
//	        nil
type MetricsPtrInput interface {
	pulumi.Input

	ToMetricsPtrOutput() MetricsPtrOutput
	ToMetricsPtrOutputWithContext(context.Context) MetricsPtrOutput
}

type metricsPtrType MetricsArgs

func MetricsPtr(v *MetricsArgs) MetricsPtrInput {
	return (*metricsPtrType)(v)
}

func (*metricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Metrics)(nil)).Elem()
}

func (i *metricsPtrType) ToMetricsPtrOutput() MetricsPtrOutput {
	return i.ToMetricsPtrOutputWithContext(context.Background())
}

func (i *metricsPtrType) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsPtrOutput)
}

// Definition of Metrics
type MetricsOutput struct{ *pulumi.OutputState }

func (MetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Metrics)(nil)).Elem()
}

func (o MetricsOutput) ToMetricsOutput() MetricsOutput {
	return o
}

func (o MetricsOutput) ToMetricsOutputWithContext(ctx context.Context) MetricsOutput {
	return o
}

func (o MetricsOutput) ToMetricsPtrOutput() MetricsPtrOutput {
	return o.ToMetricsPtrOutputWithContext(context.Background())
}

func (o MetricsOutput) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Metrics) *Metrics {
		return &v
	}).(MetricsPtrOutput)
}

// A container specifying the time threshold for emitting the “s3:Replication:OperationMissedThreshold“ event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o MetricsOutput) EventThreshold() ReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v Metrics) *ReplicationTimeValue { return v.EventThreshold }).(ReplicationTimeValuePtrOutput)
}

// Specifies whether the replication metrics are enabled.
func (o MetricsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Metrics) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type MetricsPtrOutput struct{ *pulumi.OutputState }

func (MetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Metrics)(nil)).Elem()
}

func (o MetricsPtrOutput) ToMetricsPtrOutput() MetricsPtrOutput {
	return o
}

func (o MetricsPtrOutput) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return o
}

func (o MetricsPtrOutput) Elem() MetricsOutput {
	return o.ApplyT(func(v *Metrics) Metrics {
		if v != nil {
			return *v
		}
		var ret Metrics
		return ret
	}).(MetricsOutput)
}

// A container specifying the time threshold for emitting the “s3:Replication:OperationMissedThreshold“ event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o MetricsPtrOutput) EventThreshold() ReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v *Metrics) *ReplicationTimeValue {
		if v == nil {
			return nil
		}
		return v.EventThreshold
	}).(ReplicationTimeValuePtrOutput)
}

// Specifies whether the replication metrics are enabled.
func (o MetricsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Metrics) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of MetricsCollection
type MetricsCollection struct {
	// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
	Granularity *string `pulumi:"granularity"`
	// Identifies the metrics to enable. You can specify one or more of the following metrics:  +   ``GroupMinSize``   +   ``GroupMaxSize``   +   ``GroupDesiredCapacity``   +   ``GroupInServiceInstances``   +   ``GroupPendingInstances``   +   ``GroupStandbyInstances``   +   ``GroupTerminatingInstances``   +   ``GroupTotalInstances``   +   ``GroupInServiceCapacity``   +   ``GroupPendingCapacity``   +   ``GroupStandbyCapacity``   +   ``GroupTerminatingCapacity``   +   ``GroupTotalCapacity``   +   ``WarmPoolDesiredCapacity``   +   ``WarmPoolWarmedCapacity``   +   ``WarmPoolPendingCapacity``   +   ``WarmPoolTerminatingCapacity``   +   ``WarmPoolTotalCapacity``   +   ``GroupAndWarmPoolDesiredCapacity``   +   ``GroupAndWarmPoolTotalCapacity``    If you specify ``Granularity`` and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide*.
	Metrics []string `pulumi:"metrics"`
}

// MetricsCollectionInput is an input type that accepts MetricsCollectionArgs and MetricsCollectionOutput values.
// You can construct a concrete instance of `MetricsCollectionInput` via:
//
//	MetricsCollectionArgs{...}
type MetricsCollectionInput interface {
	pulumi.Input

	ToMetricsCollectionOutput() MetricsCollectionOutput
	ToMetricsCollectionOutputWithContext(context.Context) MetricsCollectionOutput
}

// Definition of MetricsCollection
type MetricsCollectionArgs struct {
	// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
	Granularity pulumi.StringPtrInput `pulumi:"granularity"`
	// Identifies the metrics to enable. You can specify one or more of the following metrics:  +   ``GroupMinSize``   +   ``GroupMaxSize``   +   ``GroupDesiredCapacity``   +   ``GroupInServiceInstances``   +   ``GroupPendingInstances``   +   ``GroupStandbyInstances``   +   ``GroupTerminatingInstances``   +   ``GroupTotalInstances``   +   ``GroupInServiceCapacity``   +   ``GroupPendingCapacity``   +   ``GroupStandbyCapacity``   +   ``GroupTerminatingCapacity``   +   ``GroupTotalCapacity``   +   ``WarmPoolDesiredCapacity``   +   ``WarmPoolWarmedCapacity``   +   ``WarmPoolPendingCapacity``   +   ``WarmPoolTerminatingCapacity``   +   ``WarmPoolTotalCapacity``   +   ``GroupAndWarmPoolDesiredCapacity``   +   ``GroupAndWarmPoolTotalCapacity``    If you specify ``Granularity`` and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide*.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
}

func (MetricsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsCollection)(nil)).Elem()
}

func (i MetricsCollectionArgs) ToMetricsCollectionOutput() MetricsCollectionOutput {
	return i.ToMetricsCollectionOutputWithContext(context.Background())
}

func (i MetricsCollectionArgs) ToMetricsCollectionOutputWithContext(ctx context.Context) MetricsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsCollectionOutput)
}

// MetricsCollectionArrayInput is an input type that accepts MetricsCollectionArray and MetricsCollectionArrayOutput values.
// You can construct a concrete instance of `MetricsCollectionArrayInput` via:
//
//	MetricsCollectionArray{ MetricsCollectionArgs{...} }
type MetricsCollectionArrayInput interface {
	pulumi.Input

	ToMetricsCollectionArrayOutput() MetricsCollectionArrayOutput
	ToMetricsCollectionArrayOutputWithContext(context.Context) MetricsCollectionArrayOutput
}

type MetricsCollectionArray []MetricsCollectionInput

func (MetricsCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsCollection)(nil)).Elem()
}

func (i MetricsCollectionArray) ToMetricsCollectionArrayOutput() MetricsCollectionArrayOutput {
	return i.ToMetricsCollectionArrayOutputWithContext(context.Background())
}

func (i MetricsCollectionArray) ToMetricsCollectionArrayOutputWithContext(ctx context.Context) MetricsCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsCollectionArrayOutput)
}

// Definition of MetricsCollection
type MetricsCollectionOutput struct{ *pulumi.OutputState }

func (MetricsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsCollection)(nil)).Elem()
}

func (o MetricsCollectionOutput) ToMetricsCollectionOutput() MetricsCollectionOutput {
	return o
}

func (o MetricsCollectionOutput) ToMetricsCollectionOutputWithContext(ctx context.Context) MetricsCollectionOutput {
	return o
}

// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is “1Minute“.
func (o MetricsCollectionOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsCollection) *string { return v.Granularity }).(pulumi.StringPtrOutput)
}

// Identifies the metrics to enable. You can specify one or more of the following metrics:  +   “GroupMinSize“   +   “GroupMaxSize“   +   “GroupDesiredCapacity“   +   “GroupInServiceInstances“   +   “GroupPendingInstances“   +   “GroupStandbyInstances“   +   “GroupTerminatingInstances“   +   “GroupTotalInstances“   +   “GroupInServiceCapacity“   +   “GroupPendingCapacity“   +   “GroupStandbyCapacity“   +   “GroupTerminatingCapacity“   +   “GroupTotalCapacity“   +   “WarmPoolDesiredCapacity“   +   “WarmPoolWarmedCapacity“   +   “WarmPoolPendingCapacity“   +   “WarmPoolTerminatingCapacity“   +   “WarmPoolTotalCapacity“   +   “GroupAndWarmPoolDesiredCapacity“   +   “GroupAndWarmPoolTotalCapacity“    If you specify “Granularity“ and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide*.
func (o MetricsCollectionOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetricsCollection) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

type MetricsCollectionArrayOutput struct{ *pulumi.OutputState }

func (MetricsCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsCollection)(nil)).Elem()
}

func (o MetricsCollectionArrayOutput) ToMetricsCollectionArrayOutput() MetricsCollectionArrayOutput {
	return o
}

func (o MetricsCollectionArrayOutput) ToMetricsCollectionArrayOutputWithContext(ctx context.Context) MetricsCollectionArrayOutput {
	return o
}

func (o MetricsCollectionArrayOutput) Index(i pulumi.IntInput) MetricsCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricsCollection {
		return vs[0].([]MetricsCollection)[vs[1].(int)]
	}).(MetricsCollectionOutput)
}

// Definition of MetricsCollection
type MetricsCollectionResponse struct {
	// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
	Granularity *string `pulumi:"granularity"`
	// Identifies the metrics to enable. You can specify one or more of the following metrics:  +   ``GroupMinSize``   +   ``GroupMaxSize``   +   ``GroupDesiredCapacity``   +   ``GroupInServiceInstances``   +   ``GroupPendingInstances``   +   ``GroupStandbyInstances``   +   ``GroupTerminatingInstances``   +   ``GroupTotalInstances``   +   ``GroupInServiceCapacity``   +   ``GroupPendingCapacity``   +   ``GroupStandbyCapacity``   +   ``GroupTerminatingCapacity``   +   ``GroupTotalCapacity``   +   ``WarmPoolDesiredCapacity``   +   ``WarmPoolWarmedCapacity``   +   ``WarmPoolPendingCapacity``   +   ``WarmPoolTerminatingCapacity``   +   ``WarmPoolTotalCapacity``   +   ``GroupAndWarmPoolDesiredCapacity``   +   ``GroupAndWarmPoolTotalCapacity``    If you specify ``Granularity`` and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide*.
	Metrics []string `pulumi:"metrics"`
}

// Definition of MetricsCollection
type MetricsCollectionResponseOutput struct{ *pulumi.OutputState }

func (MetricsCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsCollectionResponse)(nil)).Elem()
}

func (o MetricsCollectionResponseOutput) ToMetricsCollectionResponseOutput() MetricsCollectionResponseOutput {
	return o
}

func (o MetricsCollectionResponseOutput) ToMetricsCollectionResponseOutputWithContext(ctx context.Context) MetricsCollectionResponseOutput {
	return o
}

// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is “1Minute“.
func (o MetricsCollectionResponseOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsCollectionResponse) *string { return v.Granularity }).(pulumi.StringPtrOutput)
}

// Identifies the metrics to enable. You can specify one or more of the following metrics:  +   “GroupMinSize“   +   “GroupMaxSize“   +   “GroupDesiredCapacity“   +   “GroupInServiceInstances“   +   “GroupPendingInstances“   +   “GroupStandbyInstances“   +   “GroupTerminatingInstances“   +   “GroupTotalInstances“   +   “GroupInServiceCapacity“   +   “GroupPendingCapacity“   +   “GroupStandbyCapacity“   +   “GroupTerminatingCapacity“   +   “GroupTotalCapacity“   +   “WarmPoolDesiredCapacity“   +   “WarmPoolWarmedCapacity“   +   “WarmPoolPendingCapacity“   +   “WarmPoolTerminatingCapacity“   +   “WarmPoolTotalCapacity“   +   “GroupAndWarmPoolDesiredCapacity“   +   “GroupAndWarmPoolTotalCapacity“    If you specify “Granularity“ and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide*.
func (o MetricsCollectionResponseOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetricsCollectionResponse) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

type MetricsCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricsCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsCollectionResponse)(nil)).Elem()
}

func (o MetricsCollectionResponseArrayOutput) ToMetricsCollectionResponseArrayOutput() MetricsCollectionResponseArrayOutput {
	return o
}

func (o MetricsCollectionResponseArrayOutput) ToMetricsCollectionResponseArrayOutputWithContext(ctx context.Context) MetricsCollectionResponseArrayOutput {
	return o
}

func (o MetricsCollectionResponseArrayOutput) Index(i pulumi.IntInput) MetricsCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricsCollectionResponse {
		return vs[0].([]MetricsCollectionResponse)[vs[1].(int)]
	}).(MetricsCollectionResponseOutput)
}

// Definition of MetricsConfiguration
type MetricsConfiguration struct {
	// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
	AccessPointArn *string `pulumi:"accessPointArn"`
	// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
	Id *string `pulumi:"id"`
	// The prefix that an object must have to be included in the metrics results.
	Prefix *string `pulumi:"prefix"`
	// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
	TagFilters []TagFilter `pulumi:"tagFilters"`
}

// MetricsConfigurationInput is an input type that accepts MetricsConfigurationArgs and MetricsConfigurationOutput values.
// You can construct a concrete instance of `MetricsConfigurationInput` via:
//
//	MetricsConfigurationArgs{...}
type MetricsConfigurationInput interface {
	pulumi.Input

	ToMetricsConfigurationOutput() MetricsConfigurationOutput
	ToMetricsConfigurationOutputWithContext(context.Context) MetricsConfigurationOutput
}

// Definition of MetricsConfiguration
type MetricsConfigurationArgs struct {
	// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
	AccessPointArn pulumi.StringPtrInput `pulumi:"accessPointArn"`
	// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The prefix that an object must have to be included in the metrics results.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
	TagFilters TagFilterArrayInput `pulumi:"tagFilters"`
}

func (MetricsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsConfiguration)(nil)).Elem()
}

func (i MetricsConfigurationArgs) ToMetricsConfigurationOutput() MetricsConfigurationOutput {
	return i.ToMetricsConfigurationOutputWithContext(context.Background())
}

func (i MetricsConfigurationArgs) ToMetricsConfigurationOutputWithContext(ctx context.Context) MetricsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsConfigurationOutput)
}

// MetricsConfigurationArrayInput is an input type that accepts MetricsConfigurationArray and MetricsConfigurationArrayOutput values.
// You can construct a concrete instance of `MetricsConfigurationArrayInput` via:
//
//	MetricsConfigurationArray{ MetricsConfigurationArgs{...} }
type MetricsConfigurationArrayInput interface {
	pulumi.Input

	ToMetricsConfigurationArrayOutput() MetricsConfigurationArrayOutput
	ToMetricsConfigurationArrayOutputWithContext(context.Context) MetricsConfigurationArrayOutput
}

type MetricsConfigurationArray []MetricsConfigurationInput

func (MetricsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsConfiguration)(nil)).Elem()
}

func (i MetricsConfigurationArray) ToMetricsConfigurationArrayOutput() MetricsConfigurationArrayOutput {
	return i.ToMetricsConfigurationArrayOutputWithContext(context.Background())
}

func (i MetricsConfigurationArray) ToMetricsConfigurationArrayOutputWithContext(ctx context.Context) MetricsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsConfigurationArrayOutput)
}

// Definition of MetricsConfiguration
type MetricsConfigurationOutput struct{ *pulumi.OutputState }

func (MetricsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsConfiguration)(nil)).Elem()
}

func (o MetricsConfigurationOutput) ToMetricsConfigurationOutput() MetricsConfigurationOutput {
	return o
}

func (o MetricsConfigurationOutput) ToMetricsConfigurationOutputWithContext(ctx context.Context) MetricsConfigurationOutput {
	return o
}

// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
func (o MetricsConfigurationOutput) AccessPointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsConfiguration) *string { return v.AccessPointArn }).(pulumi.StringPtrOutput)
}

// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
func (o MetricsConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The prefix that an object must have to be included in the metrics results.
func (o MetricsConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
func (o MetricsConfigurationOutput) TagFilters() TagFilterArrayOutput {
	return o.ApplyT(func(v MetricsConfiguration) []TagFilter { return v.TagFilters }).(TagFilterArrayOutput)
}

type MetricsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MetricsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsConfiguration)(nil)).Elem()
}

func (o MetricsConfigurationArrayOutput) ToMetricsConfigurationArrayOutput() MetricsConfigurationArrayOutput {
	return o
}

func (o MetricsConfigurationArrayOutput) ToMetricsConfigurationArrayOutputWithContext(ctx context.Context) MetricsConfigurationArrayOutput {
	return o
}

func (o MetricsConfigurationArrayOutput) Index(i pulumi.IntInput) MetricsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricsConfiguration {
		return vs[0].([]MetricsConfiguration)[vs[1].(int)]
	}).(MetricsConfigurationOutput)
}

// Definition of MetricsConfiguration
type MetricsConfigurationResponse struct {
	// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
	AccessPointArn *string `pulumi:"accessPointArn"`
	// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
	Id *string `pulumi:"id"`
	// The prefix that an object must have to be included in the metrics results.
	Prefix *string `pulumi:"prefix"`
	// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
	TagFilters []TagFilterResponse `pulumi:"tagFilters"`
}

// Definition of MetricsConfiguration
type MetricsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (MetricsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsConfigurationResponse)(nil)).Elem()
}

func (o MetricsConfigurationResponseOutput) ToMetricsConfigurationResponseOutput() MetricsConfigurationResponseOutput {
	return o
}

func (o MetricsConfigurationResponseOutput) ToMetricsConfigurationResponseOutputWithContext(ctx context.Context) MetricsConfigurationResponseOutput {
	return o
}

// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
func (o MetricsConfigurationResponseOutput) AccessPointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsConfigurationResponse) *string { return v.AccessPointArn }).(pulumi.StringPtrOutput)
}

// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
func (o MetricsConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The prefix that an object must have to be included in the metrics results.
func (o MetricsConfigurationResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsConfigurationResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
func (o MetricsConfigurationResponseOutput) TagFilters() TagFilterResponseArrayOutput {
	return o.ApplyT(func(v MetricsConfigurationResponse) []TagFilterResponse { return v.TagFilters }).(TagFilterResponseArrayOutput)
}

type MetricsConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricsConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsConfigurationResponse)(nil)).Elem()
}

func (o MetricsConfigurationResponseArrayOutput) ToMetricsConfigurationResponseArrayOutput() MetricsConfigurationResponseArrayOutput {
	return o
}

func (o MetricsConfigurationResponseArrayOutput) ToMetricsConfigurationResponseArrayOutputWithContext(ctx context.Context) MetricsConfigurationResponseArrayOutput {
	return o
}

func (o MetricsConfigurationResponseArrayOutput) Index(i pulumi.IntInput) MetricsConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricsConfigurationResponse {
		return vs[0].([]MetricsConfigurationResponse)[vs[1].(int)]
	}).(MetricsConfigurationResponseOutput)
}

// Definition of Metrics
type MetricsResponse struct {
	// A container specifying the time threshold for emitting the ``s3:Replication:OperationMissedThreshold`` event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
	EventThreshold *ReplicationTimeValueResponse `pulumi:"eventThreshold"`
	// Specifies whether the replication metrics are enabled.
	Status *string `pulumi:"status"`
}

// Definition of Metrics
type MetricsResponseOutput struct{ *pulumi.OutputState }

func (MetricsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsResponse)(nil)).Elem()
}

func (o MetricsResponseOutput) ToMetricsResponseOutput() MetricsResponseOutput {
	return o
}

func (o MetricsResponseOutput) ToMetricsResponseOutputWithContext(ctx context.Context) MetricsResponseOutput {
	return o
}

// A container specifying the time threshold for emitting the “s3:Replication:OperationMissedThreshold“ event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o MetricsResponseOutput) EventThreshold() ReplicationTimeValueResponsePtrOutput {
	return o.ApplyT(func(v MetricsResponse) *ReplicationTimeValueResponse { return v.EventThreshold }).(ReplicationTimeValueResponsePtrOutput)
}

// Specifies whether the replication metrics are enabled.
func (o MetricsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type MetricsResponsePtrOutput struct{ *pulumi.OutputState }

func (MetricsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsResponse)(nil)).Elem()
}

func (o MetricsResponsePtrOutput) ToMetricsResponsePtrOutput() MetricsResponsePtrOutput {
	return o
}

func (o MetricsResponsePtrOutput) ToMetricsResponsePtrOutputWithContext(ctx context.Context) MetricsResponsePtrOutput {
	return o
}

func (o MetricsResponsePtrOutput) Elem() MetricsResponseOutput {
	return o.ApplyT(func(v *MetricsResponse) MetricsResponse {
		if v != nil {
			return *v
		}
		var ret MetricsResponse
		return ret
	}).(MetricsResponseOutput)
}

// A container specifying the time threshold for emitting the “s3:Replication:OperationMissedThreshold“ event. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o MetricsResponsePtrOutput) EventThreshold() ReplicationTimeValueResponsePtrOutput {
	return o.ApplyT(func(v *MetricsResponse) *ReplicationTimeValueResponse {
		if v == nil {
			return nil
		}
		return v.EventThreshold
	}).(ReplicationTimeValueResponsePtrOutput)
}

// Specifies whether the replication metrics are enabled.
func (o MetricsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of MitigationInEffectEnumEnumValue
type MitigationInEffectEnumEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// MitigationInEffectEnumEnumValueInput is an input type that accepts MitigationInEffectEnumEnumValueArgs and MitigationInEffectEnumEnumValueOutput values.
// You can construct a concrete instance of `MitigationInEffectEnumEnumValueInput` via:
//
//	MitigationInEffectEnumEnumValueArgs{...}
type MitigationInEffectEnumEnumValueInput interface {
	pulumi.Input

	ToMitigationInEffectEnumEnumValueOutput() MitigationInEffectEnumEnumValueOutput
	ToMitigationInEffectEnumEnumValueOutputWithContext(context.Context) MitigationInEffectEnumEnumValueOutput
}

// Definition of MitigationInEffectEnumEnumValue
type MitigationInEffectEnumEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MitigationInEffectEnumEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationInEffectEnumEnumValue)(nil)).Elem()
}

func (i MitigationInEffectEnumEnumValueArgs) ToMitigationInEffectEnumEnumValueOutput() MitigationInEffectEnumEnumValueOutput {
	return i.ToMitigationInEffectEnumEnumValueOutputWithContext(context.Background())
}

func (i MitigationInEffectEnumEnumValueArgs) ToMitigationInEffectEnumEnumValueOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationInEffectEnumEnumValueOutput)
}

func (i MitigationInEffectEnumEnumValueArgs) ToMitigationInEffectEnumEnumValuePtrOutput() MitigationInEffectEnumEnumValuePtrOutput {
	return i.ToMitigationInEffectEnumEnumValuePtrOutputWithContext(context.Background())
}

func (i MitigationInEffectEnumEnumValueArgs) ToMitigationInEffectEnumEnumValuePtrOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationInEffectEnumEnumValueOutput).ToMitigationInEffectEnumEnumValuePtrOutputWithContext(ctx)
}

// MitigationInEffectEnumEnumValuePtrInput is an input type that accepts MitigationInEffectEnumEnumValueArgs, MitigationInEffectEnumEnumValuePtr and MitigationInEffectEnumEnumValuePtrOutput values.
// You can construct a concrete instance of `MitigationInEffectEnumEnumValuePtrInput` via:
//
//	        MitigationInEffectEnumEnumValueArgs{...}
//
//	or:
//
//	        nil
type MitigationInEffectEnumEnumValuePtrInput interface {
	pulumi.Input

	ToMitigationInEffectEnumEnumValuePtrOutput() MitigationInEffectEnumEnumValuePtrOutput
	ToMitigationInEffectEnumEnumValuePtrOutputWithContext(context.Context) MitigationInEffectEnumEnumValuePtrOutput
}

type mitigationInEffectEnumEnumValuePtrType MitigationInEffectEnumEnumValueArgs

func MitigationInEffectEnumEnumValuePtr(v *MitigationInEffectEnumEnumValueArgs) MitigationInEffectEnumEnumValuePtrInput {
	return (*mitigationInEffectEnumEnumValuePtrType)(v)
}

func (*mitigationInEffectEnumEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationInEffectEnumEnumValue)(nil)).Elem()
}

func (i *mitigationInEffectEnumEnumValuePtrType) ToMitigationInEffectEnumEnumValuePtrOutput() MitigationInEffectEnumEnumValuePtrOutput {
	return i.ToMitigationInEffectEnumEnumValuePtrOutputWithContext(context.Background())
}

func (i *mitigationInEffectEnumEnumValuePtrType) ToMitigationInEffectEnumEnumValuePtrOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationInEffectEnumEnumValuePtrOutput)
}

// Definition of MitigationInEffectEnumEnumValue
type MitigationInEffectEnumEnumValueOutput struct{ *pulumi.OutputState }

func (MitigationInEffectEnumEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationInEffectEnumEnumValue)(nil)).Elem()
}

func (o MitigationInEffectEnumEnumValueOutput) ToMitigationInEffectEnumEnumValueOutput() MitigationInEffectEnumEnumValueOutput {
	return o
}

func (o MitigationInEffectEnumEnumValueOutput) ToMitigationInEffectEnumEnumValueOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValueOutput {
	return o
}

func (o MitigationInEffectEnumEnumValueOutput) ToMitigationInEffectEnumEnumValuePtrOutput() MitigationInEffectEnumEnumValuePtrOutput {
	return o.ToMitigationInEffectEnumEnumValuePtrOutputWithContext(context.Background())
}

func (o MitigationInEffectEnumEnumValueOutput) ToMitigationInEffectEnumEnumValuePtrOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationInEffectEnumEnumValue) *MitigationInEffectEnumEnumValue {
		return &v
	}).(MitigationInEffectEnumEnumValuePtrOutput)
}

// Property value
func (o MitigationInEffectEnumEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MitigationInEffectEnumEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MitigationInEffectEnumEnumValuePtrOutput struct{ *pulumi.OutputState }

func (MitigationInEffectEnumEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationInEffectEnumEnumValue)(nil)).Elem()
}

func (o MitigationInEffectEnumEnumValuePtrOutput) ToMitigationInEffectEnumEnumValuePtrOutput() MitigationInEffectEnumEnumValuePtrOutput {
	return o
}

func (o MitigationInEffectEnumEnumValuePtrOutput) ToMitigationInEffectEnumEnumValuePtrOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValuePtrOutput {
	return o
}

func (o MitigationInEffectEnumEnumValuePtrOutput) Elem() MitigationInEffectEnumEnumValueOutput {
	return o.ApplyT(func(v *MitigationInEffectEnumEnumValue) MitigationInEffectEnumEnumValue {
		if v != nil {
			return *v
		}
		var ret MitigationInEffectEnumEnumValue
		return ret
	}).(MitigationInEffectEnumEnumValueOutput)
}

// Property value
func (o MitigationInEffectEnumEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MitigationInEffectEnumEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of MitigationInEffectEnumEnumValue
type MitigationInEffectEnumEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of MitigationInEffectEnumEnumValue
type MitigationInEffectEnumEnumValueResponseOutput struct{ *pulumi.OutputState }

func (MitigationInEffectEnumEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationInEffectEnumEnumValueResponse)(nil)).Elem()
}

func (o MitigationInEffectEnumEnumValueResponseOutput) ToMitigationInEffectEnumEnumValueResponseOutput() MitigationInEffectEnumEnumValueResponseOutput {
	return o
}

func (o MitigationInEffectEnumEnumValueResponseOutput) ToMitigationInEffectEnumEnumValueResponseOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValueResponseOutput {
	return o
}

// Property value
func (o MitigationInEffectEnumEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MitigationInEffectEnumEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MitigationInEffectEnumEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (MitigationInEffectEnumEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationInEffectEnumEnumValueResponse)(nil)).Elem()
}

func (o MitigationInEffectEnumEnumValueResponsePtrOutput) ToMitigationInEffectEnumEnumValueResponsePtrOutput() MitigationInEffectEnumEnumValueResponsePtrOutput {
	return o
}

func (o MitigationInEffectEnumEnumValueResponsePtrOutput) ToMitigationInEffectEnumEnumValueResponsePtrOutputWithContext(ctx context.Context) MitigationInEffectEnumEnumValueResponsePtrOutput {
	return o
}

func (o MitigationInEffectEnumEnumValueResponsePtrOutput) Elem() MitigationInEffectEnumEnumValueResponseOutput {
	return o.ApplyT(func(v *MitigationInEffectEnumEnumValueResponse) MitigationInEffectEnumEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret MitigationInEffectEnumEnumValueResponse
		return ret
	}).(MitigationInEffectEnumEnumValueResponseOutput)
}

// Property value
func (o MitigationInEffectEnumEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MitigationInEffectEnumEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of MixedInstancesPolicy
type MixedInstancesPolicy struct {
	// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
	InstancesDistribution *InstancesDistribution `pulumi:"instancesDistribution"`
	// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
	LaunchTemplate *LaunchTemplate `pulumi:"launchTemplate"`
}

// MixedInstancesPolicyInput is an input type that accepts MixedInstancesPolicyArgs and MixedInstancesPolicyOutput values.
// You can construct a concrete instance of `MixedInstancesPolicyInput` via:
//
//	MixedInstancesPolicyArgs{...}
type MixedInstancesPolicyInput interface {
	pulumi.Input

	ToMixedInstancesPolicyOutput() MixedInstancesPolicyOutput
	ToMixedInstancesPolicyOutputWithContext(context.Context) MixedInstancesPolicyOutput
}

// Definition of MixedInstancesPolicy
type MixedInstancesPolicyArgs struct {
	// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
	InstancesDistribution InstancesDistributionPtrInput `pulumi:"instancesDistribution"`
	// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
	LaunchTemplate LaunchTemplatePtrInput `pulumi:"launchTemplate"`
}

func (MixedInstancesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MixedInstancesPolicy)(nil)).Elem()
}

func (i MixedInstancesPolicyArgs) ToMixedInstancesPolicyOutput() MixedInstancesPolicyOutput {
	return i.ToMixedInstancesPolicyOutputWithContext(context.Background())
}

func (i MixedInstancesPolicyArgs) ToMixedInstancesPolicyOutputWithContext(ctx context.Context) MixedInstancesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MixedInstancesPolicyOutput)
}

func (i MixedInstancesPolicyArgs) ToMixedInstancesPolicyPtrOutput() MixedInstancesPolicyPtrOutput {
	return i.ToMixedInstancesPolicyPtrOutputWithContext(context.Background())
}

func (i MixedInstancesPolicyArgs) ToMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) MixedInstancesPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MixedInstancesPolicyOutput).ToMixedInstancesPolicyPtrOutputWithContext(ctx)
}

// MixedInstancesPolicyPtrInput is an input type that accepts MixedInstancesPolicyArgs, MixedInstancesPolicyPtr and MixedInstancesPolicyPtrOutput values.
// You can construct a concrete instance of `MixedInstancesPolicyPtrInput` via:
//
//	        MixedInstancesPolicyArgs{...}
//
//	or:
//
//	        nil
type MixedInstancesPolicyPtrInput interface {
	pulumi.Input

	ToMixedInstancesPolicyPtrOutput() MixedInstancesPolicyPtrOutput
	ToMixedInstancesPolicyPtrOutputWithContext(context.Context) MixedInstancesPolicyPtrOutput
}

type mixedInstancesPolicyPtrType MixedInstancesPolicyArgs

func MixedInstancesPolicyPtr(v *MixedInstancesPolicyArgs) MixedInstancesPolicyPtrInput {
	return (*mixedInstancesPolicyPtrType)(v)
}

func (*mixedInstancesPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MixedInstancesPolicy)(nil)).Elem()
}

func (i *mixedInstancesPolicyPtrType) ToMixedInstancesPolicyPtrOutput() MixedInstancesPolicyPtrOutput {
	return i.ToMixedInstancesPolicyPtrOutputWithContext(context.Background())
}

func (i *mixedInstancesPolicyPtrType) ToMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) MixedInstancesPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MixedInstancesPolicyPtrOutput)
}

// Definition of MixedInstancesPolicy
type MixedInstancesPolicyOutput struct{ *pulumi.OutputState }

func (MixedInstancesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MixedInstancesPolicy)(nil)).Elem()
}

func (o MixedInstancesPolicyOutput) ToMixedInstancesPolicyOutput() MixedInstancesPolicyOutput {
	return o
}

func (o MixedInstancesPolicyOutput) ToMixedInstancesPolicyOutputWithContext(ctx context.Context) MixedInstancesPolicyOutput {
	return o
}

func (o MixedInstancesPolicyOutput) ToMixedInstancesPolicyPtrOutput() MixedInstancesPolicyPtrOutput {
	return o.ToMixedInstancesPolicyPtrOutputWithContext(context.Background())
}

func (o MixedInstancesPolicyOutput) ToMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) MixedInstancesPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MixedInstancesPolicy) *MixedInstancesPolicy {
		return &v
	}).(MixedInstancesPolicyPtrOutput)
}

// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  “InstancesDistribution“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyOutput) InstancesDistribution() InstancesDistributionPtrOutput {
	return o.ApplyT(func(v MixedInstancesPolicy) *InstancesDistribution { return v.InstancesDistribution }).(InstancesDistributionPtrOutput)
}

// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  “LaunchTemplate“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyOutput) LaunchTemplate() LaunchTemplatePtrOutput {
	return o.ApplyT(func(v MixedInstancesPolicy) *LaunchTemplate { return v.LaunchTemplate }).(LaunchTemplatePtrOutput)
}

type MixedInstancesPolicyPtrOutput struct{ *pulumi.OutputState }

func (MixedInstancesPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MixedInstancesPolicy)(nil)).Elem()
}

func (o MixedInstancesPolicyPtrOutput) ToMixedInstancesPolicyPtrOutput() MixedInstancesPolicyPtrOutput {
	return o
}

func (o MixedInstancesPolicyPtrOutput) ToMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) MixedInstancesPolicyPtrOutput {
	return o
}

func (o MixedInstancesPolicyPtrOutput) Elem() MixedInstancesPolicyOutput {
	return o.ApplyT(func(v *MixedInstancesPolicy) MixedInstancesPolicy {
		if v != nil {
			return *v
		}
		var ret MixedInstancesPolicy
		return ret
	}).(MixedInstancesPolicyOutput)
}

// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  “InstancesDistribution“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyPtrOutput) InstancesDistribution() InstancesDistributionPtrOutput {
	return o.ApplyT(func(v *MixedInstancesPolicy) *InstancesDistribution {
		if v == nil {
			return nil
		}
		return v.InstancesDistribution
	}).(InstancesDistributionPtrOutput)
}

// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  “LaunchTemplate“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyPtrOutput) LaunchTemplate() LaunchTemplatePtrOutput {
	return o.ApplyT(func(v *MixedInstancesPolicy) *LaunchTemplate {
		if v == nil {
			return nil
		}
		return v.LaunchTemplate
	}).(LaunchTemplatePtrOutput)
}

// Definition of MixedInstancesPolicy
type MixedInstancesPolicyResponse struct {
	// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
	InstancesDistribution *InstancesDistributionResponse `pulumi:"instancesDistribution"`
	// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
	LaunchTemplate *LaunchTemplateResponse `pulumi:"launchTemplate"`
}

// Definition of MixedInstancesPolicy
type MixedInstancesPolicyResponseOutput struct{ *pulumi.OutputState }

func (MixedInstancesPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MixedInstancesPolicyResponse)(nil)).Elem()
}

func (o MixedInstancesPolicyResponseOutput) ToMixedInstancesPolicyResponseOutput() MixedInstancesPolicyResponseOutput {
	return o
}

func (o MixedInstancesPolicyResponseOutput) ToMixedInstancesPolicyResponseOutputWithContext(ctx context.Context) MixedInstancesPolicyResponseOutput {
	return o
}

// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  “InstancesDistribution“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyResponseOutput) InstancesDistribution() InstancesDistributionResponsePtrOutput {
	return o.ApplyT(func(v MixedInstancesPolicyResponse) *InstancesDistributionResponse { return v.InstancesDistribution }).(InstancesDistributionResponsePtrOutput)
}

// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  “LaunchTemplate“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyResponseOutput) LaunchTemplate() LaunchTemplateResponsePtrOutput {
	return o.ApplyT(func(v MixedInstancesPolicyResponse) *LaunchTemplateResponse { return v.LaunchTemplate }).(LaunchTemplateResponsePtrOutput)
}

type MixedInstancesPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (MixedInstancesPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MixedInstancesPolicyResponse)(nil)).Elem()
}

func (o MixedInstancesPolicyResponsePtrOutput) ToMixedInstancesPolicyResponsePtrOutput() MixedInstancesPolicyResponsePtrOutput {
	return o
}

func (o MixedInstancesPolicyResponsePtrOutput) ToMixedInstancesPolicyResponsePtrOutputWithContext(ctx context.Context) MixedInstancesPolicyResponsePtrOutput {
	return o
}

func (o MixedInstancesPolicyResponsePtrOutput) Elem() MixedInstancesPolicyResponseOutput {
	return o.ApplyT(func(v *MixedInstancesPolicyResponse) MixedInstancesPolicyResponse {
		if v != nil {
			return *v
		}
		var ret MixedInstancesPolicyResponse
		return ret
	}).(MixedInstancesPolicyResponseOutput)
}

// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.  “InstancesDistribution“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyResponsePtrOutput) InstancesDistribution() InstancesDistributionResponsePtrOutput {
	return o.ApplyT(func(v *MixedInstancesPolicyResponse) *InstancesDistributionResponse {
		if v == nil {
			return nil
		}
		return v.InstancesDistribution
	}).(InstancesDistributionResponsePtrOutput)
}

// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.  “LaunchTemplate“ is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
func (o MixedInstancesPolicyResponsePtrOutput) LaunchTemplate() LaunchTemplateResponsePtrOutput {
	return o.ApplyT(func(v *MixedInstancesPolicyResponse) *LaunchTemplateResponse {
		if v == nil {
			return nil
		}
		return v.LaunchTemplate
	}).(LaunchTemplateResponsePtrOutput)
}

// Definition of ModifyingProperties
type ModifyingProperties struct {
	// <p>The current value of the domain property that is being modified.</p>
	ActiveValue *string `pulumi:"activeValue"`
	// <p>The name of the property that is currently being modified.</p>
	Name *string `pulumi:"name"`
	// <p>The value that the property that is currently being modified will eventually have.</p>
	PendingValue *string `pulumi:"pendingValue"`
	// <p>The type of value that is currently being modified. Properties can have two types:</p> <ul> <li> <p> <code>PLAIN_TEXT</code>: Contain direct values such as '1', 'True', or 'c5.large.search'.</p> </li> <li> <p> <code>STRINGIFIED_JSON</code>: Contain content in JSON format, such as {'Enabled':'True'}'.</p> </li> </ul>
	ValueType *PropertyValueTypeEnumValue `pulumi:"valueType"`
}

// ModifyingPropertiesInput is an input type that accepts ModifyingPropertiesArgs and ModifyingPropertiesOutput values.
// You can construct a concrete instance of `ModifyingPropertiesInput` via:
//
//	ModifyingPropertiesArgs{...}
type ModifyingPropertiesInput interface {
	pulumi.Input

	ToModifyingPropertiesOutput() ModifyingPropertiesOutput
	ToModifyingPropertiesOutputWithContext(context.Context) ModifyingPropertiesOutput
}

// Definition of ModifyingProperties
type ModifyingPropertiesArgs struct {
	// <p>The current value of the domain property that is being modified.</p>
	ActiveValue pulumi.StringPtrInput `pulumi:"activeValue"`
	// <p>The name of the property that is currently being modified.</p>
	Name pulumi.StringPtrInput `pulumi:"name"`
	// <p>The value that the property that is currently being modified will eventually have.</p>
	PendingValue pulumi.StringPtrInput `pulumi:"pendingValue"`
	// <p>The type of value that is currently being modified. Properties can have two types:</p> <ul> <li> <p> <code>PLAIN_TEXT</code>: Contain direct values such as '1', 'True', or 'c5.large.search'.</p> </li> <li> <p> <code>STRINGIFIED_JSON</code>: Contain content in JSON format, such as {'Enabled':'True'}'.</p> </li> </ul>
	ValueType PropertyValueTypeEnumValuePtrInput `pulumi:"valueType"`
}

func (ModifyingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModifyingProperties)(nil)).Elem()
}

func (i ModifyingPropertiesArgs) ToModifyingPropertiesOutput() ModifyingPropertiesOutput {
	return i.ToModifyingPropertiesOutputWithContext(context.Background())
}

func (i ModifyingPropertiesArgs) ToModifyingPropertiesOutputWithContext(ctx context.Context) ModifyingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyingPropertiesOutput)
}

// ModifyingPropertiesArrayInput is an input type that accepts ModifyingPropertiesArray and ModifyingPropertiesArrayOutput values.
// You can construct a concrete instance of `ModifyingPropertiesArrayInput` via:
//
//	ModifyingPropertiesArray{ ModifyingPropertiesArgs{...} }
type ModifyingPropertiesArrayInput interface {
	pulumi.Input

	ToModifyingPropertiesArrayOutput() ModifyingPropertiesArrayOutput
	ToModifyingPropertiesArrayOutputWithContext(context.Context) ModifyingPropertiesArrayOutput
}

type ModifyingPropertiesArray []ModifyingPropertiesInput

func (ModifyingPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModifyingProperties)(nil)).Elem()
}

func (i ModifyingPropertiesArray) ToModifyingPropertiesArrayOutput() ModifyingPropertiesArrayOutput {
	return i.ToModifyingPropertiesArrayOutputWithContext(context.Background())
}

func (i ModifyingPropertiesArray) ToModifyingPropertiesArrayOutputWithContext(ctx context.Context) ModifyingPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModifyingPropertiesArrayOutput)
}

// Definition of ModifyingProperties
type ModifyingPropertiesOutput struct{ *pulumi.OutputState }

func (ModifyingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModifyingProperties)(nil)).Elem()
}

func (o ModifyingPropertiesOutput) ToModifyingPropertiesOutput() ModifyingPropertiesOutput {
	return o
}

func (o ModifyingPropertiesOutput) ToModifyingPropertiesOutputWithContext(ctx context.Context) ModifyingPropertiesOutput {
	return o
}

// <p>The current value of the domain property that is being modified.</p>
func (o ModifyingPropertiesOutput) ActiveValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyingProperties) *string { return v.ActiveValue }).(pulumi.StringPtrOutput)
}

// <p>The name of the property that is currently being modified.</p>
func (o ModifyingPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyingProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>The value that the property that is currently being modified will eventually have.</p>
func (o ModifyingPropertiesOutput) PendingValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyingProperties) *string { return v.PendingValue }).(pulumi.StringPtrOutput)
}

// <p>The type of value that is currently being modified. Properties can have two types:</p> <ul> <li> <p> <code>PLAIN_TEXT</code>: Contain direct values such as '1', 'True', or 'c5.large.search'.</p> </li> <li> <p> <code>STRINGIFIED_JSON</code>: Contain content in JSON format, such as {'Enabled':'True'}'.</p> </li> </ul>
func (o ModifyingPropertiesOutput) ValueType() PropertyValueTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ModifyingProperties) *PropertyValueTypeEnumValue { return v.ValueType }).(PropertyValueTypeEnumValuePtrOutput)
}

type ModifyingPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ModifyingPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModifyingProperties)(nil)).Elem()
}

func (o ModifyingPropertiesArrayOutput) ToModifyingPropertiesArrayOutput() ModifyingPropertiesArrayOutput {
	return o
}

func (o ModifyingPropertiesArrayOutput) ToModifyingPropertiesArrayOutputWithContext(ctx context.Context) ModifyingPropertiesArrayOutput {
	return o
}

func (o ModifyingPropertiesArrayOutput) Index(i pulumi.IntInput) ModifyingPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModifyingProperties {
		return vs[0].([]ModifyingProperties)[vs[1].(int)]
	}).(ModifyingPropertiesOutput)
}

// Definition of ModifyingProperties
type ModifyingPropertiesResponse struct {
	// <p>The current value of the domain property that is being modified.</p>
	ActiveValue *string `pulumi:"activeValue"`
	// <p>The name of the property that is currently being modified.</p>
	Name *string `pulumi:"name"`
	// <p>The value that the property that is currently being modified will eventually have.</p>
	PendingValue *string `pulumi:"pendingValue"`
	// <p>The type of value that is currently being modified. Properties can have two types:</p> <ul> <li> <p> <code>PLAIN_TEXT</code>: Contain direct values such as '1', 'True', or 'c5.large.search'.</p> </li> <li> <p> <code>STRINGIFIED_JSON</code>: Contain content in JSON format, such as {'Enabled':'True'}'.</p> </li> </ul>
	ValueType *PropertyValueTypeEnumValueResponse `pulumi:"valueType"`
}

// Definition of ModifyingProperties
type ModifyingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ModifyingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModifyingPropertiesResponse)(nil)).Elem()
}

func (o ModifyingPropertiesResponseOutput) ToModifyingPropertiesResponseOutput() ModifyingPropertiesResponseOutput {
	return o
}

func (o ModifyingPropertiesResponseOutput) ToModifyingPropertiesResponseOutputWithContext(ctx context.Context) ModifyingPropertiesResponseOutput {
	return o
}

// <p>The current value of the domain property that is being modified.</p>
func (o ModifyingPropertiesResponseOutput) ActiveValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyingPropertiesResponse) *string { return v.ActiveValue }).(pulumi.StringPtrOutput)
}

// <p>The name of the property that is currently being modified.</p>
func (o ModifyingPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyingPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>The value that the property that is currently being modified will eventually have.</p>
func (o ModifyingPropertiesResponseOutput) PendingValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModifyingPropertiesResponse) *string { return v.PendingValue }).(pulumi.StringPtrOutput)
}

// <p>The type of value that is currently being modified. Properties can have two types:</p> <ul> <li> <p> <code>PLAIN_TEXT</code>: Contain direct values such as '1', 'True', or 'c5.large.search'.</p> </li> <li> <p> <code>STRINGIFIED_JSON</code>: Contain content in JSON format, such as {'Enabled':'True'}'.</p> </li> </ul>
func (o ModifyingPropertiesResponseOutput) ValueType() PropertyValueTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ModifyingPropertiesResponse) *PropertyValueTypeEnumValueResponse { return v.ValueType }).(PropertyValueTypeEnumValueResponsePtrOutput)
}

type ModifyingPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ModifyingPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModifyingPropertiesResponse)(nil)).Elem()
}

func (o ModifyingPropertiesResponseArrayOutput) ToModifyingPropertiesResponseArrayOutput() ModifyingPropertiesResponseArrayOutput {
	return o
}

func (o ModifyingPropertiesResponseArrayOutput) ToModifyingPropertiesResponseArrayOutputWithContext(ctx context.Context) ModifyingPropertiesResponseArrayOutput {
	return o
}

func (o ModifyingPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ModifyingPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModifyingPropertiesResponse {
		return vs[0].([]ModifyingPropertiesResponse)[vs[1].(int)]
	}).(ModifyingPropertiesResponseOutput)
}

// Definition of Monitoring
type Monitoring struct {
	// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
	State *MonitoringStateEnumValue `pulumi:"state"`
}

// MonitoringInput is an input type that accepts MonitoringArgs and MonitoringOutput values.
// You can construct a concrete instance of `MonitoringInput` via:
//
//	MonitoringArgs{...}
type MonitoringInput interface {
	pulumi.Input

	ToMonitoringOutput() MonitoringOutput
	ToMonitoringOutputWithContext(context.Context) MonitoringOutput
}

// Definition of Monitoring
type MonitoringArgs struct {
	// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
	State MonitoringStateEnumValuePtrInput `pulumi:"state"`
}

func (MonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Monitoring)(nil)).Elem()
}

func (i MonitoringArgs) ToMonitoringOutput() MonitoringOutput {
	return i.ToMonitoringOutputWithContext(context.Background())
}

func (i MonitoringArgs) ToMonitoringOutputWithContext(ctx context.Context) MonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringOutput)
}

func (i MonitoringArgs) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return i.ToMonitoringPtrOutputWithContext(context.Background())
}

func (i MonitoringArgs) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringOutput).ToMonitoringPtrOutputWithContext(ctx)
}

// MonitoringPtrInput is an input type that accepts MonitoringArgs, MonitoringPtr and MonitoringPtrOutput values.
// You can construct a concrete instance of `MonitoringPtrInput` via:
//
//	        MonitoringArgs{...}
//
//	or:
//
//	        nil
type MonitoringPtrInput interface {
	pulumi.Input

	ToMonitoringPtrOutput() MonitoringPtrOutput
	ToMonitoringPtrOutputWithContext(context.Context) MonitoringPtrOutput
}

type monitoringPtrType MonitoringArgs

func MonitoringPtr(v *MonitoringArgs) MonitoringPtrInput {
	return (*monitoringPtrType)(v)
}

func (*monitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Monitoring)(nil)).Elem()
}

func (i *monitoringPtrType) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return i.ToMonitoringPtrOutputWithContext(context.Background())
}

func (i *monitoringPtrType) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringPtrOutput)
}

// Definition of Monitoring
type MonitoringOutput struct{ *pulumi.OutputState }

func (MonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Monitoring)(nil)).Elem()
}

func (o MonitoringOutput) ToMonitoringOutput() MonitoringOutput {
	return o
}

func (o MonitoringOutput) ToMonitoringOutputWithContext(ctx context.Context) MonitoringOutput {
	return o
}

func (o MonitoringOutput) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return o.ToMonitoringPtrOutputWithContext(context.Background())
}

func (o MonitoringOutput) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Monitoring) *Monitoring {
		return &v
	}).(MonitoringPtrOutput)
}

// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
func (o MonitoringOutput) State() MonitoringStateEnumValuePtrOutput {
	return o.ApplyT(func(v Monitoring) *MonitoringStateEnumValue { return v.State }).(MonitoringStateEnumValuePtrOutput)
}

type MonitoringPtrOutput struct{ *pulumi.OutputState }

func (MonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Monitoring)(nil)).Elem()
}

func (o MonitoringPtrOutput) ToMonitoringPtrOutput() MonitoringPtrOutput {
	return o
}

func (o MonitoringPtrOutput) ToMonitoringPtrOutputWithContext(ctx context.Context) MonitoringPtrOutput {
	return o
}

func (o MonitoringPtrOutput) Elem() MonitoringOutput {
	return o.ApplyT(func(v *Monitoring) Monitoring {
		if v != nil {
			return *v
		}
		var ret Monitoring
		return ret
	}).(MonitoringOutput)
}

// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
func (o MonitoringPtrOutput) State() MonitoringStateEnumValuePtrOutput {
	return o.ApplyT(func(v *Monitoring) *MonitoringStateEnumValue {
		if v == nil {
			return nil
		}
		return v.State
	}).(MonitoringStateEnumValuePtrOutput)
}

// Definition of Monitoring
type MonitoringResponse struct {
	// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
	State *MonitoringStateEnumValueResponse `pulumi:"state"`
}

// Definition of Monitoring
type MonitoringResponseOutput struct{ *pulumi.OutputState }

func (MonitoringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringResponse)(nil)).Elem()
}

func (o MonitoringResponseOutput) ToMonitoringResponseOutput() MonitoringResponseOutput {
	return o
}

func (o MonitoringResponseOutput) ToMonitoringResponseOutputWithContext(ctx context.Context) MonitoringResponseOutput {
	return o
}

// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
func (o MonitoringResponseOutput) State() MonitoringStateEnumValueResponsePtrOutput {
	return o.ApplyT(func(v MonitoringResponse) *MonitoringStateEnumValueResponse { return v.State }).(MonitoringStateEnumValueResponsePtrOutput)
}

type MonitoringResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitoringResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringResponse)(nil)).Elem()
}

func (o MonitoringResponsePtrOutput) ToMonitoringResponsePtrOutput() MonitoringResponsePtrOutput {
	return o
}

func (o MonitoringResponsePtrOutput) ToMonitoringResponsePtrOutputWithContext(ctx context.Context) MonitoringResponsePtrOutput {
	return o
}

func (o MonitoringResponsePtrOutput) Elem() MonitoringResponseOutput {
	return o.ApplyT(func(v *MonitoringResponse) MonitoringResponse {
		if v != nil {
			return *v
		}
		var ret MonitoringResponse
		return ret
	}).(MonitoringResponseOutput)
}

// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
func (o MonitoringResponsePtrOutput) State() MonitoringStateEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *MonitoringResponse) *MonitoringStateEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.State
	}).(MonitoringStateEnumValueResponsePtrOutput)
}

// Definition of MonitoringStateEnumValue
type MonitoringStateEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// MonitoringStateEnumValueInput is an input type that accepts MonitoringStateEnumValueArgs and MonitoringStateEnumValueOutput values.
// You can construct a concrete instance of `MonitoringStateEnumValueInput` via:
//
//	MonitoringStateEnumValueArgs{...}
type MonitoringStateEnumValueInput interface {
	pulumi.Input

	ToMonitoringStateEnumValueOutput() MonitoringStateEnumValueOutput
	ToMonitoringStateEnumValueOutputWithContext(context.Context) MonitoringStateEnumValueOutput
}

// Definition of MonitoringStateEnumValue
type MonitoringStateEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MonitoringStateEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStateEnumValue)(nil)).Elem()
}

func (i MonitoringStateEnumValueArgs) ToMonitoringStateEnumValueOutput() MonitoringStateEnumValueOutput {
	return i.ToMonitoringStateEnumValueOutputWithContext(context.Background())
}

func (i MonitoringStateEnumValueArgs) ToMonitoringStateEnumValueOutputWithContext(ctx context.Context) MonitoringStateEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringStateEnumValueOutput)
}

func (i MonitoringStateEnumValueArgs) ToMonitoringStateEnumValuePtrOutput() MonitoringStateEnumValuePtrOutput {
	return i.ToMonitoringStateEnumValuePtrOutputWithContext(context.Background())
}

func (i MonitoringStateEnumValueArgs) ToMonitoringStateEnumValuePtrOutputWithContext(ctx context.Context) MonitoringStateEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringStateEnumValueOutput).ToMonitoringStateEnumValuePtrOutputWithContext(ctx)
}

// MonitoringStateEnumValuePtrInput is an input type that accepts MonitoringStateEnumValueArgs, MonitoringStateEnumValuePtr and MonitoringStateEnumValuePtrOutput values.
// You can construct a concrete instance of `MonitoringStateEnumValuePtrInput` via:
//
//	        MonitoringStateEnumValueArgs{...}
//
//	or:
//
//	        nil
type MonitoringStateEnumValuePtrInput interface {
	pulumi.Input

	ToMonitoringStateEnumValuePtrOutput() MonitoringStateEnumValuePtrOutput
	ToMonitoringStateEnumValuePtrOutputWithContext(context.Context) MonitoringStateEnumValuePtrOutput
}

type monitoringStateEnumValuePtrType MonitoringStateEnumValueArgs

func MonitoringStateEnumValuePtr(v *MonitoringStateEnumValueArgs) MonitoringStateEnumValuePtrInput {
	return (*monitoringStateEnumValuePtrType)(v)
}

func (*monitoringStateEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringStateEnumValue)(nil)).Elem()
}

func (i *monitoringStateEnumValuePtrType) ToMonitoringStateEnumValuePtrOutput() MonitoringStateEnumValuePtrOutput {
	return i.ToMonitoringStateEnumValuePtrOutputWithContext(context.Background())
}

func (i *monitoringStateEnumValuePtrType) ToMonitoringStateEnumValuePtrOutputWithContext(ctx context.Context) MonitoringStateEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringStateEnumValuePtrOutput)
}

// Definition of MonitoringStateEnumValue
type MonitoringStateEnumValueOutput struct{ *pulumi.OutputState }

func (MonitoringStateEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStateEnumValue)(nil)).Elem()
}

func (o MonitoringStateEnumValueOutput) ToMonitoringStateEnumValueOutput() MonitoringStateEnumValueOutput {
	return o
}

func (o MonitoringStateEnumValueOutput) ToMonitoringStateEnumValueOutputWithContext(ctx context.Context) MonitoringStateEnumValueOutput {
	return o
}

func (o MonitoringStateEnumValueOutput) ToMonitoringStateEnumValuePtrOutput() MonitoringStateEnumValuePtrOutput {
	return o.ToMonitoringStateEnumValuePtrOutputWithContext(context.Background())
}

func (o MonitoringStateEnumValueOutput) ToMonitoringStateEnumValuePtrOutputWithContext(ctx context.Context) MonitoringStateEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringStateEnumValue) *MonitoringStateEnumValue {
		return &v
	}).(MonitoringStateEnumValuePtrOutput)
}

// Property value
func (o MonitoringStateEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringStateEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitoringStateEnumValuePtrOutput struct{ *pulumi.OutputState }

func (MonitoringStateEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringStateEnumValue)(nil)).Elem()
}

func (o MonitoringStateEnumValuePtrOutput) ToMonitoringStateEnumValuePtrOutput() MonitoringStateEnumValuePtrOutput {
	return o
}

func (o MonitoringStateEnumValuePtrOutput) ToMonitoringStateEnumValuePtrOutputWithContext(ctx context.Context) MonitoringStateEnumValuePtrOutput {
	return o
}

func (o MonitoringStateEnumValuePtrOutput) Elem() MonitoringStateEnumValueOutput {
	return o.ApplyT(func(v *MonitoringStateEnumValue) MonitoringStateEnumValue {
		if v != nil {
			return *v
		}
		var ret MonitoringStateEnumValue
		return ret
	}).(MonitoringStateEnumValueOutput)
}

// Property value
func (o MonitoringStateEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringStateEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of MonitoringStateEnumValue
type MonitoringStateEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of MonitoringStateEnumValue
type MonitoringStateEnumValueResponseOutput struct{ *pulumi.OutputState }

func (MonitoringStateEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStateEnumValueResponse)(nil)).Elem()
}

func (o MonitoringStateEnumValueResponseOutput) ToMonitoringStateEnumValueResponseOutput() MonitoringStateEnumValueResponseOutput {
	return o
}

func (o MonitoringStateEnumValueResponseOutput) ToMonitoringStateEnumValueResponseOutputWithContext(ctx context.Context) MonitoringStateEnumValueResponseOutput {
	return o
}

// Property value
func (o MonitoringStateEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringStateEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitoringStateEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitoringStateEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringStateEnumValueResponse)(nil)).Elem()
}

func (o MonitoringStateEnumValueResponsePtrOutput) ToMonitoringStateEnumValueResponsePtrOutput() MonitoringStateEnumValueResponsePtrOutput {
	return o
}

func (o MonitoringStateEnumValueResponsePtrOutput) ToMonitoringStateEnumValueResponsePtrOutputWithContext(ctx context.Context) MonitoringStateEnumValueResponsePtrOutput {
	return o
}

func (o MonitoringStateEnumValueResponsePtrOutput) Elem() MonitoringStateEnumValueResponseOutput {
	return o.ApplyT(func(v *MonitoringStateEnumValueResponse) MonitoringStateEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret MonitoringStateEnumValueResponse
		return ret
	}).(MonitoringStateEnumValueResponseOutput)
}

// Property value
func (o MonitoringStateEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringStateEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of MonthlyTransfer
type MonthlyTransfer struct {
	// GbPerMonthAllocated of the Instance.
	GbPerMonthAllocated *string `pulumi:"gbPerMonthAllocated"`
}

// MonthlyTransferInput is an input type that accepts MonthlyTransferArgs and MonthlyTransferOutput values.
// You can construct a concrete instance of `MonthlyTransferInput` via:
//
//	MonthlyTransferArgs{...}
type MonthlyTransferInput interface {
	pulumi.Input

	ToMonthlyTransferOutput() MonthlyTransferOutput
	ToMonthlyTransferOutputWithContext(context.Context) MonthlyTransferOutput
}

// Definition of MonthlyTransfer
type MonthlyTransferArgs struct {
	// GbPerMonthAllocated of the Instance.
	GbPerMonthAllocated pulumi.StringPtrInput `pulumi:"gbPerMonthAllocated"`
}

func (MonthlyTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyTransfer)(nil)).Elem()
}

func (i MonthlyTransferArgs) ToMonthlyTransferOutput() MonthlyTransferOutput {
	return i.ToMonthlyTransferOutputWithContext(context.Background())
}

func (i MonthlyTransferArgs) ToMonthlyTransferOutputWithContext(ctx context.Context) MonthlyTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyTransferOutput)
}

func (i MonthlyTransferArgs) ToMonthlyTransferPtrOutput() MonthlyTransferPtrOutput {
	return i.ToMonthlyTransferPtrOutputWithContext(context.Background())
}

func (i MonthlyTransferArgs) ToMonthlyTransferPtrOutputWithContext(ctx context.Context) MonthlyTransferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyTransferOutput).ToMonthlyTransferPtrOutputWithContext(ctx)
}

// MonthlyTransferPtrInput is an input type that accepts MonthlyTransferArgs, MonthlyTransferPtr and MonthlyTransferPtrOutput values.
// You can construct a concrete instance of `MonthlyTransferPtrInput` via:
//
//	        MonthlyTransferArgs{...}
//
//	or:
//
//	        nil
type MonthlyTransferPtrInput interface {
	pulumi.Input

	ToMonthlyTransferPtrOutput() MonthlyTransferPtrOutput
	ToMonthlyTransferPtrOutputWithContext(context.Context) MonthlyTransferPtrOutput
}

type monthlyTransferPtrType MonthlyTransferArgs

func MonthlyTransferPtr(v *MonthlyTransferArgs) MonthlyTransferPtrInput {
	return (*monthlyTransferPtrType)(v)
}

func (*monthlyTransferPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyTransfer)(nil)).Elem()
}

func (i *monthlyTransferPtrType) ToMonthlyTransferPtrOutput() MonthlyTransferPtrOutput {
	return i.ToMonthlyTransferPtrOutputWithContext(context.Background())
}

func (i *monthlyTransferPtrType) ToMonthlyTransferPtrOutputWithContext(ctx context.Context) MonthlyTransferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyTransferPtrOutput)
}

// Definition of MonthlyTransfer
type MonthlyTransferOutput struct{ *pulumi.OutputState }

func (MonthlyTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyTransfer)(nil)).Elem()
}

func (o MonthlyTransferOutput) ToMonthlyTransferOutput() MonthlyTransferOutput {
	return o
}

func (o MonthlyTransferOutput) ToMonthlyTransferOutputWithContext(ctx context.Context) MonthlyTransferOutput {
	return o
}

func (o MonthlyTransferOutput) ToMonthlyTransferPtrOutput() MonthlyTransferPtrOutput {
	return o.ToMonthlyTransferPtrOutputWithContext(context.Background())
}

func (o MonthlyTransferOutput) ToMonthlyTransferPtrOutputWithContext(ctx context.Context) MonthlyTransferPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonthlyTransfer) *MonthlyTransfer {
		return &v
	}).(MonthlyTransferPtrOutput)
}

// GbPerMonthAllocated of the Instance.
func (o MonthlyTransferOutput) GbPerMonthAllocated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyTransfer) *string { return v.GbPerMonthAllocated }).(pulumi.StringPtrOutput)
}

type MonthlyTransferPtrOutput struct{ *pulumi.OutputState }

func (MonthlyTransferPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyTransfer)(nil)).Elem()
}

func (o MonthlyTransferPtrOutput) ToMonthlyTransferPtrOutput() MonthlyTransferPtrOutput {
	return o
}

func (o MonthlyTransferPtrOutput) ToMonthlyTransferPtrOutputWithContext(ctx context.Context) MonthlyTransferPtrOutput {
	return o
}

func (o MonthlyTransferPtrOutput) Elem() MonthlyTransferOutput {
	return o.ApplyT(func(v *MonthlyTransfer) MonthlyTransfer {
		if v != nil {
			return *v
		}
		var ret MonthlyTransfer
		return ret
	}).(MonthlyTransferOutput)
}

// GbPerMonthAllocated of the Instance.
func (o MonthlyTransferPtrOutput) GbPerMonthAllocated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyTransfer) *string {
		if v == nil {
			return nil
		}
		return v.GbPerMonthAllocated
	}).(pulumi.StringPtrOutput)
}

// Definition of MonthlyTransfer
type MonthlyTransferResponse struct {
	// GbPerMonthAllocated of the Instance.
	GbPerMonthAllocated *string `pulumi:"gbPerMonthAllocated"`
}

// Definition of MonthlyTransfer
type MonthlyTransferResponseOutput struct{ *pulumi.OutputState }

func (MonthlyTransferResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyTransferResponse)(nil)).Elem()
}

func (o MonthlyTransferResponseOutput) ToMonthlyTransferResponseOutput() MonthlyTransferResponseOutput {
	return o
}

func (o MonthlyTransferResponseOutput) ToMonthlyTransferResponseOutputWithContext(ctx context.Context) MonthlyTransferResponseOutput {
	return o
}

// GbPerMonthAllocated of the Instance.
func (o MonthlyTransferResponseOutput) GbPerMonthAllocated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyTransferResponse) *string { return v.GbPerMonthAllocated }).(pulumi.StringPtrOutput)
}

type MonthlyTransferResponsePtrOutput struct{ *pulumi.OutputState }

func (MonthlyTransferResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyTransferResponse)(nil)).Elem()
}

func (o MonthlyTransferResponsePtrOutput) ToMonthlyTransferResponsePtrOutput() MonthlyTransferResponsePtrOutput {
	return o
}

func (o MonthlyTransferResponsePtrOutput) ToMonthlyTransferResponsePtrOutputWithContext(ctx context.Context) MonthlyTransferResponsePtrOutput {
	return o
}

func (o MonthlyTransferResponsePtrOutput) Elem() MonthlyTransferResponseOutput {
	return o.ApplyT(func(v *MonthlyTransferResponse) MonthlyTransferResponse {
		if v != nil {
			return *v
		}
		var ret MonthlyTransferResponse
		return ret
	}).(MonthlyTransferResponseOutput)
}

// GbPerMonthAllocated of the Instance.
func (o MonthlyTransferResponsePtrOutput) GbPerMonthAllocated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyTransferResponse) *string {
		if v == nil {
			return nil
		}
		return v.GbPerMonthAllocated
	}).(pulumi.StringPtrOutput)
}

// Definition of MountPoint
type MountPoint struct {
	// The path on the container to mount the host volume at.
	ContainerPath *string `pulumi:"containerPath"`
	// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.
	ReadOnly *bool `pulumi:"readOnly"`
	// The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.
	SourceVolume *string `pulumi:"sourceVolume"`
}

// MountPointInput is an input type that accepts MountPointArgs and MountPointOutput values.
// You can construct a concrete instance of `MountPointInput` via:
//
//	MountPointArgs{...}
type MountPointInput interface {
	pulumi.Input

	ToMountPointOutput() MountPointOutput
	ToMountPointOutputWithContext(context.Context) MountPointOutput
}

// Definition of MountPoint
type MountPointArgs struct {
	// The path on the container to mount the host volume at.
	ContainerPath pulumi.StringPtrInput `pulumi:"containerPath"`
	// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.
	SourceVolume pulumi.StringPtrInput `pulumi:"sourceVolume"`
}

func (MountPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPoint)(nil)).Elem()
}

func (i MountPointArgs) ToMountPointOutput() MountPointOutput {
	return i.ToMountPointOutputWithContext(context.Background())
}

func (i MountPointArgs) ToMountPointOutputWithContext(ctx context.Context) MountPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointOutput)
}

// MountPointArrayInput is an input type that accepts MountPointArray and MountPointArrayOutput values.
// You can construct a concrete instance of `MountPointArrayInput` via:
//
//	MountPointArray{ MountPointArgs{...} }
type MountPointArrayInput interface {
	pulumi.Input

	ToMountPointArrayOutput() MountPointArrayOutput
	ToMountPointArrayOutputWithContext(context.Context) MountPointArrayOutput
}

type MountPointArray []MountPointInput

func (MountPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPoint)(nil)).Elem()
}

func (i MountPointArray) ToMountPointArrayOutput() MountPointArrayOutput {
	return i.ToMountPointArrayOutputWithContext(context.Background())
}

func (i MountPointArray) ToMountPointArrayOutputWithContext(ctx context.Context) MountPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointArrayOutput)
}

// Definition of MountPoint
type MountPointOutput struct{ *pulumi.OutputState }

func (MountPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPoint)(nil)).Elem()
}

func (o MountPointOutput) ToMountPointOutput() MountPointOutput {
	return o
}

func (o MountPointOutput) ToMountPointOutputWithContext(ctx context.Context) MountPointOutput {
	return o
}

// The path on the container to mount the host volume at.
func (o MountPointOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPoint) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

// If this value is “true“, the container has read-only access to the volume. If this value is “false“, then the container can write to the volume. The default value is “false“.
func (o MountPointOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MountPoint) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The name of the volume to mount. Must be a volume name referenced in the “name“ parameter of task definition “volume“.
func (o MountPointOutput) SourceVolume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPoint) *string { return v.SourceVolume }).(pulumi.StringPtrOutput)
}

type MountPointArrayOutput struct{ *pulumi.OutputState }

func (MountPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPoint)(nil)).Elem()
}

func (o MountPointArrayOutput) ToMountPointArrayOutput() MountPointArrayOutput {
	return o
}

func (o MountPointArrayOutput) ToMountPointArrayOutputWithContext(ctx context.Context) MountPointArrayOutput {
	return o
}

func (o MountPointArrayOutput) Index(i pulumi.IntInput) MountPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountPoint {
		return vs[0].([]MountPoint)[vs[1].(int)]
	}).(MountPointOutput)
}

// Definition of MountPoint
type MountPointResponse struct {
	// The path on the container to mount the host volume at.
	ContainerPath *string `pulumi:"containerPath"`
	// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.
	ReadOnly *bool `pulumi:"readOnly"`
	// The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.
	SourceVolume *string `pulumi:"sourceVolume"`
}

// Definition of MountPoint
type MountPointResponseOutput struct{ *pulumi.OutputState }

func (MountPointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointResponse)(nil)).Elem()
}

func (o MountPointResponseOutput) ToMountPointResponseOutput() MountPointResponseOutput {
	return o
}

func (o MountPointResponseOutput) ToMountPointResponseOutputWithContext(ctx context.Context) MountPointResponseOutput {
	return o
}

// The path on the container to mount the host volume at.
func (o MountPointResponseOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPointResponse) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

// If this value is “true“, the container has read-only access to the volume. If this value is “false“, then the container can write to the volume. The default value is “false“.
func (o MountPointResponseOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MountPointResponse) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The name of the volume to mount. Must be a volume name referenced in the “name“ parameter of task definition “volume“.
func (o MountPointResponseOutput) SourceVolume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPointResponse) *string { return v.SourceVolume }).(pulumi.StringPtrOutput)
}

type MountPointResponseArrayOutput struct{ *pulumi.OutputState }

func (MountPointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointResponse)(nil)).Elem()
}

func (o MountPointResponseArrayOutput) ToMountPointResponseArrayOutput() MountPointResponseArrayOutput {
	return o
}

func (o MountPointResponseArrayOutput) ToMountPointResponseArrayOutputWithContext(ctx context.Context) MountPointResponseArrayOutput {
	return o
}

func (o MountPointResponseArrayOutput) Index(i pulumi.IntInput) MountPointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountPointResponse {
		return vs[0].([]MountPointResponse)[vs[1].(int)]
	}).(MountPointResponseOutput)
}

// Definition of MutualAuthentication
type MutualAuthentication struct {
	// Indicates whether expired client certificates are ignored.
	IgnoreClientCertificateExpiry *bool `pulumi:"ignoreClientCertificateExpiry"`
	// The client certificate handling method. Options are ``off``, ``passthrough`` or ``verify``. The default value is ``off``.
	Mode *string `pulumi:"mode"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn *string `pulumi:"trustStoreArn"`
}

// MutualAuthenticationInput is an input type that accepts MutualAuthenticationArgs and MutualAuthenticationOutput values.
// You can construct a concrete instance of `MutualAuthenticationInput` via:
//
//	MutualAuthenticationArgs{...}
type MutualAuthenticationInput interface {
	pulumi.Input

	ToMutualAuthenticationOutput() MutualAuthenticationOutput
	ToMutualAuthenticationOutputWithContext(context.Context) MutualAuthenticationOutput
}

// Definition of MutualAuthentication
type MutualAuthenticationArgs struct {
	// Indicates whether expired client certificates are ignored.
	IgnoreClientCertificateExpiry pulumi.BoolPtrInput `pulumi:"ignoreClientCertificateExpiry"`
	// The client certificate handling method. Options are ``off``, ``passthrough`` or ``verify``. The default value is ``off``.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn pulumi.StringPtrInput `pulumi:"trustStoreArn"`
}

func (MutualAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MutualAuthentication)(nil)).Elem()
}

func (i MutualAuthenticationArgs) ToMutualAuthenticationOutput() MutualAuthenticationOutput {
	return i.ToMutualAuthenticationOutputWithContext(context.Background())
}

func (i MutualAuthenticationArgs) ToMutualAuthenticationOutputWithContext(ctx context.Context) MutualAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutualAuthenticationOutput)
}

func (i MutualAuthenticationArgs) ToMutualAuthenticationPtrOutput() MutualAuthenticationPtrOutput {
	return i.ToMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (i MutualAuthenticationArgs) ToMutualAuthenticationPtrOutputWithContext(ctx context.Context) MutualAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutualAuthenticationOutput).ToMutualAuthenticationPtrOutputWithContext(ctx)
}

// MutualAuthenticationPtrInput is an input type that accepts MutualAuthenticationArgs, MutualAuthenticationPtr and MutualAuthenticationPtrOutput values.
// You can construct a concrete instance of `MutualAuthenticationPtrInput` via:
//
//	        MutualAuthenticationArgs{...}
//
//	or:
//
//	        nil
type MutualAuthenticationPtrInput interface {
	pulumi.Input

	ToMutualAuthenticationPtrOutput() MutualAuthenticationPtrOutput
	ToMutualAuthenticationPtrOutputWithContext(context.Context) MutualAuthenticationPtrOutput
}

type mutualAuthenticationPtrType MutualAuthenticationArgs

func MutualAuthenticationPtr(v *MutualAuthenticationArgs) MutualAuthenticationPtrInput {
	return (*mutualAuthenticationPtrType)(v)
}

func (*mutualAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MutualAuthentication)(nil)).Elem()
}

func (i *mutualAuthenticationPtrType) ToMutualAuthenticationPtrOutput() MutualAuthenticationPtrOutput {
	return i.ToMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (i *mutualAuthenticationPtrType) ToMutualAuthenticationPtrOutputWithContext(ctx context.Context) MutualAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutualAuthenticationPtrOutput)
}

// Definition of MutualAuthentication
type MutualAuthenticationOutput struct{ *pulumi.OutputState }

func (MutualAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MutualAuthentication)(nil)).Elem()
}

func (o MutualAuthenticationOutput) ToMutualAuthenticationOutput() MutualAuthenticationOutput {
	return o
}

func (o MutualAuthenticationOutput) ToMutualAuthenticationOutputWithContext(ctx context.Context) MutualAuthenticationOutput {
	return o
}

func (o MutualAuthenticationOutput) ToMutualAuthenticationPtrOutput() MutualAuthenticationPtrOutput {
	return o.ToMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (o MutualAuthenticationOutput) ToMutualAuthenticationPtrOutputWithContext(ctx context.Context) MutualAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MutualAuthentication) *MutualAuthentication {
		return &v
	}).(MutualAuthenticationPtrOutput)
}

// Indicates whether expired client certificates are ignored.
func (o MutualAuthenticationOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MutualAuthentication) *bool { return v.IgnoreClientCertificateExpiry }).(pulumi.BoolPtrOutput)
}

// The client certificate handling method. Options are “off“, “passthrough“ or “verify“. The default value is “off“.
func (o MutualAuthenticationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MutualAuthentication) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the trust store.
func (o MutualAuthenticationOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MutualAuthentication) *string { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

type MutualAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (MutualAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutualAuthentication)(nil)).Elem()
}

func (o MutualAuthenticationPtrOutput) ToMutualAuthenticationPtrOutput() MutualAuthenticationPtrOutput {
	return o
}

func (o MutualAuthenticationPtrOutput) ToMutualAuthenticationPtrOutputWithContext(ctx context.Context) MutualAuthenticationPtrOutput {
	return o
}

func (o MutualAuthenticationPtrOutput) Elem() MutualAuthenticationOutput {
	return o.ApplyT(func(v *MutualAuthentication) MutualAuthentication {
		if v != nil {
			return *v
		}
		var ret MutualAuthentication
		return ret
	}).(MutualAuthenticationOutput)
}

// Indicates whether expired client certificates are ignored.
func (o MutualAuthenticationPtrOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MutualAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreClientCertificateExpiry
	}).(pulumi.BoolPtrOutput)
}

// The client certificate handling method. Options are “off“, “passthrough“ or “verify“. The default value is “off“.
func (o MutualAuthenticationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutualAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the trust store.
func (o MutualAuthenticationPtrOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutualAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TrustStoreArn
	}).(pulumi.StringPtrOutput)
}

// Definition of MutualAuthentication
type MutualAuthenticationResponse struct {
	// Indicates whether expired client certificates are ignored.
	IgnoreClientCertificateExpiry *bool `pulumi:"ignoreClientCertificateExpiry"`
	// The client certificate handling method. Options are ``off``, ``passthrough`` or ``verify``. The default value is ``off``.
	Mode *string `pulumi:"mode"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn *string `pulumi:"trustStoreArn"`
}

// Definition of MutualAuthentication
type MutualAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (MutualAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MutualAuthenticationResponse)(nil)).Elem()
}

func (o MutualAuthenticationResponseOutput) ToMutualAuthenticationResponseOutput() MutualAuthenticationResponseOutput {
	return o
}

func (o MutualAuthenticationResponseOutput) ToMutualAuthenticationResponseOutputWithContext(ctx context.Context) MutualAuthenticationResponseOutput {
	return o
}

// Indicates whether expired client certificates are ignored.
func (o MutualAuthenticationResponseOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MutualAuthenticationResponse) *bool { return v.IgnoreClientCertificateExpiry }).(pulumi.BoolPtrOutput)
}

// The client certificate handling method. Options are “off“, “passthrough“ or “verify“. The default value is “off“.
func (o MutualAuthenticationResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MutualAuthenticationResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the trust store.
func (o MutualAuthenticationResponseOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MutualAuthenticationResponse) *string { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

type MutualAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (MutualAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutualAuthenticationResponse)(nil)).Elem()
}

func (o MutualAuthenticationResponsePtrOutput) ToMutualAuthenticationResponsePtrOutput() MutualAuthenticationResponsePtrOutput {
	return o
}

func (o MutualAuthenticationResponsePtrOutput) ToMutualAuthenticationResponsePtrOutputWithContext(ctx context.Context) MutualAuthenticationResponsePtrOutput {
	return o
}

func (o MutualAuthenticationResponsePtrOutput) Elem() MutualAuthenticationResponseOutput {
	return o.ApplyT(func(v *MutualAuthenticationResponse) MutualAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret MutualAuthenticationResponse
		return ret
	}).(MutualAuthenticationResponseOutput)
}

// Indicates whether expired client certificates are ignored.
func (o MutualAuthenticationResponsePtrOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MutualAuthenticationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreClientCertificateExpiry
	}).(pulumi.BoolPtrOutput)
}

// The client certificate handling method. Options are “off“, “passthrough“ or “verify“. The default value is “off“.
func (o MutualAuthenticationResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutualAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the trust store.
func (o MutualAuthenticationResponsePtrOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutualAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrustStoreArn
	}).(pulumi.StringPtrOutput)
}

// Definition of NetworkBandwidthGbpsRequest
type NetworkBandwidthGbpsRequest struct {
	// The maximum amount of network bandwidth, in gigabits per second (Gbps).
	Max *int `pulumi:"max"`
	// The minimum amount of network bandwidth, in gigabits per second (Gbps).
	Min *int `pulumi:"min"`
}

// NetworkBandwidthGbpsRequestInput is an input type that accepts NetworkBandwidthGbpsRequestArgs and NetworkBandwidthGbpsRequestOutput values.
// You can construct a concrete instance of `NetworkBandwidthGbpsRequestInput` via:
//
//	NetworkBandwidthGbpsRequestArgs{...}
type NetworkBandwidthGbpsRequestInput interface {
	pulumi.Input

	ToNetworkBandwidthGbpsRequestOutput() NetworkBandwidthGbpsRequestOutput
	ToNetworkBandwidthGbpsRequestOutputWithContext(context.Context) NetworkBandwidthGbpsRequestOutput
}

// Definition of NetworkBandwidthGbpsRequest
type NetworkBandwidthGbpsRequestArgs struct {
	// The maximum amount of network bandwidth, in gigabits per second (Gbps).
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimum amount of network bandwidth, in gigabits per second (Gbps).
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (NetworkBandwidthGbpsRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkBandwidthGbpsRequest)(nil)).Elem()
}

func (i NetworkBandwidthGbpsRequestArgs) ToNetworkBandwidthGbpsRequestOutput() NetworkBandwidthGbpsRequestOutput {
	return i.ToNetworkBandwidthGbpsRequestOutputWithContext(context.Background())
}

func (i NetworkBandwidthGbpsRequestArgs) ToNetworkBandwidthGbpsRequestOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkBandwidthGbpsRequestOutput)
}

func (i NetworkBandwidthGbpsRequestArgs) ToNetworkBandwidthGbpsRequestPtrOutput() NetworkBandwidthGbpsRequestPtrOutput {
	return i.ToNetworkBandwidthGbpsRequestPtrOutputWithContext(context.Background())
}

func (i NetworkBandwidthGbpsRequestArgs) ToNetworkBandwidthGbpsRequestPtrOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkBandwidthGbpsRequestOutput).ToNetworkBandwidthGbpsRequestPtrOutputWithContext(ctx)
}

// NetworkBandwidthGbpsRequestPtrInput is an input type that accepts NetworkBandwidthGbpsRequestArgs, NetworkBandwidthGbpsRequestPtr and NetworkBandwidthGbpsRequestPtrOutput values.
// You can construct a concrete instance of `NetworkBandwidthGbpsRequestPtrInput` via:
//
//	        NetworkBandwidthGbpsRequestArgs{...}
//
//	or:
//
//	        nil
type NetworkBandwidthGbpsRequestPtrInput interface {
	pulumi.Input

	ToNetworkBandwidthGbpsRequestPtrOutput() NetworkBandwidthGbpsRequestPtrOutput
	ToNetworkBandwidthGbpsRequestPtrOutputWithContext(context.Context) NetworkBandwidthGbpsRequestPtrOutput
}

type networkBandwidthGbpsRequestPtrType NetworkBandwidthGbpsRequestArgs

func NetworkBandwidthGbpsRequestPtr(v *NetworkBandwidthGbpsRequestArgs) NetworkBandwidthGbpsRequestPtrInput {
	return (*networkBandwidthGbpsRequestPtrType)(v)
}

func (*networkBandwidthGbpsRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkBandwidthGbpsRequest)(nil)).Elem()
}

func (i *networkBandwidthGbpsRequestPtrType) ToNetworkBandwidthGbpsRequestPtrOutput() NetworkBandwidthGbpsRequestPtrOutput {
	return i.ToNetworkBandwidthGbpsRequestPtrOutputWithContext(context.Background())
}

func (i *networkBandwidthGbpsRequestPtrType) ToNetworkBandwidthGbpsRequestPtrOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkBandwidthGbpsRequestPtrOutput)
}

// Definition of NetworkBandwidthGbpsRequest
type NetworkBandwidthGbpsRequestOutput struct{ *pulumi.OutputState }

func (NetworkBandwidthGbpsRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkBandwidthGbpsRequest)(nil)).Elem()
}

func (o NetworkBandwidthGbpsRequestOutput) ToNetworkBandwidthGbpsRequestOutput() NetworkBandwidthGbpsRequestOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestOutput) ToNetworkBandwidthGbpsRequestOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestOutput) ToNetworkBandwidthGbpsRequestPtrOutput() NetworkBandwidthGbpsRequestPtrOutput {
	return o.ToNetworkBandwidthGbpsRequestPtrOutputWithContext(context.Background())
}

func (o NetworkBandwidthGbpsRequestOutput) ToNetworkBandwidthGbpsRequestPtrOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkBandwidthGbpsRequest) *NetworkBandwidthGbpsRequest {
		return &v
	}).(NetworkBandwidthGbpsRequestPtrOutput)
}

// The maximum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkBandwidthGbpsRequest) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkBandwidthGbpsRequest) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type NetworkBandwidthGbpsRequestPtrOutput struct{ *pulumi.OutputState }

func (NetworkBandwidthGbpsRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkBandwidthGbpsRequest)(nil)).Elem()
}

func (o NetworkBandwidthGbpsRequestPtrOutput) ToNetworkBandwidthGbpsRequestPtrOutput() NetworkBandwidthGbpsRequestPtrOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestPtrOutput) ToNetworkBandwidthGbpsRequestPtrOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestPtrOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestPtrOutput) Elem() NetworkBandwidthGbpsRequestOutput {
	return o.ApplyT(func(v *NetworkBandwidthGbpsRequest) NetworkBandwidthGbpsRequest {
		if v != nil {
			return *v
		}
		var ret NetworkBandwidthGbpsRequest
		return ret
	}).(NetworkBandwidthGbpsRequestOutput)
}

// The maximum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkBandwidthGbpsRequest) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkBandwidthGbpsRequest) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of NetworkBandwidthGbpsRequest
type NetworkBandwidthGbpsRequestResponse struct {
	// The maximum amount of network bandwidth, in gigabits per second (Gbps).
	Max *int `pulumi:"max"`
	// The minimum amount of network bandwidth, in gigabits per second (Gbps).
	Min *int `pulumi:"min"`
}

// Definition of NetworkBandwidthGbpsRequest
type NetworkBandwidthGbpsRequestResponseOutput struct{ *pulumi.OutputState }

func (NetworkBandwidthGbpsRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkBandwidthGbpsRequestResponse)(nil)).Elem()
}

func (o NetworkBandwidthGbpsRequestResponseOutput) ToNetworkBandwidthGbpsRequestResponseOutput() NetworkBandwidthGbpsRequestResponseOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestResponseOutput) ToNetworkBandwidthGbpsRequestResponseOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestResponseOutput {
	return o
}

// The maximum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkBandwidthGbpsRequestResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkBandwidthGbpsRequestResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type NetworkBandwidthGbpsRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkBandwidthGbpsRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkBandwidthGbpsRequestResponse)(nil)).Elem()
}

func (o NetworkBandwidthGbpsRequestResponsePtrOutput) ToNetworkBandwidthGbpsRequestResponsePtrOutput() NetworkBandwidthGbpsRequestResponsePtrOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestResponsePtrOutput) ToNetworkBandwidthGbpsRequestResponsePtrOutputWithContext(ctx context.Context) NetworkBandwidthGbpsRequestResponsePtrOutput {
	return o
}

func (o NetworkBandwidthGbpsRequestResponsePtrOutput) Elem() NetworkBandwidthGbpsRequestResponseOutput {
	return o.ApplyT(func(v *NetworkBandwidthGbpsRequestResponse) NetworkBandwidthGbpsRequestResponse {
		if v != nil {
			return *v
		}
		var ret NetworkBandwidthGbpsRequestResponse
		return ret
	}).(NetworkBandwidthGbpsRequestResponseOutput)
}

// The maximum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkBandwidthGbpsRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of network bandwidth, in gigabits per second (Gbps).
func (o NetworkBandwidthGbpsRequestResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkBandwidthGbpsRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of NetworkConfiguration
type NetworkConfiguration struct {
	// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example ``awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}``
	AwsvpcConfiguration *AwsVpcConfiguration `pulumi:"awsvpcConfiguration"`
}

// NetworkConfigurationInput is an input type that accepts NetworkConfigurationArgs and NetworkConfigurationOutput values.
// You can construct a concrete instance of `NetworkConfigurationInput` via:
//
//	NetworkConfigurationArgs{...}
type NetworkConfigurationInput interface {
	pulumi.Input

	ToNetworkConfigurationOutput() NetworkConfigurationOutput
	ToNetworkConfigurationOutputWithContext(context.Context) NetworkConfigurationOutput
}

// Definition of NetworkConfiguration
type NetworkConfigurationArgs struct {
	// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example ``awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}``
	AwsvpcConfiguration AwsVpcConfigurationPtrInput `pulumi:"awsvpcConfiguration"`
}

func (NetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfiguration)(nil)).Elem()
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationOutput() NetworkConfigurationOutput {
	return i.ToNetworkConfigurationOutputWithContext(context.Background())
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationOutputWithContext(ctx context.Context) NetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConfigurationOutput)
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput {
	return i.ToNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationPtrOutputWithContext(ctx context.Context) NetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConfigurationOutput).ToNetworkConfigurationPtrOutputWithContext(ctx)
}

// NetworkConfigurationPtrInput is an input type that accepts NetworkConfigurationArgs, NetworkConfigurationPtr and NetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkConfigurationPtrInput` via:
//
//	        NetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type NetworkConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput
	ToNetworkConfigurationPtrOutputWithContext(context.Context) NetworkConfigurationPtrOutput
}

type networkConfigurationPtrType NetworkConfigurationArgs

func NetworkConfigurationPtr(v *NetworkConfigurationArgs) NetworkConfigurationPtrInput {
	return (*networkConfigurationPtrType)(v)
}

func (*networkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfiguration)(nil)).Elem()
}

func (i *networkConfigurationPtrType) ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput {
	return i.ToNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkConfigurationPtrType) ToNetworkConfigurationPtrOutputWithContext(ctx context.Context) NetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConfigurationPtrOutput)
}

// Definition of NetworkConfiguration
type NetworkConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfiguration)(nil)).Elem()
}

func (o NetworkConfigurationOutput) ToNetworkConfigurationOutput() NetworkConfigurationOutput {
	return o
}

func (o NetworkConfigurationOutput) ToNetworkConfigurationOutputWithContext(ctx context.Context) NetworkConfigurationOutput {
	return o
}

func (o NetworkConfigurationOutput) ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput {
	return o.ToNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkConfigurationOutput) ToNetworkConfigurationPtrOutputWithContext(ctx context.Context) NetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConfiguration) *NetworkConfiguration {
		return &v
	}).(NetworkConfigurationPtrOutput)
}

// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example “awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}“
func (o NetworkConfigurationOutput) AwsvpcConfiguration() AwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkConfiguration) *AwsVpcConfiguration { return v.AwsvpcConfiguration }).(AwsVpcConfigurationPtrOutput)
}

type NetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfiguration)(nil)).Elem()
}

func (o NetworkConfigurationPtrOutput) ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput {
	return o
}

func (o NetworkConfigurationPtrOutput) ToNetworkConfigurationPtrOutputWithContext(ctx context.Context) NetworkConfigurationPtrOutput {
	return o
}

func (o NetworkConfigurationPtrOutput) Elem() NetworkConfigurationOutput {
	return o.ApplyT(func(v *NetworkConfiguration) NetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret NetworkConfiguration
		return ret
	}).(NetworkConfigurationOutput)
}

// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example “awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}“
func (o NetworkConfigurationPtrOutput) AwsvpcConfiguration() AwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *NetworkConfiguration) *AwsVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.AwsvpcConfiguration
	}).(AwsVpcConfigurationPtrOutput)
}

// Definition of NetworkConfiguration
type NetworkConfigurationResponse struct {
	// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example ``awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}``
	AwsvpcConfiguration *AwsVpcConfigurationResponse `pulumi:"awsvpcConfiguration"`
}

// Definition of NetworkConfiguration
type NetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigurationResponse)(nil)).Elem()
}

func (o NetworkConfigurationResponseOutput) ToNetworkConfigurationResponseOutput() NetworkConfigurationResponseOutput {
	return o
}

func (o NetworkConfigurationResponseOutput) ToNetworkConfigurationResponseOutputWithContext(ctx context.Context) NetworkConfigurationResponseOutput {
	return o
}

// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example “awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}“
func (o NetworkConfigurationResponseOutput) AwsvpcConfiguration() AwsVpcConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkConfigurationResponse) *AwsVpcConfigurationResponse { return v.AwsvpcConfiguration }).(AwsVpcConfigurationResponsePtrOutput)
}

type NetworkConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfigurationResponse)(nil)).Elem()
}

func (o NetworkConfigurationResponsePtrOutput) ToNetworkConfigurationResponsePtrOutput() NetworkConfigurationResponsePtrOutput {
	return o
}

func (o NetworkConfigurationResponsePtrOutput) ToNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkConfigurationResponsePtrOutput {
	return o
}

func (o NetworkConfigurationResponsePtrOutput) Elem() NetworkConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkConfigurationResponse) NetworkConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret NetworkConfigurationResponse
		return ret
	}).(NetworkConfigurationResponseOutput)
}

// The VPC subnets and security groups that are associated with a task.  All specified subnets and security groups must be from the same VPC. An object representing the networking details for a task or service. For example “awsvpcConfiguration={subnets=['subnet-12344321'],securityGroups=['sg-12344321']}“
func (o NetworkConfigurationResponsePtrOutput) AwsvpcConfiguration() AwsVpcConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *NetworkConfigurationResponse) *AwsVpcConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AwsvpcConfiguration
	}).(AwsVpcConfigurationResponsePtrOutput)
}

// Definition of NetworkFirewallFirewallPolicy
type NetworkFirewallFirewallPolicyProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsNetworkFirewallFirewallPolicyProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// NetworkFirewallFirewallPolicyPropertiesInput is an input type that accepts NetworkFirewallFirewallPolicyPropertiesArgs and NetworkFirewallFirewallPolicyPropertiesOutput values.
// You can construct a concrete instance of `NetworkFirewallFirewallPolicyPropertiesInput` via:
//
//	NetworkFirewallFirewallPolicyPropertiesArgs{...}
type NetworkFirewallFirewallPolicyPropertiesInput interface {
	pulumi.Input

	ToNetworkFirewallFirewallPolicyPropertiesOutput() NetworkFirewallFirewallPolicyPropertiesOutput
	ToNetworkFirewallFirewallPolicyPropertiesOutputWithContext(context.Context) NetworkFirewallFirewallPolicyPropertiesOutput
}

// Definition of NetworkFirewallFirewallPolicy
type NetworkFirewallFirewallPolicyPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsNetworkFirewallFirewallPolicyPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (NetworkFirewallFirewallPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallFirewallPolicyProperties)(nil)).Elem()
}

func (i NetworkFirewallFirewallPolicyPropertiesArgs) ToNetworkFirewallFirewallPolicyPropertiesOutput() NetworkFirewallFirewallPolicyPropertiesOutput {
	return i.ToNetworkFirewallFirewallPolicyPropertiesOutputWithContext(context.Background())
}

func (i NetworkFirewallFirewallPolicyPropertiesArgs) ToNetworkFirewallFirewallPolicyPropertiesOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallFirewallPolicyPropertiesOutput)
}

func (i NetworkFirewallFirewallPolicyPropertiesArgs) ToNetworkFirewallFirewallPolicyPropertiesPtrOutput() NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return i.ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i NetworkFirewallFirewallPolicyPropertiesArgs) ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallFirewallPolicyPropertiesOutput).ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(ctx)
}

// NetworkFirewallFirewallPolicyPropertiesPtrInput is an input type that accepts NetworkFirewallFirewallPolicyPropertiesArgs, NetworkFirewallFirewallPolicyPropertiesPtr and NetworkFirewallFirewallPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `NetworkFirewallFirewallPolicyPropertiesPtrInput` via:
//
//	        NetworkFirewallFirewallPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type NetworkFirewallFirewallPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToNetworkFirewallFirewallPolicyPropertiesPtrOutput() NetworkFirewallFirewallPolicyPropertiesPtrOutput
	ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(context.Context) NetworkFirewallFirewallPolicyPropertiesPtrOutput
}

type networkFirewallFirewallPolicyPropertiesPtrType NetworkFirewallFirewallPolicyPropertiesArgs

func NetworkFirewallFirewallPolicyPropertiesPtr(v *NetworkFirewallFirewallPolicyPropertiesArgs) NetworkFirewallFirewallPolicyPropertiesPtrInput {
	return (*networkFirewallFirewallPolicyPropertiesPtrType)(v)
}

func (*networkFirewallFirewallPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallFirewallPolicyProperties)(nil)).Elem()
}

func (i *networkFirewallFirewallPolicyPropertiesPtrType) ToNetworkFirewallFirewallPolicyPropertiesPtrOutput() NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return i.ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *networkFirewallFirewallPolicyPropertiesPtrType) ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallFirewallPolicyPropertiesPtrOutput)
}

// Definition of NetworkFirewallFirewallPolicy
type NetworkFirewallFirewallPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (NetworkFirewallFirewallPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallFirewallPolicyProperties)(nil)).Elem()
}

func (o NetworkFirewallFirewallPolicyPropertiesOutput) ToNetworkFirewallFirewallPolicyPropertiesOutput() NetworkFirewallFirewallPolicyPropertiesOutput {
	return o
}

func (o NetworkFirewallFirewallPolicyPropertiesOutput) ToNetworkFirewallFirewallPolicyPropertiesOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesOutput {
	return o
}

func (o NetworkFirewallFirewallPolicyPropertiesOutput) ToNetworkFirewallFirewallPolicyPropertiesPtrOutput() NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return o.ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o NetworkFirewallFirewallPolicyPropertiesOutput) ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkFirewallFirewallPolicyProperties) *NetworkFirewallFirewallPolicyProperties {
		return &v
	}).(NetworkFirewallFirewallPolicyPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallFirewallPolicyPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallFirewallPolicyPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallFirewallPolicyPropertiesOutput) AwsProperties() AwsNetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *AwsNetworkFirewallFirewallPolicyProperties {
		return v.AwsProperties
	}).(AwsNetworkFirewallFirewallPolicyPropertiesPtrOutput)
}

// AWS Region
func (o NetworkFirewallFirewallPolicyPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallFirewallPolicyPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallFirewallPolicyPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallFirewallPolicyPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallFirewallPolicyPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type NetworkFirewallFirewallPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NetworkFirewallFirewallPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallFirewallPolicyProperties)(nil)).Elem()
}

func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) ToNetworkFirewallFirewallPolicyPropertiesPtrOutput() NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return o
}

func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) ToNetworkFirewallFirewallPolicyPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return o
}

func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) Elem() NetworkFirewallFirewallPolicyPropertiesOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) NetworkFirewallFirewallPolicyProperties {
		if v != nil {
			return *v
		}
		var ret NetworkFirewallFirewallPolicyProperties
		return ret
	}).(NetworkFirewallFirewallPolicyPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) AwsProperties() AwsNetworkFirewallFirewallPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *AwsNetworkFirewallFirewallPolicyProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsNetworkFirewallFirewallPolicyPropertiesPtrOutput)
}

// AWS Region
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallFirewallPolicyPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of NetworkFirewallFirewallPolicy
type NetworkFirewallFirewallPolicyPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsNetworkFirewallFirewallPolicyPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of NetworkFirewallFirewallPolicy
type NetworkFirewallFirewallPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkFirewallFirewallPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallFirewallPolicyPropertiesResponse)(nil)).Elem()
}

func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) ToNetworkFirewallFirewallPolicyPropertiesResponseOutput() NetworkFirewallFirewallPolicyPropertiesResponseOutput {
	return o
}

func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) ToNetworkFirewallFirewallPolicyPropertiesResponseOutputWithContext(ctx context.Context) NetworkFirewallFirewallPolicyPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) AwsProperties() AwsNetworkFirewallFirewallPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *AwsNetworkFirewallFirewallPolicyPropertiesResponse {
		return v.AwsProperties
	}).(AwsNetworkFirewallFirewallPolicyPropertiesResponsePtrOutput)
}

// AWS Region
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallFirewallPolicyPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPolicyPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of NetworkFirewallFirewall
type NetworkFirewallFirewallProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsNetworkFirewallFirewallProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// NetworkFirewallFirewallPropertiesInput is an input type that accepts NetworkFirewallFirewallPropertiesArgs and NetworkFirewallFirewallPropertiesOutput values.
// You can construct a concrete instance of `NetworkFirewallFirewallPropertiesInput` via:
//
//	NetworkFirewallFirewallPropertiesArgs{...}
type NetworkFirewallFirewallPropertiesInput interface {
	pulumi.Input

	ToNetworkFirewallFirewallPropertiesOutput() NetworkFirewallFirewallPropertiesOutput
	ToNetworkFirewallFirewallPropertiesOutputWithContext(context.Context) NetworkFirewallFirewallPropertiesOutput
}

// Definition of NetworkFirewallFirewall
type NetworkFirewallFirewallPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsNetworkFirewallFirewallPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (NetworkFirewallFirewallPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallFirewallProperties)(nil)).Elem()
}

func (i NetworkFirewallFirewallPropertiesArgs) ToNetworkFirewallFirewallPropertiesOutput() NetworkFirewallFirewallPropertiesOutput {
	return i.ToNetworkFirewallFirewallPropertiesOutputWithContext(context.Background())
}

func (i NetworkFirewallFirewallPropertiesArgs) ToNetworkFirewallFirewallPropertiesOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallFirewallPropertiesOutput)
}

func (i NetworkFirewallFirewallPropertiesArgs) ToNetworkFirewallFirewallPropertiesPtrOutput() NetworkFirewallFirewallPropertiesPtrOutput {
	return i.ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(context.Background())
}

func (i NetworkFirewallFirewallPropertiesArgs) ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallFirewallPropertiesOutput).ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(ctx)
}

// NetworkFirewallFirewallPropertiesPtrInput is an input type that accepts NetworkFirewallFirewallPropertiesArgs, NetworkFirewallFirewallPropertiesPtr and NetworkFirewallFirewallPropertiesPtrOutput values.
// You can construct a concrete instance of `NetworkFirewallFirewallPropertiesPtrInput` via:
//
//	        NetworkFirewallFirewallPropertiesArgs{...}
//
//	or:
//
//	        nil
type NetworkFirewallFirewallPropertiesPtrInput interface {
	pulumi.Input

	ToNetworkFirewallFirewallPropertiesPtrOutput() NetworkFirewallFirewallPropertiesPtrOutput
	ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(context.Context) NetworkFirewallFirewallPropertiesPtrOutput
}

type networkFirewallFirewallPropertiesPtrType NetworkFirewallFirewallPropertiesArgs

func NetworkFirewallFirewallPropertiesPtr(v *NetworkFirewallFirewallPropertiesArgs) NetworkFirewallFirewallPropertiesPtrInput {
	return (*networkFirewallFirewallPropertiesPtrType)(v)
}

func (*networkFirewallFirewallPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallFirewallProperties)(nil)).Elem()
}

func (i *networkFirewallFirewallPropertiesPtrType) ToNetworkFirewallFirewallPropertiesPtrOutput() NetworkFirewallFirewallPropertiesPtrOutput {
	return i.ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(context.Background())
}

func (i *networkFirewallFirewallPropertiesPtrType) ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallFirewallPropertiesPtrOutput)
}

// Definition of NetworkFirewallFirewall
type NetworkFirewallFirewallPropertiesOutput struct{ *pulumi.OutputState }

func (NetworkFirewallFirewallPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallFirewallProperties)(nil)).Elem()
}

func (o NetworkFirewallFirewallPropertiesOutput) ToNetworkFirewallFirewallPropertiesOutput() NetworkFirewallFirewallPropertiesOutput {
	return o
}

func (o NetworkFirewallFirewallPropertiesOutput) ToNetworkFirewallFirewallPropertiesOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesOutput {
	return o
}

func (o NetworkFirewallFirewallPropertiesOutput) ToNetworkFirewallFirewallPropertiesPtrOutput() NetworkFirewallFirewallPropertiesPtrOutput {
	return o.ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(context.Background())
}

func (o NetworkFirewallFirewallPropertiesOutput) ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkFirewallFirewallProperties) *NetworkFirewallFirewallProperties {
		return &v
	}).(NetworkFirewallFirewallPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallFirewallPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallFirewallPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallFirewallPropertiesOutput) AwsProperties() AwsNetworkFirewallFirewallPropertiesPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *AwsNetworkFirewallFirewallProperties {
		return v.AwsProperties
	}).(AwsNetworkFirewallFirewallPropertiesPtrOutput)
}

// AWS Region
func (o NetworkFirewallFirewallPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallFirewallPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallFirewallPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallFirewallPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallFirewallPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type NetworkFirewallFirewallPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NetworkFirewallFirewallPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallFirewallProperties)(nil)).Elem()
}

func (o NetworkFirewallFirewallPropertiesPtrOutput) ToNetworkFirewallFirewallPropertiesPtrOutput() NetworkFirewallFirewallPropertiesPtrOutput {
	return o
}

func (o NetworkFirewallFirewallPropertiesPtrOutput) ToNetworkFirewallFirewallPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesPtrOutput {
	return o
}

func (o NetworkFirewallFirewallPropertiesPtrOutput) Elem() NetworkFirewallFirewallPropertiesOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) NetworkFirewallFirewallProperties {
		if v != nil {
			return *v
		}
		var ret NetworkFirewallFirewallProperties
		return ret
	}).(NetworkFirewallFirewallPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallFirewallPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallFirewallPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallFirewallPropertiesPtrOutput) AwsProperties() AwsNetworkFirewallFirewallPropertiesPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *AwsNetworkFirewallFirewallProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsNetworkFirewallFirewallPropertiesPtrOutput)
}

// AWS Region
func (o NetworkFirewallFirewallPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallFirewallPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallFirewallPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallFirewallPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallFirewallPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallFirewallProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of NetworkFirewallFirewall
type NetworkFirewallFirewallPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsNetworkFirewallFirewallPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of NetworkFirewallFirewall
type NetworkFirewallFirewallPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkFirewallFirewallPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallFirewallPropertiesResponse)(nil)).Elem()
}

func (o NetworkFirewallFirewallPropertiesResponseOutput) ToNetworkFirewallFirewallPropertiesResponseOutput() NetworkFirewallFirewallPropertiesResponseOutput {
	return o
}

func (o NetworkFirewallFirewallPropertiesResponseOutput) ToNetworkFirewallFirewallPropertiesResponseOutputWithContext(ctx context.Context) NetworkFirewallFirewallPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallFirewallPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallFirewallPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallFirewallPropertiesResponseOutput) AwsProperties() AwsNetworkFirewallFirewallPropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *AwsNetworkFirewallFirewallPropertiesResponse {
		return v.AwsProperties
	}).(AwsNetworkFirewallFirewallPropertiesResponsePtrOutput)
}

// AWS Region
func (o NetworkFirewallFirewallPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallFirewallPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallFirewallPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o NetworkFirewallFirewallPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallFirewallPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallFirewallPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallFirewallPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of NetworkFirewallRuleGroup
type NetworkFirewallRuleGroupProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsNetworkFirewallRuleGroupProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// NetworkFirewallRuleGroupPropertiesInput is an input type that accepts NetworkFirewallRuleGroupPropertiesArgs and NetworkFirewallRuleGroupPropertiesOutput values.
// You can construct a concrete instance of `NetworkFirewallRuleGroupPropertiesInput` via:
//
//	NetworkFirewallRuleGroupPropertiesArgs{...}
type NetworkFirewallRuleGroupPropertiesInput interface {
	pulumi.Input

	ToNetworkFirewallRuleGroupPropertiesOutput() NetworkFirewallRuleGroupPropertiesOutput
	ToNetworkFirewallRuleGroupPropertiesOutputWithContext(context.Context) NetworkFirewallRuleGroupPropertiesOutput
}

// Definition of NetworkFirewallRuleGroup
type NetworkFirewallRuleGroupPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsNetworkFirewallRuleGroupPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (NetworkFirewallRuleGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallRuleGroupProperties)(nil)).Elem()
}

func (i NetworkFirewallRuleGroupPropertiesArgs) ToNetworkFirewallRuleGroupPropertiesOutput() NetworkFirewallRuleGroupPropertiesOutput {
	return i.ToNetworkFirewallRuleGroupPropertiesOutputWithContext(context.Background())
}

func (i NetworkFirewallRuleGroupPropertiesArgs) ToNetworkFirewallRuleGroupPropertiesOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallRuleGroupPropertiesOutput)
}

func (i NetworkFirewallRuleGroupPropertiesArgs) ToNetworkFirewallRuleGroupPropertiesPtrOutput() NetworkFirewallRuleGroupPropertiesPtrOutput {
	return i.ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i NetworkFirewallRuleGroupPropertiesArgs) ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallRuleGroupPropertiesOutput).ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(ctx)
}

// NetworkFirewallRuleGroupPropertiesPtrInput is an input type that accepts NetworkFirewallRuleGroupPropertiesArgs, NetworkFirewallRuleGroupPropertiesPtr and NetworkFirewallRuleGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `NetworkFirewallRuleGroupPropertiesPtrInput` via:
//
//	        NetworkFirewallRuleGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type NetworkFirewallRuleGroupPropertiesPtrInput interface {
	pulumi.Input

	ToNetworkFirewallRuleGroupPropertiesPtrOutput() NetworkFirewallRuleGroupPropertiesPtrOutput
	ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(context.Context) NetworkFirewallRuleGroupPropertiesPtrOutput
}

type networkFirewallRuleGroupPropertiesPtrType NetworkFirewallRuleGroupPropertiesArgs

func NetworkFirewallRuleGroupPropertiesPtr(v *NetworkFirewallRuleGroupPropertiesArgs) NetworkFirewallRuleGroupPropertiesPtrInput {
	return (*networkFirewallRuleGroupPropertiesPtrType)(v)
}

func (*networkFirewallRuleGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallRuleGroupProperties)(nil)).Elem()
}

func (i *networkFirewallRuleGroupPropertiesPtrType) ToNetworkFirewallRuleGroupPropertiesPtrOutput() NetworkFirewallRuleGroupPropertiesPtrOutput {
	return i.ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *networkFirewallRuleGroupPropertiesPtrType) ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFirewallRuleGroupPropertiesPtrOutput)
}

// Definition of NetworkFirewallRuleGroup
type NetworkFirewallRuleGroupPropertiesOutput struct{ *pulumi.OutputState }

func (NetworkFirewallRuleGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallRuleGroupProperties)(nil)).Elem()
}

func (o NetworkFirewallRuleGroupPropertiesOutput) ToNetworkFirewallRuleGroupPropertiesOutput() NetworkFirewallRuleGroupPropertiesOutput {
	return o
}

func (o NetworkFirewallRuleGroupPropertiesOutput) ToNetworkFirewallRuleGroupPropertiesOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesOutput {
	return o
}

func (o NetworkFirewallRuleGroupPropertiesOutput) ToNetworkFirewallRuleGroupPropertiesPtrOutput() NetworkFirewallRuleGroupPropertiesPtrOutput {
	return o.ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o NetworkFirewallRuleGroupPropertiesOutput) ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkFirewallRuleGroupProperties) *NetworkFirewallRuleGroupProperties {
		return &v
	}).(NetworkFirewallRuleGroupPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallRuleGroupPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallRuleGroupPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallRuleGroupPropertiesOutput) AwsProperties() AwsNetworkFirewallRuleGroupPropertiesPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *AwsNetworkFirewallRuleGroupProperties {
		return v.AwsProperties
	}).(AwsNetworkFirewallRuleGroupPropertiesPtrOutput)
}

// AWS Region
func (o NetworkFirewallRuleGroupPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallRuleGroupPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallRuleGroupPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallRuleGroupPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallRuleGroupPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type NetworkFirewallRuleGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NetworkFirewallRuleGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallRuleGroupProperties)(nil)).Elem()
}

func (o NetworkFirewallRuleGroupPropertiesPtrOutput) ToNetworkFirewallRuleGroupPropertiesPtrOutput() NetworkFirewallRuleGroupPropertiesPtrOutput {
	return o
}

func (o NetworkFirewallRuleGroupPropertiesPtrOutput) ToNetworkFirewallRuleGroupPropertiesPtrOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesPtrOutput {
	return o
}

func (o NetworkFirewallRuleGroupPropertiesPtrOutput) Elem() NetworkFirewallRuleGroupPropertiesOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) NetworkFirewallRuleGroupProperties {
		if v != nil {
			return *v
		}
		var ret NetworkFirewallRuleGroupProperties
		return ret
	}).(NetworkFirewallRuleGroupPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) AwsProperties() AwsNetworkFirewallRuleGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *AwsNetworkFirewallRuleGroupProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsNetworkFirewallRuleGroupPropertiesPtrOutput)
}

// AWS Region
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallRuleGroupPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFirewallRuleGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of NetworkFirewallRuleGroup
type NetworkFirewallRuleGroupPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsNetworkFirewallRuleGroupPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of NetworkFirewallRuleGroup
type NetworkFirewallRuleGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkFirewallRuleGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallRuleGroupPropertiesResponse)(nil)).Elem()
}

func (o NetworkFirewallRuleGroupPropertiesResponseOutput) ToNetworkFirewallRuleGroupPropertiesResponseOutput() NetworkFirewallRuleGroupPropertiesResponseOutput {
	return o
}

func (o NetworkFirewallRuleGroupPropertiesResponseOutput) ToNetworkFirewallRuleGroupPropertiesResponseOutputWithContext(ctx context.Context) NetworkFirewallRuleGroupPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) AwsProperties() AwsNetworkFirewallRuleGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *AwsNetworkFirewallRuleGroupPropertiesResponse {
		return v.AwsProperties
	}).(AwsNetworkFirewallRuleGroupPropertiesResponsePtrOutput)
}

// AWS Region
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o NetworkFirewallRuleGroupPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkFirewallRuleGroupPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of NetworkInterfaceCountRequest
type NetworkInterfaceCountRequest struct {
	// The maximum number of network interfaces.
	Max *int `pulumi:"max"`
	// The minimum number of network interfaces.
	Min *int `pulumi:"min"`
}

// NetworkInterfaceCountRequestInput is an input type that accepts NetworkInterfaceCountRequestArgs and NetworkInterfaceCountRequestOutput values.
// You can construct a concrete instance of `NetworkInterfaceCountRequestInput` via:
//
//	NetworkInterfaceCountRequestArgs{...}
type NetworkInterfaceCountRequestInput interface {
	pulumi.Input

	ToNetworkInterfaceCountRequestOutput() NetworkInterfaceCountRequestOutput
	ToNetworkInterfaceCountRequestOutputWithContext(context.Context) NetworkInterfaceCountRequestOutput
}

// Definition of NetworkInterfaceCountRequest
type NetworkInterfaceCountRequestArgs struct {
	// The maximum number of network interfaces.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimum number of network interfaces.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (NetworkInterfaceCountRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceCountRequest)(nil)).Elem()
}

func (i NetworkInterfaceCountRequestArgs) ToNetworkInterfaceCountRequestOutput() NetworkInterfaceCountRequestOutput {
	return i.ToNetworkInterfaceCountRequestOutputWithContext(context.Background())
}

func (i NetworkInterfaceCountRequestArgs) ToNetworkInterfaceCountRequestOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceCountRequestOutput)
}

func (i NetworkInterfaceCountRequestArgs) ToNetworkInterfaceCountRequestPtrOutput() NetworkInterfaceCountRequestPtrOutput {
	return i.ToNetworkInterfaceCountRequestPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceCountRequestArgs) ToNetworkInterfaceCountRequestPtrOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceCountRequestOutput).ToNetworkInterfaceCountRequestPtrOutputWithContext(ctx)
}

// NetworkInterfaceCountRequestPtrInput is an input type that accepts NetworkInterfaceCountRequestArgs, NetworkInterfaceCountRequestPtr and NetworkInterfaceCountRequestPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceCountRequestPtrInput` via:
//
//	        NetworkInterfaceCountRequestArgs{...}
//
//	or:
//
//	        nil
type NetworkInterfaceCountRequestPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceCountRequestPtrOutput() NetworkInterfaceCountRequestPtrOutput
	ToNetworkInterfaceCountRequestPtrOutputWithContext(context.Context) NetworkInterfaceCountRequestPtrOutput
}

type networkInterfaceCountRequestPtrType NetworkInterfaceCountRequestArgs

func NetworkInterfaceCountRequestPtr(v *NetworkInterfaceCountRequestArgs) NetworkInterfaceCountRequestPtrInput {
	return (*networkInterfaceCountRequestPtrType)(v)
}

func (*networkInterfaceCountRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceCountRequest)(nil)).Elem()
}

func (i *networkInterfaceCountRequestPtrType) ToNetworkInterfaceCountRequestPtrOutput() NetworkInterfaceCountRequestPtrOutput {
	return i.ToNetworkInterfaceCountRequestPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceCountRequestPtrType) ToNetworkInterfaceCountRequestPtrOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceCountRequestPtrOutput)
}

// Definition of NetworkInterfaceCountRequest
type NetworkInterfaceCountRequestOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceCountRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceCountRequest)(nil)).Elem()
}

func (o NetworkInterfaceCountRequestOutput) ToNetworkInterfaceCountRequestOutput() NetworkInterfaceCountRequestOutput {
	return o
}

func (o NetworkInterfaceCountRequestOutput) ToNetworkInterfaceCountRequestOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestOutput {
	return o
}

func (o NetworkInterfaceCountRequestOutput) ToNetworkInterfaceCountRequestPtrOutput() NetworkInterfaceCountRequestPtrOutput {
	return o.ToNetworkInterfaceCountRequestPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceCountRequestOutput) ToNetworkInterfaceCountRequestPtrOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceCountRequest) *NetworkInterfaceCountRequest {
		return &v
	}).(NetworkInterfaceCountRequestPtrOutput)
}

// The maximum number of network interfaces.
func (o NetworkInterfaceCountRequestOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceCountRequest) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of network interfaces.
func (o NetworkInterfaceCountRequestOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceCountRequest) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type NetworkInterfaceCountRequestPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceCountRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceCountRequest)(nil)).Elem()
}

func (o NetworkInterfaceCountRequestPtrOutput) ToNetworkInterfaceCountRequestPtrOutput() NetworkInterfaceCountRequestPtrOutput {
	return o
}

func (o NetworkInterfaceCountRequestPtrOutput) ToNetworkInterfaceCountRequestPtrOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestPtrOutput {
	return o
}

func (o NetworkInterfaceCountRequestPtrOutput) Elem() NetworkInterfaceCountRequestOutput {
	return o.ApplyT(func(v *NetworkInterfaceCountRequest) NetworkInterfaceCountRequest {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceCountRequest
		return ret
	}).(NetworkInterfaceCountRequestOutput)
}

// The maximum number of network interfaces.
func (o NetworkInterfaceCountRequestPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceCountRequest) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of network interfaces.
func (o NetworkInterfaceCountRequestPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceCountRequest) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of NetworkInterfaceCountRequest
type NetworkInterfaceCountRequestResponse struct {
	// The maximum number of network interfaces.
	Max *int `pulumi:"max"`
	// The minimum number of network interfaces.
	Min *int `pulumi:"min"`
}

// Definition of NetworkInterfaceCountRequest
type NetworkInterfaceCountRequestResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceCountRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceCountRequestResponse)(nil)).Elem()
}

func (o NetworkInterfaceCountRequestResponseOutput) ToNetworkInterfaceCountRequestResponseOutput() NetworkInterfaceCountRequestResponseOutput {
	return o
}

func (o NetworkInterfaceCountRequestResponseOutput) ToNetworkInterfaceCountRequestResponseOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestResponseOutput {
	return o
}

// The maximum number of network interfaces.
func (o NetworkInterfaceCountRequestResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceCountRequestResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of network interfaces.
func (o NetworkInterfaceCountRequestResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceCountRequestResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type NetworkInterfaceCountRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceCountRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceCountRequestResponse)(nil)).Elem()
}

func (o NetworkInterfaceCountRequestResponsePtrOutput) ToNetworkInterfaceCountRequestResponsePtrOutput() NetworkInterfaceCountRequestResponsePtrOutput {
	return o
}

func (o NetworkInterfaceCountRequestResponsePtrOutput) ToNetworkInterfaceCountRequestResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceCountRequestResponsePtrOutput {
	return o
}

func (o NetworkInterfaceCountRequestResponsePtrOutput) Elem() NetworkInterfaceCountRequestResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceCountRequestResponse) NetworkInterfaceCountRequestResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceCountRequestResponse
		return ret
	}).(NetworkInterfaceCountRequestResponseOutput)
}

// The maximum number of network interfaces.
func (o NetworkInterfaceCountRequestResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceCountRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of network interfaces.
func (o NetworkInterfaceCountRequestResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceCountRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of NetworkInterfaceStatusEnumValue
type NetworkInterfaceStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// NetworkInterfaceStatusEnumValueInput is an input type that accepts NetworkInterfaceStatusEnumValueArgs and NetworkInterfaceStatusEnumValueOutput values.
// You can construct a concrete instance of `NetworkInterfaceStatusEnumValueInput` via:
//
//	NetworkInterfaceStatusEnumValueArgs{...}
type NetworkInterfaceStatusEnumValueInput interface {
	pulumi.Input

	ToNetworkInterfaceStatusEnumValueOutput() NetworkInterfaceStatusEnumValueOutput
	ToNetworkInterfaceStatusEnumValueOutputWithContext(context.Context) NetworkInterfaceStatusEnumValueOutput
}

// Definition of NetworkInterfaceStatusEnumValue
type NetworkInterfaceStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkInterfaceStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStatusEnumValue)(nil)).Elem()
}

func (i NetworkInterfaceStatusEnumValueArgs) ToNetworkInterfaceStatusEnumValueOutput() NetworkInterfaceStatusEnumValueOutput {
	return i.ToNetworkInterfaceStatusEnumValueOutputWithContext(context.Background())
}

func (i NetworkInterfaceStatusEnumValueArgs) ToNetworkInterfaceStatusEnumValueOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceStatusEnumValueOutput)
}

func (i NetworkInterfaceStatusEnumValueArgs) ToNetworkInterfaceStatusEnumValuePtrOutput() NetworkInterfaceStatusEnumValuePtrOutput {
	return i.ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceStatusEnumValueArgs) ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceStatusEnumValueOutput).ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(ctx)
}

// NetworkInterfaceStatusEnumValuePtrInput is an input type that accepts NetworkInterfaceStatusEnumValueArgs, NetworkInterfaceStatusEnumValuePtr and NetworkInterfaceStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceStatusEnumValuePtrInput` via:
//
//	        NetworkInterfaceStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type NetworkInterfaceStatusEnumValuePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceStatusEnumValuePtrOutput() NetworkInterfaceStatusEnumValuePtrOutput
	ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(context.Context) NetworkInterfaceStatusEnumValuePtrOutput
}

type networkInterfaceStatusEnumValuePtrType NetworkInterfaceStatusEnumValueArgs

func NetworkInterfaceStatusEnumValuePtr(v *NetworkInterfaceStatusEnumValueArgs) NetworkInterfaceStatusEnumValuePtrInput {
	return (*networkInterfaceStatusEnumValuePtrType)(v)
}

func (*networkInterfaceStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceStatusEnumValue)(nil)).Elem()
}

func (i *networkInterfaceStatusEnumValuePtrType) ToNetworkInterfaceStatusEnumValuePtrOutput() NetworkInterfaceStatusEnumValuePtrOutput {
	return i.ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceStatusEnumValuePtrType) ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceStatusEnumValuePtrOutput)
}

// Definition of NetworkInterfaceStatusEnumValue
type NetworkInterfaceStatusEnumValueOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStatusEnumValue)(nil)).Elem()
}

func (o NetworkInterfaceStatusEnumValueOutput) ToNetworkInterfaceStatusEnumValueOutput() NetworkInterfaceStatusEnumValueOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValueOutput) ToNetworkInterfaceStatusEnumValueOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValueOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValueOutput) ToNetworkInterfaceStatusEnumValuePtrOutput() NetworkInterfaceStatusEnumValuePtrOutput {
	return o.ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceStatusEnumValueOutput) ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceStatusEnumValue) *NetworkInterfaceStatusEnumValue {
		return &v
	}).(NetworkInterfaceStatusEnumValuePtrOutput)
}

// Property value
func (o NetworkInterfaceStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceStatusEnumValue)(nil)).Elem()
}

func (o NetworkInterfaceStatusEnumValuePtrOutput) ToNetworkInterfaceStatusEnumValuePtrOutput() NetworkInterfaceStatusEnumValuePtrOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValuePtrOutput) ToNetworkInterfaceStatusEnumValuePtrOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValuePtrOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValuePtrOutput) Elem() NetworkInterfaceStatusEnumValueOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusEnumValue) NetworkInterfaceStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceStatusEnumValue
		return ret
	}).(NetworkInterfaceStatusEnumValueOutput)
}

// Property value
func (o NetworkInterfaceStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of NetworkInterfaceStatusEnumValue
type NetworkInterfaceStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of NetworkInterfaceStatusEnumValue
type NetworkInterfaceStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStatusEnumValueResponse)(nil)).Elem()
}

func (o NetworkInterfaceStatusEnumValueResponseOutput) ToNetworkInterfaceStatusEnumValueResponseOutput() NetworkInterfaceStatusEnumValueResponseOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValueResponseOutput) ToNetworkInterfaceStatusEnumValueResponseOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o NetworkInterfaceStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceStatusEnumValueResponse)(nil)).Elem()
}

func (o NetworkInterfaceStatusEnumValueResponsePtrOutput) ToNetworkInterfaceStatusEnumValueResponsePtrOutput() NetworkInterfaceStatusEnumValueResponsePtrOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValueResponsePtrOutput) ToNetworkInterfaceStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceStatusEnumValueResponsePtrOutput {
	return o
}

func (o NetworkInterfaceStatusEnumValueResponsePtrOutput) Elem() NetworkInterfaceStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusEnumValueResponse) NetworkInterfaceStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceStatusEnumValueResponse
		return ret
	}).(NetworkInterfaceStatusEnumValueResponseOutput)
}

// Property value
func (o NetworkInterfaceStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Networking
type Networking struct {
	// Monthly Transfer of the Instance.
	MonthlyTransfer *MonthlyTransfer `pulumi:"monthlyTransfer"`
	// Ports to the Instance.
	Ports []Port `pulumi:"ports"`
}

// NetworkingInput is an input type that accepts NetworkingArgs and NetworkingOutput values.
// You can construct a concrete instance of `NetworkingInput` via:
//
//	NetworkingArgs{...}
type NetworkingInput interface {
	pulumi.Input

	ToNetworkingOutput() NetworkingOutput
	ToNetworkingOutputWithContext(context.Context) NetworkingOutput
}

// Definition of Networking
type NetworkingArgs struct {
	// Monthly Transfer of the Instance.
	MonthlyTransfer MonthlyTransferPtrInput `pulumi:"monthlyTransfer"`
	// Ports to the Instance.
	Ports PortArrayInput `pulumi:"ports"`
}

func (NetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Networking)(nil)).Elem()
}

func (i NetworkingArgs) ToNetworkingOutput() NetworkingOutput {
	return i.ToNetworkingOutputWithContext(context.Background())
}

func (i NetworkingArgs) ToNetworkingOutputWithContext(ctx context.Context) NetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingOutput)
}

func (i NetworkingArgs) ToNetworkingPtrOutput() NetworkingPtrOutput {
	return i.ToNetworkingPtrOutputWithContext(context.Background())
}

func (i NetworkingArgs) ToNetworkingPtrOutputWithContext(ctx context.Context) NetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingOutput).ToNetworkingPtrOutputWithContext(ctx)
}

// NetworkingPtrInput is an input type that accepts NetworkingArgs, NetworkingPtr and NetworkingPtrOutput values.
// You can construct a concrete instance of `NetworkingPtrInput` via:
//
//	        NetworkingArgs{...}
//
//	or:
//
//	        nil
type NetworkingPtrInput interface {
	pulumi.Input

	ToNetworkingPtrOutput() NetworkingPtrOutput
	ToNetworkingPtrOutputWithContext(context.Context) NetworkingPtrOutput
}

type networkingPtrType NetworkingArgs

func NetworkingPtr(v *NetworkingArgs) NetworkingPtrInput {
	return (*networkingPtrType)(v)
}

func (*networkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Networking)(nil)).Elem()
}

func (i *networkingPtrType) ToNetworkingPtrOutput() NetworkingPtrOutput {
	return i.ToNetworkingPtrOutputWithContext(context.Background())
}

func (i *networkingPtrType) ToNetworkingPtrOutputWithContext(ctx context.Context) NetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingPtrOutput)
}

// Definition of Networking
type NetworkingOutput struct{ *pulumi.OutputState }

func (NetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Networking)(nil)).Elem()
}

func (o NetworkingOutput) ToNetworkingOutput() NetworkingOutput {
	return o
}

func (o NetworkingOutput) ToNetworkingOutputWithContext(ctx context.Context) NetworkingOutput {
	return o
}

func (o NetworkingOutput) ToNetworkingPtrOutput() NetworkingPtrOutput {
	return o.ToNetworkingPtrOutputWithContext(context.Background())
}

func (o NetworkingOutput) ToNetworkingPtrOutputWithContext(ctx context.Context) NetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Networking) *Networking {
		return &v
	}).(NetworkingPtrOutput)
}

// Monthly Transfer of the Instance.
func (o NetworkingOutput) MonthlyTransfer() MonthlyTransferPtrOutput {
	return o.ApplyT(func(v Networking) *MonthlyTransfer { return v.MonthlyTransfer }).(MonthlyTransferPtrOutput)
}

// Ports to the Instance.
func (o NetworkingOutput) Ports() PortArrayOutput {
	return o.ApplyT(func(v Networking) []Port { return v.Ports }).(PortArrayOutput)
}

type NetworkingPtrOutput struct{ *pulumi.OutputState }

func (NetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Networking)(nil)).Elem()
}

func (o NetworkingPtrOutput) ToNetworkingPtrOutput() NetworkingPtrOutput {
	return o
}

func (o NetworkingPtrOutput) ToNetworkingPtrOutputWithContext(ctx context.Context) NetworkingPtrOutput {
	return o
}

func (o NetworkingPtrOutput) Elem() NetworkingOutput {
	return o.ApplyT(func(v *Networking) Networking {
		if v != nil {
			return *v
		}
		var ret Networking
		return ret
	}).(NetworkingOutput)
}

// Monthly Transfer of the Instance.
func (o NetworkingPtrOutput) MonthlyTransfer() MonthlyTransferPtrOutput {
	return o.ApplyT(func(v *Networking) *MonthlyTransfer {
		if v == nil {
			return nil
		}
		return v.MonthlyTransfer
	}).(MonthlyTransferPtrOutput)
}

// Ports to the Instance.
func (o NetworkingPtrOutput) Ports() PortArrayOutput {
	return o.ApplyT(func(v *Networking) []Port {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(PortArrayOutput)
}

// Definition of Networking
type NetworkingResponse struct {
	// Monthly Transfer of the Instance.
	MonthlyTransfer *MonthlyTransferResponse `pulumi:"monthlyTransfer"`
	// Ports to the Instance.
	Ports []PortResponse `pulumi:"ports"`
}

// Definition of Networking
type NetworkingResponseOutput struct{ *pulumi.OutputState }

func (NetworkingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingResponse)(nil)).Elem()
}

func (o NetworkingResponseOutput) ToNetworkingResponseOutput() NetworkingResponseOutput {
	return o
}

func (o NetworkingResponseOutput) ToNetworkingResponseOutputWithContext(ctx context.Context) NetworkingResponseOutput {
	return o
}

// Monthly Transfer of the Instance.
func (o NetworkingResponseOutput) MonthlyTransfer() MonthlyTransferResponsePtrOutput {
	return o.ApplyT(func(v NetworkingResponse) *MonthlyTransferResponse { return v.MonthlyTransfer }).(MonthlyTransferResponsePtrOutput)
}

// Ports to the Instance.
func (o NetworkingResponseOutput) Ports() PortResponseArrayOutput {
	return o.ApplyT(func(v NetworkingResponse) []PortResponse { return v.Ports }).(PortResponseArrayOutput)
}

type NetworkingResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkingResponse)(nil)).Elem()
}

func (o NetworkingResponsePtrOutput) ToNetworkingResponsePtrOutput() NetworkingResponsePtrOutput {
	return o
}

func (o NetworkingResponsePtrOutput) ToNetworkingResponsePtrOutputWithContext(ctx context.Context) NetworkingResponsePtrOutput {
	return o
}

func (o NetworkingResponsePtrOutput) Elem() NetworkingResponseOutput {
	return o.ApplyT(func(v *NetworkingResponse) NetworkingResponse {
		if v != nil {
			return *v
		}
		var ret NetworkingResponse
		return ret
	}).(NetworkingResponseOutput)
}

// Monthly Transfer of the Instance.
func (o NetworkingResponsePtrOutput) MonthlyTransfer() MonthlyTransferResponsePtrOutput {
	return o.ApplyT(func(v *NetworkingResponse) *MonthlyTransferResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyTransfer
	}).(MonthlyTransferResponsePtrOutput)
}

// Ports to the Instance.
func (o NetworkingResponsePtrOutput) Ports() PortResponseArrayOutput {
	return o.ApplyT(func(v *NetworkingResponse) []PortResponse {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(PortResponseArrayOutput)
}

// Definition of Node
type Node struct {
	// <p>The Availability Zone (AZ) in which the node has been deployed.</p>
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.</p>
	Endpoint *DaxClusterEndpoint `pulumi:"endpoint"`
	// <p>The date and time (in UNIX epoch format) when the node was launched.</p>
	NodeCreateTime *string `pulumi:"nodeCreateTime"`
	// <p>A system-generated identifier for the node.</p>
	NodeId *string `pulumi:"nodeId"`
	// <p>The current status of the node. For example: <code>available</code>.</p>
	NodeStatus *string `pulumi:"nodeStatus"`
	// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
	ParameterGroupStatus *string `pulumi:"parameterGroupStatus"`
}

// NodeInput is an input type that accepts NodeArgs and NodeOutput values.
// You can construct a concrete instance of `NodeInput` via:
//
//	NodeArgs{...}
type NodeInput interface {
	pulumi.Input

	ToNodeOutput() NodeOutput
	ToNodeOutputWithContext(context.Context) NodeOutput
}

// Definition of Node
type NodeArgs struct {
	// <p>The Availability Zone (AZ) in which the node has been deployed.</p>
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.</p>
	Endpoint DaxClusterEndpointPtrInput `pulumi:"endpoint"`
	// <p>The date and time (in UNIX epoch format) when the node was launched.</p>
	NodeCreateTime pulumi.StringPtrInput `pulumi:"nodeCreateTime"`
	// <p>A system-generated identifier for the node.</p>
	NodeId pulumi.StringPtrInput `pulumi:"nodeId"`
	// <p>The current status of the node. For example: <code>available</code>.</p>
	NodeStatus pulumi.StringPtrInput `pulumi:"nodeStatus"`
	// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
	ParameterGroupStatus pulumi.StringPtrInput `pulumi:"parameterGroupStatus"`
}

func (NodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Node)(nil)).Elem()
}

func (i NodeArgs) ToNodeOutput() NodeOutput {
	return i.ToNodeOutputWithContext(context.Background())
}

func (i NodeArgs) ToNodeOutputWithContext(ctx context.Context) NodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeOutput)
}

// NodeArrayInput is an input type that accepts NodeArray and NodeArrayOutput values.
// You can construct a concrete instance of `NodeArrayInput` via:
//
//	NodeArray{ NodeArgs{...} }
type NodeArrayInput interface {
	pulumi.Input

	ToNodeArrayOutput() NodeArrayOutput
	ToNodeArrayOutputWithContext(context.Context) NodeArrayOutput
}

type NodeArray []NodeInput

func (NodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Node)(nil)).Elem()
}

func (i NodeArray) ToNodeArrayOutput() NodeArrayOutput {
	return i.ToNodeArrayOutputWithContext(context.Background())
}

func (i NodeArray) ToNodeArrayOutputWithContext(ctx context.Context) NodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeArrayOutput)
}

// Definition of Node
type NodeOutput struct{ *pulumi.OutputState }

func (NodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Node)(nil)).Elem()
}

func (o NodeOutput) ToNodeOutput() NodeOutput {
	return o
}

func (o NodeOutput) ToNodeOutputWithContext(ctx context.Context) NodeOutput {
	return o
}

// <p>The Availability Zone (AZ) in which the node has been deployed.</p>
func (o NodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.</p>
func (o NodeOutput) Endpoint() DaxClusterEndpointPtrOutput {
	return o.ApplyT(func(v Node) *DaxClusterEndpoint { return v.Endpoint }).(DaxClusterEndpointPtrOutput)
}

// <p>The date and time (in UNIX epoch format) when the node was launched.</p>
func (o NodeOutput) NodeCreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.NodeCreateTime }).(pulumi.StringPtrOutput)
}

// <p>A system-generated identifier for the node.</p>
func (o NodeOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

// <p>The current status of the node. For example: <code>available</code>.</p>
func (o NodeOutput) NodeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.NodeStatus }).(pulumi.StringPtrOutput)
}

// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
func (o NodeOutput) ParameterGroupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.ParameterGroupStatus }).(pulumi.StringPtrOutput)
}

type NodeArrayOutput struct{ *pulumi.OutputState }

func (NodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Node)(nil)).Elem()
}

func (o NodeArrayOutput) ToNodeArrayOutput() NodeArrayOutput {
	return o
}

func (o NodeArrayOutput) ToNodeArrayOutputWithContext(ctx context.Context) NodeArrayOutput {
	return o
}

func (o NodeArrayOutput) Index(i pulumi.IntInput) NodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Node {
		return vs[0].([]Node)[vs[1].(int)]
	}).(NodeOutput)
}

// Definition of Node
type NodeResponse struct {
	// <p>The Availability Zone (AZ) in which the node has been deployed.</p>
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.</p>
	Endpoint *DaxClusterEndpointResponse `pulumi:"endpoint"`
	// <p>The date and time (in UNIX epoch format) when the node was launched.</p>
	NodeCreateTime *string `pulumi:"nodeCreateTime"`
	// <p>A system-generated identifier for the node.</p>
	NodeId *string `pulumi:"nodeId"`
	// <p>The current status of the node. For example: <code>available</code>.</p>
	NodeStatus *string `pulumi:"nodeStatus"`
	// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
	ParameterGroupStatus *string `pulumi:"parameterGroupStatus"`
}

// Definition of Node
type NodeResponseOutput struct{ *pulumi.OutputState }

func (NodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeResponse)(nil)).Elem()
}

func (o NodeResponseOutput) ToNodeResponseOutput() NodeResponseOutput {
	return o
}

func (o NodeResponseOutput) ToNodeResponseOutputWithContext(ctx context.Context) NodeResponseOutput {
	return o
}

// <p>The Availability Zone (AZ) in which the node has been deployed.</p>
func (o NodeResponseOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeResponse) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.</p>
func (o NodeResponseOutput) Endpoint() DaxClusterEndpointResponsePtrOutput {
	return o.ApplyT(func(v NodeResponse) *DaxClusterEndpointResponse { return v.Endpoint }).(DaxClusterEndpointResponsePtrOutput)
}

// <p>The date and time (in UNIX epoch format) when the node was launched.</p>
func (o NodeResponseOutput) NodeCreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeResponse) *string { return v.NodeCreateTime }).(pulumi.StringPtrOutput)
}

// <p>A system-generated identifier for the node.</p>
func (o NodeResponseOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeResponse) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

// <p>The current status of the node. For example: <code>available</code>.</p>
func (o NodeResponseOutput) NodeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeResponse) *string { return v.NodeStatus }).(pulumi.StringPtrOutput)
}

// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
func (o NodeResponseOutput) ParameterGroupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeResponse) *string { return v.ParameterGroupStatus }).(pulumi.StringPtrOutput)
}

type NodeResponseArrayOutput struct{ *pulumi.OutputState }

func (NodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeResponse)(nil)).Elem()
}

func (o NodeResponseArrayOutput) ToNodeResponseArrayOutput() NodeResponseArrayOutput {
	return o
}

func (o NodeResponseArrayOutput) ToNodeResponseArrayOutputWithContext(ctx context.Context) NodeResponseArrayOutput {
	return o
}

func (o NodeResponseArrayOutput) Index(i pulumi.IntInput) NodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeResponse {
		return vs[0].([]NodeResponse)[vs[1].(int)]
	}).(NodeResponseOutput)
}

// Definition of NodeToNodeEncryptionOptions
type NodeToNodeEncryptionOptions struct {
	// <p>True to enable node-to-node encryption.</p>
	Enabled *bool `pulumi:"enabled"`
}

// NodeToNodeEncryptionOptionsInput is an input type that accepts NodeToNodeEncryptionOptionsArgs and NodeToNodeEncryptionOptionsOutput values.
// You can construct a concrete instance of `NodeToNodeEncryptionOptionsInput` via:
//
//	NodeToNodeEncryptionOptionsArgs{...}
type NodeToNodeEncryptionOptionsInput interface {
	pulumi.Input

	ToNodeToNodeEncryptionOptionsOutput() NodeToNodeEncryptionOptionsOutput
	ToNodeToNodeEncryptionOptionsOutputWithContext(context.Context) NodeToNodeEncryptionOptionsOutput
}

// Definition of NodeToNodeEncryptionOptions
type NodeToNodeEncryptionOptionsArgs struct {
	// <p>True to enable node-to-node encryption.</p>
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NodeToNodeEncryptionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeToNodeEncryptionOptions)(nil)).Elem()
}

func (i NodeToNodeEncryptionOptionsArgs) ToNodeToNodeEncryptionOptionsOutput() NodeToNodeEncryptionOptionsOutput {
	return i.ToNodeToNodeEncryptionOptionsOutputWithContext(context.Background())
}

func (i NodeToNodeEncryptionOptionsArgs) ToNodeToNodeEncryptionOptionsOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeToNodeEncryptionOptionsOutput)
}

func (i NodeToNodeEncryptionOptionsArgs) ToNodeToNodeEncryptionOptionsPtrOutput() NodeToNodeEncryptionOptionsPtrOutput {
	return i.ToNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i NodeToNodeEncryptionOptionsArgs) ToNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeToNodeEncryptionOptionsOutput).ToNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx)
}

// NodeToNodeEncryptionOptionsPtrInput is an input type that accepts NodeToNodeEncryptionOptionsArgs, NodeToNodeEncryptionOptionsPtr and NodeToNodeEncryptionOptionsPtrOutput values.
// You can construct a concrete instance of `NodeToNodeEncryptionOptionsPtrInput` via:
//
//	        NodeToNodeEncryptionOptionsArgs{...}
//
//	or:
//
//	        nil
type NodeToNodeEncryptionOptionsPtrInput interface {
	pulumi.Input

	ToNodeToNodeEncryptionOptionsPtrOutput() NodeToNodeEncryptionOptionsPtrOutput
	ToNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Context) NodeToNodeEncryptionOptionsPtrOutput
}

type nodeToNodeEncryptionOptionsPtrType NodeToNodeEncryptionOptionsArgs

func NodeToNodeEncryptionOptionsPtr(v *NodeToNodeEncryptionOptionsArgs) NodeToNodeEncryptionOptionsPtrInput {
	return (*nodeToNodeEncryptionOptionsPtrType)(v)
}

func (*nodeToNodeEncryptionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeToNodeEncryptionOptions)(nil)).Elem()
}

func (i *nodeToNodeEncryptionOptionsPtrType) ToNodeToNodeEncryptionOptionsPtrOutput() NodeToNodeEncryptionOptionsPtrOutput {
	return i.ToNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i *nodeToNodeEncryptionOptionsPtrType) ToNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeToNodeEncryptionOptionsPtrOutput)
}

// Definition of NodeToNodeEncryptionOptions
type NodeToNodeEncryptionOptionsOutput struct{ *pulumi.OutputState }

func (NodeToNodeEncryptionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeToNodeEncryptionOptions)(nil)).Elem()
}

func (o NodeToNodeEncryptionOptionsOutput) ToNodeToNodeEncryptionOptionsOutput() NodeToNodeEncryptionOptionsOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsOutput) ToNodeToNodeEncryptionOptionsOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsOutput) ToNodeToNodeEncryptionOptionsPtrOutput() NodeToNodeEncryptionOptionsPtrOutput {
	return o.ToNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (o NodeToNodeEncryptionOptionsOutput) ToNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeToNodeEncryptionOptions) *NodeToNodeEncryptionOptions {
		return &v
	}).(NodeToNodeEncryptionOptionsPtrOutput)
}

// <p>True to enable node-to-node encryption.</p>
func (o NodeToNodeEncryptionOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeToNodeEncryptionOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NodeToNodeEncryptionOptionsPtrOutput struct{ *pulumi.OutputState }

func (NodeToNodeEncryptionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeToNodeEncryptionOptions)(nil)).Elem()
}

func (o NodeToNodeEncryptionOptionsPtrOutput) ToNodeToNodeEncryptionOptionsPtrOutput() NodeToNodeEncryptionOptionsPtrOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsPtrOutput) ToNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsPtrOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsPtrOutput) Elem() NodeToNodeEncryptionOptionsOutput {
	return o.ApplyT(func(v *NodeToNodeEncryptionOptions) NodeToNodeEncryptionOptions {
		if v != nil {
			return *v
		}
		var ret NodeToNodeEncryptionOptions
		return ret
	}).(NodeToNodeEncryptionOptionsOutput)
}

// <p>True to enable node-to-node encryption.</p>
func (o NodeToNodeEncryptionOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeToNodeEncryptionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of NodeToNodeEncryptionOptions
type NodeToNodeEncryptionOptionsResponse struct {
	// <p>True to enable node-to-node encryption.</p>
	Enabled *bool `pulumi:"enabled"`
}

// Definition of NodeToNodeEncryptionOptions
type NodeToNodeEncryptionOptionsResponseOutput struct{ *pulumi.OutputState }

func (NodeToNodeEncryptionOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeToNodeEncryptionOptionsResponse)(nil)).Elem()
}

func (o NodeToNodeEncryptionOptionsResponseOutput) ToNodeToNodeEncryptionOptionsResponseOutput() NodeToNodeEncryptionOptionsResponseOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsResponseOutput) ToNodeToNodeEncryptionOptionsResponseOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsResponseOutput {
	return o
}

// <p>True to enable node-to-node encryption.</p>
func (o NodeToNodeEncryptionOptionsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeToNodeEncryptionOptionsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NodeToNodeEncryptionOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeToNodeEncryptionOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeToNodeEncryptionOptionsResponse)(nil)).Elem()
}

func (o NodeToNodeEncryptionOptionsResponsePtrOutput) ToNodeToNodeEncryptionOptionsResponsePtrOutput() NodeToNodeEncryptionOptionsResponsePtrOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsResponsePtrOutput) ToNodeToNodeEncryptionOptionsResponsePtrOutputWithContext(ctx context.Context) NodeToNodeEncryptionOptionsResponsePtrOutput {
	return o
}

func (o NodeToNodeEncryptionOptionsResponsePtrOutput) Elem() NodeToNodeEncryptionOptionsResponseOutput {
	return o.ApplyT(func(v *NodeToNodeEncryptionOptionsResponse) NodeToNodeEncryptionOptionsResponse {
		if v != nil {
			return *v
		}
		var ret NodeToNodeEncryptionOptionsResponse
		return ret
	}).(NodeToNodeEncryptionOptionsResponseOutput)
}

// <p>True to enable node-to-node encryption.</p>
func (o NodeToNodeEncryptionOptionsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeToNodeEncryptionOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of NonCompliantSummary
type NonCompliantSummary struct {
	// <p>The total number of compliance items that aren't compliant.</p>
	NonCompliantCount *int `pulumi:"nonCompliantCount"`
	// <p>A summary of the non-compliance severity by compliance type</p>
	SeveritySummary *SeveritySummary `pulumi:"severitySummary"`
}

// NonCompliantSummaryInput is an input type that accepts NonCompliantSummaryArgs and NonCompliantSummaryOutput values.
// You can construct a concrete instance of `NonCompliantSummaryInput` via:
//
//	NonCompliantSummaryArgs{...}
type NonCompliantSummaryInput interface {
	pulumi.Input

	ToNonCompliantSummaryOutput() NonCompliantSummaryOutput
	ToNonCompliantSummaryOutputWithContext(context.Context) NonCompliantSummaryOutput
}

// Definition of NonCompliantSummary
type NonCompliantSummaryArgs struct {
	// <p>The total number of compliance items that aren't compliant.</p>
	NonCompliantCount pulumi.IntPtrInput `pulumi:"nonCompliantCount"`
	// <p>A summary of the non-compliance severity by compliance type</p>
	SeveritySummary SeveritySummaryPtrInput `pulumi:"severitySummary"`
}

func (NonCompliantSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NonCompliantSummary)(nil)).Elem()
}

func (i NonCompliantSummaryArgs) ToNonCompliantSummaryOutput() NonCompliantSummaryOutput {
	return i.ToNonCompliantSummaryOutputWithContext(context.Background())
}

func (i NonCompliantSummaryArgs) ToNonCompliantSummaryOutputWithContext(ctx context.Context) NonCompliantSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonCompliantSummaryOutput)
}

func (i NonCompliantSummaryArgs) ToNonCompliantSummaryPtrOutput() NonCompliantSummaryPtrOutput {
	return i.ToNonCompliantSummaryPtrOutputWithContext(context.Background())
}

func (i NonCompliantSummaryArgs) ToNonCompliantSummaryPtrOutputWithContext(ctx context.Context) NonCompliantSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonCompliantSummaryOutput).ToNonCompliantSummaryPtrOutputWithContext(ctx)
}

// NonCompliantSummaryPtrInput is an input type that accepts NonCompliantSummaryArgs, NonCompliantSummaryPtr and NonCompliantSummaryPtrOutput values.
// You can construct a concrete instance of `NonCompliantSummaryPtrInput` via:
//
//	        NonCompliantSummaryArgs{...}
//
//	or:
//
//	        nil
type NonCompliantSummaryPtrInput interface {
	pulumi.Input

	ToNonCompliantSummaryPtrOutput() NonCompliantSummaryPtrOutput
	ToNonCompliantSummaryPtrOutputWithContext(context.Context) NonCompliantSummaryPtrOutput
}

type nonCompliantSummaryPtrType NonCompliantSummaryArgs

func NonCompliantSummaryPtr(v *NonCompliantSummaryArgs) NonCompliantSummaryPtrInput {
	return (*nonCompliantSummaryPtrType)(v)
}

func (*nonCompliantSummaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NonCompliantSummary)(nil)).Elem()
}

func (i *nonCompliantSummaryPtrType) ToNonCompliantSummaryPtrOutput() NonCompliantSummaryPtrOutput {
	return i.ToNonCompliantSummaryPtrOutputWithContext(context.Background())
}

func (i *nonCompliantSummaryPtrType) ToNonCompliantSummaryPtrOutputWithContext(ctx context.Context) NonCompliantSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonCompliantSummaryPtrOutput)
}

// Definition of NonCompliantSummary
type NonCompliantSummaryOutput struct{ *pulumi.OutputState }

func (NonCompliantSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonCompliantSummary)(nil)).Elem()
}

func (o NonCompliantSummaryOutput) ToNonCompliantSummaryOutput() NonCompliantSummaryOutput {
	return o
}

func (o NonCompliantSummaryOutput) ToNonCompliantSummaryOutputWithContext(ctx context.Context) NonCompliantSummaryOutput {
	return o
}

func (o NonCompliantSummaryOutput) ToNonCompliantSummaryPtrOutput() NonCompliantSummaryPtrOutput {
	return o.ToNonCompliantSummaryPtrOutputWithContext(context.Background())
}

func (o NonCompliantSummaryOutput) ToNonCompliantSummaryPtrOutputWithContext(ctx context.Context) NonCompliantSummaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NonCompliantSummary) *NonCompliantSummary {
		return &v
	}).(NonCompliantSummaryPtrOutput)
}

// <p>The total number of compliance items that aren't compliant.</p>
func (o NonCompliantSummaryOutput) NonCompliantCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NonCompliantSummary) *int { return v.NonCompliantCount }).(pulumi.IntPtrOutput)
}

// <p>A summary of the non-compliance severity by compliance type</p>
func (o NonCompliantSummaryOutput) SeveritySummary() SeveritySummaryPtrOutput {
	return o.ApplyT(func(v NonCompliantSummary) *SeveritySummary { return v.SeveritySummary }).(SeveritySummaryPtrOutput)
}

type NonCompliantSummaryPtrOutput struct{ *pulumi.OutputState }

func (NonCompliantSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NonCompliantSummary)(nil)).Elem()
}

func (o NonCompliantSummaryPtrOutput) ToNonCompliantSummaryPtrOutput() NonCompliantSummaryPtrOutput {
	return o
}

func (o NonCompliantSummaryPtrOutput) ToNonCompliantSummaryPtrOutputWithContext(ctx context.Context) NonCompliantSummaryPtrOutput {
	return o
}

func (o NonCompliantSummaryPtrOutput) Elem() NonCompliantSummaryOutput {
	return o.ApplyT(func(v *NonCompliantSummary) NonCompliantSummary {
		if v != nil {
			return *v
		}
		var ret NonCompliantSummary
		return ret
	}).(NonCompliantSummaryOutput)
}

// <p>The total number of compliance items that aren't compliant.</p>
func (o NonCompliantSummaryPtrOutput) NonCompliantCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NonCompliantSummary) *int {
		if v == nil {
			return nil
		}
		return v.NonCompliantCount
	}).(pulumi.IntPtrOutput)
}

// <p>A summary of the non-compliance severity by compliance type</p>
func (o NonCompliantSummaryPtrOutput) SeveritySummary() SeveritySummaryPtrOutput {
	return o.ApplyT(func(v *NonCompliantSummary) *SeveritySummary {
		if v == nil {
			return nil
		}
		return v.SeveritySummary
	}).(SeveritySummaryPtrOutput)
}

// Definition of NonCompliantSummary
type NonCompliantSummaryResponse struct {
	// <p>The total number of compliance items that aren't compliant.</p>
	NonCompliantCount *int `pulumi:"nonCompliantCount"`
	// <p>A summary of the non-compliance severity by compliance type</p>
	SeveritySummary *SeveritySummaryResponse `pulumi:"severitySummary"`
}

// Definition of NonCompliantSummary
type NonCompliantSummaryResponseOutput struct{ *pulumi.OutputState }

func (NonCompliantSummaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonCompliantSummaryResponse)(nil)).Elem()
}

func (o NonCompliantSummaryResponseOutput) ToNonCompliantSummaryResponseOutput() NonCompliantSummaryResponseOutput {
	return o
}

func (o NonCompliantSummaryResponseOutput) ToNonCompliantSummaryResponseOutputWithContext(ctx context.Context) NonCompliantSummaryResponseOutput {
	return o
}

// <p>The total number of compliance items that aren't compliant.</p>
func (o NonCompliantSummaryResponseOutput) NonCompliantCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NonCompliantSummaryResponse) *int { return v.NonCompliantCount }).(pulumi.IntPtrOutput)
}

// <p>A summary of the non-compliance severity by compliance type</p>
func (o NonCompliantSummaryResponseOutput) SeveritySummary() SeveritySummaryResponsePtrOutput {
	return o.ApplyT(func(v NonCompliantSummaryResponse) *SeveritySummaryResponse { return v.SeveritySummary }).(SeveritySummaryResponsePtrOutput)
}

type NonCompliantSummaryResponsePtrOutput struct{ *pulumi.OutputState }

func (NonCompliantSummaryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NonCompliantSummaryResponse)(nil)).Elem()
}

func (o NonCompliantSummaryResponsePtrOutput) ToNonCompliantSummaryResponsePtrOutput() NonCompliantSummaryResponsePtrOutput {
	return o
}

func (o NonCompliantSummaryResponsePtrOutput) ToNonCompliantSummaryResponsePtrOutputWithContext(ctx context.Context) NonCompliantSummaryResponsePtrOutput {
	return o
}

func (o NonCompliantSummaryResponsePtrOutput) Elem() NonCompliantSummaryResponseOutput {
	return o.ApplyT(func(v *NonCompliantSummaryResponse) NonCompliantSummaryResponse {
		if v != nil {
			return *v
		}
		var ret NonCompliantSummaryResponse
		return ret
	}).(NonCompliantSummaryResponseOutput)
}

// <p>The total number of compliance items that aren't compliant.</p>
func (o NonCompliantSummaryResponsePtrOutput) NonCompliantCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NonCompliantSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.NonCompliantCount
	}).(pulumi.IntPtrOutput)
}

// <p>A summary of the non-compliance severity by compliance type</p>
func (o NonCompliantSummaryResponsePtrOutput) SeveritySummary() SeveritySummaryResponsePtrOutput {
	return o.ApplyT(func(v *NonCompliantSummaryResponse) *SeveritySummaryResponse {
		if v == nil {
			return nil
		}
		return v.SeveritySummary
	}).(SeveritySummaryResponsePtrOutput)
}

// Definition of NoncurrentVersionExpiration
type NoncurrentVersionExpiration struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions *int `pulumi:"newerNoncurrentVersions"`
	// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	NoncurrentDays *int `pulumi:"noncurrentDays"`
}

// NoncurrentVersionExpirationInput is an input type that accepts NoncurrentVersionExpirationArgs and NoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `NoncurrentVersionExpirationInput` via:
//
//	NoncurrentVersionExpirationArgs{...}
type NoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToNoncurrentVersionExpirationOutput() NoncurrentVersionExpirationOutput
	ToNoncurrentVersionExpirationOutputWithContext(context.Context) NoncurrentVersionExpirationOutput
}

// Definition of NoncurrentVersionExpiration
type NoncurrentVersionExpirationArgs struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions pulumi.IntPtrInput `pulumi:"newerNoncurrentVersions"`
	// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	NoncurrentDays pulumi.IntPtrInput `pulumi:"noncurrentDays"`
}

func (NoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NoncurrentVersionExpiration)(nil)).Elem()
}

func (i NoncurrentVersionExpirationArgs) ToNoncurrentVersionExpirationOutput() NoncurrentVersionExpirationOutput {
	return i.ToNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i NoncurrentVersionExpirationArgs) ToNoncurrentVersionExpirationOutputWithContext(ctx context.Context) NoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionExpirationOutput)
}

func (i NoncurrentVersionExpirationArgs) ToNoncurrentVersionExpirationPtrOutput() NoncurrentVersionExpirationPtrOutput {
	return i.ToNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i NoncurrentVersionExpirationArgs) ToNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) NoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionExpirationOutput).ToNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

// NoncurrentVersionExpirationPtrInput is an input type that accepts NoncurrentVersionExpirationArgs, NoncurrentVersionExpirationPtr and NoncurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `NoncurrentVersionExpirationPtrInput` via:
//
//	        NoncurrentVersionExpirationArgs{...}
//
//	or:
//
//	        nil
type NoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToNoncurrentVersionExpirationPtrOutput() NoncurrentVersionExpirationPtrOutput
	ToNoncurrentVersionExpirationPtrOutputWithContext(context.Context) NoncurrentVersionExpirationPtrOutput
}

type noncurrentVersionExpirationPtrType NoncurrentVersionExpirationArgs

func NoncurrentVersionExpirationPtr(v *NoncurrentVersionExpirationArgs) NoncurrentVersionExpirationPtrInput {
	return (*noncurrentVersionExpirationPtrType)(v)
}

func (*noncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NoncurrentVersionExpiration)(nil)).Elem()
}

func (i *noncurrentVersionExpirationPtrType) ToNoncurrentVersionExpirationPtrOutput() NoncurrentVersionExpirationPtrOutput {
	return i.ToNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *noncurrentVersionExpirationPtrType) ToNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) NoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionExpirationPtrOutput)
}

// Definition of NoncurrentVersionExpiration
type NoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoncurrentVersionExpiration)(nil)).Elem()
}

func (o NoncurrentVersionExpirationOutput) ToNoncurrentVersionExpirationOutput() NoncurrentVersionExpirationOutput {
	return o
}

func (o NoncurrentVersionExpirationOutput) ToNoncurrentVersionExpirationOutputWithContext(ctx context.Context) NoncurrentVersionExpirationOutput {
	return o
}

func (o NoncurrentVersionExpirationOutput) ToNoncurrentVersionExpirationPtrOutput() NoncurrentVersionExpirationPtrOutput {
	return o.ToNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o NoncurrentVersionExpirationOutput) ToNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) NoncurrentVersionExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NoncurrentVersionExpiration) *NoncurrentVersionExpiration {
		return &v
	}).(NoncurrentVersionExpirationPtrOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionExpiration) *int { return v.NewerNoncurrentVersions }).(pulumi.IntPtrOutput)
}

// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionExpiration) *int { return v.NoncurrentDays }).(pulumi.IntPtrOutput)
}

type NoncurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NoncurrentVersionExpiration)(nil)).Elem()
}

func (o NoncurrentVersionExpirationPtrOutput) ToNoncurrentVersionExpirationPtrOutput() NoncurrentVersionExpirationPtrOutput {
	return o
}

func (o NoncurrentVersionExpirationPtrOutput) ToNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) NoncurrentVersionExpirationPtrOutput {
	return o
}

func (o NoncurrentVersionExpirationPtrOutput) Elem() NoncurrentVersionExpirationOutput {
	return o.ApplyT(func(v *NoncurrentVersionExpiration) NoncurrentVersionExpiration {
		if v != nil {
			return *v
		}
		var ret NoncurrentVersionExpiration
		return ret
	}).(NoncurrentVersionExpirationOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationPtrOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return v.NewerNoncurrentVersions
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationPtrOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return v.NoncurrentDays
	}).(pulumi.IntPtrOutput)
}

// Definition of NoncurrentVersionExpiration
type NoncurrentVersionExpirationResponse struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions *int `pulumi:"newerNoncurrentVersions"`
	// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	NoncurrentDays *int `pulumi:"noncurrentDays"`
}

// Definition of NoncurrentVersionExpiration
type NoncurrentVersionExpirationResponseOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionExpirationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoncurrentVersionExpirationResponse)(nil)).Elem()
}

func (o NoncurrentVersionExpirationResponseOutput) ToNoncurrentVersionExpirationResponseOutput() NoncurrentVersionExpirationResponseOutput {
	return o
}

func (o NoncurrentVersionExpirationResponseOutput) ToNoncurrentVersionExpirationResponseOutputWithContext(ctx context.Context) NoncurrentVersionExpirationResponseOutput {
	return o
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationResponseOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionExpirationResponse) *int { return v.NewerNoncurrentVersions }).(pulumi.IntPtrOutput)
}

// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationResponseOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionExpirationResponse) *int { return v.NoncurrentDays }).(pulumi.IntPtrOutput)
}

type NoncurrentVersionExpirationResponsePtrOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionExpirationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NoncurrentVersionExpirationResponse)(nil)).Elem()
}

func (o NoncurrentVersionExpirationResponsePtrOutput) ToNoncurrentVersionExpirationResponsePtrOutput() NoncurrentVersionExpirationResponsePtrOutput {
	return o
}

func (o NoncurrentVersionExpirationResponsePtrOutput) ToNoncurrentVersionExpirationResponsePtrOutputWithContext(ctx context.Context) NoncurrentVersionExpirationResponsePtrOutput {
	return o
}

func (o NoncurrentVersionExpirationResponsePtrOutput) Elem() NoncurrentVersionExpirationResponseOutput {
	return o.ApplyT(func(v *NoncurrentVersionExpirationResponse) NoncurrentVersionExpirationResponse {
		if v != nil {
			return *v
		}
		var ret NoncurrentVersionExpirationResponse
		return ret
	}).(NoncurrentVersionExpirationResponseOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationResponsePtrOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionExpirationResponse) *int {
		if v == nil {
			return nil
		}
		return v.NewerNoncurrentVersions
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionExpirationResponsePtrOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionExpirationResponse) *int {
		if v == nil {
			return nil
		}
		return v.NoncurrentDays
	}).(pulumi.IntPtrOutput)
}

// Definition of NoncurrentVersionTransition
type NoncurrentVersionTransition struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions *int `pulumi:"newerNoncurrentVersions"`
	// The class of storage used to store the object.
	StorageClass *string `pulumi:"storageClass"`
	// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	TransitionInDays *int `pulumi:"transitionInDays"`
}

// NoncurrentVersionTransitionInput is an input type that accepts NoncurrentVersionTransitionArgs and NoncurrentVersionTransitionOutput values.
// You can construct a concrete instance of `NoncurrentVersionTransitionInput` via:
//
//	NoncurrentVersionTransitionArgs{...}
type NoncurrentVersionTransitionInput interface {
	pulumi.Input

	ToNoncurrentVersionTransitionOutput() NoncurrentVersionTransitionOutput
	ToNoncurrentVersionTransitionOutputWithContext(context.Context) NoncurrentVersionTransitionOutput
}

// Definition of NoncurrentVersionTransition
type NoncurrentVersionTransitionArgs struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions pulumi.IntPtrInput `pulumi:"newerNoncurrentVersions"`
	// The class of storage used to store the object.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	TransitionInDays pulumi.IntPtrInput `pulumi:"transitionInDays"`
}

func (NoncurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NoncurrentVersionTransition)(nil)).Elem()
}

func (i NoncurrentVersionTransitionArgs) ToNoncurrentVersionTransitionOutput() NoncurrentVersionTransitionOutput {
	return i.ToNoncurrentVersionTransitionOutputWithContext(context.Background())
}

func (i NoncurrentVersionTransitionArgs) ToNoncurrentVersionTransitionOutputWithContext(ctx context.Context) NoncurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionTransitionOutput)
}

func (i NoncurrentVersionTransitionArgs) ToNoncurrentVersionTransitionPtrOutput() NoncurrentVersionTransitionPtrOutput {
	return i.ToNoncurrentVersionTransitionPtrOutputWithContext(context.Background())
}

func (i NoncurrentVersionTransitionArgs) ToNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) NoncurrentVersionTransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionTransitionOutput).ToNoncurrentVersionTransitionPtrOutputWithContext(ctx)
}

// NoncurrentVersionTransitionPtrInput is an input type that accepts NoncurrentVersionTransitionArgs, NoncurrentVersionTransitionPtr and NoncurrentVersionTransitionPtrOutput values.
// You can construct a concrete instance of `NoncurrentVersionTransitionPtrInput` via:
//
//	        NoncurrentVersionTransitionArgs{...}
//
//	or:
//
//	        nil
type NoncurrentVersionTransitionPtrInput interface {
	pulumi.Input

	ToNoncurrentVersionTransitionPtrOutput() NoncurrentVersionTransitionPtrOutput
	ToNoncurrentVersionTransitionPtrOutputWithContext(context.Context) NoncurrentVersionTransitionPtrOutput
}

type noncurrentVersionTransitionPtrType NoncurrentVersionTransitionArgs

func NoncurrentVersionTransitionPtr(v *NoncurrentVersionTransitionArgs) NoncurrentVersionTransitionPtrInput {
	return (*noncurrentVersionTransitionPtrType)(v)
}

func (*noncurrentVersionTransitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NoncurrentVersionTransition)(nil)).Elem()
}

func (i *noncurrentVersionTransitionPtrType) ToNoncurrentVersionTransitionPtrOutput() NoncurrentVersionTransitionPtrOutput {
	return i.ToNoncurrentVersionTransitionPtrOutputWithContext(context.Background())
}

func (i *noncurrentVersionTransitionPtrType) ToNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) NoncurrentVersionTransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionTransitionPtrOutput)
}

// NoncurrentVersionTransitionArrayInput is an input type that accepts NoncurrentVersionTransitionArray and NoncurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `NoncurrentVersionTransitionArrayInput` via:
//
//	NoncurrentVersionTransitionArray{ NoncurrentVersionTransitionArgs{...} }
type NoncurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToNoncurrentVersionTransitionArrayOutput() NoncurrentVersionTransitionArrayOutput
	ToNoncurrentVersionTransitionArrayOutputWithContext(context.Context) NoncurrentVersionTransitionArrayOutput
}

type NoncurrentVersionTransitionArray []NoncurrentVersionTransitionInput

func (NoncurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NoncurrentVersionTransition)(nil)).Elem()
}

func (i NoncurrentVersionTransitionArray) ToNoncurrentVersionTransitionArrayOutput() NoncurrentVersionTransitionArrayOutput {
	return i.ToNoncurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i NoncurrentVersionTransitionArray) ToNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) NoncurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncurrentVersionTransitionArrayOutput)
}

// Definition of NoncurrentVersionTransition
type NoncurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoncurrentVersionTransition)(nil)).Elem()
}

func (o NoncurrentVersionTransitionOutput) ToNoncurrentVersionTransitionOutput() NoncurrentVersionTransitionOutput {
	return o
}

func (o NoncurrentVersionTransitionOutput) ToNoncurrentVersionTransitionOutputWithContext(ctx context.Context) NoncurrentVersionTransitionOutput {
	return o
}

func (o NoncurrentVersionTransitionOutput) ToNoncurrentVersionTransitionPtrOutput() NoncurrentVersionTransitionPtrOutput {
	return o.ToNoncurrentVersionTransitionPtrOutputWithContext(context.Background())
}

func (o NoncurrentVersionTransitionOutput) ToNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) NoncurrentVersionTransitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NoncurrentVersionTransition) *NoncurrentVersionTransition {
		return &v
	}).(NoncurrentVersionTransitionPtrOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionTransition) *int { return v.NewerNoncurrentVersions }).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object.
func (o NoncurrentVersionTransitionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionTransition) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionTransition) *int { return v.TransitionInDays }).(pulumi.IntPtrOutput)
}

type NoncurrentVersionTransitionPtrOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionTransitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NoncurrentVersionTransition)(nil)).Elem()
}

func (o NoncurrentVersionTransitionPtrOutput) ToNoncurrentVersionTransitionPtrOutput() NoncurrentVersionTransitionPtrOutput {
	return o
}

func (o NoncurrentVersionTransitionPtrOutput) ToNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) NoncurrentVersionTransitionPtrOutput {
	return o
}

func (o NoncurrentVersionTransitionPtrOutput) Elem() NoncurrentVersionTransitionOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransition) NoncurrentVersionTransition {
		if v != nil {
			return *v
		}
		var ret NoncurrentVersionTransition
		return ret
	}).(NoncurrentVersionTransitionOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionPtrOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransition) *int {
		if v == nil {
			return nil
		}
		return v.NewerNoncurrentVersions
	}).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object.
func (o NoncurrentVersionTransitionPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransition) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionPtrOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransition) *int {
		if v == nil {
			return nil
		}
		return v.TransitionInDays
	}).(pulumi.IntPtrOutput)
}

type NoncurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NoncurrentVersionTransition)(nil)).Elem()
}

func (o NoncurrentVersionTransitionArrayOutput) ToNoncurrentVersionTransitionArrayOutput() NoncurrentVersionTransitionArrayOutput {
	return o
}

func (o NoncurrentVersionTransitionArrayOutput) ToNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) NoncurrentVersionTransitionArrayOutput {
	return o
}

func (o NoncurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) NoncurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NoncurrentVersionTransition {
		return vs[0].([]NoncurrentVersionTransition)[vs[1].(int)]
	}).(NoncurrentVersionTransitionOutput)
}

// Definition of NoncurrentVersionTransition
type NoncurrentVersionTransitionResponse struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions *int `pulumi:"newerNoncurrentVersions"`
	// The class of storage used to store the object.
	StorageClass *string `pulumi:"storageClass"`
	// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	TransitionInDays *int `pulumi:"transitionInDays"`
}

// Definition of NoncurrentVersionTransition
type NoncurrentVersionTransitionResponseOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionTransitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoncurrentVersionTransitionResponse)(nil)).Elem()
}

func (o NoncurrentVersionTransitionResponseOutput) ToNoncurrentVersionTransitionResponseOutput() NoncurrentVersionTransitionResponseOutput {
	return o
}

func (o NoncurrentVersionTransitionResponseOutput) ToNoncurrentVersionTransitionResponseOutputWithContext(ctx context.Context) NoncurrentVersionTransitionResponseOutput {
	return o
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionResponseOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionTransitionResponse) *int { return v.NewerNoncurrentVersions }).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object.
func (o NoncurrentVersionTransitionResponseOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionTransitionResponse) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionResponseOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NoncurrentVersionTransitionResponse) *int { return v.TransitionInDays }).(pulumi.IntPtrOutput)
}

type NoncurrentVersionTransitionResponsePtrOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionTransitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NoncurrentVersionTransitionResponse)(nil)).Elem()
}

func (o NoncurrentVersionTransitionResponsePtrOutput) ToNoncurrentVersionTransitionResponsePtrOutput() NoncurrentVersionTransitionResponsePtrOutput {
	return o
}

func (o NoncurrentVersionTransitionResponsePtrOutput) ToNoncurrentVersionTransitionResponsePtrOutputWithContext(ctx context.Context) NoncurrentVersionTransitionResponsePtrOutput {
	return o
}

func (o NoncurrentVersionTransitionResponsePtrOutput) Elem() NoncurrentVersionTransitionResponseOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransitionResponse) NoncurrentVersionTransitionResponse {
		if v != nil {
			return *v
		}
		var ret NoncurrentVersionTransitionResponse
		return ret
	}).(NoncurrentVersionTransitionResponseOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionResponsePtrOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransitionResponse) *int {
		if v == nil {
			return nil
		}
		return v.NewerNoncurrentVersions
	}).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object.
func (o NoncurrentVersionTransitionResponsePtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o NoncurrentVersionTransitionResponsePtrOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NoncurrentVersionTransitionResponse) *int {
		if v == nil {
			return nil
		}
		return v.TransitionInDays
	}).(pulumi.IntPtrOutput)
}

type NoncurrentVersionTransitionResponseArrayOutput struct{ *pulumi.OutputState }

func (NoncurrentVersionTransitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NoncurrentVersionTransitionResponse)(nil)).Elem()
}

func (o NoncurrentVersionTransitionResponseArrayOutput) ToNoncurrentVersionTransitionResponseArrayOutput() NoncurrentVersionTransitionResponseArrayOutput {
	return o
}

func (o NoncurrentVersionTransitionResponseArrayOutput) ToNoncurrentVersionTransitionResponseArrayOutputWithContext(ctx context.Context) NoncurrentVersionTransitionResponseArrayOutput {
	return o
}

func (o NoncurrentVersionTransitionResponseArrayOutput) Index(i pulumi.IntInput) NoncurrentVersionTransitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NoncurrentVersionTransitionResponse {
		return vs[0].([]NoncurrentVersionTransitionResponse)[vs[1].(int)]
	}).(NoncurrentVersionTransitionResponseOutput)
}

// Definition of NotebookInstanceStatusEnumValue
type NotebookInstanceStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// NotebookInstanceStatusEnumValueInput is an input type that accepts NotebookInstanceStatusEnumValueArgs and NotebookInstanceStatusEnumValueOutput values.
// You can construct a concrete instance of `NotebookInstanceStatusEnumValueInput` via:
//
//	NotebookInstanceStatusEnumValueArgs{...}
type NotebookInstanceStatusEnumValueInput interface {
	pulumi.Input

	ToNotebookInstanceStatusEnumValueOutput() NotebookInstanceStatusEnumValueOutput
	ToNotebookInstanceStatusEnumValueOutputWithContext(context.Context) NotebookInstanceStatusEnumValueOutput
}

// Definition of NotebookInstanceStatusEnumValue
type NotebookInstanceStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NotebookInstanceStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceStatusEnumValue)(nil)).Elem()
}

func (i NotebookInstanceStatusEnumValueArgs) ToNotebookInstanceStatusEnumValueOutput() NotebookInstanceStatusEnumValueOutput {
	return i.ToNotebookInstanceStatusEnumValueOutputWithContext(context.Background())
}

func (i NotebookInstanceStatusEnumValueArgs) ToNotebookInstanceStatusEnumValueOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceStatusEnumValueOutput)
}

func (i NotebookInstanceStatusEnumValueArgs) ToNotebookInstanceStatusEnumValuePtrOutput() NotebookInstanceStatusEnumValuePtrOutput {
	return i.ToNotebookInstanceStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i NotebookInstanceStatusEnumValueArgs) ToNotebookInstanceStatusEnumValuePtrOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceStatusEnumValueOutput).ToNotebookInstanceStatusEnumValuePtrOutputWithContext(ctx)
}

// NotebookInstanceStatusEnumValuePtrInput is an input type that accepts NotebookInstanceStatusEnumValueArgs, NotebookInstanceStatusEnumValuePtr and NotebookInstanceStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `NotebookInstanceStatusEnumValuePtrInput` via:
//
//	        NotebookInstanceStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type NotebookInstanceStatusEnumValuePtrInput interface {
	pulumi.Input

	ToNotebookInstanceStatusEnumValuePtrOutput() NotebookInstanceStatusEnumValuePtrOutput
	ToNotebookInstanceStatusEnumValuePtrOutputWithContext(context.Context) NotebookInstanceStatusEnumValuePtrOutput
}

type notebookInstanceStatusEnumValuePtrType NotebookInstanceStatusEnumValueArgs

func NotebookInstanceStatusEnumValuePtr(v *NotebookInstanceStatusEnumValueArgs) NotebookInstanceStatusEnumValuePtrInput {
	return (*notebookInstanceStatusEnumValuePtrType)(v)
}

func (*notebookInstanceStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstanceStatusEnumValue)(nil)).Elem()
}

func (i *notebookInstanceStatusEnumValuePtrType) ToNotebookInstanceStatusEnumValuePtrOutput() NotebookInstanceStatusEnumValuePtrOutput {
	return i.ToNotebookInstanceStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *notebookInstanceStatusEnumValuePtrType) ToNotebookInstanceStatusEnumValuePtrOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceStatusEnumValuePtrOutput)
}

// Definition of NotebookInstanceStatusEnumValue
type NotebookInstanceStatusEnumValueOutput struct{ *pulumi.OutputState }

func (NotebookInstanceStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceStatusEnumValue)(nil)).Elem()
}

func (o NotebookInstanceStatusEnumValueOutput) ToNotebookInstanceStatusEnumValueOutput() NotebookInstanceStatusEnumValueOutput {
	return o
}

func (o NotebookInstanceStatusEnumValueOutput) ToNotebookInstanceStatusEnumValueOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValueOutput {
	return o
}

func (o NotebookInstanceStatusEnumValueOutput) ToNotebookInstanceStatusEnumValuePtrOutput() NotebookInstanceStatusEnumValuePtrOutput {
	return o.ToNotebookInstanceStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o NotebookInstanceStatusEnumValueOutput) ToNotebookInstanceStatusEnumValuePtrOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotebookInstanceStatusEnumValue) *NotebookInstanceStatusEnumValue {
		return &v
	}).(NotebookInstanceStatusEnumValuePtrOutput)
}

// Property value
func (o NotebookInstanceStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookInstanceStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NotebookInstanceStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (NotebookInstanceStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstanceStatusEnumValue)(nil)).Elem()
}

func (o NotebookInstanceStatusEnumValuePtrOutput) ToNotebookInstanceStatusEnumValuePtrOutput() NotebookInstanceStatusEnumValuePtrOutput {
	return o
}

func (o NotebookInstanceStatusEnumValuePtrOutput) ToNotebookInstanceStatusEnumValuePtrOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValuePtrOutput {
	return o
}

func (o NotebookInstanceStatusEnumValuePtrOutput) Elem() NotebookInstanceStatusEnumValueOutput {
	return o.ApplyT(func(v *NotebookInstanceStatusEnumValue) NotebookInstanceStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret NotebookInstanceStatusEnumValue
		return ret
	}).(NotebookInstanceStatusEnumValueOutput)
}

// Property value
func (o NotebookInstanceStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstanceStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of NotebookInstanceStatusEnumValue
type NotebookInstanceStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of NotebookInstanceStatusEnumValue
type NotebookInstanceStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (NotebookInstanceStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceStatusEnumValueResponse)(nil)).Elem()
}

func (o NotebookInstanceStatusEnumValueResponseOutput) ToNotebookInstanceStatusEnumValueResponseOutput() NotebookInstanceStatusEnumValueResponseOutput {
	return o
}

func (o NotebookInstanceStatusEnumValueResponseOutput) ToNotebookInstanceStatusEnumValueResponseOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o NotebookInstanceStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookInstanceStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NotebookInstanceStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (NotebookInstanceStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstanceStatusEnumValueResponse)(nil)).Elem()
}

func (o NotebookInstanceStatusEnumValueResponsePtrOutput) ToNotebookInstanceStatusEnumValueResponsePtrOutput() NotebookInstanceStatusEnumValueResponsePtrOutput {
	return o
}

func (o NotebookInstanceStatusEnumValueResponsePtrOutput) ToNotebookInstanceStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) NotebookInstanceStatusEnumValueResponsePtrOutput {
	return o
}

func (o NotebookInstanceStatusEnumValueResponsePtrOutput) Elem() NotebookInstanceStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *NotebookInstanceStatusEnumValueResponse) NotebookInstanceStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret NotebookInstanceStatusEnumValueResponse
		return ret
	}).(NotebookInstanceStatusEnumValueResponseOutput)
}

// Property value
func (o NotebookInstanceStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstanceStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of NotificationConfiguration
type NotificationConfiguration struct {
	// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
	EventBridgeConfiguration *EventBridgeConfiguration `pulumi:"eventBridgeConfiguration"`
	// Describes the LAMlong functions to invoke and the events for which to invoke them.
	LambdaConfigurations []LambdaConfiguration `pulumi:"lambdaConfigurations"`
	// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   ``autoscaling:EC2_INSTANCE_LAUNCH``   +   ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR``   +   ``autoscaling:EC2_INSTANCE_TERMINATE``   +   ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR``   +   ``autoscaling:TEST_NOTIFICATION``
	NotificationTypes []string `pulumi:"notificationTypes"`
	// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
	QueueConfigurations []QueueConfiguration `pulumi:"queueConfigurations"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic.
	TopicARN *string `pulumi:"topicARN"`
	// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
	TopicArn *string `pulumi:"topicArn"`
	// The topic to which notifications are sent and the events for which notifications are generated.
	TopicConfigurations []TopicConfiguration `pulumi:"topicConfigurations"`
	// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
	TopicStatus *string `pulumi:"topicStatus"`
}

// Defaults sets the appropriate defaults for NotificationConfiguration
func (val *NotificationConfiguration) Defaults() *NotificationConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EventBridgeConfiguration = tmp.EventBridgeConfiguration.Defaults()

	return &tmp
}

// NotificationConfigurationInput is an input type that accepts NotificationConfigurationArgs and NotificationConfigurationOutput values.
// You can construct a concrete instance of `NotificationConfigurationInput` via:
//
//	NotificationConfigurationArgs{...}
type NotificationConfigurationInput interface {
	pulumi.Input

	ToNotificationConfigurationOutput() NotificationConfigurationOutput
	ToNotificationConfigurationOutputWithContext(context.Context) NotificationConfigurationOutput
}

// Definition of NotificationConfiguration
type NotificationConfigurationArgs struct {
	// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
	EventBridgeConfiguration EventBridgeConfigurationPtrInput `pulumi:"eventBridgeConfiguration"`
	// Describes the LAMlong functions to invoke and the events for which to invoke them.
	LambdaConfigurations LambdaConfigurationArrayInput `pulumi:"lambdaConfigurations"`
	// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   ``autoscaling:EC2_INSTANCE_LAUNCH``   +   ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR``   +   ``autoscaling:EC2_INSTANCE_TERMINATE``   +   ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR``   +   ``autoscaling:TEST_NOTIFICATION``
	NotificationTypes pulumi.StringArrayInput `pulumi:"notificationTypes"`
	// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
	QueueConfigurations QueueConfigurationArrayInput `pulumi:"queueConfigurations"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic.
	TopicARN pulumi.StringPtrInput `pulumi:"topicARN"`
	// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
	// The topic to which notifications are sent and the events for which notifications are generated.
	TopicConfigurations TopicConfigurationArrayInput `pulumi:"topicConfigurations"`
	// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
	TopicStatus pulumi.StringPtrInput `pulumi:"topicStatus"`
}

// Defaults sets the appropriate defaults for NotificationConfigurationArgs
func (val *NotificationConfigurationArgs) Defaults() *NotificationConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (NotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfiguration)(nil)).Elem()
}

func (i NotificationConfigurationArgs) ToNotificationConfigurationOutput() NotificationConfigurationOutput {
	return i.ToNotificationConfigurationOutputWithContext(context.Background())
}

func (i NotificationConfigurationArgs) ToNotificationConfigurationOutputWithContext(ctx context.Context) NotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigurationOutput)
}

func (i NotificationConfigurationArgs) ToNotificationConfigurationPtrOutput() NotificationConfigurationPtrOutput {
	return i.ToNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i NotificationConfigurationArgs) ToNotificationConfigurationPtrOutputWithContext(ctx context.Context) NotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigurationOutput).ToNotificationConfigurationPtrOutputWithContext(ctx)
}

// NotificationConfigurationPtrInput is an input type that accepts NotificationConfigurationArgs, NotificationConfigurationPtr and NotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `NotificationConfigurationPtrInput` via:
//
//	        NotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type NotificationConfigurationPtrInput interface {
	pulumi.Input

	ToNotificationConfigurationPtrOutput() NotificationConfigurationPtrOutput
	ToNotificationConfigurationPtrOutputWithContext(context.Context) NotificationConfigurationPtrOutput
}

type notificationConfigurationPtrType NotificationConfigurationArgs

func NotificationConfigurationPtr(v *NotificationConfigurationArgs) NotificationConfigurationPtrInput {
	return (*notificationConfigurationPtrType)(v)
}

func (*notificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfiguration)(nil)).Elem()
}

func (i *notificationConfigurationPtrType) ToNotificationConfigurationPtrOutput() NotificationConfigurationPtrOutput {
	return i.ToNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *notificationConfigurationPtrType) ToNotificationConfigurationPtrOutputWithContext(ctx context.Context) NotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigurationPtrOutput)
}

// NotificationConfigurationArrayInput is an input type that accepts NotificationConfigurationArray and NotificationConfigurationArrayOutput values.
// You can construct a concrete instance of `NotificationConfigurationArrayInput` via:
//
//	NotificationConfigurationArray{ NotificationConfigurationArgs{...} }
type NotificationConfigurationArrayInput interface {
	pulumi.Input

	ToNotificationConfigurationArrayOutput() NotificationConfigurationArrayOutput
	ToNotificationConfigurationArrayOutputWithContext(context.Context) NotificationConfigurationArrayOutput
}

type NotificationConfigurationArray []NotificationConfigurationInput

func (NotificationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationConfiguration)(nil)).Elem()
}

func (i NotificationConfigurationArray) ToNotificationConfigurationArrayOutput() NotificationConfigurationArrayOutput {
	return i.ToNotificationConfigurationArrayOutputWithContext(context.Background())
}

func (i NotificationConfigurationArray) ToNotificationConfigurationArrayOutputWithContext(ctx context.Context) NotificationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigurationArrayOutput)
}

// Definition of NotificationConfiguration
type NotificationConfigurationOutput struct{ *pulumi.OutputState }

func (NotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfiguration)(nil)).Elem()
}

func (o NotificationConfigurationOutput) ToNotificationConfigurationOutput() NotificationConfigurationOutput {
	return o
}

func (o NotificationConfigurationOutput) ToNotificationConfigurationOutputWithContext(ctx context.Context) NotificationConfigurationOutput {
	return o
}

func (o NotificationConfigurationOutput) ToNotificationConfigurationPtrOutput() NotificationConfigurationPtrOutput {
	return o.ToNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o NotificationConfigurationOutput) ToNotificationConfigurationPtrOutputWithContext(ctx context.Context) NotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationConfiguration) *NotificationConfiguration {
		return &v
	}).(NotificationConfigurationPtrOutput)
}

// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
func (o NotificationConfigurationOutput) EventBridgeConfiguration() EventBridgeConfigurationPtrOutput {
	return o.ApplyT(func(v NotificationConfiguration) *EventBridgeConfiguration { return v.EventBridgeConfiguration }).(EventBridgeConfigurationPtrOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
func (o NotificationConfigurationOutput) LambdaConfigurations() LambdaConfigurationArrayOutput {
	return o.ApplyT(func(v NotificationConfiguration) []LambdaConfiguration { return v.LambdaConfigurations }).(LambdaConfigurationArrayOutput)
}

// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   “autoscaling:EC2_INSTANCE_LAUNCH“   +   “autoscaling:EC2_INSTANCE_LAUNCH_ERROR“   +   “autoscaling:EC2_INSTANCE_TERMINATE“   +   “autoscaling:EC2_INSTANCE_TERMINATE_ERROR“   +   “autoscaling:TEST_NOTIFICATION“
func (o NotificationConfigurationOutput) NotificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationConfiguration) []string { return v.NotificationTypes }).(pulumi.StringArrayOutput)
}

// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
func (o NotificationConfigurationOutput) QueueConfigurations() QueueConfigurationArrayOutput {
	return o.ApplyT(func(v NotificationConfiguration) []QueueConfiguration { return v.QueueConfigurations }).(QueueConfigurationArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic.
func (o NotificationConfigurationOutput) TopicARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfiguration) *string { return v.TopicARN }).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
func (o NotificationConfigurationOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfiguration) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

// The topic to which notifications are sent and the events for which notifications are generated.
func (o NotificationConfigurationOutput) TopicConfigurations() TopicConfigurationArrayOutput {
	return o.ApplyT(func(v NotificationConfiguration) []TopicConfiguration { return v.TopicConfigurations }).(TopicConfigurationArrayOutput)
}

// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
func (o NotificationConfigurationOutput) TopicStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfiguration) *string { return v.TopicStatus }).(pulumi.StringPtrOutput)
}

type NotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfiguration)(nil)).Elem()
}

func (o NotificationConfigurationPtrOutput) ToNotificationConfigurationPtrOutput() NotificationConfigurationPtrOutput {
	return o
}

func (o NotificationConfigurationPtrOutput) ToNotificationConfigurationPtrOutputWithContext(ctx context.Context) NotificationConfigurationPtrOutput {
	return o
}

func (o NotificationConfigurationPtrOutput) Elem() NotificationConfigurationOutput {
	return o.ApplyT(func(v *NotificationConfiguration) NotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret NotificationConfiguration
		return ret
	}).(NotificationConfigurationOutput)
}

// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
func (o NotificationConfigurationPtrOutput) EventBridgeConfiguration() EventBridgeConfigurationPtrOutput {
	return o.ApplyT(func(v *NotificationConfiguration) *EventBridgeConfiguration {
		if v == nil {
			return nil
		}
		return v.EventBridgeConfiguration
	}).(EventBridgeConfigurationPtrOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
func (o NotificationConfigurationPtrOutput) LambdaConfigurations() LambdaConfigurationArrayOutput {
	return o.ApplyT(func(v *NotificationConfiguration) []LambdaConfiguration {
		if v == nil {
			return nil
		}
		return v.LambdaConfigurations
	}).(LambdaConfigurationArrayOutput)
}

// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   “autoscaling:EC2_INSTANCE_LAUNCH“   +   “autoscaling:EC2_INSTANCE_LAUNCH_ERROR“   +   “autoscaling:EC2_INSTANCE_TERMINATE“   +   “autoscaling:EC2_INSTANCE_TERMINATE_ERROR“   +   “autoscaling:TEST_NOTIFICATION“
func (o NotificationConfigurationPtrOutput) NotificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.NotificationTypes
	}).(pulumi.StringArrayOutput)
}

// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
func (o NotificationConfigurationPtrOutput) QueueConfigurations() QueueConfigurationArrayOutput {
	return o.ApplyT(func(v *NotificationConfiguration) []QueueConfiguration {
		if v == nil {
			return nil
		}
		return v.QueueConfigurations
	}).(QueueConfigurationArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic.
func (o NotificationConfigurationPtrOutput) TopicARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TopicARN
	}).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
func (o NotificationConfigurationPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TopicArn
	}).(pulumi.StringPtrOutput)
}

// The topic to which notifications are sent and the events for which notifications are generated.
func (o NotificationConfigurationPtrOutput) TopicConfigurations() TopicConfigurationArrayOutput {
	return o.ApplyT(func(v *NotificationConfiguration) []TopicConfiguration {
		if v == nil {
			return nil
		}
		return v.TopicConfigurations
	}).(TopicConfigurationArrayOutput)
}

// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
func (o NotificationConfigurationPtrOutput) TopicStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TopicStatus
	}).(pulumi.StringPtrOutput)
}

type NotificationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NotificationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationConfiguration)(nil)).Elem()
}

func (o NotificationConfigurationArrayOutput) ToNotificationConfigurationArrayOutput() NotificationConfigurationArrayOutput {
	return o
}

func (o NotificationConfigurationArrayOutput) ToNotificationConfigurationArrayOutputWithContext(ctx context.Context) NotificationConfigurationArrayOutput {
	return o
}

func (o NotificationConfigurationArrayOutput) Index(i pulumi.IntInput) NotificationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationConfiguration {
		return vs[0].([]NotificationConfiguration)[vs[1].(int)]
	}).(NotificationConfigurationOutput)
}

// Definition of NotificationConfiguration
type NotificationConfigurationResponse struct {
	// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
	EventBridgeConfiguration *EventBridgeConfigurationResponse `pulumi:"eventBridgeConfiguration"`
	// Describes the LAMlong functions to invoke and the events for which to invoke them.
	LambdaConfigurations []LambdaConfigurationResponse `pulumi:"lambdaConfigurations"`
	// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   ``autoscaling:EC2_INSTANCE_LAUNCH``   +   ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR``   +   ``autoscaling:EC2_INSTANCE_TERMINATE``   +   ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR``   +   ``autoscaling:TEST_NOTIFICATION``
	NotificationTypes []string `pulumi:"notificationTypes"`
	// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
	QueueConfigurations []QueueConfigurationResponse `pulumi:"queueConfigurations"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic.
	TopicARN *string `pulumi:"topicARN"`
	// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
	TopicArn *string `pulumi:"topicArn"`
	// The topic to which notifications are sent and the events for which notifications are generated.
	TopicConfigurations []TopicConfigurationResponse `pulumi:"topicConfigurations"`
	// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
	TopicStatus *string `pulumi:"topicStatus"`
}

// Defaults sets the appropriate defaults for NotificationConfigurationResponse
func (val *NotificationConfigurationResponse) Defaults() *NotificationConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EventBridgeConfiguration = tmp.EventBridgeConfiguration.Defaults()

	return &tmp
}

// Definition of NotificationConfiguration
type NotificationConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NotificationConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfigurationResponse)(nil)).Elem()
}

func (o NotificationConfigurationResponseOutput) ToNotificationConfigurationResponseOutput() NotificationConfigurationResponseOutput {
	return o
}

func (o NotificationConfigurationResponseOutput) ToNotificationConfigurationResponseOutputWithContext(ctx context.Context) NotificationConfigurationResponseOutput {
	return o
}

// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
func (o NotificationConfigurationResponseOutput) EventBridgeConfiguration() EventBridgeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) *EventBridgeConfigurationResponse {
		return v.EventBridgeConfiguration
	}).(EventBridgeConfigurationResponsePtrOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
func (o NotificationConfigurationResponseOutput) LambdaConfigurations() LambdaConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) []LambdaConfigurationResponse { return v.LambdaConfigurations }).(LambdaConfigurationResponseArrayOutput)
}

// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   “autoscaling:EC2_INSTANCE_LAUNCH“   +   “autoscaling:EC2_INSTANCE_LAUNCH_ERROR“   +   “autoscaling:EC2_INSTANCE_TERMINATE“   +   “autoscaling:EC2_INSTANCE_TERMINATE_ERROR“   +   “autoscaling:TEST_NOTIFICATION“
func (o NotificationConfigurationResponseOutput) NotificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) []string { return v.NotificationTypes }).(pulumi.StringArrayOutput)
}

// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
func (o NotificationConfigurationResponseOutput) QueueConfigurations() QueueConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) []QueueConfigurationResponse { return v.QueueConfigurations }).(QueueConfigurationResponseArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic.
func (o NotificationConfigurationResponseOutput) TopicARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) *string { return v.TopicARN }).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
func (o NotificationConfigurationResponseOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

// The topic to which notifications are sent and the events for which notifications are generated.
func (o NotificationConfigurationResponseOutput) TopicConfigurations() TopicConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) []TopicConfigurationResponse { return v.TopicConfigurations }).(TopicConfigurationResponseArrayOutput)
}

// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
func (o NotificationConfigurationResponseOutput) TopicStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationConfigurationResponse) *string { return v.TopicStatus }).(pulumi.StringPtrOutput)
}

type NotificationConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NotificationConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfigurationResponse)(nil)).Elem()
}

func (o NotificationConfigurationResponsePtrOutput) ToNotificationConfigurationResponsePtrOutput() NotificationConfigurationResponsePtrOutput {
	return o
}

func (o NotificationConfigurationResponsePtrOutput) ToNotificationConfigurationResponsePtrOutputWithContext(ctx context.Context) NotificationConfigurationResponsePtrOutput {
	return o
}

func (o NotificationConfigurationResponsePtrOutput) Elem() NotificationConfigurationResponseOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) NotificationConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret NotificationConfigurationResponse
		return ret
	}).(NotificationConfigurationResponseOutput)
}

// Enables delivery of events to Amazon EventBridge. Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*. Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
func (o NotificationConfigurationResponsePtrOutput) EventBridgeConfiguration() EventBridgeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) *EventBridgeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.EventBridgeConfiguration
	}).(EventBridgeConfigurationResponsePtrOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
func (o NotificationConfigurationResponsePtrOutput) LambdaConfigurations() LambdaConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) []LambdaConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LambdaConfigurations
	}).(LambdaConfigurationResponseArrayOutput)
}

// A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   “autoscaling:EC2_INSTANCE_LAUNCH“   +   “autoscaling:EC2_INSTANCE_LAUNCH_ERROR“   +   “autoscaling:EC2_INSTANCE_TERMINATE“   +   “autoscaling:EC2_INSTANCE_TERMINATE_ERROR“   +   “autoscaling:TEST_NOTIFICATION“
func (o NotificationConfigurationResponsePtrOutput) NotificationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.NotificationTypes
	}).(pulumi.StringArrayOutput)
}

// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
func (o NotificationConfigurationResponsePtrOutput) QueueConfigurations() QueueConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) []QueueConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.QueueConfigurations
	}).(QueueConfigurationResponseArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic.
func (o NotificationConfigurationResponsePtrOutput) TopicARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TopicARN
	}).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) that identifies the topic. </p>
func (o NotificationConfigurationResponsePtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TopicArn
	}).(pulumi.StringPtrOutput)
}

// The topic to which notifications are sent and the events for which notifications are generated.
func (o NotificationConfigurationResponsePtrOutput) TopicConfigurations() TopicConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) []TopicConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.TopicConfigurations
	}).(TopicConfigurationResponseArrayOutput)
}

// <p>The current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.</p>
func (o NotificationConfigurationResponsePtrOutput) TopicStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TopicStatus
	}).(pulumi.StringPtrOutput)
}

type NotificationConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationConfigurationResponse)(nil)).Elem()
}

func (o NotificationConfigurationResponseArrayOutput) ToNotificationConfigurationResponseArrayOutput() NotificationConfigurationResponseArrayOutput {
	return o
}

func (o NotificationConfigurationResponseArrayOutput) ToNotificationConfigurationResponseArrayOutputWithContext(ctx context.Context) NotificationConfigurationResponseArrayOutput {
	return o
}

func (o NotificationConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NotificationConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationConfigurationResponse {
		return vs[0].([]NotificationConfigurationResponse)[vs[1].(int)]
	}).(NotificationConfigurationResponseOutput)
}

// Definition of NotificationFilter
type NotificationFilter struct {
	// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
	S3Key *S3KeyFilter `pulumi:"s3Key"`
}

// NotificationFilterInput is an input type that accepts NotificationFilterArgs and NotificationFilterOutput values.
// You can construct a concrete instance of `NotificationFilterInput` via:
//
//	NotificationFilterArgs{...}
type NotificationFilterInput interface {
	pulumi.Input

	ToNotificationFilterOutput() NotificationFilterOutput
	ToNotificationFilterOutputWithContext(context.Context) NotificationFilterOutput
}

// Definition of NotificationFilter
type NotificationFilterArgs struct {
	// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
	S3Key S3KeyFilterPtrInput `pulumi:"s3Key"`
}

func (NotificationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationFilter)(nil)).Elem()
}

func (i NotificationFilterArgs) ToNotificationFilterOutput() NotificationFilterOutput {
	return i.ToNotificationFilterOutputWithContext(context.Background())
}

func (i NotificationFilterArgs) ToNotificationFilterOutputWithContext(ctx context.Context) NotificationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationFilterOutput)
}

func (i NotificationFilterArgs) ToNotificationFilterPtrOutput() NotificationFilterPtrOutput {
	return i.ToNotificationFilterPtrOutputWithContext(context.Background())
}

func (i NotificationFilterArgs) ToNotificationFilterPtrOutputWithContext(ctx context.Context) NotificationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationFilterOutput).ToNotificationFilterPtrOutputWithContext(ctx)
}

// NotificationFilterPtrInput is an input type that accepts NotificationFilterArgs, NotificationFilterPtr and NotificationFilterPtrOutput values.
// You can construct a concrete instance of `NotificationFilterPtrInput` via:
//
//	        NotificationFilterArgs{...}
//
//	or:
//
//	        nil
type NotificationFilterPtrInput interface {
	pulumi.Input

	ToNotificationFilterPtrOutput() NotificationFilterPtrOutput
	ToNotificationFilterPtrOutputWithContext(context.Context) NotificationFilterPtrOutput
}

type notificationFilterPtrType NotificationFilterArgs

func NotificationFilterPtr(v *NotificationFilterArgs) NotificationFilterPtrInput {
	return (*notificationFilterPtrType)(v)
}

func (*notificationFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationFilter)(nil)).Elem()
}

func (i *notificationFilterPtrType) ToNotificationFilterPtrOutput() NotificationFilterPtrOutput {
	return i.ToNotificationFilterPtrOutputWithContext(context.Background())
}

func (i *notificationFilterPtrType) ToNotificationFilterPtrOutputWithContext(ctx context.Context) NotificationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationFilterPtrOutput)
}

// Definition of NotificationFilter
type NotificationFilterOutput struct{ *pulumi.OutputState }

func (NotificationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationFilter)(nil)).Elem()
}

func (o NotificationFilterOutput) ToNotificationFilterOutput() NotificationFilterOutput {
	return o
}

func (o NotificationFilterOutput) ToNotificationFilterOutputWithContext(ctx context.Context) NotificationFilterOutput {
	return o
}

func (o NotificationFilterOutput) ToNotificationFilterPtrOutput() NotificationFilterPtrOutput {
	return o.ToNotificationFilterPtrOutputWithContext(context.Background())
}

func (o NotificationFilterOutput) ToNotificationFilterPtrOutputWithContext(ctx context.Context) NotificationFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationFilter) *NotificationFilter {
		return &v
	}).(NotificationFilterPtrOutput)
}

// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
func (o NotificationFilterOutput) S3Key() S3KeyFilterPtrOutput {
	return o.ApplyT(func(v NotificationFilter) *S3KeyFilter { return v.S3Key }).(S3KeyFilterPtrOutput)
}

type NotificationFilterPtrOutput struct{ *pulumi.OutputState }

func (NotificationFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationFilter)(nil)).Elem()
}

func (o NotificationFilterPtrOutput) ToNotificationFilterPtrOutput() NotificationFilterPtrOutput {
	return o
}

func (o NotificationFilterPtrOutput) ToNotificationFilterPtrOutputWithContext(ctx context.Context) NotificationFilterPtrOutput {
	return o
}

func (o NotificationFilterPtrOutput) Elem() NotificationFilterOutput {
	return o.ApplyT(func(v *NotificationFilter) NotificationFilter {
		if v != nil {
			return *v
		}
		var ret NotificationFilter
		return ret
	}).(NotificationFilterOutput)
}

// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
func (o NotificationFilterPtrOutput) S3Key() S3KeyFilterPtrOutput {
	return o.ApplyT(func(v *NotificationFilter) *S3KeyFilter {
		if v == nil {
			return nil
		}
		return v.S3Key
	}).(S3KeyFilterPtrOutput)
}

// Definition of NotificationFilter
type NotificationFilterResponse struct {
	// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
	S3Key *S3KeyFilterResponse `pulumi:"s3Key"`
}

// Definition of NotificationFilter
type NotificationFilterResponseOutput struct{ *pulumi.OutputState }

func (NotificationFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationFilterResponse)(nil)).Elem()
}

func (o NotificationFilterResponseOutput) ToNotificationFilterResponseOutput() NotificationFilterResponseOutput {
	return o
}

func (o NotificationFilterResponseOutput) ToNotificationFilterResponseOutputWithContext(ctx context.Context) NotificationFilterResponseOutput {
	return o
}

// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
func (o NotificationFilterResponseOutput) S3Key() S3KeyFilterResponsePtrOutput {
	return o.ApplyT(func(v NotificationFilterResponse) *S3KeyFilterResponse { return v.S3Key }).(S3KeyFilterResponsePtrOutput)
}

type NotificationFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (NotificationFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationFilterResponse)(nil)).Elem()
}

func (o NotificationFilterResponsePtrOutput) ToNotificationFilterResponsePtrOutput() NotificationFilterResponsePtrOutput {
	return o
}

func (o NotificationFilterResponsePtrOutput) ToNotificationFilterResponsePtrOutputWithContext(ctx context.Context) NotificationFilterResponsePtrOutput {
	return o
}

func (o NotificationFilterResponsePtrOutput) Elem() NotificationFilterResponseOutput {
	return o.ApplyT(func(v *NotificationFilterResponse) NotificationFilterResponse {
		if v != nil {
			return *v
		}
		var ret NotificationFilterResponse
		return ret
	}).(NotificationFilterResponseOutput)
}

// A container for object key name prefix and suffix filtering rules. A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.  The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
func (o NotificationFilterResponsePtrOutput) S3Key() S3KeyFilterResponsePtrOutput {
	return o.ApplyT(func(v *NotificationFilterResponse) *S3KeyFilterResponse {
		if v == nil {
			return nil
		}
		return v.S3Key
	}).(S3KeyFilterResponsePtrOutput)
}

// Definition of OIDC
type OIDC struct {
	// <p>The issuer URL for the OIDC identity provider.</p>
	Issuer *string `pulumi:"issuer"`
}

// OIDCInput is an input type that accepts OIDCArgs and OIDCOutput values.
// You can construct a concrete instance of `OIDCInput` via:
//
//	OIDCArgs{...}
type OIDCInput interface {
	pulumi.Input

	ToOIDCOutput() OIDCOutput
	ToOIDCOutputWithContext(context.Context) OIDCOutput
}

// Definition of OIDC
type OIDCArgs struct {
	// <p>The issuer URL for the OIDC identity provider.</p>
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
}

func (OIDCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OIDC)(nil)).Elem()
}

func (i OIDCArgs) ToOIDCOutput() OIDCOutput {
	return i.ToOIDCOutputWithContext(context.Background())
}

func (i OIDCArgs) ToOIDCOutputWithContext(ctx context.Context) OIDCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OIDCOutput)
}

func (i OIDCArgs) ToOIDCPtrOutput() OIDCPtrOutput {
	return i.ToOIDCPtrOutputWithContext(context.Background())
}

func (i OIDCArgs) ToOIDCPtrOutputWithContext(ctx context.Context) OIDCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OIDCOutput).ToOIDCPtrOutputWithContext(ctx)
}

// OIDCPtrInput is an input type that accepts OIDCArgs, OIDCPtr and OIDCPtrOutput values.
// You can construct a concrete instance of `OIDCPtrInput` via:
//
//	        OIDCArgs{...}
//
//	or:
//
//	        nil
type OIDCPtrInput interface {
	pulumi.Input

	ToOIDCPtrOutput() OIDCPtrOutput
	ToOIDCPtrOutputWithContext(context.Context) OIDCPtrOutput
}

type oidcPtrType OIDCArgs

func OIDCPtr(v *OIDCArgs) OIDCPtrInput {
	return (*oidcPtrType)(v)
}

func (*oidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OIDC)(nil)).Elem()
}

func (i *oidcPtrType) ToOIDCPtrOutput() OIDCPtrOutput {
	return i.ToOIDCPtrOutputWithContext(context.Background())
}

func (i *oidcPtrType) ToOIDCPtrOutputWithContext(ctx context.Context) OIDCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OIDCPtrOutput)
}

// Definition of OIDC
type OIDCOutput struct{ *pulumi.OutputState }

func (OIDCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OIDC)(nil)).Elem()
}

func (o OIDCOutput) ToOIDCOutput() OIDCOutput {
	return o
}

func (o OIDCOutput) ToOIDCOutputWithContext(ctx context.Context) OIDCOutput {
	return o
}

func (o OIDCOutput) ToOIDCPtrOutput() OIDCPtrOutput {
	return o.ToOIDCPtrOutputWithContext(context.Background())
}

func (o OIDCOutput) ToOIDCPtrOutputWithContext(ctx context.Context) OIDCPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OIDC) *OIDC {
		return &v
	}).(OIDCPtrOutput)
}

// <p>The issuer URL for the OIDC identity provider.</p>
func (o OIDCOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OIDC) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type OIDCPtrOutput struct{ *pulumi.OutputState }

func (OIDCPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OIDC)(nil)).Elem()
}

func (o OIDCPtrOutput) ToOIDCPtrOutput() OIDCPtrOutput {
	return o
}

func (o OIDCPtrOutput) ToOIDCPtrOutputWithContext(ctx context.Context) OIDCPtrOutput {
	return o
}

func (o OIDCPtrOutput) Elem() OIDCOutput {
	return o.ApplyT(func(v *OIDC) OIDC {
		if v != nil {
			return *v
		}
		var ret OIDC
		return ret
	}).(OIDCOutput)
}

// <p>The issuer URL for the OIDC identity provider.</p>
func (o OIDCPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OIDC) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Definition of OIDC
type OIDCResponse struct {
	// <p>The issuer URL for the OIDC identity provider.</p>
	Issuer *string `pulumi:"issuer"`
}

// Definition of OIDC
type OIDCResponseOutput struct{ *pulumi.OutputState }

func (OIDCResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OIDCResponse)(nil)).Elem()
}

func (o OIDCResponseOutput) ToOIDCResponseOutput() OIDCResponseOutput {
	return o
}

func (o OIDCResponseOutput) ToOIDCResponseOutputWithContext(ctx context.Context) OIDCResponseOutput {
	return o
}

// <p>The issuer URL for the OIDC identity provider.</p>
func (o OIDCResponseOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OIDCResponse) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type OIDCResponsePtrOutput struct{ *pulumi.OutputState }

func (OIDCResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OIDCResponse)(nil)).Elem()
}

func (o OIDCResponsePtrOutput) ToOIDCResponsePtrOutput() OIDCResponsePtrOutput {
	return o
}

func (o OIDCResponsePtrOutput) ToOIDCResponsePtrOutputWithContext(ctx context.Context) OIDCResponsePtrOutput {
	return o
}

func (o OIDCResponsePtrOutput) Elem() OIDCResponseOutput {
	return o.ApplyT(func(v *OIDCResponse) OIDCResponse {
		if v != nil {
			return *v
		}
		var ret OIDCResponse
		return ret
	}).(OIDCResponseOutput)
}

// <p>The issuer URL for the OIDC identity provider.</p>
func (o OIDCResponsePtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OIDCResponse) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Definition of ObjectLockConfiguration
type ObjectLockConfiguration struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled *string `pulumi:"objectLockEnabled"`
	// Specifies the Object Lock rule for the specified object. Enable this rule when you apply ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply ``ObjectLockConfiguration`` to a bucket.
	Rule *ObjectLockRule `pulumi:"rule"`
}

// ObjectLockConfigurationInput is an input type that accepts ObjectLockConfigurationArgs and ObjectLockConfigurationOutput values.
// You can construct a concrete instance of `ObjectLockConfigurationInput` via:
//
//	ObjectLockConfigurationArgs{...}
type ObjectLockConfigurationInput interface {
	pulumi.Input

	ToObjectLockConfigurationOutput() ObjectLockConfigurationOutput
	ToObjectLockConfigurationOutputWithContext(context.Context) ObjectLockConfigurationOutput
}

// Definition of ObjectLockConfiguration
type ObjectLockConfigurationArgs struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled pulumi.StringPtrInput `pulumi:"objectLockEnabled"`
	// Specifies the Object Lock rule for the specified object. Enable this rule when you apply ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply ``ObjectLockConfiguration`` to a bucket.
	Rule ObjectLockRulePtrInput `pulumi:"rule"`
}

func (ObjectLockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLockConfiguration)(nil)).Elem()
}

func (i ObjectLockConfigurationArgs) ToObjectLockConfigurationOutput() ObjectLockConfigurationOutput {
	return i.ToObjectLockConfigurationOutputWithContext(context.Background())
}

func (i ObjectLockConfigurationArgs) ToObjectLockConfigurationOutputWithContext(ctx context.Context) ObjectLockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockConfigurationOutput)
}

func (i ObjectLockConfigurationArgs) ToObjectLockConfigurationPtrOutput() ObjectLockConfigurationPtrOutput {
	return i.ToObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (i ObjectLockConfigurationArgs) ToObjectLockConfigurationPtrOutputWithContext(ctx context.Context) ObjectLockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockConfigurationOutput).ToObjectLockConfigurationPtrOutputWithContext(ctx)
}

// ObjectLockConfigurationPtrInput is an input type that accepts ObjectLockConfigurationArgs, ObjectLockConfigurationPtr and ObjectLockConfigurationPtrOutput values.
// You can construct a concrete instance of `ObjectLockConfigurationPtrInput` via:
//
//	        ObjectLockConfigurationArgs{...}
//
//	or:
//
//	        nil
type ObjectLockConfigurationPtrInput interface {
	pulumi.Input

	ToObjectLockConfigurationPtrOutput() ObjectLockConfigurationPtrOutput
	ToObjectLockConfigurationPtrOutputWithContext(context.Context) ObjectLockConfigurationPtrOutput
}

type objectLockConfigurationPtrType ObjectLockConfigurationArgs

func ObjectLockConfigurationPtr(v *ObjectLockConfigurationArgs) ObjectLockConfigurationPtrInput {
	return (*objectLockConfigurationPtrType)(v)
}

func (*objectLockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockConfiguration)(nil)).Elem()
}

func (i *objectLockConfigurationPtrType) ToObjectLockConfigurationPtrOutput() ObjectLockConfigurationPtrOutput {
	return i.ToObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (i *objectLockConfigurationPtrType) ToObjectLockConfigurationPtrOutputWithContext(ctx context.Context) ObjectLockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockConfigurationPtrOutput)
}

// Definition of ObjectLockConfiguration
type ObjectLockConfigurationOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLockConfiguration)(nil)).Elem()
}

func (o ObjectLockConfigurationOutput) ToObjectLockConfigurationOutput() ObjectLockConfigurationOutput {
	return o
}

func (o ObjectLockConfigurationOutput) ToObjectLockConfigurationOutputWithContext(ctx context.Context) ObjectLockConfigurationOutput {
	return o
}

func (o ObjectLockConfigurationOutput) ToObjectLockConfigurationPtrOutput() ObjectLockConfigurationPtrOutput {
	return o.ToObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (o ObjectLockConfigurationOutput) ToObjectLockConfigurationPtrOutputWithContext(ctx context.Context) ObjectLockConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectLockConfiguration) *ObjectLockConfiguration {
		return &v
	}).(ObjectLockConfigurationPtrOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationOutput) ObjectLockEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectLockConfiguration) *string { return v.ObjectLockEnabled }).(pulumi.StringPtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable this rule when you apply “ObjectLockConfiguration“ to a bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationOutput) Rule() ObjectLockRulePtrOutput {
	return o.ApplyT(func(v ObjectLockConfiguration) *ObjectLockRule { return v.Rule }).(ObjectLockRulePtrOutput)
}

type ObjectLockConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockConfiguration)(nil)).Elem()
}

func (o ObjectLockConfigurationPtrOutput) ToObjectLockConfigurationPtrOutput() ObjectLockConfigurationPtrOutput {
	return o
}

func (o ObjectLockConfigurationPtrOutput) ToObjectLockConfigurationPtrOutputWithContext(ctx context.Context) ObjectLockConfigurationPtrOutput {
	return o
}

func (o ObjectLockConfigurationPtrOutput) Elem() ObjectLockConfigurationOutput {
	return o.ApplyT(func(v *ObjectLockConfiguration) ObjectLockConfiguration {
		if v != nil {
			return *v
		}
		var ret ObjectLockConfiguration
		return ret
	}).(ObjectLockConfigurationOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationPtrOutput) ObjectLockEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectLockConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ObjectLockEnabled
	}).(pulumi.StringPtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable this rule when you apply “ObjectLockConfiguration“ to a bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationPtrOutput) Rule() ObjectLockRulePtrOutput {
	return o.ApplyT(func(v *ObjectLockConfiguration) *ObjectLockRule {
		if v == nil {
			return nil
		}
		return v.Rule
	}).(ObjectLockRulePtrOutput)
}

// Definition of ObjectLockConfiguration
type ObjectLockConfigurationResponse struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled *string `pulumi:"objectLockEnabled"`
	// Specifies the Object Lock rule for the specified object. Enable this rule when you apply ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply ``ObjectLockConfiguration`` to a bucket.
	Rule *ObjectLockRuleResponse `pulumi:"rule"`
}

// Definition of ObjectLockConfiguration
type ObjectLockConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLockConfigurationResponse)(nil)).Elem()
}

func (o ObjectLockConfigurationResponseOutput) ToObjectLockConfigurationResponseOutput() ObjectLockConfigurationResponseOutput {
	return o
}

func (o ObjectLockConfigurationResponseOutput) ToObjectLockConfigurationResponseOutputWithContext(ctx context.Context) ObjectLockConfigurationResponseOutput {
	return o
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationResponseOutput) ObjectLockEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectLockConfigurationResponse) *string { return v.ObjectLockEnabled }).(pulumi.StringPtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable this rule when you apply “ObjectLockConfiguration“ to a bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationResponseOutput) Rule() ObjectLockRuleResponsePtrOutput {
	return o.ApplyT(func(v ObjectLockConfigurationResponse) *ObjectLockRuleResponse { return v.Rule }).(ObjectLockRuleResponsePtrOutput)
}

type ObjectLockConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockConfigurationResponse)(nil)).Elem()
}

func (o ObjectLockConfigurationResponsePtrOutput) ToObjectLockConfigurationResponsePtrOutput() ObjectLockConfigurationResponsePtrOutput {
	return o
}

func (o ObjectLockConfigurationResponsePtrOutput) ToObjectLockConfigurationResponsePtrOutputWithContext(ctx context.Context) ObjectLockConfigurationResponsePtrOutput {
	return o
}

func (o ObjectLockConfigurationResponsePtrOutput) Elem() ObjectLockConfigurationResponseOutput {
	return o.ApplyT(func(v *ObjectLockConfigurationResponse) ObjectLockConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ObjectLockConfigurationResponse
		return ret
	}).(ObjectLockConfigurationResponseOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationResponsePtrOutput) ObjectLockEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectLockConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectLockEnabled
	}).(pulumi.StringPtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable this rule when you apply “ObjectLockConfiguration“ to a bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
func (o ObjectLockConfigurationResponsePtrOutput) Rule() ObjectLockRuleResponsePtrOutput {
	return o.ApplyT(func(v *ObjectLockConfigurationResponse) *ObjectLockRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rule
	}).(ObjectLockRuleResponsePtrOutput)
}

// Definition of ObjectLockRule
type ObjectLockRule struct {
	// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The ``DefaultRetention`` settings require both a mode and a period.  +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
	DefaultRetention *DefaultRetention `pulumi:"defaultRetention"`
}

// ObjectLockRuleInput is an input type that accepts ObjectLockRuleArgs and ObjectLockRuleOutput values.
// You can construct a concrete instance of `ObjectLockRuleInput` via:
//
//	ObjectLockRuleArgs{...}
type ObjectLockRuleInput interface {
	pulumi.Input

	ToObjectLockRuleOutput() ObjectLockRuleOutput
	ToObjectLockRuleOutputWithContext(context.Context) ObjectLockRuleOutput
}

// Definition of ObjectLockRule
type ObjectLockRuleArgs struct {
	// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The ``DefaultRetention`` settings require both a mode and a period.  +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
	DefaultRetention DefaultRetentionPtrInput `pulumi:"defaultRetention"`
}

func (ObjectLockRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLockRule)(nil)).Elem()
}

func (i ObjectLockRuleArgs) ToObjectLockRuleOutput() ObjectLockRuleOutput {
	return i.ToObjectLockRuleOutputWithContext(context.Background())
}

func (i ObjectLockRuleArgs) ToObjectLockRuleOutputWithContext(ctx context.Context) ObjectLockRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockRuleOutput)
}

func (i ObjectLockRuleArgs) ToObjectLockRulePtrOutput() ObjectLockRulePtrOutput {
	return i.ToObjectLockRulePtrOutputWithContext(context.Background())
}

func (i ObjectLockRuleArgs) ToObjectLockRulePtrOutputWithContext(ctx context.Context) ObjectLockRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockRuleOutput).ToObjectLockRulePtrOutputWithContext(ctx)
}

// ObjectLockRulePtrInput is an input type that accepts ObjectLockRuleArgs, ObjectLockRulePtr and ObjectLockRulePtrOutput values.
// You can construct a concrete instance of `ObjectLockRulePtrInput` via:
//
//	        ObjectLockRuleArgs{...}
//
//	or:
//
//	        nil
type ObjectLockRulePtrInput interface {
	pulumi.Input

	ToObjectLockRulePtrOutput() ObjectLockRulePtrOutput
	ToObjectLockRulePtrOutputWithContext(context.Context) ObjectLockRulePtrOutput
}

type objectLockRulePtrType ObjectLockRuleArgs

func ObjectLockRulePtr(v *ObjectLockRuleArgs) ObjectLockRulePtrInput {
	return (*objectLockRulePtrType)(v)
}

func (*objectLockRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockRule)(nil)).Elem()
}

func (i *objectLockRulePtrType) ToObjectLockRulePtrOutput() ObjectLockRulePtrOutput {
	return i.ToObjectLockRulePtrOutputWithContext(context.Background())
}

func (i *objectLockRulePtrType) ToObjectLockRulePtrOutputWithContext(ctx context.Context) ObjectLockRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockRulePtrOutput)
}

// Definition of ObjectLockRule
type ObjectLockRuleOutput struct{ *pulumi.OutputState }

func (ObjectLockRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLockRule)(nil)).Elem()
}

func (o ObjectLockRuleOutput) ToObjectLockRuleOutput() ObjectLockRuleOutput {
	return o
}

func (o ObjectLockRuleOutput) ToObjectLockRuleOutputWithContext(ctx context.Context) ObjectLockRuleOutput {
	return o
}

func (o ObjectLockRuleOutput) ToObjectLockRulePtrOutput() ObjectLockRulePtrOutput {
	return o.ToObjectLockRulePtrOutputWithContext(context.Background())
}

func (o ObjectLockRuleOutput) ToObjectLockRulePtrOutputWithContext(ctx context.Context) ObjectLockRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectLockRule) *ObjectLockRule {
		return &v
	}).(ObjectLockRulePtrOutput)
}

// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The “DefaultRetention“ settings require both a mode and a period.  +  The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
func (o ObjectLockRuleOutput) DefaultRetention() DefaultRetentionPtrOutput {
	return o.ApplyT(func(v ObjectLockRule) *DefaultRetention { return v.DefaultRetention }).(DefaultRetentionPtrOutput)
}

type ObjectLockRulePtrOutput struct{ *pulumi.OutputState }

func (ObjectLockRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockRule)(nil)).Elem()
}

func (o ObjectLockRulePtrOutput) ToObjectLockRulePtrOutput() ObjectLockRulePtrOutput {
	return o
}

func (o ObjectLockRulePtrOutput) ToObjectLockRulePtrOutputWithContext(ctx context.Context) ObjectLockRulePtrOutput {
	return o
}

func (o ObjectLockRulePtrOutput) Elem() ObjectLockRuleOutput {
	return o.ApplyT(func(v *ObjectLockRule) ObjectLockRule {
		if v != nil {
			return *v
		}
		var ret ObjectLockRule
		return ret
	}).(ObjectLockRuleOutput)
}

// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The “DefaultRetention“ settings require both a mode and a period.  +  The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
func (o ObjectLockRulePtrOutput) DefaultRetention() DefaultRetentionPtrOutput {
	return o.ApplyT(func(v *ObjectLockRule) *DefaultRetention {
		if v == nil {
			return nil
		}
		return v.DefaultRetention
	}).(DefaultRetentionPtrOutput)
}

// Definition of ObjectLockRule
type ObjectLockRuleResponse struct {
	// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The ``DefaultRetention`` settings require both a mode and a period.  +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
	DefaultRetention *DefaultRetentionResponse `pulumi:"defaultRetention"`
}

// Definition of ObjectLockRule
type ObjectLockRuleResponseOutput struct{ *pulumi.OutputState }

func (ObjectLockRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLockRuleResponse)(nil)).Elem()
}

func (o ObjectLockRuleResponseOutput) ToObjectLockRuleResponseOutput() ObjectLockRuleResponseOutput {
	return o
}

func (o ObjectLockRuleResponseOutput) ToObjectLockRuleResponseOutputWithContext(ctx context.Context) ObjectLockRuleResponseOutput {
	return o
}

// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The “DefaultRetention“ settings require both a mode and a period.  +  The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
func (o ObjectLockRuleResponseOutput) DefaultRetention() DefaultRetentionResponsePtrOutput {
	return o.ApplyT(func(v ObjectLockRuleResponse) *DefaultRetentionResponse { return v.DefaultRetention }).(DefaultRetentionResponsePtrOutput)
}

type ObjectLockRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (ObjectLockRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockRuleResponse)(nil)).Elem()
}

func (o ObjectLockRuleResponsePtrOutput) ToObjectLockRuleResponsePtrOutput() ObjectLockRuleResponsePtrOutput {
	return o
}

func (o ObjectLockRuleResponsePtrOutput) ToObjectLockRuleResponsePtrOutputWithContext(ctx context.Context) ObjectLockRuleResponsePtrOutput {
	return o
}

func (o ObjectLockRuleResponsePtrOutput) Elem() ObjectLockRuleResponseOutput {
	return o.ApplyT(func(v *ObjectLockRuleResponse) ObjectLockRuleResponse {
		if v != nil {
			return *v
		}
		var ret ObjectLockRuleResponse
		return ret
	}).(ObjectLockRuleResponseOutput)
}

// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html). The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.   +  The “DefaultRetention“ settings require both a mode and a period.  +  The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
func (o ObjectLockRuleResponsePtrOutput) DefaultRetention() DefaultRetentionResponsePtrOutput {
	return o.ApplyT(func(v *ObjectLockRuleResponse) *DefaultRetentionResponse {
		if v == nil {
			return nil
		}
		return v.DefaultRetention
	}).(DefaultRetentionResponsePtrOutput)
}

// Definition of OffPeakWindow
type OffPeakWindow struct {
	// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
	WindowStartTime *WindowStartTime `pulumi:"windowStartTime"`
}

// OffPeakWindowInput is an input type that accepts OffPeakWindowArgs and OffPeakWindowOutput values.
// You can construct a concrete instance of `OffPeakWindowInput` via:
//
//	OffPeakWindowArgs{...}
type OffPeakWindowInput interface {
	pulumi.Input

	ToOffPeakWindowOutput() OffPeakWindowOutput
	ToOffPeakWindowOutputWithContext(context.Context) OffPeakWindowOutput
}

// Definition of OffPeakWindow
type OffPeakWindowArgs struct {
	// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
	WindowStartTime WindowStartTimePtrInput `pulumi:"windowStartTime"`
}

func (OffPeakWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OffPeakWindow)(nil)).Elem()
}

func (i OffPeakWindowArgs) ToOffPeakWindowOutput() OffPeakWindowOutput {
	return i.ToOffPeakWindowOutputWithContext(context.Background())
}

func (i OffPeakWindowArgs) ToOffPeakWindowOutputWithContext(ctx context.Context) OffPeakWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OffPeakWindowOutput)
}

func (i OffPeakWindowArgs) ToOffPeakWindowPtrOutput() OffPeakWindowPtrOutput {
	return i.ToOffPeakWindowPtrOutputWithContext(context.Background())
}

func (i OffPeakWindowArgs) ToOffPeakWindowPtrOutputWithContext(ctx context.Context) OffPeakWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OffPeakWindowOutput).ToOffPeakWindowPtrOutputWithContext(ctx)
}

// OffPeakWindowPtrInput is an input type that accepts OffPeakWindowArgs, OffPeakWindowPtr and OffPeakWindowPtrOutput values.
// You can construct a concrete instance of `OffPeakWindowPtrInput` via:
//
//	        OffPeakWindowArgs{...}
//
//	or:
//
//	        nil
type OffPeakWindowPtrInput interface {
	pulumi.Input

	ToOffPeakWindowPtrOutput() OffPeakWindowPtrOutput
	ToOffPeakWindowPtrOutputWithContext(context.Context) OffPeakWindowPtrOutput
}

type offPeakWindowPtrType OffPeakWindowArgs

func OffPeakWindowPtr(v *OffPeakWindowArgs) OffPeakWindowPtrInput {
	return (*offPeakWindowPtrType)(v)
}

func (*offPeakWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OffPeakWindow)(nil)).Elem()
}

func (i *offPeakWindowPtrType) ToOffPeakWindowPtrOutput() OffPeakWindowPtrOutput {
	return i.ToOffPeakWindowPtrOutputWithContext(context.Background())
}

func (i *offPeakWindowPtrType) ToOffPeakWindowPtrOutputWithContext(ctx context.Context) OffPeakWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OffPeakWindowPtrOutput)
}

// Definition of OffPeakWindow
type OffPeakWindowOutput struct{ *pulumi.OutputState }

func (OffPeakWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OffPeakWindow)(nil)).Elem()
}

func (o OffPeakWindowOutput) ToOffPeakWindowOutput() OffPeakWindowOutput {
	return o
}

func (o OffPeakWindowOutput) ToOffPeakWindowOutputWithContext(ctx context.Context) OffPeakWindowOutput {
	return o
}

func (o OffPeakWindowOutput) ToOffPeakWindowPtrOutput() OffPeakWindowPtrOutput {
	return o.ToOffPeakWindowPtrOutputWithContext(context.Background())
}

func (o OffPeakWindowOutput) ToOffPeakWindowPtrOutputWithContext(ctx context.Context) OffPeakWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OffPeakWindow) *OffPeakWindow {
		return &v
	}).(OffPeakWindowPtrOutput)
}

// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
func (o OffPeakWindowOutput) WindowStartTime() WindowStartTimePtrOutput {
	return o.ApplyT(func(v OffPeakWindow) *WindowStartTime { return v.WindowStartTime }).(WindowStartTimePtrOutput)
}

type OffPeakWindowPtrOutput struct{ *pulumi.OutputState }

func (OffPeakWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OffPeakWindow)(nil)).Elem()
}

func (o OffPeakWindowPtrOutput) ToOffPeakWindowPtrOutput() OffPeakWindowPtrOutput {
	return o
}

func (o OffPeakWindowPtrOutput) ToOffPeakWindowPtrOutputWithContext(ctx context.Context) OffPeakWindowPtrOutput {
	return o
}

func (o OffPeakWindowPtrOutput) Elem() OffPeakWindowOutput {
	return o.ApplyT(func(v *OffPeakWindow) OffPeakWindow {
		if v != nil {
			return *v
		}
		var ret OffPeakWindow
		return ret
	}).(OffPeakWindowOutput)
}

// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
func (o OffPeakWindowPtrOutput) WindowStartTime() WindowStartTimePtrOutput {
	return o.ApplyT(func(v *OffPeakWindow) *WindowStartTime {
		if v == nil {
			return nil
		}
		return v.WindowStartTime
	}).(WindowStartTimePtrOutput)
}

// Definition of OffPeakWindowOptions
type OffPeakWindowOptions struct {
	// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
	Enabled *bool `pulumi:"enabled"`
	// <p>Off-peak window settings for the domain.</p>
	OffPeakWindow *OffPeakWindow `pulumi:"offPeakWindow"`
}

// OffPeakWindowOptionsInput is an input type that accepts OffPeakWindowOptionsArgs and OffPeakWindowOptionsOutput values.
// You can construct a concrete instance of `OffPeakWindowOptionsInput` via:
//
//	OffPeakWindowOptionsArgs{...}
type OffPeakWindowOptionsInput interface {
	pulumi.Input

	ToOffPeakWindowOptionsOutput() OffPeakWindowOptionsOutput
	ToOffPeakWindowOptionsOutputWithContext(context.Context) OffPeakWindowOptionsOutput
}

// Definition of OffPeakWindowOptions
type OffPeakWindowOptionsArgs struct {
	// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// <p>Off-peak window settings for the domain.</p>
	OffPeakWindow OffPeakWindowPtrInput `pulumi:"offPeakWindow"`
}

func (OffPeakWindowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OffPeakWindowOptions)(nil)).Elem()
}

func (i OffPeakWindowOptionsArgs) ToOffPeakWindowOptionsOutput() OffPeakWindowOptionsOutput {
	return i.ToOffPeakWindowOptionsOutputWithContext(context.Background())
}

func (i OffPeakWindowOptionsArgs) ToOffPeakWindowOptionsOutputWithContext(ctx context.Context) OffPeakWindowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OffPeakWindowOptionsOutput)
}

func (i OffPeakWindowOptionsArgs) ToOffPeakWindowOptionsPtrOutput() OffPeakWindowOptionsPtrOutput {
	return i.ToOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (i OffPeakWindowOptionsArgs) ToOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) OffPeakWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OffPeakWindowOptionsOutput).ToOffPeakWindowOptionsPtrOutputWithContext(ctx)
}

// OffPeakWindowOptionsPtrInput is an input type that accepts OffPeakWindowOptionsArgs, OffPeakWindowOptionsPtr and OffPeakWindowOptionsPtrOutput values.
// You can construct a concrete instance of `OffPeakWindowOptionsPtrInput` via:
//
//	        OffPeakWindowOptionsArgs{...}
//
//	or:
//
//	        nil
type OffPeakWindowOptionsPtrInput interface {
	pulumi.Input

	ToOffPeakWindowOptionsPtrOutput() OffPeakWindowOptionsPtrOutput
	ToOffPeakWindowOptionsPtrOutputWithContext(context.Context) OffPeakWindowOptionsPtrOutput
}

type offPeakWindowOptionsPtrType OffPeakWindowOptionsArgs

func OffPeakWindowOptionsPtr(v *OffPeakWindowOptionsArgs) OffPeakWindowOptionsPtrInput {
	return (*offPeakWindowOptionsPtrType)(v)
}

func (*offPeakWindowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OffPeakWindowOptions)(nil)).Elem()
}

func (i *offPeakWindowOptionsPtrType) ToOffPeakWindowOptionsPtrOutput() OffPeakWindowOptionsPtrOutput {
	return i.ToOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (i *offPeakWindowOptionsPtrType) ToOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) OffPeakWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OffPeakWindowOptionsPtrOutput)
}

// Definition of OffPeakWindowOptions
type OffPeakWindowOptionsOutput struct{ *pulumi.OutputState }

func (OffPeakWindowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OffPeakWindowOptions)(nil)).Elem()
}

func (o OffPeakWindowOptionsOutput) ToOffPeakWindowOptionsOutput() OffPeakWindowOptionsOutput {
	return o
}

func (o OffPeakWindowOptionsOutput) ToOffPeakWindowOptionsOutputWithContext(ctx context.Context) OffPeakWindowOptionsOutput {
	return o
}

func (o OffPeakWindowOptionsOutput) ToOffPeakWindowOptionsPtrOutput() OffPeakWindowOptionsPtrOutput {
	return o.ToOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (o OffPeakWindowOptionsOutput) ToOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) OffPeakWindowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OffPeakWindowOptions) *OffPeakWindowOptions {
		return &v
	}).(OffPeakWindowOptionsPtrOutput)
}

// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
func (o OffPeakWindowOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OffPeakWindowOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// <p>Off-peak window settings for the domain.</p>
func (o OffPeakWindowOptionsOutput) OffPeakWindow() OffPeakWindowPtrOutput {
	return o.ApplyT(func(v OffPeakWindowOptions) *OffPeakWindow { return v.OffPeakWindow }).(OffPeakWindowPtrOutput)
}

type OffPeakWindowOptionsPtrOutput struct{ *pulumi.OutputState }

func (OffPeakWindowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OffPeakWindowOptions)(nil)).Elem()
}

func (o OffPeakWindowOptionsPtrOutput) ToOffPeakWindowOptionsPtrOutput() OffPeakWindowOptionsPtrOutput {
	return o
}

func (o OffPeakWindowOptionsPtrOutput) ToOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) OffPeakWindowOptionsPtrOutput {
	return o
}

func (o OffPeakWindowOptionsPtrOutput) Elem() OffPeakWindowOptionsOutput {
	return o.ApplyT(func(v *OffPeakWindowOptions) OffPeakWindowOptions {
		if v != nil {
			return *v
		}
		var ret OffPeakWindowOptions
		return ret
	}).(OffPeakWindowOptionsOutput)
}

// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
func (o OffPeakWindowOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OffPeakWindowOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// <p>Off-peak window settings for the domain.</p>
func (o OffPeakWindowOptionsPtrOutput) OffPeakWindow() OffPeakWindowPtrOutput {
	return o.ApplyT(func(v *OffPeakWindowOptions) *OffPeakWindow {
		if v == nil {
			return nil
		}
		return v.OffPeakWindow
	}).(OffPeakWindowPtrOutput)
}

// Definition of OffPeakWindowOptions
type OffPeakWindowOptionsResponse struct {
	// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
	Enabled *bool `pulumi:"enabled"`
	// <p>Off-peak window settings for the domain.</p>
	OffPeakWindow *OffPeakWindowResponse `pulumi:"offPeakWindow"`
}

// Definition of OffPeakWindowOptions
type OffPeakWindowOptionsResponseOutput struct{ *pulumi.OutputState }

func (OffPeakWindowOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OffPeakWindowOptionsResponse)(nil)).Elem()
}

func (o OffPeakWindowOptionsResponseOutput) ToOffPeakWindowOptionsResponseOutput() OffPeakWindowOptionsResponseOutput {
	return o
}

func (o OffPeakWindowOptionsResponseOutput) ToOffPeakWindowOptionsResponseOutputWithContext(ctx context.Context) OffPeakWindowOptionsResponseOutput {
	return o
}

// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
func (o OffPeakWindowOptionsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OffPeakWindowOptionsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// <p>Off-peak window settings for the domain.</p>
func (o OffPeakWindowOptionsResponseOutput) OffPeakWindow() OffPeakWindowResponsePtrOutput {
	return o.ApplyT(func(v OffPeakWindowOptionsResponse) *OffPeakWindowResponse { return v.OffPeakWindow }).(OffPeakWindowResponsePtrOutput)
}

type OffPeakWindowOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (OffPeakWindowOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OffPeakWindowOptionsResponse)(nil)).Elem()
}

func (o OffPeakWindowOptionsResponsePtrOutput) ToOffPeakWindowOptionsResponsePtrOutput() OffPeakWindowOptionsResponsePtrOutput {
	return o
}

func (o OffPeakWindowOptionsResponsePtrOutput) ToOffPeakWindowOptionsResponsePtrOutputWithContext(ctx context.Context) OffPeakWindowOptionsResponsePtrOutput {
	return o
}

func (o OffPeakWindowOptionsResponsePtrOutput) Elem() OffPeakWindowOptionsResponseOutput {
	return o.ApplyT(func(v *OffPeakWindowOptionsResponse) OffPeakWindowOptionsResponse {
		if v != nil {
			return *v
		}
		var ret OffPeakWindowOptionsResponse
		return ret
	}).(OffPeakWindowOptionsResponseOutput)
}

// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>
func (o OffPeakWindowOptionsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OffPeakWindowOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// <p>Off-peak window settings for the domain.</p>
func (o OffPeakWindowOptionsResponsePtrOutput) OffPeakWindow() OffPeakWindowResponsePtrOutput {
	return o.ApplyT(func(v *OffPeakWindowOptionsResponse) *OffPeakWindowResponse {
		if v == nil {
			return nil
		}
		return v.OffPeakWindow
	}).(OffPeakWindowResponsePtrOutput)
}

// Definition of OffPeakWindow
type OffPeakWindowResponse struct {
	// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
	WindowStartTime *WindowStartTimeResponse `pulumi:"windowStartTime"`
}

// Definition of OffPeakWindow
type OffPeakWindowResponseOutput struct{ *pulumi.OutputState }

func (OffPeakWindowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OffPeakWindowResponse)(nil)).Elem()
}

func (o OffPeakWindowResponseOutput) ToOffPeakWindowResponseOutput() OffPeakWindowResponseOutput {
	return o
}

func (o OffPeakWindowResponseOutput) ToOffPeakWindowResponseOutputWithContext(ctx context.Context) OffPeakWindowResponseOutput {
	return o
}

// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
func (o OffPeakWindowResponseOutput) WindowStartTime() WindowStartTimeResponsePtrOutput {
	return o.ApplyT(func(v OffPeakWindowResponse) *WindowStartTimeResponse { return v.WindowStartTime }).(WindowStartTimeResponsePtrOutput)
}

type OffPeakWindowResponsePtrOutput struct{ *pulumi.OutputState }

func (OffPeakWindowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OffPeakWindowResponse)(nil)).Elem()
}

func (o OffPeakWindowResponsePtrOutput) ToOffPeakWindowResponsePtrOutput() OffPeakWindowResponsePtrOutput {
	return o
}

func (o OffPeakWindowResponsePtrOutput) ToOffPeakWindowResponsePtrOutputWithContext(ctx context.Context) OffPeakWindowResponsePtrOutput {
	return o
}

func (o OffPeakWindowResponsePtrOutput) Elem() OffPeakWindowResponseOutput {
	return o.ApplyT(func(v *OffPeakWindowResponse) OffPeakWindowResponse {
		if v != nil {
			return *v
		}
		var ret OffPeakWindowResponse
		return ret
	}).(OffPeakWindowResponseOutput)
}

// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.</p>
func (o OffPeakWindowResponsePtrOutput) WindowStartTime() WindowStartTimeResponsePtrOutput {
	return o.ApplyT(func(v *OffPeakWindowResponse) *WindowStartTimeResponse {
		if v == nil {
			return nil
		}
		return v.WindowStartTime
	}).(WindowStartTimeResponsePtrOutput)
}

// Definition of OpenIDConnectConfig
type OpenIDConnectConfig struct {
	// <p>The number of milliseconds that a token is valid after being authenticated.</p>
	AuthTTL *float64 `pulumi:"authTTL"`
	// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
	ClientId *string `pulumi:"clientId"`
	// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
	IatTTL *float64 `pulumi:"iatTTL"`
	// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
	Issuer *string `pulumi:"issuer"`
}

// OpenIDConnectConfigInput is an input type that accepts OpenIDConnectConfigArgs and OpenIDConnectConfigOutput values.
// You can construct a concrete instance of `OpenIDConnectConfigInput` via:
//
//	OpenIDConnectConfigArgs{...}
type OpenIDConnectConfigInput interface {
	pulumi.Input

	ToOpenIDConnectConfigOutput() OpenIDConnectConfigOutput
	ToOpenIDConnectConfigOutputWithContext(context.Context) OpenIDConnectConfigOutput
}

// Definition of OpenIDConnectConfig
type OpenIDConnectConfigArgs struct {
	// <p>The number of milliseconds that a token is valid after being authenticated.</p>
	AuthTTL pulumi.Float64PtrInput `pulumi:"authTTL"`
	// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
	IatTTL pulumi.Float64PtrInput `pulumi:"iatTTL"`
	// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
}

func (OpenIDConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIDConnectConfig)(nil)).Elem()
}

func (i OpenIDConnectConfigArgs) ToOpenIDConnectConfigOutput() OpenIDConnectConfigOutput {
	return i.ToOpenIDConnectConfigOutputWithContext(context.Background())
}

func (i OpenIDConnectConfigArgs) ToOpenIDConnectConfigOutputWithContext(ctx context.Context) OpenIDConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIDConnectConfigOutput)
}

func (i OpenIDConnectConfigArgs) ToOpenIDConnectConfigPtrOutput() OpenIDConnectConfigPtrOutput {
	return i.ToOpenIDConnectConfigPtrOutputWithContext(context.Background())
}

func (i OpenIDConnectConfigArgs) ToOpenIDConnectConfigPtrOutputWithContext(ctx context.Context) OpenIDConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIDConnectConfigOutput).ToOpenIDConnectConfigPtrOutputWithContext(ctx)
}

// OpenIDConnectConfigPtrInput is an input type that accepts OpenIDConnectConfigArgs, OpenIDConnectConfigPtr and OpenIDConnectConfigPtrOutput values.
// You can construct a concrete instance of `OpenIDConnectConfigPtrInput` via:
//
//	        OpenIDConnectConfigArgs{...}
//
//	or:
//
//	        nil
type OpenIDConnectConfigPtrInput interface {
	pulumi.Input

	ToOpenIDConnectConfigPtrOutput() OpenIDConnectConfigPtrOutput
	ToOpenIDConnectConfigPtrOutputWithContext(context.Context) OpenIDConnectConfigPtrOutput
}

type openIDConnectConfigPtrType OpenIDConnectConfigArgs

func OpenIDConnectConfigPtr(v *OpenIDConnectConfigArgs) OpenIDConnectConfigPtrInput {
	return (*openIDConnectConfigPtrType)(v)
}

func (*openIDConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIDConnectConfig)(nil)).Elem()
}

func (i *openIDConnectConfigPtrType) ToOpenIDConnectConfigPtrOutput() OpenIDConnectConfigPtrOutput {
	return i.ToOpenIDConnectConfigPtrOutputWithContext(context.Background())
}

func (i *openIDConnectConfigPtrType) ToOpenIDConnectConfigPtrOutputWithContext(ctx context.Context) OpenIDConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIDConnectConfigPtrOutput)
}

// Definition of OpenIDConnectConfig
type OpenIDConnectConfigOutput struct{ *pulumi.OutputState }

func (OpenIDConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIDConnectConfig)(nil)).Elem()
}

func (o OpenIDConnectConfigOutput) ToOpenIDConnectConfigOutput() OpenIDConnectConfigOutput {
	return o
}

func (o OpenIDConnectConfigOutput) ToOpenIDConnectConfigOutputWithContext(ctx context.Context) OpenIDConnectConfigOutput {
	return o
}

func (o OpenIDConnectConfigOutput) ToOpenIDConnectConfigPtrOutput() OpenIDConnectConfigPtrOutput {
	return o.ToOpenIDConnectConfigPtrOutputWithContext(context.Background())
}

func (o OpenIDConnectConfigOutput) ToOpenIDConnectConfigPtrOutputWithContext(ctx context.Context) OpenIDConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenIDConnectConfig) *OpenIDConnectConfig {
		return &v
	}).(OpenIDConnectConfigPtrOutput)
}

// <p>The number of milliseconds that a token is valid after being authenticated.</p>
func (o OpenIDConnectConfigOutput) AuthTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfig) *float64 { return v.AuthTTL }).(pulumi.Float64PtrOutput)
}

// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
func (o OpenIDConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
func (o OpenIDConnectConfigOutput) IatTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfig) *float64 { return v.IatTTL }).(pulumi.Float64PtrOutput)
}

// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
func (o OpenIDConnectConfigOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfig) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type OpenIDConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (OpenIDConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIDConnectConfig)(nil)).Elem()
}

func (o OpenIDConnectConfigPtrOutput) ToOpenIDConnectConfigPtrOutput() OpenIDConnectConfigPtrOutput {
	return o
}

func (o OpenIDConnectConfigPtrOutput) ToOpenIDConnectConfigPtrOutputWithContext(ctx context.Context) OpenIDConnectConfigPtrOutput {
	return o
}

func (o OpenIDConnectConfigPtrOutput) Elem() OpenIDConnectConfigOutput {
	return o.ApplyT(func(v *OpenIDConnectConfig) OpenIDConnectConfig {
		if v != nil {
			return *v
		}
		var ret OpenIDConnectConfig
		return ret
	}).(OpenIDConnectConfigOutput)
}

// <p>The number of milliseconds that a token is valid after being authenticated.</p>
func (o OpenIDConnectConfigPtrOutput) AuthTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.AuthTTL
	}).(pulumi.Float64PtrOutput)
}

// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
func (o OpenIDConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
func (o OpenIDConnectConfigPtrOutput) IatTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.IatTTL
	}).(pulumi.Float64PtrOutput)
}

// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
func (o OpenIDConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Definition of OpenIDConnectConfig
type OpenIDConnectConfigResponse struct {
	// <p>The number of milliseconds that a token is valid after being authenticated.</p>
	AuthTTL *float64 `pulumi:"authTTL"`
	// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
	ClientId *string `pulumi:"clientId"`
	// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
	IatTTL *float64 `pulumi:"iatTTL"`
	// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
	Issuer *string `pulumi:"issuer"`
}

// Definition of OpenIDConnectConfig
type OpenIDConnectConfigResponseOutput struct{ *pulumi.OutputState }

func (OpenIDConnectConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIDConnectConfigResponse)(nil)).Elem()
}

func (o OpenIDConnectConfigResponseOutput) ToOpenIDConnectConfigResponseOutput() OpenIDConnectConfigResponseOutput {
	return o
}

func (o OpenIDConnectConfigResponseOutput) ToOpenIDConnectConfigResponseOutputWithContext(ctx context.Context) OpenIDConnectConfigResponseOutput {
	return o
}

// <p>The number of milliseconds that a token is valid after being authenticated.</p>
func (o OpenIDConnectConfigResponseOutput) AuthTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfigResponse) *float64 { return v.AuthTTL }).(pulumi.Float64PtrOutput)
}

// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
func (o OpenIDConnectConfigResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfigResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
func (o OpenIDConnectConfigResponseOutput) IatTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfigResponse) *float64 { return v.IatTTL }).(pulumi.Float64PtrOutput)
}

// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
func (o OpenIDConnectConfigResponseOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIDConnectConfigResponse) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type OpenIDConnectConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIDConnectConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIDConnectConfigResponse)(nil)).Elem()
}

func (o OpenIDConnectConfigResponsePtrOutput) ToOpenIDConnectConfigResponsePtrOutput() OpenIDConnectConfigResponsePtrOutput {
	return o
}

func (o OpenIDConnectConfigResponsePtrOutput) ToOpenIDConnectConfigResponsePtrOutputWithContext(ctx context.Context) OpenIDConnectConfigResponsePtrOutput {
	return o
}

func (o OpenIDConnectConfigResponsePtrOutput) Elem() OpenIDConnectConfigResponseOutput {
	return o.ApplyT(func(v *OpenIDConnectConfigResponse) OpenIDConnectConfigResponse {
		if v != nil {
			return *v
		}
		var ret OpenIDConnectConfigResponse
		return ret
	}).(OpenIDConnectConfigResponseOutput)
}

// <p>The number of milliseconds that a token is valid after being authenticated.</p>
func (o OpenIDConnectConfigResponsePtrOutput) AuthTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.AuthTTL
	}).(pulumi.Float64PtrOutput)
}

// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>
func (o OpenIDConnectConfigResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
func (o OpenIDConnectConfigResponsePtrOutput) IatTTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.IatTTL
	}).(pulumi.Float64PtrOutput)
}

// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>
func (o OpenIDConnectConfigResponsePtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIDConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Definition of OpenSearchDomainStatus
type OpenSearchDomainStatusProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsOpenSearchDomainStatusProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// OpenSearchDomainStatusPropertiesInput is an input type that accepts OpenSearchDomainStatusPropertiesArgs and OpenSearchDomainStatusPropertiesOutput values.
// You can construct a concrete instance of `OpenSearchDomainStatusPropertiesInput` via:
//
//	OpenSearchDomainStatusPropertiesArgs{...}
type OpenSearchDomainStatusPropertiesInput interface {
	pulumi.Input

	ToOpenSearchDomainStatusPropertiesOutput() OpenSearchDomainStatusPropertiesOutput
	ToOpenSearchDomainStatusPropertiesOutputWithContext(context.Context) OpenSearchDomainStatusPropertiesOutput
}

// Definition of OpenSearchDomainStatus
type OpenSearchDomainStatusPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsOpenSearchDomainStatusPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (OpenSearchDomainStatusPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchDomainStatusProperties)(nil)).Elem()
}

func (i OpenSearchDomainStatusPropertiesArgs) ToOpenSearchDomainStatusPropertiesOutput() OpenSearchDomainStatusPropertiesOutput {
	return i.ToOpenSearchDomainStatusPropertiesOutputWithContext(context.Background())
}

func (i OpenSearchDomainStatusPropertiesArgs) ToOpenSearchDomainStatusPropertiesOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchDomainStatusPropertiesOutput)
}

func (i OpenSearchDomainStatusPropertiesArgs) ToOpenSearchDomainStatusPropertiesPtrOutput() OpenSearchDomainStatusPropertiesPtrOutput {
	return i.ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i OpenSearchDomainStatusPropertiesArgs) ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchDomainStatusPropertiesOutput).ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(ctx)
}

// OpenSearchDomainStatusPropertiesPtrInput is an input type that accepts OpenSearchDomainStatusPropertiesArgs, OpenSearchDomainStatusPropertiesPtr and OpenSearchDomainStatusPropertiesPtrOutput values.
// You can construct a concrete instance of `OpenSearchDomainStatusPropertiesPtrInput` via:
//
//	        OpenSearchDomainStatusPropertiesArgs{...}
//
//	or:
//
//	        nil
type OpenSearchDomainStatusPropertiesPtrInput interface {
	pulumi.Input

	ToOpenSearchDomainStatusPropertiesPtrOutput() OpenSearchDomainStatusPropertiesPtrOutput
	ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(context.Context) OpenSearchDomainStatusPropertiesPtrOutput
}

type openSearchDomainStatusPropertiesPtrType OpenSearchDomainStatusPropertiesArgs

func OpenSearchDomainStatusPropertiesPtr(v *OpenSearchDomainStatusPropertiesArgs) OpenSearchDomainStatusPropertiesPtrInput {
	return (*openSearchDomainStatusPropertiesPtrType)(v)
}

func (*openSearchDomainStatusPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchDomainStatusProperties)(nil)).Elem()
}

func (i *openSearchDomainStatusPropertiesPtrType) ToOpenSearchDomainStatusPropertiesPtrOutput() OpenSearchDomainStatusPropertiesPtrOutput {
	return i.ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i *openSearchDomainStatusPropertiesPtrType) ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchDomainStatusPropertiesPtrOutput)
}

// Definition of OpenSearchDomainStatus
type OpenSearchDomainStatusPropertiesOutput struct{ *pulumi.OutputState }

func (OpenSearchDomainStatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchDomainStatusProperties)(nil)).Elem()
}

func (o OpenSearchDomainStatusPropertiesOutput) ToOpenSearchDomainStatusPropertiesOutput() OpenSearchDomainStatusPropertiesOutput {
	return o
}

func (o OpenSearchDomainStatusPropertiesOutput) ToOpenSearchDomainStatusPropertiesOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesOutput {
	return o
}

func (o OpenSearchDomainStatusPropertiesOutput) ToOpenSearchDomainStatusPropertiesPtrOutput() OpenSearchDomainStatusPropertiesPtrOutput {
	return o.ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(context.Background())
}

func (o OpenSearchDomainStatusPropertiesOutput) ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenSearchDomainStatusProperties) *OpenSearchDomainStatusProperties {
		return &v
	}).(OpenSearchDomainStatusPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o OpenSearchDomainStatusPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OpenSearchDomainStatusPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OpenSearchDomainStatusPropertiesOutput) AwsProperties() AwsOpenSearchDomainStatusPropertiesPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *AwsOpenSearchDomainStatusProperties { return v.AwsProperties }).(AwsOpenSearchDomainStatusPropertiesPtrOutput)
}

// AWS Region
func (o OpenSearchDomainStatusPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OpenSearchDomainStatusPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OpenSearchDomainStatusPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o OpenSearchDomainStatusPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OpenSearchDomainStatusPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type OpenSearchDomainStatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OpenSearchDomainStatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchDomainStatusProperties)(nil)).Elem()
}

func (o OpenSearchDomainStatusPropertiesPtrOutput) ToOpenSearchDomainStatusPropertiesPtrOutput() OpenSearchDomainStatusPropertiesPtrOutput {
	return o
}

func (o OpenSearchDomainStatusPropertiesPtrOutput) ToOpenSearchDomainStatusPropertiesPtrOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesPtrOutput {
	return o
}

func (o OpenSearchDomainStatusPropertiesPtrOutput) Elem() OpenSearchDomainStatusPropertiesOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) OpenSearchDomainStatusProperties {
		if v != nil {
			return *v
		}
		var ret OpenSearchDomainStatusProperties
		return ret
	}).(OpenSearchDomainStatusPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o OpenSearchDomainStatusPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OpenSearchDomainStatusPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OpenSearchDomainStatusPropertiesPtrOutput) AwsProperties() AwsOpenSearchDomainStatusPropertiesPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *AwsOpenSearchDomainStatusProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsOpenSearchDomainStatusPropertiesPtrOutput)
}

// AWS Region
func (o OpenSearchDomainStatusPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OpenSearchDomainStatusPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OpenSearchDomainStatusPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o OpenSearchDomainStatusPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OpenSearchDomainStatusPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchDomainStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of OpenSearchDomainStatus
type OpenSearchDomainStatusPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsOpenSearchDomainStatusPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of OpenSearchDomainStatus
type OpenSearchDomainStatusPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OpenSearchDomainStatusPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchDomainStatusPropertiesResponse)(nil)).Elem()
}

func (o OpenSearchDomainStatusPropertiesResponseOutput) ToOpenSearchDomainStatusPropertiesResponseOutput() OpenSearchDomainStatusPropertiesResponseOutput {
	return o
}

func (o OpenSearchDomainStatusPropertiesResponseOutput) ToOpenSearchDomainStatusPropertiesResponseOutputWithContext(ctx context.Context) OpenSearchDomainStatusPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o OpenSearchDomainStatusPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OpenSearchDomainStatusPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OpenSearchDomainStatusPropertiesResponseOutput) AwsProperties() AwsOpenSearchDomainStatusPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *AwsOpenSearchDomainStatusPropertiesResponse {
		return v.AwsProperties
	}).(AwsOpenSearchDomainStatusPropertiesResponsePtrOutput)
}

// AWS Region
func (o OpenSearchDomainStatusPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OpenSearchDomainStatusPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OpenSearchDomainStatusPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o OpenSearchDomainStatusPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o OpenSearchDomainStatusPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OpenSearchDomainStatusPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchDomainStatusPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of OpenSearchPartitionInstanceTypeEnumValue
type OpenSearchPartitionInstanceTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// OpenSearchPartitionInstanceTypeEnumValueInput is an input type that accepts OpenSearchPartitionInstanceTypeEnumValueArgs and OpenSearchPartitionInstanceTypeEnumValueOutput values.
// You can construct a concrete instance of `OpenSearchPartitionInstanceTypeEnumValueInput` via:
//
//	OpenSearchPartitionInstanceTypeEnumValueArgs{...}
type OpenSearchPartitionInstanceTypeEnumValueInput interface {
	pulumi.Input

	ToOpenSearchPartitionInstanceTypeEnumValueOutput() OpenSearchPartitionInstanceTypeEnumValueOutput
	ToOpenSearchPartitionInstanceTypeEnumValueOutputWithContext(context.Context) OpenSearchPartitionInstanceTypeEnumValueOutput
}

// Definition of OpenSearchPartitionInstanceTypeEnumValue
type OpenSearchPartitionInstanceTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OpenSearchPartitionInstanceTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (i OpenSearchPartitionInstanceTypeEnumValueArgs) ToOpenSearchPartitionInstanceTypeEnumValueOutput() OpenSearchPartitionInstanceTypeEnumValueOutput {
	return i.ToOpenSearchPartitionInstanceTypeEnumValueOutputWithContext(context.Background())
}

func (i OpenSearchPartitionInstanceTypeEnumValueArgs) ToOpenSearchPartitionInstanceTypeEnumValueOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchPartitionInstanceTypeEnumValueOutput)
}

func (i OpenSearchPartitionInstanceTypeEnumValueArgs) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutput() OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return i.ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i OpenSearchPartitionInstanceTypeEnumValueArgs) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchPartitionInstanceTypeEnumValueOutput).ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx)
}

// OpenSearchPartitionInstanceTypeEnumValuePtrInput is an input type that accepts OpenSearchPartitionInstanceTypeEnumValueArgs, OpenSearchPartitionInstanceTypeEnumValuePtr and OpenSearchPartitionInstanceTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `OpenSearchPartitionInstanceTypeEnumValuePtrInput` via:
//
//	        OpenSearchPartitionInstanceTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type OpenSearchPartitionInstanceTypeEnumValuePtrInput interface {
	pulumi.Input

	ToOpenSearchPartitionInstanceTypeEnumValuePtrOutput() OpenSearchPartitionInstanceTypeEnumValuePtrOutput
	ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Context) OpenSearchPartitionInstanceTypeEnumValuePtrOutput
}

type openSearchPartitionInstanceTypeEnumValuePtrType OpenSearchPartitionInstanceTypeEnumValueArgs

func OpenSearchPartitionInstanceTypeEnumValuePtr(v *OpenSearchPartitionInstanceTypeEnumValueArgs) OpenSearchPartitionInstanceTypeEnumValuePtrInput {
	return (*openSearchPartitionInstanceTypeEnumValuePtrType)(v)
}

func (*openSearchPartitionInstanceTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (i *openSearchPartitionInstanceTypeEnumValuePtrType) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutput() OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return i.ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *openSearchPartitionInstanceTypeEnumValuePtrType) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchPartitionInstanceTypeEnumValuePtrOutput)
}

// Definition of OpenSearchPartitionInstanceTypeEnumValue
type OpenSearchPartitionInstanceTypeEnumValueOutput struct{ *pulumi.OutputState }

func (OpenSearchPartitionInstanceTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (o OpenSearchPartitionInstanceTypeEnumValueOutput) ToOpenSearchPartitionInstanceTypeEnumValueOutput() OpenSearchPartitionInstanceTypeEnumValueOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValueOutput) ToOpenSearchPartitionInstanceTypeEnumValueOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValueOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValueOutput) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutput() OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return o.ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o OpenSearchPartitionInstanceTypeEnumValueOutput) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenSearchPartitionInstanceTypeEnumValue) *OpenSearchPartitionInstanceTypeEnumValue {
		return &v
	}).(OpenSearchPartitionInstanceTypeEnumValuePtrOutput)
}

// Property value
func (o OpenSearchPartitionInstanceTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchPartitionInstanceTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OpenSearchPartitionInstanceTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (OpenSearchPartitionInstanceTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (o OpenSearchPartitionInstanceTypeEnumValuePtrOutput) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutput() OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValuePtrOutput) ToOpenSearchPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValuePtrOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValuePtrOutput) Elem() OpenSearchPartitionInstanceTypeEnumValueOutput {
	return o.ApplyT(func(v *OpenSearchPartitionInstanceTypeEnumValue) OpenSearchPartitionInstanceTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret OpenSearchPartitionInstanceTypeEnumValue
		return ret
	}).(OpenSearchPartitionInstanceTypeEnumValueOutput)
}

// Property value
func (o OpenSearchPartitionInstanceTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchPartitionInstanceTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of OpenSearchPartitionInstanceTypeEnumValue
type OpenSearchPartitionInstanceTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of OpenSearchPartitionInstanceTypeEnumValue
type OpenSearchPartitionInstanceTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (OpenSearchPartitionInstanceTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchPartitionInstanceTypeEnumValueResponse)(nil)).Elem()
}

func (o OpenSearchPartitionInstanceTypeEnumValueResponseOutput) ToOpenSearchPartitionInstanceTypeEnumValueResponseOutput() OpenSearchPartitionInstanceTypeEnumValueResponseOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValueResponseOutput) ToOpenSearchPartitionInstanceTypeEnumValueResponseOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o OpenSearchPartitionInstanceTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchPartitionInstanceTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchPartitionInstanceTypeEnumValueResponse)(nil)).Elem()
}

func (o OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput) ToOpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput() OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput) ToOpenSearchPartitionInstanceTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput {
	return o
}

func (o OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput) Elem() OpenSearchPartitionInstanceTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *OpenSearchPartitionInstanceTypeEnumValueResponse) OpenSearchPartitionInstanceTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret OpenSearchPartitionInstanceTypeEnumValueResponse
		return ret
	}).(OpenSearchPartitionInstanceTypeEnumValueResponseOutput)
}

// Property value
func (o OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchPartitionInstanceTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of OpenSearchWarmPartitionInstanceTypeEnumValue
type OpenSearchWarmPartitionInstanceTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// OpenSearchWarmPartitionInstanceTypeEnumValueInput is an input type that accepts OpenSearchWarmPartitionInstanceTypeEnumValueArgs and OpenSearchWarmPartitionInstanceTypeEnumValueOutput values.
// You can construct a concrete instance of `OpenSearchWarmPartitionInstanceTypeEnumValueInput` via:
//
//	OpenSearchWarmPartitionInstanceTypeEnumValueArgs{...}
type OpenSearchWarmPartitionInstanceTypeEnumValueInput interface {
	pulumi.Input

	ToOpenSearchWarmPartitionInstanceTypeEnumValueOutput() OpenSearchWarmPartitionInstanceTypeEnumValueOutput
	ToOpenSearchWarmPartitionInstanceTypeEnumValueOutputWithContext(context.Context) OpenSearchWarmPartitionInstanceTypeEnumValueOutput
}

// Definition of OpenSearchWarmPartitionInstanceTypeEnumValue
type OpenSearchWarmPartitionInstanceTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OpenSearchWarmPartitionInstanceTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchWarmPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (i OpenSearchWarmPartitionInstanceTypeEnumValueArgs) ToOpenSearchWarmPartitionInstanceTypeEnumValueOutput() OpenSearchWarmPartitionInstanceTypeEnumValueOutput {
	return i.ToOpenSearchWarmPartitionInstanceTypeEnumValueOutputWithContext(context.Background())
}

func (i OpenSearchWarmPartitionInstanceTypeEnumValueArgs) ToOpenSearchWarmPartitionInstanceTypeEnumValueOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchWarmPartitionInstanceTypeEnumValueOutput)
}

func (i OpenSearchWarmPartitionInstanceTypeEnumValueArgs) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput() OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return i.ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i OpenSearchWarmPartitionInstanceTypeEnumValueArgs) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchWarmPartitionInstanceTypeEnumValueOutput).ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx)
}

// OpenSearchWarmPartitionInstanceTypeEnumValuePtrInput is an input type that accepts OpenSearchWarmPartitionInstanceTypeEnumValueArgs, OpenSearchWarmPartitionInstanceTypeEnumValuePtr and OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `OpenSearchWarmPartitionInstanceTypeEnumValuePtrInput` via:
//
//	        OpenSearchWarmPartitionInstanceTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type OpenSearchWarmPartitionInstanceTypeEnumValuePtrInput interface {
	pulumi.Input

	ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput() OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput
	ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Context) OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput
}

type openSearchWarmPartitionInstanceTypeEnumValuePtrType OpenSearchWarmPartitionInstanceTypeEnumValueArgs

func OpenSearchWarmPartitionInstanceTypeEnumValuePtr(v *OpenSearchWarmPartitionInstanceTypeEnumValueArgs) OpenSearchWarmPartitionInstanceTypeEnumValuePtrInput {
	return (*openSearchWarmPartitionInstanceTypeEnumValuePtrType)(v)
}

func (*openSearchWarmPartitionInstanceTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchWarmPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (i *openSearchWarmPartitionInstanceTypeEnumValuePtrType) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput() OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return i.ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *openSearchWarmPartitionInstanceTypeEnumValuePtrType) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput)
}

// Definition of OpenSearchWarmPartitionInstanceTypeEnumValue
type OpenSearchWarmPartitionInstanceTypeEnumValueOutput struct{ *pulumi.OutputState }

func (OpenSearchWarmPartitionInstanceTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchWarmPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValueOutput() OpenSearchWarmPartitionInstanceTypeEnumValueOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValueOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValueOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput() OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return o.ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenSearchWarmPartitionInstanceTypeEnumValue) *OpenSearchWarmPartitionInstanceTypeEnumValue {
		return &v
	}).(OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput)
}

// Property value
func (o OpenSearchWarmPartitionInstanceTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchWarmPartitionInstanceTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchWarmPartitionInstanceTypeEnumValue)(nil)).Elem()
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput() OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValuePtrOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput) Elem() OpenSearchWarmPartitionInstanceTypeEnumValueOutput {
	return o.ApplyT(func(v *OpenSearchWarmPartitionInstanceTypeEnumValue) OpenSearchWarmPartitionInstanceTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret OpenSearchWarmPartitionInstanceTypeEnumValue
		return ret
	}).(OpenSearchWarmPartitionInstanceTypeEnumValueOutput)
}

// Property value
func (o OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchWarmPartitionInstanceTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of OpenSearchWarmPartitionInstanceTypeEnumValue
type OpenSearchWarmPartitionInstanceTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of OpenSearchWarmPartitionInstanceTypeEnumValue
type OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenSearchWarmPartitionInstanceTypeEnumValueResponse)(nil)).Elem()
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput() OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValueResponseOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenSearchWarmPartitionInstanceTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenSearchWarmPartitionInstanceTypeEnumValueResponse)(nil)).Elem()
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput() OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput) ToOpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput {
	return o
}

func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput) Elem() OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *OpenSearchWarmPartitionInstanceTypeEnumValueResponse) OpenSearchWarmPartitionInstanceTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret OpenSearchWarmPartitionInstanceTypeEnumValueResponse
		return ret
	}).(OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput)
}

// Property value
func (o OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenSearchWarmPartitionInstanceTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of OperationLevelMetricsConfigEnumValue
type OperationLevelMetricsConfigEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// OperationLevelMetricsConfigEnumValueInput is an input type that accepts OperationLevelMetricsConfigEnumValueArgs and OperationLevelMetricsConfigEnumValueOutput values.
// You can construct a concrete instance of `OperationLevelMetricsConfigEnumValueInput` via:
//
//	OperationLevelMetricsConfigEnumValueArgs{...}
type OperationLevelMetricsConfigEnumValueInput interface {
	pulumi.Input

	ToOperationLevelMetricsConfigEnumValueOutput() OperationLevelMetricsConfigEnumValueOutput
	ToOperationLevelMetricsConfigEnumValueOutputWithContext(context.Context) OperationLevelMetricsConfigEnumValueOutput
}

// Definition of OperationLevelMetricsConfigEnumValue
type OperationLevelMetricsConfigEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OperationLevelMetricsConfigEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationLevelMetricsConfigEnumValue)(nil)).Elem()
}

func (i OperationLevelMetricsConfigEnumValueArgs) ToOperationLevelMetricsConfigEnumValueOutput() OperationLevelMetricsConfigEnumValueOutput {
	return i.ToOperationLevelMetricsConfigEnumValueOutputWithContext(context.Background())
}

func (i OperationLevelMetricsConfigEnumValueArgs) ToOperationLevelMetricsConfigEnumValueOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationLevelMetricsConfigEnumValueOutput)
}

func (i OperationLevelMetricsConfigEnumValueArgs) ToOperationLevelMetricsConfigEnumValuePtrOutput() OperationLevelMetricsConfigEnumValuePtrOutput {
	return i.ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(context.Background())
}

func (i OperationLevelMetricsConfigEnumValueArgs) ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationLevelMetricsConfigEnumValueOutput).ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(ctx)
}

// OperationLevelMetricsConfigEnumValuePtrInput is an input type that accepts OperationLevelMetricsConfigEnumValueArgs, OperationLevelMetricsConfigEnumValuePtr and OperationLevelMetricsConfigEnumValuePtrOutput values.
// You can construct a concrete instance of `OperationLevelMetricsConfigEnumValuePtrInput` via:
//
//	        OperationLevelMetricsConfigEnumValueArgs{...}
//
//	or:
//
//	        nil
type OperationLevelMetricsConfigEnumValuePtrInput interface {
	pulumi.Input

	ToOperationLevelMetricsConfigEnumValuePtrOutput() OperationLevelMetricsConfigEnumValuePtrOutput
	ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(context.Context) OperationLevelMetricsConfigEnumValuePtrOutput
}

type operationLevelMetricsConfigEnumValuePtrType OperationLevelMetricsConfigEnumValueArgs

func OperationLevelMetricsConfigEnumValuePtr(v *OperationLevelMetricsConfigEnumValueArgs) OperationLevelMetricsConfigEnumValuePtrInput {
	return (*operationLevelMetricsConfigEnumValuePtrType)(v)
}

func (*operationLevelMetricsConfigEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationLevelMetricsConfigEnumValue)(nil)).Elem()
}

func (i *operationLevelMetricsConfigEnumValuePtrType) ToOperationLevelMetricsConfigEnumValuePtrOutput() OperationLevelMetricsConfigEnumValuePtrOutput {
	return i.ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(context.Background())
}

func (i *operationLevelMetricsConfigEnumValuePtrType) ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationLevelMetricsConfigEnumValuePtrOutput)
}

// Definition of OperationLevelMetricsConfigEnumValue
type OperationLevelMetricsConfigEnumValueOutput struct{ *pulumi.OutputState }

func (OperationLevelMetricsConfigEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationLevelMetricsConfigEnumValue)(nil)).Elem()
}

func (o OperationLevelMetricsConfigEnumValueOutput) ToOperationLevelMetricsConfigEnumValueOutput() OperationLevelMetricsConfigEnumValueOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValueOutput) ToOperationLevelMetricsConfigEnumValueOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValueOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValueOutput) ToOperationLevelMetricsConfigEnumValuePtrOutput() OperationLevelMetricsConfigEnumValuePtrOutput {
	return o.ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(context.Background())
}

func (o OperationLevelMetricsConfigEnumValueOutput) ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperationLevelMetricsConfigEnumValue) *OperationLevelMetricsConfigEnumValue {
		return &v
	}).(OperationLevelMetricsConfigEnumValuePtrOutput)
}

// Property value
func (o OperationLevelMetricsConfigEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationLevelMetricsConfigEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OperationLevelMetricsConfigEnumValuePtrOutput struct{ *pulumi.OutputState }

func (OperationLevelMetricsConfigEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationLevelMetricsConfigEnumValue)(nil)).Elem()
}

func (o OperationLevelMetricsConfigEnumValuePtrOutput) ToOperationLevelMetricsConfigEnumValuePtrOutput() OperationLevelMetricsConfigEnumValuePtrOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValuePtrOutput) ToOperationLevelMetricsConfigEnumValuePtrOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValuePtrOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValuePtrOutput) Elem() OperationLevelMetricsConfigEnumValueOutput {
	return o.ApplyT(func(v *OperationLevelMetricsConfigEnumValue) OperationLevelMetricsConfigEnumValue {
		if v != nil {
			return *v
		}
		var ret OperationLevelMetricsConfigEnumValue
		return ret
	}).(OperationLevelMetricsConfigEnumValueOutput)
}

// Property value
func (o OperationLevelMetricsConfigEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationLevelMetricsConfigEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of OperationLevelMetricsConfigEnumValue
type OperationLevelMetricsConfigEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of OperationLevelMetricsConfigEnumValue
type OperationLevelMetricsConfigEnumValueResponseOutput struct{ *pulumi.OutputState }

func (OperationLevelMetricsConfigEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationLevelMetricsConfigEnumValueResponse)(nil)).Elem()
}

func (o OperationLevelMetricsConfigEnumValueResponseOutput) ToOperationLevelMetricsConfigEnumValueResponseOutput() OperationLevelMetricsConfigEnumValueResponseOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValueResponseOutput) ToOperationLevelMetricsConfigEnumValueResponseOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValueResponseOutput {
	return o
}

// Property value
func (o OperationLevelMetricsConfigEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationLevelMetricsConfigEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OperationLevelMetricsConfigEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationLevelMetricsConfigEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationLevelMetricsConfigEnumValueResponse)(nil)).Elem()
}

func (o OperationLevelMetricsConfigEnumValueResponsePtrOutput) ToOperationLevelMetricsConfigEnumValueResponsePtrOutput() OperationLevelMetricsConfigEnumValueResponsePtrOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValueResponsePtrOutput) ToOperationLevelMetricsConfigEnumValueResponsePtrOutputWithContext(ctx context.Context) OperationLevelMetricsConfigEnumValueResponsePtrOutput {
	return o
}

func (o OperationLevelMetricsConfigEnumValueResponsePtrOutput) Elem() OperationLevelMetricsConfigEnumValueResponseOutput {
	return o.ApplyT(func(v *OperationLevelMetricsConfigEnumValueResponse) OperationLevelMetricsConfigEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret OperationLevelMetricsConfigEnumValueResponse
		return ret
	}).(OperationLevelMetricsConfigEnumValueResponseOutput)
}

// Property value
func (o OperationLevelMetricsConfigEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationLevelMetricsConfigEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of OperationPreferences
type OperationPreferences struct {
	// Property failureToleranceCount
	FailureToleranceCount *int `pulumi:"failureToleranceCount"`
	// Property failureTolerancePercentage
	FailureTolerancePercentage *int `pulumi:"failureTolerancePercentage"`
	// Property maxConcurrentCount
	MaxConcurrentCount *int `pulumi:"maxConcurrentCount"`
	// Property maxConcurrentPercentage
	MaxConcurrentPercentage *int `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
	RegionConcurrencyType *string `pulumi:"regionConcurrencyType"`
	// Property regionOrder
	RegionOrder []string `pulumi:"regionOrder"`
}

// OperationPreferencesInput is an input type that accepts OperationPreferencesArgs and OperationPreferencesOutput values.
// You can construct a concrete instance of `OperationPreferencesInput` via:
//
//	OperationPreferencesArgs{...}
type OperationPreferencesInput interface {
	pulumi.Input

	ToOperationPreferencesOutput() OperationPreferencesOutput
	ToOperationPreferencesOutputWithContext(context.Context) OperationPreferencesOutput
}

// Definition of OperationPreferences
type OperationPreferencesArgs struct {
	// Property failureToleranceCount
	FailureToleranceCount pulumi.IntPtrInput `pulumi:"failureToleranceCount"`
	// Property failureTolerancePercentage
	FailureTolerancePercentage pulumi.IntPtrInput `pulumi:"failureTolerancePercentage"`
	// Property maxConcurrentCount
	MaxConcurrentCount pulumi.IntPtrInput `pulumi:"maxConcurrentCount"`
	// Property maxConcurrentPercentage
	MaxConcurrentPercentage pulumi.IntPtrInput `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
	RegionConcurrencyType pulumi.StringPtrInput `pulumi:"regionConcurrencyType"`
	// Property regionOrder
	RegionOrder pulumi.StringArrayInput `pulumi:"regionOrder"`
}

func (OperationPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationPreferences)(nil)).Elem()
}

func (i OperationPreferencesArgs) ToOperationPreferencesOutput() OperationPreferencesOutput {
	return i.ToOperationPreferencesOutputWithContext(context.Background())
}

func (i OperationPreferencesArgs) ToOperationPreferencesOutputWithContext(ctx context.Context) OperationPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationPreferencesOutput)
}

func (i OperationPreferencesArgs) ToOperationPreferencesPtrOutput() OperationPreferencesPtrOutput {
	return i.ToOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i OperationPreferencesArgs) ToOperationPreferencesPtrOutputWithContext(ctx context.Context) OperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationPreferencesOutput).ToOperationPreferencesPtrOutputWithContext(ctx)
}

// OperationPreferencesPtrInput is an input type that accepts OperationPreferencesArgs, OperationPreferencesPtr and OperationPreferencesPtrOutput values.
// You can construct a concrete instance of `OperationPreferencesPtrInput` via:
//
//	        OperationPreferencesArgs{...}
//
//	or:
//
//	        nil
type OperationPreferencesPtrInput interface {
	pulumi.Input

	ToOperationPreferencesPtrOutput() OperationPreferencesPtrOutput
	ToOperationPreferencesPtrOutputWithContext(context.Context) OperationPreferencesPtrOutput
}

type operationPreferencesPtrType OperationPreferencesArgs

func OperationPreferencesPtr(v *OperationPreferencesArgs) OperationPreferencesPtrInput {
	return (*operationPreferencesPtrType)(v)
}

func (*operationPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationPreferences)(nil)).Elem()
}

func (i *operationPreferencesPtrType) ToOperationPreferencesPtrOutput() OperationPreferencesPtrOutput {
	return i.ToOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i *operationPreferencesPtrType) ToOperationPreferencesPtrOutputWithContext(ctx context.Context) OperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationPreferencesPtrOutput)
}

// Definition of OperationPreferences
type OperationPreferencesOutput struct{ *pulumi.OutputState }

func (OperationPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationPreferences)(nil)).Elem()
}

func (o OperationPreferencesOutput) ToOperationPreferencesOutput() OperationPreferencesOutput {
	return o
}

func (o OperationPreferencesOutput) ToOperationPreferencesOutputWithContext(ctx context.Context) OperationPreferencesOutput {
	return o
}

func (o OperationPreferencesOutput) ToOperationPreferencesPtrOutput() OperationPreferencesPtrOutput {
	return o.ToOperationPreferencesPtrOutputWithContext(context.Background())
}

func (o OperationPreferencesOutput) ToOperationPreferencesPtrOutputWithContext(ctx context.Context) OperationPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperationPreferences) *OperationPreferences {
		return &v
	}).(OperationPreferencesPtrOutput)
}

// Property failureToleranceCount
func (o OperationPreferencesOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferences) *int { return v.FailureToleranceCount }).(pulumi.IntPtrOutput)
}

// Property failureTolerancePercentage
func (o OperationPreferencesOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferences) *int { return v.FailureTolerancePercentage }).(pulumi.IntPtrOutput)
}

// Property maxConcurrentCount
func (o OperationPreferencesOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferences) *int { return v.MaxConcurrentCount }).(pulumi.IntPtrOutput)
}

// Property maxConcurrentPercentage
func (o OperationPreferencesOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferences) *int { return v.MaxConcurrentPercentage }).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
func (o OperationPreferencesOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationPreferences) *string { return v.RegionConcurrencyType }).(pulumi.StringPtrOutput)
}

// Property regionOrder
func (o OperationPreferencesOutput) RegionOrder() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OperationPreferences) []string { return v.RegionOrder }).(pulumi.StringArrayOutput)
}

type OperationPreferencesPtrOutput struct{ *pulumi.OutputState }

func (OperationPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationPreferences)(nil)).Elem()
}

func (o OperationPreferencesPtrOutput) ToOperationPreferencesPtrOutput() OperationPreferencesPtrOutput {
	return o
}

func (o OperationPreferencesPtrOutput) ToOperationPreferencesPtrOutputWithContext(ctx context.Context) OperationPreferencesPtrOutput {
	return o
}

func (o OperationPreferencesPtrOutput) Elem() OperationPreferencesOutput {
	return o.ApplyT(func(v *OperationPreferences) OperationPreferences {
		if v != nil {
			return *v
		}
		var ret OperationPreferences
		return ret
	}).(OperationPreferencesOutput)
}

// Property failureToleranceCount
func (o OperationPreferencesPtrOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureToleranceCount
	}).(pulumi.IntPtrOutput)
}

// Property failureTolerancePercentage
func (o OperationPreferencesPtrOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureTolerancePercentage
	}).(pulumi.IntPtrOutput)
}

// Property maxConcurrentCount
func (o OperationPreferencesPtrOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentCount
	}).(pulumi.IntPtrOutput)
}

// Property maxConcurrentPercentage
func (o OperationPreferencesPtrOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentPercentage
	}).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
func (o OperationPreferencesPtrOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationPreferences) *string {
		if v == nil {
			return nil
		}
		return v.RegionConcurrencyType
	}).(pulumi.StringPtrOutput)
}

// Property regionOrder
func (o OperationPreferencesPtrOutput) RegionOrder() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OperationPreferences) []string {
		if v == nil {
			return nil
		}
		return v.RegionOrder
	}).(pulumi.StringArrayOutput)
}

// Definition of OperationPreferences
type OperationPreferencesResponse struct {
	// Property failureToleranceCount
	FailureToleranceCount *int `pulumi:"failureToleranceCount"`
	// Property failureTolerancePercentage
	FailureTolerancePercentage *int `pulumi:"failureTolerancePercentage"`
	// Property maxConcurrentCount
	MaxConcurrentCount *int `pulumi:"maxConcurrentCount"`
	// Property maxConcurrentPercentage
	MaxConcurrentPercentage *int `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
	RegionConcurrencyType *string `pulumi:"regionConcurrencyType"`
	// Property regionOrder
	RegionOrder []string `pulumi:"regionOrder"`
}

// Definition of OperationPreferences
type OperationPreferencesResponseOutput struct{ *pulumi.OutputState }

func (OperationPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationPreferencesResponse)(nil)).Elem()
}

func (o OperationPreferencesResponseOutput) ToOperationPreferencesResponseOutput() OperationPreferencesResponseOutput {
	return o
}

func (o OperationPreferencesResponseOutput) ToOperationPreferencesResponseOutputWithContext(ctx context.Context) OperationPreferencesResponseOutput {
	return o
}

// Property failureToleranceCount
func (o OperationPreferencesResponseOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferencesResponse) *int { return v.FailureToleranceCount }).(pulumi.IntPtrOutput)
}

// Property failureTolerancePercentage
func (o OperationPreferencesResponseOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferencesResponse) *int { return v.FailureTolerancePercentage }).(pulumi.IntPtrOutput)
}

// Property maxConcurrentCount
func (o OperationPreferencesResponseOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferencesResponse) *int { return v.MaxConcurrentCount }).(pulumi.IntPtrOutput)
}

// Property maxConcurrentPercentage
func (o OperationPreferencesResponseOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OperationPreferencesResponse) *int { return v.MaxConcurrentPercentage }).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
func (o OperationPreferencesResponseOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationPreferencesResponse) *string { return v.RegionConcurrencyType }).(pulumi.StringPtrOutput)
}

// Property regionOrder
func (o OperationPreferencesResponseOutput) RegionOrder() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OperationPreferencesResponse) []string { return v.RegionOrder }).(pulumi.StringArrayOutput)
}

type OperationPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationPreferencesResponse)(nil)).Elem()
}

func (o OperationPreferencesResponsePtrOutput) ToOperationPreferencesResponsePtrOutput() OperationPreferencesResponsePtrOutput {
	return o
}

func (o OperationPreferencesResponsePtrOutput) ToOperationPreferencesResponsePtrOutputWithContext(ctx context.Context) OperationPreferencesResponsePtrOutput {
	return o
}

func (o OperationPreferencesResponsePtrOutput) Elem() OperationPreferencesResponseOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) OperationPreferencesResponse {
		if v != nil {
			return *v
		}
		var ret OperationPreferencesResponse
		return ret
	}).(OperationPreferencesResponseOutput)
}

// Property failureToleranceCount
func (o OperationPreferencesResponsePtrOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) *int {
		if v == nil {
			return nil
		}
		return v.FailureToleranceCount
	}).(pulumi.IntPtrOutput)
}

// Property failureTolerancePercentage
func (o OperationPreferencesResponsePtrOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) *int {
		if v == nil {
			return nil
		}
		return v.FailureTolerancePercentage
	}).(pulumi.IntPtrOutput)
}

// Property maxConcurrentCount
func (o OperationPreferencesResponsePtrOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentCount
	}).(pulumi.IntPtrOutput)
}

// Property maxConcurrentPercentage
func (o OperationPreferencesResponsePtrOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentPercentage
	}).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
func (o OperationPreferencesResponsePtrOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegionConcurrencyType
	}).(pulumi.StringPtrOutput)
}

// Property regionOrder
func (o OperationPreferencesResponsePtrOutput) RegionOrder() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OperationPreferencesResponse) []string {
		if v == nil {
			return nil
		}
		return v.RegionOrder
	}).(pulumi.StringArrayOutput)
}

// Definition of OptionSetting
type OptionSetting struct {
	// A unique namespace that identifies the option's associated AWS resource.
	Namespace *string `pulumi:"namespace"`
	// The name of the configuration option.
	OptionName *string `pulumi:"optionName"`
	// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
	ResourceName *string `pulumi:"resourceName"`
	// The current value for the configuration option.
	Value *string `pulumi:"value"`
}

// OptionSettingInput is an input type that accepts OptionSettingArgs and OptionSettingOutput values.
// You can construct a concrete instance of `OptionSettingInput` via:
//
//	OptionSettingArgs{...}
type OptionSettingInput interface {
	pulumi.Input

	ToOptionSettingOutput() OptionSettingOutput
	ToOptionSettingOutputWithContext(context.Context) OptionSettingOutput
}

// Definition of OptionSetting
type OptionSettingArgs struct {
	// A unique namespace that identifies the option's associated AWS resource.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The name of the configuration option.
	OptionName pulumi.StringPtrInput `pulumi:"optionName"`
	// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// The current value for the configuration option.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionSetting)(nil)).Elem()
}

func (i OptionSettingArgs) ToOptionSettingOutput() OptionSettingOutput {
	return i.ToOptionSettingOutputWithContext(context.Background())
}

func (i OptionSettingArgs) ToOptionSettingOutputWithContext(ctx context.Context) OptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionSettingOutput)
}

// OptionSettingArrayInput is an input type that accepts OptionSettingArray and OptionSettingArrayOutput values.
// You can construct a concrete instance of `OptionSettingArrayInput` via:
//
//	OptionSettingArray{ OptionSettingArgs{...} }
type OptionSettingArrayInput interface {
	pulumi.Input

	ToOptionSettingArrayOutput() OptionSettingArrayOutput
	ToOptionSettingArrayOutputWithContext(context.Context) OptionSettingArrayOutput
}

type OptionSettingArray []OptionSettingInput

func (OptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionSetting)(nil)).Elem()
}

func (i OptionSettingArray) ToOptionSettingArrayOutput() OptionSettingArrayOutput {
	return i.ToOptionSettingArrayOutputWithContext(context.Background())
}

func (i OptionSettingArray) ToOptionSettingArrayOutputWithContext(ctx context.Context) OptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionSettingArrayOutput)
}

// Definition of OptionSetting
type OptionSettingOutput struct{ *pulumi.OutputState }

func (OptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionSetting)(nil)).Elem()
}

func (o OptionSettingOutput) ToOptionSettingOutput() OptionSettingOutput {
	return o
}

func (o OptionSettingOutput) ToOptionSettingOutputWithContext(ctx context.Context) OptionSettingOutput {
	return o
}

// A unique namespace that identifies the option's associated AWS resource.
func (o OptionSettingOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSetting) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The name of the configuration option.
func (o OptionSettingOutput) OptionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSetting) *string { return v.OptionName }).(pulumi.StringPtrOutput)
}

// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
func (o OptionSettingOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSetting) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The current value for the configuration option.
func (o OptionSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OptionSettingArrayOutput struct{ *pulumi.OutputState }

func (OptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionSetting)(nil)).Elem()
}

func (o OptionSettingArrayOutput) ToOptionSettingArrayOutput() OptionSettingArrayOutput {
	return o
}

func (o OptionSettingArrayOutput) ToOptionSettingArrayOutputWithContext(ctx context.Context) OptionSettingArrayOutput {
	return o
}

func (o OptionSettingArrayOutput) Index(i pulumi.IntInput) OptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionSetting {
		return vs[0].([]OptionSetting)[vs[1].(int)]
	}).(OptionSettingOutput)
}

// Definition of OptionSetting
type OptionSettingResponse struct {
	// A unique namespace that identifies the option's associated AWS resource.
	Namespace *string `pulumi:"namespace"`
	// The name of the configuration option.
	OptionName *string `pulumi:"optionName"`
	// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
	ResourceName *string `pulumi:"resourceName"`
	// The current value for the configuration option.
	Value *string `pulumi:"value"`
}

// Definition of OptionSetting
type OptionSettingResponseOutput struct{ *pulumi.OutputState }

func (OptionSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionSettingResponse)(nil)).Elem()
}

func (o OptionSettingResponseOutput) ToOptionSettingResponseOutput() OptionSettingResponseOutput {
	return o
}

func (o OptionSettingResponseOutput) ToOptionSettingResponseOutputWithContext(ctx context.Context) OptionSettingResponseOutput {
	return o
}

// A unique namespace that identifies the option's associated AWS resource.
func (o OptionSettingResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSettingResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The name of the configuration option.
func (o OptionSettingResponseOutput) OptionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSettingResponse) *string { return v.OptionName }).(pulumi.StringPtrOutput)
}

// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
func (o OptionSettingResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSettingResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The current value for the configuration option.
func (o OptionSettingResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionSettingResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OptionSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (OptionSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionSettingResponse)(nil)).Elem()
}

func (o OptionSettingResponseArrayOutput) ToOptionSettingResponseArrayOutput() OptionSettingResponseArrayOutput {
	return o
}

func (o OptionSettingResponseArrayOutput) ToOptionSettingResponseArrayOutputWithContext(ctx context.Context) OptionSettingResponseArrayOutput {
	return o
}

func (o OptionSettingResponseArrayOutput) Index(i pulumi.IntInput) OptionSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionSettingResponse {
		return vs[0].([]OptionSettingResponse)[vs[1].(int)]
	}).(OptionSettingResponseOutput)
}

// Definition of OrganizationsAccount
type OrganizationsAccountProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsOrganizationsAccountProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for OrganizationsAccountProperties
func (val *OrganizationsAccountProperties) Defaults() *OrganizationsAccountProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// OrganizationsAccountPropertiesInput is an input type that accepts OrganizationsAccountPropertiesArgs and OrganizationsAccountPropertiesOutput values.
// You can construct a concrete instance of `OrganizationsAccountPropertiesInput` via:
//
//	OrganizationsAccountPropertiesArgs{...}
type OrganizationsAccountPropertiesInput interface {
	pulumi.Input

	ToOrganizationsAccountPropertiesOutput() OrganizationsAccountPropertiesOutput
	ToOrganizationsAccountPropertiesOutputWithContext(context.Context) OrganizationsAccountPropertiesOutput
}

// Definition of OrganizationsAccount
type OrganizationsAccountPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsOrganizationsAccountPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for OrganizationsAccountPropertiesArgs
func (val *OrganizationsAccountPropertiesArgs) Defaults() *OrganizationsAccountPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (OrganizationsAccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsAccountProperties)(nil)).Elem()
}

func (i OrganizationsAccountPropertiesArgs) ToOrganizationsAccountPropertiesOutput() OrganizationsAccountPropertiesOutput {
	return i.ToOrganizationsAccountPropertiesOutputWithContext(context.Background())
}

func (i OrganizationsAccountPropertiesArgs) ToOrganizationsAccountPropertiesOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsAccountPropertiesOutput)
}

func (i OrganizationsAccountPropertiesArgs) ToOrganizationsAccountPropertiesPtrOutput() OrganizationsAccountPropertiesPtrOutput {
	return i.ToOrganizationsAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i OrganizationsAccountPropertiesArgs) ToOrganizationsAccountPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsAccountPropertiesOutput).ToOrganizationsAccountPropertiesPtrOutputWithContext(ctx)
}

// OrganizationsAccountPropertiesPtrInput is an input type that accepts OrganizationsAccountPropertiesArgs, OrganizationsAccountPropertiesPtr and OrganizationsAccountPropertiesPtrOutput values.
// You can construct a concrete instance of `OrganizationsAccountPropertiesPtrInput` via:
//
//	        OrganizationsAccountPropertiesArgs{...}
//
//	or:
//
//	        nil
type OrganizationsAccountPropertiesPtrInput interface {
	pulumi.Input

	ToOrganizationsAccountPropertiesPtrOutput() OrganizationsAccountPropertiesPtrOutput
	ToOrganizationsAccountPropertiesPtrOutputWithContext(context.Context) OrganizationsAccountPropertiesPtrOutput
}

type organizationsAccountPropertiesPtrType OrganizationsAccountPropertiesArgs

func OrganizationsAccountPropertiesPtr(v *OrganizationsAccountPropertiesArgs) OrganizationsAccountPropertiesPtrInput {
	return (*organizationsAccountPropertiesPtrType)(v)
}

func (*organizationsAccountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsAccountProperties)(nil)).Elem()
}

func (i *organizationsAccountPropertiesPtrType) ToOrganizationsAccountPropertiesPtrOutput() OrganizationsAccountPropertiesPtrOutput {
	return i.ToOrganizationsAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *organizationsAccountPropertiesPtrType) ToOrganizationsAccountPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsAccountPropertiesPtrOutput)
}

// Definition of OrganizationsAccount
type OrganizationsAccountPropertiesOutput struct{ *pulumi.OutputState }

func (OrganizationsAccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsAccountProperties)(nil)).Elem()
}

func (o OrganizationsAccountPropertiesOutput) ToOrganizationsAccountPropertiesOutput() OrganizationsAccountPropertiesOutput {
	return o
}

func (o OrganizationsAccountPropertiesOutput) ToOrganizationsAccountPropertiesOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesOutput {
	return o
}

func (o OrganizationsAccountPropertiesOutput) ToOrganizationsAccountPropertiesPtrOutput() OrganizationsAccountPropertiesPtrOutput {
	return o.ToOrganizationsAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o OrganizationsAccountPropertiesOutput) ToOrganizationsAccountPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationsAccountProperties) *OrganizationsAccountProperties {
		return &v
	}).(OrganizationsAccountPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o OrganizationsAccountPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OrganizationsAccountPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OrganizationsAccountPropertiesOutput) AwsProperties() AwsOrganizationsAccountPropertiesPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *AwsOrganizationsAccountProperties { return v.AwsProperties }).(AwsOrganizationsAccountPropertiesPtrOutput)
}

// AWS Region
func (o OrganizationsAccountPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OrganizationsAccountPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OrganizationsAccountPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o OrganizationsAccountPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OrganizationsAccountPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type OrganizationsAccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OrganizationsAccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsAccountProperties)(nil)).Elem()
}

func (o OrganizationsAccountPropertiesPtrOutput) ToOrganizationsAccountPropertiesPtrOutput() OrganizationsAccountPropertiesPtrOutput {
	return o
}

func (o OrganizationsAccountPropertiesPtrOutput) ToOrganizationsAccountPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesPtrOutput {
	return o
}

func (o OrganizationsAccountPropertiesPtrOutput) Elem() OrganizationsAccountPropertiesOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) OrganizationsAccountProperties {
		if v != nil {
			return *v
		}
		var ret OrganizationsAccountProperties
		return ret
	}).(OrganizationsAccountPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o OrganizationsAccountPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OrganizationsAccountPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OrganizationsAccountPropertiesPtrOutput) AwsProperties() AwsOrganizationsAccountPropertiesPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *AwsOrganizationsAccountProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsOrganizationsAccountPropertiesPtrOutput)
}

// AWS Region
func (o OrganizationsAccountPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OrganizationsAccountPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OrganizationsAccountPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o OrganizationsAccountPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OrganizationsAccountPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsAccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of OrganizationsAccount
type OrganizationsAccountPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsOrganizationsAccountPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for OrganizationsAccountPropertiesResponse
func (val *OrganizationsAccountPropertiesResponse) Defaults() *OrganizationsAccountPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of OrganizationsAccount
type OrganizationsAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OrganizationsAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsAccountPropertiesResponse)(nil)).Elem()
}

func (o OrganizationsAccountPropertiesResponseOutput) ToOrganizationsAccountPropertiesResponseOutput() OrganizationsAccountPropertiesResponseOutput {
	return o
}

func (o OrganizationsAccountPropertiesResponseOutput) ToOrganizationsAccountPropertiesResponseOutputWithContext(ctx context.Context) OrganizationsAccountPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o OrganizationsAccountPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OrganizationsAccountPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OrganizationsAccountPropertiesResponseOutput) AwsProperties() AwsOrganizationsAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *AwsOrganizationsAccountPropertiesResponse {
		return v.AwsProperties
	}).(AwsOrganizationsAccountPropertiesResponsePtrOutput)
}

// AWS Region
func (o OrganizationsAccountPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OrganizationsAccountPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OrganizationsAccountPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o OrganizationsAccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o OrganizationsAccountPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OrganizationsAccountPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsAccountPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of OrganizationsOrganization
type OrganizationsOrganizationProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsOrganizationsOrganizationProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for OrganizationsOrganizationProperties
func (val *OrganizationsOrganizationProperties) Defaults() *OrganizationsOrganizationProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// OrganizationsOrganizationPropertiesInput is an input type that accepts OrganizationsOrganizationPropertiesArgs and OrganizationsOrganizationPropertiesOutput values.
// You can construct a concrete instance of `OrganizationsOrganizationPropertiesInput` via:
//
//	OrganizationsOrganizationPropertiesArgs{...}
type OrganizationsOrganizationPropertiesInput interface {
	pulumi.Input

	ToOrganizationsOrganizationPropertiesOutput() OrganizationsOrganizationPropertiesOutput
	ToOrganizationsOrganizationPropertiesOutputWithContext(context.Context) OrganizationsOrganizationPropertiesOutput
}

// Definition of OrganizationsOrganization
type OrganizationsOrganizationPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsOrganizationsOrganizationPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for OrganizationsOrganizationPropertiesArgs
func (val *OrganizationsOrganizationPropertiesArgs) Defaults() *OrganizationsOrganizationPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (OrganizationsOrganizationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsOrganizationProperties)(nil)).Elem()
}

func (i OrganizationsOrganizationPropertiesArgs) ToOrganizationsOrganizationPropertiesOutput() OrganizationsOrganizationPropertiesOutput {
	return i.ToOrganizationsOrganizationPropertiesOutputWithContext(context.Background())
}

func (i OrganizationsOrganizationPropertiesArgs) ToOrganizationsOrganizationPropertiesOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsOrganizationPropertiesOutput)
}

func (i OrganizationsOrganizationPropertiesArgs) ToOrganizationsOrganizationPropertiesPtrOutput() OrganizationsOrganizationPropertiesPtrOutput {
	return i.ToOrganizationsOrganizationPropertiesPtrOutputWithContext(context.Background())
}

func (i OrganizationsOrganizationPropertiesArgs) ToOrganizationsOrganizationPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsOrganizationPropertiesOutput).ToOrganizationsOrganizationPropertiesPtrOutputWithContext(ctx)
}

// OrganizationsOrganizationPropertiesPtrInput is an input type that accepts OrganizationsOrganizationPropertiesArgs, OrganizationsOrganizationPropertiesPtr and OrganizationsOrganizationPropertiesPtrOutput values.
// You can construct a concrete instance of `OrganizationsOrganizationPropertiesPtrInput` via:
//
//	        OrganizationsOrganizationPropertiesArgs{...}
//
//	or:
//
//	        nil
type OrganizationsOrganizationPropertiesPtrInput interface {
	pulumi.Input

	ToOrganizationsOrganizationPropertiesPtrOutput() OrganizationsOrganizationPropertiesPtrOutput
	ToOrganizationsOrganizationPropertiesPtrOutputWithContext(context.Context) OrganizationsOrganizationPropertiesPtrOutput
}

type organizationsOrganizationPropertiesPtrType OrganizationsOrganizationPropertiesArgs

func OrganizationsOrganizationPropertiesPtr(v *OrganizationsOrganizationPropertiesArgs) OrganizationsOrganizationPropertiesPtrInput {
	return (*organizationsOrganizationPropertiesPtrType)(v)
}

func (*organizationsOrganizationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsOrganizationProperties)(nil)).Elem()
}

func (i *organizationsOrganizationPropertiesPtrType) ToOrganizationsOrganizationPropertiesPtrOutput() OrganizationsOrganizationPropertiesPtrOutput {
	return i.ToOrganizationsOrganizationPropertiesPtrOutputWithContext(context.Background())
}

func (i *organizationsOrganizationPropertiesPtrType) ToOrganizationsOrganizationPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsOrganizationPropertiesPtrOutput)
}

// Definition of OrganizationsOrganization
type OrganizationsOrganizationPropertiesOutput struct{ *pulumi.OutputState }

func (OrganizationsOrganizationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsOrganizationProperties)(nil)).Elem()
}

func (o OrganizationsOrganizationPropertiesOutput) ToOrganizationsOrganizationPropertiesOutput() OrganizationsOrganizationPropertiesOutput {
	return o
}

func (o OrganizationsOrganizationPropertiesOutput) ToOrganizationsOrganizationPropertiesOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesOutput {
	return o
}

func (o OrganizationsOrganizationPropertiesOutput) ToOrganizationsOrganizationPropertiesPtrOutput() OrganizationsOrganizationPropertiesPtrOutput {
	return o.ToOrganizationsOrganizationPropertiesPtrOutputWithContext(context.Background())
}

func (o OrganizationsOrganizationPropertiesOutput) ToOrganizationsOrganizationPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationsOrganizationProperties) *OrganizationsOrganizationProperties {
		return &v
	}).(OrganizationsOrganizationPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o OrganizationsOrganizationPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OrganizationsOrganizationPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OrganizationsOrganizationPropertiesOutput) AwsProperties() AwsOrganizationsOrganizationPropertiesPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *AwsOrganizationsOrganizationProperties {
		return v.AwsProperties
	}).(AwsOrganizationsOrganizationPropertiesPtrOutput)
}

// AWS Region
func (o OrganizationsOrganizationPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OrganizationsOrganizationPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OrganizationsOrganizationPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o OrganizationsOrganizationPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OrganizationsOrganizationPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type OrganizationsOrganizationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OrganizationsOrganizationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsOrganizationProperties)(nil)).Elem()
}

func (o OrganizationsOrganizationPropertiesPtrOutput) ToOrganizationsOrganizationPropertiesPtrOutput() OrganizationsOrganizationPropertiesPtrOutput {
	return o
}

func (o OrganizationsOrganizationPropertiesPtrOutput) ToOrganizationsOrganizationPropertiesPtrOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesPtrOutput {
	return o
}

func (o OrganizationsOrganizationPropertiesPtrOutput) Elem() OrganizationsOrganizationPropertiesOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) OrganizationsOrganizationProperties {
		if v != nil {
			return *v
		}
		var ret OrganizationsOrganizationProperties
		return ret
	}).(OrganizationsOrganizationPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o OrganizationsOrganizationPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OrganizationsOrganizationPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OrganizationsOrganizationPropertiesPtrOutput) AwsProperties() AwsOrganizationsOrganizationPropertiesPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *AwsOrganizationsOrganizationProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsOrganizationsOrganizationPropertiesPtrOutput)
}

// AWS Region
func (o OrganizationsOrganizationPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OrganizationsOrganizationPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OrganizationsOrganizationPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o OrganizationsOrganizationPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OrganizationsOrganizationPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsOrganizationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of OrganizationsOrganization
type OrganizationsOrganizationPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsOrganizationsOrganizationPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for OrganizationsOrganizationPropertiesResponse
func (val *OrganizationsOrganizationPropertiesResponse) Defaults() *OrganizationsOrganizationPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of OrganizationsOrganization
type OrganizationsOrganizationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OrganizationsOrganizationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsOrganizationPropertiesResponse)(nil)).Elem()
}

func (o OrganizationsOrganizationPropertiesResponseOutput) ToOrganizationsOrganizationPropertiesResponseOutput() OrganizationsOrganizationPropertiesResponseOutput {
	return o
}

func (o OrganizationsOrganizationPropertiesResponseOutput) ToOrganizationsOrganizationPropertiesResponseOutputWithContext(ctx context.Context) OrganizationsOrganizationPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o OrganizationsOrganizationPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o OrganizationsOrganizationPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o OrganizationsOrganizationPropertiesResponseOutput) AwsProperties() AwsOrganizationsOrganizationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *AwsOrganizationsOrganizationPropertiesResponse {
		return v.AwsProperties
	}).(AwsOrganizationsOrganizationPropertiesResponsePtrOutput)
}

// AWS Region
func (o OrganizationsOrganizationPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o OrganizationsOrganizationPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o OrganizationsOrganizationPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o OrganizationsOrganizationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o OrganizationsOrganizationPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o OrganizationsOrganizationPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsOrganizationPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of OriginCustomHeader
type OriginCustomHeaderResponse struct {
	// The name of a header that you want CloudFront to send to your origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
	HeaderName *string `pulumi:"headerName"`
	// The value for the header that you specified in the ``HeaderName`` field.
	HeaderValue *string `pulumi:"headerValue"`
}

// Definition of OriginCustomHeader
type OriginCustomHeaderResponseOutput struct{ *pulumi.OutputState }

func (OriginCustomHeaderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginCustomHeaderResponse)(nil)).Elem()
}

func (o OriginCustomHeaderResponseOutput) ToOriginCustomHeaderResponseOutput() OriginCustomHeaderResponseOutput {
	return o
}

func (o OriginCustomHeaderResponseOutput) ToOriginCustomHeaderResponseOutputWithContext(ctx context.Context) OriginCustomHeaderResponseOutput {
	return o
}

// The name of a header that you want CloudFront to send to your origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
func (o OriginCustomHeaderResponseOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginCustomHeaderResponse) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// The value for the header that you specified in the “HeaderName“ field.
func (o OriginCustomHeaderResponseOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginCustomHeaderResponse) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type OriginCustomHeaderResponseArrayOutput struct{ *pulumi.OutputState }

func (OriginCustomHeaderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginCustomHeaderResponse)(nil)).Elem()
}

func (o OriginCustomHeaderResponseArrayOutput) ToOriginCustomHeaderResponseArrayOutput() OriginCustomHeaderResponseArrayOutput {
	return o
}

func (o OriginCustomHeaderResponseArrayOutput) ToOriginCustomHeaderResponseArrayOutputWithContext(ctx context.Context) OriginCustomHeaderResponseArrayOutput {
	return o
}

func (o OriginCustomHeaderResponseArrayOutput) Index(i pulumi.IntInput) OriginCustomHeaderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginCustomHeaderResponse {
		return vs[0].([]OriginCustomHeaderResponse)[vs[1].(int)]
	}).(OriginCustomHeaderResponseOutput)
}

// Definition of OriginGroup
type OriginGroup struct {
	// A complex type that contains information about the failover criteria for an origin group. A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
	FailoverCriteria *OriginGroupFailoverCriteria `pulumi:"failoverCriteria"`
	// The origin group's ID.
	Id *string `pulumi:"id"`
	// A complex type that contains information about the origins in an origin group. A complex data type for the origins included in an origin group.
	Members *OriginGroupMembers `pulumi:"members"`
}

// OriginGroupInput is an input type that accepts OriginGroupArgs and OriginGroupOutput values.
// You can construct a concrete instance of `OriginGroupInput` via:
//
//	OriginGroupArgs{...}
type OriginGroupInput interface {
	pulumi.Input

	ToOriginGroupOutput() OriginGroupOutput
	ToOriginGroupOutputWithContext(context.Context) OriginGroupOutput
}

// Definition of OriginGroup
type OriginGroupArgs struct {
	// A complex type that contains information about the failover criteria for an origin group. A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
	FailoverCriteria OriginGroupFailoverCriteriaPtrInput `pulumi:"failoverCriteria"`
	// The origin group's ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A complex type that contains information about the origins in an origin group. A complex data type for the origins included in an origin group.
	Members OriginGroupMembersPtrInput `pulumi:"members"`
}

func (OriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroup)(nil)).Elem()
}

func (i OriginGroupArgs) ToOriginGroupOutput() OriginGroupOutput {
	return i.ToOriginGroupOutputWithContext(context.Background())
}

func (i OriginGroupArgs) ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOutput)
}

// OriginGroupArrayInput is an input type that accepts OriginGroupArray and OriginGroupArrayOutput values.
// You can construct a concrete instance of `OriginGroupArrayInput` via:
//
//	OriginGroupArray{ OriginGroupArgs{...} }
type OriginGroupArrayInput interface {
	pulumi.Input

	ToOriginGroupArrayOutput() OriginGroupArrayOutput
	ToOriginGroupArrayOutputWithContext(context.Context) OriginGroupArrayOutput
}

type OriginGroupArray []OriginGroupInput

func (OriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroup)(nil)).Elem()
}

func (i OriginGroupArray) ToOriginGroupArrayOutput() OriginGroupArrayOutput {
	return i.ToOriginGroupArrayOutputWithContext(context.Background())
}

func (i OriginGroupArray) ToOriginGroupArrayOutputWithContext(ctx context.Context) OriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupArrayOutput)
}

// Definition of OriginGroup
type OriginGroupOutput struct{ *pulumi.OutputState }

func (OriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroup)(nil)).Elem()
}

func (o OriginGroupOutput) ToOriginGroupOutput() OriginGroupOutput {
	return o
}

func (o OriginGroupOutput) ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput {
	return o
}

// A complex type that contains information about the failover criteria for an origin group. A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
func (o OriginGroupOutput) FailoverCriteria() OriginGroupFailoverCriteriaPtrOutput {
	return o.ApplyT(func(v OriginGroup) *OriginGroupFailoverCriteria { return v.FailoverCriteria }).(OriginGroupFailoverCriteriaPtrOutput)
}

// The origin group's ID.
func (o OriginGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A complex type that contains information about the origins in an origin group. A complex data type for the origins included in an origin group.
func (o OriginGroupOutput) Members() OriginGroupMembersPtrOutput {
	return o.ApplyT(func(v OriginGroup) *OriginGroupMembers { return v.Members }).(OriginGroupMembersPtrOutput)
}

type OriginGroupArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroup)(nil)).Elem()
}

func (o OriginGroupArrayOutput) ToOriginGroupArrayOutput() OriginGroupArrayOutput {
	return o
}

func (o OriginGroupArrayOutput) ToOriginGroupArrayOutputWithContext(ctx context.Context) OriginGroupArrayOutput {
	return o
}

func (o OriginGroupArrayOutput) Index(i pulumi.IntInput) OriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroup {
		return vs[0].([]OriginGroup)[vs[1].(int)]
	}).(OriginGroupOutput)
}

// Definition of OriginGroupFailoverCriteria
type OriginGroupFailoverCriteria struct {
	// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
	StatusCodes *StatusCodes `pulumi:"statusCodes"`
}

// OriginGroupFailoverCriteriaInput is an input type that accepts OriginGroupFailoverCriteriaArgs and OriginGroupFailoverCriteriaOutput values.
// You can construct a concrete instance of `OriginGroupFailoverCriteriaInput` via:
//
//	OriginGroupFailoverCriteriaArgs{...}
type OriginGroupFailoverCriteriaInput interface {
	pulumi.Input

	ToOriginGroupFailoverCriteriaOutput() OriginGroupFailoverCriteriaOutput
	ToOriginGroupFailoverCriteriaOutputWithContext(context.Context) OriginGroupFailoverCriteriaOutput
}

// Definition of OriginGroupFailoverCriteria
type OriginGroupFailoverCriteriaArgs struct {
	// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
	StatusCodes StatusCodesPtrInput `pulumi:"statusCodes"`
}

func (OriginGroupFailoverCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupFailoverCriteria)(nil)).Elem()
}

func (i OriginGroupFailoverCriteriaArgs) ToOriginGroupFailoverCriteriaOutput() OriginGroupFailoverCriteriaOutput {
	return i.ToOriginGroupFailoverCriteriaOutputWithContext(context.Background())
}

func (i OriginGroupFailoverCriteriaArgs) ToOriginGroupFailoverCriteriaOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupFailoverCriteriaOutput)
}

func (i OriginGroupFailoverCriteriaArgs) ToOriginGroupFailoverCriteriaPtrOutput() OriginGroupFailoverCriteriaPtrOutput {
	return i.ToOriginGroupFailoverCriteriaPtrOutputWithContext(context.Background())
}

func (i OriginGroupFailoverCriteriaArgs) ToOriginGroupFailoverCriteriaPtrOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupFailoverCriteriaOutput).ToOriginGroupFailoverCriteriaPtrOutputWithContext(ctx)
}

// OriginGroupFailoverCriteriaPtrInput is an input type that accepts OriginGroupFailoverCriteriaArgs, OriginGroupFailoverCriteriaPtr and OriginGroupFailoverCriteriaPtrOutput values.
// You can construct a concrete instance of `OriginGroupFailoverCriteriaPtrInput` via:
//
//	        OriginGroupFailoverCriteriaArgs{...}
//
//	or:
//
//	        nil
type OriginGroupFailoverCriteriaPtrInput interface {
	pulumi.Input

	ToOriginGroupFailoverCriteriaPtrOutput() OriginGroupFailoverCriteriaPtrOutput
	ToOriginGroupFailoverCriteriaPtrOutputWithContext(context.Context) OriginGroupFailoverCriteriaPtrOutput
}

type originGroupFailoverCriteriaPtrType OriginGroupFailoverCriteriaArgs

func OriginGroupFailoverCriteriaPtr(v *OriginGroupFailoverCriteriaArgs) OriginGroupFailoverCriteriaPtrInput {
	return (*originGroupFailoverCriteriaPtrType)(v)
}

func (*originGroupFailoverCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupFailoverCriteria)(nil)).Elem()
}

func (i *originGroupFailoverCriteriaPtrType) ToOriginGroupFailoverCriteriaPtrOutput() OriginGroupFailoverCriteriaPtrOutput {
	return i.ToOriginGroupFailoverCriteriaPtrOutputWithContext(context.Background())
}

func (i *originGroupFailoverCriteriaPtrType) ToOriginGroupFailoverCriteriaPtrOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupFailoverCriteriaPtrOutput)
}

// Definition of OriginGroupFailoverCriteria
type OriginGroupFailoverCriteriaOutput struct{ *pulumi.OutputState }

func (OriginGroupFailoverCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupFailoverCriteria)(nil)).Elem()
}

func (o OriginGroupFailoverCriteriaOutput) ToOriginGroupFailoverCriteriaOutput() OriginGroupFailoverCriteriaOutput {
	return o
}

func (o OriginGroupFailoverCriteriaOutput) ToOriginGroupFailoverCriteriaOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaOutput {
	return o
}

func (o OriginGroupFailoverCriteriaOutput) ToOriginGroupFailoverCriteriaPtrOutput() OriginGroupFailoverCriteriaPtrOutput {
	return o.ToOriginGroupFailoverCriteriaPtrOutputWithContext(context.Background())
}

func (o OriginGroupFailoverCriteriaOutput) ToOriginGroupFailoverCriteriaPtrOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginGroupFailoverCriteria) *OriginGroupFailoverCriteria {
		return &v
	}).(OriginGroupFailoverCriteriaPtrOutput)
}

// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
func (o OriginGroupFailoverCriteriaOutput) StatusCodes() StatusCodesPtrOutput {
	return o.ApplyT(func(v OriginGroupFailoverCriteria) *StatusCodes { return v.StatusCodes }).(StatusCodesPtrOutput)
}

type OriginGroupFailoverCriteriaPtrOutput struct{ *pulumi.OutputState }

func (OriginGroupFailoverCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupFailoverCriteria)(nil)).Elem()
}

func (o OriginGroupFailoverCriteriaPtrOutput) ToOriginGroupFailoverCriteriaPtrOutput() OriginGroupFailoverCriteriaPtrOutput {
	return o
}

func (o OriginGroupFailoverCriteriaPtrOutput) ToOriginGroupFailoverCriteriaPtrOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaPtrOutput {
	return o
}

func (o OriginGroupFailoverCriteriaPtrOutput) Elem() OriginGroupFailoverCriteriaOutput {
	return o.ApplyT(func(v *OriginGroupFailoverCriteria) OriginGroupFailoverCriteria {
		if v != nil {
			return *v
		}
		var ret OriginGroupFailoverCriteria
		return ret
	}).(OriginGroupFailoverCriteriaOutput)
}

// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
func (o OriginGroupFailoverCriteriaPtrOutput) StatusCodes() StatusCodesPtrOutput {
	return o.ApplyT(func(v *OriginGroupFailoverCriteria) *StatusCodes {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesPtrOutput)
}

// Definition of OriginGroupFailoverCriteria
type OriginGroupFailoverCriteriaResponse struct {
	// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
	StatusCodes *StatusCodesResponse `pulumi:"statusCodes"`
}

// Definition of OriginGroupFailoverCriteria
type OriginGroupFailoverCriteriaResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupFailoverCriteriaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupFailoverCriteriaResponse)(nil)).Elem()
}

func (o OriginGroupFailoverCriteriaResponseOutput) ToOriginGroupFailoverCriteriaResponseOutput() OriginGroupFailoverCriteriaResponseOutput {
	return o
}

func (o OriginGroupFailoverCriteriaResponseOutput) ToOriginGroupFailoverCriteriaResponseOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaResponseOutput {
	return o
}

// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
func (o OriginGroupFailoverCriteriaResponseOutput) StatusCodes() StatusCodesResponsePtrOutput {
	return o.ApplyT(func(v OriginGroupFailoverCriteriaResponse) *StatusCodesResponse { return v.StatusCodes }).(StatusCodesResponsePtrOutput)
}

type OriginGroupFailoverCriteriaResponsePtrOutput struct{ *pulumi.OutputState }

func (OriginGroupFailoverCriteriaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupFailoverCriteriaResponse)(nil)).Elem()
}

func (o OriginGroupFailoverCriteriaResponsePtrOutput) ToOriginGroupFailoverCriteriaResponsePtrOutput() OriginGroupFailoverCriteriaResponsePtrOutput {
	return o
}

func (o OriginGroupFailoverCriteriaResponsePtrOutput) ToOriginGroupFailoverCriteriaResponsePtrOutputWithContext(ctx context.Context) OriginGroupFailoverCriteriaResponsePtrOutput {
	return o
}

func (o OriginGroupFailoverCriteriaResponsePtrOutput) Elem() OriginGroupFailoverCriteriaResponseOutput {
	return o.ApplyT(func(v *OriginGroupFailoverCriteriaResponse) OriginGroupFailoverCriteriaResponse {
		if v != nil {
			return *v
		}
		var ret OriginGroupFailoverCriteriaResponse
		return ret
	}).(OriginGroupFailoverCriteriaResponseOutput)
}

// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin. A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
func (o OriginGroupFailoverCriteriaResponsePtrOutput) StatusCodes() StatusCodesResponsePtrOutput {
	return o.ApplyT(func(v *OriginGroupFailoverCriteriaResponse) *StatusCodesResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesResponsePtrOutput)
}

// Definition of OriginGroupMember
type OriginGroupMember struct {
	// The ID for an origin in an origin group.
	OriginId *string `pulumi:"originId"`
}

// OriginGroupMemberInput is an input type that accepts OriginGroupMemberArgs and OriginGroupMemberOutput values.
// You can construct a concrete instance of `OriginGroupMemberInput` via:
//
//	OriginGroupMemberArgs{...}
type OriginGroupMemberInput interface {
	pulumi.Input

	ToOriginGroupMemberOutput() OriginGroupMemberOutput
	ToOriginGroupMemberOutputWithContext(context.Context) OriginGroupMemberOutput
}

// Definition of OriginGroupMember
type OriginGroupMemberArgs struct {
	// The ID for an origin in an origin group.
	OriginId pulumi.StringPtrInput `pulumi:"originId"`
}

func (OriginGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupMember)(nil)).Elem()
}

func (i OriginGroupMemberArgs) ToOriginGroupMemberOutput() OriginGroupMemberOutput {
	return i.ToOriginGroupMemberOutputWithContext(context.Background())
}

func (i OriginGroupMemberArgs) ToOriginGroupMemberOutputWithContext(ctx context.Context) OriginGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMemberOutput)
}

// OriginGroupMemberArrayInput is an input type that accepts OriginGroupMemberArray and OriginGroupMemberArrayOutput values.
// You can construct a concrete instance of `OriginGroupMemberArrayInput` via:
//
//	OriginGroupMemberArray{ OriginGroupMemberArgs{...} }
type OriginGroupMemberArrayInput interface {
	pulumi.Input

	ToOriginGroupMemberArrayOutput() OriginGroupMemberArrayOutput
	ToOriginGroupMemberArrayOutputWithContext(context.Context) OriginGroupMemberArrayOutput
}

type OriginGroupMemberArray []OriginGroupMemberInput

func (OriginGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupMember)(nil)).Elem()
}

func (i OriginGroupMemberArray) ToOriginGroupMemberArrayOutput() OriginGroupMemberArrayOutput {
	return i.ToOriginGroupMemberArrayOutputWithContext(context.Background())
}

func (i OriginGroupMemberArray) ToOriginGroupMemberArrayOutputWithContext(ctx context.Context) OriginGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMemberArrayOutput)
}

// Definition of OriginGroupMember
type OriginGroupMemberOutput struct{ *pulumi.OutputState }

func (OriginGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupMember)(nil)).Elem()
}

func (o OriginGroupMemberOutput) ToOriginGroupMemberOutput() OriginGroupMemberOutput {
	return o
}

func (o OriginGroupMemberOutput) ToOriginGroupMemberOutputWithContext(ctx context.Context) OriginGroupMemberOutput {
	return o
}

// The ID for an origin in an origin group.
func (o OriginGroupMemberOutput) OriginId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupMember) *string { return v.OriginId }).(pulumi.StringPtrOutput)
}

type OriginGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupMember)(nil)).Elem()
}

func (o OriginGroupMemberArrayOutput) ToOriginGroupMemberArrayOutput() OriginGroupMemberArrayOutput {
	return o
}

func (o OriginGroupMemberArrayOutput) ToOriginGroupMemberArrayOutputWithContext(ctx context.Context) OriginGroupMemberArrayOutput {
	return o
}

func (o OriginGroupMemberArrayOutput) Index(i pulumi.IntInput) OriginGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupMember {
		return vs[0].([]OriginGroupMember)[vs[1].(int)]
	}).(OriginGroupMemberOutput)
}

// Definition of OriginGroupMember
type OriginGroupMemberResponse struct {
	// The ID for an origin in an origin group.
	OriginId *string `pulumi:"originId"`
}

// Definition of OriginGroupMember
type OriginGroupMemberResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupMemberResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupMemberResponse)(nil)).Elem()
}

func (o OriginGroupMemberResponseOutput) ToOriginGroupMemberResponseOutput() OriginGroupMemberResponseOutput {
	return o
}

func (o OriginGroupMemberResponseOutput) ToOriginGroupMemberResponseOutputWithContext(ctx context.Context) OriginGroupMemberResponseOutput {
	return o
}

// The ID for an origin in an origin group.
func (o OriginGroupMemberResponseOutput) OriginId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupMemberResponse) *string { return v.OriginId }).(pulumi.StringPtrOutput)
}

type OriginGroupMemberResponseArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupMemberResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupMemberResponse)(nil)).Elem()
}

func (o OriginGroupMemberResponseArrayOutput) ToOriginGroupMemberResponseArrayOutput() OriginGroupMemberResponseArrayOutput {
	return o
}

func (o OriginGroupMemberResponseArrayOutput) ToOriginGroupMemberResponseArrayOutputWithContext(ctx context.Context) OriginGroupMemberResponseArrayOutput {
	return o
}

func (o OriginGroupMemberResponseArrayOutput) Index(i pulumi.IntInput) OriginGroupMemberResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupMemberResponse {
		return vs[0].([]OriginGroupMemberResponse)[vs[1].(int)]
	}).(OriginGroupMemberResponseOutput)
}

// Definition of OriginGroupMembers
type OriginGroupMembers struct {
	// Items (origins) in an origin group.
	Items []OriginGroupMember `pulumi:"items"`
	// The number of origins in an origin group.
	Quantity *int `pulumi:"quantity"`
}

// OriginGroupMembersInput is an input type that accepts OriginGroupMembersArgs and OriginGroupMembersOutput values.
// You can construct a concrete instance of `OriginGroupMembersInput` via:
//
//	OriginGroupMembersArgs{...}
type OriginGroupMembersInput interface {
	pulumi.Input

	ToOriginGroupMembersOutput() OriginGroupMembersOutput
	ToOriginGroupMembersOutputWithContext(context.Context) OriginGroupMembersOutput
}

// Definition of OriginGroupMembers
type OriginGroupMembersArgs struct {
	// Items (origins) in an origin group.
	Items OriginGroupMemberArrayInput `pulumi:"items"`
	// The number of origins in an origin group.
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
}

func (OriginGroupMembersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupMembers)(nil)).Elem()
}

func (i OriginGroupMembersArgs) ToOriginGroupMembersOutput() OriginGroupMembersOutput {
	return i.ToOriginGroupMembersOutputWithContext(context.Background())
}

func (i OriginGroupMembersArgs) ToOriginGroupMembersOutputWithContext(ctx context.Context) OriginGroupMembersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMembersOutput)
}

func (i OriginGroupMembersArgs) ToOriginGroupMembersPtrOutput() OriginGroupMembersPtrOutput {
	return i.ToOriginGroupMembersPtrOutputWithContext(context.Background())
}

func (i OriginGroupMembersArgs) ToOriginGroupMembersPtrOutputWithContext(ctx context.Context) OriginGroupMembersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMembersOutput).ToOriginGroupMembersPtrOutputWithContext(ctx)
}

// OriginGroupMembersPtrInput is an input type that accepts OriginGroupMembersArgs, OriginGroupMembersPtr and OriginGroupMembersPtrOutput values.
// You can construct a concrete instance of `OriginGroupMembersPtrInput` via:
//
//	        OriginGroupMembersArgs{...}
//
//	or:
//
//	        nil
type OriginGroupMembersPtrInput interface {
	pulumi.Input

	ToOriginGroupMembersPtrOutput() OriginGroupMembersPtrOutput
	ToOriginGroupMembersPtrOutputWithContext(context.Context) OriginGroupMembersPtrOutput
}

type originGroupMembersPtrType OriginGroupMembersArgs

func OriginGroupMembersPtr(v *OriginGroupMembersArgs) OriginGroupMembersPtrInput {
	return (*originGroupMembersPtrType)(v)
}

func (*originGroupMembersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupMembers)(nil)).Elem()
}

func (i *originGroupMembersPtrType) ToOriginGroupMembersPtrOutput() OriginGroupMembersPtrOutput {
	return i.ToOriginGroupMembersPtrOutputWithContext(context.Background())
}

func (i *originGroupMembersPtrType) ToOriginGroupMembersPtrOutputWithContext(ctx context.Context) OriginGroupMembersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMembersPtrOutput)
}

// Definition of OriginGroupMembers
type OriginGroupMembersOutput struct{ *pulumi.OutputState }

func (OriginGroupMembersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupMembers)(nil)).Elem()
}

func (o OriginGroupMembersOutput) ToOriginGroupMembersOutput() OriginGroupMembersOutput {
	return o
}

func (o OriginGroupMembersOutput) ToOriginGroupMembersOutputWithContext(ctx context.Context) OriginGroupMembersOutput {
	return o
}

func (o OriginGroupMembersOutput) ToOriginGroupMembersPtrOutput() OriginGroupMembersPtrOutput {
	return o.ToOriginGroupMembersPtrOutputWithContext(context.Background())
}

func (o OriginGroupMembersOutput) ToOriginGroupMembersPtrOutputWithContext(ctx context.Context) OriginGroupMembersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginGroupMembers) *OriginGroupMembers {
		return &v
	}).(OriginGroupMembersPtrOutput)
}

// Items (origins) in an origin group.
func (o OriginGroupMembersOutput) Items() OriginGroupMemberArrayOutput {
	return o.ApplyT(func(v OriginGroupMembers) []OriginGroupMember { return v.Items }).(OriginGroupMemberArrayOutput)
}

// The number of origins in an origin group.
func (o OriginGroupMembersOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginGroupMembers) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type OriginGroupMembersPtrOutput struct{ *pulumi.OutputState }

func (OriginGroupMembersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupMembers)(nil)).Elem()
}

func (o OriginGroupMembersPtrOutput) ToOriginGroupMembersPtrOutput() OriginGroupMembersPtrOutput {
	return o
}

func (o OriginGroupMembersPtrOutput) ToOriginGroupMembersPtrOutputWithContext(ctx context.Context) OriginGroupMembersPtrOutput {
	return o
}

func (o OriginGroupMembersPtrOutput) Elem() OriginGroupMembersOutput {
	return o.ApplyT(func(v *OriginGroupMembers) OriginGroupMembers {
		if v != nil {
			return *v
		}
		var ret OriginGroupMembers
		return ret
	}).(OriginGroupMembersOutput)
}

// Items (origins) in an origin group.
func (o OriginGroupMembersPtrOutput) Items() OriginGroupMemberArrayOutput {
	return o.ApplyT(func(v *OriginGroupMembers) []OriginGroupMember {
		if v == nil {
			return nil
		}
		return v.Items
	}).(OriginGroupMemberArrayOutput)
}

// The number of origins in an origin group.
func (o OriginGroupMembersPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginGroupMembers) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Definition of OriginGroupMembers
type OriginGroupMembersResponse struct {
	// Items (origins) in an origin group.
	Items []OriginGroupMemberResponse `pulumi:"items"`
	// The number of origins in an origin group.
	Quantity *int `pulumi:"quantity"`
}

// Definition of OriginGroupMembers
type OriginGroupMembersResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupMembersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupMembersResponse)(nil)).Elem()
}

func (o OriginGroupMembersResponseOutput) ToOriginGroupMembersResponseOutput() OriginGroupMembersResponseOutput {
	return o
}

func (o OriginGroupMembersResponseOutput) ToOriginGroupMembersResponseOutputWithContext(ctx context.Context) OriginGroupMembersResponseOutput {
	return o
}

// Items (origins) in an origin group.
func (o OriginGroupMembersResponseOutput) Items() OriginGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v OriginGroupMembersResponse) []OriginGroupMemberResponse { return v.Items }).(OriginGroupMemberResponseArrayOutput)
}

// The number of origins in an origin group.
func (o OriginGroupMembersResponseOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginGroupMembersResponse) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type OriginGroupMembersResponsePtrOutput struct{ *pulumi.OutputState }

func (OriginGroupMembersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupMembersResponse)(nil)).Elem()
}

func (o OriginGroupMembersResponsePtrOutput) ToOriginGroupMembersResponsePtrOutput() OriginGroupMembersResponsePtrOutput {
	return o
}

func (o OriginGroupMembersResponsePtrOutput) ToOriginGroupMembersResponsePtrOutputWithContext(ctx context.Context) OriginGroupMembersResponsePtrOutput {
	return o
}

func (o OriginGroupMembersResponsePtrOutput) Elem() OriginGroupMembersResponseOutput {
	return o.ApplyT(func(v *OriginGroupMembersResponse) OriginGroupMembersResponse {
		if v != nil {
			return *v
		}
		var ret OriginGroupMembersResponse
		return ret
	}).(OriginGroupMembersResponseOutput)
}

// Items (origins) in an origin group.
func (o OriginGroupMembersResponsePtrOutput) Items() OriginGroupMemberResponseArrayOutput {
	return o.ApplyT(func(v *OriginGroupMembersResponse) []OriginGroupMemberResponse {
		if v == nil {
			return nil
		}
		return v.Items
	}).(OriginGroupMemberResponseArrayOutput)
}

// The number of origins in an origin group.
func (o OriginGroupMembersResponsePtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginGroupMembersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Definition of OriginGroup
type OriginGroupResponse struct {
	// A complex type that contains information about the failover criteria for an origin group. A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
	FailoverCriteria *OriginGroupFailoverCriteriaResponse `pulumi:"failoverCriteria"`
	// The origin group's ID.
	Id *string `pulumi:"id"`
	// A complex type that contains information about the origins in an origin group. A complex data type for the origins included in an origin group.
	Members *OriginGroupMembersResponse `pulumi:"members"`
}

// Definition of OriginGroup
type OriginGroupResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupResponse)(nil)).Elem()
}

func (o OriginGroupResponseOutput) ToOriginGroupResponseOutput() OriginGroupResponseOutput {
	return o
}

func (o OriginGroupResponseOutput) ToOriginGroupResponseOutputWithContext(ctx context.Context) OriginGroupResponseOutput {
	return o
}

// A complex type that contains information about the failover criteria for an origin group. A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
func (o OriginGroupResponseOutput) FailoverCriteria() OriginGroupFailoverCriteriaResponsePtrOutput {
	return o.ApplyT(func(v OriginGroupResponse) *OriginGroupFailoverCriteriaResponse { return v.FailoverCriteria }).(OriginGroupFailoverCriteriaResponsePtrOutput)
}

// The origin group's ID.
func (o OriginGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A complex type that contains information about the origins in an origin group. A complex data type for the origins included in an origin group.
func (o OriginGroupResponseOutput) Members() OriginGroupMembersResponsePtrOutput {
	return o.ApplyT(func(v OriginGroupResponse) *OriginGroupMembersResponse { return v.Members }).(OriginGroupMembersResponsePtrOutput)
}

type OriginGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupResponse)(nil)).Elem()
}

func (o OriginGroupResponseArrayOutput) ToOriginGroupResponseArrayOutput() OriginGroupResponseArrayOutput {
	return o
}

func (o OriginGroupResponseArrayOutput) ToOriginGroupResponseArrayOutputWithContext(ctx context.Context) OriginGroupResponseArrayOutput {
	return o
}

func (o OriginGroupResponseArrayOutput) Index(i pulumi.IntInput) OriginGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupResponse {
		return vs[0].([]OriginGroupResponse)[vs[1].(int)]
	}).(OriginGroupResponseOutput)
}

// Definition of OriginGroups
type OriginGroups struct {
	// The items (origin groups) in a distribution.
	Items []OriginGroup `pulumi:"items"`
	// The number of origin groups.
	Quantity *int `pulumi:"quantity"`
}

// OriginGroupsInput is an input type that accepts OriginGroupsArgs and OriginGroupsOutput values.
// You can construct a concrete instance of `OriginGroupsInput` via:
//
//	OriginGroupsArgs{...}
type OriginGroupsInput interface {
	pulumi.Input

	ToOriginGroupsOutput() OriginGroupsOutput
	ToOriginGroupsOutputWithContext(context.Context) OriginGroupsOutput
}

// Definition of OriginGroups
type OriginGroupsArgs struct {
	// The items (origin groups) in a distribution.
	Items OriginGroupArrayInput `pulumi:"items"`
	// The number of origin groups.
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
}

func (OriginGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroups)(nil)).Elem()
}

func (i OriginGroupsArgs) ToOriginGroupsOutput() OriginGroupsOutput {
	return i.ToOriginGroupsOutputWithContext(context.Background())
}

func (i OriginGroupsArgs) ToOriginGroupsOutputWithContext(ctx context.Context) OriginGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupsOutput)
}

func (i OriginGroupsArgs) ToOriginGroupsPtrOutput() OriginGroupsPtrOutput {
	return i.ToOriginGroupsPtrOutputWithContext(context.Background())
}

func (i OriginGroupsArgs) ToOriginGroupsPtrOutputWithContext(ctx context.Context) OriginGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupsOutput).ToOriginGroupsPtrOutputWithContext(ctx)
}

// OriginGroupsPtrInput is an input type that accepts OriginGroupsArgs, OriginGroupsPtr and OriginGroupsPtrOutput values.
// You can construct a concrete instance of `OriginGroupsPtrInput` via:
//
//	        OriginGroupsArgs{...}
//
//	or:
//
//	        nil
type OriginGroupsPtrInput interface {
	pulumi.Input

	ToOriginGroupsPtrOutput() OriginGroupsPtrOutput
	ToOriginGroupsPtrOutputWithContext(context.Context) OriginGroupsPtrOutput
}

type originGroupsPtrType OriginGroupsArgs

func OriginGroupsPtr(v *OriginGroupsArgs) OriginGroupsPtrInput {
	return (*originGroupsPtrType)(v)
}

func (*originGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroups)(nil)).Elem()
}

func (i *originGroupsPtrType) ToOriginGroupsPtrOutput() OriginGroupsPtrOutput {
	return i.ToOriginGroupsPtrOutputWithContext(context.Background())
}

func (i *originGroupsPtrType) ToOriginGroupsPtrOutputWithContext(ctx context.Context) OriginGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupsPtrOutput)
}

// Definition of OriginGroups
type OriginGroupsOutput struct{ *pulumi.OutputState }

func (OriginGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroups)(nil)).Elem()
}

func (o OriginGroupsOutput) ToOriginGroupsOutput() OriginGroupsOutput {
	return o
}

func (o OriginGroupsOutput) ToOriginGroupsOutputWithContext(ctx context.Context) OriginGroupsOutput {
	return o
}

func (o OriginGroupsOutput) ToOriginGroupsPtrOutput() OriginGroupsPtrOutput {
	return o.ToOriginGroupsPtrOutputWithContext(context.Background())
}

func (o OriginGroupsOutput) ToOriginGroupsPtrOutputWithContext(ctx context.Context) OriginGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginGroups) *OriginGroups {
		return &v
	}).(OriginGroupsPtrOutput)
}

// The items (origin groups) in a distribution.
func (o OriginGroupsOutput) Items() OriginGroupArrayOutput {
	return o.ApplyT(func(v OriginGroups) []OriginGroup { return v.Items }).(OriginGroupArrayOutput)
}

// The number of origin groups.
func (o OriginGroupsOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginGroups) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type OriginGroupsPtrOutput struct{ *pulumi.OutputState }

func (OriginGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroups)(nil)).Elem()
}

func (o OriginGroupsPtrOutput) ToOriginGroupsPtrOutput() OriginGroupsPtrOutput {
	return o
}

func (o OriginGroupsPtrOutput) ToOriginGroupsPtrOutputWithContext(ctx context.Context) OriginGroupsPtrOutput {
	return o
}

func (o OriginGroupsPtrOutput) Elem() OriginGroupsOutput {
	return o.ApplyT(func(v *OriginGroups) OriginGroups {
		if v != nil {
			return *v
		}
		var ret OriginGroups
		return ret
	}).(OriginGroupsOutput)
}

// The items (origin groups) in a distribution.
func (o OriginGroupsPtrOutput) Items() OriginGroupArrayOutput {
	return o.ApplyT(func(v *OriginGroups) []OriginGroup {
		if v == nil {
			return nil
		}
		return v.Items
	}).(OriginGroupArrayOutput)
}

// The number of origin groups.
func (o OriginGroupsPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginGroups) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Definition of OriginGroups
type OriginGroupsResponse struct {
	// The items (origin groups) in a distribution.
	Items []OriginGroupResponse `pulumi:"items"`
	// The number of origin groups.
	Quantity *int `pulumi:"quantity"`
}

// Definition of OriginGroups
type OriginGroupsResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupsResponse)(nil)).Elem()
}

func (o OriginGroupsResponseOutput) ToOriginGroupsResponseOutput() OriginGroupsResponseOutput {
	return o
}

func (o OriginGroupsResponseOutput) ToOriginGroupsResponseOutputWithContext(ctx context.Context) OriginGroupsResponseOutput {
	return o
}

// The items (origin groups) in a distribution.
func (o OriginGroupsResponseOutput) Items() OriginGroupResponseArrayOutput {
	return o.ApplyT(func(v OriginGroupsResponse) []OriginGroupResponse { return v.Items }).(OriginGroupResponseArrayOutput)
}

// The number of origin groups.
func (o OriginGroupsResponseOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginGroupsResponse) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type OriginGroupsResponsePtrOutput struct{ *pulumi.OutputState }

func (OriginGroupsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupsResponse)(nil)).Elem()
}

func (o OriginGroupsResponsePtrOutput) ToOriginGroupsResponsePtrOutput() OriginGroupsResponsePtrOutput {
	return o
}

func (o OriginGroupsResponsePtrOutput) ToOriginGroupsResponsePtrOutputWithContext(ctx context.Context) OriginGroupsResponsePtrOutput {
	return o
}

func (o OriginGroupsResponsePtrOutput) Elem() OriginGroupsResponseOutput {
	return o.ApplyT(func(v *OriginGroupsResponse) OriginGroupsResponse {
		if v != nil {
			return *v
		}
		var ret OriginGroupsResponse
		return ret
	}).(OriginGroupsResponseOutput)
}

// The items (origin groups) in a distribution.
func (o OriginGroupsResponsePtrOutput) Items() OriginGroupResponseArrayOutput {
	return o.ApplyT(func(v *OriginGroupsResponse) []OriginGroupResponse {
		if v == nil {
			return nil
		}
		return v.Items
	}).(OriginGroupResponseArrayOutput)
}

// The number of origin groups.
func (o OriginGroupsResponsePtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginGroupsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Definition of Origin
type OriginResponse struct {
	// The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3. For a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout). For more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
	ConnectionAttempts *int `pulumi:"connectionAttempts"`
	// The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds. For more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
	ConnectionTimeout *int `pulumi:"connectionTimeout"`
	// Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the ``S3OriginConfig`` type instead. A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
	CustomOriginConfig *CustomOriginConfigResponse `pulumi:"customOriginConfig"`
	// The domain name for the origin. For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
	DomainName *string `pulumi:"domainName"`
	// A unique identifier for the origin. This value must be unique within the distribution. Use this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
	Id *string `pulumi:"id"`
	// The unique identifier of an origin access control for this origin. For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
	OriginAccessControlId *string `pulumi:"originAccessControlId"`
	// A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
	OriginCustomHeaders []OriginCustomHeaderResponse `pulumi:"originCustomHeaders"`
	// An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin. For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
	OriginPath *string `pulumi:"originPath"`
	// CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*. CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
	OriginShield *OriginShieldResponse `pulumi:"originShield"`
	// Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the ``CustomOriginConfig`` type instead. A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the ``CustomOriginConfig`` element instead.
	S3OriginConfig *S3OriginConfigResponse `pulumi:"s3OriginConfig"`
}

// Defaults sets the appropriate defaults for OriginResponse
func (val *OriginResponse) Defaults() *OriginResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CustomOriginConfig = tmp.CustomOriginConfig.Defaults()

	return &tmp
}

// Definition of Origin
type OriginResponseOutput struct{ *pulumi.OutputState }

func (OriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginResponse)(nil)).Elem()
}

func (o OriginResponseOutput) ToOriginResponseOutput() OriginResponseOutput {
	return o
}

func (o OriginResponseOutput) ToOriginResponseOutputWithContext(ctx context.Context) OriginResponseOutput {
	return o
}

// The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3. For a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout). For more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) ConnectionAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginResponse) *int { return v.ConnectionAttempts }).(pulumi.IntPtrOutput)
}

// The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds. For more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) ConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginResponse) *int { return v.ConnectionTimeout }).(pulumi.IntPtrOutput)
}

// Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the “S3OriginConfig“ type instead. A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
func (o OriginResponseOutput) CustomOriginConfig() CustomOriginConfigResponsePtrOutput {
	return o.ApplyT(func(v OriginResponse) *CustomOriginConfigResponse { return v.CustomOriginConfig }).(CustomOriginConfigResponsePtrOutput)
}

// The domain name for the origin. For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginResponse) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// A unique identifier for the origin. This value must be unique within the distribution. Use this value to specify the “TargetOriginId“ in a “CacheBehavior“ or “DefaultCacheBehavior“.
func (o OriginResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The unique identifier of an origin access control for this origin. For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) OriginAccessControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginResponse) *string { return v.OriginAccessControlId }).(pulumi.StringPtrOutput)
}

// A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) OriginCustomHeaders() OriginCustomHeaderResponseArrayOutput {
	return o.ApplyT(func(v OriginResponse) []OriginCustomHeaderResponse { return v.OriginCustomHeaders }).(OriginCustomHeaderResponseArrayOutput)
}

// An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin. For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) OriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginResponse) *string { return v.OriginPath }).(pulumi.StringPtrOutput)
}

// CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*. CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
func (o OriginResponseOutput) OriginShield() OriginShieldResponsePtrOutput {
	return o.ApplyT(func(v OriginResponse) *OriginShieldResponse { return v.OriginShield }).(OriginShieldResponsePtrOutput)
}

// Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the “CustomOriginConfig“ type instead. A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the “CustomOriginConfig“ element instead.
func (o OriginResponseOutput) S3OriginConfig() S3OriginConfigResponsePtrOutput {
	return o.ApplyT(func(v OriginResponse) *S3OriginConfigResponse { return v.S3OriginConfig }).(S3OriginConfigResponsePtrOutput)
}

type OriginResponseArrayOutput struct{ *pulumi.OutputState }

func (OriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginResponse)(nil)).Elem()
}

func (o OriginResponseArrayOutput) ToOriginResponseArrayOutput() OriginResponseArrayOutput {
	return o
}

func (o OriginResponseArrayOutput) ToOriginResponseArrayOutputWithContext(ctx context.Context) OriginResponseArrayOutput {
	return o
}

func (o OriginResponseArrayOutput) Index(i pulumi.IntInput) OriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginResponse {
		return vs[0].([]OriginResponse)[vs[1].(int)]
	}).(OriginResponseOutput)
}

// Definition of OriginShield
type OriginShieldResponse struct {
	// A flag that specifies whether Origin Shield is enabled. When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
	Enabled *bool `pulumi:"enabled"`
	// The AWS-Region for Origin Shield. Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as ``us-east-2``. When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
	OriginShieldRegion *string `pulumi:"originShieldRegion"`
}

// Definition of OriginShield
type OriginShieldResponseOutput struct{ *pulumi.OutputState }

func (OriginShieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginShieldResponse)(nil)).Elem()
}

func (o OriginShieldResponseOutput) ToOriginShieldResponseOutput() OriginShieldResponseOutput {
	return o
}

func (o OriginShieldResponseOutput) ToOriginShieldResponseOutputWithContext(ctx context.Context) OriginShieldResponseOutput {
	return o
}

// A flag that specifies whether Origin Shield is enabled. When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
func (o OriginShieldResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginShieldResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The AWS-Region for Origin Shield. Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as “us-east-2“. When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
func (o OriginShieldResponseOutput) OriginShieldRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginShieldResponse) *string { return v.OriginShieldRegion }).(pulumi.StringPtrOutput)
}

type OriginShieldResponsePtrOutput struct{ *pulumi.OutputState }

func (OriginShieldResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginShieldResponse)(nil)).Elem()
}

func (o OriginShieldResponsePtrOutput) ToOriginShieldResponsePtrOutput() OriginShieldResponsePtrOutput {
	return o
}

func (o OriginShieldResponsePtrOutput) ToOriginShieldResponsePtrOutputWithContext(ctx context.Context) OriginShieldResponsePtrOutput {
	return o
}

func (o OriginShieldResponsePtrOutput) Elem() OriginShieldResponseOutput {
	return o.ApplyT(func(v *OriginShieldResponse) OriginShieldResponse {
		if v != nil {
			return *v
		}
		var ret OriginShieldResponse
		return ret
	}).(OriginShieldResponseOutput)
}

// A flag that specifies whether Origin Shield is enabled. When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
func (o OriginShieldResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OriginShieldResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS-Region for Origin Shield. Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as “us-east-2“. When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
func (o OriginShieldResponsePtrOutput) OriginShieldRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginShieldResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginShieldRegion
	}).(pulumi.StringPtrOutput)
}

// Definition of OutpostConfigResponse
type OutpostConfigResponse struct {
	// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
	ControlPlaneInstanceType *string `pulumi:"controlPlaneInstanceType"`
	// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
	ControlPlanePlacement *ControlPlanePlacementResponse `pulumi:"controlPlanePlacement"`
	// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
	OutpostArns []string `pulumi:"outpostArns"`
}

// OutpostConfigResponseInput is an input type that accepts OutpostConfigResponseArgs and OutpostConfigResponseOutput values.
// You can construct a concrete instance of `OutpostConfigResponseInput` via:
//
//	OutpostConfigResponseArgs{...}
type OutpostConfigResponseInput interface {
	pulumi.Input

	ToOutpostConfigResponseOutput() OutpostConfigResponseOutput
	ToOutpostConfigResponseOutputWithContext(context.Context) OutpostConfigResponseOutput
}

// Definition of OutpostConfigResponse
type OutpostConfigResponseArgs struct {
	// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
	ControlPlaneInstanceType pulumi.StringPtrInput `pulumi:"controlPlaneInstanceType"`
	// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
	ControlPlanePlacement ControlPlanePlacementResponsePtrInput `pulumi:"controlPlanePlacement"`
	// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
	OutpostArns pulumi.StringArrayInput `pulumi:"outpostArns"`
}

func (OutpostConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutpostConfigResponse)(nil)).Elem()
}

func (i OutpostConfigResponseArgs) ToOutpostConfigResponseOutput() OutpostConfigResponseOutput {
	return i.ToOutpostConfigResponseOutputWithContext(context.Background())
}

func (i OutpostConfigResponseArgs) ToOutpostConfigResponseOutputWithContext(ctx context.Context) OutpostConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutpostConfigResponseOutput)
}

func (i OutpostConfigResponseArgs) ToOutpostConfigResponsePtrOutput() OutpostConfigResponsePtrOutput {
	return i.ToOutpostConfigResponsePtrOutputWithContext(context.Background())
}

func (i OutpostConfigResponseArgs) ToOutpostConfigResponsePtrOutputWithContext(ctx context.Context) OutpostConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutpostConfigResponseOutput).ToOutpostConfigResponsePtrOutputWithContext(ctx)
}

// OutpostConfigResponsePtrInput is an input type that accepts OutpostConfigResponseArgs, OutpostConfigResponsePtr and OutpostConfigResponsePtrOutput values.
// You can construct a concrete instance of `OutpostConfigResponsePtrInput` via:
//
//	        OutpostConfigResponseArgs{...}
//
//	or:
//
//	        nil
type OutpostConfigResponsePtrInput interface {
	pulumi.Input

	ToOutpostConfigResponsePtrOutput() OutpostConfigResponsePtrOutput
	ToOutpostConfigResponsePtrOutputWithContext(context.Context) OutpostConfigResponsePtrOutput
}

type outpostConfigResponsePtrType OutpostConfigResponseArgs

func OutpostConfigResponsePtr(v *OutpostConfigResponseArgs) OutpostConfigResponsePtrInput {
	return (*outpostConfigResponsePtrType)(v)
}

func (*outpostConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutpostConfigResponse)(nil)).Elem()
}

func (i *outpostConfigResponsePtrType) ToOutpostConfigResponsePtrOutput() OutpostConfigResponsePtrOutput {
	return i.ToOutpostConfigResponsePtrOutputWithContext(context.Background())
}

func (i *outpostConfigResponsePtrType) ToOutpostConfigResponsePtrOutputWithContext(ctx context.Context) OutpostConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutpostConfigResponsePtrOutput)
}

// Definition of OutpostConfigResponse
type OutpostConfigResponseOutput struct{ *pulumi.OutputState }

func (OutpostConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutpostConfigResponse)(nil)).Elem()
}

func (o OutpostConfigResponseOutput) ToOutpostConfigResponseOutput() OutpostConfigResponseOutput {
	return o
}

func (o OutpostConfigResponseOutput) ToOutpostConfigResponseOutputWithContext(ctx context.Context) OutpostConfigResponseOutput {
	return o
}

func (o OutpostConfigResponseOutput) ToOutpostConfigResponsePtrOutput() OutpostConfigResponsePtrOutput {
	return o.ToOutpostConfigResponsePtrOutputWithContext(context.Background())
}

func (o OutpostConfigResponseOutput) ToOutpostConfigResponsePtrOutputWithContext(ctx context.Context) OutpostConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutpostConfigResponse) *OutpostConfigResponse {
		return &v
	}).(OutpostConfigResponsePtrOutput)
}

// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
func (o OutpostConfigResponseOutput) ControlPlaneInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutpostConfigResponse) *string { return v.ControlPlaneInstanceType }).(pulumi.StringPtrOutput)
}

// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
func (o OutpostConfigResponseOutput) ControlPlanePlacement() ControlPlanePlacementResponsePtrOutput {
	return o.ApplyT(func(v OutpostConfigResponse) *ControlPlanePlacementResponse { return v.ControlPlanePlacement }).(ControlPlanePlacementResponsePtrOutput)
}

// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
func (o OutpostConfigResponseOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OutpostConfigResponse) []string { return v.OutpostArns }).(pulumi.StringArrayOutput)
}

type OutpostConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (OutpostConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutpostConfigResponse)(nil)).Elem()
}

func (o OutpostConfigResponsePtrOutput) ToOutpostConfigResponsePtrOutput() OutpostConfigResponsePtrOutput {
	return o
}

func (o OutpostConfigResponsePtrOutput) ToOutpostConfigResponsePtrOutputWithContext(ctx context.Context) OutpostConfigResponsePtrOutput {
	return o
}

func (o OutpostConfigResponsePtrOutput) Elem() OutpostConfigResponseOutput {
	return o.ApplyT(func(v *OutpostConfigResponse) OutpostConfigResponse {
		if v != nil {
			return *v
		}
		var ret OutpostConfigResponse
		return ret
	}).(OutpostConfigResponseOutput)
}

// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
func (o OutpostConfigResponsePtrOutput) ControlPlaneInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutpostConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ControlPlaneInstanceType
	}).(pulumi.StringPtrOutput)
}

// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
func (o OutpostConfigResponsePtrOutput) ControlPlanePlacement() ControlPlanePlacementResponsePtrOutput {
	return o.ApplyT(func(v *OutpostConfigResponse) *ControlPlanePlacementResponse {
		if v == nil {
			return nil
		}
		return v.ControlPlanePlacement
	}).(ControlPlanePlacementResponsePtrOutput)
}

// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
func (o OutpostConfigResponsePtrOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OutpostConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.OutpostArns
	}).(pulumi.StringArrayOutput)
}

// Definition of OutpostConfigResponse
type OutpostConfigResponseResponse struct {
	// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
	ControlPlaneInstanceType *string `pulumi:"controlPlaneInstanceType"`
	// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
	ControlPlanePlacement *ControlPlanePlacementResponseResponse `pulumi:"controlPlanePlacement"`
	// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
	OutpostArns []string `pulumi:"outpostArns"`
}

// Definition of OutpostConfigResponse
type OutpostConfigResponseResponseOutput struct{ *pulumi.OutputState }

func (OutpostConfigResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutpostConfigResponseResponse)(nil)).Elem()
}

func (o OutpostConfigResponseResponseOutput) ToOutpostConfigResponseResponseOutput() OutpostConfigResponseResponseOutput {
	return o
}

func (o OutpostConfigResponseResponseOutput) ToOutpostConfigResponseResponseOutputWithContext(ctx context.Context) OutpostConfigResponseResponseOutput {
	return o
}

// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
func (o OutpostConfigResponseResponseOutput) ControlPlaneInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutpostConfigResponseResponse) *string { return v.ControlPlaneInstanceType }).(pulumi.StringPtrOutput)
}

// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
func (o OutpostConfigResponseResponseOutput) ControlPlanePlacement() ControlPlanePlacementResponseResponsePtrOutput {
	return o.ApplyT(func(v OutpostConfigResponseResponse) *ControlPlanePlacementResponseResponse {
		return v.ControlPlanePlacement
	}).(ControlPlanePlacementResponseResponsePtrOutput)
}

// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
func (o OutpostConfigResponseResponseOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OutpostConfigResponseResponse) []string { return v.OutpostArns }).(pulumi.StringArrayOutput)
}

type OutpostConfigResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (OutpostConfigResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutpostConfigResponseResponse)(nil)).Elem()
}

func (o OutpostConfigResponseResponsePtrOutput) ToOutpostConfigResponseResponsePtrOutput() OutpostConfigResponseResponsePtrOutput {
	return o
}

func (o OutpostConfigResponseResponsePtrOutput) ToOutpostConfigResponseResponsePtrOutputWithContext(ctx context.Context) OutpostConfigResponseResponsePtrOutput {
	return o
}

func (o OutpostConfigResponseResponsePtrOutput) Elem() OutpostConfigResponseResponseOutput {
	return o.ApplyT(func(v *OutpostConfigResponseResponse) OutpostConfigResponseResponse {
		if v != nil {
			return *v
		}
		var ret OutpostConfigResponseResponse
		return ret
	}).(OutpostConfigResponseResponseOutput)
}

// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
func (o OutpostConfigResponseResponsePtrOutput) ControlPlaneInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutpostConfigResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.ControlPlaneInstanceType
	}).(pulumi.StringPtrOutput)
}

// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
func (o OutpostConfigResponseResponsePtrOutput) ControlPlanePlacement() ControlPlanePlacementResponseResponsePtrOutput {
	return o.ApplyT(func(v *OutpostConfigResponseResponse) *ControlPlanePlacementResponseResponse {
		if v == nil {
			return nil
		}
		return v.ControlPlanePlacement
	}).(ControlPlanePlacementResponseResponsePtrOutput)
}

// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
func (o OutpostConfigResponseResponsePtrOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OutpostConfigResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.OutpostArns
	}).(pulumi.StringArrayOutput)
}

// Definition of Output
type Output struct {
	// Property description
	Description *string `pulumi:"description"`
	// Property exportName
	ExportName *string `pulumi:"exportName"`
	// Property outputKey
	OutputKey *string `pulumi:"outputKey"`
	// Property outputValue
	OutputValue *string `pulumi:"outputValue"`
}

// OutputInput is an input type that accepts OutputArgs and OutputOutput values.
// You can construct a concrete instance of `OutputInput` via:
//
//	OutputArgs{...}
type OutputInput interface {
	pulumi.Input

	ToOutputOutput() OutputOutput
	ToOutputOutputWithContext(context.Context) OutputOutput
}

// Definition of Output
type OutputArgs struct {
	// Property description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Property exportName
	ExportName pulumi.StringPtrInput `pulumi:"exportName"`
	// Property outputKey
	OutputKey pulumi.StringPtrInput `pulumi:"outputKey"`
	// Property outputValue
	OutputValue pulumi.StringPtrInput `pulumi:"outputValue"`
}

func (OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Output)(nil)).Elem()
}

func (i OutputArgs) ToOutputOutput() OutputOutput {
	return i.ToOutputOutputWithContext(context.Background())
}

func (i OutputArgs) ToOutputOutputWithContext(ctx context.Context) OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputOutput)
}

// OutputArrayInput is an input type that accepts OutputArray and OutputArrayOutput values.
// You can construct a concrete instance of `OutputArrayInput` via:
//
//	OutputArray{ OutputArgs{...} }
type OutputArrayInput interface {
	pulumi.Input

	ToOutputArrayOutput() OutputArrayOutput
	ToOutputArrayOutputWithContext(context.Context) OutputArrayOutput
}

type OutputArray []OutputInput

func (OutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Output)(nil)).Elem()
}

func (i OutputArray) ToOutputArrayOutput() OutputArrayOutput {
	return i.ToOutputArrayOutputWithContext(context.Background())
}

func (i OutputArray) ToOutputArrayOutputWithContext(ctx context.Context) OutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputArrayOutput)
}

// Definition of Output
type OutputOutput struct{ *pulumi.OutputState }

func (OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Output)(nil)).Elem()
}

func (o OutputOutput) ToOutputOutput() OutputOutput {
	return o
}

func (o OutputOutput) ToOutputOutputWithContext(ctx context.Context) OutputOutput {
	return o
}

// Property description
func (o OutputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Output) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Property exportName
func (o OutputOutput) ExportName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Output) *string { return v.ExportName }).(pulumi.StringPtrOutput)
}

// Property outputKey
func (o OutputOutput) OutputKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Output) *string { return v.OutputKey }).(pulumi.StringPtrOutput)
}

// Property outputValue
func (o OutputOutput) OutputValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Output) *string { return v.OutputValue }).(pulumi.StringPtrOutput)
}

type OutputArrayOutput struct{ *pulumi.OutputState }

func (OutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Output)(nil)).Elem()
}

func (o OutputArrayOutput) ToOutputArrayOutput() OutputArrayOutput {
	return o
}

func (o OutputArrayOutput) ToOutputArrayOutputWithContext(ctx context.Context) OutputArrayOutput {
	return o
}

func (o OutputArrayOutput) Index(i pulumi.IntInput) OutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Output {
		return vs[0].([]Output)[vs[1].(int)]
	}).(OutputOutput)
}

// Definition of Output
type OutputResponse struct {
	// Property description
	Description *string `pulumi:"description"`
	// Property exportName
	ExportName *string `pulumi:"exportName"`
	// Property outputKey
	OutputKey *string `pulumi:"outputKey"`
	// Property outputValue
	OutputValue *string `pulumi:"outputValue"`
}

// Definition of Output
type OutputResponseOutput struct{ *pulumi.OutputState }

func (OutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputResponse)(nil)).Elem()
}

func (o OutputResponseOutput) ToOutputResponseOutput() OutputResponseOutput {
	return o
}

func (o OutputResponseOutput) ToOutputResponseOutputWithContext(ctx context.Context) OutputResponseOutput {
	return o
}

// Property description
func (o OutputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Property exportName
func (o OutputResponseOutput) ExportName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.ExportName }).(pulumi.StringPtrOutput)
}

// Property outputKey
func (o OutputResponseOutput) OutputKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.OutputKey }).(pulumi.StringPtrOutput)
}

// Property outputValue
func (o OutputResponseOutput) OutputValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.OutputValue }).(pulumi.StringPtrOutput)
}

type OutputResponseArrayOutput struct{ *pulumi.OutputState }

func (OutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputResponse)(nil)).Elem()
}

func (o OutputResponseArrayOutput) ToOutputResponseArrayOutput() OutputResponseArrayOutput {
	return o
}

func (o OutputResponseArrayOutput) ToOutputResponseArrayOutputWithContext(ctx context.Context) OutputResponseArrayOutput {
	return o
}

func (o OutputResponseArrayOutput) Index(i pulumi.IntInput) OutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutputResponse {
		return vs[0].([]OutputResponse)[vs[1].(int)]
	}).(OutputResponseOutput)
}

// Definition of Owner
type Owner struct {
	// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
	DisplayName *string `pulumi:"displayName"`
	// <p>Container for the ID of the owner.</p>
	Id *string `pulumi:"id"`
}

// OwnerInput is an input type that accepts OwnerArgs and OwnerOutput values.
// You can construct a concrete instance of `OwnerInput` via:
//
//	OwnerArgs{...}
type OwnerInput interface {
	pulumi.Input

	ToOwnerOutput() OwnerOutput
	ToOwnerOutputWithContext(context.Context) OwnerOutput
}

// Definition of Owner
type OwnerArgs struct {
	// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// <p>Container for the ID of the owner.</p>
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (OwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Owner)(nil)).Elem()
}

func (i OwnerArgs) ToOwnerOutput() OwnerOutput {
	return i.ToOwnerOutputWithContext(context.Background())
}

func (i OwnerArgs) ToOwnerOutputWithContext(ctx context.Context) OwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnerOutput)
}

func (i OwnerArgs) ToOwnerPtrOutput() OwnerPtrOutput {
	return i.ToOwnerPtrOutputWithContext(context.Background())
}

func (i OwnerArgs) ToOwnerPtrOutputWithContext(ctx context.Context) OwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnerOutput).ToOwnerPtrOutputWithContext(ctx)
}

// OwnerPtrInput is an input type that accepts OwnerArgs, OwnerPtr and OwnerPtrOutput values.
// You can construct a concrete instance of `OwnerPtrInput` via:
//
//	        OwnerArgs{...}
//
//	or:
//
//	        nil
type OwnerPtrInput interface {
	pulumi.Input

	ToOwnerPtrOutput() OwnerPtrOutput
	ToOwnerPtrOutputWithContext(context.Context) OwnerPtrOutput
}

type ownerPtrType OwnerArgs

func OwnerPtr(v *OwnerArgs) OwnerPtrInput {
	return (*ownerPtrType)(v)
}

func (*ownerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Owner)(nil)).Elem()
}

func (i *ownerPtrType) ToOwnerPtrOutput() OwnerPtrOutput {
	return i.ToOwnerPtrOutputWithContext(context.Background())
}

func (i *ownerPtrType) ToOwnerPtrOutputWithContext(ctx context.Context) OwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnerPtrOutput)
}

// Definition of Owner
type OwnerOutput struct{ *pulumi.OutputState }

func (OwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Owner)(nil)).Elem()
}

func (o OwnerOutput) ToOwnerOutput() OwnerOutput {
	return o
}

func (o OwnerOutput) ToOwnerOutputWithContext(ctx context.Context) OwnerOutput {
	return o
}

func (o OwnerOutput) ToOwnerPtrOutput() OwnerPtrOutput {
	return o.ToOwnerPtrOutputWithContext(context.Background())
}

func (o OwnerOutput) ToOwnerPtrOutputWithContext(ctx context.Context) OwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Owner) *Owner {
		return &v
	}).(OwnerPtrOutput)
}

// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
func (o OwnerOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Owner) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// <p>Container for the ID of the owner.</p>
func (o OwnerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Owner) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type OwnerPtrOutput struct{ *pulumi.OutputState }

func (OwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Owner)(nil)).Elem()
}

func (o OwnerPtrOutput) ToOwnerPtrOutput() OwnerPtrOutput {
	return o
}

func (o OwnerPtrOutput) ToOwnerPtrOutputWithContext(ctx context.Context) OwnerPtrOutput {
	return o
}

func (o OwnerPtrOutput) Elem() OwnerOutput {
	return o.ApplyT(func(v *Owner) Owner {
		if v != nil {
			return *v
		}
		var ret Owner
		return ret
	}).(OwnerOutput)
}

// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
func (o OwnerPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Owner) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// <p>Container for the ID of the owner.</p>
func (o OwnerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Owner) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Definition of Owner
type OwnerResponse struct {
	// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
	DisplayName *string `pulumi:"displayName"`
	// <p>Container for the ID of the owner.</p>
	Id *string `pulumi:"id"`
}

// Definition of Owner
type OwnerResponseOutput struct{ *pulumi.OutputState }

func (OwnerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerResponse)(nil)).Elem()
}

func (o OwnerResponseOutput) ToOwnerResponseOutput() OwnerResponseOutput {
	return o
}

func (o OwnerResponseOutput) ToOwnerResponseOutputWithContext(ctx context.Context) OwnerResponseOutput {
	return o
}

// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
func (o OwnerResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OwnerResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// <p>Container for the ID of the owner.</p>
func (o OwnerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OwnerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type OwnerResponsePtrOutput struct{ *pulumi.OutputState }

func (OwnerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnerResponse)(nil)).Elem()
}

func (o OwnerResponsePtrOutput) ToOwnerResponsePtrOutput() OwnerResponsePtrOutput {
	return o
}

func (o OwnerResponsePtrOutput) ToOwnerResponsePtrOutputWithContext(ctx context.Context) OwnerResponsePtrOutput {
	return o
}

func (o OwnerResponsePtrOutput) Elem() OwnerResponseOutput {
	return o.ApplyT(func(v *OwnerResponse) OwnerResponse {
		if v != nil {
			return *v
		}
		var ret OwnerResponse
		return ret
	}).(OwnerResponseOutput)
}

// <p>Container for the display name of the owner. This value is only supported in the following Amazon Web Services Regions:</p> <ul> <li> <p>US East (N. Virginia)</p> </li> <li> <p>US West (N. California)</p> </li> <li> <p>US West (Oregon)</p> </li> <li> <p>Asia Pacific (Singapore)</p> </li> <li> <p>Asia Pacific (Sydney)</p> </li> <li> <p>Asia Pacific (Tokyo)</p> </li> <li> <p>Europe (Ireland)</p> </li> <li> <p>South America (São Paulo)</p> </li> </ul> <note> <p>This functionality is not supported for directory buckets.</p> </note>
func (o OwnerResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OwnerResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// <p>Container for the ID of the owner.</p>
func (o OwnerResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OwnerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Definition of OwnershipControls
type OwnershipControls struct {
	// Specifies the container element for Object Ownership rules.
	Rules []OwnershipControlsRule `pulumi:"rules"`
}

// OwnershipControlsInput is an input type that accepts OwnershipControlsArgs and OwnershipControlsOutput values.
// You can construct a concrete instance of `OwnershipControlsInput` via:
//
//	OwnershipControlsArgs{...}
type OwnershipControlsInput interface {
	pulumi.Input

	ToOwnershipControlsOutput() OwnershipControlsOutput
	ToOwnershipControlsOutputWithContext(context.Context) OwnershipControlsOutput
}

// Definition of OwnershipControls
type OwnershipControlsArgs struct {
	// Specifies the container element for Object Ownership rules.
	Rules OwnershipControlsRuleArrayInput `pulumi:"rules"`
}

func (OwnershipControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnershipControls)(nil)).Elem()
}

func (i OwnershipControlsArgs) ToOwnershipControlsOutput() OwnershipControlsOutput {
	return i.ToOwnershipControlsOutputWithContext(context.Background())
}

func (i OwnershipControlsArgs) ToOwnershipControlsOutputWithContext(ctx context.Context) OwnershipControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnershipControlsOutput)
}

func (i OwnershipControlsArgs) ToOwnershipControlsPtrOutput() OwnershipControlsPtrOutput {
	return i.ToOwnershipControlsPtrOutputWithContext(context.Background())
}

func (i OwnershipControlsArgs) ToOwnershipControlsPtrOutputWithContext(ctx context.Context) OwnershipControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnershipControlsOutput).ToOwnershipControlsPtrOutputWithContext(ctx)
}

// OwnershipControlsPtrInput is an input type that accepts OwnershipControlsArgs, OwnershipControlsPtr and OwnershipControlsPtrOutput values.
// You can construct a concrete instance of `OwnershipControlsPtrInput` via:
//
//	        OwnershipControlsArgs{...}
//
//	or:
//
//	        nil
type OwnershipControlsPtrInput interface {
	pulumi.Input

	ToOwnershipControlsPtrOutput() OwnershipControlsPtrOutput
	ToOwnershipControlsPtrOutputWithContext(context.Context) OwnershipControlsPtrOutput
}

type ownershipControlsPtrType OwnershipControlsArgs

func OwnershipControlsPtr(v *OwnershipControlsArgs) OwnershipControlsPtrInput {
	return (*ownershipControlsPtrType)(v)
}

func (*ownershipControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnershipControls)(nil)).Elem()
}

func (i *ownershipControlsPtrType) ToOwnershipControlsPtrOutput() OwnershipControlsPtrOutput {
	return i.ToOwnershipControlsPtrOutputWithContext(context.Background())
}

func (i *ownershipControlsPtrType) ToOwnershipControlsPtrOutputWithContext(ctx context.Context) OwnershipControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnershipControlsPtrOutput)
}

// Definition of OwnershipControls
type OwnershipControlsOutput struct{ *pulumi.OutputState }

func (OwnershipControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnershipControls)(nil)).Elem()
}

func (o OwnershipControlsOutput) ToOwnershipControlsOutput() OwnershipControlsOutput {
	return o
}

func (o OwnershipControlsOutput) ToOwnershipControlsOutputWithContext(ctx context.Context) OwnershipControlsOutput {
	return o
}

func (o OwnershipControlsOutput) ToOwnershipControlsPtrOutput() OwnershipControlsPtrOutput {
	return o.ToOwnershipControlsPtrOutputWithContext(context.Background())
}

func (o OwnershipControlsOutput) ToOwnershipControlsPtrOutputWithContext(ctx context.Context) OwnershipControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OwnershipControls) *OwnershipControls {
		return &v
	}).(OwnershipControlsPtrOutput)
}

// Specifies the container element for Object Ownership rules.
func (o OwnershipControlsOutput) Rules() OwnershipControlsRuleArrayOutput {
	return o.ApplyT(func(v OwnershipControls) []OwnershipControlsRule { return v.Rules }).(OwnershipControlsRuleArrayOutput)
}

type OwnershipControlsPtrOutput struct{ *pulumi.OutputState }

func (OwnershipControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnershipControls)(nil)).Elem()
}

func (o OwnershipControlsPtrOutput) ToOwnershipControlsPtrOutput() OwnershipControlsPtrOutput {
	return o
}

func (o OwnershipControlsPtrOutput) ToOwnershipControlsPtrOutputWithContext(ctx context.Context) OwnershipControlsPtrOutput {
	return o
}

func (o OwnershipControlsPtrOutput) Elem() OwnershipControlsOutput {
	return o.ApplyT(func(v *OwnershipControls) OwnershipControls {
		if v != nil {
			return *v
		}
		var ret OwnershipControls
		return ret
	}).(OwnershipControlsOutput)
}

// Specifies the container element for Object Ownership rules.
func (o OwnershipControlsPtrOutput) Rules() OwnershipControlsRuleArrayOutput {
	return o.ApplyT(func(v *OwnershipControls) []OwnershipControlsRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(OwnershipControlsRuleArrayOutput)
}

// Definition of OwnershipControls
type OwnershipControlsResponse struct {
	// Specifies the container element for Object Ownership rules.
	Rules []OwnershipControlsRuleResponse `pulumi:"rules"`
}

// Definition of OwnershipControls
type OwnershipControlsResponseOutput struct{ *pulumi.OutputState }

func (OwnershipControlsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnershipControlsResponse)(nil)).Elem()
}

func (o OwnershipControlsResponseOutput) ToOwnershipControlsResponseOutput() OwnershipControlsResponseOutput {
	return o
}

func (o OwnershipControlsResponseOutput) ToOwnershipControlsResponseOutputWithContext(ctx context.Context) OwnershipControlsResponseOutput {
	return o
}

// Specifies the container element for Object Ownership rules.
func (o OwnershipControlsResponseOutput) Rules() OwnershipControlsRuleResponseArrayOutput {
	return o.ApplyT(func(v OwnershipControlsResponse) []OwnershipControlsRuleResponse { return v.Rules }).(OwnershipControlsRuleResponseArrayOutput)
}

type OwnershipControlsResponsePtrOutput struct{ *pulumi.OutputState }

func (OwnershipControlsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnershipControlsResponse)(nil)).Elem()
}

func (o OwnershipControlsResponsePtrOutput) ToOwnershipControlsResponsePtrOutput() OwnershipControlsResponsePtrOutput {
	return o
}

func (o OwnershipControlsResponsePtrOutput) ToOwnershipControlsResponsePtrOutputWithContext(ctx context.Context) OwnershipControlsResponsePtrOutput {
	return o
}

func (o OwnershipControlsResponsePtrOutput) Elem() OwnershipControlsResponseOutput {
	return o.ApplyT(func(v *OwnershipControlsResponse) OwnershipControlsResponse {
		if v != nil {
			return *v
		}
		var ret OwnershipControlsResponse
		return ret
	}).(OwnershipControlsResponseOutput)
}

// Specifies the container element for Object Ownership rules.
func (o OwnershipControlsResponsePtrOutput) Rules() OwnershipControlsRuleResponseArrayOutput {
	return o.ApplyT(func(v *OwnershipControlsResponse) []OwnershipControlsRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(OwnershipControlsRuleResponseArrayOutput)
}

// Definition of OwnershipControlsRule
type OwnershipControlsRule struct {
	// Specifies an object ownership rule.
	ObjectOwnership *string `pulumi:"objectOwnership"`
}

// OwnershipControlsRuleInput is an input type that accepts OwnershipControlsRuleArgs and OwnershipControlsRuleOutput values.
// You can construct a concrete instance of `OwnershipControlsRuleInput` via:
//
//	OwnershipControlsRuleArgs{...}
type OwnershipControlsRuleInput interface {
	pulumi.Input

	ToOwnershipControlsRuleOutput() OwnershipControlsRuleOutput
	ToOwnershipControlsRuleOutputWithContext(context.Context) OwnershipControlsRuleOutput
}

// Definition of OwnershipControlsRule
type OwnershipControlsRuleArgs struct {
	// Specifies an object ownership rule.
	ObjectOwnership pulumi.StringPtrInput `pulumi:"objectOwnership"`
}

func (OwnershipControlsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnershipControlsRule)(nil)).Elem()
}

func (i OwnershipControlsRuleArgs) ToOwnershipControlsRuleOutput() OwnershipControlsRuleOutput {
	return i.ToOwnershipControlsRuleOutputWithContext(context.Background())
}

func (i OwnershipControlsRuleArgs) ToOwnershipControlsRuleOutputWithContext(ctx context.Context) OwnershipControlsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnershipControlsRuleOutput)
}

// OwnershipControlsRuleArrayInput is an input type that accepts OwnershipControlsRuleArray and OwnershipControlsRuleArrayOutput values.
// You can construct a concrete instance of `OwnershipControlsRuleArrayInput` via:
//
//	OwnershipControlsRuleArray{ OwnershipControlsRuleArgs{...} }
type OwnershipControlsRuleArrayInput interface {
	pulumi.Input

	ToOwnershipControlsRuleArrayOutput() OwnershipControlsRuleArrayOutput
	ToOwnershipControlsRuleArrayOutputWithContext(context.Context) OwnershipControlsRuleArrayOutput
}

type OwnershipControlsRuleArray []OwnershipControlsRuleInput

func (OwnershipControlsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwnershipControlsRule)(nil)).Elem()
}

func (i OwnershipControlsRuleArray) ToOwnershipControlsRuleArrayOutput() OwnershipControlsRuleArrayOutput {
	return i.ToOwnershipControlsRuleArrayOutputWithContext(context.Background())
}

func (i OwnershipControlsRuleArray) ToOwnershipControlsRuleArrayOutputWithContext(ctx context.Context) OwnershipControlsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwnershipControlsRuleArrayOutput)
}

// Definition of OwnershipControlsRule
type OwnershipControlsRuleOutput struct{ *pulumi.OutputState }

func (OwnershipControlsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnershipControlsRule)(nil)).Elem()
}

func (o OwnershipControlsRuleOutput) ToOwnershipControlsRuleOutput() OwnershipControlsRuleOutput {
	return o
}

func (o OwnershipControlsRuleOutput) ToOwnershipControlsRuleOutputWithContext(ctx context.Context) OwnershipControlsRuleOutput {
	return o
}

// Specifies an object ownership rule.
func (o OwnershipControlsRuleOutput) ObjectOwnership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OwnershipControlsRule) *string { return v.ObjectOwnership }).(pulumi.StringPtrOutput)
}

type OwnershipControlsRuleArrayOutput struct{ *pulumi.OutputState }

func (OwnershipControlsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwnershipControlsRule)(nil)).Elem()
}

func (o OwnershipControlsRuleArrayOutput) ToOwnershipControlsRuleArrayOutput() OwnershipControlsRuleArrayOutput {
	return o
}

func (o OwnershipControlsRuleArrayOutput) ToOwnershipControlsRuleArrayOutputWithContext(ctx context.Context) OwnershipControlsRuleArrayOutput {
	return o
}

func (o OwnershipControlsRuleArrayOutput) Index(i pulumi.IntInput) OwnershipControlsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OwnershipControlsRule {
		return vs[0].([]OwnershipControlsRule)[vs[1].(int)]
	}).(OwnershipControlsRuleOutput)
}

// Definition of OwnershipControlsRule
type OwnershipControlsRuleResponse struct {
	// Specifies an object ownership rule.
	ObjectOwnership *string `pulumi:"objectOwnership"`
}

// Definition of OwnershipControlsRule
type OwnershipControlsRuleResponseOutput struct{ *pulumi.OutputState }

func (OwnershipControlsRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnershipControlsRuleResponse)(nil)).Elem()
}

func (o OwnershipControlsRuleResponseOutput) ToOwnershipControlsRuleResponseOutput() OwnershipControlsRuleResponseOutput {
	return o
}

func (o OwnershipControlsRuleResponseOutput) ToOwnershipControlsRuleResponseOutputWithContext(ctx context.Context) OwnershipControlsRuleResponseOutput {
	return o
}

// Specifies an object ownership rule.
func (o OwnershipControlsRuleResponseOutput) ObjectOwnership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OwnershipControlsRuleResponse) *string { return v.ObjectOwnership }).(pulumi.StringPtrOutput)
}

type OwnershipControlsRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (OwnershipControlsRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwnershipControlsRuleResponse)(nil)).Elem()
}

func (o OwnershipControlsRuleResponseArrayOutput) ToOwnershipControlsRuleResponseArrayOutput() OwnershipControlsRuleResponseArrayOutput {
	return o
}

func (o OwnershipControlsRuleResponseArrayOutput) ToOwnershipControlsRuleResponseArrayOutputWithContext(ctx context.Context) OwnershipControlsRuleResponseArrayOutput {
	return o
}

func (o OwnershipControlsRuleResponseArrayOutput) Index(i pulumi.IntInput) OwnershipControlsRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OwnershipControlsRuleResponse {
		return vs[0].([]OwnershipControlsRuleResponse)[vs[1].(int)]
	}).(OwnershipControlsRuleResponseOutput)
}

// Definition of Parameter
type Parameter struct {
	// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
	ParameterKey *string `pulumi:"parameterKey"`
	// The name of the parameter.
	ParameterName *string `pulumi:"parameterName"`
	// The value of the parameter. If `ParameterName` is `wlm_json_configuration`, then the maximum size of `ParameterValue` is 8000 characters.
	ParameterValue *string `pulumi:"parameterValue"`
}

// ParameterInput is an input type that accepts ParameterArgs and ParameterOutput values.
// You can construct a concrete instance of `ParameterInput` via:
//
//	ParameterArgs{...}
type ParameterInput interface {
	pulumi.Input

	ToParameterOutput() ParameterOutput
	ToParameterOutputWithContext(context.Context) ParameterOutput
}

// Definition of Parameter
type ParameterArgs struct {
	// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
	ParameterKey pulumi.StringPtrInput `pulumi:"parameterKey"`
	// The name of the parameter.
	ParameterName pulumi.StringPtrInput `pulumi:"parameterName"`
	// The value of the parameter. If `ParameterName` is `wlm_json_configuration`, then the maximum size of `ParameterValue` is 8000 characters.
	ParameterValue pulumi.StringPtrInput `pulumi:"parameterValue"`
}

func (ParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Parameter)(nil)).Elem()
}

func (i ParameterArgs) ToParameterOutput() ParameterOutput {
	return i.ToParameterOutputWithContext(context.Background())
}

func (i ParameterArgs) ToParameterOutputWithContext(ctx context.Context) ParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterOutput)
}

// ParameterArrayInput is an input type that accepts ParameterArray and ParameterArrayOutput values.
// You can construct a concrete instance of `ParameterArrayInput` via:
//
//	ParameterArray{ ParameterArgs{...} }
type ParameterArrayInput interface {
	pulumi.Input

	ToParameterArrayOutput() ParameterArrayOutput
	ToParameterArrayOutputWithContext(context.Context) ParameterArrayOutput
}

type ParameterArray []ParameterInput

func (ParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Parameter)(nil)).Elem()
}

func (i ParameterArray) ToParameterArrayOutput() ParameterArrayOutput {
	return i.ToParameterArrayOutputWithContext(context.Background())
}

func (i ParameterArray) ToParameterArrayOutputWithContext(ctx context.Context) ParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterArrayOutput)
}

// Definition of Parameter
type ParameterOutput struct{ *pulumi.OutputState }

func (ParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Parameter)(nil)).Elem()
}

func (o ParameterOutput) ToParameterOutput() ParameterOutput {
	return o
}

func (o ParameterOutput) ToParameterOutputWithContext(ctx context.Context) ParameterOutput {
	return o
}

// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
func (o ParameterOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Parameter) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The name of the parameter.
func (o ParameterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Parameter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

// The value of the parameter. If `ParameterName` is `wlm_json_configuration`, then the maximum size of `ParameterValue` is 8000 characters.
func (o ParameterOutput) ParameterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Parameter) *string { return v.ParameterValue }).(pulumi.StringPtrOutput)
}

type ParameterArrayOutput struct{ *pulumi.OutputState }

func (ParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Parameter)(nil)).Elem()
}

func (o ParameterArrayOutput) ToParameterArrayOutput() ParameterArrayOutput {
	return o
}

func (o ParameterArrayOutput) ToParameterArrayOutputWithContext(ctx context.Context) ParameterArrayOutput {
	return o
}

func (o ParameterArrayOutput) Index(i pulumi.IntInput) ParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Parameter {
		return vs[0].([]Parameter)[vs[1].(int)]
	}).(ParameterOutput)
}

// Definition of ParameterGroupStatus
type ParameterGroupStatus struct {
	// <p>The node IDs of one or more nodes to be rebooted.</p>
	NodeIdsToReboot []string `pulumi:"nodeIdsToReboot"`
	// <p>The status of parameter updates. </p>
	ParameterApplyStatus *string `pulumi:"parameterApplyStatus"`
	// <p>The name of the parameter group.</p>
	ParameterGroupName *string `pulumi:"parameterGroupName"`
}

// ParameterGroupStatusInput is an input type that accepts ParameterGroupStatusArgs and ParameterGroupStatusOutput values.
// You can construct a concrete instance of `ParameterGroupStatusInput` via:
//
//	ParameterGroupStatusArgs{...}
type ParameterGroupStatusInput interface {
	pulumi.Input

	ToParameterGroupStatusOutput() ParameterGroupStatusOutput
	ToParameterGroupStatusOutputWithContext(context.Context) ParameterGroupStatusOutput
}

// Definition of ParameterGroupStatus
type ParameterGroupStatusArgs struct {
	// <p>The node IDs of one or more nodes to be rebooted.</p>
	NodeIdsToReboot pulumi.StringArrayInput `pulumi:"nodeIdsToReboot"`
	// <p>The status of parameter updates. </p>
	ParameterApplyStatus pulumi.StringPtrInput `pulumi:"parameterApplyStatus"`
	// <p>The name of the parameter group.</p>
	ParameterGroupName pulumi.StringPtrInput `pulumi:"parameterGroupName"`
}

func (ParameterGroupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupStatus)(nil)).Elem()
}

func (i ParameterGroupStatusArgs) ToParameterGroupStatusOutput() ParameterGroupStatusOutput {
	return i.ToParameterGroupStatusOutputWithContext(context.Background())
}

func (i ParameterGroupStatusArgs) ToParameterGroupStatusOutputWithContext(ctx context.Context) ParameterGroupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupStatusOutput)
}

func (i ParameterGroupStatusArgs) ToParameterGroupStatusPtrOutput() ParameterGroupStatusPtrOutput {
	return i.ToParameterGroupStatusPtrOutputWithContext(context.Background())
}

func (i ParameterGroupStatusArgs) ToParameterGroupStatusPtrOutputWithContext(ctx context.Context) ParameterGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupStatusOutput).ToParameterGroupStatusPtrOutputWithContext(ctx)
}

// ParameterGroupStatusPtrInput is an input type that accepts ParameterGroupStatusArgs, ParameterGroupStatusPtr and ParameterGroupStatusPtrOutput values.
// You can construct a concrete instance of `ParameterGroupStatusPtrInput` via:
//
//	        ParameterGroupStatusArgs{...}
//
//	or:
//
//	        nil
type ParameterGroupStatusPtrInput interface {
	pulumi.Input

	ToParameterGroupStatusPtrOutput() ParameterGroupStatusPtrOutput
	ToParameterGroupStatusPtrOutputWithContext(context.Context) ParameterGroupStatusPtrOutput
}

type parameterGroupStatusPtrType ParameterGroupStatusArgs

func ParameterGroupStatusPtr(v *ParameterGroupStatusArgs) ParameterGroupStatusPtrInput {
	return (*parameterGroupStatusPtrType)(v)
}

func (*parameterGroupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterGroupStatus)(nil)).Elem()
}

func (i *parameterGroupStatusPtrType) ToParameterGroupStatusPtrOutput() ParameterGroupStatusPtrOutput {
	return i.ToParameterGroupStatusPtrOutputWithContext(context.Background())
}

func (i *parameterGroupStatusPtrType) ToParameterGroupStatusPtrOutputWithContext(ctx context.Context) ParameterGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupStatusPtrOutput)
}

// Definition of ParameterGroupStatus
type ParameterGroupStatusOutput struct{ *pulumi.OutputState }

func (ParameterGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupStatus)(nil)).Elem()
}

func (o ParameterGroupStatusOutput) ToParameterGroupStatusOutput() ParameterGroupStatusOutput {
	return o
}

func (o ParameterGroupStatusOutput) ToParameterGroupStatusOutputWithContext(ctx context.Context) ParameterGroupStatusOutput {
	return o
}

func (o ParameterGroupStatusOutput) ToParameterGroupStatusPtrOutput() ParameterGroupStatusPtrOutput {
	return o.ToParameterGroupStatusPtrOutputWithContext(context.Background())
}

func (o ParameterGroupStatusOutput) ToParameterGroupStatusPtrOutputWithContext(ctx context.Context) ParameterGroupStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParameterGroupStatus) *ParameterGroupStatus {
		return &v
	}).(ParameterGroupStatusPtrOutput)
}

// <p>The node IDs of one or more nodes to be rebooted.</p>
func (o ParameterGroupStatusOutput) NodeIdsToReboot() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterGroupStatus) []string { return v.NodeIdsToReboot }).(pulumi.StringArrayOutput)
}

// <p>The status of parameter updates. </p>
func (o ParameterGroupStatusOutput) ParameterApplyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupStatus) *string { return v.ParameterApplyStatus }).(pulumi.StringPtrOutput)
}

// <p>The name of the parameter group.</p>
func (o ParameterGroupStatusOutput) ParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupStatus) *string { return v.ParameterGroupName }).(pulumi.StringPtrOutput)
}

type ParameterGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (ParameterGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterGroupStatus)(nil)).Elem()
}

func (o ParameterGroupStatusPtrOutput) ToParameterGroupStatusPtrOutput() ParameterGroupStatusPtrOutput {
	return o
}

func (o ParameterGroupStatusPtrOutput) ToParameterGroupStatusPtrOutputWithContext(ctx context.Context) ParameterGroupStatusPtrOutput {
	return o
}

func (o ParameterGroupStatusPtrOutput) Elem() ParameterGroupStatusOutput {
	return o.ApplyT(func(v *ParameterGroupStatus) ParameterGroupStatus {
		if v != nil {
			return *v
		}
		var ret ParameterGroupStatus
		return ret
	}).(ParameterGroupStatusOutput)
}

// <p>The node IDs of one or more nodes to be rebooted.</p>
func (o ParameterGroupStatusPtrOutput) NodeIdsToReboot() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ParameterGroupStatus) []string {
		if v == nil {
			return nil
		}
		return v.NodeIdsToReboot
	}).(pulumi.StringArrayOutput)
}

// <p>The status of parameter updates. </p>
func (o ParameterGroupStatusPtrOutput) ParameterApplyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.ParameterApplyStatus
	}).(pulumi.StringPtrOutput)
}

// <p>The name of the parameter group.</p>
func (o ParameterGroupStatusPtrOutput) ParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.ParameterGroupName
	}).(pulumi.StringPtrOutput)
}

// Definition of ParameterGroupStatus
type ParameterGroupStatusResponse struct {
	// <p>The node IDs of one or more nodes to be rebooted.</p>
	NodeIdsToReboot []string `pulumi:"nodeIdsToReboot"`
	// <p>The status of parameter updates. </p>
	ParameterApplyStatus *string `pulumi:"parameterApplyStatus"`
	// <p>The name of the parameter group.</p>
	ParameterGroupName *string `pulumi:"parameterGroupName"`
}

// Definition of ParameterGroupStatus
type ParameterGroupStatusResponseOutput struct{ *pulumi.OutputState }

func (ParameterGroupStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupStatusResponse)(nil)).Elem()
}

func (o ParameterGroupStatusResponseOutput) ToParameterGroupStatusResponseOutput() ParameterGroupStatusResponseOutput {
	return o
}

func (o ParameterGroupStatusResponseOutput) ToParameterGroupStatusResponseOutputWithContext(ctx context.Context) ParameterGroupStatusResponseOutput {
	return o
}

// <p>The node IDs of one or more nodes to be rebooted.</p>
func (o ParameterGroupStatusResponseOutput) NodeIdsToReboot() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterGroupStatusResponse) []string { return v.NodeIdsToReboot }).(pulumi.StringArrayOutput)
}

// <p>The status of parameter updates. </p>
func (o ParameterGroupStatusResponseOutput) ParameterApplyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupStatusResponse) *string { return v.ParameterApplyStatus }).(pulumi.StringPtrOutput)
}

// <p>The name of the parameter group.</p>
func (o ParameterGroupStatusResponseOutput) ParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupStatusResponse) *string { return v.ParameterGroupName }).(pulumi.StringPtrOutput)
}

type ParameterGroupStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ParameterGroupStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterGroupStatusResponse)(nil)).Elem()
}

func (o ParameterGroupStatusResponsePtrOutput) ToParameterGroupStatusResponsePtrOutput() ParameterGroupStatusResponsePtrOutput {
	return o
}

func (o ParameterGroupStatusResponsePtrOutput) ToParameterGroupStatusResponsePtrOutputWithContext(ctx context.Context) ParameterGroupStatusResponsePtrOutput {
	return o
}

func (o ParameterGroupStatusResponsePtrOutput) Elem() ParameterGroupStatusResponseOutput {
	return o.ApplyT(func(v *ParameterGroupStatusResponse) ParameterGroupStatusResponse {
		if v != nil {
			return *v
		}
		var ret ParameterGroupStatusResponse
		return ret
	}).(ParameterGroupStatusResponseOutput)
}

// <p>The node IDs of one or more nodes to be rebooted.</p>
func (o ParameterGroupStatusResponsePtrOutput) NodeIdsToReboot() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ParameterGroupStatusResponse) []string {
		if v == nil {
			return nil
		}
		return v.NodeIdsToReboot
	}).(pulumi.StringArrayOutput)
}

// <p>The status of parameter updates. </p>
func (o ParameterGroupStatusResponsePtrOutput) ParameterApplyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterGroupStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParameterApplyStatus
	}).(pulumi.StringPtrOutput)
}

// <p>The name of the parameter group.</p>
func (o ParameterGroupStatusResponsePtrOutput) ParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterGroupStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParameterGroupName
	}).(pulumi.StringPtrOutput)
}

// Definition of Parameter
type ParameterResponse struct {
	// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
	ParameterKey *string `pulumi:"parameterKey"`
	// The name of the parameter.
	ParameterName *string `pulumi:"parameterName"`
	// The value of the parameter. If `ParameterName` is `wlm_json_configuration`, then the maximum size of `ParameterValue` is 8000 characters.
	ParameterValue *string `pulumi:"parameterValue"`
}

// Definition of Parameter
type ParameterResponseOutput struct{ *pulumi.OutputState }

func (ParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterResponse)(nil)).Elem()
}

func (o ParameterResponseOutput) ToParameterResponseOutput() ParameterResponseOutput {
	return o
}

func (o ParameterResponseOutput) ToParameterResponseOutputWithContext(ctx context.Context) ParameterResponseOutput {
	return o
}

// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
func (o ParameterResponseOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterResponse) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The name of the parameter.
func (o ParameterResponseOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterResponse) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

// The value of the parameter. If `ParameterName` is `wlm_json_configuration`, then the maximum size of `ParameterValue` is 8000 characters.
func (o ParameterResponseOutput) ParameterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterResponse) *string { return v.ParameterValue }).(pulumi.StringPtrOutput)
}

type ParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterResponse)(nil)).Elem()
}

func (o ParameterResponseArrayOutput) ToParameterResponseArrayOutput() ParameterResponseArrayOutput {
	return o
}

func (o ParameterResponseArrayOutput) ToParameterResponseArrayOutputWithContext(ctx context.Context) ParameterResponseArrayOutput {
	return o
}

func (o ParameterResponseArrayOutput) Index(i pulumi.IntInput) ParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterResponse {
		return vs[0].([]ParameterResponse)[vs[1].(int)]
	}).(ParameterResponseOutput)
}

// Definition of PartitionedPrefix
type PartitionedPrefix struct {
	// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
	PartitionDateSource *string `pulumi:"partitionDateSource"`
}

// PartitionedPrefixInput is an input type that accepts PartitionedPrefixArgs and PartitionedPrefixOutput values.
// You can construct a concrete instance of `PartitionedPrefixInput` via:
//
//	PartitionedPrefixArgs{...}
type PartitionedPrefixInput interface {
	pulumi.Input

	ToPartitionedPrefixOutput() PartitionedPrefixOutput
	ToPartitionedPrefixOutputWithContext(context.Context) PartitionedPrefixOutput
}

// Definition of PartitionedPrefix
type PartitionedPrefixArgs struct {
	// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
	PartitionDateSource pulumi.StringPtrInput `pulumi:"partitionDateSource"`
}

func (PartitionedPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionedPrefix)(nil)).Elem()
}

func (i PartitionedPrefixArgs) ToPartitionedPrefixOutput() PartitionedPrefixOutput {
	return i.ToPartitionedPrefixOutputWithContext(context.Background())
}

func (i PartitionedPrefixArgs) ToPartitionedPrefixOutputWithContext(ctx context.Context) PartitionedPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionedPrefixOutput)
}

func (i PartitionedPrefixArgs) ToPartitionedPrefixPtrOutput() PartitionedPrefixPtrOutput {
	return i.ToPartitionedPrefixPtrOutputWithContext(context.Background())
}

func (i PartitionedPrefixArgs) ToPartitionedPrefixPtrOutputWithContext(ctx context.Context) PartitionedPrefixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionedPrefixOutput).ToPartitionedPrefixPtrOutputWithContext(ctx)
}

// PartitionedPrefixPtrInput is an input type that accepts PartitionedPrefixArgs, PartitionedPrefixPtr and PartitionedPrefixPtrOutput values.
// You can construct a concrete instance of `PartitionedPrefixPtrInput` via:
//
//	        PartitionedPrefixArgs{...}
//
//	or:
//
//	        nil
type PartitionedPrefixPtrInput interface {
	pulumi.Input

	ToPartitionedPrefixPtrOutput() PartitionedPrefixPtrOutput
	ToPartitionedPrefixPtrOutputWithContext(context.Context) PartitionedPrefixPtrOutput
}

type partitionedPrefixPtrType PartitionedPrefixArgs

func PartitionedPrefixPtr(v *PartitionedPrefixArgs) PartitionedPrefixPtrInput {
	return (*partitionedPrefixPtrType)(v)
}

func (*partitionedPrefixPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PartitionedPrefix)(nil)).Elem()
}

func (i *partitionedPrefixPtrType) ToPartitionedPrefixPtrOutput() PartitionedPrefixPtrOutput {
	return i.ToPartitionedPrefixPtrOutputWithContext(context.Background())
}

func (i *partitionedPrefixPtrType) ToPartitionedPrefixPtrOutputWithContext(ctx context.Context) PartitionedPrefixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionedPrefixPtrOutput)
}

// Definition of PartitionedPrefix
type PartitionedPrefixOutput struct{ *pulumi.OutputState }

func (PartitionedPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionedPrefix)(nil)).Elem()
}

func (o PartitionedPrefixOutput) ToPartitionedPrefixOutput() PartitionedPrefixOutput {
	return o
}

func (o PartitionedPrefixOutput) ToPartitionedPrefixOutputWithContext(ctx context.Context) PartitionedPrefixOutput {
	return o
}

func (o PartitionedPrefixOutput) ToPartitionedPrefixPtrOutput() PartitionedPrefixPtrOutput {
	return o.ToPartitionedPrefixPtrOutputWithContext(context.Background())
}

func (o PartitionedPrefixOutput) ToPartitionedPrefixPtrOutputWithContext(ctx context.Context) PartitionedPrefixPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartitionedPrefix) *PartitionedPrefix {
		return &v
	}).(PartitionedPrefixPtrOutput)
}

// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
func (o PartitionedPrefixOutput) PartitionDateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PartitionedPrefix) *string { return v.PartitionDateSource }).(pulumi.StringPtrOutput)
}

type PartitionedPrefixPtrOutput struct{ *pulumi.OutputState }

func (PartitionedPrefixPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartitionedPrefix)(nil)).Elem()
}

func (o PartitionedPrefixPtrOutput) ToPartitionedPrefixPtrOutput() PartitionedPrefixPtrOutput {
	return o
}

func (o PartitionedPrefixPtrOutput) ToPartitionedPrefixPtrOutputWithContext(ctx context.Context) PartitionedPrefixPtrOutput {
	return o
}

func (o PartitionedPrefixPtrOutput) Elem() PartitionedPrefixOutput {
	return o.ApplyT(func(v *PartitionedPrefix) PartitionedPrefix {
		if v != nil {
			return *v
		}
		var ret PartitionedPrefix
		return ret
	}).(PartitionedPrefixOutput)
}

// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
func (o PartitionedPrefixPtrOutput) PartitionDateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PartitionedPrefix) *string {
		if v == nil {
			return nil
		}
		return v.PartitionDateSource
	}).(pulumi.StringPtrOutput)
}

// Definition of PartitionedPrefix
type PartitionedPrefixResponse struct {
	// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
	PartitionDateSource *string `pulumi:"partitionDateSource"`
}

// Definition of PartitionedPrefix
type PartitionedPrefixResponseOutput struct{ *pulumi.OutputState }

func (PartitionedPrefixResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionedPrefixResponse)(nil)).Elem()
}

func (o PartitionedPrefixResponseOutput) ToPartitionedPrefixResponseOutput() PartitionedPrefixResponseOutput {
	return o
}

func (o PartitionedPrefixResponseOutput) ToPartitionedPrefixResponseOutputWithContext(ctx context.Context) PartitionedPrefixResponseOutput {
	return o
}

// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
func (o PartitionedPrefixResponseOutput) PartitionDateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PartitionedPrefixResponse) *string { return v.PartitionDateSource }).(pulumi.StringPtrOutput)
}

type PartitionedPrefixResponsePtrOutput struct{ *pulumi.OutputState }

func (PartitionedPrefixResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartitionedPrefixResponse)(nil)).Elem()
}

func (o PartitionedPrefixResponsePtrOutput) ToPartitionedPrefixResponsePtrOutput() PartitionedPrefixResponsePtrOutput {
	return o
}

func (o PartitionedPrefixResponsePtrOutput) ToPartitionedPrefixResponsePtrOutputWithContext(ctx context.Context) PartitionedPrefixResponsePtrOutput {
	return o
}

func (o PartitionedPrefixResponsePtrOutput) Elem() PartitionedPrefixResponseOutput {
	return o.ApplyT(func(v *PartitionedPrefixResponse) PartitionedPrefixResponse {
		if v != nil {
			return *v
		}
		var ret PartitionedPrefixResponse
		return ret
	}).(PartitionedPrefixResponseOutput)
}

// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
func (o PartitionedPrefixResponsePtrOutput) PartitionDateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PartitionedPrefixResponse) *string {
		if v == nil {
			return nil
		}
		return v.PartitionDateSource
	}).(pulumi.StringPtrOutput)
}

// Definition of PermissionEnumValue
type PermissionEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PermissionEnumValueInput is an input type that accepts PermissionEnumValueArgs and PermissionEnumValueOutput values.
// You can construct a concrete instance of `PermissionEnumValueInput` via:
//
//	PermissionEnumValueArgs{...}
type PermissionEnumValueInput interface {
	pulumi.Input

	ToPermissionEnumValueOutput() PermissionEnumValueOutput
	ToPermissionEnumValueOutputWithContext(context.Context) PermissionEnumValueOutput
}

// Definition of PermissionEnumValue
type PermissionEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PermissionEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionEnumValue)(nil)).Elem()
}

func (i PermissionEnumValueArgs) ToPermissionEnumValueOutput() PermissionEnumValueOutput {
	return i.ToPermissionEnumValueOutputWithContext(context.Background())
}

func (i PermissionEnumValueArgs) ToPermissionEnumValueOutputWithContext(ctx context.Context) PermissionEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionEnumValueOutput)
}

func (i PermissionEnumValueArgs) ToPermissionEnumValuePtrOutput() PermissionEnumValuePtrOutput {
	return i.ToPermissionEnumValuePtrOutputWithContext(context.Background())
}

func (i PermissionEnumValueArgs) ToPermissionEnumValuePtrOutputWithContext(ctx context.Context) PermissionEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionEnumValueOutput).ToPermissionEnumValuePtrOutputWithContext(ctx)
}

// PermissionEnumValuePtrInput is an input type that accepts PermissionEnumValueArgs, PermissionEnumValuePtr and PermissionEnumValuePtrOutput values.
// You can construct a concrete instance of `PermissionEnumValuePtrInput` via:
//
//	        PermissionEnumValueArgs{...}
//
//	or:
//
//	        nil
type PermissionEnumValuePtrInput interface {
	pulumi.Input

	ToPermissionEnumValuePtrOutput() PermissionEnumValuePtrOutput
	ToPermissionEnumValuePtrOutputWithContext(context.Context) PermissionEnumValuePtrOutput
}

type permissionEnumValuePtrType PermissionEnumValueArgs

func PermissionEnumValuePtr(v *PermissionEnumValueArgs) PermissionEnumValuePtrInput {
	return (*permissionEnumValuePtrType)(v)
}

func (*permissionEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionEnumValue)(nil)).Elem()
}

func (i *permissionEnumValuePtrType) ToPermissionEnumValuePtrOutput() PermissionEnumValuePtrOutput {
	return i.ToPermissionEnumValuePtrOutputWithContext(context.Background())
}

func (i *permissionEnumValuePtrType) ToPermissionEnumValuePtrOutputWithContext(ctx context.Context) PermissionEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionEnumValuePtrOutput)
}

// Definition of PermissionEnumValue
type PermissionEnumValueOutput struct{ *pulumi.OutputState }

func (PermissionEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionEnumValue)(nil)).Elem()
}

func (o PermissionEnumValueOutput) ToPermissionEnumValueOutput() PermissionEnumValueOutput {
	return o
}

func (o PermissionEnumValueOutput) ToPermissionEnumValueOutputWithContext(ctx context.Context) PermissionEnumValueOutput {
	return o
}

func (o PermissionEnumValueOutput) ToPermissionEnumValuePtrOutput() PermissionEnumValuePtrOutput {
	return o.ToPermissionEnumValuePtrOutputWithContext(context.Background())
}

func (o PermissionEnumValueOutput) ToPermissionEnumValuePtrOutputWithContext(ctx context.Context) PermissionEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionEnumValue) *PermissionEnumValue {
		return &v
	}).(PermissionEnumValuePtrOutput)
}

// Property value
func (o PermissionEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PermissionEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PermissionEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionEnumValue)(nil)).Elem()
}

func (o PermissionEnumValuePtrOutput) ToPermissionEnumValuePtrOutput() PermissionEnumValuePtrOutput {
	return o
}

func (o PermissionEnumValuePtrOutput) ToPermissionEnumValuePtrOutputWithContext(ctx context.Context) PermissionEnumValuePtrOutput {
	return o
}

func (o PermissionEnumValuePtrOutput) Elem() PermissionEnumValueOutput {
	return o.ApplyT(func(v *PermissionEnumValue) PermissionEnumValue {
		if v != nil {
			return *v
		}
		var ret PermissionEnumValue
		return ret
	}).(PermissionEnumValueOutput)
}

// Property value
func (o PermissionEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PermissionEnumValue
type PermissionEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PermissionEnumValue
type PermissionEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PermissionEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionEnumValueResponse)(nil)).Elem()
}

func (o PermissionEnumValueResponseOutput) ToPermissionEnumValueResponseOutput() PermissionEnumValueResponseOutput {
	return o
}

func (o PermissionEnumValueResponseOutput) ToPermissionEnumValueResponseOutputWithContext(ctx context.Context) PermissionEnumValueResponseOutput {
	return o
}

// Property value
func (o PermissionEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PermissionEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PermissionEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionEnumValueResponse)(nil)).Elem()
}

func (o PermissionEnumValueResponsePtrOutput) ToPermissionEnumValueResponsePtrOutput() PermissionEnumValueResponsePtrOutput {
	return o
}

func (o PermissionEnumValueResponsePtrOutput) ToPermissionEnumValueResponsePtrOutputWithContext(ctx context.Context) PermissionEnumValueResponsePtrOutput {
	return o
}

func (o PermissionEnumValueResponsePtrOutput) Elem() PermissionEnumValueResponseOutput {
	return o.ApplyT(func(v *PermissionEnumValueResponse) PermissionEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PermissionEnumValueResponse
		return ret
	}).(PermissionEnumValueResponseOutput)
}

// Property value
func (o PermissionEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PingStatusEnumValue
type PingStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PingStatusEnumValueInput is an input type that accepts PingStatusEnumValueArgs and PingStatusEnumValueOutput values.
// You can construct a concrete instance of `PingStatusEnumValueInput` via:
//
//	PingStatusEnumValueArgs{...}
type PingStatusEnumValueInput interface {
	pulumi.Input

	ToPingStatusEnumValueOutput() PingStatusEnumValueOutput
	ToPingStatusEnumValueOutputWithContext(context.Context) PingStatusEnumValueOutput
}

// Definition of PingStatusEnumValue
type PingStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PingStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PingStatusEnumValue)(nil)).Elem()
}

func (i PingStatusEnumValueArgs) ToPingStatusEnumValueOutput() PingStatusEnumValueOutput {
	return i.ToPingStatusEnumValueOutputWithContext(context.Background())
}

func (i PingStatusEnumValueArgs) ToPingStatusEnumValueOutputWithContext(ctx context.Context) PingStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PingStatusEnumValueOutput)
}

func (i PingStatusEnumValueArgs) ToPingStatusEnumValuePtrOutput() PingStatusEnumValuePtrOutput {
	return i.ToPingStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i PingStatusEnumValueArgs) ToPingStatusEnumValuePtrOutputWithContext(ctx context.Context) PingStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PingStatusEnumValueOutput).ToPingStatusEnumValuePtrOutputWithContext(ctx)
}

// PingStatusEnumValuePtrInput is an input type that accepts PingStatusEnumValueArgs, PingStatusEnumValuePtr and PingStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `PingStatusEnumValuePtrInput` via:
//
//	        PingStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type PingStatusEnumValuePtrInput interface {
	pulumi.Input

	ToPingStatusEnumValuePtrOutput() PingStatusEnumValuePtrOutput
	ToPingStatusEnumValuePtrOutputWithContext(context.Context) PingStatusEnumValuePtrOutput
}

type pingStatusEnumValuePtrType PingStatusEnumValueArgs

func PingStatusEnumValuePtr(v *PingStatusEnumValueArgs) PingStatusEnumValuePtrInput {
	return (*pingStatusEnumValuePtrType)(v)
}

func (*pingStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PingStatusEnumValue)(nil)).Elem()
}

func (i *pingStatusEnumValuePtrType) ToPingStatusEnumValuePtrOutput() PingStatusEnumValuePtrOutput {
	return i.ToPingStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *pingStatusEnumValuePtrType) ToPingStatusEnumValuePtrOutputWithContext(ctx context.Context) PingStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PingStatusEnumValuePtrOutput)
}

// Definition of PingStatusEnumValue
type PingStatusEnumValueOutput struct{ *pulumi.OutputState }

func (PingStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PingStatusEnumValue)(nil)).Elem()
}

func (o PingStatusEnumValueOutput) ToPingStatusEnumValueOutput() PingStatusEnumValueOutput {
	return o
}

func (o PingStatusEnumValueOutput) ToPingStatusEnumValueOutputWithContext(ctx context.Context) PingStatusEnumValueOutput {
	return o
}

func (o PingStatusEnumValueOutput) ToPingStatusEnumValuePtrOutput() PingStatusEnumValuePtrOutput {
	return o.ToPingStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o PingStatusEnumValueOutput) ToPingStatusEnumValuePtrOutputWithContext(ctx context.Context) PingStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PingStatusEnumValue) *PingStatusEnumValue {
		return &v
	}).(PingStatusEnumValuePtrOutput)
}

// Property value
func (o PingStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PingStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PingStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PingStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PingStatusEnumValue)(nil)).Elem()
}

func (o PingStatusEnumValuePtrOutput) ToPingStatusEnumValuePtrOutput() PingStatusEnumValuePtrOutput {
	return o
}

func (o PingStatusEnumValuePtrOutput) ToPingStatusEnumValuePtrOutputWithContext(ctx context.Context) PingStatusEnumValuePtrOutput {
	return o
}

func (o PingStatusEnumValuePtrOutput) Elem() PingStatusEnumValueOutput {
	return o.ApplyT(func(v *PingStatusEnumValue) PingStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret PingStatusEnumValue
		return ret
	}).(PingStatusEnumValueOutput)
}

// Property value
func (o PingStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PingStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PingStatusEnumValue
type PingStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PingStatusEnumValue
type PingStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PingStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PingStatusEnumValueResponse)(nil)).Elem()
}

func (o PingStatusEnumValueResponseOutput) ToPingStatusEnumValueResponseOutput() PingStatusEnumValueResponseOutput {
	return o
}

func (o PingStatusEnumValueResponseOutput) ToPingStatusEnumValueResponseOutputWithContext(ctx context.Context) PingStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o PingStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PingStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PingStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PingStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PingStatusEnumValueResponse)(nil)).Elem()
}

func (o PingStatusEnumValueResponsePtrOutput) ToPingStatusEnumValueResponsePtrOutput() PingStatusEnumValueResponsePtrOutput {
	return o
}

func (o PingStatusEnumValueResponsePtrOutput) ToPingStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) PingStatusEnumValueResponsePtrOutput {
	return o
}

func (o PingStatusEnumValueResponsePtrOutput) Elem() PingStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *PingStatusEnumValueResponse) PingStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PingStatusEnumValueResponse
		return ret
	}).(PingStatusEnumValueResponseOutput)
}

// Property value
func (o PingStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PingStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Placement
type Placement struct {
	// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
	Affinity *string `pulumi:"affinity"`
	// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
	GroupId *string `pulumi:"groupId"`
	// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
	GroupName *string `pulumi:"groupName"`
	// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
	HostId *string `pulumi:"hostId"`
	// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	PartitionNumber *int `pulumi:"partitionNumber"`
	// <p>Reserved for future use.</p>
	SpreadDomain *string `pulumi:"spreadDomain"`
	// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
	Tenancy *TenancyEnumValue `pulumi:"tenancy"`
}

// PlacementInput is an input type that accepts PlacementArgs and PlacementOutput values.
// You can construct a concrete instance of `PlacementInput` via:
//
//	PlacementArgs{...}
type PlacementInput interface {
	pulumi.Input

	ToPlacementOutput() PlacementOutput
	ToPlacementOutputWithContext(context.Context) PlacementOutput
}

// Definition of Placement
type PlacementArgs struct {
	// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
	Affinity pulumi.StringPtrInput `pulumi:"affinity"`
	// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
	HostId pulumi.StringPtrInput `pulumi:"hostId"`
	// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	HostResourceGroupArn pulumi.StringPtrInput `pulumi:"hostResourceGroupArn"`
	// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	PartitionNumber pulumi.IntPtrInput `pulumi:"partitionNumber"`
	// <p>Reserved for future use.</p>
	SpreadDomain pulumi.StringPtrInput `pulumi:"spreadDomain"`
	// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
	Tenancy TenancyEnumValuePtrInput `pulumi:"tenancy"`
}

func (PlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Placement)(nil)).Elem()
}

func (i PlacementArgs) ToPlacementOutput() PlacementOutput {
	return i.ToPlacementOutputWithContext(context.Background())
}

func (i PlacementArgs) ToPlacementOutputWithContext(ctx context.Context) PlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementOutput)
}

func (i PlacementArgs) ToPlacementPtrOutput() PlacementPtrOutput {
	return i.ToPlacementPtrOutputWithContext(context.Background())
}

func (i PlacementArgs) ToPlacementPtrOutputWithContext(ctx context.Context) PlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementOutput).ToPlacementPtrOutputWithContext(ctx)
}

// PlacementPtrInput is an input type that accepts PlacementArgs, PlacementPtr and PlacementPtrOutput values.
// You can construct a concrete instance of `PlacementPtrInput` via:
//
//	        PlacementArgs{...}
//
//	or:
//
//	        nil
type PlacementPtrInput interface {
	pulumi.Input

	ToPlacementPtrOutput() PlacementPtrOutput
	ToPlacementPtrOutputWithContext(context.Context) PlacementPtrOutput
}

type placementPtrType PlacementArgs

func PlacementPtr(v *PlacementArgs) PlacementPtrInput {
	return (*placementPtrType)(v)
}

func (*placementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Placement)(nil)).Elem()
}

func (i *placementPtrType) ToPlacementPtrOutput() PlacementPtrOutput {
	return i.ToPlacementPtrOutputWithContext(context.Background())
}

func (i *placementPtrType) ToPlacementPtrOutputWithContext(ctx context.Context) PlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementPtrOutput)
}

// Definition of Placement
type PlacementOutput struct{ *pulumi.OutputState }

func (PlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Placement)(nil)).Elem()
}

func (o PlacementOutput) ToPlacementOutput() PlacementOutput {
	return o
}

func (o PlacementOutput) ToPlacementOutputWithContext(ctx context.Context) PlacementOutput {
	return o
}

func (o PlacementOutput) ToPlacementPtrOutput() PlacementPtrOutput {
	return o.ToPlacementPtrOutputWithContext(context.Background())
}

func (o PlacementOutput) ToPlacementPtrOutputWithContext(ctx context.Context) PlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Placement) *Placement {
		return &v
	}).(PlacementPtrOutput)
}

// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
func (o PlacementOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
func (o PlacementOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementOutput) HostResourceGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.HostResourceGroupArn }).(pulumi.StringPtrOutput)
}

// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementOutput) PartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Placement) *int { return v.PartitionNumber }).(pulumi.IntPtrOutput)
}

// <p>Reserved for future use.</p>
func (o PlacementOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Placement) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
func (o PlacementOutput) Tenancy() TenancyEnumValuePtrOutput {
	return o.ApplyT(func(v Placement) *TenancyEnumValue { return v.Tenancy }).(TenancyEnumValuePtrOutput)
}

type PlacementPtrOutput struct{ *pulumi.OutputState }

func (PlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Placement)(nil)).Elem()
}

func (o PlacementPtrOutput) ToPlacementPtrOutput() PlacementPtrOutput {
	return o
}

func (o PlacementPtrOutput) ToPlacementPtrOutputWithContext(ctx context.Context) PlacementPtrOutput {
	return o
}

func (o PlacementPtrOutput) Elem() PlacementOutput {
	return o.ApplyT(func(v *Placement) Placement {
		if v != nil {
			return *v
		}
		var ret Placement
		return ret
	}).(PlacementOutput)
}

// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementPtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(pulumi.StringPtrOutput)
}

// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
func (o PlacementPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
func (o PlacementPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.GroupName
	}).(pulumi.StringPtrOutput)
}

// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.HostId
	}).(pulumi.StringPtrOutput)
}

// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementPtrOutput) HostResourceGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.HostResourceGroupArn
	}).(pulumi.StringPtrOutput)
}

// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementPtrOutput) PartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Placement) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNumber
	}).(pulumi.IntPtrOutput)
}

// <p>Reserved for future use.</p>
func (o PlacementPtrOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Placement) *string {
		if v == nil {
			return nil
		}
		return v.SpreadDomain
	}).(pulumi.StringPtrOutput)
}

// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
func (o PlacementPtrOutput) Tenancy() TenancyEnumValuePtrOutput {
	return o.ApplyT(func(v *Placement) *TenancyEnumValue {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(TenancyEnumValuePtrOutput)
}

// Definition of PlacementConstraint
type PlacementConstraint struct {
	// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
	Expression *string `pulumi:"expression"`
	// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
	Type *string `pulumi:"type"`
}

// PlacementConstraintInput is an input type that accepts PlacementConstraintArgs and PlacementConstraintOutput values.
// You can construct a concrete instance of `PlacementConstraintInput` via:
//
//	PlacementConstraintArgs{...}
type PlacementConstraintInput interface {
	pulumi.Input

	ToPlacementConstraintOutput() PlacementConstraintOutput
	ToPlacementConstraintOutputWithContext(context.Context) PlacementConstraintOutput
}

// Definition of PlacementConstraint
type PlacementConstraintArgs struct {
	// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementConstraint)(nil)).Elem()
}

func (i PlacementConstraintArgs) ToPlacementConstraintOutput() PlacementConstraintOutput {
	return i.ToPlacementConstraintOutputWithContext(context.Background())
}

func (i PlacementConstraintArgs) ToPlacementConstraintOutputWithContext(ctx context.Context) PlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementConstraintOutput)
}

// PlacementConstraintArrayInput is an input type that accepts PlacementConstraintArray and PlacementConstraintArrayOutput values.
// You can construct a concrete instance of `PlacementConstraintArrayInput` via:
//
//	PlacementConstraintArray{ PlacementConstraintArgs{...} }
type PlacementConstraintArrayInput interface {
	pulumi.Input

	ToPlacementConstraintArrayOutput() PlacementConstraintArrayOutput
	ToPlacementConstraintArrayOutputWithContext(context.Context) PlacementConstraintArrayOutput
}

type PlacementConstraintArray []PlacementConstraintInput

func (PlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementConstraint)(nil)).Elem()
}

func (i PlacementConstraintArray) ToPlacementConstraintArrayOutput() PlacementConstraintArrayOutput {
	return i.ToPlacementConstraintArrayOutputWithContext(context.Background())
}

func (i PlacementConstraintArray) ToPlacementConstraintArrayOutputWithContext(ctx context.Context) PlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementConstraintArrayOutput)
}

// Definition of PlacementConstraint
type PlacementConstraintOutput struct{ *pulumi.OutputState }

func (PlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementConstraint)(nil)).Elem()
}

func (o PlacementConstraintOutput) ToPlacementConstraintOutput() PlacementConstraintOutput {
	return o
}

func (o PlacementConstraintOutput) ToPlacementConstraintOutputWithContext(ctx context.Context) PlacementConstraintOutput {
	return o
}

// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is “distinctInstance“. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o PlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// The type of constraint. Use “distinctInstance“ to ensure that each task in a particular group is running on a different container instance. Use “memberOf“ to restrict the selection to a group of valid candidates.
func (o PlacementConstraintOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementConstraint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (PlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementConstraint)(nil)).Elem()
}

func (o PlacementConstraintArrayOutput) ToPlacementConstraintArrayOutput() PlacementConstraintArrayOutput {
	return o
}

func (o PlacementConstraintArrayOutput) ToPlacementConstraintArrayOutputWithContext(ctx context.Context) PlacementConstraintArrayOutput {
	return o
}

func (o PlacementConstraintArrayOutput) Index(i pulumi.IntInput) PlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlacementConstraint {
		return vs[0].([]PlacementConstraint)[vs[1].(int)]
	}).(PlacementConstraintOutput)
}

// Definition of PlacementConstraint
type PlacementConstraintResponse struct {
	// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
	Expression *string `pulumi:"expression"`
	// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
	Type *string `pulumi:"type"`
}

// Definition of PlacementConstraint
type PlacementConstraintResponseOutput struct{ *pulumi.OutputState }

func (PlacementConstraintResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementConstraintResponse)(nil)).Elem()
}

func (o PlacementConstraintResponseOutput) ToPlacementConstraintResponseOutput() PlacementConstraintResponseOutput {
	return o
}

func (o PlacementConstraintResponseOutput) ToPlacementConstraintResponseOutputWithContext(ctx context.Context) PlacementConstraintResponseOutput {
	return o
}

// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is “distinctInstance“. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o PlacementConstraintResponseOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementConstraintResponse) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// The type of constraint. Use “distinctInstance“ to ensure that each task in a particular group is running on a different container instance. Use “memberOf“ to restrict the selection to a group of valid candidates.
func (o PlacementConstraintResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementConstraintResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PlacementConstraintResponseArrayOutput struct{ *pulumi.OutputState }

func (PlacementConstraintResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementConstraintResponse)(nil)).Elem()
}

func (o PlacementConstraintResponseArrayOutput) ToPlacementConstraintResponseArrayOutput() PlacementConstraintResponseArrayOutput {
	return o
}

func (o PlacementConstraintResponseArrayOutput) ToPlacementConstraintResponseArrayOutputWithContext(ctx context.Context) PlacementConstraintResponseArrayOutput {
	return o
}

func (o PlacementConstraintResponseArrayOutput) Index(i pulumi.IntInput) PlacementConstraintResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlacementConstraintResponse {
		return vs[0].([]PlacementConstraintResponse)[vs[1].(int)]
	}).(PlacementConstraintResponseOutput)
}

// Definition of PlacementGroupConfig
type PlacementGroupConfig struct {
	// <p>Role of the instance in the cluster.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported instance role is <code>MASTER</code>.</p>
	InstanceRole *InstanceRoleTypeEnumValue `pulumi:"instanceRole"`
	// <p>Amazon EC2 Placement Group strategy associated with instance role.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported placement strategy is <code>SPREAD</code> for the <code>MASTER</code> instance role.</p>
	PlacementStrategy *PlacementGroupStrategyEnumValue `pulumi:"placementStrategy"`
}

// PlacementGroupConfigInput is an input type that accepts PlacementGroupConfigArgs and PlacementGroupConfigOutput values.
// You can construct a concrete instance of `PlacementGroupConfigInput` via:
//
//	PlacementGroupConfigArgs{...}
type PlacementGroupConfigInput interface {
	pulumi.Input

	ToPlacementGroupConfigOutput() PlacementGroupConfigOutput
	ToPlacementGroupConfigOutputWithContext(context.Context) PlacementGroupConfigOutput
}

// Definition of PlacementGroupConfig
type PlacementGroupConfigArgs struct {
	// <p>Role of the instance in the cluster.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported instance role is <code>MASTER</code>.</p>
	InstanceRole InstanceRoleTypeEnumValuePtrInput `pulumi:"instanceRole"`
	// <p>Amazon EC2 Placement Group strategy associated with instance role.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported placement strategy is <code>SPREAD</code> for the <code>MASTER</code> instance role.</p>
	PlacementStrategy PlacementGroupStrategyEnumValuePtrInput `pulumi:"placementStrategy"`
}

func (PlacementGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementGroupConfig)(nil)).Elem()
}

func (i PlacementGroupConfigArgs) ToPlacementGroupConfigOutput() PlacementGroupConfigOutput {
	return i.ToPlacementGroupConfigOutputWithContext(context.Background())
}

func (i PlacementGroupConfigArgs) ToPlacementGroupConfigOutputWithContext(ctx context.Context) PlacementGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupConfigOutput)
}

// PlacementGroupConfigArrayInput is an input type that accepts PlacementGroupConfigArray and PlacementGroupConfigArrayOutput values.
// You can construct a concrete instance of `PlacementGroupConfigArrayInput` via:
//
//	PlacementGroupConfigArray{ PlacementGroupConfigArgs{...} }
type PlacementGroupConfigArrayInput interface {
	pulumi.Input

	ToPlacementGroupConfigArrayOutput() PlacementGroupConfigArrayOutput
	ToPlacementGroupConfigArrayOutputWithContext(context.Context) PlacementGroupConfigArrayOutput
}

type PlacementGroupConfigArray []PlacementGroupConfigInput

func (PlacementGroupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementGroupConfig)(nil)).Elem()
}

func (i PlacementGroupConfigArray) ToPlacementGroupConfigArrayOutput() PlacementGroupConfigArrayOutput {
	return i.ToPlacementGroupConfigArrayOutputWithContext(context.Background())
}

func (i PlacementGroupConfigArray) ToPlacementGroupConfigArrayOutputWithContext(ctx context.Context) PlacementGroupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupConfigArrayOutput)
}

// Definition of PlacementGroupConfig
type PlacementGroupConfigOutput struct{ *pulumi.OutputState }

func (PlacementGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementGroupConfig)(nil)).Elem()
}

func (o PlacementGroupConfigOutput) ToPlacementGroupConfigOutput() PlacementGroupConfigOutput {
	return o
}

func (o PlacementGroupConfigOutput) ToPlacementGroupConfigOutputWithContext(ctx context.Context) PlacementGroupConfigOutput {
	return o
}

// <p>Role of the instance in the cluster.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported instance role is <code>MASTER</code>.</p>
func (o PlacementGroupConfigOutput) InstanceRole() InstanceRoleTypeEnumValuePtrOutput {
	return o.ApplyT(func(v PlacementGroupConfig) *InstanceRoleTypeEnumValue { return v.InstanceRole }).(InstanceRoleTypeEnumValuePtrOutput)
}

// <p>Amazon EC2 Placement Group strategy associated with instance role.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported placement strategy is <code>SPREAD</code> for the <code>MASTER</code> instance role.</p>
func (o PlacementGroupConfigOutput) PlacementStrategy() PlacementGroupStrategyEnumValuePtrOutput {
	return o.ApplyT(func(v PlacementGroupConfig) *PlacementGroupStrategyEnumValue { return v.PlacementStrategy }).(PlacementGroupStrategyEnumValuePtrOutput)
}

type PlacementGroupConfigArrayOutput struct{ *pulumi.OutputState }

func (PlacementGroupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementGroupConfig)(nil)).Elem()
}

func (o PlacementGroupConfigArrayOutput) ToPlacementGroupConfigArrayOutput() PlacementGroupConfigArrayOutput {
	return o
}

func (o PlacementGroupConfigArrayOutput) ToPlacementGroupConfigArrayOutputWithContext(ctx context.Context) PlacementGroupConfigArrayOutput {
	return o
}

func (o PlacementGroupConfigArrayOutput) Index(i pulumi.IntInput) PlacementGroupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlacementGroupConfig {
		return vs[0].([]PlacementGroupConfig)[vs[1].(int)]
	}).(PlacementGroupConfigOutput)
}

// Definition of PlacementGroupConfig
type PlacementGroupConfigResponse struct {
	// <p>Role of the instance in the cluster.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported instance role is <code>MASTER</code>.</p>
	InstanceRole *InstanceRoleTypeEnumValueResponse `pulumi:"instanceRole"`
	// <p>Amazon EC2 Placement Group strategy associated with instance role.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported placement strategy is <code>SPREAD</code> for the <code>MASTER</code> instance role.</p>
	PlacementStrategy *PlacementGroupStrategyEnumValueResponse `pulumi:"placementStrategy"`
}

// Definition of PlacementGroupConfig
type PlacementGroupConfigResponseOutput struct{ *pulumi.OutputState }

func (PlacementGroupConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementGroupConfigResponse)(nil)).Elem()
}

func (o PlacementGroupConfigResponseOutput) ToPlacementGroupConfigResponseOutput() PlacementGroupConfigResponseOutput {
	return o
}

func (o PlacementGroupConfigResponseOutput) ToPlacementGroupConfigResponseOutputWithContext(ctx context.Context) PlacementGroupConfigResponseOutput {
	return o
}

// <p>Role of the instance in the cluster.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported instance role is <code>MASTER</code>.</p>
func (o PlacementGroupConfigResponseOutput) InstanceRole() InstanceRoleTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v PlacementGroupConfigResponse) *InstanceRoleTypeEnumValueResponse { return v.InstanceRole }).(InstanceRoleTypeEnumValueResponsePtrOutput)
}

// <p>Amazon EC2 Placement Group strategy associated with instance role.</p> <p>Starting with Amazon EMR release 5.23.0, the only supported placement strategy is <code>SPREAD</code> for the <code>MASTER</code> instance role.</p>
func (o PlacementGroupConfigResponseOutput) PlacementStrategy() PlacementGroupStrategyEnumValueResponsePtrOutput {
	return o.ApplyT(func(v PlacementGroupConfigResponse) *PlacementGroupStrategyEnumValueResponse {
		return v.PlacementStrategy
	}).(PlacementGroupStrategyEnumValueResponsePtrOutput)
}

type PlacementGroupConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (PlacementGroupConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementGroupConfigResponse)(nil)).Elem()
}

func (o PlacementGroupConfigResponseArrayOutput) ToPlacementGroupConfigResponseArrayOutput() PlacementGroupConfigResponseArrayOutput {
	return o
}

func (o PlacementGroupConfigResponseArrayOutput) ToPlacementGroupConfigResponseArrayOutputWithContext(ctx context.Context) PlacementGroupConfigResponseArrayOutput {
	return o
}

func (o PlacementGroupConfigResponseArrayOutput) Index(i pulumi.IntInput) PlacementGroupConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlacementGroupConfigResponse {
		return vs[0].([]PlacementGroupConfigResponse)[vs[1].(int)]
	}).(PlacementGroupConfigResponseOutput)
}

// Definition of PlacementGroupStrategyEnumValue
type PlacementGroupStrategyEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PlacementGroupStrategyEnumValueInput is an input type that accepts PlacementGroupStrategyEnumValueArgs and PlacementGroupStrategyEnumValueOutput values.
// You can construct a concrete instance of `PlacementGroupStrategyEnumValueInput` via:
//
//	PlacementGroupStrategyEnumValueArgs{...}
type PlacementGroupStrategyEnumValueInput interface {
	pulumi.Input

	ToPlacementGroupStrategyEnumValueOutput() PlacementGroupStrategyEnumValueOutput
	ToPlacementGroupStrategyEnumValueOutputWithContext(context.Context) PlacementGroupStrategyEnumValueOutput
}

// Definition of PlacementGroupStrategyEnumValue
type PlacementGroupStrategyEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PlacementGroupStrategyEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementGroupStrategyEnumValue)(nil)).Elem()
}

func (i PlacementGroupStrategyEnumValueArgs) ToPlacementGroupStrategyEnumValueOutput() PlacementGroupStrategyEnumValueOutput {
	return i.ToPlacementGroupStrategyEnumValueOutputWithContext(context.Background())
}

func (i PlacementGroupStrategyEnumValueArgs) ToPlacementGroupStrategyEnumValueOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupStrategyEnumValueOutput)
}

func (i PlacementGroupStrategyEnumValueArgs) ToPlacementGroupStrategyEnumValuePtrOutput() PlacementGroupStrategyEnumValuePtrOutput {
	return i.ToPlacementGroupStrategyEnumValuePtrOutputWithContext(context.Background())
}

func (i PlacementGroupStrategyEnumValueArgs) ToPlacementGroupStrategyEnumValuePtrOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupStrategyEnumValueOutput).ToPlacementGroupStrategyEnumValuePtrOutputWithContext(ctx)
}

// PlacementGroupStrategyEnumValuePtrInput is an input type that accepts PlacementGroupStrategyEnumValueArgs, PlacementGroupStrategyEnumValuePtr and PlacementGroupStrategyEnumValuePtrOutput values.
// You can construct a concrete instance of `PlacementGroupStrategyEnumValuePtrInput` via:
//
//	        PlacementGroupStrategyEnumValueArgs{...}
//
//	or:
//
//	        nil
type PlacementGroupStrategyEnumValuePtrInput interface {
	pulumi.Input

	ToPlacementGroupStrategyEnumValuePtrOutput() PlacementGroupStrategyEnumValuePtrOutput
	ToPlacementGroupStrategyEnumValuePtrOutputWithContext(context.Context) PlacementGroupStrategyEnumValuePtrOutput
}

type placementGroupStrategyEnumValuePtrType PlacementGroupStrategyEnumValueArgs

func PlacementGroupStrategyEnumValuePtr(v *PlacementGroupStrategyEnumValueArgs) PlacementGroupStrategyEnumValuePtrInput {
	return (*placementGroupStrategyEnumValuePtrType)(v)
}

func (*placementGroupStrategyEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroupStrategyEnumValue)(nil)).Elem()
}

func (i *placementGroupStrategyEnumValuePtrType) ToPlacementGroupStrategyEnumValuePtrOutput() PlacementGroupStrategyEnumValuePtrOutput {
	return i.ToPlacementGroupStrategyEnumValuePtrOutputWithContext(context.Background())
}

func (i *placementGroupStrategyEnumValuePtrType) ToPlacementGroupStrategyEnumValuePtrOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementGroupStrategyEnumValuePtrOutput)
}

// Definition of PlacementGroupStrategyEnumValue
type PlacementGroupStrategyEnumValueOutput struct{ *pulumi.OutputState }

func (PlacementGroupStrategyEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementGroupStrategyEnumValue)(nil)).Elem()
}

func (o PlacementGroupStrategyEnumValueOutput) ToPlacementGroupStrategyEnumValueOutput() PlacementGroupStrategyEnumValueOutput {
	return o
}

func (o PlacementGroupStrategyEnumValueOutput) ToPlacementGroupStrategyEnumValueOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValueOutput {
	return o
}

func (o PlacementGroupStrategyEnumValueOutput) ToPlacementGroupStrategyEnumValuePtrOutput() PlacementGroupStrategyEnumValuePtrOutput {
	return o.ToPlacementGroupStrategyEnumValuePtrOutputWithContext(context.Background())
}

func (o PlacementGroupStrategyEnumValueOutput) ToPlacementGroupStrategyEnumValuePtrOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlacementGroupStrategyEnumValue) *PlacementGroupStrategyEnumValue {
		return &v
	}).(PlacementGroupStrategyEnumValuePtrOutput)
}

// Property value
func (o PlacementGroupStrategyEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementGroupStrategyEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PlacementGroupStrategyEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PlacementGroupStrategyEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroupStrategyEnumValue)(nil)).Elem()
}

func (o PlacementGroupStrategyEnumValuePtrOutput) ToPlacementGroupStrategyEnumValuePtrOutput() PlacementGroupStrategyEnumValuePtrOutput {
	return o
}

func (o PlacementGroupStrategyEnumValuePtrOutput) ToPlacementGroupStrategyEnumValuePtrOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValuePtrOutput {
	return o
}

func (o PlacementGroupStrategyEnumValuePtrOutput) Elem() PlacementGroupStrategyEnumValueOutput {
	return o.ApplyT(func(v *PlacementGroupStrategyEnumValue) PlacementGroupStrategyEnumValue {
		if v != nil {
			return *v
		}
		var ret PlacementGroupStrategyEnumValue
		return ret
	}).(PlacementGroupStrategyEnumValueOutput)
}

// Property value
func (o PlacementGroupStrategyEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementGroupStrategyEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PlacementGroupStrategyEnumValue
type PlacementGroupStrategyEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PlacementGroupStrategyEnumValue
type PlacementGroupStrategyEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PlacementGroupStrategyEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementGroupStrategyEnumValueResponse)(nil)).Elem()
}

func (o PlacementGroupStrategyEnumValueResponseOutput) ToPlacementGroupStrategyEnumValueResponseOutput() PlacementGroupStrategyEnumValueResponseOutput {
	return o
}

func (o PlacementGroupStrategyEnumValueResponseOutput) ToPlacementGroupStrategyEnumValueResponseOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValueResponseOutput {
	return o
}

// Property value
func (o PlacementGroupStrategyEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementGroupStrategyEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PlacementGroupStrategyEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PlacementGroupStrategyEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementGroupStrategyEnumValueResponse)(nil)).Elem()
}

func (o PlacementGroupStrategyEnumValueResponsePtrOutput) ToPlacementGroupStrategyEnumValueResponsePtrOutput() PlacementGroupStrategyEnumValueResponsePtrOutput {
	return o
}

func (o PlacementGroupStrategyEnumValueResponsePtrOutput) ToPlacementGroupStrategyEnumValueResponsePtrOutputWithContext(ctx context.Context) PlacementGroupStrategyEnumValueResponsePtrOutput {
	return o
}

func (o PlacementGroupStrategyEnumValueResponsePtrOutput) Elem() PlacementGroupStrategyEnumValueResponseOutput {
	return o.ApplyT(func(v *PlacementGroupStrategyEnumValueResponse) PlacementGroupStrategyEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PlacementGroupStrategyEnumValueResponse
		return ret
	}).(PlacementGroupStrategyEnumValueResponseOutput)
}

// Property value
func (o PlacementGroupStrategyEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementGroupStrategyEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Placement
type PlacementResponse struct {
	// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
	Affinity *string `pulumi:"affinity"`
	// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
	GroupId *string `pulumi:"groupId"`
	// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
	GroupName *string `pulumi:"groupName"`
	// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
	HostId *string `pulumi:"hostId"`
	// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
	PartitionNumber *int `pulumi:"partitionNumber"`
	// <p>Reserved for future use.</p>
	SpreadDomain *string `pulumi:"spreadDomain"`
	// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
	Tenancy *TenancyEnumValueResponse `pulumi:"tenancy"`
}

// Definition of Placement
type PlacementResponseOutput struct{ *pulumi.OutputState }

func (PlacementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementResponse)(nil)).Elem()
}

func (o PlacementResponseOutput) ToPlacementResponseOutput() PlacementResponseOutput {
	return o
}

func (o PlacementResponseOutput) ToPlacementResponseOutputWithContext(ctx context.Context) PlacementResponseOutput {
	return o
}

// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementResponseOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementResponseOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
func (o PlacementResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
func (o PlacementResponseOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementResponseOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementResponseOutput) HostResourceGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.HostResourceGroupArn }).(pulumi.StringPtrOutput)
}

// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementResponseOutput) PartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *int { return v.PartitionNumber }).(pulumi.IntPtrOutput)
}

// <p>Reserved for future use.</p>
func (o PlacementResponseOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementResponse) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
func (o PlacementResponseOutput) Tenancy() TenancyEnumValueResponsePtrOutput {
	return o.ApplyT(func(v PlacementResponse) *TenancyEnumValueResponse { return v.Tenancy }).(TenancyEnumValueResponsePtrOutput)
}

type PlacementResponsePtrOutput struct{ *pulumi.OutputState }

func (PlacementResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementResponse)(nil)).Elem()
}

func (o PlacementResponsePtrOutput) ToPlacementResponsePtrOutput() PlacementResponsePtrOutput {
	return o
}

func (o PlacementResponsePtrOutput) ToPlacementResponsePtrOutputWithContext(ctx context.Context) PlacementResponsePtrOutput {
	return o
}

func (o PlacementResponsePtrOutput) Elem() PlacementResponseOutput {
	return o.ApplyT(func(v *PlacementResponse) PlacementResponse {
		if v != nil {
			return *v
		}
		var ret PlacementResponse
		return ret
	}).(PlacementResponseOutput)
}

// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementResponsePtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(pulumi.StringPtrOutput)
}

// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementResponsePtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
func (o PlacementResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
func (o PlacementResponsePtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupName
	}).(pulumi.StringPtrOutput)
}

// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
func (o PlacementResponsePtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostId
	}).(pulumi.StringPtrOutput)
}

// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementResponsePtrOutput) HostResourceGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostResourceGroupArn
	}).(pulumi.StringPtrOutput)
}

// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
func (o PlacementResponsePtrOutput) PartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNumber
	}).(pulumi.IntPtrOutput)
}

// <p>Reserved for future use.</p>
func (o PlacementResponsePtrOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *string {
		if v == nil {
			return nil
		}
		return v.SpreadDomain
	}).(pulumi.StringPtrOutput)
}

// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>. The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a> or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
func (o PlacementResponsePtrOutput) Tenancy() TenancyEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *PlacementResponse) *TenancyEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(TenancyEnumValueResponsePtrOutput)
}

// Definition of PlacementStrategy
type PlacementStrategy struct {
	// The field to apply the placement strategy against. For the ``spread`` placement strategy, valid values are ``instanceId`` (or ``host``, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as ``attribute:ecs.availability-zone``. For the ``binpack`` placement strategy, valid values are ``CPU`` and ``MEMORY``. For the ``random`` placement strategy, this field is not used.
	Field *string `pulumi:"field"`
	// The type of placement strategy. The ``random`` placement strategy randomly places tasks on available candidates. The ``spread`` placement strategy spreads placement across available candidates evenly based on the ``field`` parameter. The ``binpack`` strategy places tasks on available candidates that have the least available amount of the resource that's specified with the ``field`` parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task.
	Type *string `pulumi:"type"`
}

// PlacementStrategyInput is an input type that accepts PlacementStrategyArgs and PlacementStrategyOutput values.
// You can construct a concrete instance of `PlacementStrategyInput` via:
//
//	PlacementStrategyArgs{...}
type PlacementStrategyInput interface {
	pulumi.Input

	ToPlacementStrategyOutput() PlacementStrategyOutput
	ToPlacementStrategyOutputWithContext(context.Context) PlacementStrategyOutput
}

// Definition of PlacementStrategy
type PlacementStrategyArgs struct {
	// The field to apply the placement strategy against. For the ``spread`` placement strategy, valid values are ``instanceId`` (or ``host``, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as ``attribute:ecs.availability-zone``. For the ``binpack`` placement strategy, valid values are ``CPU`` and ``MEMORY``. For the ``random`` placement strategy, this field is not used.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The type of placement strategy. The ``random`` placement strategy randomly places tasks on available candidates. The ``spread`` placement strategy spreads placement across available candidates evenly based on the ``field`` parameter. The ``binpack`` strategy places tasks on available candidates that have the least available amount of the resource that's specified with the ``field`` parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PlacementStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementStrategy)(nil)).Elem()
}

func (i PlacementStrategyArgs) ToPlacementStrategyOutput() PlacementStrategyOutput {
	return i.ToPlacementStrategyOutputWithContext(context.Background())
}

func (i PlacementStrategyArgs) ToPlacementStrategyOutputWithContext(ctx context.Context) PlacementStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementStrategyOutput)
}

// PlacementStrategyArrayInput is an input type that accepts PlacementStrategyArray and PlacementStrategyArrayOutput values.
// You can construct a concrete instance of `PlacementStrategyArrayInput` via:
//
//	PlacementStrategyArray{ PlacementStrategyArgs{...} }
type PlacementStrategyArrayInput interface {
	pulumi.Input

	ToPlacementStrategyArrayOutput() PlacementStrategyArrayOutput
	ToPlacementStrategyArrayOutputWithContext(context.Context) PlacementStrategyArrayOutput
}

type PlacementStrategyArray []PlacementStrategyInput

func (PlacementStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementStrategy)(nil)).Elem()
}

func (i PlacementStrategyArray) ToPlacementStrategyArrayOutput() PlacementStrategyArrayOutput {
	return i.ToPlacementStrategyArrayOutputWithContext(context.Background())
}

func (i PlacementStrategyArray) ToPlacementStrategyArrayOutputWithContext(ctx context.Context) PlacementStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlacementStrategyArrayOutput)
}

// Definition of PlacementStrategy
type PlacementStrategyOutput struct{ *pulumi.OutputState }

func (PlacementStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementStrategy)(nil)).Elem()
}

func (o PlacementStrategyOutput) ToPlacementStrategyOutput() PlacementStrategyOutput {
	return o
}

func (o PlacementStrategyOutput) ToPlacementStrategyOutputWithContext(ctx context.Context) PlacementStrategyOutput {
	return o
}

// The field to apply the placement strategy against. For the “spread“ placement strategy, valid values are “instanceId“ (or “host“, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as “attribute:ecs.availability-zone“. For the “binpack“ placement strategy, valid values are “CPU“ and “MEMORY“. For the “random“ placement strategy, this field is not used.
func (o PlacementStrategyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementStrategy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The type of placement strategy. The “random“ placement strategy randomly places tasks on available candidates. The “spread“ placement strategy spreads placement across available candidates evenly based on the “field“ parameter. The “binpack“ strategy places tasks on available candidates that have the least available amount of the resource that's specified with the “field“ parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task.
func (o PlacementStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PlacementStrategyArrayOutput struct{ *pulumi.OutputState }

func (PlacementStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementStrategy)(nil)).Elem()
}

func (o PlacementStrategyArrayOutput) ToPlacementStrategyArrayOutput() PlacementStrategyArrayOutput {
	return o
}

func (o PlacementStrategyArrayOutput) ToPlacementStrategyArrayOutputWithContext(ctx context.Context) PlacementStrategyArrayOutput {
	return o
}

func (o PlacementStrategyArrayOutput) Index(i pulumi.IntInput) PlacementStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlacementStrategy {
		return vs[0].([]PlacementStrategy)[vs[1].(int)]
	}).(PlacementStrategyOutput)
}

// Definition of PlacementStrategy
type PlacementStrategyResponse struct {
	// The field to apply the placement strategy against. For the ``spread`` placement strategy, valid values are ``instanceId`` (or ``host``, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as ``attribute:ecs.availability-zone``. For the ``binpack`` placement strategy, valid values are ``CPU`` and ``MEMORY``. For the ``random`` placement strategy, this field is not used.
	Field *string `pulumi:"field"`
	// The type of placement strategy. The ``random`` placement strategy randomly places tasks on available candidates. The ``spread`` placement strategy spreads placement across available candidates evenly based on the ``field`` parameter. The ``binpack`` strategy places tasks on available candidates that have the least available amount of the resource that's specified with the ``field`` parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task.
	Type *string `pulumi:"type"`
}

// Definition of PlacementStrategy
type PlacementStrategyResponseOutput struct{ *pulumi.OutputState }

func (PlacementStrategyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementStrategyResponse)(nil)).Elem()
}

func (o PlacementStrategyResponseOutput) ToPlacementStrategyResponseOutput() PlacementStrategyResponseOutput {
	return o
}

func (o PlacementStrategyResponseOutput) ToPlacementStrategyResponseOutputWithContext(ctx context.Context) PlacementStrategyResponseOutput {
	return o
}

// The field to apply the placement strategy against. For the “spread“ placement strategy, valid values are “instanceId“ (or “host“, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as “attribute:ecs.availability-zone“. For the “binpack“ placement strategy, valid values are “CPU“ and “MEMORY“. For the “random“ placement strategy, this field is not used.
func (o PlacementStrategyResponseOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementStrategyResponse) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The type of placement strategy. The “random“ placement strategy randomly places tasks on available candidates. The “spread“ placement strategy spreads placement across available candidates evenly based on the “field“ parameter. The “binpack“ strategy places tasks on available candidates that have the least available amount of the resource that's specified with the “field“ parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task.
func (o PlacementStrategyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlacementStrategyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PlacementStrategyResponseArrayOutput struct{ *pulumi.OutputState }

func (PlacementStrategyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlacementStrategyResponse)(nil)).Elem()
}

func (o PlacementStrategyResponseArrayOutput) ToPlacementStrategyResponseArrayOutput() PlacementStrategyResponseArrayOutput {
	return o
}

func (o PlacementStrategyResponseArrayOutput) ToPlacementStrategyResponseArrayOutputWithContext(ctx context.Context) PlacementStrategyResponseArrayOutput {
	return o
}

func (o PlacementStrategyResponseArrayOutput) Index(i pulumi.IntInput) PlacementStrategyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlacementStrategyResponse {
		return vs[0].([]PlacementStrategyResponse)[vs[1].(int)]
	}).(PlacementStrategyResponseOutput)
}

// Definition of PlatformTypeEnumValue
type PlatformTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PlatformTypeEnumValueInput is an input type that accepts PlatformTypeEnumValueArgs and PlatformTypeEnumValueOutput values.
// You can construct a concrete instance of `PlatformTypeEnumValueInput` via:
//
//	PlatformTypeEnumValueArgs{...}
type PlatformTypeEnumValueInput interface {
	pulumi.Input

	ToPlatformTypeEnumValueOutput() PlatformTypeEnumValueOutput
	ToPlatformTypeEnumValueOutputWithContext(context.Context) PlatformTypeEnumValueOutput
}

// Definition of PlatformTypeEnumValue
type PlatformTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PlatformTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformTypeEnumValue)(nil)).Elem()
}

func (i PlatformTypeEnumValueArgs) ToPlatformTypeEnumValueOutput() PlatformTypeEnumValueOutput {
	return i.ToPlatformTypeEnumValueOutputWithContext(context.Background())
}

func (i PlatformTypeEnumValueArgs) ToPlatformTypeEnumValueOutputWithContext(ctx context.Context) PlatformTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformTypeEnumValueOutput)
}

func (i PlatformTypeEnumValueArgs) ToPlatformTypeEnumValuePtrOutput() PlatformTypeEnumValuePtrOutput {
	return i.ToPlatformTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i PlatformTypeEnumValueArgs) ToPlatformTypeEnumValuePtrOutputWithContext(ctx context.Context) PlatformTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformTypeEnumValueOutput).ToPlatformTypeEnumValuePtrOutputWithContext(ctx)
}

// PlatformTypeEnumValuePtrInput is an input type that accepts PlatformTypeEnumValueArgs, PlatformTypeEnumValuePtr and PlatformTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `PlatformTypeEnumValuePtrInput` via:
//
//	        PlatformTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type PlatformTypeEnumValuePtrInput interface {
	pulumi.Input

	ToPlatformTypeEnumValuePtrOutput() PlatformTypeEnumValuePtrOutput
	ToPlatformTypeEnumValuePtrOutputWithContext(context.Context) PlatformTypeEnumValuePtrOutput
}

type platformTypeEnumValuePtrType PlatformTypeEnumValueArgs

func PlatformTypeEnumValuePtr(v *PlatformTypeEnumValueArgs) PlatformTypeEnumValuePtrInput {
	return (*platformTypeEnumValuePtrType)(v)
}

func (*platformTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformTypeEnumValue)(nil)).Elem()
}

func (i *platformTypeEnumValuePtrType) ToPlatformTypeEnumValuePtrOutput() PlatformTypeEnumValuePtrOutput {
	return i.ToPlatformTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *platformTypeEnumValuePtrType) ToPlatformTypeEnumValuePtrOutputWithContext(ctx context.Context) PlatformTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformTypeEnumValuePtrOutput)
}

// Definition of PlatformTypeEnumValue
type PlatformTypeEnumValueOutput struct{ *pulumi.OutputState }

func (PlatformTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformTypeEnumValue)(nil)).Elem()
}

func (o PlatformTypeEnumValueOutput) ToPlatformTypeEnumValueOutput() PlatformTypeEnumValueOutput {
	return o
}

func (o PlatformTypeEnumValueOutput) ToPlatformTypeEnumValueOutputWithContext(ctx context.Context) PlatformTypeEnumValueOutput {
	return o
}

func (o PlatformTypeEnumValueOutput) ToPlatformTypeEnumValuePtrOutput() PlatformTypeEnumValuePtrOutput {
	return o.ToPlatformTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o PlatformTypeEnumValueOutput) ToPlatformTypeEnumValuePtrOutputWithContext(ctx context.Context) PlatformTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlatformTypeEnumValue) *PlatformTypeEnumValue {
		return &v
	}).(PlatformTypeEnumValuePtrOutput)
}

// Property value
func (o PlatformTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PlatformTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PlatformTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformTypeEnumValue)(nil)).Elem()
}

func (o PlatformTypeEnumValuePtrOutput) ToPlatformTypeEnumValuePtrOutput() PlatformTypeEnumValuePtrOutput {
	return o
}

func (o PlatformTypeEnumValuePtrOutput) ToPlatformTypeEnumValuePtrOutputWithContext(ctx context.Context) PlatformTypeEnumValuePtrOutput {
	return o
}

func (o PlatformTypeEnumValuePtrOutput) Elem() PlatformTypeEnumValueOutput {
	return o.ApplyT(func(v *PlatformTypeEnumValue) PlatformTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret PlatformTypeEnumValue
		return ret
	}).(PlatformTypeEnumValueOutput)
}

// Property value
func (o PlatformTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PlatformTypeEnumValue
type PlatformTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PlatformTypeEnumValue
type PlatformTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PlatformTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformTypeEnumValueResponse)(nil)).Elem()
}

func (o PlatformTypeEnumValueResponseOutput) ToPlatformTypeEnumValueResponseOutput() PlatformTypeEnumValueResponseOutput {
	return o
}

func (o PlatformTypeEnumValueResponseOutput) ToPlatformTypeEnumValueResponseOutputWithContext(ctx context.Context) PlatformTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o PlatformTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PlatformTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PlatformTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformTypeEnumValueResponse)(nil)).Elem()
}

func (o PlatformTypeEnumValueResponsePtrOutput) ToPlatformTypeEnumValueResponsePtrOutput() PlatformTypeEnumValueResponsePtrOutput {
	return o
}

func (o PlatformTypeEnumValueResponsePtrOutput) ToPlatformTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) PlatformTypeEnumValueResponsePtrOutput {
	return o
}

func (o PlatformTypeEnumValueResponsePtrOutput) Elem() PlatformTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *PlatformTypeEnumValueResponse) PlatformTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PlatformTypeEnumValueResponse
		return ret
	}).(PlatformTypeEnumValueResponseOutput)
}

// Property value
func (o PlatformTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PlatformValuesEnumValue
type PlatformValuesEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PlatformValuesEnumValueInput is an input type that accepts PlatformValuesEnumValueArgs and PlatformValuesEnumValueOutput values.
// You can construct a concrete instance of `PlatformValuesEnumValueInput` via:
//
//	PlatformValuesEnumValueArgs{...}
type PlatformValuesEnumValueInput interface {
	pulumi.Input

	ToPlatformValuesEnumValueOutput() PlatformValuesEnumValueOutput
	ToPlatformValuesEnumValueOutputWithContext(context.Context) PlatformValuesEnumValueOutput
}

// Definition of PlatformValuesEnumValue
type PlatformValuesEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PlatformValuesEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformValuesEnumValue)(nil)).Elem()
}

func (i PlatformValuesEnumValueArgs) ToPlatformValuesEnumValueOutput() PlatformValuesEnumValueOutput {
	return i.ToPlatformValuesEnumValueOutputWithContext(context.Background())
}

func (i PlatformValuesEnumValueArgs) ToPlatformValuesEnumValueOutputWithContext(ctx context.Context) PlatformValuesEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformValuesEnumValueOutput)
}

func (i PlatformValuesEnumValueArgs) ToPlatformValuesEnumValuePtrOutput() PlatformValuesEnumValuePtrOutput {
	return i.ToPlatformValuesEnumValuePtrOutputWithContext(context.Background())
}

func (i PlatformValuesEnumValueArgs) ToPlatformValuesEnumValuePtrOutputWithContext(ctx context.Context) PlatformValuesEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformValuesEnumValueOutput).ToPlatformValuesEnumValuePtrOutputWithContext(ctx)
}

// PlatformValuesEnumValuePtrInput is an input type that accepts PlatformValuesEnumValueArgs, PlatformValuesEnumValuePtr and PlatformValuesEnumValuePtrOutput values.
// You can construct a concrete instance of `PlatformValuesEnumValuePtrInput` via:
//
//	        PlatformValuesEnumValueArgs{...}
//
//	or:
//
//	        nil
type PlatformValuesEnumValuePtrInput interface {
	pulumi.Input

	ToPlatformValuesEnumValuePtrOutput() PlatformValuesEnumValuePtrOutput
	ToPlatformValuesEnumValuePtrOutputWithContext(context.Context) PlatformValuesEnumValuePtrOutput
}

type platformValuesEnumValuePtrType PlatformValuesEnumValueArgs

func PlatformValuesEnumValuePtr(v *PlatformValuesEnumValueArgs) PlatformValuesEnumValuePtrInput {
	return (*platformValuesEnumValuePtrType)(v)
}

func (*platformValuesEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformValuesEnumValue)(nil)).Elem()
}

func (i *platformValuesEnumValuePtrType) ToPlatformValuesEnumValuePtrOutput() PlatformValuesEnumValuePtrOutput {
	return i.ToPlatformValuesEnumValuePtrOutputWithContext(context.Background())
}

func (i *platformValuesEnumValuePtrType) ToPlatformValuesEnumValuePtrOutputWithContext(ctx context.Context) PlatformValuesEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformValuesEnumValuePtrOutput)
}

// Definition of PlatformValuesEnumValue
type PlatformValuesEnumValueOutput struct{ *pulumi.OutputState }

func (PlatformValuesEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformValuesEnumValue)(nil)).Elem()
}

func (o PlatformValuesEnumValueOutput) ToPlatformValuesEnumValueOutput() PlatformValuesEnumValueOutput {
	return o
}

func (o PlatformValuesEnumValueOutput) ToPlatformValuesEnumValueOutputWithContext(ctx context.Context) PlatformValuesEnumValueOutput {
	return o
}

func (o PlatformValuesEnumValueOutput) ToPlatformValuesEnumValuePtrOutput() PlatformValuesEnumValuePtrOutput {
	return o.ToPlatformValuesEnumValuePtrOutputWithContext(context.Background())
}

func (o PlatformValuesEnumValueOutput) ToPlatformValuesEnumValuePtrOutputWithContext(ctx context.Context) PlatformValuesEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlatformValuesEnumValue) *PlatformValuesEnumValue {
		return &v
	}).(PlatformValuesEnumValuePtrOutput)
}

// Property value
func (o PlatformValuesEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformValuesEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PlatformValuesEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PlatformValuesEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformValuesEnumValue)(nil)).Elem()
}

func (o PlatformValuesEnumValuePtrOutput) ToPlatformValuesEnumValuePtrOutput() PlatformValuesEnumValuePtrOutput {
	return o
}

func (o PlatformValuesEnumValuePtrOutput) ToPlatformValuesEnumValuePtrOutputWithContext(ctx context.Context) PlatformValuesEnumValuePtrOutput {
	return o
}

func (o PlatformValuesEnumValuePtrOutput) Elem() PlatformValuesEnumValueOutput {
	return o.ApplyT(func(v *PlatformValuesEnumValue) PlatformValuesEnumValue {
		if v != nil {
			return *v
		}
		var ret PlatformValuesEnumValue
		return ret
	}).(PlatformValuesEnumValueOutput)
}

// Property value
func (o PlatformValuesEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformValuesEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PlatformValuesEnumValue
type PlatformValuesEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PlatformValuesEnumValue
type PlatformValuesEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PlatformValuesEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformValuesEnumValueResponse)(nil)).Elem()
}

func (o PlatformValuesEnumValueResponseOutput) ToPlatformValuesEnumValueResponseOutput() PlatformValuesEnumValueResponseOutput {
	return o
}

func (o PlatformValuesEnumValueResponseOutput) ToPlatformValuesEnumValueResponseOutputWithContext(ctx context.Context) PlatformValuesEnumValueResponseOutput {
	return o
}

// Property value
func (o PlatformValuesEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformValuesEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PlatformValuesEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PlatformValuesEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformValuesEnumValueResponse)(nil)).Elem()
}

func (o PlatformValuesEnumValueResponsePtrOutput) ToPlatformValuesEnumValueResponsePtrOutput() PlatformValuesEnumValueResponsePtrOutput {
	return o
}

func (o PlatformValuesEnumValueResponsePtrOutput) ToPlatformValuesEnumValueResponsePtrOutputWithContext(ctx context.Context) PlatformValuesEnumValueResponsePtrOutput {
	return o
}

func (o PlatformValuesEnumValueResponsePtrOutput) Elem() PlatformValuesEnumValueResponseOutput {
	return o.ApplyT(func(v *PlatformValuesEnumValueResponse) PlatformValuesEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PlatformValuesEnumValueResponse
		return ret
	}).(PlatformValuesEnumValueResponseOutput)
}

// Property value
func (o PlatformValuesEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformValuesEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PointInTimeRecoveryDescription
type PointInTimeRecoveryDescription struct {
	// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
	EarliestRestorableDateTime *string `pulumi:"earliestRestorableDateTime"`
	// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
	LatestRestorableDateTime *string `pulumi:"latestRestorableDateTime"`
	// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
	PointInTimeRecoveryStatus *PointInTimeRecoveryStatusEnumValue `pulumi:"pointInTimeRecoveryStatus"`
}

// PointInTimeRecoveryDescriptionInput is an input type that accepts PointInTimeRecoveryDescriptionArgs and PointInTimeRecoveryDescriptionOutput values.
// You can construct a concrete instance of `PointInTimeRecoveryDescriptionInput` via:
//
//	PointInTimeRecoveryDescriptionArgs{...}
type PointInTimeRecoveryDescriptionInput interface {
	pulumi.Input

	ToPointInTimeRecoveryDescriptionOutput() PointInTimeRecoveryDescriptionOutput
	ToPointInTimeRecoveryDescriptionOutputWithContext(context.Context) PointInTimeRecoveryDescriptionOutput
}

// Definition of PointInTimeRecoveryDescription
type PointInTimeRecoveryDescriptionArgs struct {
	// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
	EarliestRestorableDateTime pulumi.StringPtrInput `pulumi:"earliestRestorableDateTime"`
	// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
	LatestRestorableDateTime pulumi.StringPtrInput `pulumi:"latestRestorableDateTime"`
	// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
	PointInTimeRecoveryStatus PointInTimeRecoveryStatusEnumValuePtrInput `pulumi:"pointInTimeRecoveryStatus"`
}

func (PointInTimeRecoveryDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoveryDescription)(nil)).Elem()
}

func (i PointInTimeRecoveryDescriptionArgs) ToPointInTimeRecoveryDescriptionOutput() PointInTimeRecoveryDescriptionOutput {
	return i.ToPointInTimeRecoveryDescriptionOutputWithContext(context.Background())
}

func (i PointInTimeRecoveryDescriptionArgs) ToPointInTimeRecoveryDescriptionOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoveryDescriptionOutput)
}

func (i PointInTimeRecoveryDescriptionArgs) ToPointInTimeRecoveryDescriptionPtrOutput() PointInTimeRecoveryDescriptionPtrOutput {
	return i.ToPointInTimeRecoveryDescriptionPtrOutputWithContext(context.Background())
}

func (i PointInTimeRecoveryDescriptionArgs) ToPointInTimeRecoveryDescriptionPtrOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoveryDescriptionOutput).ToPointInTimeRecoveryDescriptionPtrOutputWithContext(ctx)
}

// PointInTimeRecoveryDescriptionPtrInput is an input type that accepts PointInTimeRecoveryDescriptionArgs, PointInTimeRecoveryDescriptionPtr and PointInTimeRecoveryDescriptionPtrOutput values.
// You can construct a concrete instance of `PointInTimeRecoveryDescriptionPtrInput` via:
//
//	        PointInTimeRecoveryDescriptionArgs{...}
//
//	or:
//
//	        nil
type PointInTimeRecoveryDescriptionPtrInput interface {
	pulumi.Input

	ToPointInTimeRecoveryDescriptionPtrOutput() PointInTimeRecoveryDescriptionPtrOutput
	ToPointInTimeRecoveryDescriptionPtrOutputWithContext(context.Context) PointInTimeRecoveryDescriptionPtrOutput
}

type pointInTimeRecoveryDescriptionPtrType PointInTimeRecoveryDescriptionArgs

func PointInTimeRecoveryDescriptionPtr(v *PointInTimeRecoveryDescriptionArgs) PointInTimeRecoveryDescriptionPtrInput {
	return (*pointInTimeRecoveryDescriptionPtrType)(v)
}

func (*pointInTimeRecoveryDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoveryDescription)(nil)).Elem()
}

func (i *pointInTimeRecoveryDescriptionPtrType) ToPointInTimeRecoveryDescriptionPtrOutput() PointInTimeRecoveryDescriptionPtrOutput {
	return i.ToPointInTimeRecoveryDescriptionPtrOutputWithContext(context.Background())
}

func (i *pointInTimeRecoveryDescriptionPtrType) ToPointInTimeRecoveryDescriptionPtrOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoveryDescriptionPtrOutput)
}

// Definition of PointInTimeRecoveryDescription
type PointInTimeRecoveryDescriptionOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoveryDescription)(nil)).Elem()
}

func (o PointInTimeRecoveryDescriptionOutput) ToPointInTimeRecoveryDescriptionOutput() PointInTimeRecoveryDescriptionOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionOutput) ToPointInTimeRecoveryDescriptionOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionOutput) ToPointInTimeRecoveryDescriptionPtrOutput() PointInTimeRecoveryDescriptionPtrOutput {
	return o.ToPointInTimeRecoveryDescriptionPtrOutputWithContext(context.Background())
}

func (o PointInTimeRecoveryDescriptionOutput) ToPointInTimeRecoveryDescriptionPtrOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointInTimeRecoveryDescription) *PointInTimeRecoveryDescription {
		return &v
	}).(PointInTimeRecoveryDescriptionPtrOutput)
}

// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
func (o PointInTimeRecoveryDescriptionOutput) EarliestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryDescription) *string { return v.EarliestRestorableDateTime }).(pulumi.StringPtrOutput)
}

// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
func (o PointInTimeRecoveryDescriptionOutput) LatestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryDescription) *string { return v.LatestRestorableDateTime }).(pulumi.StringPtrOutput)
}

// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
func (o PointInTimeRecoveryDescriptionOutput) PointInTimeRecoveryStatus() PointInTimeRecoveryStatusEnumValuePtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryDescription) *PointInTimeRecoveryStatusEnumValue {
		return v.PointInTimeRecoveryStatus
	}).(PointInTimeRecoveryStatusEnumValuePtrOutput)
}

type PointInTimeRecoveryDescriptionPtrOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoveryDescription)(nil)).Elem()
}

func (o PointInTimeRecoveryDescriptionPtrOutput) ToPointInTimeRecoveryDescriptionPtrOutput() PointInTimeRecoveryDescriptionPtrOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionPtrOutput) ToPointInTimeRecoveryDescriptionPtrOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionPtrOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionPtrOutput) Elem() PointInTimeRecoveryDescriptionOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescription) PointInTimeRecoveryDescription {
		if v != nil {
			return *v
		}
		var ret PointInTimeRecoveryDescription
		return ret
	}).(PointInTimeRecoveryDescriptionOutput)
}

// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
func (o PointInTimeRecoveryDescriptionPtrOutput) EarliestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescription) *string {
		if v == nil {
			return nil
		}
		return v.EarliestRestorableDateTime
	}).(pulumi.StringPtrOutput)
}

// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
func (o PointInTimeRecoveryDescriptionPtrOutput) LatestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescription) *string {
		if v == nil {
			return nil
		}
		return v.LatestRestorableDateTime
	}).(pulumi.StringPtrOutput)
}

// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
func (o PointInTimeRecoveryDescriptionPtrOutput) PointInTimeRecoveryStatus() PointInTimeRecoveryStatusEnumValuePtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescription) *PointInTimeRecoveryStatusEnumValue {
		if v == nil {
			return nil
		}
		return v.PointInTimeRecoveryStatus
	}).(PointInTimeRecoveryStatusEnumValuePtrOutput)
}

// Definition of PointInTimeRecoveryDescription
type PointInTimeRecoveryDescriptionResponse struct {
	// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
	EarliestRestorableDateTime *string `pulumi:"earliestRestorableDateTime"`
	// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
	LatestRestorableDateTime *string `pulumi:"latestRestorableDateTime"`
	// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
	PointInTimeRecoveryStatus *PointInTimeRecoveryStatusEnumValueResponse `pulumi:"pointInTimeRecoveryStatus"`
}

// Definition of PointInTimeRecoveryDescription
type PointInTimeRecoveryDescriptionResponseOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoveryDescriptionResponse)(nil)).Elem()
}

func (o PointInTimeRecoveryDescriptionResponseOutput) ToPointInTimeRecoveryDescriptionResponseOutput() PointInTimeRecoveryDescriptionResponseOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionResponseOutput) ToPointInTimeRecoveryDescriptionResponseOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionResponseOutput {
	return o
}

// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
func (o PointInTimeRecoveryDescriptionResponseOutput) EarliestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryDescriptionResponse) *string { return v.EarliestRestorableDateTime }).(pulumi.StringPtrOutput)
}

// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
func (o PointInTimeRecoveryDescriptionResponseOutput) LatestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryDescriptionResponse) *string { return v.LatestRestorableDateTime }).(pulumi.StringPtrOutput)
}

// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
func (o PointInTimeRecoveryDescriptionResponseOutput) PointInTimeRecoveryStatus() PointInTimeRecoveryStatusEnumValueResponsePtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryDescriptionResponse) *PointInTimeRecoveryStatusEnumValueResponse {
		return v.PointInTimeRecoveryStatus
	}).(PointInTimeRecoveryStatusEnumValueResponsePtrOutput)
}

type PointInTimeRecoveryDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoveryDescriptionResponse)(nil)).Elem()
}

func (o PointInTimeRecoveryDescriptionResponsePtrOutput) ToPointInTimeRecoveryDescriptionResponsePtrOutput() PointInTimeRecoveryDescriptionResponsePtrOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionResponsePtrOutput) ToPointInTimeRecoveryDescriptionResponsePtrOutputWithContext(ctx context.Context) PointInTimeRecoveryDescriptionResponsePtrOutput {
	return o
}

func (o PointInTimeRecoveryDescriptionResponsePtrOutput) Elem() PointInTimeRecoveryDescriptionResponseOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescriptionResponse) PointInTimeRecoveryDescriptionResponse {
		if v != nil {
			return *v
		}
		var ret PointInTimeRecoveryDescriptionResponse
		return ret
	}).(PointInTimeRecoveryDescriptionResponseOutput)
}

// <p>Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. </p>
func (o PointInTimeRecoveryDescriptionResponsePtrOutput) EarliestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.EarliestRestorableDateTime
	}).(pulumi.StringPtrOutput)
}

// <p> <code>LatestRestorableDateTime</code> is typically 5 minutes before the current time. </p>
func (o PointInTimeRecoveryDescriptionResponsePtrOutput) LatestRestorableDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LatestRestorableDateTime
	}).(pulumi.StringPtrOutput)
}

// <p>The current state of point in time recovery:</p> <ul> <li> <p> <code>ENABLED</code> - Point in time recovery is enabled.</p> </li> <li> <p> <code>DISABLED</code> - Point in time recovery is disabled.</p> </li> </ul>
func (o PointInTimeRecoveryDescriptionResponsePtrOutput) PointInTimeRecoveryStatus() PointInTimeRecoveryStatusEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryDescriptionResponse) *PointInTimeRecoveryStatusEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.PointInTimeRecoveryStatus
	}).(PointInTimeRecoveryStatusEnumValueResponsePtrOutput)
}

// Definition of PointInTimeRecoverySpecification
type PointInTimeRecoverySpecification struct {
	// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
	PointInTimeRecoveryEnabled *bool `pulumi:"pointInTimeRecoveryEnabled"`
}

// PointInTimeRecoverySpecificationInput is an input type that accepts PointInTimeRecoverySpecificationArgs and PointInTimeRecoverySpecificationOutput values.
// You can construct a concrete instance of `PointInTimeRecoverySpecificationInput` via:
//
//	PointInTimeRecoverySpecificationArgs{...}
type PointInTimeRecoverySpecificationInput interface {
	pulumi.Input

	ToPointInTimeRecoverySpecificationOutput() PointInTimeRecoverySpecificationOutput
	ToPointInTimeRecoverySpecificationOutputWithContext(context.Context) PointInTimeRecoverySpecificationOutput
}

// Definition of PointInTimeRecoverySpecification
type PointInTimeRecoverySpecificationArgs struct {
	// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
	PointInTimeRecoveryEnabled pulumi.BoolPtrInput `pulumi:"pointInTimeRecoveryEnabled"`
}

func (PointInTimeRecoverySpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoverySpecification)(nil)).Elem()
}

func (i PointInTimeRecoverySpecificationArgs) ToPointInTimeRecoverySpecificationOutput() PointInTimeRecoverySpecificationOutput {
	return i.ToPointInTimeRecoverySpecificationOutputWithContext(context.Background())
}

func (i PointInTimeRecoverySpecificationArgs) ToPointInTimeRecoverySpecificationOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoverySpecificationOutput)
}

func (i PointInTimeRecoverySpecificationArgs) ToPointInTimeRecoverySpecificationPtrOutput() PointInTimeRecoverySpecificationPtrOutput {
	return i.ToPointInTimeRecoverySpecificationPtrOutputWithContext(context.Background())
}

func (i PointInTimeRecoverySpecificationArgs) ToPointInTimeRecoverySpecificationPtrOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoverySpecificationOutput).ToPointInTimeRecoverySpecificationPtrOutputWithContext(ctx)
}

// PointInTimeRecoverySpecificationPtrInput is an input type that accepts PointInTimeRecoverySpecificationArgs, PointInTimeRecoverySpecificationPtr and PointInTimeRecoverySpecificationPtrOutput values.
// You can construct a concrete instance of `PointInTimeRecoverySpecificationPtrInput` via:
//
//	        PointInTimeRecoverySpecificationArgs{...}
//
//	or:
//
//	        nil
type PointInTimeRecoverySpecificationPtrInput interface {
	pulumi.Input

	ToPointInTimeRecoverySpecificationPtrOutput() PointInTimeRecoverySpecificationPtrOutput
	ToPointInTimeRecoverySpecificationPtrOutputWithContext(context.Context) PointInTimeRecoverySpecificationPtrOutput
}

type pointInTimeRecoverySpecificationPtrType PointInTimeRecoverySpecificationArgs

func PointInTimeRecoverySpecificationPtr(v *PointInTimeRecoverySpecificationArgs) PointInTimeRecoverySpecificationPtrInput {
	return (*pointInTimeRecoverySpecificationPtrType)(v)
}

func (*pointInTimeRecoverySpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoverySpecification)(nil)).Elem()
}

func (i *pointInTimeRecoverySpecificationPtrType) ToPointInTimeRecoverySpecificationPtrOutput() PointInTimeRecoverySpecificationPtrOutput {
	return i.ToPointInTimeRecoverySpecificationPtrOutputWithContext(context.Background())
}

func (i *pointInTimeRecoverySpecificationPtrType) ToPointInTimeRecoverySpecificationPtrOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoverySpecificationPtrOutput)
}

// Definition of PointInTimeRecoverySpecification
type PointInTimeRecoverySpecificationOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoverySpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoverySpecification)(nil)).Elem()
}

func (o PointInTimeRecoverySpecificationOutput) ToPointInTimeRecoverySpecificationOutput() PointInTimeRecoverySpecificationOutput {
	return o
}

func (o PointInTimeRecoverySpecificationOutput) ToPointInTimeRecoverySpecificationOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationOutput {
	return o
}

func (o PointInTimeRecoverySpecificationOutput) ToPointInTimeRecoverySpecificationPtrOutput() PointInTimeRecoverySpecificationPtrOutput {
	return o.ToPointInTimeRecoverySpecificationPtrOutputWithContext(context.Background())
}

func (o PointInTimeRecoverySpecificationOutput) ToPointInTimeRecoverySpecificationPtrOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointInTimeRecoverySpecification) *PointInTimeRecoverySpecification {
		return &v
	}).(PointInTimeRecoverySpecificationPtrOutput)
}

// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
func (o PointInTimeRecoverySpecificationOutput) PointInTimeRecoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoverySpecification) *bool { return v.PointInTimeRecoveryEnabled }).(pulumi.BoolPtrOutput)
}

type PointInTimeRecoverySpecificationPtrOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoverySpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoverySpecification)(nil)).Elem()
}

func (o PointInTimeRecoverySpecificationPtrOutput) ToPointInTimeRecoverySpecificationPtrOutput() PointInTimeRecoverySpecificationPtrOutput {
	return o
}

func (o PointInTimeRecoverySpecificationPtrOutput) ToPointInTimeRecoverySpecificationPtrOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationPtrOutput {
	return o
}

func (o PointInTimeRecoverySpecificationPtrOutput) Elem() PointInTimeRecoverySpecificationOutput {
	return o.ApplyT(func(v *PointInTimeRecoverySpecification) PointInTimeRecoverySpecification {
		if v != nil {
			return *v
		}
		var ret PointInTimeRecoverySpecification
		return ret
	}).(PointInTimeRecoverySpecificationOutput)
}

// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
func (o PointInTimeRecoverySpecificationPtrOutput) PointInTimeRecoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoverySpecification) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTimeRecoveryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of PointInTimeRecoverySpecification
type PointInTimeRecoverySpecificationResponse struct {
	// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
	PointInTimeRecoveryEnabled *bool `pulumi:"pointInTimeRecoveryEnabled"`
}

// Definition of PointInTimeRecoverySpecification
type PointInTimeRecoverySpecificationResponseOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoverySpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoverySpecificationResponse)(nil)).Elem()
}

func (o PointInTimeRecoverySpecificationResponseOutput) ToPointInTimeRecoverySpecificationResponseOutput() PointInTimeRecoverySpecificationResponseOutput {
	return o
}

func (o PointInTimeRecoverySpecificationResponseOutput) ToPointInTimeRecoverySpecificationResponseOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationResponseOutput {
	return o
}

// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
func (o PointInTimeRecoverySpecificationResponseOutput) PointInTimeRecoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoverySpecificationResponse) *bool { return v.PointInTimeRecoveryEnabled }).(pulumi.BoolPtrOutput)
}

type PointInTimeRecoverySpecificationResponsePtrOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoverySpecificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoverySpecificationResponse)(nil)).Elem()
}

func (o PointInTimeRecoverySpecificationResponsePtrOutput) ToPointInTimeRecoverySpecificationResponsePtrOutput() PointInTimeRecoverySpecificationResponsePtrOutput {
	return o
}

func (o PointInTimeRecoverySpecificationResponsePtrOutput) ToPointInTimeRecoverySpecificationResponsePtrOutputWithContext(ctx context.Context) PointInTimeRecoverySpecificationResponsePtrOutput {
	return o
}

func (o PointInTimeRecoverySpecificationResponsePtrOutput) Elem() PointInTimeRecoverySpecificationResponseOutput {
	return o.ApplyT(func(v *PointInTimeRecoverySpecificationResponse) PointInTimeRecoverySpecificationResponse {
		if v != nil {
			return *v
		}
		var ret PointInTimeRecoverySpecificationResponse
		return ret
	}).(PointInTimeRecoverySpecificationResponseOutput)
}

// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
func (o PointInTimeRecoverySpecificationResponsePtrOutput) PointInTimeRecoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoverySpecificationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTimeRecoveryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of PointInTimeRecoveryStatusEnumValue
type PointInTimeRecoveryStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PointInTimeRecoveryStatusEnumValueInput is an input type that accepts PointInTimeRecoveryStatusEnumValueArgs and PointInTimeRecoveryStatusEnumValueOutput values.
// You can construct a concrete instance of `PointInTimeRecoveryStatusEnumValueInput` via:
//
//	PointInTimeRecoveryStatusEnumValueArgs{...}
type PointInTimeRecoveryStatusEnumValueInput interface {
	pulumi.Input

	ToPointInTimeRecoveryStatusEnumValueOutput() PointInTimeRecoveryStatusEnumValueOutput
	ToPointInTimeRecoveryStatusEnumValueOutputWithContext(context.Context) PointInTimeRecoveryStatusEnumValueOutput
}

// Definition of PointInTimeRecoveryStatusEnumValue
type PointInTimeRecoveryStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PointInTimeRecoveryStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoveryStatusEnumValue)(nil)).Elem()
}

func (i PointInTimeRecoveryStatusEnumValueArgs) ToPointInTimeRecoveryStatusEnumValueOutput() PointInTimeRecoveryStatusEnumValueOutput {
	return i.ToPointInTimeRecoveryStatusEnumValueOutputWithContext(context.Background())
}

func (i PointInTimeRecoveryStatusEnumValueArgs) ToPointInTimeRecoveryStatusEnumValueOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoveryStatusEnumValueOutput)
}

func (i PointInTimeRecoveryStatusEnumValueArgs) ToPointInTimeRecoveryStatusEnumValuePtrOutput() PointInTimeRecoveryStatusEnumValuePtrOutput {
	return i.ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i PointInTimeRecoveryStatusEnumValueArgs) ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoveryStatusEnumValueOutput).ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(ctx)
}

// PointInTimeRecoveryStatusEnumValuePtrInput is an input type that accepts PointInTimeRecoveryStatusEnumValueArgs, PointInTimeRecoveryStatusEnumValuePtr and PointInTimeRecoveryStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `PointInTimeRecoveryStatusEnumValuePtrInput` via:
//
//	        PointInTimeRecoveryStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type PointInTimeRecoveryStatusEnumValuePtrInput interface {
	pulumi.Input

	ToPointInTimeRecoveryStatusEnumValuePtrOutput() PointInTimeRecoveryStatusEnumValuePtrOutput
	ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(context.Context) PointInTimeRecoveryStatusEnumValuePtrOutput
}

type pointInTimeRecoveryStatusEnumValuePtrType PointInTimeRecoveryStatusEnumValueArgs

func PointInTimeRecoveryStatusEnumValuePtr(v *PointInTimeRecoveryStatusEnumValueArgs) PointInTimeRecoveryStatusEnumValuePtrInput {
	return (*pointInTimeRecoveryStatusEnumValuePtrType)(v)
}

func (*pointInTimeRecoveryStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoveryStatusEnumValue)(nil)).Elem()
}

func (i *pointInTimeRecoveryStatusEnumValuePtrType) ToPointInTimeRecoveryStatusEnumValuePtrOutput() PointInTimeRecoveryStatusEnumValuePtrOutput {
	return i.ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *pointInTimeRecoveryStatusEnumValuePtrType) ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointInTimeRecoveryStatusEnumValuePtrOutput)
}

// Definition of PointInTimeRecoveryStatusEnumValue
type PointInTimeRecoveryStatusEnumValueOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoveryStatusEnumValue)(nil)).Elem()
}

func (o PointInTimeRecoveryStatusEnumValueOutput) ToPointInTimeRecoveryStatusEnumValueOutput() PointInTimeRecoveryStatusEnumValueOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValueOutput) ToPointInTimeRecoveryStatusEnumValueOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValueOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValueOutput) ToPointInTimeRecoveryStatusEnumValuePtrOutput() PointInTimeRecoveryStatusEnumValuePtrOutput {
	return o.ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o PointInTimeRecoveryStatusEnumValueOutput) ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointInTimeRecoveryStatusEnumValue) *PointInTimeRecoveryStatusEnumValue {
		return &v
	}).(PointInTimeRecoveryStatusEnumValuePtrOutput)
}

// Property value
func (o PointInTimeRecoveryStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PointInTimeRecoveryStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoveryStatusEnumValue)(nil)).Elem()
}

func (o PointInTimeRecoveryStatusEnumValuePtrOutput) ToPointInTimeRecoveryStatusEnumValuePtrOutput() PointInTimeRecoveryStatusEnumValuePtrOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValuePtrOutput) ToPointInTimeRecoveryStatusEnumValuePtrOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValuePtrOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValuePtrOutput) Elem() PointInTimeRecoveryStatusEnumValueOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryStatusEnumValue) PointInTimeRecoveryStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret PointInTimeRecoveryStatusEnumValue
		return ret
	}).(PointInTimeRecoveryStatusEnumValueOutput)
}

// Property value
func (o PointInTimeRecoveryStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PointInTimeRecoveryStatusEnumValue
type PointInTimeRecoveryStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PointInTimeRecoveryStatusEnumValue
type PointInTimeRecoveryStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointInTimeRecoveryStatusEnumValueResponse)(nil)).Elem()
}

func (o PointInTimeRecoveryStatusEnumValueResponseOutput) ToPointInTimeRecoveryStatusEnumValueResponseOutput() PointInTimeRecoveryStatusEnumValueResponseOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValueResponseOutput) ToPointInTimeRecoveryStatusEnumValueResponseOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o PointInTimeRecoveryStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointInTimeRecoveryStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PointInTimeRecoveryStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PointInTimeRecoveryStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointInTimeRecoveryStatusEnumValueResponse)(nil)).Elem()
}

func (o PointInTimeRecoveryStatusEnumValueResponsePtrOutput) ToPointInTimeRecoveryStatusEnumValueResponsePtrOutput() PointInTimeRecoveryStatusEnumValueResponsePtrOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValueResponsePtrOutput) ToPointInTimeRecoveryStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) PointInTimeRecoveryStatusEnumValueResponsePtrOutput {
	return o
}

func (o PointInTimeRecoveryStatusEnumValueResponsePtrOutput) Elem() PointInTimeRecoveryStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryStatusEnumValueResponse) PointInTimeRecoveryStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PointInTimeRecoveryStatusEnumValueResponse
		return ret
	}).(PointInTimeRecoveryStatusEnumValueResponseOutput)
}

// Property value
func (o PointInTimeRecoveryStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointInTimeRecoveryStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Policy
type Policy struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName *string `pulumi:"policyName"`
}

// PolicyInput is an input type that accepts PolicyArgs and PolicyOutput values.
// You can construct a concrete instance of `PolicyInput` via:
//
//	PolicyArgs{...}
type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(context.Context) PolicyOutput
}

// Definition of Policy
type PolicyArgs struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument pulumi.Input `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy)(nil)).Elem()
}

func (i PolicyArgs) ToPolicyOutput() PolicyOutput {
	return i.ToPolicyOutputWithContext(context.Background())
}

func (i PolicyArgs) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOutput)
}

// PolicyArrayInput is an input type that accepts PolicyArray and PolicyArrayOutput values.
// You can construct a concrete instance of `PolicyArrayInput` via:
//
//	PolicyArray{ PolicyArgs{...} }
type PolicyArrayInput interface {
	pulumi.Input

	ToPolicyArrayOutput() PolicyArrayOutput
	ToPolicyArrayOutputWithContext(context.Context) PolicyArrayOutput
}

type PolicyArray []PolicyInput

func (PolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy)(nil)).Elem()
}

func (i PolicyArray) ToPolicyArrayOutput() PolicyArrayOutput {
	return i.ToPolicyArrayOutputWithContext(context.Background())
}

func (i PolicyArray) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyArrayOutput)
}

// Definition of Policy
type PolicyOutput struct{ *pulumi.OutputState }

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy)(nil)).Elem()
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
func (o PolicyOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v Policy) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// The friendly name (not ARN) identifying the policy.
func (o PolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Policy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type PolicyArrayOutput struct{ *pulumi.OutputState }

func (PolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Policy)(nil)).Elem()
}

func (o PolicyArrayOutput) ToPolicyArrayOutput() PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) Index(i pulumi.IntInput) PolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Policy {
		return vs[0].([]Policy)[vs[1].(int)]
	}).(PolicyOutput)
}

// Definition of Policy
type PolicyResponse struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName *string `pulumi:"policyName"`
}

// Definition of Policy
type PolicyResponseOutput struct{ *pulumi.OutputState }

func (PolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyResponse)(nil)).Elem()
}

func (o PolicyResponseOutput) ToPolicyResponseOutput() PolicyResponseOutput {
	return o
}

func (o PolicyResponseOutput) ToPolicyResponseOutputWithContext(ctx context.Context) PolicyResponseOutput {
	return o
}

// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
func (o PolicyResponseOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyResponse) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// The friendly name (not ARN) identifying the policy.
func (o PolicyResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type PolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyResponse)(nil)).Elem()
}

func (o PolicyResponseArrayOutput) ToPolicyResponseArrayOutput() PolicyResponseArrayOutput {
	return o
}

func (o PolicyResponseArrayOutput) ToPolicyResponseArrayOutputWithContext(ctx context.Context) PolicyResponseArrayOutput {
	return o
}

func (o PolicyResponseArrayOutput) Index(i pulumi.IntInput) PolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyResponse {
		return vs[0].([]PolicyResponse)[vs[1].(int)]
	}).(PolicyResponseOutput)
}

// Definition of Port
type Port struct {
	// Access Direction for Protocol of the Instance(inbound/outbound).
	AccessDirection *string `pulumi:"accessDirection"`
	// Access From Protocol of the Instance.
	AccessFrom *string `pulumi:"accessFrom"`
	// Access Type Protocol of the Instance.
	AccessType *string `pulumi:"accessType"`
	// cidr List Aliases
	CidrListAliases []string `pulumi:"cidrListAliases"`
	// Property cidrs
	Cidrs []string `pulumi:"cidrs"`
	// CommonName for Protocol of the Instance.
	CommonName *string `pulumi:"commonName"`
	// From Port of the Instance.
	FromPort *int `pulumi:"fromPort"`
	// IPv6 Cidrs
	Ipv6Cidrs []string `pulumi:"ipv6Cidrs"`
	// Port Protocol of the Instance.
	Protocol *string `pulumi:"protocol"`
	// To Port of the Instance.
	ToPort *int `pulumi:"toPort"`
}

// PortInput is an input type that accepts PortArgs and PortOutput values.
// You can construct a concrete instance of `PortInput` via:
//
//	PortArgs{...}
type PortInput interface {
	pulumi.Input

	ToPortOutput() PortOutput
	ToPortOutputWithContext(context.Context) PortOutput
}

// Definition of Port
type PortArgs struct {
	// Access Direction for Protocol of the Instance(inbound/outbound).
	AccessDirection pulumi.StringPtrInput `pulumi:"accessDirection"`
	// Access From Protocol of the Instance.
	AccessFrom pulumi.StringPtrInput `pulumi:"accessFrom"`
	// Access Type Protocol of the Instance.
	AccessType pulumi.StringPtrInput `pulumi:"accessType"`
	// cidr List Aliases
	CidrListAliases pulumi.StringArrayInput `pulumi:"cidrListAliases"`
	// Property cidrs
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// CommonName for Protocol of the Instance.
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// From Port of the Instance.
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// IPv6 Cidrs
	Ipv6Cidrs pulumi.StringArrayInput `pulumi:"ipv6Cidrs"`
	// Port Protocol of the Instance.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// To Port of the Instance.
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (PortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Port)(nil)).Elem()
}

func (i PortArgs) ToPortOutput() PortOutput {
	return i.ToPortOutputWithContext(context.Background())
}

func (i PortArgs) ToPortOutputWithContext(ctx context.Context) PortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortOutput)
}

// PortArrayInput is an input type that accepts PortArray and PortArrayOutput values.
// You can construct a concrete instance of `PortArrayInput` via:
//
//	PortArray{ PortArgs{...} }
type PortArrayInput interface {
	pulumi.Input

	ToPortArrayOutput() PortArrayOutput
	ToPortArrayOutputWithContext(context.Context) PortArrayOutput
}

type PortArray []PortInput

func (PortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Port)(nil)).Elem()
}

func (i PortArray) ToPortArrayOutput() PortArrayOutput {
	return i.ToPortArrayOutputWithContext(context.Background())
}

func (i PortArray) ToPortArrayOutputWithContext(ctx context.Context) PortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortArrayOutput)
}

// Definition of Port
type PortOutput struct{ *pulumi.OutputState }

func (PortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Port)(nil)).Elem()
}

func (o PortOutput) ToPortOutput() PortOutput {
	return o
}

func (o PortOutput) ToPortOutputWithContext(ctx context.Context) PortOutput {
	return o
}

// Access Direction for Protocol of the Instance(inbound/outbound).
func (o PortOutput) AccessDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Port) *string { return v.AccessDirection }).(pulumi.StringPtrOutput)
}

// Access From Protocol of the Instance.
func (o PortOutput) AccessFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Port) *string { return v.AccessFrom }).(pulumi.StringPtrOutput)
}

// Access Type Protocol of the Instance.
func (o PortOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Port) *string { return v.AccessType }).(pulumi.StringPtrOutput)
}

// cidr List Aliases
func (o PortOutput) CidrListAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Port) []string { return v.CidrListAliases }).(pulumi.StringArrayOutput)
}

// Property cidrs
func (o PortOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Port) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// CommonName for Protocol of the Instance.
func (o PortOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Port) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// From Port of the Instance.
func (o PortOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Port) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// IPv6 Cidrs
func (o PortOutput) Ipv6Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Port) []string { return v.Ipv6Cidrs }).(pulumi.StringArrayOutput)
}

// Port Protocol of the Instance.
func (o PortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Port) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// To Port of the Instance.
func (o PortOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Port) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type PortArrayOutput struct{ *pulumi.OutputState }

func (PortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Port)(nil)).Elem()
}

func (o PortArrayOutput) ToPortArrayOutput() PortArrayOutput {
	return o
}

func (o PortArrayOutput) ToPortArrayOutputWithContext(ctx context.Context) PortArrayOutput {
	return o
}

func (o PortArrayOutput) Index(i pulumi.IntInput) PortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Port {
		return vs[0].([]Port)[vs[1].(int)]
	}).(PortOutput)
}

// Definition of PortMapping
type PortMapping struct {
	// The application protocol that's used for the port mapping. This parameter only applies to Service Connect. We recommend that you set this parameter to be consistent with the protocol that your application uses. If you set this parameter, Amazon ECS adds protocol-specific connection handling to the Service Connect proxy. If you set this parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and CloudWatch. If you don't set a value for this parameter, then TCP is used. However, Amazon ECS doesn't add protocol-specific telemetry for TCP.  ``appProtocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment. Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	AppProtocol *string `pulumi:"appProtocol"`
	// The port number on the container that's bound to the user-specified or automatically assigned host port. If you use containers in a task with the ``awsvpc`` or ``host`` network mode, specify the exposed ports using ``containerPort``. If you use containers in a task with the ``bridge`` network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see ``hostPort``. Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.
	ContainerPort *int `pulumi:"containerPort"`
	// The port number range on the container that's bound to the dynamically mapped host port range.  The following rules apply when you specify a ``containerPortRange``:  +  You must use either the ``bridge`` network mode or the ``awsvpc`` network mode.  +  This parameter is available for both the EC2 and FARGATElong launch types.  +  This parameter is available for both the Linux and Windows operating systems.  +  The container instance must have at least version 1.67.0 of the container agent and at least version 1.67.0-1 of the ``ecs-init`` package   +  You can specify a maximum of 100 port ranges per container.  +  You do not specify a ``hostPortRange``. The value of the ``hostPortRange`` is set as follows:  +  For containers in a task with the ``awsvpc`` network mode, the ``hostPortRange`` is set to the same value as the ``containerPortRange``. This is a static mapping strategy.  +  For containers in a task with the ``bridge`` network mode, the Amazon ECS agent finds open host ports from the default ephemeral range and passes it to docker to bind them to the container ports.    +  The ``containerPortRange`` valid values are between 1 and 65535.  +  A port can only be included in one port mapping per container.  +  You cannot specify overlapping port ranges.  +  The first port in the range must be less than last port in the range.  +  Docker recommends that you turn off the docker-proxy in the Docker daemon config file when you have a large number of ports. For more information, see [Issue #11185](https://docs.aws.amazon.com/https://github.com/moby/moby/issues/11185) on the Github website. For information about how to turn off the docker-proxy in the Docker daemon config file, see [Docker daemon](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon) in the *Amazon ECS Developer Guide*.   You can call [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html) to view the ``hostPortRange`` which are the host ports that are bound to the container ports.
	ContainerPortRange *string `pulumi:"containerPortRange"`
	// The port number on the container instance to reserve for your container. If you specify a ``containerPortRange``, leave this field empty and the value of the ``hostPort`` is set as follows:  +  For containers in a task with the ``awsvpc`` network mode, the ``hostPort`` is set to the same value as the ``containerPort``. This is a static mapping strategy.  +  For containers in a task with the ``bridge`` network mode, the Amazon ECS agent finds open ports on the host and automatically binds them to the container ports. This is a dynamic mapping strategy.   If you use containers in a task with the ``awsvpc`` or ``host`` network mode, the ``hostPort`` can either be left blank or set to the same value as the ``containerPort``. If you use containers in a task with the ``bridge`` network mode, you can specify a non-reserved host port for your container port mapping, or you can omit the ``hostPort`` (or set it to ``0``) while specifying a ``containerPort`` and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version. The default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under ``/proc/sys/net/ipv4/ip_local_port_range``. If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 (Linux) or 49152 through 65535 (Windows) is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range. The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678-51680. Any host port that was previously specified in a running task is also reserved while the task is running. That is, after a task stops, the host port is released. The current reserved ports are displayed in the ``remainingResources`` of [DescribeContainerInstances](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html) output. A container instance can have up to 100 reserved ports at a time. This number includes the default reserved ports. Automatically assigned ports aren't included in the 100 reserved ports quota.
	HostPort *int `pulumi:"hostPort"`
	// The name that's used for the port mapping. This parameter only applies to Service Connect. This parameter is the name that you use in the ``serviceConnectConfiguration`` of a service. The name can include up to 64 characters. The characters can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	Name *string `pulumi:"name"`
	// The protocol used for the port mapping. Valid values are ``tcp`` and ``udp``. The default is ``tcp``. ``protocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment.
	Protocol *string `pulumi:"protocol"`
}

// PortMappingInput is an input type that accepts PortMappingArgs and PortMappingOutput values.
// You can construct a concrete instance of `PortMappingInput` via:
//
//	PortMappingArgs{...}
type PortMappingInput interface {
	pulumi.Input

	ToPortMappingOutput() PortMappingOutput
	ToPortMappingOutputWithContext(context.Context) PortMappingOutput
}

// Definition of PortMapping
type PortMappingArgs struct {
	// The application protocol that's used for the port mapping. This parameter only applies to Service Connect. We recommend that you set this parameter to be consistent with the protocol that your application uses. If you set this parameter, Amazon ECS adds protocol-specific connection handling to the Service Connect proxy. If you set this parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and CloudWatch. If you don't set a value for this parameter, then TCP is used. However, Amazon ECS doesn't add protocol-specific telemetry for TCP.  ``appProtocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment. Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
	// The port number on the container that's bound to the user-specified or automatically assigned host port. If you use containers in a task with the ``awsvpc`` or ``host`` network mode, specify the exposed ports using ``containerPort``. If you use containers in a task with the ``bridge`` network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see ``hostPort``. Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.
	ContainerPort pulumi.IntPtrInput `pulumi:"containerPort"`
	// The port number range on the container that's bound to the dynamically mapped host port range.  The following rules apply when you specify a ``containerPortRange``:  +  You must use either the ``bridge`` network mode or the ``awsvpc`` network mode.  +  This parameter is available for both the EC2 and FARGATElong launch types.  +  This parameter is available for both the Linux and Windows operating systems.  +  The container instance must have at least version 1.67.0 of the container agent and at least version 1.67.0-1 of the ``ecs-init`` package   +  You can specify a maximum of 100 port ranges per container.  +  You do not specify a ``hostPortRange``. The value of the ``hostPortRange`` is set as follows:  +  For containers in a task with the ``awsvpc`` network mode, the ``hostPortRange`` is set to the same value as the ``containerPortRange``. This is a static mapping strategy.  +  For containers in a task with the ``bridge`` network mode, the Amazon ECS agent finds open host ports from the default ephemeral range and passes it to docker to bind them to the container ports.    +  The ``containerPortRange`` valid values are between 1 and 65535.  +  A port can only be included in one port mapping per container.  +  You cannot specify overlapping port ranges.  +  The first port in the range must be less than last port in the range.  +  Docker recommends that you turn off the docker-proxy in the Docker daemon config file when you have a large number of ports. For more information, see [Issue #11185](https://docs.aws.amazon.com/https://github.com/moby/moby/issues/11185) on the Github website. For information about how to turn off the docker-proxy in the Docker daemon config file, see [Docker daemon](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon) in the *Amazon ECS Developer Guide*.   You can call [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html) to view the ``hostPortRange`` which are the host ports that are bound to the container ports.
	ContainerPortRange pulumi.StringPtrInput `pulumi:"containerPortRange"`
	// The port number on the container instance to reserve for your container. If you specify a ``containerPortRange``, leave this field empty and the value of the ``hostPort`` is set as follows:  +  For containers in a task with the ``awsvpc`` network mode, the ``hostPort`` is set to the same value as the ``containerPort``. This is a static mapping strategy.  +  For containers in a task with the ``bridge`` network mode, the Amazon ECS agent finds open ports on the host and automatically binds them to the container ports. This is a dynamic mapping strategy.   If you use containers in a task with the ``awsvpc`` or ``host`` network mode, the ``hostPort`` can either be left blank or set to the same value as the ``containerPort``. If you use containers in a task with the ``bridge`` network mode, you can specify a non-reserved host port for your container port mapping, or you can omit the ``hostPort`` (or set it to ``0``) while specifying a ``containerPort`` and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version. The default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under ``/proc/sys/net/ipv4/ip_local_port_range``. If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 (Linux) or 49152 through 65535 (Windows) is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range. The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678-51680. Any host port that was previously specified in a running task is also reserved while the task is running. That is, after a task stops, the host port is released. The current reserved ports are displayed in the ``remainingResources`` of [DescribeContainerInstances](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html) output. A container instance can have up to 100 reserved ports at a time. This number includes the default reserved ports. Automatically assigned ports aren't included in the 100 reserved ports quota.
	HostPort pulumi.IntPtrInput `pulumi:"hostPort"`
	// The name that's used for the port mapping. This parameter only applies to Service Connect. This parameter is the name that you use in the ``serviceConnectConfiguration`` of a service. The name can include up to 64 characters. The characters can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The protocol used for the port mapping. Valid values are ``tcp`` and ``udp``. The default is ``tcp``. ``protocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (PortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMapping)(nil)).Elem()
}

func (i PortMappingArgs) ToPortMappingOutput() PortMappingOutput {
	return i.ToPortMappingOutputWithContext(context.Background())
}

func (i PortMappingArgs) ToPortMappingOutputWithContext(ctx context.Context) PortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortMappingOutput)
}

// PortMappingArrayInput is an input type that accepts PortMappingArray and PortMappingArrayOutput values.
// You can construct a concrete instance of `PortMappingArrayInput` via:
//
//	PortMappingArray{ PortMappingArgs{...} }
type PortMappingArrayInput interface {
	pulumi.Input

	ToPortMappingArrayOutput() PortMappingArrayOutput
	ToPortMappingArrayOutputWithContext(context.Context) PortMappingArrayOutput
}

type PortMappingArray []PortMappingInput

func (PortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortMapping)(nil)).Elem()
}

func (i PortMappingArray) ToPortMappingArrayOutput() PortMappingArrayOutput {
	return i.ToPortMappingArrayOutputWithContext(context.Background())
}

func (i PortMappingArray) ToPortMappingArrayOutputWithContext(ctx context.Context) PortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortMappingArrayOutput)
}

// Definition of PortMapping
type PortMappingOutput struct{ *pulumi.OutputState }

func (PortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMapping)(nil)).Elem()
}

func (o PortMappingOutput) ToPortMappingOutput() PortMappingOutput {
	return o
}

func (o PortMappingOutput) ToPortMappingOutputWithContext(ctx context.Context) PortMappingOutput {
	return o
}

// The application protocol that's used for the port mapping. This parameter only applies to Service Connect. We recommend that you set this parameter to be consistent with the protocol that your application uses. If you set this parameter, Amazon ECS adds protocol-specific connection handling to the Service Connect proxy. If you set this parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and CloudWatch. If you don't set a value for this parameter, then TCP is used. However, Amazon ECS doesn't add protocol-specific telemetry for TCP.  “appProtocol“ is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment. Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o PortMappingOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMapping) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The port number on the container that's bound to the user-specified or automatically assigned host port. If you use containers in a task with the “awsvpc“ or “host“ network mode, specify the exposed ports using “containerPort“. If you use containers in a task with the “bridge“ network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see “hostPort“. Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.
func (o PortMappingOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortMapping) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// The port number range on the container that's bound to the dynamically mapped host port range.  The following rules apply when you specify a “containerPortRange“:  +  You must use either the “bridge“ network mode or the “awsvpc“ network mode.  +  This parameter is available for both the EC2 and FARGATElong launch types.  +  This parameter is available for both the Linux and Windows operating systems.  +  The container instance must have at least version 1.67.0 of the container agent and at least version 1.67.0-1 of the “ecs-init“ package   +  You can specify a maximum of 100 port ranges per container.  +  You do not specify a “hostPortRange“. The value of the “hostPortRange“ is set as follows:  +  For containers in a task with the “awsvpc“ network mode, the “hostPortRange“ is set to the same value as the “containerPortRange“. This is a static mapping strategy.  +  For containers in a task with the “bridge“ network mode, the Amazon ECS agent finds open host ports from the default ephemeral range and passes it to docker to bind them to the container ports.    +  The “containerPortRange“ valid values are between 1 and 65535.  +  A port can only be included in one port mapping per container.  +  You cannot specify overlapping port ranges.  +  The first port in the range must be less than last port in the range.  +  Docker recommends that you turn off the docker-proxy in the Docker daemon config file when you have a large number of ports. For more information, see [Issue #11185](https://docs.aws.amazon.com/https://github.com/moby/moby/issues/11185) on the Github website. For information about how to turn off the docker-proxy in the Docker daemon config file, see [Docker daemon](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon) in the *Amazon ECS Developer Guide*.   You can call [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html) to view the “hostPortRange“ which are the host ports that are bound to the container ports.
func (o PortMappingOutput) ContainerPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMapping) *string { return v.ContainerPortRange }).(pulumi.StringPtrOutput)
}

// The port number on the container instance to reserve for your container. If you specify a “containerPortRange“, leave this field empty and the value of the “hostPort“ is set as follows:  +  For containers in a task with the “awsvpc“ network mode, the “hostPort“ is set to the same value as the “containerPort“. This is a static mapping strategy.  +  For containers in a task with the “bridge“ network mode, the Amazon ECS agent finds open ports on the host and automatically binds them to the container ports. This is a dynamic mapping strategy.   If you use containers in a task with the “awsvpc“ or “host“ network mode, the “hostPort“ can either be left blank or set to the same value as the “containerPort“. If you use containers in a task with the “bridge“ network mode, you can specify a non-reserved host port for your container port mapping, or you can omit the “hostPort“ (or set it to “0“) while specifying a “containerPort“ and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version. The default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under “/proc/sys/net/ipv4/ip_local_port_range“. If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 (Linux) or 49152 through 65535 (Windows) is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range. The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678-51680. Any host port that was previously specified in a running task is also reserved while the task is running. That is, after a task stops, the host port is released. The current reserved ports are displayed in the “remainingResources“ of [DescribeContainerInstances](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html) output. A container instance can have up to 100 reserved ports at a time. This number includes the default reserved ports. Automatically assigned ports aren't included in the 100 reserved ports quota.
func (o PortMappingOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortMapping) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

// The name that's used for the port mapping. This parameter only applies to Service Connect. This parameter is the name that you use in the “serviceConnectConfiguration“ of a service. The name can include up to 64 characters. The characters can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o PortMappingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMapping) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol used for the port mapping. Valid values are “tcp“ and “udp“. The default is “tcp“. “protocol“ is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment.
func (o PortMappingOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMapping) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type PortMappingArrayOutput struct{ *pulumi.OutputState }

func (PortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortMapping)(nil)).Elem()
}

func (o PortMappingArrayOutput) ToPortMappingArrayOutput() PortMappingArrayOutput {
	return o
}

func (o PortMappingArrayOutput) ToPortMappingArrayOutputWithContext(ctx context.Context) PortMappingArrayOutput {
	return o
}

func (o PortMappingArrayOutput) Index(i pulumi.IntInput) PortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortMapping {
		return vs[0].([]PortMapping)[vs[1].(int)]
	}).(PortMappingOutput)
}

// Definition of PortMapping
type PortMappingResponse struct {
	// The application protocol that's used for the port mapping. This parameter only applies to Service Connect. We recommend that you set this parameter to be consistent with the protocol that your application uses. If you set this parameter, Amazon ECS adds protocol-specific connection handling to the Service Connect proxy. If you set this parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and CloudWatch. If you don't set a value for this parameter, then TCP is used. However, Amazon ECS doesn't add protocol-specific telemetry for TCP.  ``appProtocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment. Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	AppProtocol *string `pulumi:"appProtocol"`
	// The port number on the container that's bound to the user-specified or automatically assigned host port. If you use containers in a task with the ``awsvpc`` or ``host`` network mode, specify the exposed ports using ``containerPort``. If you use containers in a task with the ``bridge`` network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see ``hostPort``. Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.
	ContainerPort *int `pulumi:"containerPort"`
	// The port number range on the container that's bound to the dynamically mapped host port range.  The following rules apply when you specify a ``containerPortRange``:  +  You must use either the ``bridge`` network mode or the ``awsvpc`` network mode.  +  This parameter is available for both the EC2 and FARGATElong launch types.  +  This parameter is available for both the Linux and Windows operating systems.  +  The container instance must have at least version 1.67.0 of the container agent and at least version 1.67.0-1 of the ``ecs-init`` package   +  You can specify a maximum of 100 port ranges per container.  +  You do not specify a ``hostPortRange``. The value of the ``hostPortRange`` is set as follows:  +  For containers in a task with the ``awsvpc`` network mode, the ``hostPortRange`` is set to the same value as the ``containerPortRange``. This is a static mapping strategy.  +  For containers in a task with the ``bridge`` network mode, the Amazon ECS agent finds open host ports from the default ephemeral range and passes it to docker to bind them to the container ports.    +  The ``containerPortRange`` valid values are between 1 and 65535.  +  A port can only be included in one port mapping per container.  +  You cannot specify overlapping port ranges.  +  The first port in the range must be less than last port in the range.  +  Docker recommends that you turn off the docker-proxy in the Docker daemon config file when you have a large number of ports. For more information, see [Issue #11185](https://docs.aws.amazon.com/https://github.com/moby/moby/issues/11185) on the Github website. For information about how to turn off the docker-proxy in the Docker daemon config file, see [Docker daemon](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon) in the *Amazon ECS Developer Guide*.   You can call [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html) to view the ``hostPortRange`` which are the host ports that are bound to the container ports.
	ContainerPortRange *string `pulumi:"containerPortRange"`
	// The port number on the container instance to reserve for your container. If you specify a ``containerPortRange``, leave this field empty and the value of the ``hostPort`` is set as follows:  +  For containers in a task with the ``awsvpc`` network mode, the ``hostPort`` is set to the same value as the ``containerPort``. This is a static mapping strategy.  +  For containers in a task with the ``bridge`` network mode, the Amazon ECS agent finds open ports on the host and automatically binds them to the container ports. This is a dynamic mapping strategy.   If you use containers in a task with the ``awsvpc`` or ``host`` network mode, the ``hostPort`` can either be left blank or set to the same value as the ``containerPort``. If you use containers in a task with the ``bridge`` network mode, you can specify a non-reserved host port for your container port mapping, or you can omit the ``hostPort`` (or set it to ``0``) while specifying a ``containerPort`` and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version. The default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under ``/proc/sys/net/ipv4/ip_local_port_range``. If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 (Linux) or 49152 through 65535 (Windows) is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range. The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678-51680. Any host port that was previously specified in a running task is also reserved while the task is running. That is, after a task stops, the host port is released. The current reserved ports are displayed in the ``remainingResources`` of [DescribeContainerInstances](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html) output. A container instance can have up to 100 reserved ports at a time. This number includes the default reserved ports. Automatically assigned ports aren't included in the 100 reserved ports quota.
	HostPort *int `pulumi:"hostPort"`
	// The name that's used for the port mapping. This parameter only applies to Service Connect. This parameter is the name that you use in the ``serviceConnectConfiguration`` of a service. The name can include up to 64 characters. The characters can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	Name *string `pulumi:"name"`
	// The protocol used for the port mapping. Valid values are ``tcp`` and ``udp``. The default is ``tcp``. ``protocol`` is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment.
	Protocol *string `pulumi:"protocol"`
}

// Definition of PortMapping
type PortMappingResponseOutput struct{ *pulumi.OutputState }

func (PortMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMappingResponse)(nil)).Elem()
}

func (o PortMappingResponseOutput) ToPortMappingResponseOutput() PortMappingResponseOutput {
	return o
}

func (o PortMappingResponseOutput) ToPortMappingResponseOutputWithContext(ctx context.Context) PortMappingResponseOutput {
	return o
}

// The application protocol that's used for the port mapping. This parameter only applies to Service Connect. We recommend that you set this parameter to be consistent with the protocol that your application uses. If you set this parameter, Amazon ECS adds protocol-specific connection handling to the Service Connect proxy. If you set this parameter, Amazon ECS adds protocol-specific telemetry in the Amazon ECS console and CloudWatch. If you don't set a value for this parameter, then TCP is used. However, Amazon ECS doesn't add protocol-specific telemetry for TCP.  “appProtocol“ is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment. Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o PortMappingResponseOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMappingResponse) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The port number on the container that's bound to the user-specified or automatically assigned host port. If you use containers in a task with the “awsvpc“ or “host“ network mode, specify the exposed ports using “containerPort“. If you use containers in a task with the “bridge“ network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see “hostPort“. Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.
func (o PortMappingResponseOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortMappingResponse) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// The port number range on the container that's bound to the dynamically mapped host port range.  The following rules apply when you specify a “containerPortRange“:  +  You must use either the “bridge“ network mode or the “awsvpc“ network mode.  +  This parameter is available for both the EC2 and FARGATElong launch types.  +  This parameter is available for both the Linux and Windows operating systems.  +  The container instance must have at least version 1.67.0 of the container agent and at least version 1.67.0-1 of the “ecs-init“ package   +  You can specify a maximum of 100 port ranges per container.  +  You do not specify a “hostPortRange“. The value of the “hostPortRange“ is set as follows:  +  For containers in a task with the “awsvpc“ network mode, the “hostPortRange“ is set to the same value as the “containerPortRange“. This is a static mapping strategy.  +  For containers in a task with the “bridge“ network mode, the Amazon ECS agent finds open host ports from the default ephemeral range and passes it to docker to bind them to the container ports.    +  The “containerPortRange“ valid values are between 1 and 65535.  +  A port can only be included in one port mapping per container.  +  You cannot specify overlapping port ranges.  +  The first port in the range must be less than last port in the range.  +  Docker recommends that you turn off the docker-proxy in the Docker daemon config file when you have a large number of ports. For more information, see [Issue #11185](https://docs.aws.amazon.com/https://github.com/moby/moby/issues/11185) on the Github website. For information about how to turn off the docker-proxy in the Docker daemon config file, see [Docker daemon](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bootstrap_container_instance.html#bootstrap_docker_daemon) in the *Amazon ECS Developer Guide*.   You can call [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html) to view the “hostPortRange“ which are the host ports that are bound to the container ports.
func (o PortMappingResponseOutput) ContainerPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMappingResponse) *string { return v.ContainerPortRange }).(pulumi.StringPtrOutput)
}

// The port number on the container instance to reserve for your container. If you specify a “containerPortRange“, leave this field empty and the value of the “hostPort“ is set as follows:  +  For containers in a task with the “awsvpc“ network mode, the “hostPort“ is set to the same value as the “containerPort“. This is a static mapping strategy.  +  For containers in a task with the “bridge“ network mode, the Amazon ECS agent finds open ports on the host and automatically binds them to the container ports. This is a dynamic mapping strategy.   If you use containers in a task with the “awsvpc“ or “host“ network mode, the “hostPort“ can either be left blank or set to the same value as the “containerPort“. If you use containers in a task with the “bridge“ network mode, you can specify a non-reserved host port for your container port mapping, or you can omit the “hostPort“ (or set it to “0“) while specifying a “containerPort“ and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version. The default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under “/proc/sys/net/ipv4/ip_local_port_range“. If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 (Linux) or 49152 through 65535 (Windows) is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range. The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678-51680. Any host port that was previously specified in a running task is also reserved while the task is running. That is, after a task stops, the host port is released. The current reserved ports are displayed in the “remainingResources“ of [DescribeContainerInstances](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html) output. A container instance can have up to 100 reserved ports at a time. This number includes the default reserved ports. Automatically assigned ports aren't included in the 100 reserved ports quota.
func (o PortMappingResponseOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortMappingResponse) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

// The name that's used for the port mapping. This parameter only applies to Service Connect. This parameter is the name that you use in the “serviceConnectConfiguration“ of a service. The name can include up to 64 characters. The characters can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o PortMappingResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMappingResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol used for the port mapping. Valid values are “tcp“ and “udp“. The default is “tcp“. “protocol“ is immutable in a Service Connect service. Updating this field requires a service deletion and redeployment.
func (o PortMappingResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMappingResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type PortMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (PortMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortMappingResponse)(nil)).Elem()
}

func (o PortMappingResponseArrayOutput) ToPortMappingResponseArrayOutput() PortMappingResponseArrayOutput {
	return o
}

func (o PortMappingResponseArrayOutput) ToPortMappingResponseArrayOutputWithContext(ctx context.Context) PortMappingResponseArrayOutput {
	return o
}

func (o PortMappingResponseArrayOutput) Index(i pulumi.IntInput) PortMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortMappingResponse {
		return vs[0].([]PortMappingResponse)[vs[1].(int)]
	}).(PortMappingResponseOutput)
}

// Definition of PortRange
type PortRange struct {
	// Property fromPort
	FromPort *int `pulumi:"fromPort"`
	// Property toPort
	ToPort *int `pulumi:"toPort"`
}

// PortRangeInput is an input type that accepts PortRangeArgs and PortRangeOutput values.
// You can construct a concrete instance of `PortRangeInput` via:
//
//	PortRangeArgs{...}
type PortRangeInput interface {
	pulumi.Input

	ToPortRangeOutput() PortRangeOutput
	ToPortRangeOutputWithContext(context.Context) PortRangeOutput
}

// Definition of PortRange
type PortRangeArgs struct {
	// Property fromPort
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Property toPort
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (PortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortRange)(nil)).Elem()
}

func (i PortRangeArgs) ToPortRangeOutput() PortRangeOutput {
	return i.ToPortRangeOutputWithContext(context.Background())
}

func (i PortRangeArgs) ToPortRangeOutputWithContext(ctx context.Context) PortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortRangeOutput)
}

// PortRangeArrayInput is an input type that accepts PortRangeArray and PortRangeArrayOutput values.
// You can construct a concrete instance of `PortRangeArrayInput` via:
//
//	PortRangeArray{ PortRangeArgs{...} }
type PortRangeArrayInput interface {
	pulumi.Input

	ToPortRangeArrayOutput() PortRangeArrayOutput
	ToPortRangeArrayOutputWithContext(context.Context) PortRangeArrayOutput
}

type PortRangeArray []PortRangeInput

func (PortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortRange)(nil)).Elem()
}

func (i PortRangeArray) ToPortRangeArrayOutput() PortRangeArrayOutput {
	return i.ToPortRangeArrayOutputWithContext(context.Background())
}

func (i PortRangeArray) ToPortRangeArrayOutputWithContext(ctx context.Context) PortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortRangeArrayOutput)
}

// Definition of PortRange
type PortRangeOutput struct{ *pulumi.OutputState }

func (PortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortRange)(nil)).Elem()
}

func (o PortRangeOutput) ToPortRangeOutput() PortRangeOutput {
	return o
}

func (o PortRangeOutput) ToPortRangeOutputWithContext(ctx context.Context) PortRangeOutput {
	return o
}

// Property fromPort
func (o PortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Property toPort
func (o PortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type PortRangeArrayOutput struct{ *pulumi.OutputState }

func (PortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortRange)(nil)).Elem()
}

func (o PortRangeArrayOutput) ToPortRangeArrayOutput() PortRangeArrayOutput {
	return o
}

func (o PortRangeArrayOutput) ToPortRangeArrayOutputWithContext(ctx context.Context) PortRangeArrayOutput {
	return o
}

func (o PortRangeArrayOutput) Index(i pulumi.IntInput) PortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortRange {
		return vs[0].([]PortRange)[vs[1].(int)]
	}).(PortRangeOutput)
}

// Definition of PortRange
type PortRangeResponse struct {
	// Property fromPort
	FromPort *int `pulumi:"fromPort"`
	// Property toPort
	ToPort *int `pulumi:"toPort"`
}

// Definition of PortRange
type PortRangeResponseOutput struct{ *pulumi.OutputState }

func (PortRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortRangeResponse)(nil)).Elem()
}

func (o PortRangeResponseOutput) ToPortRangeResponseOutput() PortRangeResponseOutput {
	return o
}

func (o PortRangeResponseOutput) ToPortRangeResponseOutputWithContext(ctx context.Context) PortRangeResponseOutput {
	return o
}

// Property fromPort
func (o PortRangeResponseOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortRangeResponse) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Property toPort
func (o PortRangeResponseOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortRangeResponse) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type PortRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (PortRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortRangeResponse)(nil)).Elem()
}

func (o PortRangeResponseArrayOutput) ToPortRangeResponseArrayOutput() PortRangeResponseArrayOutput {
	return o
}

func (o PortRangeResponseArrayOutput) ToPortRangeResponseArrayOutputWithContext(ctx context.Context) PortRangeResponseArrayOutput {
	return o
}

func (o PortRangeResponseArrayOutput) Index(i pulumi.IntInput) PortRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortRangeResponse {
		return vs[0].([]PortRangeResponse)[vs[1].(int)]
	}).(PortRangeResponseOutput)
}

// Definition of Port
type PortResponse struct {
	// Access Direction for Protocol of the Instance(inbound/outbound).
	AccessDirection *string `pulumi:"accessDirection"`
	// Access From Protocol of the Instance.
	AccessFrom *string `pulumi:"accessFrom"`
	// Access Type Protocol of the Instance.
	AccessType *string `pulumi:"accessType"`
	// cidr List Aliases
	CidrListAliases []string `pulumi:"cidrListAliases"`
	// Property cidrs
	Cidrs []string `pulumi:"cidrs"`
	// CommonName for Protocol of the Instance.
	CommonName *string `pulumi:"commonName"`
	// From Port of the Instance.
	FromPort *int `pulumi:"fromPort"`
	// IPv6 Cidrs
	Ipv6Cidrs []string `pulumi:"ipv6Cidrs"`
	// Port Protocol of the Instance.
	Protocol *string `pulumi:"protocol"`
	// To Port of the Instance.
	ToPort *int `pulumi:"toPort"`
}

// Definition of Port
type PortResponseOutput struct{ *pulumi.OutputState }

func (PortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortResponse)(nil)).Elem()
}

func (o PortResponseOutput) ToPortResponseOutput() PortResponseOutput {
	return o
}

func (o PortResponseOutput) ToPortResponseOutputWithContext(ctx context.Context) PortResponseOutput {
	return o
}

// Access Direction for Protocol of the Instance(inbound/outbound).
func (o PortResponseOutput) AccessDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortResponse) *string { return v.AccessDirection }).(pulumi.StringPtrOutput)
}

// Access From Protocol of the Instance.
func (o PortResponseOutput) AccessFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortResponse) *string { return v.AccessFrom }).(pulumi.StringPtrOutput)
}

// Access Type Protocol of the Instance.
func (o PortResponseOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortResponse) *string { return v.AccessType }).(pulumi.StringPtrOutput)
}

// cidr List Aliases
func (o PortResponseOutput) CidrListAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortResponse) []string { return v.CidrListAliases }).(pulumi.StringArrayOutput)
}

// Property cidrs
func (o PortResponseOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortResponse) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// CommonName for Protocol of the Instance.
func (o PortResponseOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortResponse) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// From Port of the Instance.
func (o PortResponseOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortResponse) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// IPv6 Cidrs
func (o PortResponseOutput) Ipv6Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortResponse) []string { return v.Ipv6Cidrs }).(pulumi.StringArrayOutput)
}

// Port Protocol of the Instance.
func (o PortResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// To Port of the Instance.
func (o PortResponseOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortResponse) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type PortResponseArrayOutput struct{ *pulumi.OutputState }

func (PortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortResponse)(nil)).Elem()
}

func (o PortResponseArrayOutput) ToPortResponseArrayOutput() PortResponseArrayOutput {
	return o
}

func (o PortResponseArrayOutput) ToPortResponseArrayOutputWithContext(ctx context.Context) PortResponseArrayOutput {
	return o
}

func (o PortResponseArrayOutput) Index(i pulumi.IntInput) PortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortResponse {
		return vs[0].([]PortResponse)[vs[1].(int)]
	}).(PortResponseOutput)
}

// Definition of PortSet
type PortSet struct {
	// Property definition
	Definition []string `pulumi:"definition"`
}

// PortSetInput is an input type that accepts PortSetArgs and PortSetOutput values.
// You can construct a concrete instance of `PortSetInput` via:
//
//	PortSetArgs{...}
type PortSetInput interface {
	pulumi.Input

	ToPortSetOutput() PortSetOutput
	ToPortSetOutputWithContext(context.Context) PortSetOutput
}

// Definition of PortSet
type PortSetArgs struct {
	// Property definition
	Definition pulumi.StringArrayInput `pulumi:"definition"`
}

func (PortSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortSet)(nil)).Elem()
}

func (i PortSetArgs) ToPortSetOutput() PortSetOutput {
	return i.ToPortSetOutputWithContext(context.Background())
}

func (i PortSetArgs) ToPortSetOutputWithContext(ctx context.Context) PortSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortSetOutput)
}

// PortSetMapInput is an input type that accepts PortSetMap and PortSetMapOutput values.
// You can construct a concrete instance of `PortSetMapInput` via:
//
//	PortSetMap{ "key": PortSetArgs{...} }
type PortSetMapInput interface {
	pulumi.Input

	ToPortSetMapOutput() PortSetMapOutput
	ToPortSetMapOutputWithContext(context.Context) PortSetMapOutput
}

type PortSetMap map[string]PortSetInput

func (PortSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PortSet)(nil)).Elem()
}

func (i PortSetMap) ToPortSetMapOutput() PortSetMapOutput {
	return i.ToPortSetMapOutputWithContext(context.Background())
}

func (i PortSetMap) ToPortSetMapOutputWithContext(ctx context.Context) PortSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortSetMapOutput)
}

// Definition of PortSet
type PortSetOutput struct{ *pulumi.OutputState }

func (PortSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortSet)(nil)).Elem()
}

func (o PortSetOutput) ToPortSetOutput() PortSetOutput {
	return o
}

func (o PortSetOutput) ToPortSetOutputWithContext(ctx context.Context) PortSetOutput {
	return o
}

// Property definition
func (o PortSetOutput) Definition() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortSet) []string { return v.Definition }).(pulumi.StringArrayOutput)
}

type PortSetMapOutput struct{ *pulumi.OutputState }

func (PortSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PortSet)(nil)).Elem()
}

func (o PortSetMapOutput) ToPortSetMapOutput() PortSetMapOutput {
	return o
}

func (o PortSetMapOutput) ToPortSetMapOutputWithContext(ctx context.Context) PortSetMapOutput {
	return o
}

func (o PortSetMapOutput) MapIndex(k pulumi.StringInput) PortSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PortSet {
		return vs[0].(map[string]PortSet)[vs[1].(string)]
	}).(PortSetOutput)
}

// Definition of PortSet
type PortSetResponse struct {
	// Property definition
	Definition []string `pulumi:"definition"`
}

// Definition of PortSet
type PortSetResponseOutput struct{ *pulumi.OutputState }

func (PortSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortSetResponse)(nil)).Elem()
}

func (o PortSetResponseOutput) ToPortSetResponseOutput() PortSetResponseOutput {
	return o
}

func (o PortSetResponseOutput) ToPortSetResponseOutputWithContext(ctx context.Context) PortSetResponseOutput {
	return o
}

// Property definition
func (o PortSetResponseOutput) Definition() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PortSetResponse) []string { return v.Definition }).(pulumi.StringArrayOutput)
}

type PortSetResponseMapOutput struct{ *pulumi.OutputState }

func (PortSetResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PortSetResponse)(nil)).Elem()
}

func (o PortSetResponseMapOutput) ToPortSetResponseMapOutput() PortSetResponseMapOutput {
	return o
}

func (o PortSetResponseMapOutput) ToPortSetResponseMapOutputWithContext(ctx context.Context) PortSetResponseMapOutput {
	return o
}

func (o PortSetResponseMapOutput) MapIndex(k pulumi.StringInput) PortSetResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PortSetResponse {
		return vs[0].(map[string]PortSetResponse)[vs[1].(string)]
	}).(PortSetResponseOutput)
}

// Definition of PrefixListId
type PrefixListId struct {
	// <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
	Description *string `pulumi:"description"`
	// <p>The ID of the prefix.</p>
	PrefixListId *string `pulumi:"prefixListId"`
}

// PrefixListIdInput is an input type that accepts PrefixListIdArgs and PrefixListIdOutput values.
// You can construct a concrete instance of `PrefixListIdInput` via:
//
//	PrefixListIdArgs{...}
type PrefixListIdInput interface {
	pulumi.Input

	ToPrefixListIdOutput() PrefixListIdOutput
	ToPrefixListIdOutputWithContext(context.Context) PrefixListIdOutput
}

// Definition of PrefixListId
type PrefixListIdArgs struct {
	// <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <p>The ID of the prefix.</p>
	PrefixListId pulumi.StringPtrInput `pulumi:"prefixListId"`
}

func (PrefixListIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListId)(nil)).Elem()
}

func (i PrefixListIdArgs) ToPrefixListIdOutput() PrefixListIdOutput {
	return i.ToPrefixListIdOutputWithContext(context.Background())
}

func (i PrefixListIdArgs) ToPrefixListIdOutputWithContext(ctx context.Context) PrefixListIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListIdOutput)
}

// PrefixListIdArrayInput is an input type that accepts PrefixListIdArray and PrefixListIdArrayOutput values.
// You can construct a concrete instance of `PrefixListIdArrayInput` via:
//
//	PrefixListIdArray{ PrefixListIdArgs{...} }
type PrefixListIdArrayInput interface {
	pulumi.Input

	ToPrefixListIdArrayOutput() PrefixListIdArrayOutput
	ToPrefixListIdArrayOutputWithContext(context.Context) PrefixListIdArrayOutput
}

type PrefixListIdArray []PrefixListIdInput

func (PrefixListIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListId)(nil)).Elem()
}

func (i PrefixListIdArray) ToPrefixListIdArrayOutput() PrefixListIdArrayOutput {
	return i.ToPrefixListIdArrayOutputWithContext(context.Background())
}

func (i PrefixListIdArray) ToPrefixListIdArrayOutputWithContext(ctx context.Context) PrefixListIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListIdArrayOutput)
}

// Definition of PrefixListId
type PrefixListIdOutput struct{ *pulumi.OutputState }

func (PrefixListIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListId)(nil)).Elem()
}

func (o PrefixListIdOutput) ToPrefixListIdOutput() PrefixListIdOutput {
	return o
}

func (o PrefixListIdOutput) ToPrefixListIdOutputWithContext(ctx context.Context) PrefixListIdOutput {
	return o
}

// <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
func (o PrefixListIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListId) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The ID of the prefix.</p>
func (o PrefixListIdOutput) PrefixListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListId) *string { return v.PrefixListId }).(pulumi.StringPtrOutput)
}

type PrefixListIdArrayOutput struct{ *pulumi.OutputState }

func (PrefixListIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListId)(nil)).Elem()
}

func (o PrefixListIdArrayOutput) ToPrefixListIdArrayOutput() PrefixListIdArrayOutput {
	return o
}

func (o PrefixListIdArrayOutput) ToPrefixListIdArrayOutputWithContext(ctx context.Context) PrefixListIdArrayOutput {
	return o
}

func (o PrefixListIdArrayOutput) Index(i pulumi.IntInput) PrefixListIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListId {
		return vs[0].([]PrefixListId)[vs[1].(int)]
	}).(PrefixListIdOutput)
}

// Definition of PrefixListId
type PrefixListIdResponse struct {
	// <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
	Description *string `pulumi:"description"`
	// <p>The ID of the prefix.</p>
	PrefixListId *string `pulumi:"prefixListId"`
}

// Definition of PrefixListId
type PrefixListIdResponseOutput struct{ *pulumi.OutputState }

func (PrefixListIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListIdResponse)(nil)).Elem()
}

func (o PrefixListIdResponseOutput) ToPrefixListIdResponseOutput() PrefixListIdResponseOutput {
	return o
}

func (o PrefixListIdResponseOutput) ToPrefixListIdResponseOutputWithContext(ctx context.Context) PrefixListIdResponseOutput {
	return o
}

// <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
func (o PrefixListIdResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListIdResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The ID of the prefix.</p>
func (o PrefixListIdResponseOutput) PrefixListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListIdResponse) *string { return v.PrefixListId }).(pulumi.StringPtrOutput)
}

type PrefixListIdResponseArrayOutput struct{ *pulumi.OutputState }

func (PrefixListIdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListIdResponse)(nil)).Elem()
}

func (o PrefixListIdResponseArrayOutput) ToPrefixListIdResponseArrayOutput() PrefixListIdResponseArrayOutput {
	return o
}

func (o PrefixListIdResponseArrayOutput) ToPrefixListIdResponseArrayOutputWithContext(ctx context.Context) PrefixListIdResponseArrayOutput {
	return o
}

func (o PrefixListIdResponseArrayOutput) Index(i pulumi.IntInput) PrefixListIdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListIdResponse {
		return vs[0].([]PrefixListIdResponse)[vs[1].(int)]
	}).(PrefixListIdResponseOutput)
}

// Definition of PrivateDnsNameOptionsOnLaunchModelProperties
type PrivateDnsNameOptionsOnLaunchModelProperties struct {
	// Property enableResourceNameDnsAAAARecord
	EnableResourceNameDnsAAAARecord *bool `pulumi:"enableResourceNameDnsAAAARecord"`
	// Property enableResourceNameDnsARecord
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// Property hostnameType
	HostnameType *string `pulumi:"hostnameType"`
}

// PrivateDnsNameOptionsOnLaunchModelPropertiesInput is an input type that accepts PrivateDnsNameOptionsOnLaunchModelPropertiesArgs and PrivateDnsNameOptionsOnLaunchModelPropertiesOutput values.
// You can construct a concrete instance of `PrivateDnsNameOptionsOnLaunchModelPropertiesInput` via:
//
//	PrivateDnsNameOptionsOnLaunchModelPropertiesArgs{...}
type PrivateDnsNameOptionsOnLaunchModelPropertiesInput interface {
	pulumi.Input

	ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesOutput
	ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutputWithContext(context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesOutput
}

// Definition of PrivateDnsNameOptionsOnLaunchModelProperties
type PrivateDnsNameOptionsOnLaunchModelPropertiesArgs struct {
	// Property enableResourceNameDnsAAAARecord
	EnableResourceNameDnsAAAARecord pulumi.BoolPtrInput `pulumi:"enableResourceNameDnsAAAARecord"`
	// Property enableResourceNameDnsARecord
	EnableResourceNameDnsARecord pulumi.BoolPtrInput `pulumi:"enableResourceNameDnsARecord"`
	// Property hostnameType
	HostnameType pulumi.StringPtrInput `pulumi:"hostnameType"`
}

func (PrivateDnsNameOptionsOnLaunchModelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNameOptionsOnLaunchModelProperties)(nil)).Elem()
}

func (i PrivateDnsNameOptionsOnLaunchModelPropertiesArgs) ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesOutput {
	return i.ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutputWithContext(context.Background())
}

func (i PrivateDnsNameOptionsOnLaunchModelPropertiesArgs) ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNameOptionsOnLaunchModelPropertiesOutput)
}

func (i PrivateDnsNameOptionsOnLaunchModelPropertiesArgs) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return i.ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateDnsNameOptionsOnLaunchModelPropertiesArgs) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNameOptionsOnLaunchModelPropertiesOutput).ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(ctx)
}

// PrivateDnsNameOptionsOnLaunchModelPropertiesPtrInput is an input type that accepts PrivateDnsNameOptionsOnLaunchModelPropertiesArgs, PrivateDnsNameOptionsOnLaunchModelPropertiesPtr and PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateDnsNameOptionsOnLaunchModelPropertiesPtrInput` via:
//
//	        PrivateDnsNameOptionsOnLaunchModelPropertiesArgs{...}
//
//	or:
//
//	        nil
type PrivateDnsNameOptionsOnLaunchModelPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput
	ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput
}

type privateDnsNameOptionsOnLaunchModelPropertiesPtrType PrivateDnsNameOptionsOnLaunchModelPropertiesArgs

func PrivateDnsNameOptionsOnLaunchModelPropertiesPtr(v *PrivateDnsNameOptionsOnLaunchModelPropertiesArgs) PrivateDnsNameOptionsOnLaunchModelPropertiesPtrInput {
	return (*privateDnsNameOptionsOnLaunchModelPropertiesPtrType)(v)
}

func (*privateDnsNameOptionsOnLaunchModelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNameOptionsOnLaunchModelProperties)(nil)).Elem()
}

func (i *privateDnsNameOptionsOnLaunchModelPropertiesPtrType) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return i.ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateDnsNameOptionsOnLaunchModelPropertiesPtrType) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput)
}

// Definition of PrivateDnsNameOptionsOnLaunchModelProperties
type PrivateDnsNameOptionsOnLaunchModelPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNameOptionsOnLaunchModelProperties)(nil)).Elem()
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return o.ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateDnsNameOptionsOnLaunchModelProperties) *PrivateDnsNameOptionsOnLaunchModelProperties {
		return &v
	}).(PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput)
}

// Property enableResourceNameDnsAAAARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsOnLaunchModelProperties) *bool { return v.EnableResourceNameDnsAAAARecord }).(pulumi.BoolPtrOutput)
}

// Property enableResourceNameDnsARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsOnLaunchModelProperties) *bool { return v.EnableResourceNameDnsARecord }).(pulumi.BoolPtrOutput)
}

// Property hostnameType
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesOutput) HostnameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsOnLaunchModelProperties) *string { return v.HostnameType }).(pulumi.StringPtrOutput)
}

type PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNameOptionsOnLaunchModelProperties)(nil)).Elem()
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) Elem() PrivateDnsNameOptionsOnLaunchModelPropertiesOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelProperties) PrivateDnsNameOptionsOnLaunchModelProperties {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNameOptionsOnLaunchModelProperties
		return ret
	}).(PrivateDnsNameOptionsOnLaunchModelPropertiesOutput)
}

// Property enableResourceNameDnsAAAARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsAAAARecord
	}).(pulumi.BoolPtrOutput)
}

// Property enableResourceNameDnsARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsARecord
	}).(pulumi.BoolPtrOutput)
}

// Property hostnameType
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput) HostnameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostnameType
	}).(pulumi.StringPtrOutput)
}

// Definition of PrivateDnsNameOptionsOnLaunchModelProperties
type PrivateDnsNameOptionsOnLaunchModelPropertiesResponse struct {
	// Property enableResourceNameDnsAAAARecord
	EnableResourceNameDnsAAAARecord *bool `pulumi:"enableResourceNameDnsAAAARecord"`
	// Property enableResourceNameDnsARecord
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// Property hostnameType
	HostnameType *string `pulumi:"hostnameType"`
}

// Definition of PrivateDnsNameOptionsOnLaunchModelProperties
type PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNameOptionsOnLaunchModelPropertiesResponse)(nil)).Elem()
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput {
	return o
}

// Property enableResourceNameDnsAAAARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) *bool {
		return v.EnableResourceNameDnsAAAARecord
	}).(pulumi.BoolPtrOutput)
}

// Property enableResourceNameDnsARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) *bool {
		return v.EnableResourceNameDnsARecord
	}).(pulumi.BoolPtrOutput)
}

// Property hostnameType
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput) HostnameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) *string { return v.HostnameType }).(pulumi.StringPtrOutput)
}

type PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNameOptionsOnLaunchModelPropertiesResponse)(nil)).Elem()
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput() PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) ToPrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput {
	return o
}

func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) Elem() PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) PrivateDnsNameOptionsOnLaunchModelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNameOptionsOnLaunchModelPropertiesResponse
		return ret
	}).(PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput)
}

// Property enableResourceNameDnsAAAARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsAAAARecord
	}).(pulumi.BoolPtrOutput)
}

// Property enableResourceNameDnsARecord
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsARecord
	}).(pulumi.BoolPtrOutput)
}

// Property hostnameType
func (o PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput) HostnameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsOnLaunchModelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostnameType
	}).(pulumi.StringPtrOutput)
}

// Definition of PrivateDnsNameOptionsResponse
type PrivateDnsNameOptionsResponse struct {
	// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
	EnableResourceNameDnsAAAARecord *bool `pulumi:"enableResourceNameDnsAAAARecord"`
	// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// <p>The type of hostname to assign to an instance.</p>
	HostnameType *HostnameTypeEnumValue `pulumi:"hostnameType"`
}

// PrivateDnsNameOptionsResponseInput is an input type that accepts PrivateDnsNameOptionsResponseArgs and PrivateDnsNameOptionsResponseOutput values.
// You can construct a concrete instance of `PrivateDnsNameOptionsResponseInput` via:
//
//	PrivateDnsNameOptionsResponseArgs{...}
type PrivateDnsNameOptionsResponseInput interface {
	pulumi.Input

	ToPrivateDnsNameOptionsResponseOutput() PrivateDnsNameOptionsResponseOutput
	ToPrivateDnsNameOptionsResponseOutputWithContext(context.Context) PrivateDnsNameOptionsResponseOutput
}

// Definition of PrivateDnsNameOptionsResponse
type PrivateDnsNameOptionsResponseArgs struct {
	// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
	EnableResourceNameDnsAAAARecord pulumi.BoolPtrInput `pulumi:"enableResourceNameDnsAAAARecord"`
	// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
	EnableResourceNameDnsARecord pulumi.BoolPtrInput `pulumi:"enableResourceNameDnsARecord"`
	// <p>The type of hostname to assign to an instance.</p>
	HostnameType HostnameTypeEnumValuePtrInput `pulumi:"hostnameType"`
}

func (PrivateDnsNameOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNameOptionsResponse)(nil)).Elem()
}

func (i PrivateDnsNameOptionsResponseArgs) ToPrivateDnsNameOptionsResponseOutput() PrivateDnsNameOptionsResponseOutput {
	return i.ToPrivateDnsNameOptionsResponseOutputWithContext(context.Background())
}

func (i PrivateDnsNameOptionsResponseArgs) ToPrivateDnsNameOptionsResponseOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNameOptionsResponseOutput)
}

func (i PrivateDnsNameOptionsResponseArgs) ToPrivateDnsNameOptionsResponsePtrOutput() PrivateDnsNameOptionsResponsePtrOutput {
	return i.ToPrivateDnsNameOptionsResponsePtrOutputWithContext(context.Background())
}

func (i PrivateDnsNameOptionsResponseArgs) ToPrivateDnsNameOptionsResponsePtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNameOptionsResponseOutput).ToPrivateDnsNameOptionsResponsePtrOutputWithContext(ctx)
}

// PrivateDnsNameOptionsResponsePtrInput is an input type that accepts PrivateDnsNameOptionsResponseArgs, PrivateDnsNameOptionsResponsePtr and PrivateDnsNameOptionsResponsePtrOutput values.
// You can construct a concrete instance of `PrivateDnsNameOptionsResponsePtrInput` via:
//
//	        PrivateDnsNameOptionsResponseArgs{...}
//
//	or:
//
//	        nil
type PrivateDnsNameOptionsResponsePtrInput interface {
	pulumi.Input

	ToPrivateDnsNameOptionsResponsePtrOutput() PrivateDnsNameOptionsResponsePtrOutput
	ToPrivateDnsNameOptionsResponsePtrOutputWithContext(context.Context) PrivateDnsNameOptionsResponsePtrOutput
}

type privateDnsNameOptionsResponsePtrType PrivateDnsNameOptionsResponseArgs

func PrivateDnsNameOptionsResponsePtr(v *PrivateDnsNameOptionsResponseArgs) PrivateDnsNameOptionsResponsePtrInput {
	return (*privateDnsNameOptionsResponsePtrType)(v)
}

func (*privateDnsNameOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNameOptionsResponse)(nil)).Elem()
}

func (i *privateDnsNameOptionsResponsePtrType) ToPrivateDnsNameOptionsResponsePtrOutput() PrivateDnsNameOptionsResponsePtrOutput {
	return i.ToPrivateDnsNameOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *privateDnsNameOptionsResponsePtrType) ToPrivateDnsNameOptionsResponsePtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNameOptionsResponsePtrOutput)
}

// Definition of PrivateDnsNameOptionsResponse
type PrivateDnsNameOptionsResponseOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNameOptionsResponse)(nil)).Elem()
}

func (o PrivateDnsNameOptionsResponseOutput) ToPrivateDnsNameOptionsResponseOutput() PrivateDnsNameOptionsResponseOutput {
	return o
}

func (o PrivateDnsNameOptionsResponseOutput) ToPrivateDnsNameOptionsResponseOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponseOutput {
	return o
}

func (o PrivateDnsNameOptionsResponseOutput) ToPrivateDnsNameOptionsResponsePtrOutput() PrivateDnsNameOptionsResponsePtrOutput {
	return o.ToPrivateDnsNameOptionsResponsePtrOutputWithContext(context.Background())
}

func (o PrivateDnsNameOptionsResponseOutput) ToPrivateDnsNameOptionsResponsePtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateDnsNameOptionsResponse) *PrivateDnsNameOptionsResponse {
		return &v
	}).(PrivateDnsNameOptionsResponsePtrOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
func (o PrivateDnsNameOptionsResponseOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsResponse) *bool { return v.EnableResourceNameDnsAAAARecord }).(pulumi.BoolPtrOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
func (o PrivateDnsNameOptionsResponseOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsResponse) *bool { return v.EnableResourceNameDnsARecord }).(pulumi.BoolPtrOutput)
}

// <p>The type of hostname to assign to an instance.</p>
func (o PrivateDnsNameOptionsResponseOutput) HostnameType() HostnameTypeEnumValuePtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsResponse) *HostnameTypeEnumValue { return v.HostnameType }).(HostnameTypeEnumValuePtrOutput)
}

type PrivateDnsNameOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNameOptionsResponse)(nil)).Elem()
}

func (o PrivateDnsNameOptionsResponsePtrOutput) ToPrivateDnsNameOptionsResponsePtrOutput() PrivateDnsNameOptionsResponsePtrOutput {
	return o
}

func (o PrivateDnsNameOptionsResponsePtrOutput) ToPrivateDnsNameOptionsResponsePtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponsePtrOutput {
	return o
}

func (o PrivateDnsNameOptionsResponsePtrOutput) Elem() PrivateDnsNameOptionsResponseOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponse) PrivateDnsNameOptionsResponse {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNameOptionsResponse
		return ret
	}).(PrivateDnsNameOptionsResponseOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
func (o PrivateDnsNameOptionsResponsePtrOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsAAAARecord
	}).(pulumi.BoolPtrOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
func (o PrivateDnsNameOptionsResponsePtrOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsARecord
	}).(pulumi.BoolPtrOutput)
}

// <p>The type of hostname to assign to an instance.</p>
func (o PrivateDnsNameOptionsResponsePtrOutput) HostnameType() HostnameTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponse) *HostnameTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.HostnameType
	}).(HostnameTypeEnumValuePtrOutput)
}

// Definition of PrivateDnsNameOptionsResponse
type PrivateDnsNameOptionsResponseResponse struct {
	// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
	EnableResourceNameDnsAAAARecord *bool `pulumi:"enableResourceNameDnsAAAARecord"`
	// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// <p>The type of hostname to assign to an instance.</p>
	HostnameType *HostnameTypeEnumValueResponse `pulumi:"hostnameType"`
}

// Definition of PrivateDnsNameOptionsResponse
type PrivateDnsNameOptionsResponseResponseOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNameOptionsResponseResponse)(nil)).Elem()
}

func (o PrivateDnsNameOptionsResponseResponseOutput) ToPrivateDnsNameOptionsResponseResponseOutput() PrivateDnsNameOptionsResponseResponseOutput {
	return o
}

func (o PrivateDnsNameOptionsResponseResponseOutput) ToPrivateDnsNameOptionsResponseResponseOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponseResponseOutput {
	return o
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
func (o PrivateDnsNameOptionsResponseResponseOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsResponseResponse) *bool { return v.EnableResourceNameDnsAAAARecord }).(pulumi.BoolPtrOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
func (o PrivateDnsNameOptionsResponseResponseOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsResponseResponse) *bool { return v.EnableResourceNameDnsARecord }).(pulumi.BoolPtrOutput)
}

// <p>The type of hostname to assign to an instance.</p>
func (o PrivateDnsNameOptionsResponseResponseOutput) HostnameType() HostnameTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v PrivateDnsNameOptionsResponseResponse) *HostnameTypeEnumValueResponse { return v.HostnameType }).(HostnameTypeEnumValueResponsePtrOutput)
}

type PrivateDnsNameOptionsResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNameOptionsResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNameOptionsResponseResponse)(nil)).Elem()
}

func (o PrivateDnsNameOptionsResponseResponsePtrOutput) ToPrivateDnsNameOptionsResponseResponsePtrOutput() PrivateDnsNameOptionsResponseResponsePtrOutput {
	return o
}

func (o PrivateDnsNameOptionsResponseResponsePtrOutput) ToPrivateDnsNameOptionsResponseResponsePtrOutputWithContext(ctx context.Context) PrivateDnsNameOptionsResponseResponsePtrOutput {
	return o
}

func (o PrivateDnsNameOptionsResponseResponsePtrOutput) Elem() PrivateDnsNameOptionsResponseResponseOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponseResponse) PrivateDnsNameOptionsResponseResponse {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNameOptionsResponseResponse
		return ret
	}).(PrivateDnsNameOptionsResponseResponseOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
func (o PrivateDnsNameOptionsResponseResponsePtrOutput) EnableResourceNameDnsAAAARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponseResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsAAAARecord
	}).(pulumi.BoolPtrOutput)
}

// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
func (o PrivateDnsNameOptionsResponseResponsePtrOutput) EnableResourceNameDnsARecord() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponseResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceNameDnsARecord
	}).(pulumi.BoolPtrOutput)
}

// <p>The type of hostname to assign to an instance.</p>
func (o PrivateDnsNameOptionsResponseResponsePtrOutput) HostnameType() HostnameTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *PrivateDnsNameOptionsResponseResponse) *HostnameTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.HostnameType
	}).(HostnameTypeEnumValueResponsePtrOutput)
}

// Definition of PrivateIpAddressSpecification
type PrivateIpAddressSpecification struct {
	// Property primary
	Primary *bool `pulumi:"primary"`
	// Property privateIpAddress
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
}

// PrivateIpAddressSpecificationInput is an input type that accepts PrivateIpAddressSpecificationArgs and PrivateIpAddressSpecificationOutput values.
// You can construct a concrete instance of `PrivateIpAddressSpecificationInput` via:
//
//	PrivateIpAddressSpecificationArgs{...}
type PrivateIpAddressSpecificationInput interface {
	pulumi.Input

	ToPrivateIpAddressSpecificationOutput() PrivateIpAddressSpecificationOutput
	ToPrivateIpAddressSpecificationOutputWithContext(context.Context) PrivateIpAddressSpecificationOutput
}

// Definition of PrivateIpAddressSpecification
type PrivateIpAddressSpecificationArgs struct {
	// Property primary
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Property privateIpAddress
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
}

func (PrivateIpAddressSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIpAddressSpecification)(nil)).Elem()
}

func (i PrivateIpAddressSpecificationArgs) ToPrivateIpAddressSpecificationOutput() PrivateIpAddressSpecificationOutput {
	return i.ToPrivateIpAddressSpecificationOutputWithContext(context.Background())
}

func (i PrivateIpAddressSpecificationArgs) ToPrivateIpAddressSpecificationOutputWithContext(ctx context.Context) PrivateIpAddressSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIpAddressSpecificationOutput)
}

// PrivateIpAddressSpecificationArrayInput is an input type that accepts PrivateIpAddressSpecificationArray and PrivateIpAddressSpecificationArrayOutput values.
// You can construct a concrete instance of `PrivateIpAddressSpecificationArrayInput` via:
//
//	PrivateIpAddressSpecificationArray{ PrivateIpAddressSpecificationArgs{...} }
type PrivateIpAddressSpecificationArrayInput interface {
	pulumi.Input

	ToPrivateIpAddressSpecificationArrayOutput() PrivateIpAddressSpecificationArrayOutput
	ToPrivateIpAddressSpecificationArrayOutputWithContext(context.Context) PrivateIpAddressSpecificationArrayOutput
}

type PrivateIpAddressSpecificationArray []PrivateIpAddressSpecificationInput

func (PrivateIpAddressSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateIpAddressSpecification)(nil)).Elem()
}

func (i PrivateIpAddressSpecificationArray) ToPrivateIpAddressSpecificationArrayOutput() PrivateIpAddressSpecificationArrayOutput {
	return i.ToPrivateIpAddressSpecificationArrayOutputWithContext(context.Background())
}

func (i PrivateIpAddressSpecificationArray) ToPrivateIpAddressSpecificationArrayOutputWithContext(ctx context.Context) PrivateIpAddressSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIpAddressSpecificationArrayOutput)
}

// Definition of PrivateIpAddressSpecification
type PrivateIpAddressSpecificationOutput struct{ *pulumi.OutputState }

func (PrivateIpAddressSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIpAddressSpecification)(nil)).Elem()
}

func (o PrivateIpAddressSpecificationOutput) ToPrivateIpAddressSpecificationOutput() PrivateIpAddressSpecificationOutput {
	return o
}

func (o PrivateIpAddressSpecificationOutput) ToPrivateIpAddressSpecificationOutputWithContext(ctx context.Context) PrivateIpAddressSpecificationOutput {
	return o
}

// Property primary
func (o PrivateIpAddressSpecificationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateIpAddressSpecification) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Property privateIpAddress
func (o PrivateIpAddressSpecificationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateIpAddressSpecification) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

type PrivateIpAddressSpecificationArrayOutput struct{ *pulumi.OutputState }

func (PrivateIpAddressSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateIpAddressSpecification)(nil)).Elem()
}

func (o PrivateIpAddressSpecificationArrayOutput) ToPrivateIpAddressSpecificationArrayOutput() PrivateIpAddressSpecificationArrayOutput {
	return o
}

func (o PrivateIpAddressSpecificationArrayOutput) ToPrivateIpAddressSpecificationArrayOutputWithContext(ctx context.Context) PrivateIpAddressSpecificationArrayOutput {
	return o
}

func (o PrivateIpAddressSpecificationArrayOutput) Index(i pulumi.IntInput) PrivateIpAddressSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateIpAddressSpecification {
		return vs[0].([]PrivateIpAddressSpecification)[vs[1].(int)]
	}).(PrivateIpAddressSpecificationOutput)
}

// Definition of PrivateIpAddressSpecification
type PrivateIpAddressSpecificationResponse struct {
	// Property primary
	Primary *bool `pulumi:"primary"`
	// Property privateIpAddress
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
}

// Definition of PrivateIpAddressSpecification
type PrivateIpAddressSpecificationResponseOutput struct{ *pulumi.OutputState }

func (PrivateIpAddressSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIpAddressSpecificationResponse)(nil)).Elem()
}

func (o PrivateIpAddressSpecificationResponseOutput) ToPrivateIpAddressSpecificationResponseOutput() PrivateIpAddressSpecificationResponseOutput {
	return o
}

func (o PrivateIpAddressSpecificationResponseOutput) ToPrivateIpAddressSpecificationResponseOutputWithContext(ctx context.Context) PrivateIpAddressSpecificationResponseOutput {
	return o
}

// Property primary
func (o PrivateIpAddressSpecificationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateIpAddressSpecificationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Property privateIpAddress
func (o PrivateIpAddressSpecificationResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateIpAddressSpecificationResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

type PrivateIpAddressSpecificationResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateIpAddressSpecificationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateIpAddressSpecificationResponse)(nil)).Elem()
}

func (o PrivateIpAddressSpecificationResponseArrayOutput) ToPrivateIpAddressSpecificationResponseArrayOutput() PrivateIpAddressSpecificationResponseArrayOutput {
	return o
}

func (o PrivateIpAddressSpecificationResponseArrayOutput) ToPrivateIpAddressSpecificationResponseArrayOutputWithContext(ctx context.Context) PrivateIpAddressSpecificationResponseArrayOutput {
	return o
}

func (o PrivateIpAddressSpecificationResponseArrayOutput) Index(i pulumi.IntInput) PrivateIpAddressSpecificationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateIpAddressSpecificationResponse {
		return vs[0].([]PrivateIpAddressSpecificationResponse)[vs[1].(int)]
	}).(PrivateIpAddressSpecificationResponseOutput)
}

// Definition of ProcessorFeature
type ProcessorFeature struct {
	// <p>The name of the processor feature. Valid names are <code>coreCount</code> and <code>threadsPerCore</code>.</p>
	Name *string `pulumi:"name"`
	// <p>The value of a processor feature name.</p>
	Value *string `pulumi:"value"`
}

// ProcessorFeatureInput is an input type that accepts ProcessorFeatureArgs and ProcessorFeatureOutput values.
// You can construct a concrete instance of `ProcessorFeatureInput` via:
//
//	ProcessorFeatureArgs{...}
type ProcessorFeatureInput interface {
	pulumi.Input

	ToProcessorFeatureOutput() ProcessorFeatureOutput
	ToProcessorFeatureOutputWithContext(context.Context) ProcessorFeatureOutput
}

// Definition of ProcessorFeature
type ProcessorFeatureArgs struct {
	// <p>The name of the processor feature. Valid names are <code>coreCount</code> and <code>threadsPerCore</code>.</p>
	Name pulumi.StringPtrInput `pulumi:"name"`
	// <p>The value of a processor feature name.</p>
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProcessorFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorFeature)(nil)).Elem()
}

func (i ProcessorFeatureArgs) ToProcessorFeatureOutput() ProcessorFeatureOutput {
	return i.ToProcessorFeatureOutputWithContext(context.Background())
}

func (i ProcessorFeatureArgs) ToProcessorFeatureOutputWithContext(ctx context.Context) ProcessorFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorFeatureOutput)
}

// ProcessorFeatureArrayInput is an input type that accepts ProcessorFeatureArray and ProcessorFeatureArrayOutput values.
// You can construct a concrete instance of `ProcessorFeatureArrayInput` via:
//
//	ProcessorFeatureArray{ ProcessorFeatureArgs{...} }
type ProcessorFeatureArrayInput interface {
	pulumi.Input

	ToProcessorFeatureArrayOutput() ProcessorFeatureArrayOutput
	ToProcessorFeatureArrayOutputWithContext(context.Context) ProcessorFeatureArrayOutput
}

type ProcessorFeatureArray []ProcessorFeatureInput

func (ProcessorFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorFeature)(nil)).Elem()
}

func (i ProcessorFeatureArray) ToProcessorFeatureArrayOutput() ProcessorFeatureArrayOutput {
	return i.ToProcessorFeatureArrayOutputWithContext(context.Background())
}

func (i ProcessorFeatureArray) ToProcessorFeatureArrayOutputWithContext(ctx context.Context) ProcessorFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessorFeatureArrayOutput)
}

// Definition of ProcessorFeature
type ProcessorFeatureOutput struct{ *pulumi.OutputState }

func (ProcessorFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorFeature)(nil)).Elem()
}

func (o ProcessorFeatureOutput) ToProcessorFeatureOutput() ProcessorFeatureOutput {
	return o
}

func (o ProcessorFeatureOutput) ToProcessorFeatureOutputWithContext(ctx context.Context) ProcessorFeatureOutput {
	return o
}

// <p>The name of the processor feature. Valid names are <code>coreCount</code> and <code>threadsPerCore</code>.</p>
func (o ProcessorFeatureOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorFeature) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>The value of a processor feature name.</p>
func (o ProcessorFeatureOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorFeature) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessorFeatureArrayOutput struct{ *pulumi.OutputState }

func (ProcessorFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorFeature)(nil)).Elem()
}

func (o ProcessorFeatureArrayOutput) ToProcessorFeatureArrayOutput() ProcessorFeatureArrayOutput {
	return o
}

func (o ProcessorFeatureArrayOutput) ToProcessorFeatureArrayOutputWithContext(ctx context.Context) ProcessorFeatureArrayOutput {
	return o
}

func (o ProcessorFeatureArrayOutput) Index(i pulumi.IntInput) ProcessorFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessorFeature {
		return vs[0].([]ProcessorFeature)[vs[1].(int)]
	}).(ProcessorFeatureOutput)
}

// Definition of ProcessorFeature
type ProcessorFeatureResponse struct {
	// <p>The name of the processor feature. Valid names are <code>coreCount</code> and <code>threadsPerCore</code>.</p>
	Name *string `pulumi:"name"`
	// <p>The value of a processor feature name.</p>
	Value *string `pulumi:"value"`
}

// Definition of ProcessorFeature
type ProcessorFeatureResponseOutput struct{ *pulumi.OutputState }

func (ProcessorFeatureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorFeatureResponse)(nil)).Elem()
}

func (o ProcessorFeatureResponseOutput) ToProcessorFeatureResponseOutput() ProcessorFeatureResponseOutput {
	return o
}

func (o ProcessorFeatureResponseOutput) ToProcessorFeatureResponseOutputWithContext(ctx context.Context) ProcessorFeatureResponseOutput {
	return o
}

// <p>The name of the processor feature. Valid names are <code>coreCount</code> and <code>threadsPerCore</code>.</p>
func (o ProcessorFeatureResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorFeatureResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>The value of a processor feature name.</p>
func (o ProcessorFeatureResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessorFeatureResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProcessorFeatureResponseArrayOutput struct{ *pulumi.OutputState }

func (ProcessorFeatureResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessorFeatureResponse)(nil)).Elem()
}

func (o ProcessorFeatureResponseArrayOutput) ToProcessorFeatureResponseArrayOutput() ProcessorFeatureResponseArrayOutput {
	return o
}

func (o ProcessorFeatureResponseArrayOutput) ToProcessorFeatureResponseArrayOutputWithContext(ctx context.Context) ProcessorFeatureResponseArrayOutput {
	return o
}

func (o ProcessorFeatureResponseArrayOutput) Index(i pulumi.IntInput) ProcessorFeatureResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessorFeatureResponse {
		return vs[0].([]ProcessorFeatureResponse)[vs[1].(int)]
	}).(ProcessorFeatureResponseOutput)
}

// Definition of ProductCode
type ProductCode struct {
	// <p>The product code.</p>
	ProductCodeId *string `pulumi:"productCodeId"`
	// <p>The type of product code.</p>
	ProductCodeType *ProductCodeValuesEnumValue `pulumi:"productCodeType"`
}

// ProductCodeInput is an input type that accepts ProductCodeArgs and ProductCodeOutput values.
// You can construct a concrete instance of `ProductCodeInput` via:
//
//	ProductCodeArgs{...}
type ProductCodeInput interface {
	pulumi.Input

	ToProductCodeOutput() ProductCodeOutput
	ToProductCodeOutputWithContext(context.Context) ProductCodeOutput
}

// Definition of ProductCode
type ProductCodeArgs struct {
	// <p>The product code.</p>
	ProductCodeId pulumi.StringPtrInput `pulumi:"productCodeId"`
	// <p>The type of product code.</p>
	ProductCodeType ProductCodeValuesEnumValuePtrInput `pulumi:"productCodeType"`
}

func (ProductCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductCode)(nil)).Elem()
}

func (i ProductCodeArgs) ToProductCodeOutput() ProductCodeOutput {
	return i.ToProductCodeOutputWithContext(context.Background())
}

func (i ProductCodeArgs) ToProductCodeOutputWithContext(ctx context.Context) ProductCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductCodeOutput)
}

// ProductCodeArrayInput is an input type that accepts ProductCodeArray and ProductCodeArrayOutput values.
// You can construct a concrete instance of `ProductCodeArrayInput` via:
//
//	ProductCodeArray{ ProductCodeArgs{...} }
type ProductCodeArrayInput interface {
	pulumi.Input

	ToProductCodeArrayOutput() ProductCodeArrayOutput
	ToProductCodeArrayOutputWithContext(context.Context) ProductCodeArrayOutput
}

type ProductCodeArray []ProductCodeInput

func (ProductCodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductCode)(nil)).Elem()
}

func (i ProductCodeArray) ToProductCodeArrayOutput() ProductCodeArrayOutput {
	return i.ToProductCodeArrayOutputWithContext(context.Background())
}

func (i ProductCodeArray) ToProductCodeArrayOutputWithContext(ctx context.Context) ProductCodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductCodeArrayOutput)
}

// Definition of ProductCode
type ProductCodeOutput struct{ *pulumi.OutputState }

func (ProductCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductCode)(nil)).Elem()
}

func (o ProductCodeOutput) ToProductCodeOutput() ProductCodeOutput {
	return o
}

func (o ProductCodeOutput) ToProductCodeOutputWithContext(ctx context.Context) ProductCodeOutput {
	return o
}

// <p>The product code.</p>
func (o ProductCodeOutput) ProductCodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductCode) *string { return v.ProductCodeId }).(pulumi.StringPtrOutput)
}

// <p>The type of product code.</p>
func (o ProductCodeOutput) ProductCodeType() ProductCodeValuesEnumValuePtrOutput {
	return o.ApplyT(func(v ProductCode) *ProductCodeValuesEnumValue { return v.ProductCodeType }).(ProductCodeValuesEnumValuePtrOutput)
}

type ProductCodeArrayOutput struct{ *pulumi.OutputState }

func (ProductCodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductCode)(nil)).Elem()
}

func (o ProductCodeArrayOutput) ToProductCodeArrayOutput() ProductCodeArrayOutput {
	return o
}

func (o ProductCodeArrayOutput) ToProductCodeArrayOutputWithContext(ctx context.Context) ProductCodeArrayOutput {
	return o
}

func (o ProductCodeArrayOutput) Index(i pulumi.IntInput) ProductCodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductCode {
		return vs[0].([]ProductCode)[vs[1].(int)]
	}).(ProductCodeOutput)
}

// Definition of ProductCode
type ProductCodeResponse struct {
	// <p>The product code.</p>
	ProductCodeId *string `pulumi:"productCodeId"`
	// <p>The type of product code.</p>
	ProductCodeType *ProductCodeValuesEnumValueResponse `pulumi:"productCodeType"`
}

// Definition of ProductCode
type ProductCodeResponseOutput struct{ *pulumi.OutputState }

func (ProductCodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductCodeResponse)(nil)).Elem()
}

func (o ProductCodeResponseOutput) ToProductCodeResponseOutput() ProductCodeResponseOutput {
	return o
}

func (o ProductCodeResponseOutput) ToProductCodeResponseOutputWithContext(ctx context.Context) ProductCodeResponseOutput {
	return o
}

// <p>The product code.</p>
func (o ProductCodeResponseOutput) ProductCodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductCodeResponse) *string { return v.ProductCodeId }).(pulumi.StringPtrOutput)
}

// <p>The type of product code.</p>
func (o ProductCodeResponseOutput) ProductCodeType() ProductCodeValuesEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProductCodeResponse) *ProductCodeValuesEnumValueResponse { return v.ProductCodeType }).(ProductCodeValuesEnumValueResponsePtrOutput)
}

type ProductCodeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductCodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductCodeResponse)(nil)).Elem()
}

func (o ProductCodeResponseArrayOutput) ToProductCodeResponseArrayOutput() ProductCodeResponseArrayOutput {
	return o
}

func (o ProductCodeResponseArrayOutput) ToProductCodeResponseArrayOutputWithContext(ctx context.Context) ProductCodeResponseArrayOutput {
	return o
}

func (o ProductCodeResponseArrayOutput) Index(i pulumi.IntInput) ProductCodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductCodeResponse {
		return vs[0].([]ProductCodeResponse)[vs[1].(int)]
	}).(ProductCodeResponseOutput)
}

// Definition of ProductCodeValuesEnumValue
type ProductCodeValuesEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ProductCodeValuesEnumValueInput is an input type that accepts ProductCodeValuesEnumValueArgs and ProductCodeValuesEnumValueOutput values.
// You can construct a concrete instance of `ProductCodeValuesEnumValueInput` via:
//
//	ProductCodeValuesEnumValueArgs{...}
type ProductCodeValuesEnumValueInput interface {
	pulumi.Input

	ToProductCodeValuesEnumValueOutput() ProductCodeValuesEnumValueOutput
	ToProductCodeValuesEnumValueOutputWithContext(context.Context) ProductCodeValuesEnumValueOutput
}

// Definition of ProductCodeValuesEnumValue
type ProductCodeValuesEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProductCodeValuesEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductCodeValuesEnumValue)(nil)).Elem()
}

func (i ProductCodeValuesEnumValueArgs) ToProductCodeValuesEnumValueOutput() ProductCodeValuesEnumValueOutput {
	return i.ToProductCodeValuesEnumValueOutputWithContext(context.Background())
}

func (i ProductCodeValuesEnumValueArgs) ToProductCodeValuesEnumValueOutputWithContext(ctx context.Context) ProductCodeValuesEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductCodeValuesEnumValueOutput)
}

func (i ProductCodeValuesEnumValueArgs) ToProductCodeValuesEnumValuePtrOutput() ProductCodeValuesEnumValuePtrOutput {
	return i.ToProductCodeValuesEnumValuePtrOutputWithContext(context.Background())
}

func (i ProductCodeValuesEnumValueArgs) ToProductCodeValuesEnumValuePtrOutputWithContext(ctx context.Context) ProductCodeValuesEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductCodeValuesEnumValueOutput).ToProductCodeValuesEnumValuePtrOutputWithContext(ctx)
}

// ProductCodeValuesEnumValuePtrInput is an input type that accepts ProductCodeValuesEnumValueArgs, ProductCodeValuesEnumValuePtr and ProductCodeValuesEnumValuePtrOutput values.
// You can construct a concrete instance of `ProductCodeValuesEnumValuePtrInput` via:
//
//	        ProductCodeValuesEnumValueArgs{...}
//
//	or:
//
//	        nil
type ProductCodeValuesEnumValuePtrInput interface {
	pulumi.Input

	ToProductCodeValuesEnumValuePtrOutput() ProductCodeValuesEnumValuePtrOutput
	ToProductCodeValuesEnumValuePtrOutputWithContext(context.Context) ProductCodeValuesEnumValuePtrOutput
}

type productCodeValuesEnumValuePtrType ProductCodeValuesEnumValueArgs

func ProductCodeValuesEnumValuePtr(v *ProductCodeValuesEnumValueArgs) ProductCodeValuesEnumValuePtrInput {
	return (*productCodeValuesEnumValuePtrType)(v)
}

func (*productCodeValuesEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductCodeValuesEnumValue)(nil)).Elem()
}

func (i *productCodeValuesEnumValuePtrType) ToProductCodeValuesEnumValuePtrOutput() ProductCodeValuesEnumValuePtrOutput {
	return i.ToProductCodeValuesEnumValuePtrOutputWithContext(context.Background())
}

func (i *productCodeValuesEnumValuePtrType) ToProductCodeValuesEnumValuePtrOutputWithContext(ctx context.Context) ProductCodeValuesEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductCodeValuesEnumValuePtrOutput)
}

// Definition of ProductCodeValuesEnumValue
type ProductCodeValuesEnumValueOutput struct{ *pulumi.OutputState }

func (ProductCodeValuesEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductCodeValuesEnumValue)(nil)).Elem()
}

func (o ProductCodeValuesEnumValueOutput) ToProductCodeValuesEnumValueOutput() ProductCodeValuesEnumValueOutput {
	return o
}

func (o ProductCodeValuesEnumValueOutput) ToProductCodeValuesEnumValueOutputWithContext(ctx context.Context) ProductCodeValuesEnumValueOutput {
	return o
}

func (o ProductCodeValuesEnumValueOutput) ToProductCodeValuesEnumValuePtrOutput() ProductCodeValuesEnumValuePtrOutput {
	return o.ToProductCodeValuesEnumValuePtrOutputWithContext(context.Background())
}

func (o ProductCodeValuesEnumValueOutput) ToProductCodeValuesEnumValuePtrOutputWithContext(ctx context.Context) ProductCodeValuesEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProductCodeValuesEnumValue) *ProductCodeValuesEnumValue {
		return &v
	}).(ProductCodeValuesEnumValuePtrOutput)
}

// Property value
func (o ProductCodeValuesEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductCodeValuesEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProductCodeValuesEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ProductCodeValuesEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductCodeValuesEnumValue)(nil)).Elem()
}

func (o ProductCodeValuesEnumValuePtrOutput) ToProductCodeValuesEnumValuePtrOutput() ProductCodeValuesEnumValuePtrOutput {
	return o
}

func (o ProductCodeValuesEnumValuePtrOutput) ToProductCodeValuesEnumValuePtrOutputWithContext(ctx context.Context) ProductCodeValuesEnumValuePtrOutput {
	return o
}

func (o ProductCodeValuesEnumValuePtrOutput) Elem() ProductCodeValuesEnumValueOutput {
	return o.ApplyT(func(v *ProductCodeValuesEnumValue) ProductCodeValuesEnumValue {
		if v != nil {
			return *v
		}
		var ret ProductCodeValuesEnumValue
		return ret
	}).(ProductCodeValuesEnumValueOutput)
}

// Property value
func (o ProductCodeValuesEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductCodeValuesEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ProductCodeValuesEnumValue
type ProductCodeValuesEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ProductCodeValuesEnumValue
type ProductCodeValuesEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ProductCodeValuesEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductCodeValuesEnumValueResponse)(nil)).Elem()
}

func (o ProductCodeValuesEnumValueResponseOutput) ToProductCodeValuesEnumValueResponseOutput() ProductCodeValuesEnumValueResponseOutput {
	return o
}

func (o ProductCodeValuesEnumValueResponseOutput) ToProductCodeValuesEnumValueResponseOutputWithContext(ctx context.Context) ProductCodeValuesEnumValueResponseOutput {
	return o
}

// Property value
func (o ProductCodeValuesEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductCodeValuesEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProductCodeValuesEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ProductCodeValuesEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductCodeValuesEnumValueResponse)(nil)).Elem()
}

func (o ProductCodeValuesEnumValueResponsePtrOutput) ToProductCodeValuesEnumValueResponsePtrOutput() ProductCodeValuesEnumValueResponsePtrOutput {
	return o
}

func (o ProductCodeValuesEnumValueResponsePtrOutput) ToProductCodeValuesEnumValueResponsePtrOutputWithContext(ctx context.Context) ProductCodeValuesEnumValueResponsePtrOutput {
	return o
}

func (o ProductCodeValuesEnumValueResponsePtrOutput) Elem() ProductCodeValuesEnumValueResponseOutput {
	return o.ApplyT(func(v *ProductCodeValuesEnumValueResponse) ProductCodeValuesEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ProductCodeValuesEnumValueResponse
		return ret
	}).(ProductCodeValuesEnumValueResponseOutput)
}

// Property value
func (o ProductCodeValuesEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductCodeValuesEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ProjectArtifacts
type ProjectArtifacts struct {
	// <p> An identifier for this artifact definition. </p>
	ArtifactIdentifier *string `pulumi:"artifactIdentifier"`
	// Property bucketOwnerAccess
	BucketOwnerAccess *BucketOwnerAccessEnumValue `pulumi:"bucketOwnerAccess"`
	// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
	EncryptionDisabled *bool `pulumi:"encryptionDisabled"`
	// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
	Location *string `pulumi:"location"`
	// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
	Name *string `pulumi:"name"`
	// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
	NamespaceType *ArtifactNamespaceEnumValue `pulumi:"namespaceType"`
	// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
	OverrideArtifactName *bool `pulumi:"overrideArtifactName"`
	// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
	Packaging *ArtifactPackagingEnumValue `pulumi:"packaging"`
	// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
	Path *string `pulumi:"path"`
	// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
	Type *ArtifactsTypeEnumValue `pulumi:"type"`
}

// ProjectArtifactsInput is an input type that accepts ProjectArtifactsArgs and ProjectArtifactsOutput values.
// You can construct a concrete instance of `ProjectArtifactsInput` via:
//
//	ProjectArtifactsArgs{...}
type ProjectArtifactsInput interface {
	pulumi.Input

	ToProjectArtifactsOutput() ProjectArtifactsOutput
	ToProjectArtifactsOutputWithContext(context.Context) ProjectArtifactsOutput
}

// Definition of ProjectArtifacts
type ProjectArtifactsArgs struct {
	// <p> An identifier for this artifact definition. </p>
	ArtifactIdentifier pulumi.StringPtrInput `pulumi:"artifactIdentifier"`
	// Property bucketOwnerAccess
	BucketOwnerAccess BucketOwnerAccessEnumValuePtrInput `pulumi:"bucketOwnerAccess"`
	// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
	EncryptionDisabled pulumi.BoolPtrInput `pulumi:"encryptionDisabled"`
	// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
	Location pulumi.StringPtrInput `pulumi:"location"`
	// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
	Name pulumi.StringPtrInput `pulumi:"name"`
	// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
	NamespaceType ArtifactNamespaceEnumValuePtrInput `pulumi:"namespaceType"`
	// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
	OverrideArtifactName pulumi.BoolPtrInput `pulumi:"overrideArtifactName"`
	// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
	Packaging ArtifactPackagingEnumValuePtrInput `pulumi:"packaging"`
	// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
	Type ArtifactsTypeEnumValuePtrInput `pulumi:"type"`
}

func (ProjectArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectArtifacts)(nil)).Elem()
}

func (i ProjectArtifactsArgs) ToProjectArtifactsOutput() ProjectArtifactsOutput {
	return i.ToProjectArtifactsOutputWithContext(context.Background())
}

func (i ProjectArtifactsArgs) ToProjectArtifactsOutputWithContext(ctx context.Context) ProjectArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsOutput)
}

func (i ProjectArtifactsArgs) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return i.ToProjectArtifactsPtrOutputWithContext(context.Background())
}

func (i ProjectArtifactsArgs) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsOutput).ToProjectArtifactsPtrOutputWithContext(ctx)
}

// ProjectArtifactsPtrInput is an input type that accepts ProjectArtifactsArgs, ProjectArtifactsPtr and ProjectArtifactsPtrOutput values.
// You can construct a concrete instance of `ProjectArtifactsPtrInput` via:
//
//	        ProjectArtifactsArgs{...}
//
//	or:
//
//	        nil
type ProjectArtifactsPtrInput interface {
	pulumi.Input

	ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput
	ToProjectArtifactsPtrOutputWithContext(context.Context) ProjectArtifactsPtrOutput
}

type projectArtifactsPtrType ProjectArtifactsArgs

func ProjectArtifactsPtr(v *ProjectArtifactsArgs) ProjectArtifactsPtrInput {
	return (*projectArtifactsPtrType)(v)
}

func (*projectArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectArtifacts)(nil)).Elem()
}

func (i *projectArtifactsPtrType) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return i.ToProjectArtifactsPtrOutputWithContext(context.Background())
}

func (i *projectArtifactsPtrType) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsPtrOutput)
}

// ProjectArtifactsArrayInput is an input type that accepts ProjectArtifactsArray and ProjectArtifactsArrayOutput values.
// You can construct a concrete instance of `ProjectArtifactsArrayInput` via:
//
//	ProjectArtifactsArray{ ProjectArtifactsArgs{...} }
type ProjectArtifactsArrayInput interface {
	pulumi.Input

	ToProjectArtifactsArrayOutput() ProjectArtifactsArrayOutput
	ToProjectArtifactsArrayOutputWithContext(context.Context) ProjectArtifactsArrayOutput
}

type ProjectArtifactsArray []ProjectArtifactsInput

func (ProjectArtifactsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectArtifacts)(nil)).Elem()
}

func (i ProjectArtifactsArray) ToProjectArtifactsArrayOutput() ProjectArtifactsArrayOutput {
	return i.ToProjectArtifactsArrayOutputWithContext(context.Background())
}

func (i ProjectArtifactsArray) ToProjectArtifactsArrayOutputWithContext(ctx context.Context) ProjectArtifactsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsArrayOutput)
}

// Definition of ProjectArtifacts
type ProjectArtifactsOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectArtifacts)(nil)).Elem()
}

func (o ProjectArtifactsOutput) ToProjectArtifactsOutput() ProjectArtifactsOutput {
	return o
}

func (o ProjectArtifactsOutput) ToProjectArtifactsOutputWithContext(ctx context.Context) ProjectArtifactsOutput {
	return o
}

func (o ProjectArtifactsOutput) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return o.ToProjectArtifactsPtrOutputWithContext(context.Background())
}

func (o ProjectArtifactsOutput) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectArtifacts) *ProjectArtifacts {
		return &v
	}).(ProjectArtifactsPtrOutput)
}

// <p> An identifier for this artifact definition. </p>
func (o ProjectArtifactsOutput) ArtifactIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.ArtifactIdentifier }).(pulumi.StringPtrOutput)
}

// Property bucketOwnerAccess
func (o ProjectArtifactsOutput) BucketOwnerAccess() BucketOwnerAccessEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *BucketOwnerAccessEnumValue { return v.BucketOwnerAccess }).(BucketOwnerAccessEnumValuePtrOutput)
}

// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
func (o ProjectArtifactsOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
func (o ProjectArtifactsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
func (o ProjectArtifactsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsOutput) NamespaceType() ArtifactNamespaceEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *ArtifactNamespaceEnumValue { return v.NamespaceType }).(ArtifactNamespaceEnumValuePtrOutput)
}

// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
func (o ProjectArtifactsOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *bool { return v.OverrideArtifactName }).(pulumi.BoolPtrOutput)
}

// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
func (o ProjectArtifactsOutput) Packaging() ArtifactPackagingEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *ArtifactPackagingEnumValue { return v.Packaging }).(ArtifactPackagingEnumValuePtrOutput)
}

// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
func (o ProjectArtifactsOutput) Type() ArtifactsTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *ArtifactsTypeEnumValue { return v.Type }).(ArtifactsTypeEnumValuePtrOutput)
}

type ProjectArtifactsPtrOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectArtifacts)(nil)).Elem()
}

func (o ProjectArtifactsPtrOutput) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return o
}

func (o ProjectArtifactsPtrOutput) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return o
}

func (o ProjectArtifactsPtrOutput) Elem() ProjectArtifactsOutput {
	return o.ApplyT(func(v *ProjectArtifacts) ProjectArtifacts {
		if v != nil {
			return *v
		}
		var ret ProjectArtifacts
		return ret
	}).(ProjectArtifactsOutput)
}

// <p> An identifier for this artifact definition. </p>
func (o ProjectArtifactsPtrOutput) ArtifactIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactIdentifier
	}).(pulumi.StringPtrOutput)
}

// Property bucketOwnerAccess
func (o ProjectArtifactsPtrOutput) BucketOwnerAccess() BucketOwnerAccessEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *BucketOwnerAccessEnumValue {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccess
	}).(BucketOwnerAccessEnumValuePtrOutput)
}

// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
func (o ProjectArtifactsPtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
func (o ProjectArtifactsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
func (o ProjectArtifactsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsPtrOutput) NamespaceType() ArtifactNamespaceEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *ArtifactNamespaceEnumValue {
		if v == nil {
			return nil
		}
		return v.NamespaceType
	}).(ArtifactNamespaceEnumValuePtrOutput)
}

// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
func (o ProjectArtifactsPtrOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideArtifactName
	}).(pulumi.BoolPtrOutput)
}

// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
func (o ProjectArtifactsPtrOutput) Packaging() ArtifactPackagingEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *ArtifactPackagingEnumValue {
		if v == nil {
			return nil
		}
		return v.Packaging
	}).(ArtifactPackagingEnumValuePtrOutput)
}

// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
func (o ProjectArtifactsPtrOutput) Type() ArtifactsTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *ArtifactsTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ArtifactsTypeEnumValuePtrOutput)
}

type ProjectArtifactsArrayOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectArtifacts)(nil)).Elem()
}

func (o ProjectArtifactsArrayOutput) ToProjectArtifactsArrayOutput() ProjectArtifactsArrayOutput {
	return o
}

func (o ProjectArtifactsArrayOutput) ToProjectArtifactsArrayOutputWithContext(ctx context.Context) ProjectArtifactsArrayOutput {
	return o
}

func (o ProjectArtifactsArrayOutput) Index(i pulumi.IntInput) ProjectArtifactsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectArtifacts {
		return vs[0].([]ProjectArtifacts)[vs[1].(int)]
	}).(ProjectArtifactsOutput)
}

// Definition of ProjectArtifacts
type ProjectArtifactsResponse struct {
	// <p> An identifier for this artifact definition. </p>
	ArtifactIdentifier *string `pulumi:"artifactIdentifier"`
	// Property bucketOwnerAccess
	BucketOwnerAccess *BucketOwnerAccessEnumValueResponse `pulumi:"bucketOwnerAccess"`
	// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
	EncryptionDisabled *bool `pulumi:"encryptionDisabled"`
	// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
	Location *string `pulumi:"location"`
	// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
	Name *string `pulumi:"name"`
	// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
	NamespaceType *ArtifactNamespaceEnumValueResponse `pulumi:"namespaceType"`
	// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
	OverrideArtifactName *bool `pulumi:"overrideArtifactName"`
	// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
	Packaging *ArtifactPackagingEnumValueResponse `pulumi:"packaging"`
	// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
	Path *string `pulumi:"path"`
	// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
	Type *ArtifactsTypeEnumValueResponse `pulumi:"type"`
}

// Definition of ProjectArtifacts
type ProjectArtifactsResponseOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectArtifactsResponse)(nil)).Elem()
}

func (o ProjectArtifactsResponseOutput) ToProjectArtifactsResponseOutput() ProjectArtifactsResponseOutput {
	return o
}

func (o ProjectArtifactsResponseOutput) ToProjectArtifactsResponseOutputWithContext(ctx context.Context) ProjectArtifactsResponseOutput {
	return o
}

// <p> An identifier for this artifact definition. </p>
func (o ProjectArtifactsResponseOutput) ArtifactIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *string { return v.ArtifactIdentifier }).(pulumi.StringPtrOutput)
}

// Property bucketOwnerAccess
func (o ProjectArtifactsResponseOutput) BucketOwnerAccess() BucketOwnerAccessEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *BucketOwnerAccessEnumValueResponse { return v.BucketOwnerAccess }).(BucketOwnerAccessEnumValueResponsePtrOutput)
}

// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
func (o ProjectArtifactsResponseOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
func (o ProjectArtifactsResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
func (o ProjectArtifactsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsResponseOutput) NamespaceType() ArtifactNamespaceEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *ArtifactNamespaceEnumValueResponse { return v.NamespaceType }).(ArtifactNamespaceEnumValueResponsePtrOutput)
}

// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
func (o ProjectArtifactsResponseOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *bool { return v.OverrideArtifactName }).(pulumi.BoolPtrOutput)
}

// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
func (o ProjectArtifactsResponseOutput) Packaging() ArtifactPackagingEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *ArtifactPackagingEnumValueResponse { return v.Packaging }).(ArtifactPackagingEnumValueResponsePtrOutput)
}

// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
func (o ProjectArtifactsResponseOutput) Type() ArtifactsTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectArtifactsResponse) *ArtifactsTypeEnumValueResponse { return v.Type }).(ArtifactsTypeEnumValueResponsePtrOutput)
}

type ProjectArtifactsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectArtifactsResponse)(nil)).Elem()
}

func (o ProjectArtifactsResponsePtrOutput) ToProjectArtifactsResponsePtrOutput() ProjectArtifactsResponsePtrOutput {
	return o
}

func (o ProjectArtifactsResponsePtrOutput) ToProjectArtifactsResponsePtrOutputWithContext(ctx context.Context) ProjectArtifactsResponsePtrOutput {
	return o
}

func (o ProjectArtifactsResponsePtrOutput) Elem() ProjectArtifactsResponseOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) ProjectArtifactsResponse {
		if v != nil {
			return *v
		}
		var ret ProjectArtifactsResponse
		return ret
	}).(ProjectArtifactsResponseOutput)
}

// <p> An identifier for this artifact definition. </p>
func (o ProjectArtifactsResponsePtrOutput) ArtifactIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactIdentifier
	}).(pulumi.StringPtrOutput)
}

// Property bucketOwnerAccess
func (o ProjectArtifactsResponsePtrOutput) BucketOwnerAccess() BucketOwnerAccessEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *BucketOwnerAccessEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccess
	}).(BucketOwnerAccessEnumValueResponsePtrOutput)
}

// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
func (o ProjectArtifactsResponsePtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>
func (o ProjectArtifactsResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
func (o ProjectArtifactsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li> <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p> </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsResponsePtrOutput) NamespaceType() ArtifactNamespaceEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *ArtifactNamespaceEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.NamespaceType
	}).(ArtifactNamespaceEnumValueResponsePtrOutput)
}

// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>
func (o ProjectArtifactsResponsePtrOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideArtifactName
	}).(pulumi.BoolPtrOutput)
}

// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p> <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
func (o ProjectArtifactsResponsePtrOutput) Packaging() ArtifactPackagingEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *ArtifactPackagingEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Packaging
	}).(ArtifactPackagingEnumValueResponsePtrOutput)
}

// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
func (o ProjectArtifactsResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
func (o ProjectArtifactsResponsePtrOutput) Type() ArtifactsTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectArtifactsResponse) *ArtifactsTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ArtifactsTypeEnumValueResponsePtrOutput)
}

type ProjectArtifactsResponseArrayOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectArtifactsResponse)(nil)).Elem()
}

func (o ProjectArtifactsResponseArrayOutput) ToProjectArtifactsResponseArrayOutput() ProjectArtifactsResponseArrayOutput {
	return o
}

func (o ProjectArtifactsResponseArrayOutput) ToProjectArtifactsResponseArrayOutputWithContext(ctx context.Context) ProjectArtifactsResponseArrayOutput {
	return o
}

func (o ProjectArtifactsResponseArrayOutput) Index(i pulumi.IntInput) ProjectArtifactsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectArtifactsResponse {
		return vs[0].([]ProjectArtifactsResponse)[vs[1].(int)]
	}).(ProjectArtifactsResponseOutput)
}

// Definition of ProjectBadge
type ProjectBadge struct {
	// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
	BadgeEnabled *bool `pulumi:"badgeEnabled"`
	// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
	BadgeRequestUrl *string `pulumi:"badgeRequestUrl"`
}

// ProjectBadgeInput is an input type that accepts ProjectBadgeArgs and ProjectBadgeOutput values.
// You can construct a concrete instance of `ProjectBadgeInput` via:
//
//	ProjectBadgeArgs{...}
type ProjectBadgeInput interface {
	pulumi.Input

	ToProjectBadgeOutput() ProjectBadgeOutput
	ToProjectBadgeOutputWithContext(context.Context) ProjectBadgeOutput
}

// Definition of ProjectBadge
type ProjectBadgeArgs struct {
	// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
	BadgeEnabled pulumi.BoolPtrInput `pulumi:"badgeEnabled"`
	// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
	BadgeRequestUrl pulumi.StringPtrInput `pulumi:"badgeRequestUrl"`
}

func (ProjectBadgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBadge)(nil)).Elem()
}

func (i ProjectBadgeArgs) ToProjectBadgeOutput() ProjectBadgeOutput {
	return i.ToProjectBadgeOutputWithContext(context.Background())
}

func (i ProjectBadgeArgs) ToProjectBadgeOutputWithContext(ctx context.Context) ProjectBadgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBadgeOutput)
}

func (i ProjectBadgeArgs) ToProjectBadgePtrOutput() ProjectBadgePtrOutput {
	return i.ToProjectBadgePtrOutputWithContext(context.Background())
}

func (i ProjectBadgeArgs) ToProjectBadgePtrOutputWithContext(ctx context.Context) ProjectBadgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBadgeOutput).ToProjectBadgePtrOutputWithContext(ctx)
}

// ProjectBadgePtrInput is an input type that accepts ProjectBadgeArgs, ProjectBadgePtr and ProjectBadgePtrOutput values.
// You can construct a concrete instance of `ProjectBadgePtrInput` via:
//
//	        ProjectBadgeArgs{...}
//
//	or:
//
//	        nil
type ProjectBadgePtrInput interface {
	pulumi.Input

	ToProjectBadgePtrOutput() ProjectBadgePtrOutput
	ToProjectBadgePtrOutputWithContext(context.Context) ProjectBadgePtrOutput
}

type projectBadgePtrType ProjectBadgeArgs

func ProjectBadgePtr(v *ProjectBadgeArgs) ProjectBadgePtrInput {
	return (*projectBadgePtrType)(v)
}

func (*projectBadgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBadge)(nil)).Elem()
}

func (i *projectBadgePtrType) ToProjectBadgePtrOutput() ProjectBadgePtrOutput {
	return i.ToProjectBadgePtrOutputWithContext(context.Background())
}

func (i *projectBadgePtrType) ToProjectBadgePtrOutputWithContext(ctx context.Context) ProjectBadgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBadgePtrOutput)
}

// Definition of ProjectBadge
type ProjectBadgeOutput struct{ *pulumi.OutputState }

func (ProjectBadgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBadge)(nil)).Elem()
}

func (o ProjectBadgeOutput) ToProjectBadgeOutput() ProjectBadgeOutput {
	return o
}

func (o ProjectBadgeOutput) ToProjectBadgeOutputWithContext(ctx context.Context) ProjectBadgeOutput {
	return o
}

func (o ProjectBadgeOutput) ToProjectBadgePtrOutput() ProjectBadgePtrOutput {
	return o.ToProjectBadgePtrOutputWithContext(context.Background())
}

func (o ProjectBadgeOutput) ToProjectBadgePtrOutputWithContext(ctx context.Context) ProjectBadgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectBadge) *ProjectBadge {
		return &v
	}).(ProjectBadgePtrOutput)
}

// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
func (o ProjectBadgeOutput) BadgeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectBadge) *bool { return v.BadgeEnabled }).(pulumi.BoolPtrOutput)
}

// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
func (o ProjectBadgeOutput) BadgeRequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBadge) *string { return v.BadgeRequestUrl }).(pulumi.StringPtrOutput)
}

type ProjectBadgePtrOutput struct{ *pulumi.OutputState }

func (ProjectBadgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBadge)(nil)).Elem()
}

func (o ProjectBadgePtrOutput) ToProjectBadgePtrOutput() ProjectBadgePtrOutput {
	return o
}

func (o ProjectBadgePtrOutput) ToProjectBadgePtrOutputWithContext(ctx context.Context) ProjectBadgePtrOutput {
	return o
}

func (o ProjectBadgePtrOutput) Elem() ProjectBadgeOutput {
	return o.ApplyT(func(v *ProjectBadge) ProjectBadge {
		if v != nil {
			return *v
		}
		var ret ProjectBadge
		return ret
	}).(ProjectBadgeOutput)
}

// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
func (o ProjectBadgePtrOutput) BadgeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectBadge) *bool {
		if v == nil {
			return nil
		}
		return v.BadgeEnabled
	}).(pulumi.BoolPtrOutput)
}

// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
func (o ProjectBadgePtrOutput) BadgeRequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBadge) *string {
		if v == nil {
			return nil
		}
		return v.BadgeRequestUrl
	}).(pulumi.StringPtrOutput)
}

// Definition of ProjectBadge
type ProjectBadgeResponse struct {
	// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
	BadgeEnabled *bool `pulumi:"badgeEnabled"`
	// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
	BadgeRequestUrl *string `pulumi:"badgeRequestUrl"`
}

// Definition of ProjectBadge
type ProjectBadgeResponseOutput struct{ *pulumi.OutputState }

func (ProjectBadgeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBadgeResponse)(nil)).Elem()
}

func (o ProjectBadgeResponseOutput) ToProjectBadgeResponseOutput() ProjectBadgeResponseOutput {
	return o
}

func (o ProjectBadgeResponseOutput) ToProjectBadgeResponseOutputWithContext(ctx context.Context) ProjectBadgeResponseOutput {
	return o
}

// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
func (o ProjectBadgeResponseOutput) BadgeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectBadgeResponse) *bool { return v.BadgeEnabled }).(pulumi.BoolPtrOutput)
}

// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
func (o ProjectBadgeResponseOutput) BadgeRequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBadgeResponse) *string { return v.BadgeRequestUrl }).(pulumi.StringPtrOutput)
}

type ProjectBadgeResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectBadgeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBadgeResponse)(nil)).Elem()
}

func (o ProjectBadgeResponsePtrOutput) ToProjectBadgeResponsePtrOutput() ProjectBadgeResponsePtrOutput {
	return o
}

func (o ProjectBadgeResponsePtrOutput) ToProjectBadgeResponsePtrOutputWithContext(ctx context.Context) ProjectBadgeResponsePtrOutput {
	return o
}

func (o ProjectBadgeResponsePtrOutput) Elem() ProjectBadgeResponseOutput {
	return o.ApplyT(func(v *ProjectBadgeResponse) ProjectBadgeResponse {
		if v != nil {
			return *v
		}
		var ret ProjectBadgeResponse
		return ret
	}).(ProjectBadgeResponseOutput)
}

// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
func (o ProjectBadgeResponsePtrOutput) BadgeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectBadgeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BadgeEnabled
	}).(pulumi.BoolPtrOutput)
}

// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
func (o ProjectBadgeResponsePtrOutput) BadgeRequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBadgeResponse) *string {
		if v == nil {
			return nil
		}
		return v.BadgeRequestUrl
	}).(pulumi.StringPtrOutput)
}

// Definition of ProjectBuildBatchConfig
type ProjectBuildBatchConfig struct {
	// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
	BatchReportMode *BatchReportModeTypeEnumValue `pulumi:"batchReportMode"`
	// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
	CombineArtifacts *bool `pulumi:"combineArtifacts"`
	// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
	Restrictions *BatchRestrictions `pulumi:"restrictions"`
	// <p>Specifies the service role ARN for the batch build project.</p>
	ServiceRole *string `pulumi:"serviceRole"`
	// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
	TimeoutInMins *int `pulumi:"timeoutInMins"`
}

// ProjectBuildBatchConfigInput is an input type that accepts ProjectBuildBatchConfigArgs and ProjectBuildBatchConfigOutput values.
// You can construct a concrete instance of `ProjectBuildBatchConfigInput` via:
//
//	ProjectBuildBatchConfigArgs{...}
type ProjectBuildBatchConfigInput interface {
	pulumi.Input

	ToProjectBuildBatchConfigOutput() ProjectBuildBatchConfigOutput
	ToProjectBuildBatchConfigOutputWithContext(context.Context) ProjectBuildBatchConfigOutput
}

// Definition of ProjectBuildBatchConfig
type ProjectBuildBatchConfigArgs struct {
	// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
	BatchReportMode BatchReportModeTypeEnumValuePtrInput `pulumi:"batchReportMode"`
	// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
	CombineArtifacts pulumi.BoolPtrInput `pulumi:"combineArtifacts"`
	// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
	Restrictions BatchRestrictionsPtrInput `pulumi:"restrictions"`
	// <p>Specifies the service role ARN for the batch build project.</p>
	ServiceRole pulumi.StringPtrInput `pulumi:"serviceRole"`
	// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
	TimeoutInMins pulumi.IntPtrInput `pulumi:"timeoutInMins"`
}

func (ProjectBuildBatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfig)(nil)).Elem()
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigOutput() ProjectBuildBatchConfigOutput {
	return i.ToProjectBuildBatchConfigOutputWithContext(context.Background())
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigOutputWithContext(ctx context.Context) ProjectBuildBatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigOutput)
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return i.ToProjectBuildBatchConfigPtrOutputWithContext(context.Background())
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigOutput).ToProjectBuildBatchConfigPtrOutputWithContext(ctx)
}

// ProjectBuildBatchConfigPtrInput is an input type that accepts ProjectBuildBatchConfigArgs, ProjectBuildBatchConfigPtr and ProjectBuildBatchConfigPtrOutput values.
// You can construct a concrete instance of `ProjectBuildBatchConfigPtrInput` via:
//
//	        ProjectBuildBatchConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectBuildBatchConfigPtrInput interface {
	pulumi.Input

	ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput
	ToProjectBuildBatchConfigPtrOutputWithContext(context.Context) ProjectBuildBatchConfigPtrOutput
}

type projectBuildBatchConfigPtrType ProjectBuildBatchConfigArgs

func ProjectBuildBatchConfigPtr(v *ProjectBuildBatchConfigArgs) ProjectBuildBatchConfigPtrInput {
	return (*projectBuildBatchConfigPtrType)(v)
}

func (*projectBuildBatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfig)(nil)).Elem()
}

func (i *projectBuildBatchConfigPtrType) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return i.ToProjectBuildBatchConfigPtrOutputWithContext(context.Background())
}

func (i *projectBuildBatchConfigPtrType) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigPtrOutput)
}

// Definition of ProjectBuildBatchConfig
type ProjectBuildBatchConfigOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfig)(nil)).Elem()
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigOutput() ProjectBuildBatchConfigOutput {
	return o
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigOutputWithContext(ctx context.Context) ProjectBuildBatchConfigOutput {
	return o
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return o.ToProjectBuildBatchConfigPtrOutputWithContext(context.Background())
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectBuildBatchConfig) *ProjectBuildBatchConfig {
		return &v
	}).(ProjectBuildBatchConfigPtrOutput)
}

// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
func (o ProjectBuildBatchConfigOutput) BatchReportMode() BatchReportModeTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *BatchReportModeTypeEnumValue { return v.BatchReportMode }).(BatchReportModeTypeEnumValuePtrOutput)
}

// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
func (o ProjectBuildBatchConfigOutput) CombineArtifacts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *bool { return v.CombineArtifacts }).(pulumi.BoolPtrOutput)
}

// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
func (o ProjectBuildBatchConfigOutput) Restrictions() BatchRestrictionsPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *BatchRestrictions { return v.Restrictions }).(BatchRestrictionsPtrOutput)
}

// <p>Specifies the service role ARN for the batch build project.</p>
func (o ProjectBuildBatchConfigOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *string { return v.ServiceRole }).(pulumi.StringPtrOutput)
}

// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
func (o ProjectBuildBatchConfigOutput) TimeoutInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *int { return v.TimeoutInMins }).(pulumi.IntPtrOutput)
}

type ProjectBuildBatchConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfig)(nil)).Elem()
}

func (o ProjectBuildBatchConfigPtrOutput) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return o
}

func (o ProjectBuildBatchConfigPtrOutput) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return o
}

func (o ProjectBuildBatchConfigPtrOutput) Elem() ProjectBuildBatchConfigOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) ProjectBuildBatchConfig {
		if v != nil {
			return *v
		}
		var ret ProjectBuildBatchConfig
		return ret
	}).(ProjectBuildBatchConfigOutput)
}

// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
func (o ProjectBuildBatchConfigPtrOutput) BatchReportMode() BatchReportModeTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *BatchReportModeTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.BatchReportMode
	}).(BatchReportModeTypeEnumValuePtrOutput)
}

// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
func (o ProjectBuildBatchConfigPtrOutput) CombineArtifacts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CombineArtifacts
	}).(pulumi.BoolPtrOutput)
}

// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
func (o ProjectBuildBatchConfigPtrOutput) Restrictions() BatchRestrictionsPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *BatchRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(BatchRestrictionsPtrOutput)
}

// <p>Specifies the service role ARN for the batch build project.</p>
func (o ProjectBuildBatchConfigPtrOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRole
	}).(pulumi.StringPtrOutput)
}

// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
func (o ProjectBuildBatchConfigPtrOutput) TimeoutInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInMins
	}).(pulumi.IntPtrOutput)
}

// Definition of ProjectBuildBatchConfig
type ProjectBuildBatchConfigResponse struct {
	// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
	BatchReportMode *BatchReportModeTypeEnumValueResponse `pulumi:"batchReportMode"`
	// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
	CombineArtifacts *bool `pulumi:"combineArtifacts"`
	// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
	Restrictions *BatchRestrictionsResponse `pulumi:"restrictions"`
	// <p>Specifies the service role ARN for the batch build project.</p>
	ServiceRole *string `pulumi:"serviceRole"`
	// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
	TimeoutInMins *int `pulumi:"timeoutInMins"`
}

// Definition of ProjectBuildBatchConfig
type ProjectBuildBatchConfigResponseOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfigResponse)(nil)).Elem()
}

func (o ProjectBuildBatchConfigResponseOutput) ToProjectBuildBatchConfigResponseOutput() ProjectBuildBatchConfigResponseOutput {
	return o
}

func (o ProjectBuildBatchConfigResponseOutput) ToProjectBuildBatchConfigResponseOutputWithContext(ctx context.Context) ProjectBuildBatchConfigResponseOutput {
	return o
}

// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
func (o ProjectBuildBatchConfigResponseOutput) BatchReportMode() BatchReportModeTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigResponse) *BatchReportModeTypeEnumValueResponse {
		return v.BatchReportMode
	}).(BatchReportModeTypeEnumValueResponsePtrOutput)
}

// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
func (o ProjectBuildBatchConfigResponseOutput) CombineArtifacts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigResponse) *bool { return v.CombineArtifacts }).(pulumi.BoolPtrOutput)
}

// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
func (o ProjectBuildBatchConfigResponseOutput) Restrictions() BatchRestrictionsResponsePtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigResponse) *BatchRestrictionsResponse { return v.Restrictions }).(BatchRestrictionsResponsePtrOutput)
}

// <p>Specifies the service role ARN for the batch build project.</p>
func (o ProjectBuildBatchConfigResponseOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigResponse) *string { return v.ServiceRole }).(pulumi.StringPtrOutput)
}

// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
func (o ProjectBuildBatchConfigResponseOutput) TimeoutInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigResponse) *int { return v.TimeoutInMins }).(pulumi.IntPtrOutput)
}

type ProjectBuildBatchConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfigResponse)(nil)).Elem()
}

func (o ProjectBuildBatchConfigResponsePtrOutput) ToProjectBuildBatchConfigResponsePtrOutput() ProjectBuildBatchConfigResponsePtrOutput {
	return o
}

func (o ProjectBuildBatchConfigResponsePtrOutput) ToProjectBuildBatchConfigResponsePtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigResponsePtrOutput {
	return o
}

func (o ProjectBuildBatchConfigResponsePtrOutput) Elem() ProjectBuildBatchConfigResponseOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigResponse) ProjectBuildBatchConfigResponse {
		if v != nil {
			return *v
		}
		var ret ProjectBuildBatchConfigResponse
		return ret
	}).(ProjectBuildBatchConfigResponseOutput)
}

// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate status report for each individual build.</p> </dd> </dl>
func (o ProjectBuildBatchConfigResponsePtrOutput) BatchReportMode() BatchReportModeTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigResponse) *BatchReportModeTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.BatchReportMode
	}).(BatchReportModeTypeEnumValueResponsePtrOutput)
}

// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
func (o ProjectBuildBatchConfigResponsePtrOutput) CombineArtifacts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CombineArtifacts
	}).(pulumi.BoolPtrOutput)
}

// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
func (o ProjectBuildBatchConfigResponsePtrOutput) Restrictions() BatchRestrictionsResponsePtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigResponse) *BatchRestrictionsResponse {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(BatchRestrictionsResponsePtrOutput)
}

// <p>Specifies the service role ARN for the batch build project.</p>
func (o ProjectBuildBatchConfigResponsePtrOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRole
	}).(pulumi.StringPtrOutput)
}

// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
func (o ProjectBuildBatchConfigResponsePtrOutput) TimeoutInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInMins
	}).(pulumi.IntPtrOutput)
}

// Definition of ProjectCache
type ProjectCache struct {
	// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
	Location *string `pulumi:"location"`
	// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
	Modes []string `pulumi:"modes"`
	// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
	Type *CacheTypeEnumValue `pulumi:"type"`
}

// ProjectCacheInput is an input type that accepts ProjectCacheArgs and ProjectCacheOutput values.
// You can construct a concrete instance of `ProjectCacheInput` via:
//
//	ProjectCacheArgs{...}
type ProjectCacheInput interface {
	pulumi.Input

	ToProjectCacheOutput() ProjectCacheOutput
	ToProjectCacheOutputWithContext(context.Context) ProjectCacheOutput
}

// Definition of ProjectCache
type ProjectCacheArgs struct {
	// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
	Location pulumi.StringPtrInput `pulumi:"location"`
	// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
	Modes pulumi.StringArrayInput `pulumi:"modes"`
	// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
	Type CacheTypeEnumValuePtrInput `pulumi:"type"`
}

func (ProjectCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCache)(nil)).Elem()
}

func (i ProjectCacheArgs) ToProjectCacheOutput() ProjectCacheOutput {
	return i.ToProjectCacheOutputWithContext(context.Background())
}

func (i ProjectCacheArgs) ToProjectCacheOutputWithContext(ctx context.Context) ProjectCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCacheOutput)
}

func (i ProjectCacheArgs) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return i.ToProjectCachePtrOutputWithContext(context.Background())
}

func (i ProjectCacheArgs) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCacheOutput).ToProjectCachePtrOutputWithContext(ctx)
}

// ProjectCachePtrInput is an input type that accepts ProjectCacheArgs, ProjectCachePtr and ProjectCachePtrOutput values.
// You can construct a concrete instance of `ProjectCachePtrInput` via:
//
//	        ProjectCacheArgs{...}
//
//	or:
//
//	        nil
type ProjectCachePtrInput interface {
	pulumi.Input

	ToProjectCachePtrOutput() ProjectCachePtrOutput
	ToProjectCachePtrOutputWithContext(context.Context) ProjectCachePtrOutput
}

type projectCachePtrType ProjectCacheArgs

func ProjectCachePtr(v *ProjectCacheArgs) ProjectCachePtrInput {
	return (*projectCachePtrType)(v)
}

func (*projectCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCache)(nil)).Elem()
}

func (i *projectCachePtrType) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return i.ToProjectCachePtrOutputWithContext(context.Background())
}

func (i *projectCachePtrType) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCachePtrOutput)
}

// Definition of ProjectCache
type ProjectCacheOutput struct{ *pulumi.OutputState }

func (ProjectCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCache)(nil)).Elem()
}

func (o ProjectCacheOutput) ToProjectCacheOutput() ProjectCacheOutput {
	return o
}

func (o ProjectCacheOutput) ToProjectCacheOutputWithContext(ctx context.Context) ProjectCacheOutput {
	return o
}

func (o ProjectCacheOutput) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return o.ToProjectCachePtrOutputWithContext(context.Background())
}

func (o ProjectCacheOutput) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCache) *ProjectCache {
		return &v
	}).(ProjectCachePtrOutput)
}

// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
func (o ProjectCacheOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCache) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
func (o ProjectCacheOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectCache) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
func (o ProjectCacheOutput) Type() CacheTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectCache) *CacheTypeEnumValue { return v.Type }).(CacheTypeEnumValuePtrOutput)
}

type ProjectCachePtrOutput struct{ *pulumi.OutputState }

func (ProjectCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCache)(nil)).Elem()
}

func (o ProjectCachePtrOutput) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return o
}

func (o ProjectCachePtrOutput) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return o
}

func (o ProjectCachePtrOutput) Elem() ProjectCacheOutput {
	return o.ApplyT(func(v *ProjectCache) ProjectCache {
		if v != nil {
			return *v
		}
		var ret ProjectCache
		return ret
	}).(ProjectCacheOutput)
}

// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
func (o ProjectCachePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCache) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
func (o ProjectCachePtrOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectCache) []string {
		if v == nil {
			return nil
		}
		return v.Modes
	}).(pulumi.StringArrayOutput)
}

// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
func (o ProjectCachePtrOutput) Type() CacheTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectCache) *CacheTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Type
	}).(CacheTypeEnumValuePtrOutput)
}

// Definition of ProjectCache
type ProjectCacheResponse struct {
	// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
	Location *string `pulumi:"location"`
	// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
	Modes []string `pulumi:"modes"`
	// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
	Type *CacheTypeEnumValueResponse `pulumi:"type"`
}

// Definition of ProjectCache
type ProjectCacheResponseOutput struct{ *pulumi.OutputState }

func (ProjectCacheResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCacheResponse)(nil)).Elem()
}

func (o ProjectCacheResponseOutput) ToProjectCacheResponseOutput() ProjectCacheResponseOutput {
	return o
}

func (o ProjectCacheResponseOutput) ToProjectCacheResponseOutputWithContext(ctx context.Context) ProjectCacheResponseOutput {
	return o
}

// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
func (o ProjectCacheResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCacheResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
func (o ProjectCacheResponseOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectCacheResponse) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
func (o ProjectCacheResponseOutput) Type() CacheTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectCacheResponse) *CacheTypeEnumValueResponse { return v.Type }).(CacheTypeEnumValueResponsePtrOutput)
}

type ProjectCacheResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectCacheResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCacheResponse)(nil)).Elem()
}

func (o ProjectCacheResponsePtrOutput) ToProjectCacheResponsePtrOutput() ProjectCacheResponsePtrOutput {
	return o
}

func (o ProjectCacheResponsePtrOutput) ToProjectCacheResponsePtrOutputWithContext(ctx context.Context) ProjectCacheResponsePtrOutput {
	return o
}

func (o ProjectCacheResponsePtrOutput) Elem() ProjectCacheResponseOutput {
	return o.ApplyT(func(v *ProjectCacheResponse) ProjectCacheResponse {
		if v != nil {
			return *v
		}
		var ret ProjectCacheResponse
		return ret
	}).(ProjectCacheResponseOutput)
}

// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
func (o ProjectCacheResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCacheResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
func (o ProjectCacheResponsePtrOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectCacheResponse) []string {
		if v == nil {
			return nil
		}
		return v.Modes
	}).(pulumi.StringArrayOutput)
}

// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p> </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to that build host.</p> </li> </ul>
func (o ProjectCacheResponsePtrOutput) Type() CacheTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectCacheResponse) *CacheTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Type
	}).(CacheTypeEnumValueResponsePtrOutput)
}

// Definition of ProjectEnvironment
type ProjectEnvironment struct {
	// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
	Certificate *string `pulumi:"certificate"`
	// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
	ComputeType *ComputeTypeEnumValue `pulumi:"computeType"`
	// <p>A set of environment variables to make available to builds for this build project.</p>
	EnvironmentVariables []EnvironmentVariable `pulumi:"environmentVariables"`
	// <p>A ProjectFleet object to use for this build project.</p>
	Fleet *ProjectFleet `pulumi:"fleet"`
	// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
	Image *string `pulumi:"image"`
	// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
	ImagePullCredentialsType *ImagePullCredentialsTypeEnumValue `pulumi:"imagePullCredentialsType"`
	// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
	PrivilegedMode *bool `pulumi:"privilegedMode"`
	// <p> The credentials for access to a private registry.</p>
	RegistryCredential *RegistryCredential `pulumi:"registryCredential"`
	// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
	Type *EnvironmentTypeEnumValue `pulumi:"type"`
}

// ProjectEnvironmentInput is an input type that accepts ProjectEnvironmentArgs and ProjectEnvironmentOutput values.
// You can construct a concrete instance of `ProjectEnvironmentInput` via:
//
//	ProjectEnvironmentArgs{...}
type ProjectEnvironmentInput interface {
	pulumi.Input

	ToProjectEnvironmentOutput() ProjectEnvironmentOutput
	ToProjectEnvironmentOutputWithContext(context.Context) ProjectEnvironmentOutput
}

// Definition of ProjectEnvironment
type ProjectEnvironmentArgs struct {
	// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
	ComputeType ComputeTypeEnumValuePtrInput `pulumi:"computeType"`
	// <p>A set of environment variables to make available to builds for this build project.</p>
	EnvironmentVariables EnvironmentVariableArrayInput `pulumi:"environmentVariables"`
	// <p>A ProjectFleet object to use for this build project.</p>
	Fleet ProjectFleetPtrInput `pulumi:"fleet"`
	// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
	Image pulumi.StringPtrInput `pulumi:"image"`
	// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
	ImagePullCredentialsType ImagePullCredentialsTypeEnumValuePtrInput `pulumi:"imagePullCredentialsType"`
	// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
	PrivilegedMode pulumi.BoolPtrInput `pulumi:"privilegedMode"`
	// <p> The credentials for access to a private registry.</p>
	RegistryCredential RegistryCredentialPtrInput `pulumi:"registryCredential"`
	// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
	Type EnvironmentTypeEnumValuePtrInput `pulumi:"type"`
}

func (ProjectEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironment)(nil)).Elem()
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentOutput() ProjectEnvironmentOutput {
	return i.ToProjectEnvironmentOutputWithContext(context.Background())
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentOutputWithContext(ctx context.Context) ProjectEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentOutput)
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return i.ToProjectEnvironmentPtrOutputWithContext(context.Background())
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentOutput).ToProjectEnvironmentPtrOutputWithContext(ctx)
}

// ProjectEnvironmentPtrInput is an input type that accepts ProjectEnvironmentArgs, ProjectEnvironmentPtr and ProjectEnvironmentPtrOutput values.
// You can construct a concrete instance of `ProjectEnvironmentPtrInput` via:
//
//	        ProjectEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ProjectEnvironmentPtrInput interface {
	pulumi.Input

	ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput
	ToProjectEnvironmentPtrOutputWithContext(context.Context) ProjectEnvironmentPtrOutput
}

type projectEnvironmentPtrType ProjectEnvironmentArgs

func ProjectEnvironmentPtr(v *ProjectEnvironmentArgs) ProjectEnvironmentPtrInput {
	return (*projectEnvironmentPtrType)(v)
}

func (*projectEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironment)(nil)).Elem()
}

func (i *projectEnvironmentPtrType) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return i.ToProjectEnvironmentPtrOutputWithContext(context.Background())
}

func (i *projectEnvironmentPtrType) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentPtrOutput)
}

// Definition of ProjectEnvironment
type ProjectEnvironmentOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironment)(nil)).Elem()
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentOutput() ProjectEnvironmentOutput {
	return o
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentOutputWithContext(ctx context.Context) ProjectEnvironmentOutput {
	return o
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return o.ToProjectEnvironmentPtrOutputWithContext(context.Background())
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectEnvironment) *ProjectEnvironment {
		return &v
	}).(ProjectEnvironmentPtrOutput)
}

// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
func (o ProjectEnvironmentOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
func (o ProjectEnvironmentOutput) ComputeType() ComputeTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *ComputeTypeEnumValue { return v.ComputeType }).(ComputeTypeEnumValuePtrOutput)
}

// <p>A set of environment variables to make available to builds for this build project.</p>
func (o ProjectEnvironmentOutput) EnvironmentVariables() EnvironmentVariableArrayOutput {
	return o.ApplyT(func(v ProjectEnvironment) []EnvironmentVariable { return v.EnvironmentVariables }).(EnvironmentVariableArrayOutput)
}

// <p>A ProjectFleet object to use for this build project.</p>
func (o ProjectEnvironmentOutput) Fleet() ProjectFleetPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *ProjectFleet { return v.Fleet }).(ProjectFleetPtrOutput)
}

// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
func (o ProjectEnvironmentOutput) ImagePullCredentialsType() ImagePullCredentialsTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *ImagePullCredentialsTypeEnumValue { return v.ImagePullCredentialsType }).(ImagePullCredentialsTypeEnumValuePtrOutput)
}

// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
func (o ProjectEnvironmentOutput) PrivilegedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *bool { return v.PrivilegedMode }).(pulumi.BoolPtrOutput)
}

// <p> The credentials for access to a private registry.</p>
func (o ProjectEnvironmentOutput) RegistryCredential() RegistryCredentialPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *RegistryCredential { return v.RegistryCredential }).(RegistryCredentialPtrOutput)
}

// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentOutput) Type() EnvironmentTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *EnvironmentTypeEnumValue { return v.Type }).(EnvironmentTypeEnumValuePtrOutput)
}

type ProjectEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironment)(nil)).Elem()
}

func (o ProjectEnvironmentPtrOutput) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return o
}

func (o ProjectEnvironmentPtrOutput) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return o
}

func (o ProjectEnvironmentPtrOutput) Elem() ProjectEnvironmentOutput {
	return o.ApplyT(func(v *ProjectEnvironment) ProjectEnvironment {
		if v != nil {
			return *v
		}
		var ret ProjectEnvironment
		return ret
	}).(ProjectEnvironmentOutput)
}

// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
func (o ProjectEnvironmentPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
func (o ProjectEnvironmentPtrOutput) ComputeType() ComputeTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *ComputeTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.ComputeType
	}).(ComputeTypeEnumValuePtrOutput)
}

// <p>A set of environment variables to make available to builds for this build project.</p>
func (o ProjectEnvironmentPtrOutput) EnvironmentVariables() EnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *ProjectEnvironment) []EnvironmentVariable {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(EnvironmentVariableArrayOutput)
}

// <p>A ProjectFleet object to use for this build project.</p>
func (o ProjectEnvironmentPtrOutput) Fleet() ProjectFleetPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *ProjectFleet {
		if v == nil {
			return nil
		}
		return v.Fleet
	}).(ProjectFleetPtrOutput)
}

// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
func (o ProjectEnvironmentPtrOutput) ImagePullCredentialsType() ImagePullCredentialsTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *ImagePullCredentialsTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.ImagePullCredentialsType
	}).(ImagePullCredentialsTypeEnumValuePtrOutput)
}

// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
func (o ProjectEnvironmentPtrOutput) PrivilegedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *bool {
		if v == nil {
			return nil
		}
		return v.PrivilegedMode
	}).(pulumi.BoolPtrOutput)
}

// <p> The credentials for access to a private registry.</p>
func (o ProjectEnvironmentPtrOutput) RegistryCredential() RegistryCredentialPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *RegistryCredential {
		if v == nil {
			return nil
		}
		return v.RegistryCredential
	}).(RegistryCredentialPtrOutput)
}

// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentPtrOutput) Type() EnvironmentTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *EnvironmentTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Type
	}).(EnvironmentTypeEnumValuePtrOutput)
}

// Definition of ProjectEnvironment
type ProjectEnvironmentResponse struct {
	// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
	Certificate *string `pulumi:"certificate"`
	// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
	ComputeType *ComputeTypeEnumValueResponse `pulumi:"computeType"`
	// <p>A set of environment variables to make available to builds for this build project.</p>
	EnvironmentVariables []EnvironmentVariableResponse `pulumi:"environmentVariables"`
	// <p>A ProjectFleet object to use for this build project.</p>
	Fleet *ProjectFleetResponse `pulumi:"fleet"`
	// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
	Image *string `pulumi:"image"`
	// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
	ImagePullCredentialsType *ImagePullCredentialsTypeEnumValueResponse `pulumi:"imagePullCredentialsType"`
	// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
	PrivilegedMode *bool `pulumi:"privilegedMode"`
	// <p> The credentials for access to a private registry.</p>
	RegistryCredential *RegistryCredentialResponse `pulumi:"registryCredential"`
	// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
	Type *EnvironmentTypeEnumValueResponse `pulumi:"type"`
}

// Definition of ProjectEnvironment
type ProjectEnvironmentResponseOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentResponse)(nil)).Elem()
}

func (o ProjectEnvironmentResponseOutput) ToProjectEnvironmentResponseOutput() ProjectEnvironmentResponseOutput {
	return o
}

func (o ProjectEnvironmentResponseOutput) ToProjectEnvironmentResponseOutputWithContext(ctx context.Context) ProjectEnvironmentResponseOutput {
	return o
}

// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
func (o ProjectEnvironmentResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
func (o ProjectEnvironmentResponseOutput) ComputeType() ComputeTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *ComputeTypeEnumValueResponse { return v.ComputeType }).(ComputeTypeEnumValueResponsePtrOutput)
}

// <p>A set of environment variables to make available to builds for this build project.</p>
func (o ProjectEnvironmentResponseOutput) EnvironmentVariables() EnvironmentVariableResponseArrayOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) []EnvironmentVariableResponse { return v.EnvironmentVariables }).(EnvironmentVariableResponseArrayOutput)
}

// <p>A ProjectFleet object to use for this build project.</p>
func (o ProjectEnvironmentResponseOutput) Fleet() ProjectFleetResponsePtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *ProjectFleetResponse { return v.Fleet }).(ProjectFleetResponsePtrOutput)
}

// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentResponseOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
func (o ProjectEnvironmentResponseOutput) ImagePullCredentialsType() ImagePullCredentialsTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *ImagePullCredentialsTypeEnumValueResponse {
		return v.ImagePullCredentialsType
	}).(ImagePullCredentialsTypeEnumValueResponsePtrOutput)
}

// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
func (o ProjectEnvironmentResponseOutput) PrivilegedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *bool { return v.PrivilegedMode }).(pulumi.BoolPtrOutput)
}

// <p> The credentials for access to a private registry.</p>
func (o ProjectEnvironmentResponseOutput) RegistryCredential() RegistryCredentialResponsePtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *RegistryCredentialResponse { return v.RegistryCredential }).(RegistryCredentialResponsePtrOutput)
}

// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentResponseOutput) Type() EnvironmentTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentResponse) *EnvironmentTypeEnumValueResponse { return v.Type }).(EnvironmentTypeEnumValueResponsePtrOutput)
}

type ProjectEnvironmentResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentResponse)(nil)).Elem()
}

func (o ProjectEnvironmentResponsePtrOutput) ToProjectEnvironmentResponsePtrOutput() ProjectEnvironmentResponsePtrOutput {
	return o
}

func (o ProjectEnvironmentResponsePtrOutput) ToProjectEnvironmentResponsePtrOutputWithContext(ctx context.Context) ProjectEnvironmentResponsePtrOutput {
	return o
}

func (o ProjectEnvironmentResponsePtrOutput) Elem() ProjectEnvironmentResponseOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) ProjectEnvironmentResponse {
		if v != nil {
			return *v
		}
		var ret ProjectEnvironmentResponse
		return ret
	}).(ProjectEnvironmentResponseOutput)
}

// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>
func (o ProjectEnvironmentResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>: Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>: </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds. </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
func (o ProjectEnvironmentResponsePtrOutput) ComputeType() ComputeTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *ComputeTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.ComputeType
	}).(ComputeTypeEnumValueResponsePtrOutput)
}

// <p>A set of environment variables to make available to builds for this build project.</p>
func (o ProjectEnvironmentResponsePtrOutput) EnvironmentVariables() EnvironmentVariableResponseArrayOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) []EnvironmentVariableResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(EnvironmentVariableResponseArrayOutput)
}

// <p>A ProjectFleet object to use for this build project.</p>
func (o ProjectEnvironmentResponsePtrOutput) Fleet() ProjectFleetResponsePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *ProjectFleetResponse {
		if v == nil {
			return nil
		}
		return v.Fleet
	}).(ProjectFleetResponsePtrOutput)
}

// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentResponsePtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
func (o ProjectEnvironmentResponsePtrOutput) ImagePullCredentialsType() ImagePullCredentialsTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *ImagePullCredentialsTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.ImagePullCredentialsType
	}).(ImagePullCredentialsTypeEnumValueResponsePtrOutput)
}

// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
func (o ProjectEnvironmentResponsePtrOutput) PrivilegedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PrivilegedMode
	}).(pulumi.BoolPtrOutput)
}

// <p> The credentials for access to a private registry.</p>
func (o ProjectEnvironmentResponsePtrOutput) RegistryCredential() RegistryCredentialResponsePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *RegistryCredentialResponse {
		if v == nil {
			return nil
		}
		return v.RegistryCredential
	}).(RegistryCredentialResponsePtrOutput)
}

// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p> </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code> are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul> <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
func (o ProjectEnvironmentResponsePtrOutput) Type() EnvironmentTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentResponse) *EnvironmentTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Type
	}).(EnvironmentTypeEnumValueResponsePtrOutput)
}

// Definition of ProjectFileSystemLocation
type ProjectFileSystemLocation struct {
	// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p> <p> The <code>identifier</code> is used to mount your file system. </p>
	Identifier *string `pulumi:"identifier"`
	// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p> <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
	Location *string `pulumi:"location"`
	// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'>Recommended NFS Mount Options</a>. </p>
	MountOptions *string `pulumi:"mountOptions"`
	// <p>The location in the container where you mount the file system. </p>
	MountPoint *string `pulumi:"mountPoint"`
	// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
	Type *FileSystemTypeEnumValue `pulumi:"type"`
}

// ProjectFileSystemLocationInput is an input type that accepts ProjectFileSystemLocationArgs and ProjectFileSystemLocationOutput values.
// You can construct a concrete instance of `ProjectFileSystemLocationInput` via:
//
//	ProjectFileSystemLocationArgs{...}
type ProjectFileSystemLocationInput interface {
	pulumi.Input

	ToProjectFileSystemLocationOutput() ProjectFileSystemLocationOutput
	ToProjectFileSystemLocationOutputWithContext(context.Context) ProjectFileSystemLocationOutput
}

// Definition of ProjectFileSystemLocation
type ProjectFileSystemLocationArgs struct {
	// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p> <p> The <code>identifier</code> is used to mount your file system. </p>
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p> <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
	Location pulumi.StringPtrInput `pulumi:"location"`
	// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'>Recommended NFS Mount Options</a>. </p>
	MountOptions pulumi.StringPtrInput `pulumi:"mountOptions"`
	// <p>The location in the container where you mount the file system. </p>
	MountPoint pulumi.StringPtrInput `pulumi:"mountPoint"`
	// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
	Type FileSystemTypeEnumValuePtrInput `pulumi:"type"`
}

func (ProjectFileSystemLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileSystemLocation)(nil)).Elem()
}

func (i ProjectFileSystemLocationArgs) ToProjectFileSystemLocationOutput() ProjectFileSystemLocationOutput {
	return i.ToProjectFileSystemLocationOutputWithContext(context.Background())
}

func (i ProjectFileSystemLocationArgs) ToProjectFileSystemLocationOutputWithContext(ctx context.Context) ProjectFileSystemLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFileSystemLocationOutput)
}

// ProjectFileSystemLocationArrayInput is an input type that accepts ProjectFileSystemLocationArray and ProjectFileSystemLocationArrayOutput values.
// You can construct a concrete instance of `ProjectFileSystemLocationArrayInput` via:
//
//	ProjectFileSystemLocationArray{ ProjectFileSystemLocationArgs{...} }
type ProjectFileSystemLocationArrayInput interface {
	pulumi.Input

	ToProjectFileSystemLocationArrayOutput() ProjectFileSystemLocationArrayOutput
	ToProjectFileSystemLocationArrayOutputWithContext(context.Context) ProjectFileSystemLocationArrayOutput
}

type ProjectFileSystemLocationArray []ProjectFileSystemLocationInput

func (ProjectFileSystemLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectFileSystemLocation)(nil)).Elem()
}

func (i ProjectFileSystemLocationArray) ToProjectFileSystemLocationArrayOutput() ProjectFileSystemLocationArrayOutput {
	return i.ToProjectFileSystemLocationArrayOutputWithContext(context.Background())
}

func (i ProjectFileSystemLocationArray) ToProjectFileSystemLocationArrayOutputWithContext(ctx context.Context) ProjectFileSystemLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFileSystemLocationArrayOutput)
}

// Definition of ProjectFileSystemLocation
type ProjectFileSystemLocationOutput struct{ *pulumi.OutputState }

func (ProjectFileSystemLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileSystemLocation)(nil)).Elem()
}

func (o ProjectFileSystemLocationOutput) ToProjectFileSystemLocationOutput() ProjectFileSystemLocationOutput {
	return o
}

func (o ProjectFileSystemLocationOutput) ToProjectFileSystemLocationOutputWithContext(ctx context.Context) ProjectFileSystemLocationOutput {
	return o
}

// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p> <p> The <code>identifier</code> is used to mount your file system. </p>
func (o ProjectFileSystemLocationOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p> <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
func (o ProjectFileSystemLocationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'>Recommended NFS Mount Options</a>. </p>
func (o ProjectFileSystemLocationOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// <p>The location in the container where you mount the file system. </p>
func (o ProjectFileSystemLocationOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.MountPoint }).(pulumi.StringPtrOutput)
}

// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
func (o ProjectFileSystemLocationOutput) Type() FileSystemTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *FileSystemTypeEnumValue { return v.Type }).(FileSystemTypeEnumValuePtrOutput)
}

type ProjectFileSystemLocationArrayOutput struct{ *pulumi.OutputState }

func (ProjectFileSystemLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectFileSystemLocation)(nil)).Elem()
}

func (o ProjectFileSystemLocationArrayOutput) ToProjectFileSystemLocationArrayOutput() ProjectFileSystemLocationArrayOutput {
	return o
}

func (o ProjectFileSystemLocationArrayOutput) ToProjectFileSystemLocationArrayOutputWithContext(ctx context.Context) ProjectFileSystemLocationArrayOutput {
	return o
}

func (o ProjectFileSystemLocationArrayOutput) Index(i pulumi.IntInput) ProjectFileSystemLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectFileSystemLocation {
		return vs[0].([]ProjectFileSystemLocation)[vs[1].(int)]
	}).(ProjectFileSystemLocationOutput)
}

// Definition of ProjectFileSystemLocation
type ProjectFileSystemLocationResponse struct {
	// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p> <p> The <code>identifier</code> is used to mount your file system. </p>
	Identifier *string `pulumi:"identifier"`
	// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p> <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
	Location *string `pulumi:"location"`
	// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'>Recommended NFS Mount Options</a>. </p>
	MountOptions *string `pulumi:"mountOptions"`
	// <p>The location in the container where you mount the file system. </p>
	MountPoint *string `pulumi:"mountPoint"`
	// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
	Type *FileSystemTypeEnumValueResponse `pulumi:"type"`
}

// Definition of ProjectFileSystemLocation
type ProjectFileSystemLocationResponseOutput struct{ *pulumi.OutputState }

func (ProjectFileSystemLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileSystemLocationResponse)(nil)).Elem()
}

func (o ProjectFileSystemLocationResponseOutput) ToProjectFileSystemLocationResponseOutput() ProjectFileSystemLocationResponseOutput {
	return o
}

func (o ProjectFileSystemLocationResponseOutput) ToProjectFileSystemLocationResponseOutputWithContext(ctx context.Context) ProjectFileSystemLocationResponseOutput {
	return o
}

// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p> <p> The <code>identifier</code> is used to mount your file system. </p>
func (o ProjectFileSystemLocationResponseOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocationResponse) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p> <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
func (o ProjectFileSystemLocationResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocationResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href='https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html'>Recommended NFS Mount Options</a>. </p>
func (o ProjectFileSystemLocationResponseOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocationResponse) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// <p>The location in the container where you mount the file system. </p>
func (o ProjectFileSystemLocationResponseOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocationResponse) *string { return v.MountPoint }).(pulumi.StringPtrOutput)
}

// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
func (o ProjectFileSystemLocationResponseOutput) Type() FileSystemTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocationResponse) *FileSystemTypeEnumValueResponse { return v.Type }).(FileSystemTypeEnumValueResponsePtrOutput)
}

type ProjectFileSystemLocationResponseArrayOutput struct{ *pulumi.OutputState }

func (ProjectFileSystemLocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectFileSystemLocationResponse)(nil)).Elem()
}

func (o ProjectFileSystemLocationResponseArrayOutput) ToProjectFileSystemLocationResponseArrayOutput() ProjectFileSystemLocationResponseArrayOutput {
	return o
}

func (o ProjectFileSystemLocationResponseArrayOutput) ToProjectFileSystemLocationResponseArrayOutputWithContext(ctx context.Context) ProjectFileSystemLocationResponseArrayOutput {
	return o
}

func (o ProjectFileSystemLocationResponseArrayOutput) Index(i pulumi.IntInput) ProjectFileSystemLocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectFileSystemLocationResponse {
		return vs[0].([]ProjectFileSystemLocationResponse)[vs[1].(int)]
	}).(ProjectFileSystemLocationResponseOutput)
}

// Definition of ProjectFleet
type ProjectFleet struct {
	// <p>Specifies the compute fleet ARN for the build project.</p>
	FleetArn *string `pulumi:"fleetArn"`
}

// ProjectFleetInput is an input type that accepts ProjectFleetArgs and ProjectFleetOutput values.
// You can construct a concrete instance of `ProjectFleetInput` via:
//
//	ProjectFleetArgs{...}
type ProjectFleetInput interface {
	pulumi.Input

	ToProjectFleetOutput() ProjectFleetOutput
	ToProjectFleetOutputWithContext(context.Context) ProjectFleetOutput
}

// Definition of ProjectFleet
type ProjectFleetArgs struct {
	// <p>Specifies the compute fleet ARN for the build project.</p>
	FleetArn pulumi.StringPtrInput `pulumi:"fleetArn"`
}

func (ProjectFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFleet)(nil)).Elem()
}

func (i ProjectFleetArgs) ToProjectFleetOutput() ProjectFleetOutput {
	return i.ToProjectFleetOutputWithContext(context.Background())
}

func (i ProjectFleetArgs) ToProjectFleetOutputWithContext(ctx context.Context) ProjectFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFleetOutput)
}

func (i ProjectFleetArgs) ToProjectFleetPtrOutput() ProjectFleetPtrOutput {
	return i.ToProjectFleetPtrOutputWithContext(context.Background())
}

func (i ProjectFleetArgs) ToProjectFleetPtrOutputWithContext(ctx context.Context) ProjectFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFleetOutput).ToProjectFleetPtrOutputWithContext(ctx)
}

// ProjectFleetPtrInput is an input type that accepts ProjectFleetArgs, ProjectFleetPtr and ProjectFleetPtrOutput values.
// You can construct a concrete instance of `ProjectFleetPtrInput` via:
//
//	        ProjectFleetArgs{...}
//
//	or:
//
//	        nil
type ProjectFleetPtrInput interface {
	pulumi.Input

	ToProjectFleetPtrOutput() ProjectFleetPtrOutput
	ToProjectFleetPtrOutputWithContext(context.Context) ProjectFleetPtrOutput
}

type projectFleetPtrType ProjectFleetArgs

func ProjectFleetPtr(v *ProjectFleetArgs) ProjectFleetPtrInput {
	return (*projectFleetPtrType)(v)
}

func (*projectFleetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFleet)(nil)).Elem()
}

func (i *projectFleetPtrType) ToProjectFleetPtrOutput() ProjectFleetPtrOutput {
	return i.ToProjectFleetPtrOutputWithContext(context.Background())
}

func (i *projectFleetPtrType) ToProjectFleetPtrOutputWithContext(ctx context.Context) ProjectFleetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFleetPtrOutput)
}

// Definition of ProjectFleet
type ProjectFleetOutput struct{ *pulumi.OutputState }

func (ProjectFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFleet)(nil)).Elem()
}

func (o ProjectFleetOutput) ToProjectFleetOutput() ProjectFleetOutput {
	return o
}

func (o ProjectFleetOutput) ToProjectFleetOutputWithContext(ctx context.Context) ProjectFleetOutput {
	return o
}

func (o ProjectFleetOutput) ToProjectFleetPtrOutput() ProjectFleetPtrOutput {
	return o.ToProjectFleetPtrOutputWithContext(context.Background())
}

func (o ProjectFleetOutput) ToProjectFleetPtrOutputWithContext(ctx context.Context) ProjectFleetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectFleet) *ProjectFleet {
		return &v
	}).(ProjectFleetPtrOutput)
}

// <p>Specifies the compute fleet ARN for the build project.</p>
func (o ProjectFleetOutput) FleetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFleet) *string { return v.FleetArn }).(pulumi.StringPtrOutput)
}

type ProjectFleetPtrOutput struct{ *pulumi.OutputState }

func (ProjectFleetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFleet)(nil)).Elem()
}

func (o ProjectFleetPtrOutput) ToProjectFleetPtrOutput() ProjectFleetPtrOutput {
	return o
}

func (o ProjectFleetPtrOutput) ToProjectFleetPtrOutputWithContext(ctx context.Context) ProjectFleetPtrOutput {
	return o
}

func (o ProjectFleetPtrOutput) Elem() ProjectFleetOutput {
	return o.ApplyT(func(v *ProjectFleet) ProjectFleet {
		if v != nil {
			return *v
		}
		var ret ProjectFleet
		return ret
	}).(ProjectFleetOutput)
}

// <p>Specifies the compute fleet ARN for the build project.</p>
func (o ProjectFleetPtrOutput) FleetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFleet) *string {
		if v == nil {
			return nil
		}
		return v.FleetArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ProjectFleet
type ProjectFleetResponse struct {
	// <p>Specifies the compute fleet ARN for the build project.</p>
	FleetArn *string `pulumi:"fleetArn"`
}

// Definition of ProjectFleet
type ProjectFleetResponseOutput struct{ *pulumi.OutputState }

func (ProjectFleetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFleetResponse)(nil)).Elem()
}

func (o ProjectFleetResponseOutput) ToProjectFleetResponseOutput() ProjectFleetResponseOutput {
	return o
}

func (o ProjectFleetResponseOutput) ToProjectFleetResponseOutputWithContext(ctx context.Context) ProjectFleetResponseOutput {
	return o
}

// <p>Specifies the compute fleet ARN for the build project.</p>
func (o ProjectFleetResponseOutput) FleetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFleetResponse) *string { return v.FleetArn }).(pulumi.StringPtrOutput)
}

type ProjectFleetResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectFleetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFleetResponse)(nil)).Elem()
}

func (o ProjectFleetResponsePtrOutput) ToProjectFleetResponsePtrOutput() ProjectFleetResponsePtrOutput {
	return o
}

func (o ProjectFleetResponsePtrOutput) ToProjectFleetResponsePtrOutputWithContext(ctx context.Context) ProjectFleetResponsePtrOutput {
	return o
}

func (o ProjectFleetResponsePtrOutput) Elem() ProjectFleetResponseOutput {
	return o.ApplyT(func(v *ProjectFleetResponse) ProjectFleetResponse {
		if v != nil {
			return *v
		}
		var ret ProjectFleetResponse
		return ret
	}).(ProjectFleetResponseOutput)
}

// <p>Specifies the compute fleet ARN for the build project.</p>
func (o ProjectFleetResponsePtrOutput) FleetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFleetResponse) *string {
		if v == nil {
			return nil
		}
		return v.FleetArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ProjectSource
type ProjectSource struct {
	// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
	Auth *SourceAuth `pulumi:"auth"`
	// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
	BuildStatusConfig *BuildStatusConfig `pulumi:"buildStatusConfig"`
	// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
	Buildspec *string `pulumi:"buildspec"`
	// <p>Information about the Git clone depth for the build project.</p>
	GitCloneDepth *int `pulumi:"gitCloneDepth"`
	// <p> Information about the Git submodules configuration for the build project. </p>
	GitSubmodulesConfig *GitSubmodulesConfig `pulumi:"gitSubmodulesConfig"`
	// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
	InsecureSsl *bool `pulumi:"insecureSsl"`
	// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
	Location *string `pulumi:"location"`
	// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
	ReportBuildStatus *bool `pulumi:"reportBuildStatus"`
	// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
	SourceIdentifier *string `pulumi:"sourceIdentifier"`
	// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
	Type *SourceTypeEnumValue `pulumi:"type"`
}

// ProjectSourceInput is an input type that accepts ProjectSourceArgs and ProjectSourceOutput values.
// You can construct a concrete instance of `ProjectSourceInput` via:
//
//	ProjectSourceArgs{...}
type ProjectSourceInput interface {
	pulumi.Input

	ToProjectSourceOutput() ProjectSourceOutput
	ToProjectSourceOutputWithContext(context.Context) ProjectSourceOutput
}

// Definition of ProjectSource
type ProjectSourceArgs struct {
	// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
	Auth SourceAuthPtrInput `pulumi:"auth"`
	// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
	BuildStatusConfig BuildStatusConfigPtrInput `pulumi:"buildStatusConfig"`
	// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
	Buildspec pulumi.StringPtrInput `pulumi:"buildspec"`
	// <p>Information about the Git clone depth for the build project.</p>
	GitCloneDepth pulumi.IntPtrInput `pulumi:"gitCloneDepth"`
	// <p> Information about the Git submodules configuration for the build project. </p>
	GitSubmodulesConfig GitSubmodulesConfigPtrInput `pulumi:"gitSubmodulesConfig"`
	// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
	InsecureSsl pulumi.BoolPtrInput `pulumi:"insecureSsl"`
	// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
	Location pulumi.StringPtrInput `pulumi:"location"`
	// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
	ReportBuildStatus pulumi.BoolPtrInput `pulumi:"reportBuildStatus"`
	// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
	SourceIdentifier pulumi.StringPtrInput `pulumi:"sourceIdentifier"`
	// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
	Type SourceTypeEnumValuePtrInput `pulumi:"type"`
}

func (ProjectSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSource)(nil)).Elem()
}

func (i ProjectSourceArgs) ToProjectSourceOutput() ProjectSourceOutput {
	return i.ToProjectSourceOutputWithContext(context.Background())
}

func (i ProjectSourceArgs) ToProjectSourceOutputWithContext(ctx context.Context) ProjectSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceOutput)
}

func (i ProjectSourceArgs) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return i.ToProjectSourcePtrOutputWithContext(context.Background())
}

func (i ProjectSourceArgs) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceOutput).ToProjectSourcePtrOutputWithContext(ctx)
}

// ProjectSourcePtrInput is an input type that accepts ProjectSourceArgs, ProjectSourcePtr and ProjectSourcePtrOutput values.
// You can construct a concrete instance of `ProjectSourcePtrInput` via:
//
//	        ProjectSourceArgs{...}
//
//	or:
//
//	        nil
type ProjectSourcePtrInput interface {
	pulumi.Input

	ToProjectSourcePtrOutput() ProjectSourcePtrOutput
	ToProjectSourcePtrOutputWithContext(context.Context) ProjectSourcePtrOutput
}

type projectSourcePtrType ProjectSourceArgs

func ProjectSourcePtr(v *ProjectSourceArgs) ProjectSourcePtrInput {
	return (*projectSourcePtrType)(v)
}

func (*projectSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSource)(nil)).Elem()
}

func (i *projectSourcePtrType) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return i.ToProjectSourcePtrOutputWithContext(context.Background())
}

func (i *projectSourcePtrType) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourcePtrOutput)
}

// ProjectSourceArrayInput is an input type that accepts ProjectSourceArray and ProjectSourceArrayOutput values.
// You can construct a concrete instance of `ProjectSourceArrayInput` via:
//
//	ProjectSourceArray{ ProjectSourceArgs{...} }
type ProjectSourceArrayInput interface {
	pulumi.Input

	ToProjectSourceArrayOutput() ProjectSourceArrayOutput
	ToProjectSourceArrayOutputWithContext(context.Context) ProjectSourceArrayOutput
}

type ProjectSourceArray []ProjectSourceInput

func (ProjectSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSource)(nil)).Elem()
}

func (i ProjectSourceArray) ToProjectSourceArrayOutput() ProjectSourceArrayOutput {
	return i.ToProjectSourceArrayOutputWithContext(context.Background())
}

func (i ProjectSourceArray) ToProjectSourceArrayOutputWithContext(ctx context.Context) ProjectSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceArrayOutput)
}

// Definition of ProjectSource
type ProjectSourceOutput struct{ *pulumi.OutputState }

func (ProjectSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSource)(nil)).Elem()
}

func (o ProjectSourceOutput) ToProjectSourceOutput() ProjectSourceOutput {
	return o
}

func (o ProjectSourceOutput) ToProjectSourceOutputWithContext(ctx context.Context) ProjectSourceOutput {
	return o
}

func (o ProjectSourceOutput) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return o.ToProjectSourcePtrOutputWithContext(context.Background())
}

func (o ProjectSourceOutput) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSource) *ProjectSource {
		return &v
	}).(ProjectSourcePtrOutput)
}

// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
func (o ProjectSourceOutput) Auth() SourceAuthPtrOutput {
	return o.ApplyT(func(v ProjectSource) *SourceAuth { return v.Auth }).(SourceAuthPtrOutput)
}

// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
func (o ProjectSourceOutput) BuildStatusConfig() BuildStatusConfigPtrOutput {
	return o.ApplyT(func(v ProjectSource) *BuildStatusConfig { return v.BuildStatusConfig }).(BuildStatusConfigPtrOutput)
}

// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
func (o ProjectSourceOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSource) *string { return v.Buildspec }).(pulumi.StringPtrOutput)
}

// <p>Information about the Git clone depth for the build project.</p>
func (o ProjectSourceOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectSource) *int { return v.GitCloneDepth }).(pulumi.IntPtrOutput)
}

// <p> Information about the Git submodules configuration for the build project. </p>
func (o ProjectSourceOutput) GitSubmodulesConfig() GitSubmodulesConfigPtrOutput {
	return o.ApplyT(func(v ProjectSource) *GitSubmodulesConfig { return v.GitSubmodulesConfig }).(GitSubmodulesConfigPtrOutput)
}

// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
func (o ProjectSourceOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSource) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
func (o ProjectSourceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSource) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
func (o ProjectSourceOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSource) *bool { return v.ReportBuildStatus }).(pulumi.BoolPtrOutput)
}

// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
func (o ProjectSourceOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSource) *string { return v.SourceIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
func (o ProjectSourceOutput) Type() SourceTypeEnumValuePtrOutput {
	return o.ApplyT(func(v ProjectSource) *SourceTypeEnumValue { return v.Type }).(SourceTypeEnumValuePtrOutput)
}

type ProjectSourcePtrOutput struct{ *pulumi.OutputState }

func (ProjectSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSource)(nil)).Elem()
}

func (o ProjectSourcePtrOutput) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return o
}

func (o ProjectSourcePtrOutput) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return o
}

func (o ProjectSourcePtrOutput) Elem() ProjectSourceOutput {
	return o.ApplyT(func(v *ProjectSource) ProjectSource {
		if v != nil {
			return *v
		}
		var ret ProjectSource
		return ret
	}).(ProjectSourceOutput)
}

// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
func (o ProjectSourcePtrOutput) Auth() SourceAuthPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *SourceAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SourceAuthPtrOutput)
}

// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
func (o ProjectSourcePtrOutput) BuildStatusConfig() BuildStatusConfigPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *BuildStatusConfig {
		if v == nil {
			return nil
		}
		return v.BuildStatusConfig
	}).(BuildStatusConfigPtrOutput)
}

// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
func (o ProjectSourcePtrOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *string {
		if v == nil {
			return nil
		}
		return v.Buildspec
	}).(pulumi.StringPtrOutput)
}

// <p>Information about the Git clone depth for the build project.</p>
func (o ProjectSourcePtrOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *int {
		if v == nil {
			return nil
		}
		return v.GitCloneDepth
	}).(pulumi.IntPtrOutput)
}

// <p> Information about the Git submodules configuration for the build project. </p>
func (o ProjectSourcePtrOutput) GitSubmodulesConfig() GitSubmodulesConfigPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *GitSubmodulesConfig {
		if v == nil {
			return nil
		}
		return v.GitSubmodulesConfig
	}).(GitSubmodulesConfigPtrOutput)
}

// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
func (o ProjectSourcePtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
func (o ProjectSourcePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
func (o ProjectSourcePtrOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *bool {
		if v == nil {
			return nil
		}
		return v.ReportBuildStatus
	}).(pulumi.BoolPtrOutput)
}

// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
func (o ProjectSourcePtrOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceIdentifier
	}).(pulumi.StringPtrOutput)
}

// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
func (o ProjectSourcePtrOutput) Type() SourceTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *ProjectSource) *SourceTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Type
	}).(SourceTypeEnumValuePtrOutput)
}

type ProjectSourceArrayOutput struct{ *pulumi.OutputState }

func (ProjectSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSource)(nil)).Elem()
}

func (o ProjectSourceArrayOutput) ToProjectSourceArrayOutput() ProjectSourceArrayOutput {
	return o
}

func (o ProjectSourceArrayOutput) ToProjectSourceArrayOutputWithContext(ctx context.Context) ProjectSourceArrayOutput {
	return o
}

func (o ProjectSourceArrayOutput) Index(i pulumi.IntInput) ProjectSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSource {
		return vs[0].([]ProjectSource)[vs[1].(int)]
	}).(ProjectSourceOutput)
}

// Definition of ProjectSource
type ProjectSourceResponse struct {
	// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
	Auth *SourceAuthResponse `pulumi:"auth"`
	// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
	BuildStatusConfig *BuildStatusConfigResponse `pulumi:"buildStatusConfig"`
	// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
	Buildspec *string `pulumi:"buildspec"`
	// <p>Information about the Git clone depth for the build project.</p>
	GitCloneDepth *int `pulumi:"gitCloneDepth"`
	// <p> Information about the Git submodules configuration for the build project. </p>
	GitSubmodulesConfig *GitSubmodulesConfigResponse `pulumi:"gitSubmodulesConfig"`
	// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
	InsecureSsl *bool `pulumi:"insecureSsl"`
	// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
	Location *string `pulumi:"location"`
	// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
	ReportBuildStatus *bool `pulumi:"reportBuildStatus"`
	// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
	SourceIdentifier *string `pulumi:"sourceIdentifier"`
	// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
	Type *SourceTypeEnumValueResponse `pulumi:"type"`
}

// Definition of ProjectSource
type ProjectSourceResponseOutput struct{ *pulumi.OutputState }

func (ProjectSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceResponse)(nil)).Elem()
}

func (o ProjectSourceResponseOutput) ToProjectSourceResponseOutput() ProjectSourceResponseOutput {
	return o
}

func (o ProjectSourceResponseOutput) ToProjectSourceResponseOutputWithContext(ctx context.Context) ProjectSourceResponseOutput {
	return o
}

// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
func (o ProjectSourceResponseOutput) Auth() SourceAuthResponsePtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *SourceAuthResponse { return v.Auth }).(SourceAuthResponsePtrOutput)
}

// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
func (o ProjectSourceResponseOutput) BuildStatusConfig() BuildStatusConfigResponsePtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *BuildStatusConfigResponse { return v.BuildStatusConfig }).(BuildStatusConfigResponsePtrOutput)
}

// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
func (o ProjectSourceResponseOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *string { return v.Buildspec }).(pulumi.StringPtrOutput)
}

// <p>Information about the Git clone depth for the build project.</p>
func (o ProjectSourceResponseOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *int { return v.GitCloneDepth }).(pulumi.IntPtrOutput)
}

// <p> Information about the Git submodules configuration for the build project. </p>
func (o ProjectSourceResponseOutput) GitSubmodulesConfig() GitSubmodulesConfigResponsePtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *GitSubmodulesConfigResponse { return v.GitSubmodulesConfig }).(GitSubmodulesConfigResponsePtrOutput)
}

// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
func (o ProjectSourceResponseOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
func (o ProjectSourceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
func (o ProjectSourceResponseOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *bool { return v.ReportBuildStatus }).(pulumi.BoolPtrOutput)
}

// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
func (o ProjectSourceResponseOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *string { return v.SourceIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
func (o ProjectSourceResponseOutput) Type() SourceTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ProjectSourceResponse) *SourceTypeEnumValueResponse { return v.Type }).(SourceTypeEnumValueResponsePtrOutput)
}

type ProjectSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceResponse)(nil)).Elem()
}

func (o ProjectSourceResponsePtrOutput) ToProjectSourceResponsePtrOutput() ProjectSourceResponsePtrOutput {
	return o
}

func (o ProjectSourceResponsePtrOutput) ToProjectSourceResponsePtrOutputWithContext(ctx context.Context) ProjectSourceResponsePtrOutput {
	return o
}

func (o ProjectSourceResponsePtrOutput) Elem() ProjectSourceResponseOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) ProjectSourceResponse {
		if v != nil {
			return *v
		}
		var ret ProjectSourceResponse
		return ret
	}).(ProjectSourceResponseOutput)
}

// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
func (o ProjectSourceResponsePtrOutput) Auth() SourceAuthResponsePtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *SourceAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SourceAuthResponsePtrOutput)
}

// <p>Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
func (o ProjectSourceResponsePtrOutput) BuildStatusConfig() BuildStatusConfigResponsePtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *BuildStatusConfigResponse {
		if v == nil {
			return nil
		}
		return v.BuildStatusConfig
	}).(BuildStatusConfigResponsePtrOutput)
}

// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>
func (o ProjectSourceResponsePtrOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Buildspec
	}).(pulumi.StringPtrOutput)
}

// <p>Information about the Git clone depth for the build project.</p>
func (o ProjectSourceResponsePtrOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *int {
		if v == nil {
			return nil
		}
		return v.GitCloneDepth
	}).(pulumi.IntPtrOutput)
}

// <p> Information about the Git submodules configuration for the build project. </p>
func (o ProjectSourceResponsePtrOutput) GitSubmodulesConfig() GitSubmodulesConfigResponsePtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *GitSubmodulesConfigResponse {
		if v == nil {
			return nil
		}
		return v.GitSubmodulesConfig
	}).(GitSubmodulesConfigResponsePtrOutput)
}

// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
func (o ProjectSourceResponsePtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>
func (o ProjectSourceResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>
func (o ProjectSourceResponsePtrOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ReportBuildStatus
	}).(pulumi.BoolPtrOutput)
}

// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
func (o ProjectSourceResponsePtrOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceIdentifier
	}).(pulumi.StringPtrOutput)
}

// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li> <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>: The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
func (o ProjectSourceResponsePtrOutput) Type() SourceTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ProjectSourceResponse) *SourceTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Type
	}).(SourceTypeEnumValueResponsePtrOutput)
}

type ProjectSourceResponseArrayOutput struct{ *pulumi.OutputState }

func (ProjectSourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSourceResponse)(nil)).Elem()
}

func (o ProjectSourceResponseArrayOutput) ToProjectSourceResponseArrayOutput() ProjectSourceResponseArrayOutput {
	return o
}

func (o ProjectSourceResponseArrayOutput) ToProjectSourceResponseArrayOutputWithContext(ctx context.Context) ProjectSourceResponseArrayOutput {
	return o
}

func (o ProjectSourceResponseArrayOutput) Index(i pulumi.IntInput) ProjectSourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSourceResponse {
		return vs[0].([]ProjectSourceResponse)[vs[1].(int)]
	}).(ProjectSourceResponseOutput)
}

// Definition of ProjectSourceVersion
type ProjectSourceVersion struct {
	// <p>An identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
	SourceIdentifier *string `pulumi:"sourceIdentifier"`
	// <p>The source version for the corresponding source identifier. If specified, must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub or GitLab: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example, <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents the build input ZIP file to use.</p> </li> </ul> <p> For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
	SourceVersion *string `pulumi:"sourceVersion"`
}

// ProjectSourceVersionInput is an input type that accepts ProjectSourceVersionArgs and ProjectSourceVersionOutput values.
// You can construct a concrete instance of `ProjectSourceVersionInput` via:
//
//	ProjectSourceVersionArgs{...}
type ProjectSourceVersionInput interface {
	pulumi.Input

	ToProjectSourceVersionOutput() ProjectSourceVersionOutput
	ToProjectSourceVersionOutputWithContext(context.Context) ProjectSourceVersionOutput
}

// Definition of ProjectSourceVersion
type ProjectSourceVersionArgs struct {
	// <p>An identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
	SourceIdentifier pulumi.StringPtrInput `pulumi:"sourceIdentifier"`
	// <p>The source version for the corresponding source identifier. If specified, must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub or GitLab: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example, <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents the build input ZIP file to use.</p> </li> </ul> <p> For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
	SourceVersion pulumi.StringPtrInput `pulumi:"sourceVersion"`
}

func (ProjectSourceVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceVersion)(nil)).Elem()
}

func (i ProjectSourceVersionArgs) ToProjectSourceVersionOutput() ProjectSourceVersionOutput {
	return i.ToProjectSourceVersionOutputWithContext(context.Background())
}

func (i ProjectSourceVersionArgs) ToProjectSourceVersionOutputWithContext(ctx context.Context) ProjectSourceVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceVersionOutput)
}

// ProjectSourceVersionArrayInput is an input type that accepts ProjectSourceVersionArray and ProjectSourceVersionArrayOutput values.
// You can construct a concrete instance of `ProjectSourceVersionArrayInput` via:
//
//	ProjectSourceVersionArray{ ProjectSourceVersionArgs{...} }
type ProjectSourceVersionArrayInput interface {
	pulumi.Input

	ToProjectSourceVersionArrayOutput() ProjectSourceVersionArrayOutput
	ToProjectSourceVersionArrayOutputWithContext(context.Context) ProjectSourceVersionArrayOutput
}

type ProjectSourceVersionArray []ProjectSourceVersionInput

func (ProjectSourceVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSourceVersion)(nil)).Elem()
}

func (i ProjectSourceVersionArray) ToProjectSourceVersionArrayOutput() ProjectSourceVersionArrayOutput {
	return i.ToProjectSourceVersionArrayOutputWithContext(context.Background())
}

func (i ProjectSourceVersionArray) ToProjectSourceVersionArrayOutputWithContext(ctx context.Context) ProjectSourceVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceVersionArrayOutput)
}

// Definition of ProjectSourceVersion
type ProjectSourceVersionOutput struct{ *pulumi.OutputState }

func (ProjectSourceVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceVersion)(nil)).Elem()
}

func (o ProjectSourceVersionOutput) ToProjectSourceVersionOutput() ProjectSourceVersionOutput {
	return o
}

func (o ProjectSourceVersionOutput) ToProjectSourceVersionOutputWithContext(ctx context.Context) ProjectSourceVersionOutput {
	return o
}

// <p>An identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
func (o ProjectSourceVersionOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceVersion) *string { return v.SourceIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The source version for the corresponding source identifier. If specified, must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub or GitLab: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example, <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents the build input ZIP file to use.</p> </li> </ul> <p> For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
func (o ProjectSourceVersionOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceVersion) *string { return v.SourceVersion }).(pulumi.StringPtrOutput)
}

type ProjectSourceVersionArrayOutput struct{ *pulumi.OutputState }

func (ProjectSourceVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSourceVersion)(nil)).Elem()
}

func (o ProjectSourceVersionArrayOutput) ToProjectSourceVersionArrayOutput() ProjectSourceVersionArrayOutput {
	return o
}

func (o ProjectSourceVersionArrayOutput) ToProjectSourceVersionArrayOutputWithContext(ctx context.Context) ProjectSourceVersionArrayOutput {
	return o
}

func (o ProjectSourceVersionArrayOutput) Index(i pulumi.IntInput) ProjectSourceVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSourceVersion {
		return vs[0].([]ProjectSourceVersion)[vs[1].(int)]
	}).(ProjectSourceVersionOutput)
}

// Definition of ProjectSourceVersion
type ProjectSourceVersionResponse struct {
	// <p>An identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
	SourceIdentifier *string `pulumi:"sourceIdentifier"`
	// <p>The source version for the corresponding source identifier. If specified, must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub or GitLab: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example, <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents the build input ZIP file to use.</p> </li> </ul> <p> For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
	SourceVersion *string `pulumi:"sourceVersion"`
}

// Definition of ProjectSourceVersion
type ProjectSourceVersionResponseOutput struct{ *pulumi.OutputState }

func (ProjectSourceVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceVersionResponse)(nil)).Elem()
}

func (o ProjectSourceVersionResponseOutput) ToProjectSourceVersionResponseOutput() ProjectSourceVersionResponseOutput {
	return o
}

func (o ProjectSourceVersionResponseOutput) ToProjectSourceVersionResponseOutputWithContext(ctx context.Context) ProjectSourceVersionResponseOutput {
	return o
}

// <p>An identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
func (o ProjectSourceVersionResponseOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceVersionResponse) *string { return v.SourceIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The source version for the corresponding source identifier. If specified, must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub or GitLab: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example, <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents the build input ZIP file to use.</p> </li> </ul> <p> For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
func (o ProjectSourceVersionResponseOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceVersionResponse) *string { return v.SourceVersion }).(pulumi.StringPtrOutput)
}

type ProjectSourceVersionResponseArrayOutput struct{ *pulumi.OutputState }

func (ProjectSourceVersionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSourceVersionResponse)(nil)).Elem()
}

func (o ProjectSourceVersionResponseArrayOutput) ToProjectSourceVersionResponseArrayOutput() ProjectSourceVersionResponseArrayOutput {
	return o
}

func (o ProjectSourceVersionResponseArrayOutput) ToProjectSourceVersionResponseArrayOutputWithContext(ctx context.Context) ProjectSourceVersionResponseArrayOutput {
	return o
}

func (o ProjectSourceVersionResponseArrayOutput) Index(i pulumi.IntInput) ProjectSourceVersionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSourceVersionResponse {
		return vs[0].([]ProjectSourceVersionResponse)[vs[1].(int)]
	}).(ProjectSourceVersionResponseOutput)
}

// Definition of ProjectVisibilityTypeEnumValue
type ProjectVisibilityTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ProjectVisibilityTypeEnumValueInput is an input type that accepts ProjectVisibilityTypeEnumValueArgs and ProjectVisibilityTypeEnumValueOutput values.
// You can construct a concrete instance of `ProjectVisibilityTypeEnumValueInput` via:
//
//	ProjectVisibilityTypeEnumValueArgs{...}
type ProjectVisibilityTypeEnumValueInput interface {
	pulumi.Input

	ToProjectVisibilityTypeEnumValueOutput() ProjectVisibilityTypeEnumValueOutput
	ToProjectVisibilityTypeEnumValueOutputWithContext(context.Context) ProjectVisibilityTypeEnumValueOutput
}

// Definition of ProjectVisibilityTypeEnumValue
type ProjectVisibilityTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProjectVisibilityTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVisibilityTypeEnumValue)(nil)).Elem()
}

func (i ProjectVisibilityTypeEnumValueArgs) ToProjectVisibilityTypeEnumValueOutput() ProjectVisibilityTypeEnumValueOutput {
	return i.ToProjectVisibilityTypeEnumValueOutputWithContext(context.Background())
}

func (i ProjectVisibilityTypeEnumValueArgs) ToProjectVisibilityTypeEnumValueOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVisibilityTypeEnumValueOutput)
}

func (i ProjectVisibilityTypeEnumValueArgs) ToProjectVisibilityTypeEnumValuePtrOutput() ProjectVisibilityTypeEnumValuePtrOutput {
	return i.ToProjectVisibilityTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i ProjectVisibilityTypeEnumValueArgs) ToProjectVisibilityTypeEnumValuePtrOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVisibilityTypeEnumValueOutput).ToProjectVisibilityTypeEnumValuePtrOutputWithContext(ctx)
}

// ProjectVisibilityTypeEnumValuePtrInput is an input type that accepts ProjectVisibilityTypeEnumValueArgs, ProjectVisibilityTypeEnumValuePtr and ProjectVisibilityTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `ProjectVisibilityTypeEnumValuePtrInput` via:
//
//	        ProjectVisibilityTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type ProjectVisibilityTypeEnumValuePtrInput interface {
	pulumi.Input

	ToProjectVisibilityTypeEnumValuePtrOutput() ProjectVisibilityTypeEnumValuePtrOutput
	ToProjectVisibilityTypeEnumValuePtrOutputWithContext(context.Context) ProjectVisibilityTypeEnumValuePtrOutput
}

type projectVisibilityTypeEnumValuePtrType ProjectVisibilityTypeEnumValueArgs

func ProjectVisibilityTypeEnumValuePtr(v *ProjectVisibilityTypeEnumValueArgs) ProjectVisibilityTypeEnumValuePtrInput {
	return (*projectVisibilityTypeEnumValuePtrType)(v)
}

func (*projectVisibilityTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVisibilityTypeEnumValue)(nil)).Elem()
}

func (i *projectVisibilityTypeEnumValuePtrType) ToProjectVisibilityTypeEnumValuePtrOutput() ProjectVisibilityTypeEnumValuePtrOutput {
	return i.ToProjectVisibilityTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *projectVisibilityTypeEnumValuePtrType) ToProjectVisibilityTypeEnumValuePtrOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVisibilityTypeEnumValuePtrOutput)
}

// Definition of ProjectVisibilityTypeEnumValue
type ProjectVisibilityTypeEnumValueOutput struct{ *pulumi.OutputState }

func (ProjectVisibilityTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVisibilityTypeEnumValue)(nil)).Elem()
}

func (o ProjectVisibilityTypeEnumValueOutput) ToProjectVisibilityTypeEnumValueOutput() ProjectVisibilityTypeEnumValueOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValueOutput) ToProjectVisibilityTypeEnumValueOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValueOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValueOutput) ToProjectVisibilityTypeEnumValuePtrOutput() ProjectVisibilityTypeEnumValuePtrOutput {
	return o.ToProjectVisibilityTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o ProjectVisibilityTypeEnumValueOutput) ToProjectVisibilityTypeEnumValuePtrOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectVisibilityTypeEnumValue) *ProjectVisibilityTypeEnumValue {
		return &v
	}).(ProjectVisibilityTypeEnumValuePtrOutput)
}

// Property value
func (o ProjectVisibilityTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVisibilityTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProjectVisibilityTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ProjectVisibilityTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVisibilityTypeEnumValue)(nil)).Elem()
}

func (o ProjectVisibilityTypeEnumValuePtrOutput) ToProjectVisibilityTypeEnumValuePtrOutput() ProjectVisibilityTypeEnumValuePtrOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValuePtrOutput) ToProjectVisibilityTypeEnumValuePtrOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValuePtrOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValuePtrOutput) Elem() ProjectVisibilityTypeEnumValueOutput {
	return o.ApplyT(func(v *ProjectVisibilityTypeEnumValue) ProjectVisibilityTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret ProjectVisibilityTypeEnumValue
		return ret
	}).(ProjectVisibilityTypeEnumValueOutput)
}

// Property value
func (o ProjectVisibilityTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectVisibilityTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ProjectVisibilityTypeEnumValue
type ProjectVisibilityTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ProjectVisibilityTypeEnumValue
type ProjectVisibilityTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ProjectVisibilityTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVisibilityTypeEnumValueResponse)(nil)).Elem()
}

func (o ProjectVisibilityTypeEnumValueResponseOutput) ToProjectVisibilityTypeEnumValueResponseOutput() ProjectVisibilityTypeEnumValueResponseOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValueResponseOutput) ToProjectVisibilityTypeEnumValueResponseOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o ProjectVisibilityTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVisibilityTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProjectVisibilityTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectVisibilityTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVisibilityTypeEnumValueResponse)(nil)).Elem()
}

func (o ProjectVisibilityTypeEnumValueResponsePtrOutput) ToProjectVisibilityTypeEnumValueResponsePtrOutput() ProjectVisibilityTypeEnumValueResponsePtrOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValueResponsePtrOutput) ToProjectVisibilityTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) ProjectVisibilityTypeEnumValueResponsePtrOutput {
	return o
}

func (o ProjectVisibilityTypeEnumValueResponsePtrOutput) Elem() ProjectVisibilityTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *ProjectVisibilityTypeEnumValueResponse) ProjectVisibilityTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ProjectVisibilityTypeEnumValueResponse
		return ret
	}).(ProjectVisibilityTypeEnumValueResponseOutput)
}

// Property value
func (o ProjectVisibilityTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectVisibilityTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Projection
type Projection struct {
	// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
	NonKeyAttributes []string `pulumi:"nonKeyAttributes"`
	// The set of attributes that are projected into the index:  +   ``KEYS_ONLY`` - Only the index and primary keys are projected into the index.  +   ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include other non-key attributes that you specify.  +   ``ALL`` - All of the table attributes are projected into the index.   When using the DynamoDB console, ``ALL`` is selected by default.
	ProjectionType *string `pulumi:"projectionType"`
}

// ProjectionInput is an input type that accepts ProjectionArgs and ProjectionOutput values.
// You can construct a concrete instance of `ProjectionInput` via:
//
//	ProjectionArgs{...}
type ProjectionInput interface {
	pulumi.Input

	ToProjectionOutput() ProjectionOutput
	ToProjectionOutputWithContext(context.Context) ProjectionOutput
}

// Definition of Projection
type ProjectionArgs struct {
	// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
	NonKeyAttributes pulumi.StringArrayInput `pulumi:"nonKeyAttributes"`
	// The set of attributes that are projected into the index:  +   ``KEYS_ONLY`` - Only the index and primary keys are projected into the index.  +   ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include other non-key attributes that you specify.  +   ``ALL`` - All of the table attributes are projected into the index.   When using the DynamoDB console, ``ALL`` is selected by default.
	ProjectionType pulumi.StringPtrInput `pulumi:"projectionType"`
}

func (ProjectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Projection)(nil)).Elem()
}

func (i ProjectionArgs) ToProjectionOutput() ProjectionOutput {
	return i.ToProjectionOutputWithContext(context.Background())
}

func (i ProjectionArgs) ToProjectionOutputWithContext(ctx context.Context) ProjectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectionOutput)
}

func (i ProjectionArgs) ToProjectionPtrOutput() ProjectionPtrOutput {
	return i.ToProjectionPtrOutputWithContext(context.Background())
}

func (i ProjectionArgs) ToProjectionPtrOutputWithContext(ctx context.Context) ProjectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectionOutput).ToProjectionPtrOutputWithContext(ctx)
}

// ProjectionPtrInput is an input type that accepts ProjectionArgs, ProjectionPtr and ProjectionPtrOutput values.
// You can construct a concrete instance of `ProjectionPtrInput` via:
//
//	        ProjectionArgs{...}
//
//	or:
//
//	        nil
type ProjectionPtrInput interface {
	pulumi.Input

	ToProjectionPtrOutput() ProjectionPtrOutput
	ToProjectionPtrOutputWithContext(context.Context) ProjectionPtrOutput
}

type projectionPtrType ProjectionArgs

func ProjectionPtr(v *ProjectionArgs) ProjectionPtrInput {
	return (*projectionPtrType)(v)
}

func (*projectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Projection)(nil)).Elem()
}

func (i *projectionPtrType) ToProjectionPtrOutput() ProjectionPtrOutput {
	return i.ToProjectionPtrOutputWithContext(context.Background())
}

func (i *projectionPtrType) ToProjectionPtrOutputWithContext(ctx context.Context) ProjectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectionPtrOutput)
}

// Definition of Projection
type ProjectionOutput struct{ *pulumi.OutputState }

func (ProjectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Projection)(nil)).Elem()
}

func (o ProjectionOutput) ToProjectionOutput() ProjectionOutput {
	return o
}

func (o ProjectionOutput) ToProjectionOutputWithContext(ctx context.Context) ProjectionOutput {
	return o
}

func (o ProjectionOutput) ToProjectionPtrOutput() ProjectionPtrOutput {
	return o.ToProjectionPtrOutputWithContext(context.Background())
}

func (o ProjectionOutput) ToProjectionPtrOutputWithContext(ctx context.Context) ProjectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Projection) *Projection {
		return &v
	}).(ProjectionPtrOutput)
}

// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of “NonKeyAttributes“ summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
func (o ProjectionOutput) NonKeyAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Projection) []string { return v.NonKeyAttributes }).(pulumi.StringArrayOutput)
}

// The set of attributes that are projected into the index:  +   “KEYS_ONLY“ - Only the index and primary keys are projected into the index.  +   “INCLUDE“ - In addition to the attributes described in “KEYS_ONLY“, the secondary index will include other non-key attributes that you specify.  +   “ALL“ - All of the table attributes are projected into the index.   When using the DynamoDB console, “ALL“ is selected by default.
func (o ProjectionOutput) ProjectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Projection) *string { return v.ProjectionType }).(pulumi.StringPtrOutput)
}

type ProjectionPtrOutput struct{ *pulumi.OutputState }

func (ProjectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Projection)(nil)).Elem()
}

func (o ProjectionPtrOutput) ToProjectionPtrOutput() ProjectionPtrOutput {
	return o
}

func (o ProjectionPtrOutput) ToProjectionPtrOutputWithContext(ctx context.Context) ProjectionPtrOutput {
	return o
}

func (o ProjectionPtrOutput) Elem() ProjectionOutput {
	return o.ApplyT(func(v *Projection) Projection {
		if v != nil {
			return *v
		}
		var ret Projection
		return ret
	}).(ProjectionOutput)
}

// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of “NonKeyAttributes“ summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
func (o ProjectionPtrOutput) NonKeyAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Projection) []string {
		if v == nil {
			return nil
		}
		return v.NonKeyAttributes
	}).(pulumi.StringArrayOutput)
}

// The set of attributes that are projected into the index:  +   “KEYS_ONLY“ - Only the index and primary keys are projected into the index.  +   “INCLUDE“ - In addition to the attributes described in “KEYS_ONLY“, the secondary index will include other non-key attributes that you specify.  +   “ALL“ - All of the table attributes are projected into the index.   When using the DynamoDB console, “ALL“ is selected by default.
func (o ProjectionPtrOutput) ProjectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Projection) *string {
		if v == nil {
			return nil
		}
		return v.ProjectionType
	}).(pulumi.StringPtrOutput)
}

// Definition of Projection
type ProjectionResponse struct {
	// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
	NonKeyAttributes []string `pulumi:"nonKeyAttributes"`
	// The set of attributes that are projected into the index:  +   ``KEYS_ONLY`` - Only the index and primary keys are projected into the index.  +   ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include other non-key attributes that you specify.  +   ``ALL`` - All of the table attributes are projected into the index.   When using the DynamoDB console, ``ALL`` is selected by default.
	ProjectionType *string `pulumi:"projectionType"`
}

// Definition of Projection
type ProjectionResponseOutput struct{ *pulumi.OutputState }

func (ProjectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectionResponse)(nil)).Elem()
}

func (o ProjectionResponseOutput) ToProjectionResponseOutput() ProjectionResponseOutput {
	return o
}

func (o ProjectionResponseOutput) ToProjectionResponseOutputWithContext(ctx context.Context) ProjectionResponseOutput {
	return o
}

// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of “NonKeyAttributes“ summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
func (o ProjectionResponseOutput) NonKeyAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectionResponse) []string { return v.NonKeyAttributes }).(pulumi.StringArrayOutput)
}

// The set of attributes that are projected into the index:  +   “KEYS_ONLY“ - Only the index and primary keys are projected into the index.  +   “INCLUDE“ - In addition to the attributes described in “KEYS_ONLY“, the secondary index will include other non-key attributes that you specify.  +   “ALL“ - All of the table attributes are projected into the index.   When using the DynamoDB console, “ALL“ is selected by default.
func (o ProjectionResponseOutput) ProjectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectionResponse) *string { return v.ProjectionType }).(pulumi.StringPtrOutput)
}

type ProjectionResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectionResponse)(nil)).Elem()
}

func (o ProjectionResponsePtrOutput) ToProjectionResponsePtrOutput() ProjectionResponsePtrOutput {
	return o
}

func (o ProjectionResponsePtrOutput) ToProjectionResponsePtrOutputWithContext(ctx context.Context) ProjectionResponsePtrOutput {
	return o
}

func (o ProjectionResponsePtrOutput) Elem() ProjectionResponseOutput {
	return o.ApplyT(func(v *ProjectionResponse) ProjectionResponse {
		if v != nil {
			return *v
		}
		var ret ProjectionResponse
		return ret
	}).(ProjectionResponseOutput)
}

// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of “NonKeyAttributes“ summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
func (o ProjectionResponsePtrOutput) NonKeyAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectionResponse) []string {
		if v == nil {
			return nil
		}
		return v.NonKeyAttributes
	}).(pulumi.StringArrayOutput)
}

// The set of attributes that are projected into the index:  +   “KEYS_ONLY“ - Only the index and primary keys are projected into the index.  +   “INCLUDE“ - In addition to the attributes described in “KEYS_ONLY“, the secondary index will include other non-key attributes that you specify.  +   “ALL“ - All of the table attributes are projected into the index.   When using the DynamoDB console, “ALL“ is selected by default.
func (o ProjectionResponsePtrOutput) ProjectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProjectionType
	}).(pulumi.StringPtrOutput)
}

// Definition of PropertyValueTypeEnumValue
type PropertyValueTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// PropertyValueTypeEnumValueInput is an input type that accepts PropertyValueTypeEnumValueArgs and PropertyValueTypeEnumValueOutput values.
// You can construct a concrete instance of `PropertyValueTypeEnumValueInput` via:
//
//	PropertyValueTypeEnumValueArgs{...}
type PropertyValueTypeEnumValueInput interface {
	pulumi.Input

	ToPropertyValueTypeEnumValueOutput() PropertyValueTypeEnumValueOutput
	ToPropertyValueTypeEnumValueOutputWithContext(context.Context) PropertyValueTypeEnumValueOutput
}

// Definition of PropertyValueTypeEnumValue
type PropertyValueTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PropertyValueTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyValueTypeEnumValue)(nil)).Elem()
}

func (i PropertyValueTypeEnumValueArgs) ToPropertyValueTypeEnumValueOutput() PropertyValueTypeEnumValueOutput {
	return i.ToPropertyValueTypeEnumValueOutputWithContext(context.Background())
}

func (i PropertyValueTypeEnumValueArgs) ToPropertyValueTypeEnumValueOutputWithContext(ctx context.Context) PropertyValueTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyValueTypeEnumValueOutput)
}

func (i PropertyValueTypeEnumValueArgs) ToPropertyValueTypeEnumValuePtrOutput() PropertyValueTypeEnumValuePtrOutput {
	return i.ToPropertyValueTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i PropertyValueTypeEnumValueArgs) ToPropertyValueTypeEnumValuePtrOutputWithContext(ctx context.Context) PropertyValueTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyValueTypeEnumValueOutput).ToPropertyValueTypeEnumValuePtrOutputWithContext(ctx)
}

// PropertyValueTypeEnumValuePtrInput is an input type that accepts PropertyValueTypeEnumValueArgs, PropertyValueTypeEnumValuePtr and PropertyValueTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `PropertyValueTypeEnumValuePtrInput` via:
//
//	        PropertyValueTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type PropertyValueTypeEnumValuePtrInput interface {
	pulumi.Input

	ToPropertyValueTypeEnumValuePtrOutput() PropertyValueTypeEnumValuePtrOutput
	ToPropertyValueTypeEnumValuePtrOutputWithContext(context.Context) PropertyValueTypeEnumValuePtrOutput
}

type propertyValueTypeEnumValuePtrType PropertyValueTypeEnumValueArgs

func PropertyValueTypeEnumValuePtr(v *PropertyValueTypeEnumValueArgs) PropertyValueTypeEnumValuePtrInput {
	return (*propertyValueTypeEnumValuePtrType)(v)
}

func (*propertyValueTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyValueTypeEnumValue)(nil)).Elem()
}

func (i *propertyValueTypeEnumValuePtrType) ToPropertyValueTypeEnumValuePtrOutput() PropertyValueTypeEnumValuePtrOutput {
	return i.ToPropertyValueTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *propertyValueTypeEnumValuePtrType) ToPropertyValueTypeEnumValuePtrOutputWithContext(ctx context.Context) PropertyValueTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyValueTypeEnumValuePtrOutput)
}

// Definition of PropertyValueTypeEnumValue
type PropertyValueTypeEnumValueOutput struct{ *pulumi.OutputState }

func (PropertyValueTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyValueTypeEnumValue)(nil)).Elem()
}

func (o PropertyValueTypeEnumValueOutput) ToPropertyValueTypeEnumValueOutput() PropertyValueTypeEnumValueOutput {
	return o
}

func (o PropertyValueTypeEnumValueOutput) ToPropertyValueTypeEnumValueOutputWithContext(ctx context.Context) PropertyValueTypeEnumValueOutput {
	return o
}

func (o PropertyValueTypeEnumValueOutput) ToPropertyValueTypeEnumValuePtrOutput() PropertyValueTypeEnumValuePtrOutput {
	return o.ToPropertyValueTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o PropertyValueTypeEnumValueOutput) ToPropertyValueTypeEnumValuePtrOutputWithContext(ctx context.Context) PropertyValueTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyValueTypeEnumValue) *PropertyValueTypeEnumValue {
		return &v
	}).(PropertyValueTypeEnumValuePtrOutput)
}

// Property value
func (o PropertyValueTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyValueTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PropertyValueTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (PropertyValueTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyValueTypeEnumValue)(nil)).Elem()
}

func (o PropertyValueTypeEnumValuePtrOutput) ToPropertyValueTypeEnumValuePtrOutput() PropertyValueTypeEnumValuePtrOutput {
	return o
}

func (o PropertyValueTypeEnumValuePtrOutput) ToPropertyValueTypeEnumValuePtrOutputWithContext(ctx context.Context) PropertyValueTypeEnumValuePtrOutput {
	return o
}

func (o PropertyValueTypeEnumValuePtrOutput) Elem() PropertyValueTypeEnumValueOutput {
	return o.ApplyT(func(v *PropertyValueTypeEnumValue) PropertyValueTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret PropertyValueTypeEnumValue
		return ret
	}).(PropertyValueTypeEnumValueOutput)
}

// Property value
func (o PropertyValueTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyValueTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of PropertyValueTypeEnumValue
type PropertyValueTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of PropertyValueTypeEnumValue
type PropertyValueTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (PropertyValueTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyValueTypeEnumValueResponse)(nil)).Elem()
}

func (o PropertyValueTypeEnumValueResponseOutput) ToPropertyValueTypeEnumValueResponseOutput() PropertyValueTypeEnumValueResponseOutput {
	return o
}

func (o PropertyValueTypeEnumValueResponseOutput) ToPropertyValueTypeEnumValueResponseOutputWithContext(ctx context.Context) PropertyValueTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o PropertyValueTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyValueTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PropertyValueTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (PropertyValueTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyValueTypeEnumValueResponse)(nil)).Elem()
}

func (o PropertyValueTypeEnumValueResponsePtrOutput) ToPropertyValueTypeEnumValueResponsePtrOutput() PropertyValueTypeEnumValueResponsePtrOutput {
	return o
}

func (o PropertyValueTypeEnumValueResponsePtrOutput) ToPropertyValueTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) PropertyValueTypeEnumValueResponsePtrOutput {
	return o
}

func (o PropertyValueTypeEnumValueResponsePtrOutput) Elem() PropertyValueTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *PropertyValueTypeEnumValueResponse) PropertyValueTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret PropertyValueTypeEnumValueResponse
		return ret
	}).(PropertyValueTypeEnumValueResponseOutput)
}

// Property value
func (o PropertyValueTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyValueTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ProposedMultiRegionAccessPointPolicy
type ProposedMultiRegionAccessPointPolicy struct {
	// <p>The details of the proposed policy.</p>
	Policy *string `pulumi:"policy"`
}

// ProposedMultiRegionAccessPointPolicyInput is an input type that accepts ProposedMultiRegionAccessPointPolicyArgs and ProposedMultiRegionAccessPointPolicyOutput values.
// You can construct a concrete instance of `ProposedMultiRegionAccessPointPolicyInput` via:
//
//	ProposedMultiRegionAccessPointPolicyArgs{...}
type ProposedMultiRegionAccessPointPolicyInput interface {
	pulumi.Input

	ToProposedMultiRegionAccessPointPolicyOutput() ProposedMultiRegionAccessPointPolicyOutput
	ToProposedMultiRegionAccessPointPolicyOutputWithContext(context.Context) ProposedMultiRegionAccessPointPolicyOutput
}

// Definition of ProposedMultiRegionAccessPointPolicy
type ProposedMultiRegionAccessPointPolicyArgs struct {
	// <p>The details of the proposed policy.</p>
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (ProposedMultiRegionAccessPointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProposedMultiRegionAccessPointPolicy)(nil)).Elem()
}

func (i ProposedMultiRegionAccessPointPolicyArgs) ToProposedMultiRegionAccessPointPolicyOutput() ProposedMultiRegionAccessPointPolicyOutput {
	return i.ToProposedMultiRegionAccessPointPolicyOutputWithContext(context.Background())
}

func (i ProposedMultiRegionAccessPointPolicyArgs) ToProposedMultiRegionAccessPointPolicyOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProposedMultiRegionAccessPointPolicyOutput)
}

func (i ProposedMultiRegionAccessPointPolicyArgs) ToProposedMultiRegionAccessPointPolicyPtrOutput() ProposedMultiRegionAccessPointPolicyPtrOutput {
	return i.ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(context.Background())
}

func (i ProposedMultiRegionAccessPointPolicyArgs) ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProposedMultiRegionAccessPointPolicyOutput).ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(ctx)
}

// ProposedMultiRegionAccessPointPolicyPtrInput is an input type that accepts ProposedMultiRegionAccessPointPolicyArgs, ProposedMultiRegionAccessPointPolicyPtr and ProposedMultiRegionAccessPointPolicyPtrOutput values.
// You can construct a concrete instance of `ProposedMultiRegionAccessPointPolicyPtrInput` via:
//
//	        ProposedMultiRegionAccessPointPolicyArgs{...}
//
//	or:
//
//	        nil
type ProposedMultiRegionAccessPointPolicyPtrInput interface {
	pulumi.Input

	ToProposedMultiRegionAccessPointPolicyPtrOutput() ProposedMultiRegionAccessPointPolicyPtrOutput
	ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(context.Context) ProposedMultiRegionAccessPointPolicyPtrOutput
}

type proposedMultiRegionAccessPointPolicyPtrType ProposedMultiRegionAccessPointPolicyArgs

func ProposedMultiRegionAccessPointPolicyPtr(v *ProposedMultiRegionAccessPointPolicyArgs) ProposedMultiRegionAccessPointPolicyPtrInput {
	return (*proposedMultiRegionAccessPointPolicyPtrType)(v)
}

func (*proposedMultiRegionAccessPointPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProposedMultiRegionAccessPointPolicy)(nil)).Elem()
}

func (i *proposedMultiRegionAccessPointPolicyPtrType) ToProposedMultiRegionAccessPointPolicyPtrOutput() ProposedMultiRegionAccessPointPolicyPtrOutput {
	return i.ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(context.Background())
}

func (i *proposedMultiRegionAccessPointPolicyPtrType) ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProposedMultiRegionAccessPointPolicyPtrOutput)
}

// Definition of ProposedMultiRegionAccessPointPolicy
type ProposedMultiRegionAccessPointPolicyOutput struct{ *pulumi.OutputState }

func (ProposedMultiRegionAccessPointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProposedMultiRegionAccessPointPolicy)(nil)).Elem()
}

func (o ProposedMultiRegionAccessPointPolicyOutput) ToProposedMultiRegionAccessPointPolicyOutput() ProposedMultiRegionAccessPointPolicyOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyOutput) ToProposedMultiRegionAccessPointPolicyOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyOutput) ToProposedMultiRegionAccessPointPolicyPtrOutput() ProposedMultiRegionAccessPointPolicyPtrOutput {
	return o.ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(context.Background())
}

func (o ProposedMultiRegionAccessPointPolicyOutput) ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProposedMultiRegionAccessPointPolicy) *ProposedMultiRegionAccessPointPolicy {
		return &v
	}).(ProposedMultiRegionAccessPointPolicyPtrOutput)
}

// <p>The details of the proposed policy.</p>
func (o ProposedMultiRegionAccessPointPolicyOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProposedMultiRegionAccessPointPolicy) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type ProposedMultiRegionAccessPointPolicyPtrOutput struct{ *pulumi.OutputState }

func (ProposedMultiRegionAccessPointPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProposedMultiRegionAccessPointPolicy)(nil)).Elem()
}

func (o ProposedMultiRegionAccessPointPolicyPtrOutput) ToProposedMultiRegionAccessPointPolicyPtrOutput() ProposedMultiRegionAccessPointPolicyPtrOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyPtrOutput) ToProposedMultiRegionAccessPointPolicyPtrOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyPtrOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyPtrOutput) Elem() ProposedMultiRegionAccessPointPolicyOutput {
	return o.ApplyT(func(v *ProposedMultiRegionAccessPointPolicy) ProposedMultiRegionAccessPointPolicy {
		if v != nil {
			return *v
		}
		var ret ProposedMultiRegionAccessPointPolicy
		return ret
	}).(ProposedMultiRegionAccessPointPolicyOutput)
}

// <p>The details of the proposed policy.</p>
func (o ProposedMultiRegionAccessPointPolicyPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProposedMultiRegionAccessPointPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Definition of ProposedMultiRegionAccessPointPolicy
type ProposedMultiRegionAccessPointPolicyResponse struct {
	// <p>The details of the proposed policy.</p>
	Policy *string `pulumi:"policy"`
}

// Definition of ProposedMultiRegionAccessPointPolicy
type ProposedMultiRegionAccessPointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ProposedMultiRegionAccessPointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProposedMultiRegionAccessPointPolicyResponse)(nil)).Elem()
}

func (o ProposedMultiRegionAccessPointPolicyResponseOutput) ToProposedMultiRegionAccessPointPolicyResponseOutput() ProposedMultiRegionAccessPointPolicyResponseOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyResponseOutput) ToProposedMultiRegionAccessPointPolicyResponseOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyResponseOutput {
	return o
}

// <p>The details of the proposed policy.</p>
func (o ProposedMultiRegionAccessPointPolicyResponseOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProposedMultiRegionAccessPointPolicyResponse) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type ProposedMultiRegionAccessPointPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ProposedMultiRegionAccessPointPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProposedMultiRegionAccessPointPolicyResponse)(nil)).Elem()
}

func (o ProposedMultiRegionAccessPointPolicyResponsePtrOutput) ToProposedMultiRegionAccessPointPolicyResponsePtrOutput() ProposedMultiRegionAccessPointPolicyResponsePtrOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyResponsePtrOutput) ToProposedMultiRegionAccessPointPolicyResponsePtrOutputWithContext(ctx context.Context) ProposedMultiRegionAccessPointPolicyResponsePtrOutput {
	return o
}

func (o ProposedMultiRegionAccessPointPolicyResponsePtrOutput) Elem() ProposedMultiRegionAccessPointPolicyResponseOutput {
	return o.ApplyT(func(v *ProposedMultiRegionAccessPointPolicyResponse) ProposedMultiRegionAccessPointPolicyResponse {
		if v != nil {
			return *v
		}
		var ret ProposedMultiRegionAccessPointPolicyResponse
		return ret
	}).(ProposedMultiRegionAccessPointPolicyResponseOutput)
}

// <p>The details of the proposed policy.</p>
func (o ProposedMultiRegionAccessPointPolicyResponsePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProposedMultiRegionAccessPointPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Definition of Provider
type Provider struct {
	// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
	KeyArn *string `pulumi:"keyArn"`
}

// ProviderInput is an input type that accepts ProviderArgs and ProviderOutput values.
// You can construct a concrete instance of `ProviderInput` via:
//
//	ProviderArgs{...}
type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(context.Context) ProviderOutput
}

// Definition of Provider
type ProviderArgs struct {
	// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
	KeyArn pulumi.StringPtrInput `pulumi:"keyArn"`
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil)).Elem()
}

func (i ProviderArgs) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i ProviderArgs) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

func (i ProviderArgs) ToProviderPtrOutput() ProviderPtrOutput {
	return i.ToProviderPtrOutputWithContext(context.Background())
}

func (i ProviderArgs) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput).ToProviderPtrOutputWithContext(ctx)
}

// ProviderPtrInput is an input type that accepts ProviderArgs, ProviderPtr and ProviderPtrOutput values.
// You can construct a concrete instance of `ProviderPtrInput` via:
//
//	        ProviderArgs{...}
//
//	or:
//
//	        nil
type ProviderPtrInput interface {
	pulumi.Input

	ToProviderPtrOutput() ProviderPtrOutput
	ToProviderPtrOutputWithContext(context.Context) ProviderPtrOutput
}

type providerPtrType ProviderArgs

func ProviderPtr(v *ProviderArgs) ProviderPtrInput {
	return (*providerPtrType)(v)
}

func (*providerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *providerPtrType) ToProviderPtrOutput() ProviderPtrOutput {
	return i.ToProviderPtrOutputWithContext(context.Background())
}

func (i *providerPtrType) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPtrOutput)
}

// Definition of Provider
type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderPtrOutput() ProviderPtrOutput {
	return o.ToProviderPtrOutputWithContext(context.Background())
}

func (o ProviderOutput) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Provider) *Provider {
		return &v
	}).(ProviderPtrOutput)
}

// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
func (o ProviderOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.KeyArn }).(pulumi.StringPtrOutput)
}

type ProviderPtrOutput struct{ *pulumi.OutputState }

func (ProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderPtrOutput) ToProviderPtrOutput() ProviderPtrOutput {
	return o
}

func (o ProviderPtrOutput) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return o
}

func (o ProviderPtrOutput) Elem() ProviderOutput {
	return o.ApplyT(func(v *Provider) Provider {
		if v != nil {
			return *v
		}
		var ret Provider
		return ret
	}).(ProviderOutput)
}

// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
func (o ProviderPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) *string {
		if v == nil {
			return nil
		}
		return v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// Definition of Provider
type ProviderResponse struct {
	// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
	KeyArn *string `pulumi:"keyArn"`
}

// Definition of Provider
type ProviderResponseOutput struct{ *pulumi.OutputState }

func (ProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderResponse)(nil)).Elem()
}

func (o ProviderResponseOutput) ToProviderResponseOutput() ProviderResponseOutput {
	return o
}

func (o ProviderResponseOutput) ToProviderResponseOutputWithContext(ctx context.Context) ProviderResponseOutput {
	return o
}

// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
func (o ProviderResponseOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.KeyArn }).(pulumi.StringPtrOutput)
}

type ProviderResponsePtrOutput struct{ *pulumi.OutputState }

func (ProviderResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderResponse)(nil)).Elem()
}

func (o ProviderResponsePtrOutput) ToProviderResponsePtrOutput() ProviderResponsePtrOutput {
	return o
}

func (o ProviderResponsePtrOutput) ToProviderResponsePtrOutputWithContext(ctx context.Context) ProviderResponsePtrOutput {
	return o
}

func (o ProviderResponsePtrOutput) Elem() ProviderResponseOutput {
	return o.ApplyT(func(v *ProviderResponse) ProviderResponse {
		if v != nil {
			return *v
		}
		var ret ProviderResponse
		return ret
	}).(ProviderResponseOutput)
}

// <p>Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric and created in the same Amazon Web Services Region as the cluster. If the KMS key was created in a different account, the <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html'>IAM principal</a> must have access to the KMS key. For more information, see <a href='https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html'>Allowing users in other accounts to use a KMS key</a> in the <i>Key Management Service Developer Guide</i>.</p>
func (o ProviderResponsePtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ProvisionedThroughput
type ProvisionedThroughput struct {
	// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
	ReadCapacityUnits *int `pulumi:"readCapacityUnits"`
	// The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
	WriteCapacityUnits *int `pulumi:"writeCapacityUnits"`
}

// ProvisionedThroughputInput is an input type that accepts ProvisionedThroughputArgs and ProvisionedThroughputOutput values.
// You can construct a concrete instance of `ProvisionedThroughputInput` via:
//
//	ProvisionedThroughputArgs{...}
type ProvisionedThroughputInput interface {
	pulumi.Input

	ToProvisionedThroughputOutput() ProvisionedThroughputOutput
	ToProvisionedThroughputOutputWithContext(context.Context) ProvisionedThroughputOutput
}

// Definition of ProvisionedThroughput
type ProvisionedThroughputArgs struct {
	// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
	ReadCapacityUnits pulumi.IntPtrInput `pulumi:"readCapacityUnits"`
	// The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
	WriteCapacityUnits pulumi.IntPtrInput `pulumi:"writeCapacityUnits"`
}

func (ProvisionedThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedThroughput)(nil)).Elem()
}

func (i ProvisionedThroughputArgs) ToProvisionedThroughputOutput() ProvisionedThroughputOutput {
	return i.ToProvisionedThroughputOutputWithContext(context.Background())
}

func (i ProvisionedThroughputArgs) ToProvisionedThroughputOutputWithContext(ctx context.Context) ProvisionedThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedThroughputOutput)
}

func (i ProvisionedThroughputArgs) ToProvisionedThroughputPtrOutput() ProvisionedThroughputPtrOutput {
	return i.ToProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (i ProvisionedThroughputArgs) ToProvisionedThroughputPtrOutputWithContext(ctx context.Context) ProvisionedThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedThroughputOutput).ToProvisionedThroughputPtrOutputWithContext(ctx)
}

// ProvisionedThroughputPtrInput is an input type that accepts ProvisionedThroughputArgs, ProvisionedThroughputPtr and ProvisionedThroughputPtrOutput values.
// You can construct a concrete instance of `ProvisionedThroughputPtrInput` via:
//
//	        ProvisionedThroughputArgs{...}
//
//	or:
//
//	        nil
type ProvisionedThroughputPtrInput interface {
	pulumi.Input

	ToProvisionedThroughputPtrOutput() ProvisionedThroughputPtrOutput
	ToProvisionedThroughputPtrOutputWithContext(context.Context) ProvisionedThroughputPtrOutput
}

type provisionedThroughputPtrType ProvisionedThroughputArgs

func ProvisionedThroughputPtr(v *ProvisionedThroughputArgs) ProvisionedThroughputPtrInput {
	return (*provisionedThroughputPtrType)(v)
}

func (*provisionedThroughputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedThroughput)(nil)).Elem()
}

func (i *provisionedThroughputPtrType) ToProvisionedThroughputPtrOutput() ProvisionedThroughputPtrOutput {
	return i.ToProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (i *provisionedThroughputPtrType) ToProvisionedThroughputPtrOutputWithContext(ctx context.Context) ProvisionedThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedThroughputPtrOutput)
}

// Definition of ProvisionedThroughput
type ProvisionedThroughputOutput struct{ *pulumi.OutputState }

func (ProvisionedThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedThroughput)(nil)).Elem()
}

func (o ProvisionedThroughputOutput) ToProvisionedThroughputOutput() ProvisionedThroughputOutput {
	return o
}

func (o ProvisionedThroughputOutput) ToProvisionedThroughputOutputWithContext(ctx context.Context) ProvisionedThroughputOutput {
	return o
}

func (o ProvisionedThroughputOutput) ToProvisionedThroughputPtrOutput() ProvisionedThroughputPtrOutput {
	return o.ToProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (o ProvisionedThroughputOutput) ToProvisionedThroughputPtrOutputWithContext(ctx context.Context) ProvisionedThroughputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisionedThroughput) *ProvisionedThroughput {
		return &v
	}).(ProvisionedThroughputPtrOutput)
}

// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputOutput) ReadCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedThroughput) *int { return v.ReadCapacityUnits }).(pulumi.IntPtrOutput)
}

// The maximum number of writes consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputOutput) WriteCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedThroughput) *int { return v.WriteCapacityUnits }).(pulumi.IntPtrOutput)
}

type ProvisionedThroughputPtrOutput struct{ *pulumi.OutputState }

func (ProvisionedThroughputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedThroughput)(nil)).Elem()
}

func (o ProvisionedThroughputPtrOutput) ToProvisionedThroughputPtrOutput() ProvisionedThroughputPtrOutput {
	return o
}

func (o ProvisionedThroughputPtrOutput) ToProvisionedThroughputPtrOutputWithContext(ctx context.Context) ProvisionedThroughputPtrOutput {
	return o
}

func (o ProvisionedThroughputPtrOutput) Elem() ProvisionedThroughputOutput {
	return o.ApplyT(func(v *ProvisionedThroughput) ProvisionedThroughput {
		if v != nil {
			return *v
		}
		var ret ProvisionedThroughput
		return ret
	}).(ProvisionedThroughputOutput)
}

// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputPtrOutput) ReadCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedThroughput) *int {
		if v == nil {
			return nil
		}
		return v.ReadCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// The maximum number of writes consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputPtrOutput) WriteCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedThroughput) *int {
		if v == nil {
			return nil
		}
		return v.WriteCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// Definition of ProvisionedThroughput
type ProvisionedThroughputResponse struct {
	// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
	ReadCapacityUnits *int `pulumi:"readCapacityUnits"`
	// The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
	WriteCapacityUnits *int `pulumi:"writeCapacityUnits"`
}

// Definition of ProvisionedThroughput
type ProvisionedThroughputResponseOutput struct{ *pulumi.OutputState }

func (ProvisionedThroughputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedThroughputResponse)(nil)).Elem()
}

func (o ProvisionedThroughputResponseOutput) ToProvisionedThroughputResponseOutput() ProvisionedThroughputResponseOutput {
	return o
}

func (o ProvisionedThroughputResponseOutput) ToProvisionedThroughputResponseOutputWithContext(ctx context.Context) ProvisionedThroughputResponseOutput {
	return o
}

// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputResponseOutput) ReadCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedThroughputResponse) *int { return v.ReadCapacityUnits }).(pulumi.IntPtrOutput)
}

// The maximum number of writes consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputResponseOutput) WriteCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedThroughputResponse) *int { return v.WriteCapacityUnits }).(pulumi.IntPtrOutput)
}

type ProvisionedThroughputResponsePtrOutput struct{ *pulumi.OutputState }

func (ProvisionedThroughputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedThroughputResponse)(nil)).Elem()
}

func (o ProvisionedThroughputResponsePtrOutput) ToProvisionedThroughputResponsePtrOutput() ProvisionedThroughputResponsePtrOutput {
	return o
}

func (o ProvisionedThroughputResponsePtrOutput) ToProvisionedThroughputResponsePtrOutputWithContext(ctx context.Context) ProvisionedThroughputResponsePtrOutput {
	return o
}

func (o ProvisionedThroughputResponsePtrOutput) Elem() ProvisionedThroughputResponseOutput {
	return o.ApplyT(func(v *ProvisionedThroughputResponse) ProvisionedThroughputResponse {
		if v != nil {
			return *v
		}
		var ret ProvisionedThroughputResponse
		return ret
	}).(ProvisionedThroughputResponseOutput)
}

// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputResponsePtrOutput) ReadCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedThroughputResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReadCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// The maximum number of writes consumed per second before DynamoDB returns a “ThrottlingException“. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is “PAY_PER_REQUEST“ the value is set to 0.
func (o ProvisionedThroughputResponsePtrOutput) WriteCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedThroughputResponse) *int {
		if v == nil {
			return nil
		}
		return v.WriteCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// Definition of ProxyConfiguration
type ProxyConfiguration struct {
	// The name of the container that will serve as the App Mesh proxy.
	ContainerName *string `pulumi:"containerName"`
	// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   ``IgnoredUID`` - (Required) The user ID (UID) of the proxy container as defined by the ``user`` parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If ``IgnoredGID`` is specified, this field can be empty.  +   ``IgnoredGID`` - (Required) The group ID (GID) of the proxy container as defined by the ``user`` parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If ``IgnoredUID`` is specified, this field can be empty.  +   ``AppPorts`` - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the ``ProxyIngressPort`` and ``ProxyEgressPort``.  +   ``ProxyIngressPort`` - (Required) Specifies the port that incoming traffic to the ``AppPorts`` is directed to.  +   ``ProxyEgressPort`` - (Required) Specifies the port that outgoing traffic from the ``AppPorts`` is directed to.  +   ``EgressIgnoredPorts`` - (Required) The egress traffic going to the specified ports is ignored and not redirected to the ``ProxyEgressPort``. It can be an empty list.  +   ``EgressIgnoredIPs`` - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the ``ProxyEgressPort``. It can be an empty list.
	ProxyConfigurationProperties []KeyValuePair `pulumi:"proxyConfigurationProperties"`
	// The proxy type. The only supported value is ``APPMESH``.
	Type *string `pulumi:"type"`
}

// ProxyConfigurationInput is an input type that accepts ProxyConfigurationArgs and ProxyConfigurationOutput values.
// You can construct a concrete instance of `ProxyConfigurationInput` via:
//
//	ProxyConfigurationArgs{...}
type ProxyConfigurationInput interface {
	pulumi.Input

	ToProxyConfigurationOutput() ProxyConfigurationOutput
	ToProxyConfigurationOutputWithContext(context.Context) ProxyConfigurationOutput
}

// Definition of ProxyConfiguration
type ProxyConfigurationArgs struct {
	// The name of the container that will serve as the App Mesh proxy.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   ``IgnoredUID`` - (Required) The user ID (UID) of the proxy container as defined by the ``user`` parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If ``IgnoredGID`` is specified, this field can be empty.  +   ``IgnoredGID`` - (Required) The group ID (GID) of the proxy container as defined by the ``user`` parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If ``IgnoredUID`` is specified, this field can be empty.  +   ``AppPorts`` - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the ``ProxyIngressPort`` and ``ProxyEgressPort``.  +   ``ProxyIngressPort`` - (Required) Specifies the port that incoming traffic to the ``AppPorts`` is directed to.  +   ``ProxyEgressPort`` - (Required) Specifies the port that outgoing traffic from the ``AppPorts`` is directed to.  +   ``EgressIgnoredPorts`` - (Required) The egress traffic going to the specified ports is ignored and not redirected to the ``ProxyEgressPort``. It can be an empty list.  +   ``EgressIgnoredIPs`` - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the ``ProxyEgressPort``. It can be an empty list.
	ProxyConfigurationProperties KeyValuePairArrayInput `pulumi:"proxyConfigurationProperties"`
	// The proxy type. The only supported value is ``APPMESH``.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProxyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfiguration)(nil)).Elem()
}

func (i ProxyConfigurationArgs) ToProxyConfigurationOutput() ProxyConfigurationOutput {
	return i.ToProxyConfigurationOutputWithContext(context.Background())
}

func (i ProxyConfigurationArgs) ToProxyConfigurationOutputWithContext(ctx context.Context) ProxyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigurationOutput)
}

func (i ProxyConfigurationArgs) ToProxyConfigurationPtrOutput() ProxyConfigurationPtrOutput {
	return i.ToProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i ProxyConfigurationArgs) ToProxyConfigurationPtrOutputWithContext(ctx context.Context) ProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigurationOutput).ToProxyConfigurationPtrOutputWithContext(ctx)
}

// ProxyConfigurationPtrInput is an input type that accepts ProxyConfigurationArgs, ProxyConfigurationPtr and ProxyConfigurationPtrOutput values.
// You can construct a concrete instance of `ProxyConfigurationPtrInput` via:
//
//	        ProxyConfigurationArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigurationPtrInput interface {
	pulumi.Input

	ToProxyConfigurationPtrOutput() ProxyConfigurationPtrOutput
	ToProxyConfigurationPtrOutputWithContext(context.Context) ProxyConfigurationPtrOutput
}

type proxyConfigurationPtrType ProxyConfigurationArgs

func ProxyConfigurationPtr(v *ProxyConfigurationArgs) ProxyConfigurationPtrInput {
	return (*proxyConfigurationPtrType)(v)
}

func (*proxyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfiguration)(nil)).Elem()
}

func (i *proxyConfigurationPtrType) ToProxyConfigurationPtrOutput() ProxyConfigurationPtrOutput {
	return i.ToProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i *proxyConfigurationPtrType) ToProxyConfigurationPtrOutputWithContext(ctx context.Context) ProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigurationPtrOutput)
}

// Definition of ProxyConfiguration
type ProxyConfigurationOutput struct{ *pulumi.OutputState }

func (ProxyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfiguration)(nil)).Elem()
}

func (o ProxyConfigurationOutput) ToProxyConfigurationOutput() ProxyConfigurationOutput {
	return o
}

func (o ProxyConfigurationOutput) ToProxyConfigurationOutputWithContext(ctx context.Context) ProxyConfigurationOutput {
	return o
}

func (o ProxyConfigurationOutput) ToProxyConfigurationPtrOutput() ProxyConfigurationPtrOutput {
	return o.ToProxyConfigurationPtrOutputWithContext(context.Background())
}

func (o ProxyConfigurationOutput) ToProxyConfigurationPtrOutputWithContext(ctx context.Context) ProxyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfiguration) *ProxyConfiguration {
		return &v
	}).(ProxyConfigurationPtrOutput)
}

// The name of the container that will serve as the App Mesh proxy.
func (o ProxyConfigurationOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfiguration) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   “IgnoredUID“ - (Required) The user ID (UID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredGID“ is specified, this field can be empty.  +   “IgnoredGID“ - (Required) The group ID (GID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredUID“ is specified, this field can be empty.  +   “AppPorts“ - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the “ProxyIngressPort“ and “ProxyEgressPort“.  +   “ProxyIngressPort“ - (Required) Specifies the port that incoming traffic to the “AppPorts“ is directed to.  +   “ProxyEgressPort“ - (Required) Specifies the port that outgoing traffic from the “AppPorts“ is directed to.  +   “EgressIgnoredPorts“ - (Required) The egress traffic going to the specified ports is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.  +   “EgressIgnoredIPs“ - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.
func (o ProxyConfigurationOutput) ProxyConfigurationProperties() KeyValuePairArrayOutput {
	return o.ApplyT(func(v ProxyConfiguration) []KeyValuePair { return v.ProxyConfigurationProperties }).(KeyValuePairArrayOutput)
}

// The proxy type. The only supported value is “APPMESH“.
func (o ProxyConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProxyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfiguration)(nil)).Elem()
}

func (o ProxyConfigurationPtrOutput) ToProxyConfigurationPtrOutput() ProxyConfigurationPtrOutput {
	return o
}

func (o ProxyConfigurationPtrOutput) ToProxyConfigurationPtrOutputWithContext(ctx context.Context) ProxyConfigurationPtrOutput {
	return o
}

func (o ProxyConfigurationPtrOutput) Elem() ProxyConfigurationOutput {
	return o.ApplyT(func(v *ProxyConfiguration) ProxyConfiguration {
		if v != nil {
			return *v
		}
		var ret ProxyConfiguration
		return ret
	}).(ProxyConfigurationOutput)
}

// The name of the container that will serve as the App Mesh proxy.
func (o ProxyConfigurationPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   “IgnoredUID“ - (Required) The user ID (UID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredGID“ is specified, this field can be empty.  +   “IgnoredGID“ - (Required) The group ID (GID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredUID“ is specified, this field can be empty.  +   “AppPorts“ - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the “ProxyIngressPort“ and “ProxyEgressPort“.  +   “ProxyIngressPort“ - (Required) Specifies the port that incoming traffic to the “AppPorts“ is directed to.  +   “ProxyEgressPort“ - (Required) Specifies the port that outgoing traffic from the “AppPorts“ is directed to.  +   “EgressIgnoredPorts“ - (Required) The egress traffic going to the specified ports is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.  +   “EgressIgnoredIPs“ - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.
func (o ProxyConfigurationPtrOutput) ProxyConfigurationProperties() KeyValuePairArrayOutput {
	return o.ApplyT(func(v *ProxyConfiguration) []KeyValuePair {
		if v == nil {
			return nil
		}
		return v.ProxyConfigurationProperties
	}).(KeyValuePairArrayOutput)
}

// The proxy type. The only supported value is “APPMESH“.
func (o ProxyConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Definition of ProxyConfiguration
type ProxyConfigurationResponse struct {
	// The name of the container that will serve as the App Mesh proxy.
	ContainerName *string `pulumi:"containerName"`
	// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   ``IgnoredUID`` - (Required) The user ID (UID) of the proxy container as defined by the ``user`` parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If ``IgnoredGID`` is specified, this field can be empty.  +   ``IgnoredGID`` - (Required) The group ID (GID) of the proxy container as defined by the ``user`` parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If ``IgnoredUID`` is specified, this field can be empty.  +   ``AppPorts`` - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the ``ProxyIngressPort`` and ``ProxyEgressPort``.  +   ``ProxyIngressPort`` - (Required) Specifies the port that incoming traffic to the ``AppPorts`` is directed to.  +   ``ProxyEgressPort`` - (Required) Specifies the port that outgoing traffic from the ``AppPorts`` is directed to.  +   ``EgressIgnoredPorts`` - (Required) The egress traffic going to the specified ports is ignored and not redirected to the ``ProxyEgressPort``. It can be an empty list.  +   ``EgressIgnoredIPs`` - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the ``ProxyEgressPort``. It can be an empty list.
	ProxyConfigurationProperties []KeyValuePairResponse `pulumi:"proxyConfigurationProperties"`
	// The proxy type. The only supported value is ``APPMESH``.
	Type *string `pulumi:"type"`
}

// Definition of ProxyConfiguration
type ProxyConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ProxyConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigurationResponse)(nil)).Elem()
}

func (o ProxyConfigurationResponseOutput) ToProxyConfigurationResponseOutput() ProxyConfigurationResponseOutput {
	return o
}

func (o ProxyConfigurationResponseOutput) ToProxyConfigurationResponseOutputWithContext(ctx context.Context) ProxyConfigurationResponseOutput {
	return o
}

// The name of the container that will serve as the App Mesh proxy.
func (o ProxyConfigurationResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigurationResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   “IgnoredUID“ - (Required) The user ID (UID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredGID“ is specified, this field can be empty.  +   “IgnoredGID“ - (Required) The group ID (GID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredUID“ is specified, this field can be empty.  +   “AppPorts“ - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the “ProxyIngressPort“ and “ProxyEgressPort“.  +   “ProxyIngressPort“ - (Required) Specifies the port that incoming traffic to the “AppPorts“ is directed to.  +   “ProxyEgressPort“ - (Required) Specifies the port that outgoing traffic from the “AppPorts“ is directed to.  +   “EgressIgnoredPorts“ - (Required) The egress traffic going to the specified ports is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.  +   “EgressIgnoredIPs“ - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.
func (o ProxyConfigurationResponseOutput) ProxyConfigurationProperties() KeyValuePairResponseArrayOutput {
	return o.ApplyT(func(v ProxyConfigurationResponse) []KeyValuePairResponse { return v.ProxyConfigurationProperties }).(KeyValuePairResponseArrayOutput)
}

// The proxy type. The only supported value is “APPMESH“.
func (o ProxyConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProxyConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigurationResponse)(nil)).Elem()
}

func (o ProxyConfigurationResponsePtrOutput) ToProxyConfigurationResponsePtrOutput() ProxyConfigurationResponsePtrOutput {
	return o
}

func (o ProxyConfigurationResponsePtrOutput) ToProxyConfigurationResponsePtrOutputWithContext(ctx context.Context) ProxyConfigurationResponsePtrOutput {
	return o
}

func (o ProxyConfigurationResponsePtrOutput) Elem() ProxyConfigurationResponseOutput {
	return o.ApplyT(func(v *ProxyConfigurationResponse) ProxyConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ProxyConfigurationResponse
		return ret
	}).(ProxyConfigurationResponseOutput)
}

// The name of the container that will serve as the App Mesh proxy.
func (o ProxyConfigurationResponsePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.  +   “IgnoredUID“ - (Required) The user ID (UID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredGID“ is specified, this field can be empty.  +   “IgnoredGID“ - (Required) The group ID (GID) of the proxy container as defined by the “user“ parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If “IgnoredUID“ is specified, this field can be empty.  +   “AppPorts“ - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the “ProxyIngressPort“ and “ProxyEgressPort“.  +   “ProxyIngressPort“ - (Required) Specifies the port that incoming traffic to the “AppPorts“ is directed to.  +   “ProxyEgressPort“ - (Required) Specifies the port that outgoing traffic from the “AppPorts“ is directed to.  +   “EgressIgnoredPorts“ - (Required) The egress traffic going to the specified ports is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.  +   “EgressIgnoredIPs“ - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the “ProxyEgressPort“. It can be an empty list.
func (o ProxyConfigurationResponsePtrOutput) ProxyConfigurationProperties() KeyValuePairResponseArrayOutput {
	return o.ApplyT(func(v *ProxyConfigurationResponse) []KeyValuePairResponse {
		if v == nil {
			return nil
		}
		return v.ProxyConfigurationProperties
	}).(KeyValuePairResponseArrayOutput)
}

// The proxy type. The only supported value is “APPMESH“.
func (o ProxyConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Definition of PublicAccessBlockConfiguration
type PublicAccessBlockConfiguration struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls *bool `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to ``TRUE`` causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy *bool `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls *bool `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to ``TRUE`` restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets *bool `pulumi:"restrictPublicBuckets"`
}

// PublicAccessBlockConfigurationInput is an input type that accepts PublicAccessBlockConfigurationArgs and PublicAccessBlockConfigurationOutput values.
// You can construct a concrete instance of `PublicAccessBlockConfigurationInput` via:
//
//	PublicAccessBlockConfigurationArgs{...}
type PublicAccessBlockConfigurationInput interface {
	pulumi.Input

	ToPublicAccessBlockConfigurationOutput() PublicAccessBlockConfigurationOutput
	ToPublicAccessBlockConfigurationOutputWithContext(context.Context) PublicAccessBlockConfigurationOutput
}

// Definition of PublicAccessBlockConfiguration
type PublicAccessBlockConfigurationArgs struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls pulumi.BoolPtrInput `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to ``TRUE`` causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy pulumi.BoolPtrInput `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls pulumi.BoolPtrInput `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to ``TRUE`` restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets pulumi.BoolPtrInput `pulumi:"restrictPublicBuckets"`
}

func (PublicAccessBlockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccessBlockConfiguration)(nil)).Elem()
}

func (i PublicAccessBlockConfigurationArgs) ToPublicAccessBlockConfigurationOutput() PublicAccessBlockConfigurationOutput {
	return i.ToPublicAccessBlockConfigurationOutputWithContext(context.Background())
}

func (i PublicAccessBlockConfigurationArgs) ToPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAccessBlockConfigurationOutput)
}

func (i PublicAccessBlockConfigurationArgs) ToPublicAccessBlockConfigurationPtrOutput() PublicAccessBlockConfigurationPtrOutput {
	return i.ToPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i PublicAccessBlockConfigurationArgs) ToPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAccessBlockConfigurationOutput).ToPublicAccessBlockConfigurationPtrOutputWithContext(ctx)
}

// PublicAccessBlockConfigurationPtrInput is an input type that accepts PublicAccessBlockConfigurationArgs, PublicAccessBlockConfigurationPtr and PublicAccessBlockConfigurationPtrOutput values.
// You can construct a concrete instance of `PublicAccessBlockConfigurationPtrInput` via:
//
//	        PublicAccessBlockConfigurationArgs{...}
//
//	or:
//
//	        nil
type PublicAccessBlockConfigurationPtrInput interface {
	pulumi.Input

	ToPublicAccessBlockConfigurationPtrOutput() PublicAccessBlockConfigurationPtrOutput
	ToPublicAccessBlockConfigurationPtrOutputWithContext(context.Context) PublicAccessBlockConfigurationPtrOutput
}

type publicAccessBlockConfigurationPtrType PublicAccessBlockConfigurationArgs

func PublicAccessBlockConfigurationPtr(v *PublicAccessBlockConfigurationArgs) PublicAccessBlockConfigurationPtrInput {
	return (*publicAccessBlockConfigurationPtrType)(v)
}

func (*publicAccessBlockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccessBlockConfiguration)(nil)).Elem()
}

func (i *publicAccessBlockConfigurationPtrType) ToPublicAccessBlockConfigurationPtrOutput() PublicAccessBlockConfigurationPtrOutput {
	return i.ToPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i *publicAccessBlockConfigurationPtrType) ToPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAccessBlockConfigurationPtrOutput)
}

// Definition of PublicAccessBlockConfiguration
type PublicAccessBlockConfigurationOutput struct{ *pulumi.OutputState }

func (PublicAccessBlockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccessBlockConfiguration)(nil)).Elem()
}

func (o PublicAccessBlockConfigurationOutput) ToPublicAccessBlockConfigurationOutput() PublicAccessBlockConfigurationOutput {
	return o
}

func (o PublicAccessBlockConfigurationOutput) ToPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationOutput {
	return o
}

func (o PublicAccessBlockConfigurationOutput) ToPublicAccessBlockConfigurationPtrOutput() PublicAccessBlockConfigurationPtrOutput {
	return o.ToPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (o PublicAccessBlockConfigurationOutput) ToPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicAccessBlockConfiguration) *PublicAccessBlockConfiguration {
		return &v
	}).(PublicAccessBlockConfigurationPtrOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to “TRUE“ causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
func (o PublicAccessBlockConfigurationOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfiguration) *bool { return v.BlockPublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to “TRUE“ causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
func (o PublicAccessBlockConfigurationOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfiguration) *bool { return v.BlockPublicPolicy }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to “TRUE“ causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o PublicAccessBlockConfigurationOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfiguration) *bool { return v.IgnorePublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to “TRUE“ restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o PublicAccessBlockConfigurationOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfiguration) *bool { return v.RestrictPublicBuckets }).(pulumi.BoolPtrOutput)
}

type PublicAccessBlockConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PublicAccessBlockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccessBlockConfiguration)(nil)).Elem()
}

func (o PublicAccessBlockConfigurationPtrOutput) ToPublicAccessBlockConfigurationPtrOutput() PublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o PublicAccessBlockConfigurationPtrOutput) ToPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o PublicAccessBlockConfigurationPtrOutput) Elem() PublicAccessBlockConfigurationOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfiguration) PublicAccessBlockConfiguration {
		if v != nil {
			return *v
		}
		var ret PublicAccessBlockConfiguration
		return ret
	}).(PublicAccessBlockConfigurationOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to “TRUE“ causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
func (o PublicAccessBlockConfigurationPtrOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to “TRUE“ causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
func (o PublicAccessBlockConfigurationPtrOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicPolicy
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to “TRUE“ causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o PublicAccessBlockConfigurationPtrOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IgnorePublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to “TRUE“ restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o PublicAccessBlockConfigurationPtrOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictPublicBuckets
	}).(pulumi.BoolPtrOutput)
}

// Definition of PublicAccessBlockConfiguration
type PublicAccessBlockConfigurationResponse struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls *bool `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to ``TRUE`` causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy *bool `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls *bool `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to ``TRUE`` restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets *bool `pulumi:"restrictPublicBuckets"`
}

// Definition of PublicAccessBlockConfiguration
type PublicAccessBlockConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PublicAccessBlockConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccessBlockConfigurationResponse)(nil)).Elem()
}

func (o PublicAccessBlockConfigurationResponseOutput) ToPublicAccessBlockConfigurationResponseOutput() PublicAccessBlockConfigurationResponseOutput {
	return o
}

func (o PublicAccessBlockConfigurationResponseOutput) ToPublicAccessBlockConfigurationResponseOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationResponseOutput {
	return o
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to “TRUE“ causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
func (o PublicAccessBlockConfigurationResponseOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfigurationResponse) *bool { return v.BlockPublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to “TRUE“ causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
func (o PublicAccessBlockConfigurationResponseOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfigurationResponse) *bool { return v.BlockPublicPolicy }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to “TRUE“ causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o PublicAccessBlockConfigurationResponseOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfigurationResponse) *bool { return v.IgnorePublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to “TRUE“ restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o PublicAccessBlockConfigurationResponseOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PublicAccessBlockConfigurationResponse) *bool { return v.RestrictPublicBuckets }).(pulumi.BoolPtrOutput)
}

type PublicAccessBlockConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicAccessBlockConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccessBlockConfigurationResponse)(nil)).Elem()
}

func (o PublicAccessBlockConfigurationResponsePtrOutput) ToPublicAccessBlockConfigurationResponsePtrOutput() PublicAccessBlockConfigurationResponsePtrOutput {
	return o
}

func (o PublicAccessBlockConfigurationResponsePtrOutput) ToPublicAccessBlockConfigurationResponsePtrOutputWithContext(ctx context.Context) PublicAccessBlockConfigurationResponsePtrOutput {
	return o
}

func (o PublicAccessBlockConfigurationResponsePtrOutput) Elem() PublicAccessBlockConfigurationResponseOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfigurationResponse) PublicAccessBlockConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret PublicAccessBlockConfigurationResponse
		return ret
	}).(PublicAccessBlockConfigurationResponseOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to “TRUE“ causes the following behavior:  +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.  +  PUT Object calls fail if the request includes a public ACL.  +  PUT Bucket calls fail if the request includes a public ACL.   Enabling this setting doesn't affect existing policies or ACLs.
func (o PublicAccessBlockConfigurationResponsePtrOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to “TRUE“ causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.  Enabling this setting doesn't affect existing bucket policies.
func (o PublicAccessBlockConfigurationResponsePtrOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicPolicy
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to “TRUE“ causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o PublicAccessBlockConfigurationResponsePtrOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IgnorePublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to “TRUE“ restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy. Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o PublicAccessBlockConfigurationResponsePtrOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PublicAccessBlockConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictPublicBuckets
	}).(pulumi.BoolPtrOutput)
}

// Definition of PublishMetricAction
type PublishMetricAction struct {
	// Property dimensions
	Dimensions []Dimension `pulumi:"dimensions"`
}

// PublishMetricActionInput is an input type that accepts PublishMetricActionArgs and PublishMetricActionOutput values.
// You can construct a concrete instance of `PublishMetricActionInput` via:
//
//	PublishMetricActionArgs{...}
type PublishMetricActionInput interface {
	pulumi.Input

	ToPublishMetricActionOutput() PublishMetricActionOutput
	ToPublishMetricActionOutputWithContext(context.Context) PublishMetricActionOutput
}

// Definition of PublishMetricAction
type PublishMetricActionArgs struct {
	// Property dimensions
	Dimensions DimensionArrayInput `pulumi:"dimensions"`
}

func (PublishMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishMetricAction)(nil)).Elem()
}

func (i PublishMetricActionArgs) ToPublishMetricActionOutput() PublishMetricActionOutput {
	return i.ToPublishMetricActionOutputWithContext(context.Background())
}

func (i PublishMetricActionArgs) ToPublishMetricActionOutputWithContext(ctx context.Context) PublishMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublishMetricActionOutput)
}

func (i PublishMetricActionArgs) ToPublishMetricActionPtrOutput() PublishMetricActionPtrOutput {
	return i.ToPublishMetricActionPtrOutputWithContext(context.Background())
}

func (i PublishMetricActionArgs) ToPublishMetricActionPtrOutputWithContext(ctx context.Context) PublishMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublishMetricActionOutput).ToPublishMetricActionPtrOutputWithContext(ctx)
}

// PublishMetricActionPtrInput is an input type that accepts PublishMetricActionArgs, PublishMetricActionPtr and PublishMetricActionPtrOutput values.
// You can construct a concrete instance of `PublishMetricActionPtrInput` via:
//
//	        PublishMetricActionArgs{...}
//
//	or:
//
//	        nil
type PublishMetricActionPtrInput interface {
	pulumi.Input

	ToPublishMetricActionPtrOutput() PublishMetricActionPtrOutput
	ToPublishMetricActionPtrOutputWithContext(context.Context) PublishMetricActionPtrOutput
}

type publishMetricActionPtrType PublishMetricActionArgs

func PublishMetricActionPtr(v *PublishMetricActionArgs) PublishMetricActionPtrInput {
	return (*publishMetricActionPtrType)(v)
}

func (*publishMetricActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublishMetricAction)(nil)).Elem()
}

func (i *publishMetricActionPtrType) ToPublishMetricActionPtrOutput() PublishMetricActionPtrOutput {
	return i.ToPublishMetricActionPtrOutputWithContext(context.Background())
}

func (i *publishMetricActionPtrType) ToPublishMetricActionPtrOutputWithContext(ctx context.Context) PublishMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublishMetricActionPtrOutput)
}

// Definition of PublishMetricAction
type PublishMetricActionOutput struct{ *pulumi.OutputState }

func (PublishMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishMetricAction)(nil)).Elem()
}

func (o PublishMetricActionOutput) ToPublishMetricActionOutput() PublishMetricActionOutput {
	return o
}

func (o PublishMetricActionOutput) ToPublishMetricActionOutputWithContext(ctx context.Context) PublishMetricActionOutput {
	return o
}

func (o PublishMetricActionOutput) ToPublishMetricActionPtrOutput() PublishMetricActionPtrOutput {
	return o.ToPublishMetricActionPtrOutputWithContext(context.Background())
}

func (o PublishMetricActionOutput) ToPublishMetricActionPtrOutputWithContext(ctx context.Context) PublishMetricActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublishMetricAction) *PublishMetricAction {
		return &v
	}).(PublishMetricActionPtrOutput)
}

// Property dimensions
func (o PublishMetricActionOutput) Dimensions() DimensionArrayOutput {
	return o.ApplyT(func(v PublishMetricAction) []Dimension { return v.Dimensions }).(DimensionArrayOutput)
}

type PublishMetricActionPtrOutput struct{ *pulumi.OutputState }

func (PublishMetricActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublishMetricAction)(nil)).Elem()
}

func (o PublishMetricActionPtrOutput) ToPublishMetricActionPtrOutput() PublishMetricActionPtrOutput {
	return o
}

func (o PublishMetricActionPtrOutput) ToPublishMetricActionPtrOutputWithContext(ctx context.Context) PublishMetricActionPtrOutput {
	return o
}

func (o PublishMetricActionPtrOutput) Elem() PublishMetricActionOutput {
	return o.ApplyT(func(v *PublishMetricAction) PublishMetricAction {
		if v != nil {
			return *v
		}
		var ret PublishMetricAction
		return ret
	}).(PublishMetricActionOutput)
}

// Property dimensions
func (o PublishMetricActionPtrOutput) Dimensions() DimensionArrayOutput {
	return o.ApplyT(func(v *PublishMetricAction) []Dimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(DimensionArrayOutput)
}

// Definition of PublishMetricAction
type PublishMetricActionResponse struct {
	// Property dimensions
	Dimensions []DimensionResponse `pulumi:"dimensions"`
}

// Definition of PublishMetricAction
type PublishMetricActionResponseOutput struct{ *pulumi.OutputState }

func (PublishMetricActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublishMetricActionResponse)(nil)).Elem()
}

func (o PublishMetricActionResponseOutput) ToPublishMetricActionResponseOutput() PublishMetricActionResponseOutput {
	return o
}

func (o PublishMetricActionResponseOutput) ToPublishMetricActionResponseOutputWithContext(ctx context.Context) PublishMetricActionResponseOutput {
	return o
}

// Property dimensions
func (o PublishMetricActionResponseOutput) Dimensions() DimensionResponseArrayOutput {
	return o.ApplyT(func(v PublishMetricActionResponse) []DimensionResponse { return v.Dimensions }).(DimensionResponseArrayOutput)
}

type PublishMetricActionResponsePtrOutput struct{ *pulumi.OutputState }

func (PublishMetricActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublishMetricActionResponse)(nil)).Elem()
}

func (o PublishMetricActionResponsePtrOutput) ToPublishMetricActionResponsePtrOutput() PublishMetricActionResponsePtrOutput {
	return o
}

func (o PublishMetricActionResponsePtrOutput) ToPublishMetricActionResponsePtrOutputWithContext(ctx context.Context) PublishMetricActionResponsePtrOutput {
	return o
}

func (o PublishMetricActionResponsePtrOutput) Elem() PublishMetricActionResponseOutput {
	return o.ApplyT(func(v *PublishMetricActionResponse) PublishMetricActionResponse {
		if v != nil {
			return *v
		}
		var ret PublishMetricActionResponse
		return ret
	}).(PublishMetricActionResponseOutput)
}

// Property dimensions
func (o PublishMetricActionResponsePtrOutput) Dimensions() DimensionResponseArrayOutput {
	return o.ApplyT(func(v *PublishMetricActionResponse) []DimensionResponse {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(DimensionResponseArrayOutput)
}

// Definition of QueryLoggingConfig
type QueryLoggingConfig struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn *string `pulumi:"cloudWatchLogsLogGroupArn"`
}

// QueryLoggingConfigInput is an input type that accepts QueryLoggingConfigArgs and QueryLoggingConfigOutput values.
// You can construct a concrete instance of `QueryLoggingConfigInput` via:
//
//	QueryLoggingConfigArgs{...}
type QueryLoggingConfigInput interface {
	pulumi.Input

	ToQueryLoggingConfigOutput() QueryLoggingConfigOutput
	ToQueryLoggingConfigOutputWithContext(context.Context) QueryLoggingConfigOutput
}

// Definition of QueryLoggingConfig
type QueryLoggingConfigArgs struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn pulumi.StringPtrInput `pulumi:"cloudWatchLogsLogGroupArn"`
}

func (QueryLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryLoggingConfig)(nil)).Elem()
}

func (i QueryLoggingConfigArgs) ToQueryLoggingConfigOutput() QueryLoggingConfigOutput {
	return i.ToQueryLoggingConfigOutputWithContext(context.Background())
}

func (i QueryLoggingConfigArgs) ToQueryLoggingConfigOutputWithContext(ctx context.Context) QueryLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryLoggingConfigOutput)
}

func (i QueryLoggingConfigArgs) ToQueryLoggingConfigPtrOutput() QueryLoggingConfigPtrOutput {
	return i.ToQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i QueryLoggingConfigArgs) ToQueryLoggingConfigPtrOutputWithContext(ctx context.Context) QueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryLoggingConfigOutput).ToQueryLoggingConfigPtrOutputWithContext(ctx)
}

// QueryLoggingConfigPtrInput is an input type that accepts QueryLoggingConfigArgs, QueryLoggingConfigPtr and QueryLoggingConfigPtrOutput values.
// You can construct a concrete instance of `QueryLoggingConfigPtrInput` via:
//
//	        QueryLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type QueryLoggingConfigPtrInput interface {
	pulumi.Input

	ToQueryLoggingConfigPtrOutput() QueryLoggingConfigPtrOutput
	ToQueryLoggingConfigPtrOutputWithContext(context.Context) QueryLoggingConfigPtrOutput
}

type queryLoggingConfigPtrType QueryLoggingConfigArgs

func QueryLoggingConfigPtr(v *QueryLoggingConfigArgs) QueryLoggingConfigPtrInput {
	return (*queryLoggingConfigPtrType)(v)
}

func (*queryLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryLoggingConfig)(nil)).Elem()
}

func (i *queryLoggingConfigPtrType) ToQueryLoggingConfigPtrOutput() QueryLoggingConfigPtrOutput {
	return i.ToQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *queryLoggingConfigPtrType) ToQueryLoggingConfigPtrOutputWithContext(ctx context.Context) QueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryLoggingConfigPtrOutput)
}

// Definition of QueryLoggingConfig
type QueryLoggingConfigOutput struct{ *pulumi.OutputState }

func (QueryLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryLoggingConfig)(nil)).Elem()
}

func (o QueryLoggingConfigOutput) ToQueryLoggingConfigOutput() QueryLoggingConfigOutput {
	return o
}

func (o QueryLoggingConfigOutput) ToQueryLoggingConfigOutputWithContext(ctx context.Context) QueryLoggingConfigOutput {
	return o
}

func (o QueryLoggingConfigOutput) ToQueryLoggingConfigPtrOutput() QueryLoggingConfigPtrOutput {
	return o.ToQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (o QueryLoggingConfigOutput) ToQueryLoggingConfigPtrOutputWithContext(ctx context.Context) QueryLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueryLoggingConfig) *QueryLoggingConfig {
		return &v
	}).(QueryLoggingConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o QueryLoggingConfigOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryLoggingConfig) *string { return v.CloudWatchLogsLogGroupArn }).(pulumi.StringPtrOutput)
}

type QueryLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (QueryLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryLoggingConfig)(nil)).Elem()
}

func (o QueryLoggingConfigPtrOutput) ToQueryLoggingConfigPtrOutput() QueryLoggingConfigPtrOutput {
	return o
}

func (o QueryLoggingConfigPtrOutput) ToQueryLoggingConfigPtrOutputWithContext(ctx context.Context) QueryLoggingConfigPtrOutput {
	return o
}

func (o QueryLoggingConfigPtrOutput) Elem() QueryLoggingConfigOutput {
	return o.ApplyT(func(v *QueryLoggingConfig) QueryLoggingConfig {
		if v != nil {
			return *v
		}
		var ret QueryLoggingConfig
		return ret
	}).(QueryLoggingConfigOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o QueryLoggingConfigPtrOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogsLogGroupArn
	}).(pulumi.StringPtrOutput)
}

// Definition of QueryLoggingConfig
type QueryLoggingConfigResponse struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn *string `pulumi:"cloudWatchLogsLogGroupArn"`
}

// Definition of QueryLoggingConfig
type QueryLoggingConfigResponseOutput struct{ *pulumi.OutputState }

func (QueryLoggingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryLoggingConfigResponse)(nil)).Elem()
}

func (o QueryLoggingConfigResponseOutput) ToQueryLoggingConfigResponseOutput() QueryLoggingConfigResponseOutput {
	return o
}

func (o QueryLoggingConfigResponseOutput) ToQueryLoggingConfigResponseOutputWithContext(ctx context.Context) QueryLoggingConfigResponseOutput {
	return o
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o QueryLoggingConfigResponseOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueryLoggingConfigResponse) *string { return v.CloudWatchLogsLogGroupArn }).(pulumi.StringPtrOutput)
}

type QueryLoggingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (QueryLoggingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryLoggingConfigResponse)(nil)).Elem()
}

func (o QueryLoggingConfigResponsePtrOutput) ToQueryLoggingConfigResponsePtrOutput() QueryLoggingConfigResponsePtrOutput {
	return o
}

func (o QueryLoggingConfigResponsePtrOutput) ToQueryLoggingConfigResponsePtrOutputWithContext(ctx context.Context) QueryLoggingConfigResponsePtrOutput {
	return o
}

func (o QueryLoggingConfigResponsePtrOutput) Elem() QueryLoggingConfigResponseOutput {
	return o.ApplyT(func(v *QueryLoggingConfigResponse) QueryLoggingConfigResponse {
		if v != nil {
			return *v
		}
		var ret QueryLoggingConfigResponse
		return ret
	}).(QueryLoggingConfigResponseOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o QueryLoggingConfigResponsePtrOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueryLoggingConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogsLogGroupArn
	}).(pulumi.StringPtrOutput)
}

// Definition of QueueConfiguration
type QueueConfiguration struct {
	// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event *string `pulumi:"event"`
	// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter *NotificationFilter `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
	Queue *string `pulumi:"queue"`
}

// QueueConfigurationInput is an input type that accepts QueueConfigurationArgs and QueueConfigurationOutput values.
// You can construct a concrete instance of `QueueConfigurationInput` via:
//
//	QueueConfigurationArgs{...}
type QueueConfigurationInput interface {
	pulumi.Input

	ToQueueConfigurationOutput() QueueConfigurationOutput
	ToQueueConfigurationOutputWithContext(context.Context) QueueConfigurationOutput
}

// Definition of QueueConfiguration
type QueueConfigurationArgs struct {
	// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event pulumi.StringPtrInput `pulumi:"event"`
	// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter NotificationFilterPtrInput `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
	Queue pulumi.StringPtrInput `pulumi:"queue"`
}

func (QueueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueConfiguration)(nil)).Elem()
}

func (i QueueConfigurationArgs) ToQueueConfigurationOutput() QueueConfigurationOutput {
	return i.ToQueueConfigurationOutputWithContext(context.Background())
}

func (i QueueConfigurationArgs) ToQueueConfigurationOutputWithContext(ctx context.Context) QueueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueConfigurationOutput)
}

// QueueConfigurationArrayInput is an input type that accepts QueueConfigurationArray and QueueConfigurationArrayOutput values.
// You can construct a concrete instance of `QueueConfigurationArrayInput` via:
//
//	QueueConfigurationArray{ QueueConfigurationArgs{...} }
type QueueConfigurationArrayInput interface {
	pulumi.Input

	ToQueueConfigurationArrayOutput() QueueConfigurationArrayOutput
	ToQueueConfigurationArrayOutputWithContext(context.Context) QueueConfigurationArrayOutput
}

type QueueConfigurationArray []QueueConfigurationInput

func (QueueConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueConfiguration)(nil)).Elem()
}

func (i QueueConfigurationArray) ToQueueConfigurationArrayOutput() QueueConfigurationArrayOutput {
	return i.ToQueueConfigurationArrayOutputWithContext(context.Background())
}

func (i QueueConfigurationArray) ToQueueConfigurationArrayOutputWithContext(ctx context.Context) QueueConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueConfigurationArrayOutput)
}

// Definition of QueueConfiguration
type QueueConfigurationOutput struct{ *pulumi.OutputState }

func (QueueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueConfiguration)(nil)).Elem()
}

func (o QueueConfigurationOutput) ToQueueConfigurationOutput() QueueConfigurationOutput {
	return o
}

func (o QueueConfigurationOutput) ToQueueConfigurationOutputWithContext(ctx context.Context) QueueConfigurationOutput {
	return o
}

// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o QueueConfigurationOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueConfiguration) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a “.jpg“ extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
func (o QueueConfigurationOutput) Filter() NotificationFilterPtrOutput {
	return o.ApplyT(func(v QueueConfiguration) *NotificationFilter { return v.Filter }).(NotificationFilterPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
func (o QueueConfigurationOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueConfiguration) *string { return v.Queue }).(pulumi.StringPtrOutput)
}

type QueueConfigurationArrayOutput struct{ *pulumi.OutputState }

func (QueueConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueConfiguration)(nil)).Elem()
}

func (o QueueConfigurationArrayOutput) ToQueueConfigurationArrayOutput() QueueConfigurationArrayOutput {
	return o
}

func (o QueueConfigurationArrayOutput) ToQueueConfigurationArrayOutputWithContext(ctx context.Context) QueueConfigurationArrayOutput {
	return o
}

func (o QueueConfigurationArrayOutput) Index(i pulumi.IntInput) QueueConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueConfiguration {
		return vs[0].([]QueueConfiguration)[vs[1].(int)]
	}).(QueueConfigurationOutput)
}

// Definition of QueueConfiguration
type QueueConfigurationResponse struct {
	// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event *string `pulumi:"event"`
	// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter *NotificationFilterResponse `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
	Queue *string `pulumi:"queue"`
}

// Definition of QueueConfiguration
type QueueConfigurationResponseOutput struct{ *pulumi.OutputState }

func (QueueConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueConfigurationResponse)(nil)).Elem()
}

func (o QueueConfigurationResponseOutput) ToQueueConfigurationResponseOutput() QueueConfigurationResponseOutput {
	return o
}

func (o QueueConfigurationResponseOutput) ToQueueConfigurationResponseOutputWithContext(ctx context.Context) QueueConfigurationResponseOutput {
	return o
}

// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o QueueConfigurationResponseOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueConfigurationResponse) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a “.jpg“ extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
func (o QueueConfigurationResponseOutput) Filter() NotificationFilterResponsePtrOutput {
	return o.ApplyT(func(v QueueConfigurationResponse) *NotificationFilterResponse { return v.Filter }).(NotificationFilterResponsePtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
func (o QueueConfigurationResponseOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueConfigurationResponse) *string { return v.Queue }).(pulumi.StringPtrOutput)
}

type QueueConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (QueueConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueConfigurationResponse)(nil)).Elem()
}

func (o QueueConfigurationResponseArrayOutput) ToQueueConfigurationResponseArrayOutput() QueueConfigurationResponseArrayOutput {
	return o
}

func (o QueueConfigurationResponseArrayOutput) ToQueueConfigurationResponseArrayOutputWithContext(ctx context.Context) QueueConfigurationResponseArrayOutput {
	return o
}

func (o QueueConfigurationResponseArrayOutput) Index(i pulumi.IntInput) QueueConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueConfigurationResponse {
		return vs[0].([]QueueConfigurationResponse)[vs[1].(int)]
	}).(QueueConfigurationResponseOutput)
}

// Definition of RRTypeEnumValue
type RRTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// RRTypeEnumValueInput is an input type that accepts RRTypeEnumValueArgs and RRTypeEnumValueOutput values.
// You can construct a concrete instance of `RRTypeEnumValueInput` via:
//
//	RRTypeEnumValueArgs{...}
type RRTypeEnumValueInput interface {
	pulumi.Input

	ToRRTypeEnumValueOutput() RRTypeEnumValueOutput
	ToRRTypeEnumValueOutputWithContext(context.Context) RRTypeEnumValueOutput
}

// Definition of RRTypeEnumValue
type RRTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RRTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RRTypeEnumValue)(nil)).Elem()
}

func (i RRTypeEnumValueArgs) ToRRTypeEnumValueOutput() RRTypeEnumValueOutput {
	return i.ToRRTypeEnumValueOutputWithContext(context.Background())
}

func (i RRTypeEnumValueArgs) ToRRTypeEnumValueOutputWithContext(ctx context.Context) RRTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RRTypeEnumValueOutput)
}

func (i RRTypeEnumValueArgs) ToRRTypeEnumValuePtrOutput() RRTypeEnumValuePtrOutput {
	return i.ToRRTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i RRTypeEnumValueArgs) ToRRTypeEnumValuePtrOutputWithContext(ctx context.Context) RRTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RRTypeEnumValueOutput).ToRRTypeEnumValuePtrOutputWithContext(ctx)
}

// RRTypeEnumValuePtrInput is an input type that accepts RRTypeEnumValueArgs, RRTypeEnumValuePtr and RRTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `RRTypeEnumValuePtrInput` via:
//
//	        RRTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type RRTypeEnumValuePtrInput interface {
	pulumi.Input

	ToRRTypeEnumValuePtrOutput() RRTypeEnumValuePtrOutput
	ToRRTypeEnumValuePtrOutputWithContext(context.Context) RRTypeEnumValuePtrOutput
}

type rrtypeEnumValuePtrType RRTypeEnumValueArgs

func RRTypeEnumValuePtr(v *RRTypeEnumValueArgs) RRTypeEnumValuePtrInput {
	return (*rrtypeEnumValuePtrType)(v)
}

func (*rrtypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RRTypeEnumValue)(nil)).Elem()
}

func (i *rrtypeEnumValuePtrType) ToRRTypeEnumValuePtrOutput() RRTypeEnumValuePtrOutput {
	return i.ToRRTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *rrtypeEnumValuePtrType) ToRRTypeEnumValuePtrOutputWithContext(ctx context.Context) RRTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RRTypeEnumValuePtrOutput)
}

// Definition of RRTypeEnumValue
type RRTypeEnumValueOutput struct{ *pulumi.OutputState }

func (RRTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RRTypeEnumValue)(nil)).Elem()
}

func (o RRTypeEnumValueOutput) ToRRTypeEnumValueOutput() RRTypeEnumValueOutput {
	return o
}

func (o RRTypeEnumValueOutput) ToRRTypeEnumValueOutputWithContext(ctx context.Context) RRTypeEnumValueOutput {
	return o
}

func (o RRTypeEnumValueOutput) ToRRTypeEnumValuePtrOutput() RRTypeEnumValuePtrOutput {
	return o.ToRRTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o RRTypeEnumValueOutput) ToRRTypeEnumValuePtrOutputWithContext(ctx context.Context) RRTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RRTypeEnumValue) *RRTypeEnumValue {
		return &v
	}).(RRTypeEnumValuePtrOutput)
}

// Property value
func (o RRTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RRTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RRTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (RRTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RRTypeEnumValue)(nil)).Elem()
}

func (o RRTypeEnumValuePtrOutput) ToRRTypeEnumValuePtrOutput() RRTypeEnumValuePtrOutput {
	return o
}

func (o RRTypeEnumValuePtrOutput) ToRRTypeEnumValuePtrOutputWithContext(ctx context.Context) RRTypeEnumValuePtrOutput {
	return o
}

func (o RRTypeEnumValuePtrOutput) Elem() RRTypeEnumValueOutput {
	return o.ApplyT(func(v *RRTypeEnumValue) RRTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret RRTypeEnumValue
		return ret
	}).(RRTypeEnumValueOutput)
}

// Property value
func (o RRTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RRTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RRTypeEnumValue
type RRTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of RRTypeEnumValue
type RRTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (RRTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RRTypeEnumValueResponse)(nil)).Elem()
}

func (o RRTypeEnumValueResponseOutput) ToRRTypeEnumValueResponseOutput() RRTypeEnumValueResponseOutput {
	return o
}

func (o RRTypeEnumValueResponseOutput) ToRRTypeEnumValueResponseOutputWithContext(ctx context.Context) RRTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o RRTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RRTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RRTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (RRTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RRTypeEnumValueResponse)(nil)).Elem()
}

func (o RRTypeEnumValueResponsePtrOutput) ToRRTypeEnumValueResponsePtrOutput() RRTypeEnumValueResponsePtrOutput {
	return o
}

func (o RRTypeEnumValueResponsePtrOutput) ToRRTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) RRTypeEnumValueResponsePtrOutput {
	return o
}

func (o RRTypeEnumValueResponsePtrOutput) Elem() RRTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *RRTypeEnumValueResponse) RRTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret RRTypeEnumValueResponse
		return ret
	}).(RRTypeEnumValueResponseOutput)
}

// Property value
func (o RRTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RRTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsDBCluster
type RdsDBClusterProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBClusterProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsDBClusterProperties
func (val *RdsDBClusterProperties) Defaults() *RdsDBClusterProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// RdsDBClusterPropertiesInput is an input type that accepts RdsDBClusterPropertiesArgs and RdsDBClusterPropertiesOutput values.
// You can construct a concrete instance of `RdsDBClusterPropertiesInput` via:
//
//	RdsDBClusterPropertiesArgs{...}
type RdsDBClusterPropertiesInput interface {
	pulumi.Input

	ToRdsDBClusterPropertiesOutput() RdsDBClusterPropertiesOutput
	ToRdsDBClusterPropertiesOutputWithContext(context.Context) RdsDBClusterPropertiesOutput
}

// Definition of RdsDBCluster
type RdsDBClusterPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRdsDBClusterPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsDBClusterPropertiesArgs
func (val *RdsDBClusterPropertiesArgs) Defaults() *RdsDBClusterPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (RdsDBClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBClusterProperties)(nil)).Elem()
}

func (i RdsDBClusterPropertiesArgs) ToRdsDBClusterPropertiesOutput() RdsDBClusterPropertiesOutput {
	return i.ToRdsDBClusterPropertiesOutputWithContext(context.Background())
}

func (i RdsDBClusterPropertiesArgs) ToRdsDBClusterPropertiesOutputWithContext(ctx context.Context) RdsDBClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBClusterPropertiesOutput)
}

func (i RdsDBClusterPropertiesArgs) ToRdsDBClusterPropertiesPtrOutput() RdsDBClusterPropertiesPtrOutput {
	return i.ToRdsDBClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i RdsDBClusterPropertiesArgs) ToRdsDBClusterPropertiesPtrOutputWithContext(ctx context.Context) RdsDBClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBClusterPropertiesOutput).ToRdsDBClusterPropertiesPtrOutputWithContext(ctx)
}

// RdsDBClusterPropertiesPtrInput is an input type that accepts RdsDBClusterPropertiesArgs, RdsDBClusterPropertiesPtr and RdsDBClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `RdsDBClusterPropertiesPtrInput` via:
//
//	        RdsDBClusterPropertiesArgs{...}
//
//	or:
//
//	        nil
type RdsDBClusterPropertiesPtrInput interface {
	pulumi.Input

	ToRdsDBClusterPropertiesPtrOutput() RdsDBClusterPropertiesPtrOutput
	ToRdsDBClusterPropertiesPtrOutputWithContext(context.Context) RdsDBClusterPropertiesPtrOutput
}

type rdsDBClusterPropertiesPtrType RdsDBClusterPropertiesArgs

func RdsDBClusterPropertiesPtr(v *RdsDBClusterPropertiesArgs) RdsDBClusterPropertiesPtrInput {
	return (*rdsDBClusterPropertiesPtrType)(v)
}

func (*rdsDBClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBClusterProperties)(nil)).Elem()
}

func (i *rdsDBClusterPropertiesPtrType) ToRdsDBClusterPropertiesPtrOutput() RdsDBClusterPropertiesPtrOutput {
	return i.ToRdsDBClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *rdsDBClusterPropertiesPtrType) ToRdsDBClusterPropertiesPtrOutputWithContext(ctx context.Context) RdsDBClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBClusterPropertiesPtrOutput)
}

// Definition of RdsDBCluster
type RdsDBClusterPropertiesOutput struct{ *pulumi.OutputState }

func (RdsDBClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBClusterProperties)(nil)).Elem()
}

func (o RdsDBClusterPropertiesOutput) ToRdsDBClusterPropertiesOutput() RdsDBClusterPropertiesOutput {
	return o
}

func (o RdsDBClusterPropertiesOutput) ToRdsDBClusterPropertiesOutputWithContext(ctx context.Context) RdsDBClusterPropertiesOutput {
	return o
}

func (o RdsDBClusterPropertiesOutput) ToRdsDBClusterPropertiesPtrOutput() RdsDBClusterPropertiesPtrOutput {
	return o.ToRdsDBClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o RdsDBClusterPropertiesOutput) ToRdsDBClusterPropertiesPtrOutputWithContext(ctx context.Context) RdsDBClusterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsDBClusterProperties) *RdsDBClusterProperties {
		return &v
	}).(RdsDBClusterPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBClusterPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBClusterPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBClusterPropertiesOutput) AwsProperties() AwsRdsDBClusterPropertiesPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *AwsRdsDBClusterProperties { return v.AwsProperties }).(AwsRdsDBClusterPropertiesPtrOutput)
}

// AWS Region
func (o RdsDBClusterPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBClusterPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBClusterPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBClusterPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBClusterPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RdsDBClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RdsDBClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBClusterProperties)(nil)).Elem()
}

func (o RdsDBClusterPropertiesPtrOutput) ToRdsDBClusterPropertiesPtrOutput() RdsDBClusterPropertiesPtrOutput {
	return o
}

func (o RdsDBClusterPropertiesPtrOutput) ToRdsDBClusterPropertiesPtrOutputWithContext(ctx context.Context) RdsDBClusterPropertiesPtrOutput {
	return o
}

func (o RdsDBClusterPropertiesPtrOutput) Elem() RdsDBClusterPropertiesOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) RdsDBClusterProperties {
		if v != nil {
			return *v
		}
		var ret RdsDBClusterProperties
		return ret
	}).(RdsDBClusterPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBClusterPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBClusterPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBClusterPropertiesPtrOutput) AwsProperties() AwsRdsDBClusterPropertiesPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *AwsRdsDBClusterProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRdsDBClusterPropertiesPtrOutput)
}

// AWS Region
func (o RdsDBClusterPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBClusterPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBClusterPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBClusterPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBClusterPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsDBCluster
type RdsDBClusterPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBClusterPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsDBClusterPropertiesResponse
func (val *RdsDBClusterPropertiesResponse) Defaults() *RdsDBClusterPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of RdsDBCluster
type RdsDBClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RdsDBClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBClusterPropertiesResponse)(nil)).Elem()
}

func (o RdsDBClusterPropertiesResponseOutput) ToRdsDBClusterPropertiesResponseOutput() RdsDBClusterPropertiesResponseOutput {
	return o
}

func (o RdsDBClusterPropertiesResponseOutput) ToRdsDBClusterPropertiesResponseOutputWithContext(ctx context.Context) RdsDBClusterPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RdsDBClusterPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBClusterPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBClusterPropertiesResponseOutput) AwsProperties() AwsRdsDBClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *AwsRdsDBClusterPropertiesResponse { return v.AwsProperties }).(AwsRdsDBClusterPropertiesResponsePtrOutput)
}

// AWS Region
func (o RdsDBClusterPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBClusterPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBClusterPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RdsDBClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBClusterPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBClusterPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBClusterPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of RdsDBInstance
type RdsDBInstanceProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBInstanceProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsDBInstanceProperties
func (val *RdsDBInstanceProperties) Defaults() *RdsDBInstanceProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// RdsDBInstancePropertiesInput is an input type that accepts RdsDBInstancePropertiesArgs and RdsDBInstancePropertiesOutput values.
// You can construct a concrete instance of `RdsDBInstancePropertiesInput` via:
//
//	RdsDBInstancePropertiesArgs{...}
type RdsDBInstancePropertiesInput interface {
	pulumi.Input

	ToRdsDBInstancePropertiesOutput() RdsDBInstancePropertiesOutput
	ToRdsDBInstancePropertiesOutputWithContext(context.Context) RdsDBInstancePropertiesOutput
}

// Definition of RdsDBInstance
type RdsDBInstancePropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRdsDBInstancePropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsDBInstancePropertiesArgs
func (val *RdsDBInstancePropertiesArgs) Defaults() *RdsDBInstancePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (RdsDBInstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBInstanceProperties)(nil)).Elem()
}

func (i RdsDBInstancePropertiesArgs) ToRdsDBInstancePropertiesOutput() RdsDBInstancePropertiesOutput {
	return i.ToRdsDBInstancePropertiesOutputWithContext(context.Background())
}

func (i RdsDBInstancePropertiesArgs) ToRdsDBInstancePropertiesOutputWithContext(ctx context.Context) RdsDBInstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBInstancePropertiesOutput)
}

func (i RdsDBInstancePropertiesArgs) ToRdsDBInstancePropertiesPtrOutput() RdsDBInstancePropertiesPtrOutput {
	return i.ToRdsDBInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i RdsDBInstancePropertiesArgs) ToRdsDBInstancePropertiesPtrOutputWithContext(ctx context.Context) RdsDBInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBInstancePropertiesOutput).ToRdsDBInstancePropertiesPtrOutputWithContext(ctx)
}

// RdsDBInstancePropertiesPtrInput is an input type that accepts RdsDBInstancePropertiesArgs, RdsDBInstancePropertiesPtr and RdsDBInstancePropertiesPtrOutput values.
// You can construct a concrete instance of `RdsDBInstancePropertiesPtrInput` via:
//
//	        RdsDBInstancePropertiesArgs{...}
//
//	or:
//
//	        nil
type RdsDBInstancePropertiesPtrInput interface {
	pulumi.Input

	ToRdsDBInstancePropertiesPtrOutput() RdsDBInstancePropertiesPtrOutput
	ToRdsDBInstancePropertiesPtrOutputWithContext(context.Context) RdsDBInstancePropertiesPtrOutput
}

type rdsDBInstancePropertiesPtrType RdsDBInstancePropertiesArgs

func RdsDBInstancePropertiesPtr(v *RdsDBInstancePropertiesArgs) RdsDBInstancePropertiesPtrInput {
	return (*rdsDBInstancePropertiesPtrType)(v)
}

func (*rdsDBInstancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBInstanceProperties)(nil)).Elem()
}

func (i *rdsDBInstancePropertiesPtrType) ToRdsDBInstancePropertiesPtrOutput() RdsDBInstancePropertiesPtrOutput {
	return i.ToRdsDBInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *rdsDBInstancePropertiesPtrType) ToRdsDBInstancePropertiesPtrOutputWithContext(ctx context.Context) RdsDBInstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBInstancePropertiesPtrOutput)
}

// Definition of RdsDBInstance
type RdsDBInstancePropertiesOutput struct{ *pulumi.OutputState }

func (RdsDBInstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBInstanceProperties)(nil)).Elem()
}

func (o RdsDBInstancePropertiesOutput) ToRdsDBInstancePropertiesOutput() RdsDBInstancePropertiesOutput {
	return o
}

func (o RdsDBInstancePropertiesOutput) ToRdsDBInstancePropertiesOutputWithContext(ctx context.Context) RdsDBInstancePropertiesOutput {
	return o
}

func (o RdsDBInstancePropertiesOutput) ToRdsDBInstancePropertiesPtrOutput() RdsDBInstancePropertiesPtrOutput {
	return o.ToRdsDBInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o RdsDBInstancePropertiesOutput) ToRdsDBInstancePropertiesPtrOutputWithContext(ctx context.Context) RdsDBInstancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsDBInstanceProperties) *RdsDBInstanceProperties {
		return &v
	}).(RdsDBInstancePropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBInstancePropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBInstancePropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBInstancePropertiesOutput) AwsProperties() AwsRdsDBInstancePropertiesPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *AwsRdsDBInstanceProperties { return v.AwsProperties }).(AwsRdsDBInstancePropertiesPtrOutput)
}

// AWS Region
func (o RdsDBInstancePropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBInstancePropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBInstancePropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBInstancePropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBInstancePropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstanceProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RdsDBInstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (RdsDBInstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBInstanceProperties)(nil)).Elem()
}

func (o RdsDBInstancePropertiesPtrOutput) ToRdsDBInstancePropertiesPtrOutput() RdsDBInstancePropertiesPtrOutput {
	return o
}

func (o RdsDBInstancePropertiesPtrOutput) ToRdsDBInstancePropertiesPtrOutputWithContext(ctx context.Context) RdsDBInstancePropertiesPtrOutput {
	return o
}

func (o RdsDBInstancePropertiesPtrOutput) Elem() RdsDBInstancePropertiesOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) RdsDBInstanceProperties {
		if v != nil {
			return *v
		}
		var ret RdsDBInstanceProperties
		return ret
	}).(RdsDBInstancePropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBInstancePropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBInstancePropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBInstancePropertiesPtrOutput) AwsProperties() AwsRdsDBInstancePropertiesPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *AwsRdsDBInstanceProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRdsDBInstancePropertiesPtrOutput)
}

// AWS Region
func (o RdsDBInstancePropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBInstancePropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBInstancePropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBInstancePropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBInstancePropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBInstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsDBInstance
type RdsDBInstancePropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBInstancePropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsDBInstancePropertiesResponse
func (val *RdsDBInstancePropertiesResponse) Defaults() *RdsDBInstancePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of RdsDBInstance
type RdsDBInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (RdsDBInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBInstancePropertiesResponse)(nil)).Elem()
}

func (o RdsDBInstancePropertiesResponseOutput) ToRdsDBInstancePropertiesResponseOutput() RdsDBInstancePropertiesResponseOutput {
	return o
}

func (o RdsDBInstancePropertiesResponseOutput) ToRdsDBInstancePropertiesResponseOutputWithContext(ctx context.Context) RdsDBInstancePropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RdsDBInstancePropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBInstancePropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBInstancePropertiesResponseOutput) AwsProperties() AwsRdsDBInstancePropertiesResponsePtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *AwsRdsDBInstancePropertiesResponse { return v.AwsProperties }).(AwsRdsDBInstancePropertiesResponsePtrOutput)
}

// AWS Region
func (o RdsDBInstancePropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBInstancePropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBInstancePropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RdsDBInstancePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBInstancePropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBInstancePropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBInstancePropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of RdsDBSnapshotAttributesResult
type RdsDBSnapshotAttributesResultProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBSnapshotAttributesResultProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// RdsDBSnapshotAttributesResultPropertiesInput is an input type that accepts RdsDBSnapshotAttributesResultPropertiesArgs and RdsDBSnapshotAttributesResultPropertiesOutput values.
// You can construct a concrete instance of `RdsDBSnapshotAttributesResultPropertiesInput` via:
//
//	RdsDBSnapshotAttributesResultPropertiesArgs{...}
type RdsDBSnapshotAttributesResultPropertiesInput interface {
	pulumi.Input

	ToRdsDBSnapshotAttributesResultPropertiesOutput() RdsDBSnapshotAttributesResultPropertiesOutput
	ToRdsDBSnapshotAttributesResultPropertiesOutputWithContext(context.Context) RdsDBSnapshotAttributesResultPropertiesOutput
}

// Definition of RdsDBSnapshotAttributesResult
type RdsDBSnapshotAttributesResultPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRdsDBSnapshotAttributesResultPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (RdsDBSnapshotAttributesResultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBSnapshotAttributesResultProperties)(nil)).Elem()
}

func (i RdsDBSnapshotAttributesResultPropertiesArgs) ToRdsDBSnapshotAttributesResultPropertiesOutput() RdsDBSnapshotAttributesResultPropertiesOutput {
	return i.ToRdsDBSnapshotAttributesResultPropertiesOutputWithContext(context.Background())
}

func (i RdsDBSnapshotAttributesResultPropertiesArgs) ToRdsDBSnapshotAttributesResultPropertiesOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBSnapshotAttributesResultPropertiesOutput)
}

func (i RdsDBSnapshotAttributesResultPropertiesArgs) ToRdsDBSnapshotAttributesResultPropertiesPtrOutput() RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return i.ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(context.Background())
}

func (i RdsDBSnapshotAttributesResultPropertiesArgs) ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBSnapshotAttributesResultPropertiesOutput).ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(ctx)
}

// RdsDBSnapshotAttributesResultPropertiesPtrInput is an input type that accepts RdsDBSnapshotAttributesResultPropertiesArgs, RdsDBSnapshotAttributesResultPropertiesPtr and RdsDBSnapshotAttributesResultPropertiesPtrOutput values.
// You can construct a concrete instance of `RdsDBSnapshotAttributesResultPropertiesPtrInput` via:
//
//	        RdsDBSnapshotAttributesResultPropertiesArgs{...}
//
//	or:
//
//	        nil
type RdsDBSnapshotAttributesResultPropertiesPtrInput interface {
	pulumi.Input

	ToRdsDBSnapshotAttributesResultPropertiesPtrOutput() RdsDBSnapshotAttributesResultPropertiesPtrOutput
	ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(context.Context) RdsDBSnapshotAttributesResultPropertiesPtrOutput
}

type rdsDBSnapshotAttributesResultPropertiesPtrType RdsDBSnapshotAttributesResultPropertiesArgs

func RdsDBSnapshotAttributesResultPropertiesPtr(v *RdsDBSnapshotAttributesResultPropertiesArgs) RdsDBSnapshotAttributesResultPropertiesPtrInput {
	return (*rdsDBSnapshotAttributesResultPropertiesPtrType)(v)
}

func (*rdsDBSnapshotAttributesResultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBSnapshotAttributesResultProperties)(nil)).Elem()
}

func (i *rdsDBSnapshotAttributesResultPropertiesPtrType) ToRdsDBSnapshotAttributesResultPropertiesPtrOutput() RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return i.ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(context.Background())
}

func (i *rdsDBSnapshotAttributesResultPropertiesPtrType) ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBSnapshotAttributesResultPropertiesPtrOutput)
}

// Definition of RdsDBSnapshotAttributesResult
type RdsDBSnapshotAttributesResultPropertiesOutput struct{ *pulumi.OutputState }

func (RdsDBSnapshotAttributesResultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBSnapshotAttributesResultProperties)(nil)).Elem()
}

func (o RdsDBSnapshotAttributesResultPropertiesOutput) ToRdsDBSnapshotAttributesResultPropertiesOutput() RdsDBSnapshotAttributesResultPropertiesOutput {
	return o
}

func (o RdsDBSnapshotAttributesResultPropertiesOutput) ToRdsDBSnapshotAttributesResultPropertiesOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesOutput {
	return o
}

func (o RdsDBSnapshotAttributesResultPropertiesOutput) ToRdsDBSnapshotAttributesResultPropertiesPtrOutput() RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return o.ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(context.Background())
}

func (o RdsDBSnapshotAttributesResultPropertiesOutput) ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsDBSnapshotAttributesResultProperties) *RdsDBSnapshotAttributesResultProperties {
		return &v
	}).(RdsDBSnapshotAttributesResultPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBSnapshotAttributesResultPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBSnapshotAttributesResultPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBSnapshotAttributesResultPropertiesOutput) AwsProperties() AwsRdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *AwsRdsDBSnapshotAttributesResultProperties {
		return v.AwsProperties
	}).(AwsRdsDBSnapshotAttributesResultPropertiesPtrOutput)
}

// AWS Region
func (o RdsDBSnapshotAttributesResultPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBSnapshotAttributesResultPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBSnapshotAttributesResultPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBSnapshotAttributesResultPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBSnapshotAttributesResultPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RdsDBSnapshotAttributesResultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RdsDBSnapshotAttributesResultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBSnapshotAttributesResultProperties)(nil)).Elem()
}

func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) ToRdsDBSnapshotAttributesResultPropertiesPtrOutput() RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return o
}

func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) ToRdsDBSnapshotAttributesResultPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return o
}

func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) Elem() RdsDBSnapshotAttributesResultPropertiesOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) RdsDBSnapshotAttributesResultProperties {
		if v != nil {
			return *v
		}
		var ret RdsDBSnapshotAttributesResultProperties
		return ret
	}).(RdsDBSnapshotAttributesResultPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) AwsProperties() AwsRdsDBSnapshotAttributesResultPropertiesPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *AwsRdsDBSnapshotAttributesResultProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRdsDBSnapshotAttributesResultPropertiesPtrOutput)
}

// AWS Region
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBSnapshotAttributesResultPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotAttributesResultProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsDBSnapshotAttributesResult
type RdsDBSnapshotAttributesResultPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBSnapshotAttributesResultPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of RdsDBSnapshotAttributesResult
type RdsDBSnapshotAttributesResultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RdsDBSnapshotAttributesResultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBSnapshotAttributesResultPropertiesResponse)(nil)).Elem()
}

func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) ToRdsDBSnapshotAttributesResultPropertiesResponseOutput() RdsDBSnapshotAttributesResultPropertiesResponseOutput {
	return o
}

func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) ToRdsDBSnapshotAttributesResultPropertiesResponseOutputWithContext(ctx context.Context) RdsDBSnapshotAttributesResultPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) AwsProperties() AwsRdsDBSnapshotAttributesResultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *AwsRdsDBSnapshotAttributesResultPropertiesResponse {
		return v.AwsProperties
	}).(AwsRdsDBSnapshotAttributesResultPropertiesResponsePtrOutput)
}

// AWS Region
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBSnapshotAttributesResultPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotAttributesResultPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of RdsDBSnapshot
type RdsDBSnapshotProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBSnapshotProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// RdsDBSnapshotPropertiesInput is an input type that accepts RdsDBSnapshotPropertiesArgs and RdsDBSnapshotPropertiesOutput values.
// You can construct a concrete instance of `RdsDBSnapshotPropertiesInput` via:
//
//	RdsDBSnapshotPropertiesArgs{...}
type RdsDBSnapshotPropertiesInput interface {
	pulumi.Input

	ToRdsDBSnapshotPropertiesOutput() RdsDBSnapshotPropertiesOutput
	ToRdsDBSnapshotPropertiesOutputWithContext(context.Context) RdsDBSnapshotPropertiesOutput
}

// Definition of RdsDBSnapshot
type RdsDBSnapshotPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRdsDBSnapshotPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (RdsDBSnapshotPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBSnapshotProperties)(nil)).Elem()
}

func (i RdsDBSnapshotPropertiesArgs) ToRdsDBSnapshotPropertiesOutput() RdsDBSnapshotPropertiesOutput {
	return i.ToRdsDBSnapshotPropertiesOutputWithContext(context.Background())
}

func (i RdsDBSnapshotPropertiesArgs) ToRdsDBSnapshotPropertiesOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBSnapshotPropertiesOutput)
}

func (i RdsDBSnapshotPropertiesArgs) ToRdsDBSnapshotPropertiesPtrOutput() RdsDBSnapshotPropertiesPtrOutput {
	return i.ToRdsDBSnapshotPropertiesPtrOutputWithContext(context.Background())
}

func (i RdsDBSnapshotPropertiesArgs) ToRdsDBSnapshotPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBSnapshotPropertiesOutput).ToRdsDBSnapshotPropertiesPtrOutputWithContext(ctx)
}

// RdsDBSnapshotPropertiesPtrInput is an input type that accepts RdsDBSnapshotPropertiesArgs, RdsDBSnapshotPropertiesPtr and RdsDBSnapshotPropertiesPtrOutput values.
// You can construct a concrete instance of `RdsDBSnapshotPropertiesPtrInput` via:
//
//	        RdsDBSnapshotPropertiesArgs{...}
//
//	or:
//
//	        nil
type RdsDBSnapshotPropertiesPtrInput interface {
	pulumi.Input

	ToRdsDBSnapshotPropertiesPtrOutput() RdsDBSnapshotPropertiesPtrOutput
	ToRdsDBSnapshotPropertiesPtrOutputWithContext(context.Context) RdsDBSnapshotPropertiesPtrOutput
}

type rdsDBSnapshotPropertiesPtrType RdsDBSnapshotPropertiesArgs

func RdsDBSnapshotPropertiesPtr(v *RdsDBSnapshotPropertiesArgs) RdsDBSnapshotPropertiesPtrInput {
	return (*rdsDBSnapshotPropertiesPtrType)(v)
}

func (*rdsDBSnapshotPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBSnapshotProperties)(nil)).Elem()
}

func (i *rdsDBSnapshotPropertiesPtrType) ToRdsDBSnapshotPropertiesPtrOutput() RdsDBSnapshotPropertiesPtrOutput {
	return i.ToRdsDBSnapshotPropertiesPtrOutputWithContext(context.Background())
}

func (i *rdsDBSnapshotPropertiesPtrType) ToRdsDBSnapshotPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDBSnapshotPropertiesPtrOutput)
}

// Definition of RdsDBSnapshot
type RdsDBSnapshotPropertiesOutput struct{ *pulumi.OutputState }

func (RdsDBSnapshotPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBSnapshotProperties)(nil)).Elem()
}

func (o RdsDBSnapshotPropertiesOutput) ToRdsDBSnapshotPropertiesOutput() RdsDBSnapshotPropertiesOutput {
	return o
}

func (o RdsDBSnapshotPropertiesOutput) ToRdsDBSnapshotPropertiesOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesOutput {
	return o
}

func (o RdsDBSnapshotPropertiesOutput) ToRdsDBSnapshotPropertiesPtrOutput() RdsDBSnapshotPropertiesPtrOutput {
	return o.ToRdsDBSnapshotPropertiesPtrOutputWithContext(context.Background())
}

func (o RdsDBSnapshotPropertiesOutput) ToRdsDBSnapshotPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsDBSnapshotProperties) *RdsDBSnapshotProperties {
		return &v
	}).(RdsDBSnapshotPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBSnapshotPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBSnapshotPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBSnapshotPropertiesOutput) AwsProperties() AwsRdsDBSnapshotPropertiesPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *AwsRdsDBSnapshotProperties { return v.AwsProperties }).(AwsRdsDBSnapshotPropertiesPtrOutput)
}

// AWS Region
func (o RdsDBSnapshotPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBSnapshotPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBSnapshotPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBSnapshotPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBSnapshotPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RdsDBSnapshotPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RdsDBSnapshotPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDBSnapshotProperties)(nil)).Elem()
}

func (o RdsDBSnapshotPropertiesPtrOutput) ToRdsDBSnapshotPropertiesPtrOutput() RdsDBSnapshotPropertiesPtrOutput {
	return o
}

func (o RdsDBSnapshotPropertiesPtrOutput) ToRdsDBSnapshotPropertiesPtrOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesPtrOutput {
	return o
}

func (o RdsDBSnapshotPropertiesPtrOutput) Elem() RdsDBSnapshotPropertiesOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) RdsDBSnapshotProperties {
		if v != nil {
			return *v
		}
		var ret RdsDBSnapshotProperties
		return ret
	}).(RdsDBSnapshotPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RdsDBSnapshotPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBSnapshotPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBSnapshotPropertiesPtrOutput) AwsProperties() AwsRdsDBSnapshotPropertiesPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *AwsRdsDBSnapshotProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRdsDBSnapshotPropertiesPtrOutput)
}

// AWS Region
func (o RdsDBSnapshotPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBSnapshotPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBSnapshotPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBSnapshotPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBSnapshotPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDBSnapshotProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsDBSnapshot
type RdsDBSnapshotPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsDBSnapshotPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of RdsDBSnapshot
type RdsDBSnapshotPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RdsDBSnapshotPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDBSnapshotPropertiesResponse)(nil)).Elem()
}

func (o RdsDBSnapshotPropertiesResponseOutput) ToRdsDBSnapshotPropertiesResponseOutput() RdsDBSnapshotPropertiesResponseOutput {
	return o
}

func (o RdsDBSnapshotPropertiesResponseOutput) ToRdsDBSnapshotPropertiesResponseOutputWithContext(ctx context.Context) RdsDBSnapshotPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RdsDBSnapshotPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsDBSnapshotPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsDBSnapshotPropertiesResponseOutput) AwsProperties() AwsRdsDBSnapshotPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *AwsRdsDBSnapshotPropertiesResponse { return v.AwsProperties }).(AwsRdsDBSnapshotPropertiesResponsePtrOutput)
}

// AWS Region
func (o RdsDBSnapshotPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsDBSnapshotPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsDBSnapshotPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RdsDBSnapshotPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsDBSnapshotPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsDBSnapshotPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDBSnapshotPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of Endpoint
type RdsDbClusterEndpoint struct {
	// The connection endpoint for the DB cluster.
	Address *string `pulumi:"address"`
	// The port number that will accept connections on this DB cluster.
	Port *string `pulumi:"port"`
}

// RdsDbClusterEndpointInput is an input type that accepts RdsDbClusterEndpointArgs and RdsDbClusterEndpointOutput values.
// You can construct a concrete instance of `RdsDbClusterEndpointInput` via:
//
//	RdsDbClusterEndpointArgs{...}
type RdsDbClusterEndpointInput interface {
	pulumi.Input

	ToRdsDbClusterEndpointOutput() RdsDbClusterEndpointOutput
	ToRdsDbClusterEndpointOutputWithContext(context.Context) RdsDbClusterEndpointOutput
}

// Definition of Endpoint
type RdsDbClusterEndpointArgs struct {
	// The connection endpoint for the DB cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The port number that will accept connections on this DB cluster.
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (RdsDbClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDbClusterEndpoint)(nil)).Elem()
}

func (i RdsDbClusterEndpointArgs) ToRdsDbClusterEndpointOutput() RdsDbClusterEndpointOutput {
	return i.ToRdsDbClusterEndpointOutputWithContext(context.Background())
}

func (i RdsDbClusterEndpointArgs) ToRdsDbClusterEndpointOutputWithContext(ctx context.Context) RdsDbClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDbClusterEndpointOutput)
}

func (i RdsDbClusterEndpointArgs) ToRdsDbClusterEndpointPtrOutput() RdsDbClusterEndpointPtrOutput {
	return i.ToRdsDbClusterEndpointPtrOutputWithContext(context.Background())
}

func (i RdsDbClusterEndpointArgs) ToRdsDbClusterEndpointPtrOutputWithContext(ctx context.Context) RdsDbClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDbClusterEndpointOutput).ToRdsDbClusterEndpointPtrOutputWithContext(ctx)
}

// RdsDbClusterEndpointPtrInput is an input type that accepts RdsDbClusterEndpointArgs, RdsDbClusterEndpointPtr and RdsDbClusterEndpointPtrOutput values.
// You can construct a concrete instance of `RdsDbClusterEndpointPtrInput` via:
//
//	        RdsDbClusterEndpointArgs{...}
//
//	or:
//
//	        nil
type RdsDbClusterEndpointPtrInput interface {
	pulumi.Input

	ToRdsDbClusterEndpointPtrOutput() RdsDbClusterEndpointPtrOutput
	ToRdsDbClusterEndpointPtrOutputWithContext(context.Context) RdsDbClusterEndpointPtrOutput
}

type rdsDbClusterEndpointPtrType RdsDbClusterEndpointArgs

func RdsDbClusterEndpointPtr(v *RdsDbClusterEndpointArgs) RdsDbClusterEndpointPtrInput {
	return (*rdsDbClusterEndpointPtrType)(v)
}

func (*rdsDbClusterEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDbClusterEndpoint)(nil)).Elem()
}

func (i *rdsDbClusterEndpointPtrType) ToRdsDbClusterEndpointPtrOutput() RdsDbClusterEndpointPtrOutput {
	return i.ToRdsDbClusterEndpointPtrOutputWithContext(context.Background())
}

func (i *rdsDbClusterEndpointPtrType) ToRdsDbClusterEndpointPtrOutputWithContext(ctx context.Context) RdsDbClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDbClusterEndpointPtrOutput)
}

// Definition of Endpoint
type RdsDbClusterEndpointOutput struct{ *pulumi.OutputState }

func (RdsDbClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDbClusterEndpoint)(nil)).Elem()
}

func (o RdsDbClusterEndpointOutput) ToRdsDbClusterEndpointOutput() RdsDbClusterEndpointOutput {
	return o
}

func (o RdsDbClusterEndpointOutput) ToRdsDbClusterEndpointOutputWithContext(ctx context.Context) RdsDbClusterEndpointOutput {
	return o
}

func (o RdsDbClusterEndpointOutput) ToRdsDbClusterEndpointPtrOutput() RdsDbClusterEndpointPtrOutput {
	return o.ToRdsDbClusterEndpointPtrOutputWithContext(context.Background())
}

func (o RdsDbClusterEndpointOutput) ToRdsDbClusterEndpointPtrOutputWithContext(ctx context.Context) RdsDbClusterEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsDbClusterEndpoint) *RdsDbClusterEndpoint {
		return &v
	}).(RdsDbClusterEndpointPtrOutput)
}

// The connection endpoint for the DB cluster.
func (o RdsDbClusterEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbClusterEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The port number that will accept connections on this DB cluster.
func (o RdsDbClusterEndpointOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbClusterEndpoint) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type RdsDbClusterEndpointPtrOutput struct{ *pulumi.OutputState }

func (RdsDbClusterEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDbClusterEndpoint)(nil)).Elem()
}

func (o RdsDbClusterEndpointPtrOutput) ToRdsDbClusterEndpointPtrOutput() RdsDbClusterEndpointPtrOutput {
	return o
}

func (o RdsDbClusterEndpointPtrOutput) ToRdsDbClusterEndpointPtrOutputWithContext(ctx context.Context) RdsDbClusterEndpointPtrOutput {
	return o
}

func (o RdsDbClusterEndpointPtrOutput) Elem() RdsDbClusterEndpointOutput {
	return o.ApplyT(func(v *RdsDbClusterEndpoint) RdsDbClusterEndpoint {
		if v != nil {
			return *v
		}
		var ret RdsDbClusterEndpoint
		return ret
	}).(RdsDbClusterEndpointOutput)
}

// The connection endpoint for the DB cluster.
func (o RdsDbClusterEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The port number that will accept connections on this DB cluster.
func (o RdsDbClusterEndpointPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Definition of Endpoint
type RdsDbClusterEndpointResponse struct {
	// The connection endpoint for the DB cluster.
	Address *string `pulumi:"address"`
	// The port number that will accept connections on this DB cluster.
	Port *string `pulumi:"port"`
}

// Definition of Endpoint
type RdsDbClusterEndpointResponseOutput struct{ *pulumi.OutputState }

func (RdsDbClusterEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDbClusterEndpointResponse)(nil)).Elem()
}

func (o RdsDbClusterEndpointResponseOutput) ToRdsDbClusterEndpointResponseOutput() RdsDbClusterEndpointResponseOutput {
	return o
}

func (o RdsDbClusterEndpointResponseOutput) ToRdsDbClusterEndpointResponseOutputWithContext(ctx context.Context) RdsDbClusterEndpointResponseOutput {
	return o
}

// The connection endpoint for the DB cluster.
func (o RdsDbClusterEndpointResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbClusterEndpointResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The port number that will accept connections on this DB cluster.
func (o RdsDbClusterEndpointResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbClusterEndpointResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type RdsDbClusterEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (RdsDbClusterEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDbClusterEndpointResponse)(nil)).Elem()
}

func (o RdsDbClusterEndpointResponsePtrOutput) ToRdsDbClusterEndpointResponsePtrOutput() RdsDbClusterEndpointResponsePtrOutput {
	return o
}

func (o RdsDbClusterEndpointResponsePtrOutput) ToRdsDbClusterEndpointResponsePtrOutputWithContext(ctx context.Context) RdsDbClusterEndpointResponsePtrOutput {
	return o
}

func (o RdsDbClusterEndpointResponsePtrOutput) Elem() RdsDbClusterEndpointResponseOutput {
	return o.ApplyT(func(v *RdsDbClusterEndpointResponse) RdsDbClusterEndpointResponse {
		if v != nil {
			return *v
		}
		var ret RdsDbClusterEndpointResponse
		return ret
	}).(RdsDbClusterEndpointResponseOutput)
}

// The connection endpoint for the DB cluster.
func (o RdsDbClusterEndpointResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbClusterEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The port number that will accept connections on this DB cluster.
func (o RdsDbClusterEndpointResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbClusterEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Definition of Endpoint
type RdsDbInstanceEndpoint struct {
	// Specifies the DNS address of the DB instance.
	Address *string `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// Specifies the port that the database engine is listening on.
	Port *string `pulumi:"port"`
}

// RdsDbInstanceEndpointInput is an input type that accepts RdsDbInstanceEndpointArgs and RdsDbInstanceEndpointOutput values.
// You can construct a concrete instance of `RdsDbInstanceEndpointInput` via:
//
//	RdsDbInstanceEndpointArgs{...}
type RdsDbInstanceEndpointInput interface {
	pulumi.Input

	ToRdsDbInstanceEndpointOutput() RdsDbInstanceEndpointOutput
	ToRdsDbInstanceEndpointOutputWithContext(context.Context) RdsDbInstanceEndpointOutput
}

// Definition of Endpoint
type RdsDbInstanceEndpointArgs struct {
	// Specifies the DNS address of the DB instance.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
	// Specifies the port that the database engine is listening on.
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (RdsDbInstanceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDbInstanceEndpoint)(nil)).Elem()
}

func (i RdsDbInstanceEndpointArgs) ToRdsDbInstanceEndpointOutput() RdsDbInstanceEndpointOutput {
	return i.ToRdsDbInstanceEndpointOutputWithContext(context.Background())
}

func (i RdsDbInstanceEndpointArgs) ToRdsDbInstanceEndpointOutputWithContext(ctx context.Context) RdsDbInstanceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDbInstanceEndpointOutput)
}

func (i RdsDbInstanceEndpointArgs) ToRdsDbInstanceEndpointPtrOutput() RdsDbInstanceEndpointPtrOutput {
	return i.ToRdsDbInstanceEndpointPtrOutputWithContext(context.Background())
}

func (i RdsDbInstanceEndpointArgs) ToRdsDbInstanceEndpointPtrOutputWithContext(ctx context.Context) RdsDbInstanceEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDbInstanceEndpointOutput).ToRdsDbInstanceEndpointPtrOutputWithContext(ctx)
}

// RdsDbInstanceEndpointPtrInput is an input type that accepts RdsDbInstanceEndpointArgs, RdsDbInstanceEndpointPtr and RdsDbInstanceEndpointPtrOutput values.
// You can construct a concrete instance of `RdsDbInstanceEndpointPtrInput` via:
//
//	        RdsDbInstanceEndpointArgs{...}
//
//	or:
//
//	        nil
type RdsDbInstanceEndpointPtrInput interface {
	pulumi.Input

	ToRdsDbInstanceEndpointPtrOutput() RdsDbInstanceEndpointPtrOutput
	ToRdsDbInstanceEndpointPtrOutputWithContext(context.Context) RdsDbInstanceEndpointPtrOutput
}

type rdsDbInstanceEndpointPtrType RdsDbInstanceEndpointArgs

func RdsDbInstanceEndpointPtr(v *RdsDbInstanceEndpointArgs) RdsDbInstanceEndpointPtrInput {
	return (*rdsDbInstanceEndpointPtrType)(v)
}

func (*rdsDbInstanceEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDbInstanceEndpoint)(nil)).Elem()
}

func (i *rdsDbInstanceEndpointPtrType) ToRdsDbInstanceEndpointPtrOutput() RdsDbInstanceEndpointPtrOutput {
	return i.ToRdsDbInstanceEndpointPtrOutputWithContext(context.Background())
}

func (i *rdsDbInstanceEndpointPtrType) ToRdsDbInstanceEndpointPtrOutputWithContext(ctx context.Context) RdsDbInstanceEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsDbInstanceEndpointPtrOutput)
}

// Definition of Endpoint
type RdsDbInstanceEndpointOutput struct{ *pulumi.OutputState }

func (RdsDbInstanceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDbInstanceEndpoint)(nil)).Elem()
}

func (o RdsDbInstanceEndpointOutput) ToRdsDbInstanceEndpointOutput() RdsDbInstanceEndpointOutput {
	return o
}

func (o RdsDbInstanceEndpointOutput) ToRdsDbInstanceEndpointOutputWithContext(ctx context.Context) RdsDbInstanceEndpointOutput {
	return o
}

func (o RdsDbInstanceEndpointOutput) ToRdsDbInstanceEndpointPtrOutput() RdsDbInstanceEndpointPtrOutput {
	return o.ToRdsDbInstanceEndpointPtrOutputWithContext(context.Background())
}

func (o RdsDbInstanceEndpointOutput) ToRdsDbInstanceEndpointPtrOutputWithContext(ctx context.Context) RdsDbInstanceEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsDbInstanceEndpoint) *RdsDbInstanceEndpoint {
		return &v
	}).(RdsDbInstanceEndpointPtrOutput)
}

// Specifies the DNS address of the DB instance.
func (o RdsDbInstanceEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbInstanceEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o RdsDbInstanceEndpointOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbInstanceEndpoint) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

// Specifies the port that the database engine is listening on.
func (o RdsDbInstanceEndpointOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbInstanceEndpoint) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type RdsDbInstanceEndpointPtrOutput struct{ *pulumi.OutputState }

func (RdsDbInstanceEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDbInstanceEndpoint)(nil)).Elem()
}

func (o RdsDbInstanceEndpointPtrOutput) ToRdsDbInstanceEndpointPtrOutput() RdsDbInstanceEndpointPtrOutput {
	return o
}

func (o RdsDbInstanceEndpointPtrOutput) ToRdsDbInstanceEndpointPtrOutputWithContext(ctx context.Context) RdsDbInstanceEndpointPtrOutput {
	return o
}

func (o RdsDbInstanceEndpointPtrOutput) Elem() RdsDbInstanceEndpointOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpoint) RdsDbInstanceEndpoint {
		if v != nil {
			return *v
		}
		var ret RdsDbInstanceEndpoint
		return ret
	}).(RdsDbInstanceEndpointOutput)
}

// Specifies the DNS address of the DB instance.
func (o RdsDbInstanceEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o RdsDbInstanceEndpointPtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

// Specifies the port that the database engine is listening on.
func (o RdsDbInstanceEndpointPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Definition of Endpoint
type RdsDbInstanceEndpointResponse struct {
	// Specifies the DNS address of the DB instance.
	Address *string `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// Specifies the port that the database engine is listening on.
	Port *string `pulumi:"port"`
}

// Definition of Endpoint
type RdsDbInstanceEndpointResponseOutput struct{ *pulumi.OutputState }

func (RdsDbInstanceEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsDbInstanceEndpointResponse)(nil)).Elem()
}

func (o RdsDbInstanceEndpointResponseOutput) ToRdsDbInstanceEndpointResponseOutput() RdsDbInstanceEndpointResponseOutput {
	return o
}

func (o RdsDbInstanceEndpointResponseOutput) ToRdsDbInstanceEndpointResponseOutputWithContext(ctx context.Context) RdsDbInstanceEndpointResponseOutput {
	return o
}

// Specifies the DNS address of the DB instance.
func (o RdsDbInstanceEndpointResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbInstanceEndpointResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o RdsDbInstanceEndpointResponseOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbInstanceEndpointResponse) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

// Specifies the port that the database engine is listening on.
func (o RdsDbInstanceEndpointResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsDbInstanceEndpointResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type RdsDbInstanceEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (RdsDbInstanceEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsDbInstanceEndpointResponse)(nil)).Elem()
}

func (o RdsDbInstanceEndpointResponsePtrOutput) ToRdsDbInstanceEndpointResponsePtrOutput() RdsDbInstanceEndpointResponsePtrOutput {
	return o
}

func (o RdsDbInstanceEndpointResponsePtrOutput) ToRdsDbInstanceEndpointResponsePtrOutputWithContext(ctx context.Context) RdsDbInstanceEndpointResponsePtrOutput {
	return o
}

func (o RdsDbInstanceEndpointResponsePtrOutput) Elem() RdsDbInstanceEndpointResponseOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpointResponse) RdsDbInstanceEndpointResponse {
		if v != nil {
			return *v
		}
		var ret RdsDbInstanceEndpointResponse
		return ret
	}).(RdsDbInstanceEndpointResponseOutput)
}

// Specifies the DNS address of the DB instance.
func (o RdsDbInstanceEndpointResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o RdsDbInstanceEndpointResponsePtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

// Specifies the port that the database engine is listening on.
func (o RdsDbInstanceEndpointResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsDbInstanceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsEventSubscription
type RdsEventSubscriptionProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsEventSubscriptionProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsEventSubscriptionProperties
func (val *RdsEventSubscriptionProperties) Defaults() *RdsEventSubscriptionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// RdsEventSubscriptionPropertiesInput is an input type that accepts RdsEventSubscriptionPropertiesArgs and RdsEventSubscriptionPropertiesOutput values.
// You can construct a concrete instance of `RdsEventSubscriptionPropertiesInput` via:
//
//	RdsEventSubscriptionPropertiesArgs{...}
type RdsEventSubscriptionPropertiesInput interface {
	pulumi.Input

	ToRdsEventSubscriptionPropertiesOutput() RdsEventSubscriptionPropertiesOutput
	ToRdsEventSubscriptionPropertiesOutputWithContext(context.Context) RdsEventSubscriptionPropertiesOutput
}

// Definition of RdsEventSubscription
type RdsEventSubscriptionPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRdsEventSubscriptionPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsEventSubscriptionPropertiesArgs
func (val *RdsEventSubscriptionPropertiesArgs) Defaults() *RdsEventSubscriptionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (RdsEventSubscriptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsEventSubscriptionProperties)(nil)).Elem()
}

func (i RdsEventSubscriptionPropertiesArgs) ToRdsEventSubscriptionPropertiesOutput() RdsEventSubscriptionPropertiesOutput {
	return i.ToRdsEventSubscriptionPropertiesOutputWithContext(context.Background())
}

func (i RdsEventSubscriptionPropertiesArgs) ToRdsEventSubscriptionPropertiesOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsEventSubscriptionPropertiesOutput)
}

func (i RdsEventSubscriptionPropertiesArgs) ToRdsEventSubscriptionPropertiesPtrOutput() RdsEventSubscriptionPropertiesPtrOutput {
	return i.ToRdsEventSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (i RdsEventSubscriptionPropertiesArgs) ToRdsEventSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsEventSubscriptionPropertiesOutput).ToRdsEventSubscriptionPropertiesPtrOutputWithContext(ctx)
}

// RdsEventSubscriptionPropertiesPtrInput is an input type that accepts RdsEventSubscriptionPropertiesArgs, RdsEventSubscriptionPropertiesPtr and RdsEventSubscriptionPropertiesPtrOutput values.
// You can construct a concrete instance of `RdsEventSubscriptionPropertiesPtrInput` via:
//
//	        RdsEventSubscriptionPropertiesArgs{...}
//
//	or:
//
//	        nil
type RdsEventSubscriptionPropertiesPtrInput interface {
	pulumi.Input

	ToRdsEventSubscriptionPropertiesPtrOutput() RdsEventSubscriptionPropertiesPtrOutput
	ToRdsEventSubscriptionPropertiesPtrOutputWithContext(context.Context) RdsEventSubscriptionPropertiesPtrOutput
}

type rdsEventSubscriptionPropertiesPtrType RdsEventSubscriptionPropertiesArgs

func RdsEventSubscriptionPropertiesPtr(v *RdsEventSubscriptionPropertiesArgs) RdsEventSubscriptionPropertiesPtrInput {
	return (*rdsEventSubscriptionPropertiesPtrType)(v)
}

func (*rdsEventSubscriptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsEventSubscriptionProperties)(nil)).Elem()
}

func (i *rdsEventSubscriptionPropertiesPtrType) ToRdsEventSubscriptionPropertiesPtrOutput() RdsEventSubscriptionPropertiesPtrOutput {
	return i.ToRdsEventSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *rdsEventSubscriptionPropertiesPtrType) ToRdsEventSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsEventSubscriptionPropertiesPtrOutput)
}

// Definition of RdsEventSubscription
type RdsEventSubscriptionPropertiesOutput struct{ *pulumi.OutputState }

func (RdsEventSubscriptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsEventSubscriptionProperties)(nil)).Elem()
}

func (o RdsEventSubscriptionPropertiesOutput) ToRdsEventSubscriptionPropertiesOutput() RdsEventSubscriptionPropertiesOutput {
	return o
}

func (o RdsEventSubscriptionPropertiesOutput) ToRdsEventSubscriptionPropertiesOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesOutput {
	return o
}

func (o RdsEventSubscriptionPropertiesOutput) ToRdsEventSubscriptionPropertiesPtrOutput() RdsEventSubscriptionPropertiesPtrOutput {
	return o.ToRdsEventSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (o RdsEventSubscriptionPropertiesOutput) ToRdsEventSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsEventSubscriptionProperties) *RdsEventSubscriptionProperties {
		return &v
	}).(RdsEventSubscriptionPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RdsEventSubscriptionPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsEventSubscriptionPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsEventSubscriptionPropertiesOutput) AwsProperties() AwsRdsEventSubscriptionPropertiesPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *AwsRdsEventSubscriptionProperties { return v.AwsProperties }).(AwsRdsEventSubscriptionPropertiesPtrOutput)
}

// AWS Region
func (o RdsEventSubscriptionPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsEventSubscriptionPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsEventSubscriptionPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsEventSubscriptionPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsEventSubscriptionPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RdsEventSubscriptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RdsEventSubscriptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsEventSubscriptionProperties)(nil)).Elem()
}

func (o RdsEventSubscriptionPropertiesPtrOutput) ToRdsEventSubscriptionPropertiesPtrOutput() RdsEventSubscriptionPropertiesPtrOutput {
	return o
}

func (o RdsEventSubscriptionPropertiesPtrOutput) ToRdsEventSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesPtrOutput {
	return o
}

func (o RdsEventSubscriptionPropertiesPtrOutput) Elem() RdsEventSubscriptionPropertiesOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) RdsEventSubscriptionProperties {
		if v != nil {
			return *v
		}
		var ret RdsEventSubscriptionProperties
		return ret
	}).(RdsEventSubscriptionPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RdsEventSubscriptionPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsEventSubscriptionPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsEventSubscriptionPropertiesPtrOutput) AwsProperties() AwsRdsEventSubscriptionPropertiesPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *AwsRdsEventSubscriptionProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRdsEventSubscriptionPropertiesPtrOutput)
}

// AWS Region
func (o RdsEventSubscriptionPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsEventSubscriptionPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsEventSubscriptionPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsEventSubscriptionPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsEventSubscriptionPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsEventSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsEventSubscription
type RdsEventSubscriptionPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsEventSubscriptionPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for RdsEventSubscriptionPropertiesResponse
func (val *RdsEventSubscriptionPropertiesResponse) Defaults() *RdsEventSubscriptionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of RdsEventSubscription
type RdsEventSubscriptionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RdsEventSubscriptionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsEventSubscriptionPropertiesResponse)(nil)).Elem()
}

func (o RdsEventSubscriptionPropertiesResponseOutput) ToRdsEventSubscriptionPropertiesResponseOutput() RdsEventSubscriptionPropertiesResponseOutput {
	return o
}

func (o RdsEventSubscriptionPropertiesResponseOutput) ToRdsEventSubscriptionPropertiesResponseOutputWithContext(ctx context.Context) RdsEventSubscriptionPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RdsEventSubscriptionPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsEventSubscriptionPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsEventSubscriptionPropertiesResponseOutput) AwsProperties() AwsRdsEventSubscriptionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *AwsRdsEventSubscriptionPropertiesResponse {
		return v.AwsProperties
	}).(AwsRdsEventSubscriptionPropertiesResponsePtrOutput)
}

// AWS Region
func (o RdsEventSubscriptionPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsEventSubscriptionPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsEventSubscriptionPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RdsEventSubscriptionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsEventSubscriptionPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsEventSubscriptionPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsEventSubscriptionPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of RdsExportTask
type RdsExportTaskProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsExportTaskProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// RdsExportTaskPropertiesInput is an input type that accepts RdsExportTaskPropertiesArgs and RdsExportTaskPropertiesOutput values.
// You can construct a concrete instance of `RdsExportTaskPropertiesInput` via:
//
//	RdsExportTaskPropertiesArgs{...}
type RdsExportTaskPropertiesInput interface {
	pulumi.Input

	ToRdsExportTaskPropertiesOutput() RdsExportTaskPropertiesOutput
	ToRdsExportTaskPropertiesOutputWithContext(context.Context) RdsExportTaskPropertiesOutput
}

// Definition of RdsExportTask
type RdsExportTaskPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRdsExportTaskPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (RdsExportTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsExportTaskProperties)(nil)).Elem()
}

func (i RdsExportTaskPropertiesArgs) ToRdsExportTaskPropertiesOutput() RdsExportTaskPropertiesOutput {
	return i.ToRdsExportTaskPropertiesOutputWithContext(context.Background())
}

func (i RdsExportTaskPropertiesArgs) ToRdsExportTaskPropertiesOutputWithContext(ctx context.Context) RdsExportTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsExportTaskPropertiesOutput)
}

func (i RdsExportTaskPropertiesArgs) ToRdsExportTaskPropertiesPtrOutput() RdsExportTaskPropertiesPtrOutput {
	return i.ToRdsExportTaskPropertiesPtrOutputWithContext(context.Background())
}

func (i RdsExportTaskPropertiesArgs) ToRdsExportTaskPropertiesPtrOutputWithContext(ctx context.Context) RdsExportTaskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsExportTaskPropertiesOutput).ToRdsExportTaskPropertiesPtrOutputWithContext(ctx)
}

// RdsExportTaskPropertiesPtrInput is an input type that accepts RdsExportTaskPropertiesArgs, RdsExportTaskPropertiesPtr and RdsExportTaskPropertiesPtrOutput values.
// You can construct a concrete instance of `RdsExportTaskPropertiesPtrInput` via:
//
//	        RdsExportTaskPropertiesArgs{...}
//
//	or:
//
//	        nil
type RdsExportTaskPropertiesPtrInput interface {
	pulumi.Input

	ToRdsExportTaskPropertiesPtrOutput() RdsExportTaskPropertiesPtrOutput
	ToRdsExportTaskPropertiesPtrOutputWithContext(context.Context) RdsExportTaskPropertiesPtrOutput
}

type rdsExportTaskPropertiesPtrType RdsExportTaskPropertiesArgs

func RdsExportTaskPropertiesPtr(v *RdsExportTaskPropertiesArgs) RdsExportTaskPropertiesPtrInput {
	return (*rdsExportTaskPropertiesPtrType)(v)
}

func (*rdsExportTaskPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsExportTaskProperties)(nil)).Elem()
}

func (i *rdsExportTaskPropertiesPtrType) ToRdsExportTaskPropertiesPtrOutput() RdsExportTaskPropertiesPtrOutput {
	return i.ToRdsExportTaskPropertiesPtrOutputWithContext(context.Background())
}

func (i *rdsExportTaskPropertiesPtrType) ToRdsExportTaskPropertiesPtrOutputWithContext(ctx context.Context) RdsExportTaskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsExportTaskPropertiesPtrOutput)
}

// Definition of RdsExportTask
type RdsExportTaskPropertiesOutput struct{ *pulumi.OutputState }

func (RdsExportTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsExportTaskProperties)(nil)).Elem()
}

func (o RdsExportTaskPropertiesOutput) ToRdsExportTaskPropertiesOutput() RdsExportTaskPropertiesOutput {
	return o
}

func (o RdsExportTaskPropertiesOutput) ToRdsExportTaskPropertiesOutputWithContext(ctx context.Context) RdsExportTaskPropertiesOutput {
	return o
}

func (o RdsExportTaskPropertiesOutput) ToRdsExportTaskPropertiesPtrOutput() RdsExportTaskPropertiesPtrOutput {
	return o.ToRdsExportTaskPropertiesPtrOutputWithContext(context.Background())
}

func (o RdsExportTaskPropertiesOutput) ToRdsExportTaskPropertiesPtrOutputWithContext(ctx context.Context) RdsExportTaskPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdsExportTaskProperties) *RdsExportTaskProperties {
		return &v
	}).(RdsExportTaskPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RdsExportTaskPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsExportTaskPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsExportTaskPropertiesOutput) AwsProperties() AwsRdsExportTaskPropertiesPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *AwsRdsExportTaskProperties { return v.AwsProperties }).(AwsRdsExportTaskPropertiesPtrOutput)
}

// AWS Region
func (o RdsExportTaskPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsExportTaskPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsExportTaskPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsExportTaskPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsExportTaskPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RdsExportTaskPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RdsExportTaskPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsExportTaskProperties)(nil)).Elem()
}

func (o RdsExportTaskPropertiesPtrOutput) ToRdsExportTaskPropertiesPtrOutput() RdsExportTaskPropertiesPtrOutput {
	return o
}

func (o RdsExportTaskPropertiesPtrOutput) ToRdsExportTaskPropertiesPtrOutputWithContext(ctx context.Context) RdsExportTaskPropertiesPtrOutput {
	return o
}

func (o RdsExportTaskPropertiesPtrOutput) Elem() RdsExportTaskPropertiesOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) RdsExportTaskProperties {
		if v != nil {
			return *v
		}
		var ret RdsExportTaskProperties
		return ret
	}).(RdsExportTaskPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RdsExportTaskPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsExportTaskPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsExportTaskPropertiesPtrOutput) AwsProperties() AwsRdsExportTaskPropertiesPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *AwsRdsExportTaskProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRdsExportTaskPropertiesPtrOutput)
}

// AWS Region
func (o RdsExportTaskPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsExportTaskPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsExportTaskPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsExportTaskPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsExportTaskPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsExportTaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RdsExportTask
type RdsExportTaskPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRdsExportTaskPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of RdsExportTask
type RdsExportTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RdsExportTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsExportTaskPropertiesResponse)(nil)).Elem()
}

func (o RdsExportTaskPropertiesResponseOutput) ToRdsExportTaskPropertiesResponseOutput() RdsExportTaskPropertiesResponseOutput {
	return o
}

func (o RdsExportTaskPropertiesResponseOutput) ToRdsExportTaskPropertiesResponseOutputWithContext(ctx context.Context) RdsExportTaskPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RdsExportTaskPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RdsExportTaskPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RdsExportTaskPropertiesResponseOutput) AwsProperties() AwsRdsExportTaskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *AwsRdsExportTaskPropertiesResponse { return v.AwsProperties }).(AwsRdsExportTaskPropertiesResponsePtrOutput)
}

// AWS Region
func (o RdsExportTaskPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RdsExportTaskPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RdsExportTaskPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RdsExportTaskPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RdsExportTaskPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RdsExportTaskPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RdsExportTaskPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of ReadEndpoint
type ReadEndpoint struct {
	// The reader endpoint for the DB cluster.
	Address *string `pulumi:"address"`
}

// ReadEndpointInput is an input type that accepts ReadEndpointArgs and ReadEndpointOutput values.
// You can construct a concrete instance of `ReadEndpointInput` via:
//
//	ReadEndpointArgs{...}
type ReadEndpointInput interface {
	pulumi.Input

	ToReadEndpointOutput() ReadEndpointOutput
	ToReadEndpointOutputWithContext(context.Context) ReadEndpointOutput
}

// Definition of ReadEndpoint
type ReadEndpointArgs struct {
	// The reader endpoint for the DB cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadEndpoint)(nil)).Elem()
}

func (i ReadEndpointArgs) ToReadEndpointOutput() ReadEndpointOutput {
	return i.ToReadEndpointOutputWithContext(context.Background())
}

func (i ReadEndpointArgs) ToReadEndpointOutputWithContext(ctx context.Context) ReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadEndpointOutput)
}

func (i ReadEndpointArgs) ToReadEndpointPtrOutput() ReadEndpointPtrOutput {
	return i.ToReadEndpointPtrOutputWithContext(context.Background())
}

func (i ReadEndpointArgs) ToReadEndpointPtrOutputWithContext(ctx context.Context) ReadEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadEndpointOutput).ToReadEndpointPtrOutputWithContext(ctx)
}

// ReadEndpointPtrInput is an input type that accepts ReadEndpointArgs, ReadEndpointPtr and ReadEndpointPtrOutput values.
// You can construct a concrete instance of `ReadEndpointPtrInput` via:
//
//	        ReadEndpointArgs{...}
//
//	or:
//
//	        nil
type ReadEndpointPtrInput interface {
	pulumi.Input

	ToReadEndpointPtrOutput() ReadEndpointPtrOutput
	ToReadEndpointPtrOutputWithContext(context.Context) ReadEndpointPtrOutput
}

type readEndpointPtrType ReadEndpointArgs

func ReadEndpointPtr(v *ReadEndpointArgs) ReadEndpointPtrInput {
	return (*readEndpointPtrType)(v)
}

func (*readEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadEndpoint)(nil)).Elem()
}

func (i *readEndpointPtrType) ToReadEndpointPtrOutput() ReadEndpointPtrOutput {
	return i.ToReadEndpointPtrOutputWithContext(context.Background())
}

func (i *readEndpointPtrType) ToReadEndpointPtrOutputWithContext(ctx context.Context) ReadEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadEndpointPtrOutput)
}

// Definition of ReadEndpoint
type ReadEndpointOutput struct{ *pulumi.OutputState }

func (ReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadEndpoint)(nil)).Elem()
}

func (o ReadEndpointOutput) ToReadEndpointOutput() ReadEndpointOutput {
	return o
}

func (o ReadEndpointOutput) ToReadEndpointOutputWithContext(ctx context.Context) ReadEndpointOutput {
	return o
}

func (o ReadEndpointOutput) ToReadEndpointPtrOutput() ReadEndpointPtrOutput {
	return o.ToReadEndpointPtrOutputWithContext(context.Background())
}

func (o ReadEndpointOutput) ToReadEndpointPtrOutputWithContext(ctx context.Context) ReadEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReadEndpoint) *ReadEndpoint {
		return &v
	}).(ReadEndpointPtrOutput)
}

// The reader endpoint for the DB cluster.
func (o ReadEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ReadEndpointPtrOutput struct{ *pulumi.OutputState }

func (ReadEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadEndpoint)(nil)).Elem()
}

func (o ReadEndpointPtrOutput) ToReadEndpointPtrOutput() ReadEndpointPtrOutput {
	return o
}

func (o ReadEndpointPtrOutput) ToReadEndpointPtrOutputWithContext(ctx context.Context) ReadEndpointPtrOutput {
	return o
}

func (o ReadEndpointPtrOutput) Elem() ReadEndpointOutput {
	return o.ApplyT(func(v *ReadEndpoint) ReadEndpoint {
		if v != nil {
			return *v
		}
		var ret ReadEndpoint
		return ret
	}).(ReadEndpointOutput)
}

// The reader endpoint for the DB cluster.
func (o ReadEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Definition of ReadEndpoint
type ReadEndpointResponse struct {
	// The reader endpoint for the DB cluster.
	Address *string `pulumi:"address"`
}

// Definition of ReadEndpoint
type ReadEndpointResponseOutput struct{ *pulumi.OutputState }

func (ReadEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadEndpointResponse)(nil)).Elem()
}

func (o ReadEndpointResponseOutput) ToReadEndpointResponseOutput() ReadEndpointResponseOutput {
	return o
}

func (o ReadEndpointResponseOutput) ToReadEndpointResponseOutputWithContext(ctx context.Context) ReadEndpointResponseOutput {
	return o
}

// The reader endpoint for the DB cluster.
func (o ReadEndpointResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadEndpointResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ReadEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (ReadEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadEndpointResponse)(nil)).Elem()
}

func (o ReadEndpointResponsePtrOutput) ToReadEndpointResponsePtrOutput() ReadEndpointResponsePtrOutput {
	return o
}

func (o ReadEndpointResponsePtrOutput) ToReadEndpointResponsePtrOutputWithContext(ctx context.Context) ReadEndpointResponsePtrOutput {
	return o
}

func (o ReadEndpointResponsePtrOutput) Elem() ReadEndpointResponseOutput {
	return o.ApplyT(func(v *ReadEndpointResponse) ReadEndpointResponse {
		if v != nil {
			return *v
		}
		var ret ReadEndpointResponse
		return ret
	}).(ReadEndpointResponseOutput)
}

// The reader endpoint for the DB cluster.
func (o ReadEndpointResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Definition of RecorderStatusEnumValue
type RecorderStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// RecorderStatusEnumValueInput is an input type that accepts RecorderStatusEnumValueArgs and RecorderStatusEnumValueOutput values.
// You can construct a concrete instance of `RecorderStatusEnumValueInput` via:
//
//	RecorderStatusEnumValueArgs{...}
type RecorderStatusEnumValueInput interface {
	pulumi.Input

	ToRecorderStatusEnumValueOutput() RecorderStatusEnumValueOutput
	ToRecorderStatusEnumValueOutputWithContext(context.Context) RecorderStatusEnumValueOutput
}

// Definition of RecorderStatusEnumValue
type RecorderStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RecorderStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderStatusEnumValue)(nil)).Elem()
}

func (i RecorderStatusEnumValueArgs) ToRecorderStatusEnumValueOutput() RecorderStatusEnumValueOutput {
	return i.ToRecorderStatusEnumValueOutputWithContext(context.Background())
}

func (i RecorderStatusEnumValueArgs) ToRecorderStatusEnumValueOutputWithContext(ctx context.Context) RecorderStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderStatusEnumValueOutput)
}

func (i RecorderStatusEnumValueArgs) ToRecorderStatusEnumValuePtrOutput() RecorderStatusEnumValuePtrOutput {
	return i.ToRecorderStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i RecorderStatusEnumValueArgs) ToRecorderStatusEnumValuePtrOutputWithContext(ctx context.Context) RecorderStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderStatusEnumValueOutput).ToRecorderStatusEnumValuePtrOutputWithContext(ctx)
}

// RecorderStatusEnumValuePtrInput is an input type that accepts RecorderStatusEnumValueArgs, RecorderStatusEnumValuePtr and RecorderStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `RecorderStatusEnumValuePtrInput` via:
//
//	        RecorderStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type RecorderStatusEnumValuePtrInput interface {
	pulumi.Input

	ToRecorderStatusEnumValuePtrOutput() RecorderStatusEnumValuePtrOutput
	ToRecorderStatusEnumValuePtrOutputWithContext(context.Context) RecorderStatusEnumValuePtrOutput
}

type recorderStatusEnumValuePtrType RecorderStatusEnumValueArgs

func RecorderStatusEnumValuePtr(v *RecorderStatusEnumValueArgs) RecorderStatusEnumValuePtrInput {
	return (*recorderStatusEnumValuePtrType)(v)
}

func (*recorderStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderStatusEnumValue)(nil)).Elem()
}

func (i *recorderStatusEnumValuePtrType) ToRecorderStatusEnumValuePtrOutput() RecorderStatusEnumValuePtrOutput {
	return i.ToRecorderStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *recorderStatusEnumValuePtrType) ToRecorderStatusEnumValuePtrOutputWithContext(ctx context.Context) RecorderStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderStatusEnumValuePtrOutput)
}

// Definition of RecorderStatusEnumValue
type RecorderStatusEnumValueOutput struct{ *pulumi.OutputState }

func (RecorderStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderStatusEnumValue)(nil)).Elem()
}

func (o RecorderStatusEnumValueOutput) ToRecorderStatusEnumValueOutput() RecorderStatusEnumValueOutput {
	return o
}

func (o RecorderStatusEnumValueOutput) ToRecorderStatusEnumValueOutputWithContext(ctx context.Context) RecorderStatusEnumValueOutput {
	return o
}

func (o RecorderStatusEnumValueOutput) ToRecorderStatusEnumValuePtrOutput() RecorderStatusEnumValuePtrOutput {
	return o.ToRecorderStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o RecorderStatusEnumValueOutput) ToRecorderStatusEnumValuePtrOutputWithContext(ctx context.Context) RecorderStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecorderStatusEnumValue) *RecorderStatusEnumValue {
		return &v
	}).(RecorderStatusEnumValuePtrOutput)
}

// Property value
func (o RecorderStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecorderStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecorderStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (RecorderStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderStatusEnumValue)(nil)).Elem()
}

func (o RecorderStatusEnumValuePtrOutput) ToRecorderStatusEnumValuePtrOutput() RecorderStatusEnumValuePtrOutput {
	return o
}

func (o RecorderStatusEnumValuePtrOutput) ToRecorderStatusEnumValuePtrOutputWithContext(ctx context.Context) RecorderStatusEnumValuePtrOutput {
	return o
}

func (o RecorderStatusEnumValuePtrOutput) Elem() RecorderStatusEnumValueOutput {
	return o.ApplyT(func(v *RecorderStatusEnumValue) RecorderStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret RecorderStatusEnumValue
		return ret
	}).(RecorderStatusEnumValueOutput)
}

// Property value
func (o RecorderStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecorderStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RecorderStatusEnumValue
type RecorderStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of RecorderStatusEnumValue
type RecorderStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (RecorderStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderStatusEnumValueResponse)(nil)).Elem()
}

func (o RecorderStatusEnumValueResponseOutput) ToRecorderStatusEnumValueResponseOutput() RecorderStatusEnumValueResponseOutput {
	return o
}

func (o RecorderStatusEnumValueResponseOutput) ToRecorderStatusEnumValueResponseOutputWithContext(ctx context.Context) RecorderStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o RecorderStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecorderStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecorderStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (RecorderStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderStatusEnumValueResponse)(nil)).Elem()
}

func (o RecorderStatusEnumValueResponsePtrOutput) ToRecorderStatusEnumValueResponsePtrOutput() RecorderStatusEnumValueResponsePtrOutput {
	return o
}

func (o RecorderStatusEnumValueResponsePtrOutput) ToRecorderStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) RecorderStatusEnumValueResponsePtrOutput {
	return o
}

func (o RecorderStatusEnumValueResponsePtrOutput) Elem() RecorderStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *RecorderStatusEnumValueResponse) RecorderStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret RecorderStatusEnumValueResponse
		return ret
	}).(RecorderStatusEnumValueResponseOutput)
}

// Property value
func (o RecorderStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecorderStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RecordingFrequencyEnumValue
type RecordingFrequencyEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// RecordingFrequencyEnumValueInput is an input type that accepts RecordingFrequencyEnumValueArgs and RecordingFrequencyEnumValueOutput values.
// You can construct a concrete instance of `RecordingFrequencyEnumValueInput` via:
//
//	RecordingFrequencyEnumValueArgs{...}
type RecordingFrequencyEnumValueInput interface {
	pulumi.Input

	ToRecordingFrequencyEnumValueOutput() RecordingFrequencyEnumValueOutput
	ToRecordingFrequencyEnumValueOutputWithContext(context.Context) RecordingFrequencyEnumValueOutput
}

// Definition of RecordingFrequencyEnumValue
type RecordingFrequencyEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RecordingFrequencyEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingFrequencyEnumValue)(nil)).Elem()
}

func (i RecordingFrequencyEnumValueArgs) ToRecordingFrequencyEnumValueOutput() RecordingFrequencyEnumValueOutput {
	return i.ToRecordingFrequencyEnumValueOutputWithContext(context.Background())
}

func (i RecordingFrequencyEnumValueArgs) ToRecordingFrequencyEnumValueOutputWithContext(ctx context.Context) RecordingFrequencyEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingFrequencyEnumValueOutput)
}

func (i RecordingFrequencyEnumValueArgs) ToRecordingFrequencyEnumValuePtrOutput() RecordingFrequencyEnumValuePtrOutput {
	return i.ToRecordingFrequencyEnumValuePtrOutputWithContext(context.Background())
}

func (i RecordingFrequencyEnumValueArgs) ToRecordingFrequencyEnumValuePtrOutputWithContext(ctx context.Context) RecordingFrequencyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingFrequencyEnumValueOutput).ToRecordingFrequencyEnumValuePtrOutputWithContext(ctx)
}

// RecordingFrequencyEnumValuePtrInput is an input type that accepts RecordingFrequencyEnumValueArgs, RecordingFrequencyEnumValuePtr and RecordingFrequencyEnumValuePtrOutput values.
// You can construct a concrete instance of `RecordingFrequencyEnumValuePtrInput` via:
//
//	        RecordingFrequencyEnumValueArgs{...}
//
//	or:
//
//	        nil
type RecordingFrequencyEnumValuePtrInput interface {
	pulumi.Input

	ToRecordingFrequencyEnumValuePtrOutput() RecordingFrequencyEnumValuePtrOutput
	ToRecordingFrequencyEnumValuePtrOutputWithContext(context.Context) RecordingFrequencyEnumValuePtrOutput
}

type recordingFrequencyEnumValuePtrType RecordingFrequencyEnumValueArgs

func RecordingFrequencyEnumValuePtr(v *RecordingFrequencyEnumValueArgs) RecordingFrequencyEnumValuePtrInput {
	return (*recordingFrequencyEnumValuePtrType)(v)
}

func (*recordingFrequencyEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingFrequencyEnumValue)(nil)).Elem()
}

func (i *recordingFrequencyEnumValuePtrType) ToRecordingFrequencyEnumValuePtrOutput() RecordingFrequencyEnumValuePtrOutput {
	return i.ToRecordingFrequencyEnumValuePtrOutputWithContext(context.Background())
}

func (i *recordingFrequencyEnumValuePtrType) ToRecordingFrequencyEnumValuePtrOutputWithContext(ctx context.Context) RecordingFrequencyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingFrequencyEnumValuePtrOutput)
}

// Definition of RecordingFrequencyEnumValue
type RecordingFrequencyEnumValueOutput struct{ *pulumi.OutputState }

func (RecordingFrequencyEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingFrequencyEnumValue)(nil)).Elem()
}

func (o RecordingFrequencyEnumValueOutput) ToRecordingFrequencyEnumValueOutput() RecordingFrequencyEnumValueOutput {
	return o
}

func (o RecordingFrequencyEnumValueOutput) ToRecordingFrequencyEnumValueOutputWithContext(ctx context.Context) RecordingFrequencyEnumValueOutput {
	return o
}

func (o RecordingFrequencyEnumValueOutput) ToRecordingFrequencyEnumValuePtrOutput() RecordingFrequencyEnumValuePtrOutput {
	return o.ToRecordingFrequencyEnumValuePtrOutputWithContext(context.Background())
}

func (o RecordingFrequencyEnumValueOutput) ToRecordingFrequencyEnumValuePtrOutputWithContext(ctx context.Context) RecordingFrequencyEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingFrequencyEnumValue) *RecordingFrequencyEnumValue {
		return &v
	}).(RecordingFrequencyEnumValuePtrOutput)
}

// Property value
func (o RecordingFrequencyEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordingFrequencyEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecordingFrequencyEnumValuePtrOutput struct{ *pulumi.OutputState }

func (RecordingFrequencyEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingFrequencyEnumValue)(nil)).Elem()
}

func (o RecordingFrequencyEnumValuePtrOutput) ToRecordingFrequencyEnumValuePtrOutput() RecordingFrequencyEnumValuePtrOutput {
	return o
}

func (o RecordingFrequencyEnumValuePtrOutput) ToRecordingFrequencyEnumValuePtrOutputWithContext(ctx context.Context) RecordingFrequencyEnumValuePtrOutput {
	return o
}

func (o RecordingFrequencyEnumValuePtrOutput) Elem() RecordingFrequencyEnumValueOutput {
	return o.ApplyT(func(v *RecordingFrequencyEnumValue) RecordingFrequencyEnumValue {
		if v != nil {
			return *v
		}
		var ret RecordingFrequencyEnumValue
		return ret
	}).(RecordingFrequencyEnumValueOutput)
}

// Property value
func (o RecordingFrequencyEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordingFrequencyEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RecordingFrequencyEnumValue
type RecordingFrequencyEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of RecordingFrequencyEnumValue
type RecordingFrequencyEnumValueResponseOutput struct{ *pulumi.OutputState }

func (RecordingFrequencyEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingFrequencyEnumValueResponse)(nil)).Elem()
}

func (o RecordingFrequencyEnumValueResponseOutput) ToRecordingFrequencyEnumValueResponseOutput() RecordingFrequencyEnumValueResponseOutput {
	return o
}

func (o RecordingFrequencyEnumValueResponseOutput) ToRecordingFrequencyEnumValueResponseOutputWithContext(ctx context.Context) RecordingFrequencyEnumValueResponseOutput {
	return o
}

// Property value
func (o RecordingFrequencyEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordingFrequencyEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecordingFrequencyEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (RecordingFrequencyEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingFrequencyEnumValueResponse)(nil)).Elem()
}

func (o RecordingFrequencyEnumValueResponsePtrOutput) ToRecordingFrequencyEnumValueResponsePtrOutput() RecordingFrequencyEnumValueResponsePtrOutput {
	return o
}

func (o RecordingFrequencyEnumValueResponsePtrOutput) ToRecordingFrequencyEnumValueResponsePtrOutputWithContext(ctx context.Context) RecordingFrequencyEnumValueResponsePtrOutput {
	return o
}

func (o RecordingFrequencyEnumValueResponsePtrOutput) Elem() RecordingFrequencyEnumValueResponseOutput {
	return o.ApplyT(func(v *RecordingFrequencyEnumValueResponse) RecordingFrequencyEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret RecordingFrequencyEnumValueResponse
		return ret
	}).(RecordingFrequencyEnumValueResponseOutput)
}

// Property value
func (o RecordingFrequencyEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordingFrequencyEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RecordingGroup
type RecordingGroup struct {
	// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
	AllSupported *bool `pulumi:"allSupported"`
	// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
	ExclusionByResourceTypes *ExclusionByResourceTypes `pulumi:"exclusionByResourceTypes"`
	// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
	IncludeGlobalResourceTypes *bool `pulumi:"includeGlobalResourceTypes"`
	// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
	RecordingStrategy *RecordingStrategy `pulumi:"recordingStrategy"`
	// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// RecordingGroupInput is an input type that accepts RecordingGroupArgs and RecordingGroupOutput values.
// You can construct a concrete instance of `RecordingGroupInput` via:
//
//	RecordingGroupArgs{...}
type RecordingGroupInput interface {
	pulumi.Input

	ToRecordingGroupOutput() RecordingGroupOutput
	ToRecordingGroupOutputWithContext(context.Context) RecordingGroupOutput
}

// Definition of RecordingGroup
type RecordingGroupArgs struct {
	// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
	AllSupported pulumi.BoolPtrInput `pulumi:"allSupported"`
	// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
	ExclusionByResourceTypes ExclusionByResourceTypesPtrInput `pulumi:"exclusionByResourceTypes"`
	// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
	IncludeGlobalResourceTypes pulumi.BoolPtrInput `pulumi:"includeGlobalResourceTypes"`
	// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
	RecordingStrategy RecordingStrategyPtrInput `pulumi:"recordingStrategy"`
	// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (RecordingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingGroup)(nil)).Elem()
}

func (i RecordingGroupArgs) ToRecordingGroupOutput() RecordingGroupOutput {
	return i.ToRecordingGroupOutputWithContext(context.Background())
}

func (i RecordingGroupArgs) ToRecordingGroupOutputWithContext(ctx context.Context) RecordingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingGroupOutput)
}

func (i RecordingGroupArgs) ToRecordingGroupPtrOutput() RecordingGroupPtrOutput {
	return i.ToRecordingGroupPtrOutputWithContext(context.Background())
}

func (i RecordingGroupArgs) ToRecordingGroupPtrOutputWithContext(ctx context.Context) RecordingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingGroupOutput).ToRecordingGroupPtrOutputWithContext(ctx)
}

// RecordingGroupPtrInput is an input type that accepts RecordingGroupArgs, RecordingGroupPtr and RecordingGroupPtrOutput values.
// You can construct a concrete instance of `RecordingGroupPtrInput` via:
//
//	        RecordingGroupArgs{...}
//
//	or:
//
//	        nil
type RecordingGroupPtrInput interface {
	pulumi.Input

	ToRecordingGroupPtrOutput() RecordingGroupPtrOutput
	ToRecordingGroupPtrOutputWithContext(context.Context) RecordingGroupPtrOutput
}

type recordingGroupPtrType RecordingGroupArgs

func RecordingGroupPtr(v *RecordingGroupArgs) RecordingGroupPtrInput {
	return (*recordingGroupPtrType)(v)
}

func (*recordingGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingGroup)(nil)).Elem()
}

func (i *recordingGroupPtrType) ToRecordingGroupPtrOutput() RecordingGroupPtrOutput {
	return i.ToRecordingGroupPtrOutputWithContext(context.Background())
}

func (i *recordingGroupPtrType) ToRecordingGroupPtrOutputWithContext(ctx context.Context) RecordingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingGroupPtrOutput)
}

// Definition of RecordingGroup
type RecordingGroupOutput struct{ *pulumi.OutputState }

func (RecordingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingGroup)(nil)).Elem()
}

func (o RecordingGroupOutput) ToRecordingGroupOutput() RecordingGroupOutput {
	return o
}

func (o RecordingGroupOutput) ToRecordingGroupOutputWithContext(ctx context.Context) RecordingGroupOutput {
	return o
}

func (o RecordingGroupOutput) ToRecordingGroupPtrOutput() RecordingGroupPtrOutput {
	return o.ToRecordingGroupPtrOutputWithContext(context.Background())
}

func (o RecordingGroupOutput) ToRecordingGroupPtrOutputWithContext(ctx context.Context) RecordingGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingGroup) *RecordingGroup {
		return &v
	}).(RecordingGroupPtrOutput)
}

// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordingGroup) *bool { return v.AllSupported }).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
func (o RecordingGroupOutput) ExclusionByResourceTypes() ExclusionByResourceTypesPtrOutput {
	return o.ApplyT(func(v RecordingGroup) *ExclusionByResourceTypes { return v.ExclusionByResourceTypes }).(ExclusionByResourceTypesPtrOutput)
}

// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
func (o RecordingGroupOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordingGroup) *bool { return v.IncludeGlobalResourceTypes }).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingGroupOutput) RecordingStrategy() RecordingStrategyPtrOutput {
	return o.ApplyT(func(v RecordingGroup) *RecordingStrategy { return v.RecordingStrategy }).(RecordingStrategyPtrOutput)
}

// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordingGroup) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RecordingGroupPtrOutput struct{ *pulumi.OutputState }

func (RecordingGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingGroup)(nil)).Elem()
}

func (o RecordingGroupPtrOutput) ToRecordingGroupPtrOutput() RecordingGroupPtrOutput {
	return o
}

func (o RecordingGroupPtrOutput) ToRecordingGroupPtrOutputWithContext(ctx context.Context) RecordingGroupPtrOutput {
	return o
}

func (o RecordingGroupPtrOutput) Elem() RecordingGroupOutput {
	return o.ApplyT(func(v *RecordingGroup) RecordingGroup {
		if v != nil {
			return *v
		}
		var ret RecordingGroup
		return ret
	}).(RecordingGroupOutput)
}

// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupPtrOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecordingGroup) *bool {
		if v == nil {
			return nil
		}
		return v.AllSupported
	}).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
func (o RecordingGroupPtrOutput) ExclusionByResourceTypes() ExclusionByResourceTypesPtrOutput {
	return o.ApplyT(func(v *RecordingGroup) *ExclusionByResourceTypes {
		if v == nil {
			return nil
		}
		return v.ExclusionByResourceTypes
	}).(ExclusionByResourceTypesPtrOutput)
}

// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
func (o RecordingGroupPtrOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecordingGroup) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeGlobalResourceTypes
	}).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingGroupPtrOutput) RecordingStrategy() RecordingStrategyPtrOutput {
	return o.ApplyT(func(v *RecordingGroup) *RecordingStrategy {
		if v == nil {
			return nil
		}
		return v.RecordingStrategy
	}).(RecordingStrategyPtrOutput)
}

// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecordingGroup) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypes
	}).(pulumi.StringArrayOutput)
}

// Definition of RecordingGroup
type RecordingGroupResponse struct {
	// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
	AllSupported *bool `pulumi:"allSupported"`
	// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
	ExclusionByResourceTypes *ExclusionByResourceTypesResponse `pulumi:"exclusionByResourceTypes"`
	// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
	IncludeGlobalResourceTypes *bool `pulumi:"includeGlobalResourceTypes"`
	// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
	RecordingStrategy *RecordingStrategyResponse `pulumi:"recordingStrategy"`
	// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// Definition of RecordingGroup
type RecordingGroupResponseOutput struct{ *pulumi.OutputState }

func (RecordingGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingGroupResponse)(nil)).Elem()
}

func (o RecordingGroupResponseOutput) ToRecordingGroupResponseOutput() RecordingGroupResponseOutput {
	return o
}

func (o RecordingGroupResponseOutput) ToRecordingGroupResponseOutputWithContext(ctx context.Context) RecordingGroupResponseOutput {
	return o
}

// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupResponseOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordingGroupResponse) *bool { return v.AllSupported }).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
func (o RecordingGroupResponseOutput) ExclusionByResourceTypes() ExclusionByResourceTypesResponsePtrOutput {
	return o.ApplyT(func(v RecordingGroupResponse) *ExclusionByResourceTypesResponse { return v.ExclusionByResourceTypes }).(ExclusionByResourceTypesResponsePtrOutput)
}

// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
func (o RecordingGroupResponseOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordingGroupResponse) *bool { return v.IncludeGlobalResourceTypes }).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingGroupResponseOutput) RecordingStrategy() RecordingStrategyResponsePtrOutput {
	return o.ApplyT(func(v RecordingGroupResponse) *RecordingStrategyResponse { return v.RecordingStrategy }).(RecordingStrategyResponsePtrOutput)
}

// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupResponseOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordingGroupResponse) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RecordingGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (RecordingGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingGroupResponse)(nil)).Elem()
}

func (o RecordingGroupResponsePtrOutput) ToRecordingGroupResponsePtrOutput() RecordingGroupResponsePtrOutput {
	return o
}

func (o RecordingGroupResponsePtrOutput) ToRecordingGroupResponsePtrOutputWithContext(ctx context.Context) RecordingGroupResponsePtrOutput {
	return o
}

func (o RecordingGroupResponsePtrOutput) Elem() RecordingGroupResponseOutput {
	return o.ApplyT(func(v *RecordingGroupResponse) RecordingGroupResponse {
		if v != nil {
			return *v
		}
		var ret RecordingGroupResponse
		return ret
	}).(RecordingGroupResponseOutput)
}

// <p>Specifies whether Config records configuration changes for all supported resource types, excluding the global IAM resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new resource type, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> <note> <p> <b>Region availability</b> </p> <p>Check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if a resource type is supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupResponsePtrOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecordingGroupResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllSupported
	}).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <note> <p> <b>Required fields</b> </p> <p>To use this option, you must set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p> </note>
func (o RecordingGroupResponsePtrOutput) ExclusionByResourceTypes() ExclusionByResourceTypesResponsePtrOutput {
	return o.ApplyT(func(v *RecordingGroupResponse) *ExclusionByResourceTypesResponse {
		if v == nil {
			return nil
		}
		return v.ExclusionByResourceTypes
	}).(ExclusionByResourceTypesResponsePtrOutput)
}

// <p>This option is a bundle which only applies to the global IAM resource types: IAM users, groups, roles, and customer managed policies. These global IAM resource types can only be recorded by Config in Regions where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> <important> <p> <b>Aurora global clusters are recorded in all enabled Regions</b> </p> <p>The <code>AWS::RDS::GlobalCluster</code> resource type will be recorded in all supported Config Regions where the configuration recorder is enabled, even if <code>includeGlobalResourceTypes</code> is set<code>false</code>. The <code>includeGlobalResourceTypes</code> option is a bundle which only applies to IAM users, groups, roles, and customer managed policies. </p> <p>If you do not want to record <code>AWS::RDS::GlobalCluster</code> in all enabled Regions, use one of the following recording strategies:</p> <ol> <li> <p> <b>Record all current and future resource types with exclusions</b> (<code>EXCLUSION_BY_RESOURCE_TYPES</code>), or</p> </li> <li> <p> <b>Record specific resource types</b> (<code>INCLUSION_BY_RESOURCE_TYPES</code>).</p> </li> </ol> <p>For more information, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html#select-resources-all'>Selecting Which Resources are Recorded</a> in the <i>Config developer guide</i>.</p> </important> <important> <p> <b>includeGlobalResourceTypes and the exclusion recording strategy</b> </p> <p>The <code>includeGlobalResourceTypes</code> field has no impact on the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy. This means that the global IAM resource types (IAM users, groups, roles, and customer managed policies) will not be automatically added as exclusions for <code>exclusionByResourceTypes</code> when <code>includeGlobalResourceTypes</code> is set to <code>false</code>.</p> <p>The <code>includeGlobalResourceTypes</code> field should only be used to modify the <code>AllSupported</code> field, as the default for the <code>AllSupported</code> field is to record configuration changes for all supported resource types excluding the global IAM resource types. To include the global IAM resource types when <code>AllSupported</code> is set to <code>true</code>, make sure to set <code>includeGlobalResourceTypes</code> to <code>true</code>.</p> <p>To exclude the global IAM resource types for the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, you need to manually add them to the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </important> <note> <p> <b>Required and optional fields</b> </p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you set this field to <code>false</code> but list global IAM resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to the global IAM resource types (IAM users, groups, roles, and customer managed policies), make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>
func (o RecordingGroupResponsePtrOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecordingGroupResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeGlobalResourceTypes
	}).(pulumi.BoolPtrOutput)
}

// <p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resources types and the resource exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingGroupResponsePtrOutput) RecordingStrategy() RecordingStrategyResponsePtrOutput {
	return o.ApplyT(func(v *RecordingGroupResponse) *RecordingStrategyResponse {
		if v == nil {
			return nil
		}
		return v.RecordingStrategy
	}).(RecordingStrategyResponsePtrOutput)
}

// <p>A comma-separated list that specifies which resource types Config records.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Required and optional fields</b> </p> <p>Optionally, you can set the <code>useOnly</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html'>RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> </note> <note> <p> <b>Region availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href='https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html'>Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>
func (o RecordingGroupResponsePtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecordingGroupResponse) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypes
	}).(pulumi.StringArrayOutput)
}

// Definition of RecordingMode
type RecordingMode struct {
	// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
	RecordingFrequency *RecordingFrequencyEnumValue `pulumi:"recordingFrequency"`
	// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
	RecordingModeOverrides []RecordingModeOverride `pulumi:"recordingModeOverrides"`
}

// RecordingModeInput is an input type that accepts RecordingModeArgs and RecordingModeOutput values.
// You can construct a concrete instance of `RecordingModeInput` via:
//
//	RecordingModeArgs{...}
type RecordingModeInput interface {
	pulumi.Input

	ToRecordingModeOutput() RecordingModeOutput
	ToRecordingModeOutputWithContext(context.Context) RecordingModeOutput
}

// Definition of RecordingMode
type RecordingModeArgs struct {
	// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
	RecordingFrequency RecordingFrequencyEnumValuePtrInput `pulumi:"recordingFrequency"`
	// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
	RecordingModeOverrides RecordingModeOverrideArrayInput `pulumi:"recordingModeOverrides"`
}

func (RecordingModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingMode)(nil)).Elem()
}

func (i RecordingModeArgs) ToRecordingModeOutput() RecordingModeOutput {
	return i.ToRecordingModeOutputWithContext(context.Background())
}

func (i RecordingModeArgs) ToRecordingModeOutputWithContext(ctx context.Context) RecordingModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingModeOutput)
}

func (i RecordingModeArgs) ToRecordingModePtrOutput() RecordingModePtrOutput {
	return i.ToRecordingModePtrOutputWithContext(context.Background())
}

func (i RecordingModeArgs) ToRecordingModePtrOutputWithContext(ctx context.Context) RecordingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingModeOutput).ToRecordingModePtrOutputWithContext(ctx)
}

// RecordingModePtrInput is an input type that accepts RecordingModeArgs, RecordingModePtr and RecordingModePtrOutput values.
// You can construct a concrete instance of `RecordingModePtrInput` via:
//
//	        RecordingModeArgs{...}
//
//	or:
//
//	        nil
type RecordingModePtrInput interface {
	pulumi.Input

	ToRecordingModePtrOutput() RecordingModePtrOutput
	ToRecordingModePtrOutputWithContext(context.Context) RecordingModePtrOutput
}

type recordingModePtrType RecordingModeArgs

func RecordingModePtr(v *RecordingModeArgs) RecordingModePtrInput {
	return (*recordingModePtrType)(v)
}

func (*recordingModePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingMode)(nil)).Elem()
}

func (i *recordingModePtrType) ToRecordingModePtrOutput() RecordingModePtrOutput {
	return i.ToRecordingModePtrOutputWithContext(context.Background())
}

func (i *recordingModePtrType) ToRecordingModePtrOutputWithContext(ctx context.Context) RecordingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingModePtrOutput)
}

// Definition of RecordingMode
type RecordingModeOutput struct{ *pulumi.OutputState }

func (RecordingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingMode)(nil)).Elem()
}

func (o RecordingModeOutput) ToRecordingModeOutput() RecordingModeOutput {
	return o
}

func (o RecordingModeOutput) ToRecordingModeOutputWithContext(ctx context.Context) RecordingModeOutput {
	return o
}

func (o RecordingModeOutput) ToRecordingModePtrOutput() RecordingModePtrOutput {
	return o.ToRecordingModePtrOutputWithContext(context.Background())
}

func (o RecordingModeOutput) ToRecordingModePtrOutputWithContext(ctx context.Context) RecordingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingMode) *RecordingMode {
		return &v
	}).(RecordingModePtrOutput)
}

// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
func (o RecordingModeOutput) RecordingFrequency() RecordingFrequencyEnumValuePtrOutput {
	return o.ApplyT(func(v RecordingMode) *RecordingFrequencyEnumValue { return v.RecordingFrequency }).(RecordingFrequencyEnumValuePtrOutput)
}

// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
func (o RecordingModeOutput) RecordingModeOverrides() RecordingModeOverrideArrayOutput {
	return o.ApplyT(func(v RecordingMode) []RecordingModeOverride { return v.RecordingModeOverrides }).(RecordingModeOverrideArrayOutput)
}

type RecordingModePtrOutput struct{ *pulumi.OutputState }

func (RecordingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingMode)(nil)).Elem()
}

func (o RecordingModePtrOutput) ToRecordingModePtrOutput() RecordingModePtrOutput {
	return o
}

func (o RecordingModePtrOutput) ToRecordingModePtrOutputWithContext(ctx context.Context) RecordingModePtrOutput {
	return o
}

func (o RecordingModePtrOutput) Elem() RecordingModeOutput {
	return o.ApplyT(func(v *RecordingMode) RecordingMode {
		if v != nil {
			return *v
		}
		var ret RecordingMode
		return ret
	}).(RecordingModeOutput)
}

// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
func (o RecordingModePtrOutput) RecordingFrequency() RecordingFrequencyEnumValuePtrOutput {
	return o.ApplyT(func(v *RecordingMode) *RecordingFrequencyEnumValue {
		if v == nil {
			return nil
		}
		return v.RecordingFrequency
	}).(RecordingFrequencyEnumValuePtrOutput)
}

// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
func (o RecordingModePtrOutput) RecordingModeOverrides() RecordingModeOverrideArrayOutput {
	return o.ApplyT(func(v *RecordingMode) []RecordingModeOverride {
		if v == nil {
			return nil
		}
		return v.RecordingModeOverrides
	}).(RecordingModeOverrideArrayOutput)
}

// Definition of RecordingModeOverride
type RecordingModeOverride struct {
	// <p>A description that you provide for the override.</p>
	Description *string `pulumi:"description"`
	// <p>The recording frequency that will be applied to all the resource types specified in the override.</p> <ul> <li> <p>Continuous recording allows you to record configuration changes continuously whenever a change occurs.</p> </li> <li> <p>Daily recording allows you to receive a configuration item (CI) representing the most recent state of your resources over the last 24-hour period, only if it’s different from the previous CI recorded. </p> </li> </ul> <note> <p>Firewall Manager depends on continuous recording to monitor your resources. If you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.</p> </note>
	RecordingFrequency *RecordingFrequencyEnumValue `pulumi:"recordingFrequency"`
	// <p>A comma-separated list that specifies which resource types Config includes in the override.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> </important>
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// RecordingModeOverrideInput is an input type that accepts RecordingModeOverrideArgs and RecordingModeOverrideOutput values.
// You can construct a concrete instance of `RecordingModeOverrideInput` via:
//
//	RecordingModeOverrideArgs{...}
type RecordingModeOverrideInput interface {
	pulumi.Input

	ToRecordingModeOverrideOutput() RecordingModeOverrideOutput
	ToRecordingModeOverrideOutputWithContext(context.Context) RecordingModeOverrideOutput
}

// Definition of RecordingModeOverride
type RecordingModeOverrideArgs struct {
	// <p>A description that you provide for the override.</p>
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <p>The recording frequency that will be applied to all the resource types specified in the override.</p> <ul> <li> <p>Continuous recording allows you to record configuration changes continuously whenever a change occurs.</p> </li> <li> <p>Daily recording allows you to receive a configuration item (CI) representing the most recent state of your resources over the last 24-hour period, only if it’s different from the previous CI recorded. </p> </li> </ul> <note> <p>Firewall Manager depends on continuous recording to monitor your resources. If you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.</p> </note>
	RecordingFrequency RecordingFrequencyEnumValuePtrInput `pulumi:"recordingFrequency"`
	// <p>A comma-separated list that specifies which resource types Config includes in the override.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> </important>
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (RecordingModeOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingModeOverride)(nil)).Elem()
}

func (i RecordingModeOverrideArgs) ToRecordingModeOverrideOutput() RecordingModeOverrideOutput {
	return i.ToRecordingModeOverrideOutputWithContext(context.Background())
}

func (i RecordingModeOverrideArgs) ToRecordingModeOverrideOutputWithContext(ctx context.Context) RecordingModeOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingModeOverrideOutput)
}

// RecordingModeOverrideArrayInput is an input type that accepts RecordingModeOverrideArray and RecordingModeOverrideArrayOutput values.
// You can construct a concrete instance of `RecordingModeOverrideArrayInput` via:
//
//	RecordingModeOverrideArray{ RecordingModeOverrideArgs{...} }
type RecordingModeOverrideArrayInput interface {
	pulumi.Input

	ToRecordingModeOverrideArrayOutput() RecordingModeOverrideArrayOutput
	ToRecordingModeOverrideArrayOutputWithContext(context.Context) RecordingModeOverrideArrayOutput
}

type RecordingModeOverrideArray []RecordingModeOverrideInput

func (RecordingModeOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingModeOverride)(nil)).Elem()
}

func (i RecordingModeOverrideArray) ToRecordingModeOverrideArrayOutput() RecordingModeOverrideArrayOutput {
	return i.ToRecordingModeOverrideArrayOutputWithContext(context.Background())
}

func (i RecordingModeOverrideArray) ToRecordingModeOverrideArrayOutputWithContext(ctx context.Context) RecordingModeOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingModeOverrideArrayOutput)
}

// Definition of RecordingModeOverride
type RecordingModeOverrideOutput struct{ *pulumi.OutputState }

func (RecordingModeOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingModeOverride)(nil)).Elem()
}

func (o RecordingModeOverrideOutput) ToRecordingModeOverrideOutput() RecordingModeOverrideOutput {
	return o
}

func (o RecordingModeOverrideOutput) ToRecordingModeOverrideOutputWithContext(ctx context.Context) RecordingModeOverrideOutput {
	return o
}

// <p>A description that you provide for the override.</p>
func (o RecordingModeOverrideOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordingModeOverride) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The recording frequency that will be applied to all the resource types specified in the override.</p> <ul> <li> <p>Continuous recording allows you to record configuration changes continuously whenever a change occurs.</p> </li> <li> <p>Daily recording allows you to receive a configuration item (CI) representing the most recent state of your resources over the last 24-hour period, only if it’s different from the previous CI recorded. </p> </li> </ul> <note> <p>Firewall Manager depends on continuous recording to monitor your resources. If you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.</p> </note>
func (o RecordingModeOverrideOutput) RecordingFrequency() RecordingFrequencyEnumValuePtrOutput {
	return o.ApplyT(func(v RecordingModeOverride) *RecordingFrequencyEnumValue { return v.RecordingFrequency }).(RecordingFrequencyEnumValuePtrOutput)
}

// <p>A comma-separated list that specifies which resource types Config includes in the override.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> </important>
func (o RecordingModeOverrideOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordingModeOverride) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RecordingModeOverrideArrayOutput struct{ *pulumi.OutputState }

func (RecordingModeOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingModeOverride)(nil)).Elem()
}

func (o RecordingModeOverrideArrayOutput) ToRecordingModeOverrideArrayOutput() RecordingModeOverrideArrayOutput {
	return o
}

func (o RecordingModeOverrideArrayOutput) ToRecordingModeOverrideArrayOutputWithContext(ctx context.Context) RecordingModeOverrideArrayOutput {
	return o
}

func (o RecordingModeOverrideArrayOutput) Index(i pulumi.IntInput) RecordingModeOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordingModeOverride {
		return vs[0].([]RecordingModeOverride)[vs[1].(int)]
	}).(RecordingModeOverrideOutput)
}

// Definition of RecordingModeOverride
type RecordingModeOverrideResponse struct {
	// <p>A description that you provide for the override.</p>
	Description *string `pulumi:"description"`
	// <p>The recording frequency that will be applied to all the resource types specified in the override.</p> <ul> <li> <p>Continuous recording allows you to record configuration changes continuously whenever a change occurs.</p> </li> <li> <p>Daily recording allows you to receive a configuration item (CI) representing the most recent state of your resources over the last 24-hour period, only if it’s different from the previous CI recorded. </p> </li> </ul> <note> <p>Firewall Manager depends on continuous recording to monitor your resources. If you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.</p> </note>
	RecordingFrequency *RecordingFrequencyEnumValueResponse `pulumi:"recordingFrequency"`
	// <p>A comma-separated list that specifies which resource types Config includes in the override.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> </important>
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// Definition of RecordingModeOverride
type RecordingModeOverrideResponseOutput struct{ *pulumi.OutputState }

func (RecordingModeOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingModeOverrideResponse)(nil)).Elem()
}

func (o RecordingModeOverrideResponseOutput) ToRecordingModeOverrideResponseOutput() RecordingModeOverrideResponseOutput {
	return o
}

func (o RecordingModeOverrideResponseOutput) ToRecordingModeOverrideResponseOutputWithContext(ctx context.Context) RecordingModeOverrideResponseOutput {
	return o
}

// <p>A description that you provide for the override.</p>
func (o RecordingModeOverrideResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordingModeOverrideResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The recording frequency that will be applied to all the resource types specified in the override.</p> <ul> <li> <p>Continuous recording allows you to record configuration changes continuously whenever a change occurs.</p> </li> <li> <p>Daily recording allows you to receive a configuration item (CI) representing the most recent state of your resources over the last 24-hour period, only if it’s different from the previous CI recorded. </p> </li> </ul> <note> <p>Firewall Manager depends on continuous recording to monitor your resources. If you are using Firewall Manager, it is recommended that you set the recording frequency to Continuous.</p> </note>
func (o RecordingModeOverrideResponseOutput) RecordingFrequency() RecordingFrequencyEnumValueResponsePtrOutput {
	return o.ApplyT(func(v RecordingModeOverrideResponse) *RecordingFrequencyEnumValueResponse {
		return v.RecordingFrequency
	}).(RecordingFrequencyEnumValueResponsePtrOutput)
}

// <p>A comma-separated list that specifies which resource types Config includes in the override.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> </important>
func (o RecordingModeOverrideResponseOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordingModeOverrideResponse) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RecordingModeOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (RecordingModeOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingModeOverrideResponse)(nil)).Elem()
}

func (o RecordingModeOverrideResponseArrayOutput) ToRecordingModeOverrideResponseArrayOutput() RecordingModeOverrideResponseArrayOutput {
	return o
}

func (o RecordingModeOverrideResponseArrayOutput) ToRecordingModeOverrideResponseArrayOutputWithContext(ctx context.Context) RecordingModeOverrideResponseArrayOutput {
	return o
}

func (o RecordingModeOverrideResponseArrayOutput) Index(i pulumi.IntInput) RecordingModeOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordingModeOverrideResponse {
		return vs[0].([]RecordingModeOverrideResponse)[vs[1].(int)]
	}).(RecordingModeOverrideResponseOutput)
}

// Definition of RecordingMode
type RecordingModeResponse struct {
	// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
	RecordingFrequency *RecordingFrequencyEnumValueResponse `pulumi:"recordingFrequency"`
	// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
	RecordingModeOverrides []RecordingModeOverrideResponse `pulumi:"recordingModeOverrides"`
}

// Definition of RecordingMode
type RecordingModeResponseOutput struct{ *pulumi.OutputState }

func (RecordingModeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingModeResponse)(nil)).Elem()
}

func (o RecordingModeResponseOutput) ToRecordingModeResponseOutput() RecordingModeResponseOutput {
	return o
}

func (o RecordingModeResponseOutput) ToRecordingModeResponseOutputWithContext(ctx context.Context) RecordingModeResponseOutput {
	return o
}

// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
func (o RecordingModeResponseOutput) RecordingFrequency() RecordingFrequencyEnumValueResponsePtrOutput {
	return o.ApplyT(func(v RecordingModeResponse) *RecordingFrequencyEnumValueResponse { return v.RecordingFrequency }).(RecordingFrequencyEnumValueResponsePtrOutput)
}

// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
func (o RecordingModeResponseOutput) RecordingModeOverrides() RecordingModeOverrideResponseArrayOutput {
	return o.ApplyT(func(v RecordingModeResponse) []RecordingModeOverrideResponse { return v.RecordingModeOverrides }).(RecordingModeOverrideResponseArrayOutput)
}

type RecordingModeResponsePtrOutput struct{ *pulumi.OutputState }

func (RecordingModeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingModeResponse)(nil)).Elem()
}

func (o RecordingModeResponsePtrOutput) ToRecordingModeResponsePtrOutput() RecordingModeResponsePtrOutput {
	return o
}

func (o RecordingModeResponsePtrOutput) ToRecordingModeResponsePtrOutputWithContext(ctx context.Context) RecordingModeResponsePtrOutput {
	return o
}

func (o RecordingModeResponsePtrOutput) Elem() RecordingModeResponseOutput {
	return o.ApplyT(func(v *RecordingModeResponse) RecordingModeResponse {
		if v != nil {
			return *v
		}
		var ret RecordingModeResponse
		return ret
	}).(RecordingModeResponseOutput)
}

// <p>The default recording frequency that Config uses to record configuration changes.</p> <important> <p>Daily recording is not supported for the following resource types:</p> <ul> <li> <p> <code>AWS::Config::ResourceCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConformancePackCompliance</code> </p> </li> <li> <p> <code>AWS::Config::ConfigurationRecorder</code> </p> </li> </ul> <p>For the <b>allSupported</b> (<code>ALL_SUPPORTED_RESOURCE_TYPES</code>) recording strategy, these resource types will be set to Continuous recording.</p> </important>
func (o RecordingModeResponsePtrOutput) RecordingFrequency() RecordingFrequencyEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *RecordingModeResponse) *RecordingFrequencyEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.RecordingFrequency
	}).(RecordingFrequencyEnumValueResponsePtrOutput)
}

// <p>An array of <code>recordingModeOverride</code> objects for you to specify your overrides for the recording mode. The <code>recordingModeOverride</code> object in the <code>recordingModeOverrides</code> array consists of three fields: a <code>description</code>, the new <code>recordingFrequency</code>, and an array of <code>resourceTypes</code> to override.</p>
func (o RecordingModeResponsePtrOutput) RecordingModeOverrides() RecordingModeOverrideResponseArrayOutput {
	return o.ApplyT(func(v *RecordingModeResponse) []RecordingModeOverrideResponse {
		if v == nil {
			return nil
		}
		return v.RecordingModeOverrides
	}).(RecordingModeOverrideResponseArrayOutput)
}

// Definition of RecordingStrategy
type RecordingStrategy struct {
	// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
	UseOnly *RecordingStrategyTypeEnumValue `pulumi:"useOnly"`
}

// RecordingStrategyInput is an input type that accepts RecordingStrategyArgs and RecordingStrategyOutput values.
// You can construct a concrete instance of `RecordingStrategyInput` via:
//
//	RecordingStrategyArgs{...}
type RecordingStrategyInput interface {
	pulumi.Input

	ToRecordingStrategyOutput() RecordingStrategyOutput
	ToRecordingStrategyOutputWithContext(context.Context) RecordingStrategyOutput
}

// Definition of RecordingStrategy
type RecordingStrategyArgs struct {
	// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
	UseOnly RecordingStrategyTypeEnumValuePtrInput `pulumi:"useOnly"`
}

func (RecordingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingStrategy)(nil)).Elem()
}

func (i RecordingStrategyArgs) ToRecordingStrategyOutput() RecordingStrategyOutput {
	return i.ToRecordingStrategyOutputWithContext(context.Background())
}

func (i RecordingStrategyArgs) ToRecordingStrategyOutputWithContext(ctx context.Context) RecordingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingStrategyOutput)
}

func (i RecordingStrategyArgs) ToRecordingStrategyPtrOutput() RecordingStrategyPtrOutput {
	return i.ToRecordingStrategyPtrOutputWithContext(context.Background())
}

func (i RecordingStrategyArgs) ToRecordingStrategyPtrOutputWithContext(ctx context.Context) RecordingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingStrategyOutput).ToRecordingStrategyPtrOutputWithContext(ctx)
}

// RecordingStrategyPtrInput is an input type that accepts RecordingStrategyArgs, RecordingStrategyPtr and RecordingStrategyPtrOutput values.
// You can construct a concrete instance of `RecordingStrategyPtrInput` via:
//
//	        RecordingStrategyArgs{...}
//
//	or:
//
//	        nil
type RecordingStrategyPtrInput interface {
	pulumi.Input

	ToRecordingStrategyPtrOutput() RecordingStrategyPtrOutput
	ToRecordingStrategyPtrOutputWithContext(context.Context) RecordingStrategyPtrOutput
}

type recordingStrategyPtrType RecordingStrategyArgs

func RecordingStrategyPtr(v *RecordingStrategyArgs) RecordingStrategyPtrInput {
	return (*recordingStrategyPtrType)(v)
}

func (*recordingStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingStrategy)(nil)).Elem()
}

func (i *recordingStrategyPtrType) ToRecordingStrategyPtrOutput() RecordingStrategyPtrOutput {
	return i.ToRecordingStrategyPtrOutputWithContext(context.Background())
}

func (i *recordingStrategyPtrType) ToRecordingStrategyPtrOutputWithContext(ctx context.Context) RecordingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingStrategyPtrOutput)
}

// Definition of RecordingStrategy
type RecordingStrategyOutput struct{ *pulumi.OutputState }

func (RecordingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingStrategy)(nil)).Elem()
}

func (o RecordingStrategyOutput) ToRecordingStrategyOutput() RecordingStrategyOutput {
	return o
}

func (o RecordingStrategyOutput) ToRecordingStrategyOutputWithContext(ctx context.Context) RecordingStrategyOutput {
	return o
}

func (o RecordingStrategyOutput) ToRecordingStrategyPtrOutput() RecordingStrategyPtrOutput {
	return o.ToRecordingStrategyPtrOutputWithContext(context.Background())
}

func (o RecordingStrategyOutput) ToRecordingStrategyPtrOutputWithContext(ctx context.Context) RecordingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingStrategy) *RecordingStrategy {
		return &v
	}).(RecordingStrategyPtrOutput)
}

// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingStrategyOutput) UseOnly() RecordingStrategyTypeEnumValuePtrOutput {
	return o.ApplyT(func(v RecordingStrategy) *RecordingStrategyTypeEnumValue { return v.UseOnly }).(RecordingStrategyTypeEnumValuePtrOutput)
}

type RecordingStrategyPtrOutput struct{ *pulumi.OutputState }

func (RecordingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingStrategy)(nil)).Elem()
}

func (o RecordingStrategyPtrOutput) ToRecordingStrategyPtrOutput() RecordingStrategyPtrOutput {
	return o
}

func (o RecordingStrategyPtrOutput) ToRecordingStrategyPtrOutputWithContext(ctx context.Context) RecordingStrategyPtrOutput {
	return o
}

func (o RecordingStrategyPtrOutput) Elem() RecordingStrategyOutput {
	return o.ApplyT(func(v *RecordingStrategy) RecordingStrategy {
		if v != nil {
			return *v
		}
		var ret RecordingStrategy
		return ret
	}).(RecordingStrategyOutput)
}

// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingStrategyPtrOutput) UseOnly() RecordingStrategyTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *RecordingStrategy) *RecordingStrategyTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.UseOnly
	}).(RecordingStrategyTypeEnumValuePtrOutput)
}

// Definition of RecordingStrategy
type RecordingStrategyResponse struct {
	// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
	UseOnly *RecordingStrategyTypeEnumValueResponse `pulumi:"useOnly"`
}

// Definition of RecordingStrategy
type RecordingStrategyResponseOutput struct{ *pulumi.OutputState }

func (RecordingStrategyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingStrategyResponse)(nil)).Elem()
}

func (o RecordingStrategyResponseOutput) ToRecordingStrategyResponseOutput() RecordingStrategyResponseOutput {
	return o
}

func (o RecordingStrategyResponseOutput) ToRecordingStrategyResponseOutputWithContext(ctx context.Context) RecordingStrategyResponseOutput {
	return o
}

// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingStrategyResponseOutput) UseOnly() RecordingStrategyTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v RecordingStrategyResponse) *RecordingStrategyTypeEnumValueResponse { return v.UseOnly }).(RecordingStrategyTypeEnumValueResponsePtrOutput)
}

type RecordingStrategyResponsePtrOutput struct{ *pulumi.OutputState }

func (RecordingStrategyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingStrategyResponse)(nil)).Elem()
}

func (o RecordingStrategyResponsePtrOutput) ToRecordingStrategyResponsePtrOutput() RecordingStrategyResponsePtrOutput {
	return o
}

func (o RecordingStrategyResponsePtrOutput) ToRecordingStrategyResponsePtrOutputWithContext(ctx context.Context) RecordingStrategyResponsePtrOutput {
	return o
}

func (o RecordingStrategyResponsePtrOutput) Elem() RecordingStrategyResponseOutput {
	return o.ApplyT(func(v *RecordingStrategyResponse) RecordingStrategyResponse {
		if v != nil {
			return *v
		}
		var ret RecordingStrategyResponse
		return ret
	}).(RecordingStrategyResponseOutput)
}

// <p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, excluding the global IAM resource types. You also must set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>. When Config adds support for a new resource type, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href='https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources'>Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify to exclude from being recorded in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p> <b>Required and optional fields</b> </p> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html'>RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href='https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html'>ExclusionByResourceTypes</a>.</p> </note> <note> <p> <b>Overriding fields</b> </p> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global IAM resource types will still be automatically recorded in this option unless those resource types are specifically listed as exclusions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> </note> <note> <p> <b>Global resource types and the exclusion recording strategy</b> </p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> <p>Unless specifically listed as exclusions, <code>AWS::RDS::GlobalCluster</code> will be recorded automatically in all supported Config Regions were the configuration recorder is enabled.</p> <p>IAM users, groups, roles, and customer managed policies will be recorded in the Region where you set up the configuration recorder if that is a Region where Config was available before February 2022. You cannot be record the global IAM resouce types in Regions supported by Config after February 2022. This list where you cannot record the global IAM resource types includes the following Regions:</p> <ul> <li> <p>Asia Pacific (Hyderabad)</p> </li> <li> <p>Asia Pacific (Melbourne)</p> </li> <li> <p>Canada West (Calgary)</p> </li> <li> <p>Europe (Spain)</p> </li> <li> <p>Europe (Zurich)</p> </li> <li> <p>Israel (Tel Aviv)</p> </li> <li> <p>Middle East (UAE)</p> </li> </ul> </note>
func (o RecordingStrategyResponsePtrOutput) UseOnly() RecordingStrategyTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *RecordingStrategyResponse) *RecordingStrategyTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.UseOnly
	}).(RecordingStrategyTypeEnumValueResponsePtrOutput)
}

// Definition of RecordingStrategyTypeEnumValue
type RecordingStrategyTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// RecordingStrategyTypeEnumValueInput is an input type that accepts RecordingStrategyTypeEnumValueArgs and RecordingStrategyTypeEnumValueOutput values.
// You can construct a concrete instance of `RecordingStrategyTypeEnumValueInput` via:
//
//	RecordingStrategyTypeEnumValueArgs{...}
type RecordingStrategyTypeEnumValueInput interface {
	pulumi.Input

	ToRecordingStrategyTypeEnumValueOutput() RecordingStrategyTypeEnumValueOutput
	ToRecordingStrategyTypeEnumValueOutputWithContext(context.Context) RecordingStrategyTypeEnumValueOutput
}

// Definition of RecordingStrategyTypeEnumValue
type RecordingStrategyTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RecordingStrategyTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingStrategyTypeEnumValue)(nil)).Elem()
}

func (i RecordingStrategyTypeEnumValueArgs) ToRecordingStrategyTypeEnumValueOutput() RecordingStrategyTypeEnumValueOutput {
	return i.ToRecordingStrategyTypeEnumValueOutputWithContext(context.Background())
}

func (i RecordingStrategyTypeEnumValueArgs) ToRecordingStrategyTypeEnumValueOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingStrategyTypeEnumValueOutput)
}

func (i RecordingStrategyTypeEnumValueArgs) ToRecordingStrategyTypeEnumValuePtrOutput() RecordingStrategyTypeEnumValuePtrOutput {
	return i.ToRecordingStrategyTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i RecordingStrategyTypeEnumValueArgs) ToRecordingStrategyTypeEnumValuePtrOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingStrategyTypeEnumValueOutput).ToRecordingStrategyTypeEnumValuePtrOutputWithContext(ctx)
}

// RecordingStrategyTypeEnumValuePtrInput is an input type that accepts RecordingStrategyTypeEnumValueArgs, RecordingStrategyTypeEnumValuePtr and RecordingStrategyTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `RecordingStrategyTypeEnumValuePtrInput` via:
//
//	        RecordingStrategyTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type RecordingStrategyTypeEnumValuePtrInput interface {
	pulumi.Input

	ToRecordingStrategyTypeEnumValuePtrOutput() RecordingStrategyTypeEnumValuePtrOutput
	ToRecordingStrategyTypeEnumValuePtrOutputWithContext(context.Context) RecordingStrategyTypeEnumValuePtrOutput
}

type recordingStrategyTypeEnumValuePtrType RecordingStrategyTypeEnumValueArgs

func RecordingStrategyTypeEnumValuePtr(v *RecordingStrategyTypeEnumValueArgs) RecordingStrategyTypeEnumValuePtrInput {
	return (*recordingStrategyTypeEnumValuePtrType)(v)
}

func (*recordingStrategyTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingStrategyTypeEnumValue)(nil)).Elem()
}

func (i *recordingStrategyTypeEnumValuePtrType) ToRecordingStrategyTypeEnumValuePtrOutput() RecordingStrategyTypeEnumValuePtrOutput {
	return i.ToRecordingStrategyTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *recordingStrategyTypeEnumValuePtrType) ToRecordingStrategyTypeEnumValuePtrOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingStrategyTypeEnumValuePtrOutput)
}

// Definition of RecordingStrategyTypeEnumValue
type RecordingStrategyTypeEnumValueOutput struct{ *pulumi.OutputState }

func (RecordingStrategyTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingStrategyTypeEnumValue)(nil)).Elem()
}

func (o RecordingStrategyTypeEnumValueOutput) ToRecordingStrategyTypeEnumValueOutput() RecordingStrategyTypeEnumValueOutput {
	return o
}

func (o RecordingStrategyTypeEnumValueOutput) ToRecordingStrategyTypeEnumValueOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValueOutput {
	return o
}

func (o RecordingStrategyTypeEnumValueOutput) ToRecordingStrategyTypeEnumValuePtrOutput() RecordingStrategyTypeEnumValuePtrOutput {
	return o.ToRecordingStrategyTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o RecordingStrategyTypeEnumValueOutput) ToRecordingStrategyTypeEnumValuePtrOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingStrategyTypeEnumValue) *RecordingStrategyTypeEnumValue {
		return &v
	}).(RecordingStrategyTypeEnumValuePtrOutput)
}

// Property value
func (o RecordingStrategyTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordingStrategyTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecordingStrategyTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (RecordingStrategyTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingStrategyTypeEnumValue)(nil)).Elem()
}

func (o RecordingStrategyTypeEnumValuePtrOutput) ToRecordingStrategyTypeEnumValuePtrOutput() RecordingStrategyTypeEnumValuePtrOutput {
	return o
}

func (o RecordingStrategyTypeEnumValuePtrOutput) ToRecordingStrategyTypeEnumValuePtrOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValuePtrOutput {
	return o
}

func (o RecordingStrategyTypeEnumValuePtrOutput) Elem() RecordingStrategyTypeEnumValueOutput {
	return o.ApplyT(func(v *RecordingStrategyTypeEnumValue) RecordingStrategyTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret RecordingStrategyTypeEnumValue
		return ret
	}).(RecordingStrategyTypeEnumValueOutput)
}

// Property value
func (o RecordingStrategyTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordingStrategyTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RecordingStrategyTypeEnumValue
type RecordingStrategyTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of RecordingStrategyTypeEnumValue
type RecordingStrategyTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (RecordingStrategyTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingStrategyTypeEnumValueResponse)(nil)).Elem()
}

func (o RecordingStrategyTypeEnumValueResponseOutput) ToRecordingStrategyTypeEnumValueResponseOutput() RecordingStrategyTypeEnumValueResponseOutput {
	return o
}

func (o RecordingStrategyTypeEnumValueResponseOutput) ToRecordingStrategyTypeEnumValueResponseOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o RecordingStrategyTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordingStrategyTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecordingStrategyTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (RecordingStrategyTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingStrategyTypeEnumValueResponse)(nil)).Elem()
}

func (o RecordingStrategyTypeEnumValueResponsePtrOutput) ToRecordingStrategyTypeEnumValueResponsePtrOutput() RecordingStrategyTypeEnumValueResponsePtrOutput {
	return o
}

func (o RecordingStrategyTypeEnumValueResponsePtrOutput) ToRecordingStrategyTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) RecordingStrategyTypeEnumValueResponsePtrOutput {
	return o
}

func (o RecordingStrategyTypeEnumValueResponsePtrOutput) Elem() RecordingStrategyTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *RecordingStrategyTypeEnumValueResponse) RecordingStrategyTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret RecordingStrategyTypeEnumValueResponse
		return ret
	}).(RecordingStrategyTypeEnumValueResponseOutput)
}

// Property value
func (o RecordingStrategyTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordingStrategyTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RedirectAllRequestsTo
type RedirectAllRequestsTo struct {
	// Name of the host where requests are redirected.
	HostName *string `pulumi:"hostName"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol *string `pulumi:"protocol"`
}

// RedirectAllRequestsToInput is an input type that accepts RedirectAllRequestsToArgs and RedirectAllRequestsToOutput values.
// You can construct a concrete instance of `RedirectAllRequestsToInput` via:
//
//	RedirectAllRequestsToArgs{...}
type RedirectAllRequestsToInput interface {
	pulumi.Input

	ToRedirectAllRequestsToOutput() RedirectAllRequestsToOutput
	ToRedirectAllRequestsToOutputWithContext(context.Context) RedirectAllRequestsToOutput
}

// Definition of RedirectAllRequestsTo
type RedirectAllRequestsToArgs struct {
	// Name of the host where requests are redirected.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (RedirectAllRequestsToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectAllRequestsTo)(nil)).Elem()
}

func (i RedirectAllRequestsToArgs) ToRedirectAllRequestsToOutput() RedirectAllRequestsToOutput {
	return i.ToRedirectAllRequestsToOutputWithContext(context.Background())
}

func (i RedirectAllRequestsToArgs) ToRedirectAllRequestsToOutputWithContext(ctx context.Context) RedirectAllRequestsToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectAllRequestsToOutput)
}

func (i RedirectAllRequestsToArgs) ToRedirectAllRequestsToPtrOutput() RedirectAllRequestsToPtrOutput {
	return i.ToRedirectAllRequestsToPtrOutputWithContext(context.Background())
}

func (i RedirectAllRequestsToArgs) ToRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) RedirectAllRequestsToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectAllRequestsToOutput).ToRedirectAllRequestsToPtrOutputWithContext(ctx)
}

// RedirectAllRequestsToPtrInput is an input type that accepts RedirectAllRequestsToArgs, RedirectAllRequestsToPtr and RedirectAllRequestsToPtrOutput values.
// You can construct a concrete instance of `RedirectAllRequestsToPtrInput` via:
//
//	        RedirectAllRequestsToArgs{...}
//
//	or:
//
//	        nil
type RedirectAllRequestsToPtrInput interface {
	pulumi.Input

	ToRedirectAllRequestsToPtrOutput() RedirectAllRequestsToPtrOutput
	ToRedirectAllRequestsToPtrOutputWithContext(context.Context) RedirectAllRequestsToPtrOutput
}

type redirectAllRequestsToPtrType RedirectAllRequestsToArgs

func RedirectAllRequestsToPtr(v *RedirectAllRequestsToArgs) RedirectAllRequestsToPtrInput {
	return (*redirectAllRequestsToPtrType)(v)
}

func (*redirectAllRequestsToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectAllRequestsTo)(nil)).Elem()
}

func (i *redirectAllRequestsToPtrType) ToRedirectAllRequestsToPtrOutput() RedirectAllRequestsToPtrOutput {
	return i.ToRedirectAllRequestsToPtrOutputWithContext(context.Background())
}

func (i *redirectAllRequestsToPtrType) ToRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) RedirectAllRequestsToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectAllRequestsToPtrOutput)
}

// Definition of RedirectAllRequestsTo
type RedirectAllRequestsToOutput struct{ *pulumi.OutputState }

func (RedirectAllRequestsToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectAllRequestsTo)(nil)).Elem()
}

func (o RedirectAllRequestsToOutput) ToRedirectAllRequestsToOutput() RedirectAllRequestsToOutput {
	return o
}

func (o RedirectAllRequestsToOutput) ToRedirectAllRequestsToOutputWithContext(ctx context.Context) RedirectAllRequestsToOutput {
	return o
}

func (o RedirectAllRequestsToOutput) ToRedirectAllRequestsToPtrOutput() RedirectAllRequestsToPtrOutput {
	return o.ToRedirectAllRequestsToPtrOutputWithContext(context.Background())
}

func (o RedirectAllRequestsToOutput) ToRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) RedirectAllRequestsToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedirectAllRequestsTo) *RedirectAllRequestsTo {
		return &v
	}).(RedirectAllRequestsToPtrOutput)
}

// Name of the host where requests are redirected.
func (o RedirectAllRequestsToOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectAllRequestsTo) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectAllRequestsToOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectAllRequestsTo) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type RedirectAllRequestsToPtrOutput struct{ *pulumi.OutputState }

func (RedirectAllRequestsToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectAllRequestsTo)(nil)).Elem()
}

func (o RedirectAllRequestsToPtrOutput) ToRedirectAllRequestsToPtrOutput() RedirectAllRequestsToPtrOutput {
	return o
}

func (o RedirectAllRequestsToPtrOutput) ToRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) RedirectAllRequestsToPtrOutput {
	return o
}

func (o RedirectAllRequestsToPtrOutput) Elem() RedirectAllRequestsToOutput {
	return o.ApplyT(func(v *RedirectAllRequestsTo) RedirectAllRequestsTo {
		if v != nil {
			return *v
		}
		var ret RedirectAllRequestsTo
		return ret
	}).(RedirectAllRequestsToOutput)
}

// Name of the host where requests are redirected.
func (o RedirectAllRequestsToPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectAllRequestsTo) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectAllRequestsToPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectAllRequestsTo) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Definition of RedirectAllRequestsTo
type RedirectAllRequestsToResponse struct {
	// Name of the host where requests are redirected.
	HostName *string `pulumi:"hostName"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol *string `pulumi:"protocol"`
}

// Definition of RedirectAllRequestsTo
type RedirectAllRequestsToResponseOutput struct{ *pulumi.OutputState }

func (RedirectAllRequestsToResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectAllRequestsToResponse)(nil)).Elem()
}

func (o RedirectAllRequestsToResponseOutput) ToRedirectAllRequestsToResponseOutput() RedirectAllRequestsToResponseOutput {
	return o
}

func (o RedirectAllRequestsToResponseOutput) ToRedirectAllRequestsToResponseOutputWithContext(ctx context.Context) RedirectAllRequestsToResponseOutput {
	return o
}

// Name of the host where requests are redirected.
func (o RedirectAllRequestsToResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectAllRequestsToResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectAllRequestsToResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectAllRequestsToResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type RedirectAllRequestsToResponsePtrOutput struct{ *pulumi.OutputState }

func (RedirectAllRequestsToResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectAllRequestsToResponse)(nil)).Elem()
}

func (o RedirectAllRequestsToResponsePtrOutput) ToRedirectAllRequestsToResponsePtrOutput() RedirectAllRequestsToResponsePtrOutput {
	return o
}

func (o RedirectAllRequestsToResponsePtrOutput) ToRedirectAllRequestsToResponsePtrOutputWithContext(ctx context.Context) RedirectAllRequestsToResponsePtrOutput {
	return o
}

func (o RedirectAllRequestsToResponsePtrOutput) Elem() RedirectAllRequestsToResponseOutput {
	return o.ApplyT(func(v *RedirectAllRequestsToResponse) RedirectAllRequestsToResponse {
		if v != nil {
			return *v
		}
		var ret RedirectAllRequestsToResponse
		return ret
	}).(RedirectAllRequestsToResponseOutput)
}

// Name of the host where requests are redirected.
func (o RedirectAllRequestsToResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectAllRequestsToResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectAllRequestsToResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectAllRequestsToResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Definition of RedirectConfig
type RedirectConfigResponse struct {
	// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
	Host *string `pulumi:"host"`
	// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.
	Path *string `pulumi:"path"`
	// The port. You can specify a value from 1 to 65535 or #{port}.
	Port *string `pulumi:"port"`
	// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
	Protocol *string `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically added. You can specify any of the reserved keywords.
	Query *string `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
	StatusCode *string `pulumi:"statusCode"`
}

// Definition of RedirectConfig
type RedirectConfigResponseOutput struct{ *pulumi.OutputState }

func (RedirectConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfigResponse)(nil)).Elem()
}

func (o RedirectConfigResponseOutput) ToRedirectConfigResponseOutput() RedirectConfigResponseOutput {
	return o
}

func (o RedirectConfigResponseOutput) ToRedirectConfigResponseOutputWithContext(ctx context.Context) RedirectConfigResponseOutput {
	return o
}

// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
func (o RedirectConfigResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.
func (o RedirectConfigResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port. You can specify a value from 1 to 65535 or #{port}.
func (o RedirectConfigResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
func (o RedirectConfigResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically added. You can specify any of the reserved keywords.
func (o RedirectConfigResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
func (o RedirectConfigResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type RedirectConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (RedirectConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectConfigResponse)(nil)).Elem()
}

func (o RedirectConfigResponsePtrOutput) ToRedirectConfigResponsePtrOutput() RedirectConfigResponsePtrOutput {
	return o
}

func (o RedirectConfigResponsePtrOutput) ToRedirectConfigResponsePtrOutputWithContext(ctx context.Context) RedirectConfigResponsePtrOutput {
	return o
}

func (o RedirectConfigResponsePtrOutput) Elem() RedirectConfigResponseOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) RedirectConfigResponse {
		if v != nil {
			return *v
		}
		var ret RedirectConfigResponse
		return ret
	}).(RedirectConfigResponseOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
func (o RedirectConfigResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.
func (o RedirectConfigResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port. You can specify a value from 1 to 65535 or #{port}.
func (o RedirectConfigResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.
func (o RedirectConfigResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically added. You can specify any of the reserved keywords.
func (o RedirectConfigResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
func (o RedirectConfigResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.StringPtrOutput)
}

// Definition of RedirectRule
type RedirectRule struct {
	// The host name to use in the redirect request.
	HostName *string `pulumi:"hostName"`
	// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
	HttpRedirectCode *string `pulumi:"httpRedirectCode"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol *string `pulumi:"protocol"`
	// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/`` (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/`` and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyPrefixWith *string `pulumi:"replaceKeyPrefixWith"`
	// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyWith *string `pulumi:"replaceKeyWith"`
}

// RedirectRuleInput is an input type that accepts RedirectRuleArgs and RedirectRuleOutput values.
// You can construct a concrete instance of `RedirectRuleInput` via:
//
//	RedirectRuleArgs{...}
type RedirectRuleInput interface {
	pulumi.Input

	ToRedirectRuleOutput() RedirectRuleOutput
	ToRedirectRuleOutputWithContext(context.Context) RedirectRuleOutput
}

// Definition of RedirectRule
type RedirectRuleArgs struct {
	// The host name to use in the redirect request.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
	HttpRedirectCode pulumi.StringPtrInput `pulumi:"httpRedirectCode"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/`` (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/`` and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyPrefixWith pulumi.StringPtrInput `pulumi:"replaceKeyPrefixWith"`
	// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyWith pulumi.StringPtrInput `pulumi:"replaceKeyWith"`
}

func (RedirectRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectRule)(nil)).Elem()
}

func (i RedirectRuleArgs) ToRedirectRuleOutput() RedirectRuleOutput {
	return i.ToRedirectRuleOutputWithContext(context.Background())
}

func (i RedirectRuleArgs) ToRedirectRuleOutputWithContext(ctx context.Context) RedirectRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectRuleOutput)
}

func (i RedirectRuleArgs) ToRedirectRulePtrOutput() RedirectRulePtrOutput {
	return i.ToRedirectRulePtrOutputWithContext(context.Background())
}

func (i RedirectRuleArgs) ToRedirectRulePtrOutputWithContext(ctx context.Context) RedirectRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectRuleOutput).ToRedirectRulePtrOutputWithContext(ctx)
}

// RedirectRulePtrInput is an input type that accepts RedirectRuleArgs, RedirectRulePtr and RedirectRulePtrOutput values.
// You can construct a concrete instance of `RedirectRulePtrInput` via:
//
//	        RedirectRuleArgs{...}
//
//	or:
//
//	        nil
type RedirectRulePtrInput interface {
	pulumi.Input

	ToRedirectRulePtrOutput() RedirectRulePtrOutput
	ToRedirectRulePtrOutputWithContext(context.Context) RedirectRulePtrOutput
}

type redirectRulePtrType RedirectRuleArgs

func RedirectRulePtr(v *RedirectRuleArgs) RedirectRulePtrInput {
	return (*redirectRulePtrType)(v)
}

func (*redirectRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectRule)(nil)).Elem()
}

func (i *redirectRulePtrType) ToRedirectRulePtrOutput() RedirectRulePtrOutput {
	return i.ToRedirectRulePtrOutputWithContext(context.Background())
}

func (i *redirectRulePtrType) ToRedirectRulePtrOutputWithContext(ctx context.Context) RedirectRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectRulePtrOutput)
}

// Definition of RedirectRule
type RedirectRuleOutput struct{ *pulumi.OutputState }

func (RedirectRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectRule)(nil)).Elem()
}

func (o RedirectRuleOutput) ToRedirectRuleOutput() RedirectRuleOutput {
	return o
}

func (o RedirectRuleOutput) ToRedirectRuleOutputWithContext(ctx context.Context) RedirectRuleOutput {
	return o
}

func (o RedirectRuleOutput) ToRedirectRulePtrOutput() RedirectRulePtrOutput {
	return o.ToRedirectRulePtrOutputWithContext(context.Background())
}

func (o RedirectRuleOutput) ToRedirectRulePtrOutputWithContext(ctx context.Context) RedirectRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedirectRule) *RedirectRule {
		return &v
	}).(RedirectRulePtrOutput)
}

// The host name to use in the redirect request.
func (o RedirectRuleOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRule) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
func (o RedirectRuleOutput) HttpRedirectCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRule) *string { return v.HttpRedirectCode }).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix “docs/“ (objects in the “docs/“ folder) to “documents/“, you can set a condition block with “KeyPrefixEquals“ set to “docs/“ and in the Redirect set “ReplaceKeyPrefixWith“ to “/documents“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRuleOutput) ReplaceKeyPrefixWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRule) *string { return v.ReplaceKeyPrefixWith }).(pulumi.StringPtrOutput)
}

// The specific object key to use in the redirect request. For example, redirect request to “error.html“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyPrefixWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRuleOutput) ReplaceKeyWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRule) *string { return v.ReplaceKeyWith }).(pulumi.StringPtrOutput)
}

type RedirectRulePtrOutput struct{ *pulumi.OutputState }

func (RedirectRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectRule)(nil)).Elem()
}

func (o RedirectRulePtrOutput) ToRedirectRulePtrOutput() RedirectRulePtrOutput {
	return o
}

func (o RedirectRulePtrOutput) ToRedirectRulePtrOutputWithContext(ctx context.Context) RedirectRulePtrOutput {
	return o
}

func (o RedirectRulePtrOutput) Elem() RedirectRuleOutput {
	return o.ApplyT(func(v *RedirectRule) RedirectRule {
		if v != nil {
			return *v
		}
		var ret RedirectRule
		return ret
	}).(RedirectRuleOutput)
}

// The host name to use in the redirect request.
func (o RedirectRulePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRule) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
func (o RedirectRulePtrOutput) HttpRedirectCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRule) *string {
		if v == nil {
			return nil
		}
		return v.HttpRedirectCode
	}).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectRulePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRule) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix “docs/“ (objects in the “docs/“ folder) to “documents/“, you can set a condition block with “KeyPrefixEquals“ set to “docs/“ and in the Redirect set “ReplaceKeyPrefixWith“ to “/documents“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRulePtrOutput) ReplaceKeyPrefixWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRule) *string {
		if v == nil {
			return nil
		}
		return v.ReplaceKeyPrefixWith
	}).(pulumi.StringPtrOutput)
}

// The specific object key to use in the redirect request. For example, redirect request to “error.html“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyPrefixWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRulePtrOutput) ReplaceKeyWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRule) *string {
		if v == nil {
			return nil
		}
		return v.ReplaceKeyWith
	}).(pulumi.StringPtrOutput)
}

// Definition of RedirectRule
type RedirectRuleResponse struct {
	// The host name to use in the redirect request.
	HostName *string `pulumi:"hostName"`
	// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
	HttpRedirectCode *string `pulumi:"httpRedirectCode"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol *string `pulumi:"protocol"`
	// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/`` (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/`` and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyPrefixWith *string `pulumi:"replaceKeyPrefixWith"`
	// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyWith *string `pulumi:"replaceKeyWith"`
}

// Definition of RedirectRule
type RedirectRuleResponseOutput struct{ *pulumi.OutputState }

func (RedirectRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectRuleResponse)(nil)).Elem()
}

func (o RedirectRuleResponseOutput) ToRedirectRuleResponseOutput() RedirectRuleResponseOutput {
	return o
}

func (o RedirectRuleResponseOutput) ToRedirectRuleResponseOutputWithContext(ctx context.Context) RedirectRuleResponseOutput {
	return o
}

// The host name to use in the redirect request.
func (o RedirectRuleResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRuleResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
func (o RedirectRuleResponseOutput) HttpRedirectCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRuleResponse) *string { return v.HttpRedirectCode }).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix “docs/“ (objects in the “docs/“ folder) to “documents/“, you can set a condition block with “KeyPrefixEquals“ set to “docs/“ and in the Redirect set “ReplaceKeyPrefixWith“ to “/documents“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRuleResponseOutput) ReplaceKeyPrefixWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRuleResponse) *string { return v.ReplaceKeyPrefixWith }).(pulumi.StringPtrOutput)
}

// The specific object key to use in the redirect request. For example, redirect request to “error.html“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyPrefixWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRuleResponseOutput) ReplaceKeyWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectRuleResponse) *string { return v.ReplaceKeyWith }).(pulumi.StringPtrOutput)
}

type RedirectRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (RedirectRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedirectRuleResponse)(nil)).Elem()
}

func (o RedirectRuleResponsePtrOutput) ToRedirectRuleResponsePtrOutput() RedirectRuleResponsePtrOutput {
	return o
}

func (o RedirectRuleResponsePtrOutput) ToRedirectRuleResponsePtrOutputWithContext(ctx context.Context) RedirectRuleResponsePtrOutput {
	return o
}

func (o RedirectRuleResponsePtrOutput) Elem() RedirectRuleResponseOutput {
	return o.ApplyT(func(v *RedirectRuleResponse) RedirectRuleResponse {
		if v != nil {
			return *v
		}
		var ret RedirectRuleResponse
		return ret
	}).(RedirectRuleResponseOutput)
}

// The host name to use in the redirect request.
func (o RedirectRuleResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
func (o RedirectRuleResponsePtrOutput) HttpRedirectCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpRedirectCode
	}).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o RedirectRuleResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix “docs/“ (objects in the “docs/“ folder) to “documents/“, you can set a condition block with “KeyPrefixEquals“ set to “docs/“ and in the Redirect set “ReplaceKeyPrefixWith“ to “/documents“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRuleResponsePtrOutput) ReplaceKeyPrefixWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplaceKeyPrefixWith
	}).(pulumi.StringPtrOutput)
}

// The specific object key to use in the redirect request. For example, redirect request to “error.html“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyPrefixWith“ is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RedirectRuleResponsePtrOutput) ReplaceKeyWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedirectRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplaceKeyWith
	}).(pulumi.StringPtrOutput)
}

// Definition of Endpoint
type RedshiftClusterEndpoint struct {
	// Property address
	Address *string `pulumi:"address"`
	// Property port
	Port *string `pulumi:"port"`
}

// RedshiftClusterEndpointInput is an input type that accepts RedshiftClusterEndpointArgs and RedshiftClusterEndpointOutput values.
// You can construct a concrete instance of `RedshiftClusterEndpointInput` via:
//
//	RedshiftClusterEndpointArgs{...}
type RedshiftClusterEndpointInput interface {
	pulumi.Input

	ToRedshiftClusterEndpointOutput() RedshiftClusterEndpointOutput
	ToRedshiftClusterEndpointOutputWithContext(context.Context) RedshiftClusterEndpointOutput
}

// Definition of Endpoint
type RedshiftClusterEndpointArgs struct {
	// Property address
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Property port
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (RedshiftClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterEndpoint)(nil)).Elem()
}

func (i RedshiftClusterEndpointArgs) ToRedshiftClusterEndpointOutput() RedshiftClusterEndpointOutput {
	return i.ToRedshiftClusterEndpointOutputWithContext(context.Background())
}

func (i RedshiftClusterEndpointArgs) ToRedshiftClusterEndpointOutputWithContext(ctx context.Context) RedshiftClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterEndpointOutput)
}

func (i RedshiftClusterEndpointArgs) ToRedshiftClusterEndpointPtrOutput() RedshiftClusterEndpointPtrOutput {
	return i.ToRedshiftClusterEndpointPtrOutputWithContext(context.Background())
}

func (i RedshiftClusterEndpointArgs) ToRedshiftClusterEndpointPtrOutputWithContext(ctx context.Context) RedshiftClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterEndpointOutput).ToRedshiftClusterEndpointPtrOutputWithContext(ctx)
}

// RedshiftClusterEndpointPtrInput is an input type that accepts RedshiftClusterEndpointArgs, RedshiftClusterEndpointPtr and RedshiftClusterEndpointPtrOutput values.
// You can construct a concrete instance of `RedshiftClusterEndpointPtrInput` via:
//
//	        RedshiftClusterEndpointArgs{...}
//
//	or:
//
//	        nil
type RedshiftClusterEndpointPtrInput interface {
	pulumi.Input

	ToRedshiftClusterEndpointPtrOutput() RedshiftClusterEndpointPtrOutput
	ToRedshiftClusterEndpointPtrOutputWithContext(context.Context) RedshiftClusterEndpointPtrOutput
}

type redshiftClusterEndpointPtrType RedshiftClusterEndpointArgs

func RedshiftClusterEndpointPtr(v *RedshiftClusterEndpointArgs) RedshiftClusterEndpointPtrInput {
	return (*redshiftClusterEndpointPtrType)(v)
}

func (*redshiftClusterEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterEndpoint)(nil)).Elem()
}

func (i *redshiftClusterEndpointPtrType) ToRedshiftClusterEndpointPtrOutput() RedshiftClusterEndpointPtrOutput {
	return i.ToRedshiftClusterEndpointPtrOutputWithContext(context.Background())
}

func (i *redshiftClusterEndpointPtrType) ToRedshiftClusterEndpointPtrOutputWithContext(ctx context.Context) RedshiftClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterEndpointPtrOutput)
}

// Definition of Endpoint
type RedshiftClusterEndpointOutput struct{ *pulumi.OutputState }

func (RedshiftClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterEndpoint)(nil)).Elem()
}

func (o RedshiftClusterEndpointOutput) ToRedshiftClusterEndpointOutput() RedshiftClusterEndpointOutput {
	return o
}

func (o RedshiftClusterEndpointOutput) ToRedshiftClusterEndpointOutputWithContext(ctx context.Context) RedshiftClusterEndpointOutput {
	return o
}

func (o RedshiftClusterEndpointOutput) ToRedshiftClusterEndpointPtrOutput() RedshiftClusterEndpointPtrOutput {
	return o.ToRedshiftClusterEndpointPtrOutputWithContext(context.Background())
}

func (o RedshiftClusterEndpointOutput) ToRedshiftClusterEndpointPtrOutputWithContext(ctx context.Context) RedshiftClusterEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedshiftClusterEndpoint) *RedshiftClusterEndpoint {
		return &v
	}).(RedshiftClusterEndpointPtrOutput)
}

// Property address
func (o RedshiftClusterEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Property port
func (o RedshiftClusterEndpointOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterEndpoint) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type RedshiftClusterEndpointPtrOutput struct{ *pulumi.OutputState }

func (RedshiftClusterEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterEndpoint)(nil)).Elem()
}

func (o RedshiftClusterEndpointPtrOutput) ToRedshiftClusterEndpointPtrOutput() RedshiftClusterEndpointPtrOutput {
	return o
}

func (o RedshiftClusterEndpointPtrOutput) ToRedshiftClusterEndpointPtrOutputWithContext(ctx context.Context) RedshiftClusterEndpointPtrOutput {
	return o
}

func (o RedshiftClusterEndpointPtrOutput) Elem() RedshiftClusterEndpointOutput {
	return o.ApplyT(func(v *RedshiftClusterEndpoint) RedshiftClusterEndpoint {
		if v != nil {
			return *v
		}
		var ret RedshiftClusterEndpoint
		return ret
	}).(RedshiftClusterEndpointOutput)
}

// Property address
func (o RedshiftClusterEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Property port
func (o RedshiftClusterEndpointPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Definition of Endpoint
type RedshiftClusterEndpointResponse struct {
	// Property address
	Address *string `pulumi:"address"`
	// Property port
	Port *string `pulumi:"port"`
}

// Definition of Endpoint
type RedshiftClusterEndpointResponseOutput struct{ *pulumi.OutputState }

func (RedshiftClusterEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterEndpointResponse)(nil)).Elem()
}

func (o RedshiftClusterEndpointResponseOutput) ToRedshiftClusterEndpointResponseOutput() RedshiftClusterEndpointResponseOutput {
	return o
}

func (o RedshiftClusterEndpointResponseOutput) ToRedshiftClusterEndpointResponseOutputWithContext(ctx context.Context) RedshiftClusterEndpointResponseOutput {
	return o
}

// Property address
func (o RedshiftClusterEndpointResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterEndpointResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Property port
func (o RedshiftClusterEndpointResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterEndpointResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type RedshiftClusterEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (RedshiftClusterEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterEndpointResponse)(nil)).Elem()
}

func (o RedshiftClusterEndpointResponsePtrOutput) ToRedshiftClusterEndpointResponsePtrOutput() RedshiftClusterEndpointResponsePtrOutput {
	return o
}

func (o RedshiftClusterEndpointResponsePtrOutput) ToRedshiftClusterEndpointResponsePtrOutputWithContext(ctx context.Context) RedshiftClusterEndpointResponsePtrOutput {
	return o
}

func (o RedshiftClusterEndpointResponsePtrOutput) Elem() RedshiftClusterEndpointResponseOutput {
	return o.ApplyT(func(v *RedshiftClusterEndpointResponse) RedshiftClusterEndpointResponse {
		if v != nil {
			return *v
		}
		var ret RedshiftClusterEndpointResponse
		return ret
	}).(RedshiftClusterEndpointResponseOutput)
}

// Property address
func (o RedshiftClusterEndpointResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Property port
func (o RedshiftClusterEndpointResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Definition of RedshiftClusterParameterGroup
type RedshiftClusterParameterGroupProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRedshiftClusterParameterGroupProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// RedshiftClusterParameterGroupPropertiesInput is an input type that accepts RedshiftClusterParameterGroupPropertiesArgs and RedshiftClusterParameterGroupPropertiesOutput values.
// You can construct a concrete instance of `RedshiftClusterParameterGroupPropertiesInput` via:
//
//	RedshiftClusterParameterGroupPropertiesArgs{...}
type RedshiftClusterParameterGroupPropertiesInput interface {
	pulumi.Input

	ToRedshiftClusterParameterGroupPropertiesOutput() RedshiftClusterParameterGroupPropertiesOutput
	ToRedshiftClusterParameterGroupPropertiesOutputWithContext(context.Context) RedshiftClusterParameterGroupPropertiesOutput
}

// Definition of RedshiftClusterParameterGroup
type RedshiftClusterParameterGroupPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRedshiftClusterParameterGroupPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (RedshiftClusterParameterGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterParameterGroupProperties)(nil)).Elem()
}

func (i RedshiftClusterParameterGroupPropertiesArgs) ToRedshiftClusterParameterGroupPropertiesOutput() RedshiftClusterParameterGroupPropertiesOutput {
	return i.ToRedshiftClusterParameterGroupPropertiesOutputWithContext(context.Background())
}

func (i RedshiftClusterParameterGroupPropertiesArgs) ToRedshiftClusterParameterGroupPropertiesOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterParameterGroupPropertiesOutput)
}

func (i RedshiftClusterParameterGroupPropertiesArgs) ToRedshiftClusterParameterGroupPropertiesPtrOutput() RedshiftClusterParameterGroupPropertiesPtrOutput {
	return i.ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i RedshiftClusterParameterGroupPropertiesArgs) ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterParameterGroupPropertiesOutput).ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(ctx)
}

// RedshiftClusterParameterGroupPropertiesPtrInput is an input type that accepts RedshiftClusterParameterGroupPropertiesArgs, RedshiftClusterParameterGroupPropertiesPtr and RedshiftClusterParameterGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `RedshiftClusterParameterGroupPropertiesPtrInput` via:
//
//	        RedshiftClusterParameterGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type RedshiftClusterParameterGroupPropertiesPtrInput interface {
	pulumi.Input

	ToRedshiftClusterParameterGroupPropertiesPtrOutput() RedshiftClusterParameterGroupPropertiesPtrOutput
	ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(context.Context) RedshiftClusterParameterGroupPropertiesPtrOutput
}

type redshiftClusterParameterGroupPropertiesPtrType RedshiftClusterParameterGroupPropertiesArgs

func RedshiftClusterParameterGroupPropertiesPtr(v *RedshiftClusterParameterGroupPropertiesArgs) RedshiftClusterParameterGroupPropertiesPtrInput {
	return (*redshiftClusterParameterGroupPropertiesPtrType)(v)
}

func (*redshiftClusterParameterGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterParameterGroupProperties)(nil)).Elem()
}

func (i *redshiftClusterParameterGroupPropertiesPtrType) ToRedshiftClusterParameterGroupPropertiesPtrOutput() RedshiftClusterParameterGroupPropertiesPtrOutput {
	return i.ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *redshiftClusterParameterGroupPropertiesPtrType) ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterParameterGroupPropertiesPtrOutput)
}

// Definition of RedshiftClusterParameterGroup
type RedshiftClusterParameterGroupPropertiesOutput struct{ *pulumi.OutputState }

func (RedshiftClusterParameterGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterParameterGroupProperties)(nil)).Elem()
}

func (o RedshiftClusterParameterGroupPropertiesOutput) ToRedshiftClusterParameterGroupPropertiesOutput() RedshiftClusterParameterGroupPropertiesOutput {
	return o
}

func (o RedshiftClusterParameterGroupPropertiesOutput) ToRedshiftClusterParameterGroupPropertiesOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesOutput {
	return o
}

func (o RedshiftClusterParameterGroupPropertiesOutput) ToRedshiftClusterParameterGroupPropertiesPtrOutput() RedshiftClusterParameterGroupPropertiesPtrOutput {
	return o.ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o RedshiftClusterParameterGroupPropertiesOutput) ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedshiftClusterParameterGroupProperties) *RedshiftClusterParameterGroupProperties {
		return &v
	}).(RedshiftClusterParameterGroupPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RedshiftClusterParameterGroupPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RedshiftClusterParameterGroupPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RedshiftClusterParameterGroupPropertiesOutput) AwsProperties() AwsRedshiftClusterParameterGroupPropertiesPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *AwsRedshiftClusterParameterGroupProperties {
		return v.AwsProperties
	}).(AwsRedshiftClusterParameterGroupPropertiesPtrOutput)
}

// AWS Region
func (o RedshiftClusterParameterGroupPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RedshiftClusterParameterGroupPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RedshiftClusterParameterGroupPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RedshiftClusterParameterGroupPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RedshiftClusterParameterGroupPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RedshiftClusterParameterGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RedshiftClusterParameterGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterParameterGroupProperties)(nil)).Elem()
}

func (o RedshiftClusterParameterGroupPropertiesPtrOutput) ToRedshiftClusterParameterGroupPropertiesPtrOutput() RedshiftClusterParameterGroupPropertiesPtrOutput {
	return o
}

func (o RedshiftClusterParameterGroupPropertiesPtrOutput) ToRedshiftClusterParameterGroupPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesPtrOutput {
	return o
}

func (o RedshiftClusterParameterGroupPropertiesPtrOutput) Elem() RedshiftClusterParameterGroupPropertiesOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) RedshiftClusterParameterGroupProperties {
		if v != nil {
			return *v
		}
		var ret RedshiftClusterParameterGroupProperties
		return ret
	}).(RedshiftClusterParameterGroupPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) AwsProperties() AwsRedshiftClusterParameterGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *AwsRedshiftClusterParameterGroupProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRedshiftClusterParameterGroupPropertiesPtrOutput)
}

// AWS Region
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RedshiftClusterParameterGroupPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterParameterGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RedshiftClusterParameterGroup
type RedshiftClusterParameterGroupPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRedshiftClusterParameterGroupPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of RedshiftClusterParameterGroup
type RedshiftClusterParameterGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RedshiftClusterParameterGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterParameterGroupPropertiesResponse)(nil)).Elem()
}

func (o RedshiftClusterParameterGroupPropertiesResponseOutput) ToRedshiftClusterParameterGroupPropertiesResponseOutput() RedshiftClusterParameterGroupPropertiesResponseOutput {
	return o
}

func (o RedshiftClusterParameterGroupPropertiesResponseOutput) ToRedshiftClusterParameterGroupPropertiesResponseOutputWithContext(ctx context.Context) RedshiftClusterParameterGroupPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) AwsProperties() AwsRedshiftClusterParameterGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *AwsRedshiftClusterParameterGroupPropertiesResponse {
		return v.AwsProperties
	}).(AwsRedshiftClusterParameterGroupPropertiesResponsePtrOutput)
}

// AWS Region
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RedshiftClusterParameterGroupPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterParameterGroupPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of RedshiftCluster
type RedshiftClusterProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRedshiftClusterProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// RedshiftClusterPropertiesInput is an input type that accepts RedshiftClusterPropertiesArgs and RedshiftClusterPropertiesOutput values.
// You can construct a concrete instance of `RedshiftClusterPropertiesInput` via:
//
//	RedshiftClusterPropertiesArgs{...}
type RedshiftClusterPropertiesInput interface {
	pulumi.Input

	ToRedshiftClusterPropertiesOutput() RedshiftClusterPropertiesOutput
	ToRedshiftClusterPropertiesOutputWithContext(context.Context) RedshiftClusterPropertiesOutput
}

// Definition of RedshiftCluster
type RedshiftClusterPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRedshiftClusterPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (RedshiftClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterProperties)(nil)).Elem()
}

func (i RedshiftClusterPropertiesArgs) ToRedshiftClusterPropertiesOutput() RedshiftClusterPropertiesOutput {
	return i.ToRedshiftClusterPropertiesOutputWithContext(context.Background())
}

func (i RedshiftClusterPropertiesArgs) ToRedshiftClusterPropertiesOutputWithContext(ctx context.Context) RedshiftClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterPropertiesOutput)
}

func (i RedshiftClusterPropertiesArgs) ToRedshiftClusterPropertiesPtrOutput() RedshiftClusterPropertiesPtrOutput {
	return i.ToRedshiftClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i RedshiftClusterPropertiesArgs) ToRedshiftClusterPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterPropertiesOutput).ToRedshiftClusterPropertiesPtrOutputWithContext(ctx)
}

// RedshiftClusterPropertiesPtrInput is an input type that accepts RedshiftClusterPropertiesArgs, RedshiftClusterPropertiesPtr and RedshiftClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `RedshiftClusterPropertiesPtrInput` via:
//
//	        RedshiftClusterPropertiesArgs{...}
//
//	or:
//
//	        nil
type RedshiftClusterPropertiesPtrInput interface {
	pulumi.Input

	ToRedshiftClusterPropertiesPtrOutput() RedshiftClusterPropertiesPtrOutput
	ToRedshiftClusterPropertiesPtrOutputWithContext(context.Context) RedshiftClusterPropertiesPtrOutput
}

type redshiftClusterPropertiesPtrType RedshiftClusterPropertiesArgs

func RedshiftClusterPropertiesPtr(v *RedshiftClusterPropertiesArgs) RedshiftClusterPropertiesPtrInput {
	return (*redshiftClusterPropertiesPtrType)(v)
}

func (*redshiftClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterProperties)(nil)).Elem()
}

func (i *redshiftClusterPropertiesPtrType) ToRedshiftClusterPropertiesPtrOutput() RedshiftClusterPropertiesPtrOutput {
	return i.ToRedshiftClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *redshiftClusterPropertiesPtrType) ToRedshiftClusterPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedshiftClusterPropertiesPtrOutput)
}

// Definition of RedshiftCluster
type RedshiftClusterPropertiesOutput struct{ *pulumi.OutputState }

func (RedshiftClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterProperties)(nil)).Elem()
}

func (o RedshiftClusterPropertiesOutput) ToRedshiftClusterPropertiesOutput() RedshiftClusterPropertiesOutput {
	return o
}

func (o RedshiftClusterPropertiesOutput) ToRedshiftClusterPropertiesOutputWithContext(ctx context.Context) RedshiftClusterPropertiesOutput {
	return o
}

func (o RedshiftClusterPropertiesOutput) ToRedshiftClusterPropertiesPtrOutput() RedshiftClusterPropertiesPtrOutput {
	return o.ToRedshiftClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o RedshiftClusterPropertiesOutput) ToRedshiftClusterPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedshiftClusterProperties) *RedshiftClusterProperties {
		return &v
	}).(RedshiftClusterPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o RedshiftClusterPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RedshiftClusterPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RedshiftClusterPropertiesOutput) AwsProperties() AwsRedshiftClusterPropertiesPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *AwsRedshiftClusterProperties { return v.AwsProperties }).(AwsRedshiftClusterPropertiesPtrOutput)
}

// AWS Region
func (o RedshiftClusterPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RedshiftClusterPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RedshiftClusterPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RedshiftClusterPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RedshiftClusterPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type RedshiftClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RedshiftClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedshiftClusterProperties)(nil)).Elem()
}

func (o RedshiftClusterPropertiesPtrOutput) ToRedshiftClusterPropertiesPtrOutput() RedshiftClusterPropertiesPtrOutput {
	return o
}

func (o RedshiftClusterPropertiesPtrOutput) ToRedshiftClusterPropertiesPtrOutputWithContext(ctx context.Context) RedshiftClusterPropertiesPtrOutput {
	return o
}

func (o RedshiftClusterPropertiesPtrOutput) Elem() RedshiftClusterPropertiesOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) RedshiftClusterProperties {
		if v != nil {
			return *v
		}
		var ret RedshiftClusterProperties
		return ret
	}).(RedshiftClusterPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o RedshiftClusterPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RedshiftClusterPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RedshiftClusterPropertiesPtrOutput) AwsProperties() AwsRedshiftClusterPropertiesPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *AwsRedshiftClusterProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRedshiftClusterPropertiesPtrOutput)
}

// AWS Region
func (o RedshiftClusterPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RedshiftClusterPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RedshiftClusterPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o RedshiftClusterPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RedshiftClusterPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedshiftClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of RedshiftCluster
type RedshiftClusterPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRedshiftClusterPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of RedshiftCluster
type RedshiftClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RedshiftClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedshiftClusterPropertiesResponse)(nil)).Elem()
}

func (o RedshiftClusterPropertiesResponseOutput) ToRedshiftClusterPropertiesResponseOutput() RedshiftClusterPropertiesResponseOutput {
	return o
}

func (o RedshiftClusterPropertiesResponseOutput) ToRedshiftClusterPropertiesResponseOutputWithContext(ctx context.Context) RedshiftClusterPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o RedshiftClusterPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o RedshiftClusterPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o RedshiftClusterPropertiesResponseOutput) AwsProperties() AwsRedshiftClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *AwsRedshiftClusterPropertiesResponse {
		return v.AwsProperties
	}).(AwsRedshiftClusterPropertiesResponsePtrOutput)
}

// AWS Region
func (o RedshiftClusterPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o RedshiftClusterPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o RedshiftClusterPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o RedshiftClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o RedshiftClusterPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o RedshiftClusterPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedshiftClusterPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of ReferenceSets
type ReferenceSets struct {
	// Property ipSetReferences
	IpSetReferences map[string]IPSetReference `pulumi:"ipSetReferences"`
}

// ReferenceSetsInput is an input type that accepts ReferenceSetsArgs and ReferenceSetsOutput values.
// You can construct a concrete instance of `ReferenceSetsInput` via:
//
//	ReferenceSetsArgs{...}
type ReferenceSetsInput interface {
	pulumi.Input

	ToReferenceSetsOutput() ReferenceSetsOutput
	ToReferenceSetsOutputWithContext(context.Context) ReferenceSetsOutput
}

// Definition of ReferenceSets
type ReferenceSetsArgs struct {
	// Property ipSetReferences
	IpSetReferences IPSetReferenceMapInput `pulumi:"ipSetReferences"`
}

func (ReferenceSetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceSets)(nil)).Elem()
}

func (i ReferenceSetsArgs) ToReferenceSetsOutput() ReferenceSetsOutput {
	return i.ToReferenceSetsOutputWithContext(context.Background())
}

func (i ReferenceSetsArgs) ToReferenceSetsOutputWithContext(ctx context.Context) ReferenceSetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceSetsOutput)
}

func (i ReferenceSetsArgs) ToReferenceSetsPtrOutput() ReferenceSetsPtrOutput {
	return i.ToReferenceSetsPtrOutputWithContext(context.Background())
}

func (i ReferenceSetsArgs) ToReferenceSetsPtrOutputWithContext(ctx context.Context) ReferenceSetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceSetsOutput).ToReferenceSetsPtrOutputWithContext(ctx)
}

// ReferenceSetsPtrInput is an input type that accepts ReferenceSetsArgs, ReferenceSetsPtr and ReferenceSetsPtrOutput values.
// You can construct a concrete instance of `ReferenceSetsPtrInput` via:
//
//	        ReferenceSetsArgs{...}
//
//	or:
//
//	        nil
type ReferenceSetsPtrInput interface {
	pulumi.Input

	ToReferenceSetsPtrOutput() ReferenceSetsPtrOutput
	ToReferenceSetsPtrOutputWithContext(context.Context) ReferenceSetsPtrOutput
}

type referenceSetsPtrType ReferenceSetsArgs

func ReferenceSetsPtr(v *ReferenceSetsArgs) ReferenceSetsPtrInput {
	return (*referenceSetsPtrType)(v)
}

func (*referenceSetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceSets)(nil)).Elem()
}

func (i *referenceSetsPtrType) ToReferenceSetsPtrOutput() ReferenceSetsPtrOutput {
	return i.ToReferenceSetsPtrOutputWithContext(context.Background())
}

func (i *referenceSetsPtrType) ToReferenceSetsPtrOutputWithContext(ctx context.Context) ReferenceSetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceSetsPtrOutput)
}

// Definition of ReferenceSets
type ReferenceSetsOutput struct{ *pulumi.OutputState }

func (ReferenceSetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceSets)(nil)).Elem()
}

func (o ReferenceSetsOutput) ToReferenceSetsOutput() ReferenceSetsOutput {
	return o
}

func (o ReferenceSetsOutput) ToReferenceSetsOutputWithContext(ctx context.Context) ReferenceSetsOutput {
	return o
}

func (o ReferenceSetsOutput) ToReferenceSetsPtrOutput() ReferenceSetsPtrOutput {
	return o.ToReferenceSetsPtrOutputWithContext(context.Background())
}

func (o ReferenceSetsOutput) ToReferenceSetsPtrOutputWithContext(ctx context.Context) ReferenceSetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReferenceSets) *ReferenceSets {
		return &v
	}).(ReferenceSetsPtrOutput)
}

// Property ipSetReferences
func (o ReferenceSetsOutput) IpSetReferences() IPSetReferenceMapOutput {
	return o.ApplyT(func(v ReferenceSets) map[string]IPSetReference { return v.IpSetReferences }).(IPSetReferenceMapOutput)
}

type ReferenceSetsPtrOutput struct{ *pulumi.OutputState }

func (ReferenceSetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceSets)(nil)).Elem()
}

func (o ReferenceSetsPtrOutput) ToReferenceSetsPtrOutput() ReferenceSetsPtrOutput {
	return o
}

func (o ReferenceSetsPtrOutput) ToReferenceSetsPtrOutputWithContext(ctx context.Context) ReferenceSetsPtrOutput {
	return o
}

func (o ReferenceSetsPtrOutput) Elem() ReferenceSetsOutput {
	return o.ApplyT(func(v *ReferenceSets) ReferenceSets {
		if v != nil {
			return *v
		}
		var ret ReferenceSets
		return ret
	}).(ReferenceSetsOutput)
}

// Property ipSetReferences
func (o ReferenceSetsPtrOutput) IpSetReferences() IPSetReferenceMapOutput {
	return o.ApplyT(func(v *ReferenceSets) map[string]IPSetReference {
		if v == nil {
			return nil
		}
		return v.IpSetReferences
	}).(IPSetReferenceMapOutput)
}

// Definition of ReferenceSets
type ReferenceSetsResponse struct {
	// Property ipSetReferences
	IpSetReferences map[string]IPSetReferenceResponse `pulumi:"ipSetReferences"`
}

// Definition of ReferenceSets
type ReferenceSetsResponseOutput struct{ *pulumi.OutputState }

func (ReferenceSetsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceSetsResponse)(nil)).Elem()
}

func (o ReferenceSetsResponseOutput) ToReferenceSetsResponseOutput() ReferenceSetsResponseOutput {
	return o
}

func (o ReferenceSetsResponseOutput) ToReferenceSetsResponseOutputWithContext(ctx context.Context) ReferenceSetsResponseOutput {
	return o
}

// Property ipSetReferences
func (o ReferenceSetsResponseOutput) IpSetReferences() IPSetReferenceResponseMapOutput {
	return o.ApplyT(func(v ReferenceSetsResponse) map[string]IPSetReferenceResponse { return v.IpSetReferences }).(IPSetReferenceResponseMapOutput)
}

type ReferenceSetsResponsePtrOutput struct{ *pulumi.OutputState }

func (ReferenceSetsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceSetsResponse)(nil)).Elem()
}

func (o ReferenceSetsResponsePtrOutput) ToReferenceSetsResponsePtrOutput() ReferenceSetsResponsePtrOutput {
	return o
}

func (o ReferenceSetsResponsePtrOutput) ToReferenceSetsResponsePtrOutputWithContext(ctx context.Context) ReferenceSetsResponsePtrOutput {
	return o
}

func (o ReferenceSetsResponsePtrOutput) Elem() ReferenceSetsResponseOutput {
	return o.ApplyT(func(v *ReferenceSetsResponse) ReferenceSetsResponse {
		if v != nil {
			return *v
		}
		var ret ReferenceSetsResponse
		return ret
	}).(ReferenceSetsResponseOutput)
}

// Property ipSetReferences
func (o ReferenceSetsResponsePtrOutput) IpSetReferences() IPSetReferenceResponseMapOutput {
	return o.ApplyT(func(v *ReferenceSetsResponse) map[string]IPSetReferenceResponse {
		if v == nil {
			return nil
		}
		return v.IpSetReferences
	}).(IPSetReferenceResponseMapOutput)
}

// Definition of RegistryCredential
type RegistryCredential struct {
	// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
	Credential *string `pulumi:"credential"`
	// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
	CredentialProvider *CredentialProviderTypeEnumValue `pulumi:"credentialProvider"`
}

// RegistryCredentialInput is an input type that accepts RegistryCredentialArgs and RegistryCredentialOutput values.
// You can construct a concrete instance of `RegistryCredentialInput` via:
//
//	RegistryCredentialArgs{...}
type RegistryCredentialInput interface {
	pulumi.Input

	ToRegistryCredentialOutput() RegistryCredentialOutput
	ToRegistryCredentialOutputWithContext(context.Context) RegistryCredentialOutput
}

// Definition of RegistryCredential
type RegistryCredentialArgs struct {
	// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
	Credential pulumi.StringPtrInput `pulumi:"credential"`
	// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
	CredentialProvider CredentialProviderTypeEnumValuePtrInput `pulumi:"credentialProvider"`
}

func (RegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredential)(nil)).Elem()
}

func (i RegistryCredentialArgs) ToRegistryCredentialOutput() RegistryCredentialOutput {
	return i.ToRegistryCredentialOutputWithContext(context.Background())
}

func (i RegistryCredentialArgs) ToRegistryCredentialOutputWithContext(ctx context.Context) RegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialOutput)
}

func (i RegistryCredentialArgs) ToRegistryCredentialPtrOutput() RegistryCredentialPtrOutput {
	return i.ToRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i RegistryCredentialArgs) ToRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialOutput).ToRegistryCredentialPtrOutputWithContext(ctx)
}

// RegistryCredentialPtrInput is an input type that accepts RegistryCredentialArgs, RegistryCredentialPtr and RegistryCredentialPtrOutput values.
// You can construct a concrete instance of `RegistryCredentialPtrInput` via:
//
//	        RegistryCredentialArgs{...}
//
//	or:
//
//	        nil
type RegistryCredentialPtrInput interface {
	pulumi.Input

	ToRegistryCredentialPtrOutput() RegistryCredentialPtrOutput
	ToRegistryCredentialPtrOutputWithContext(context.Context) RegistryCredentialPtrOutput
}

type registryCredentialPtrType RegistryCredentialArgs

func RegistryCredentialPtr(v *RegistryCredentialArgs) RegistryCredentialPtrInput {
	return (*registryCredentialPtrType)(v)
}

func (*registryCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryCredential)(nil)).Elem()
}

func (i *registryCredentialPtrType) ToRegistryCredentialPtrOutput() RegistryCredentialPtrOutput {
	return i.ToRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i *registryCredentialPtrType) ToRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialPtrOutput)
}

// Definition of RegistryCredential
type RegistryCredentialOutput struct{ *pulumi.OutputState }

func (RegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredential)(nil)).Elem()
}

func (o RegistryCredentialOutput) ToRegistryCredentialOutput() RegistryCredentialOutput {
	return o
}

func (o RegistryCredentialOutput) ToRegistryCredentialOutputWithContext(ctx context.Context) RegistryCredentialOutput {
	return o
}

func (o RegistryCredentialOutput) ToRegistryCredentialPtrOutput() RegistryCredentialPtrOutput {
	return o.ToRegistryCredentialPtrOutputWithContext(context.Background())
}

func (o RegistryCredentialOutput) ToRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryCredential) *RegistryCredential {
		return &v
	}).(RegistryCredentialPtrOutput)
}

// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
func (o RegistryCredentialOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredential) *string { return v.Credential }).(pulumi.StringPtrOutput)
}

// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
func (o RegistryCredentialOutput) CredentialProvider() CredentialProviderTypeEnumValuePtrOutput {
	return o.ApplyT(func(v RegistryCredential) *CredentialProviderTypeEnumValue { return v.CredentialProvider }).(CredentialProviderTypeEnumValuePtrOutput)
}

type RegistryCredentialPtrOutput struct{ *pulumi.OutputState }

func (RegistryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryCredential)(nil)).Elem()
}

func (o RegistryCredentialPtrOutput) ToRegistryCredentialPtrOutput() RegistryCredentialPtrOutput {
	return o
}

func (o RegistryCredentialPtrOutput) ToRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryCredentialPtrOutput {
	return o
}

func (o RegistryCredentialPtrOutput) Elem() RegistryCredentialOutput {
	return o.ApplyT(func(v *RegistryCredential) RegistryCredential {
		if v != nil {
			return *v
		}
		var ret RegistryCredential
		return ret
	}).(RegistryCredentialOutput)
}

// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
func (o RegistryCredentialPtrOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryCredential) *string {
		if v == nil {
			return nil
		}
		return v.Credential
	}).(pulumi.StringPtrOutput)
}

// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
func (o RegistryCredentialPtrOutput) CredentialProvider() CredentialProviderTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *RegistryCredential) *CredentialProviderTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.CredentialProvider
	}).(CredentialProviderTypeEnumValuePtrOutput)
}

// Definition of RegistryCredential
type RegistryCredentialResponse struct {
	// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
	Credential *string `pulumi:"credential"`
	// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
	CredentialProvider *CredentialProviderTypeEnumValueResponse `pulumi:"credentialProvider"`
}

// Definition of RegistryCredential
type RegistryCredentialResponseOutput struct{ *pulumi.OutputState }

func (RegistryCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredentialResponse)(nil)).Elem()
}

func (o RegistryCredentialResponseOutput) ToRegistryCredentialResponseOutput() RegistryCredentialResponseOutput {
	return o
}

func (o RegistryCredentialResponseOutput) ToRegistryCredentialResponseOutputWithContext(ctx context.Context) RegistryCredentialResponseOutput {
	return o
}

// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
func (o RegistryCredentialResponseOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentialResponse) *string { return v.Credential }).(pulumi.StringPtrOutput)
}

// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
func (o RegistryCredentialResponseOutput) CredentialProvider() CredentialProviderTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v RegistryCredentialResponse) *CredentialProviderTypeEnumValueResponse {
		return v.CredentialProvider
	}).(CredentialProviderTypeEnumValueResponsePtrOutput)
}

type RegistryCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryCredentialResponse)(nil)).Elem()
}

func (o RegistryCredentialResponsePtrOutput) ToRegistryCredentialResponsePtrOutput() RegistryCredentialResponsePtrOutput {
	return o
}

func (o RegistryCredentialResponsePtrOutput) ToRegistryCredentialResponsePtrOutputWithContext(ctx context.Context) RegistryCredentialResponsePtrOutput {
	return o
}

func (o RegistryCredentialResponsePtrOutput) Elem() RegistryCredentialResponseOutput {
	return o.ApplyT(func(v *RegistryCredentialResponse) RegistryCredentialResponse {
		if v != nil {
			return *v
		}
		var ret RegistryCredentialResponse
		return ret
	}).(RegistryCredentialResponseOutput)
}

// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
func (o RegistryCredentialResponsePtrOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.Credential
	}).(pulumi.StringPtrOutput)
}

// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager. </p>
func (o RegistryCredentialResponsePtrOutput) CredentialProvider() CredentialProviderTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *RegistryCredentialResponse) *CredentialProviderTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.CredentialProvider
	}).(CredentialProviderTypeEnumValueResponsePtrOutput)
}

// Definition of RemoteAccess
type RemoteAccess struct {
	// Property ec2SshKey
	Ec2SshKey *string `pulumi:"ec2SshKey"`
	// Property sourceSecurityGroups
	SourceSecurityGroups []string `pulumi:"sourceSecurityGroups"`
}

// RemoteAccessInput is an input type that accepts RemoteAccessArgs and RemoteAccessOutput values.
// You can construct a concrete instance of `RemoteAccessInput` via:
//
//	RemoteAccessArgs{...}
type RemoteAccessInput interface {
	pulumi.Input

	ToRemoteAccessOutput() RemoteAccessOutput
	ToRemoteAccessOutputWithContext(context.Context) RemoteAccessOutput
}

// Definition of RemoteAccess
type RemoteAccessArgs struct {
	// Property ec2SshKey
	Ec2SshKey pulumi.StringPtrInput `pulumi:"ec2SshKey"`
	// Property sourceSecurityGroups
	SourceSecurityGroups pulumi.StringArrayInput `pulumi:"sourceSecurityGroups"`
}

func (RemoteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAccess)(nil)).Elem()
}

func (i RemoteAccessArgs) ToRemoteAccessOutput() RemoteAccessOutput {
	return i.ToRemoteAccessOutputWithContext(context.Background())
}

func (i RemoteAccessArgs) ToRemoteAccessOutputWithContext(ctx context.Context) RemoteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAccessOutput)
}

func (i RemoteAccessArgs) ToRemoteAccessPtrOutput() RemoteAccessPtrOutput {
	return i.ToRemoteAccessPtrOutputWithContext(context.Background())
}

func (i RemoteAccessArgs) ToRemoteAccessPtrOutputWithContext(ctx context.Context) RemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAccessOutput).ToRemoteAccessPtrOutputWithContext(ctx)
}

// RemoteAccessPtrInput is an input type that accepts RemoteAccessArgs, RemoteAccessPtr and RemoteAccessPtrOutput values.
// You can construct a concrete instance of `RemoteAccessPtrInput` via:
//
//	        RemoteAccessArgs{...}
//
//	or:
//
//	        nil
type RemoteAccessPtrInput interface {
	pulumi.Input

	ToRemoteAccessPtrOutput() RemoteAccessPtrOutput
	ToRemoteAccessPtrOutputWithContext(context.Context) RemoteAccessPtrOutput
}

type remoteAccessPtrType RemoteAccessArgs

func RemoteAccessPtr(v *RemoteAccessArgs) RemoteAccessPtrInput {
	return (*remoteAccessPtrType)(v)
}

func (*remoteAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteAccess)(nil)).Elem()
}

func (i *remoteAccessPtrType) ToRemoteAccessPtrOutput() RemoteAccessPtrOutput {
	return i.ToRemoteAccessPtrOutputWithContext(context.Background())
}

func (i *remoteAccessPtrType) ToRemoteAccessPtrOutputWithContext(ctx context.Context) RemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAccessPtrOutput)
}

// Definition of RemoteAccess
type RemoteAccessOutput struct{ *pulumi.OutputState }

func (RemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAccess)(nil)).Elem()
}

func (o RemoteAccessOutput) ToRemoteAccessOutput() RemoteAccessOutput {
	return o
}

func (o RemoteAccessOutput) ToRemoteAccessOutputWithContext(ctx context.Context) RemoteAccessOutput {
	return o
}

func (o RemoteAccessOutput) ToRemoteAccessPtrOutput() RemoteAccessPtrOutput {
	return o.ToRemoteAccessPtrOutputWithContext(context.Background())
}

func (o RemoteAccessOutput) ToRemoteAccessPtrOutputWithContext(ctx context.Context) RemoteAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RemoteAccess) *RemoteAccess {
		return &v
	}).(RemoteAccessPtrOutput)
}

// Property ec2SshKey
func (o RemoteAccessOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemoteAccess) *string { return v.Ec2SshKey }).(pulumi.StringPtrOutput)
}

// Property sourceSecurityGroups
func (o RemoteAccessOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAccess) []string { return v.SourceSecurityGroups }).(pulumi.StringArrayOutput)
}

type RemoteAccessPtrOutput struct{ *pulumi.OutputState }

func (RemoteAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteAccess)(nil)).Elem()
}

func (o RemoteAccessPtrOutput) ToRemoteAccessPtrOutput() RemoteAccessPtrOutput {
	return o
}

func (o RemoteAccessPtrOutput) ToRemoteAccessPtrOutputWithContext(ctx context.Context) RemoteAccessPtrOutput {
	return o
}

func (o RemoteAccessPtrOutput) Elem() RemoteAccessOutput {
	return o.ApplyT(func(v *RemoteAccess) RemoteAccess {
		if v != nil {
			return *v
		}
		var ret RemoteAccess
		return ret
	}).(RemoteAccessOutput)
}

// Property ec2SshKey
func (o RemoteAccessPtrOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteAccess) *string {
		if v == nil {
			return nil
		}
		return v.Ec2SshKey
	}).(pulumi.StringPtrOutput)
}

// Property sourceSecurityGroups
func (o RemoteAccessPtrOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteAccess) []string {
		if v == nil {
			return nil
		}
		return v.SourceSecurityGroups
	}).(pulumi.StringArrayOutput)
}

// Definition of RemoteAccess
type RemoteAccessResponse struct {
	// Property ec2SshKey
	Ec2SshKey *string `pulumi:"ec2SshKey"`
	// Property sourceSecurityGroups
	SourceSecurityGroups []string `pulumi:"sourceSecurityGroups"`
}

// Definition of RemoteAccess
type RemoteAccessResponseOutput struct{ *pulumi.OutputState }

func (RemoteAccessResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAccessResponse)(nil)).Elem()
}

func (o RemoteAccessResponseOutput) ToRemoteAccessResponseOutput() RemoteAccessResponseOutput {
	return o
}

func (o RemoteAccessResponseOutput) ToRemoteAccessResponseOutputWithContext(ctx context.Context) RemoteAccessResponseOutput {
	return o
}

// Property ec2SshKey
func (o RemoteAccessResponseOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemoteAccessResponse) *string { return v.Ec2SshKey }).(pulumi.StringPtrOutput)
}

// Property sourceSecurityGroups
func (o RemoteAccessResponseOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAccessResponse) []string { return v.SourceSecurityGroups }).(pulumi.StringArrayOutput)
}

type RemoteAccessResponsePtrOutput struct{ *pulumi.OutputState }

func (RemoteAccessResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteAccessResponse)(nil)).Elem()
}

func (o RemoteAccessResponsePtrOutput) ToRemoteAccessResponsePtrOutput() RemoteAccessResponsePtrOutput {
	return o
}

func (o RemoteAccessResponsePtrOutput) ToRemoteAccessResponsePtrOutputWithContext(ctx context.Context) RemoteAccessResponsePtrOutput {
	return o
}

func (o RemoteAccessResponsePtrOutput) Elem() RemoteAccessResponseOutput {
	return o.ApplyT(func(v *RemoteAccessResponse) RemoteAccessResponse {
		if v != nil {
			return *v
		}
		var ret RemoteAccessResponse
		return ret
	}).(RemoteAccessResponseOutput)
}

// Property ec2SshKey
func (o RemoteAccessResponsePtrOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteAccessResponse) *string {
		if v == nil {
			return nil
		}
		return v.Ec2SshKey
	}).(pulumi.StringPtrOutput)
}

// Property sourceSecurityGroups
func (o RemoteAccessResponsePtrOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemoteAccessResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceSecurityGroups
	}).(pulumi.StringArrayOutput)
}

// Definition of RenewalEligibilityEnumValue
type RenewalEligibilityEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// RenewalEligibilityEnumValueInput is an input type that accepts RenewalEligibilityEnumValueArgs and RenewalEligibilityEnumValueOutput values.
// You can construct a concrete instance of `RenewalEligibilityEnumValueInput` via:
//
//	RenewalEligibilityEnumValueArgs{...}
type RenewalEligibilityEnumValueInput interface {
	pulumi.Input

	ToRenewalEligibilityEnumValueOutput() RenewalEligibilityEnumValueOutput
	ToRenewalEligibilityEnumValueOutputWithContext(context.Context) RenewalEligibilityEnumValueOutput
}

// Definition of RenewalEligibilityEnumValue
type RenewalEligibilityEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RenewalEligibilityEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RenewalEligibilityEnumValue)(nil)).Elem()
}

func (i RenewalEligibilityEnumValueArgs) ToRenewalEligibilityEnumValueOutput() RenewalEligibilityEnumValueOutput {
	return i.ToRenewalEligibilityEnumValueOutputWithContext(context.Background())
}

func (i RenewalEligibilityEnumValueArgs) ToRenewalEligibilityEnumValueOutputWithContext(ctx context.Context) RenewalEligibilityEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RenewalEligibilityEnumValueOutput)
}

func (i RenewalEligibilityEnumValueArgs) ToRenewalEligibilityEnumValuePtrOutput() RenewalEligibilityEnumValuePtrOutput {
	return i.ToRenewalEligibilityEnumValuePtrOutputWithContext(context.Background())
}

func (i RenewalEligibilityEnumValueArgs) ToRenewalEligibilityEnumValuePtrOutputWithContext(ctx context.Context) RenewalEligibilityEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RenewalEligibilityEnumValueOutput).ToRenewalEligibilityEnumValuePtrOutputWithContext(ctx)
}

// RenewalEligibilityEnumValuePtrInput is an input type that accepts RenewalEligibilityEnumValueArgs, RenewalEligibilityEnumValuePtr and RenewalEligibilityEnumValuePtrOutput values.
// You can construct a concrete instance of `RenewalEligibilityEnumValuePtrInput` via:
//
//	        RenewalEligibilityEnumValueArgs{...}
//
//	or:
//
//	        nil
type RenewalEligibilityEnumValuePtrInput interface {
	pulumi.Input

	ToRenewalEligibilityEnumValuePtrOutput() RenewalEligibilityEnumValuePtrOutput
	ToRenewalEligibilityEnumValuePtrOutputWithContext(context.Context) RenewalEligibilityEnumValuePtrOutput
}

type renewalEligibilityEnumValuePtrType RenewalEligibilityEnumValueArgs

func RenewalEligibilityEnumValuePtr(v *RenewalEligibilityEnumValueArgs) RenewalEligibilityEnumValuePtrInput {
	return (*renewalEligibilityEnumValuePtrType)(v)
}

func (*renewalEligibilityEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RenewalEligibilityEnumValue)(nil)).Elem()
}

func (i *renewalEligibilityEnumValuePtrType) ToRenewalEligibilityEnumValuePtrOutput() RenewalEligibilityEnumValuePtrOutput {
	return i.ToRenewalEligibilityEnumValuePtrOutputWithContext(context.Background())
}

func (i *renewalEligibilityEnumValuePtrType) ToRenewalEligibilityEnumValuePtrOutputWithContext(ctx context.Context) RenewalEligibilityEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RenewalEligibilityEnumValuePtrOutput)
}

// Definition of RenewalEligibilityEnumValue
type RenewalEligibilityEnumValueOutput struct{ *pulumi.OutputState }

func (RenewalEligibilityEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RenewalEligibilityEnumValue)(nil)).Elem()
}

func (o RenewalEligibilityEnumValueOutput) ToRenewalEligibilityEnumValueOutput() RenewalEligibilityEnumValueOutput {
	return o
}

func (o RenewalEligibilityEnumValueOutput) ToRenewalEligibilityEnumValueOutputWithContext(ctx context.Context) RenewalEligibilityEnumValueOutput {
	return o
}

func (o RenewalEligibilityEnumValueOutput) ToRenewalEligibilityEnumValuePtrOutput() RenewalEligibilityEnumValuePtrOutput {
	return o.ToRenewalEligibilityEnumValuePtrOutputWithContext(context.Background())
}

func (o RenewalEligibilityEnumValueOutput) ToRenewalEligibilityEnumValuePtrOutputWithContext(ctx context.Context) RenewalEligibilityEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RenewalEligibilityEnumValue) *RenewalEligibilityEnumValue {
		return &v
	}).(RenewalEligibilityEnumValuePtrOutput)
}

// Property value
func (o RenewalEligibilityEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RenewalEligibilityEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RenewalEligibilityEnumValuePtrOutput struct{ *pulumi.OutputState }

func (RenewalEligibilityEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RenewalEligibilityEnumValue)(nil)).Elem()
}

func (o RenewalEligibilityEnumValuePtrOutput) ToRenewalEligibilityEnumValuePtrOutput() RenewalEligibilityEnumValuePtrOutput {
	return o
}

func (o RenewalEligibilityEnumValuePtrOutput) ToRenewalEligibilityEnumValuePtrOutputWithContext(ctx context.Context) RenewalEligibilityEnumValuePtrOutput {
	return o
}

func (o RenewalEligibilityEnumValuePtrOutput) Elem() RenewalEligibilityEnumValueOutput {
	return o.ApplyT(func(v *RenewalEligibilityEnumValue) RenewalEligibilityEnumValue {
		if v != nil {
			return *v
		}
		var ret RenewalEligibilityEnumValue
		return ret
	}).(RenewalEligibilityEnumValueOutput)
}

// Property value
func (o RenewalEligibilityEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RenewalEligibilityEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RenewalEligibilityEnumValue
type RenewalEligibilityEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of RenewalEligibilityEnumValue
type RenewalEligibilityEnumValueResponseOutput struct{ *pulumi.OutputState }

func (RenewalEligibilityEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RenewalEligibilityEnumValueResponse)(nil)).Elem()
}

func (o RenewalEligibilityEnumValueResponseOutput) ToRenewalEligibilityEnumValueResponseOutput() RenewalEligibilityEnumValueResponseOutput {
	return o
}

func (o RenewalEligibilityEnumValueResponseOutput) ToRenewalEligibilityEnumValueResponseOutputWithContext(ctx context.Context) RenewalEligibilityEnumValueResponseOutput {
	return o
}

// Property value
func (o RenewalEligibilityEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RenewalEligibilityEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RenewalEligibilityEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (RenewalEligibilityEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RenewalEligibilityEnumValueResponse)(nil)).Elem()
}

func (o RenewalEligibilityEnumValueResponsePtrOutput) ToRenewalEligibilityEnumValueResponsePtrOutput() RenewalEligibilityEnumValueResponsePtrOutput {
	return o
}

func (o RenewalEligibilityEnumValueResponsePtrOutput) ToRenewalEligibilityEnumValueResponsePtrOutputWithContext(ctx context.Context) RenewalEligibilityEnumValueResponsePtrOutput {
	return o
}

func (o RenewalEligibilityEnumValueResponsePtrOutput) Elem() RenewalEligibilityEnumValueResponseOutput {
	return o.ApplyT(func(v *RenewalEligibilityEnumValueResponse) RenewalEligibilityEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret RenewalEligibilityEnumValueResponse
		return ret
	}).(RenewalEligibilityEnumValueResponseOutput)
}

// Property value
func (o RenewalEligibilityEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RenewalEligibilityEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicaModifications
type ReplicaModifications struct {
	// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: ``Enabled`` | ``Disabled``
	Status *string `pulumi:"status"`
}

// ReplicaModificationsInput is an input type that accepts ReplicaModificationsArgs and ReplicaModificationsOutput values.
// You can construct a concrete instance of `ReplicaModificationsInput` via:
//
//	ReplicaModificationsArgs{...}
type ReplicaModificationsInput interface {
	pulumi.Input

	ToReplicaModificationsOutput() ReplicaModificationsOutput
	ToReplicaModificationsOutputWithContext(context.Context) ReplicaModificationsOutput
}

// Definition of ReplicaModifications
type ReplicaModificationsArgs struct {
	// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: ``Enabled`` | ``Disabled``
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ReplicaModificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaModifications)(nil)).Elem()
}

func (i ReplicaModificationsArgs) ToReplicaModificationsOutput() ReplicaModificationsOutput {
	return i.ToReplicaModificationsOutputWithContext(context.Background())
}

func (i ReplicaModificationsArgs) ToReplicaModificationsOutputWithContext(ctx context.Context) ReplicaModificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaModificationsOutput)
}

func (i ReplicaModificationsArgs) ToReplicaModificationsPtrOutput() ReplicaModificationsPtrOutput {
	return i.ToReplicaModificationsPtrOutputWithContext(context.Background())
}

func (i ReplicaModificationsArgs) ToReplicaModificationsPtrOutputWithContext(ctx context.Context) ReplicaModificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaModificationsOutput).ToReplicaModificationsPtrOutputWithContext(ctx)
}

// ReplicaModificationsPtrInput is an input type that accepts ReplicaModificationsArgs, ReplicaModificationsPtr and ReplicaModificationsPtrOutput values.
// You can construct a concrete instance of `ReplicaModificationsPtrInput` via:
//
//	        ReplicaModificationsArgs{...}
//
//	or:
//
//	        nil
type ReplicaModificationsPtrInput interface {
	pulumi.Input

	ToReplicaModificationsPtrOutput() ReplicaModificationsPtrOutput
	ToReplicaModificationsPtrOutputWithContext(context.Context) ReplicaModificationsPtrOutput
}

type replicaModificationsPtrType ReplicaModificationsArgs

func ReplicaModificationsPtr(v *ReplicaModificationsArgs) ReplicaModificationsPtrInput {
	return (*replicaModificationsPtrType)(v)
}

func (*replicaModificationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaModifications)(nil)).Elem()
}

func (i *replicaModificationsPtrType) ToReplicaModificationsPtrOutput() ReplicaModificationsPtrOutput {
	return i.ToReplicaModificationsPtrOutputWithContext(context.Background())
}

func (i *replicaModificationsPtrType) ToReplicaModificationsPtrOutputWithContext(ctx context.Context) ReplicaModificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaModificationsPtrOutput)
}

// Definition of ReplicaModifications
type ReplicaModificationsOutput struct{ *pulumi.OutputState }

func (ReplicaModificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaModifications)(nil)).Elem()
}

func (o ReplicaModificationsOutput) ToReplicaModificationsOutput() ReplicaModificationsOutput {
	return o
}

func (o ReplicaModificationsOutput) ToReplicaModificationsOutputWithContext(ctx context.Context) ReplicaModificationsOutput {
	return o
}

func (o ReplicaModificationsOutput) ToReplicaModificationsPtrOutput() ReplicaModificationsPtrOutput {
	return o.ToReplicaModificationsPtrOutputWithContext(context.Background())
}

func (o ReplicaModificationsOutput) ToReplicaModificationsPtrOutputWithContext(ctx context.Context) ReplicaModificationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicaModifications) *ReplicaModifications {
		return &v
	}).(ReplicaModificationsPtrOutput)
}

// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: “Enabled“ | “Disabled“
func (o ReplicaModificationsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaModifications) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReplicaModificationsPtrOutput struct{ *pulumi.OutputState }

func (ReplicaModificationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaModifications)(nil)).Elem()
}

func (o ReplicaModificationsPtrOutput) ToReplicaModificationsPtrOutput() ReplicaModificationsPtrOutput {
	return o
}

func (o ReplicaModificationsPtrOutput) ToReplicaModificationsPtrOutputWithContext(ctx context.Context) ReplicaModificationsPtrOutput {
	return o
}

func (o ReplicaModificationsPtrOutput) Elem() ReplicaModificationsOutput {
	return o.ApplyT(func(v *ReplicaModifications) ReplicaModifications {
		if v != nil {
			return *v
		}
		var ret ReplicaModifications
		return ret
	}).(ReplicaModificationsOutput)
}

// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: “Enabled“ | “Disabled“
func (o ReplicaModificationsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaModifications) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicaModifications
type ReplicaModificationsResponse struct {
	// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: ``Enabled`` | ``Disabled``
	Status *string `pulumi:"status"`
}

// Definition of ReplicaModifications
type ReplicaModificationsResponseOutput struct{ *pulumi.OutputState }

func (ReplicaModificationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaModificationsResponse)(nil)).Elem()
}

func (o ReplicaModificationsResponseOutput) ToReplicaModificationsResponseOutput() ReplicaModificationsResponseOutput {
	return o
}

func (o ReplicaModificationsResponseOutput) ToReplicaModificationsResponseOutputWithContext(ctx context.Context) ReplicaModificationsResponseOutput {
	return o
}

// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: “Enabled“ | “Disabled“
func (o ReplicaModificationsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaModificationsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReplicaModificationsResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicaModificationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaModificationsResponse)(nil)).Elem()
}

func (o ReplicaModificationsResponsePtrOutput) ToReplicaModificationsResponsePtrOutput() ReplicaModificationsResponsePtrOutput {
	return o
}

func (o ReplicaModificationsResponsePtrOutput) ToReplicaModificationsResponsePtrOutputWithContext(ctx context.Context) ReplicaModificationsResponsePtrOutput {
	return o
}

func (o ReplicaModificationsResponsePtrOutput) Elem() ReplicaModificationsResponseOutput {
	return o.ApplyT(func(v *ReplicaModificationsResponse) ReplicaModificationsResponse {
		if v != nil {
			return *v
		}
		var ret ReplicaModificationsResponse
		return ret
	}).(ReplicaModificationsResponseOutput)
}

// Specifies whether Amazon S3 replicates modifications on replicas.  *Allowed values*: “Enabled“ | “Disabled“
func (o ReplicaModificationsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaModificationsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicaRegion
type ReplicaRegion struct {
	// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses ``aws/secretsmanager``.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A string that represents a ``Region``, for example 'us-east-1'.
	Region *string `pulumi:"region"`
}

// ReplicaRegionInput is an input type that accepts ReplicaRegionArgs and ReplicaRegionOutput values.
// You can construct a concrete instance of `ReplicaRegionInput` via:
//
//	ReplicaRegionArgs{...}
type ReplicaRegionInput interface {
	pulumi.Input

	ToReplicaRegionOutput() ReplicaRegionOutput
	ToReplicaRegionOutputWithContext(context.Context) ReplicaRegionOutput
}

// Definition of ReplicaRegion
type ReplicaRegionArgs struct {
	// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses ``aws/secretsmanager``.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// A string that represents a ``Region``, for example 'us-east-1'.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (ReplicaRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaRegion)(nil)).Elem()
}

func (i ReplicaRegionArgs) ToReplicaRegionOutput() ReplicaRegionOutput {
	return i.ToReplicaRegionOutputWithContext(context.Background())
}

func (i ReplicaRegionArgs) ToReplicaRegionOutputWithContext(ctx context.Context) ReplicaRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaRegionOutput)
}

// ReplicaRegionArrayInput is an input type that accepts ReplicaRegionArray and ReplicaRegionArrayOutput values.
// You can construct a concrete instance of `ReplicaRegionArrayInput` via:
//
//	ReplicaRegionArray{ ReplicaRegionArgs{...} }
type ReplicaRegionArrayInput interface {
	pulumi.Input

	ToReplicaRegionArrayOutput() ReplicaRegionArrayOutput
	ToReplicaRegionArrayOutputWithContext(context.Context) ReplicaRegionArrayOutput
}

type ReplicaRegionArray []ReplicaRegionInput

func (ReplicaRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaRegion)(nil)).Elem()
}

func (i ReplicaRegionArray) ToReplicaRegionArrayOutput() ReplicaRegionArrayOutput {
	return i.ToReplicaRegionArrayOutputWithContext(context.Background())
}

func (i ReplicaRegionArray) ToReplicaRegionArrayOutputWithContext(ctx context.Context) ReplicaRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaRegionArrayOutput)
}

// Definition of ReplicaRegion
type ReplicaRegionOutput struct{ *pulumi.OutputState }

func (ReplicaRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaRegion)(nil)).Elem()
}

func (o ReplicaRegionOutput) ToReplicaRegionOutput() ReplicaRegionOutput {
	return o
}

func (o ReplicaRegionOutput) ToReplicaRegionOutputWithContext(ctx context.Context) ReplicaRegionOutput {
	return o
}

// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses “aws/secretsmanager“.
func (o ReplicaRegionOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaRegion) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// A string that represents a “Region“, for example 'us-east-1'.
func (o ReplicaRegionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaRegion) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ReplicaRegionArrayOutput struct{ *pulumi.OutputState }

func (ReplicaRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaRegion)(nil)).Elem()
}

func (o ReplicaRegionArrayOutput) ToReplicaRegionArrayOutput() ReplicaRegionArrayOutput {
	return o
}

func (o ReplicaRegionArrayOutput) ToReplicaRegionArrayOutputWithContext(ctx context.Context) ReplicaRegionArrayOutput {
	return o
}

func (o ReplicaRegionArrayOutput) Index(i pulumi.IntInput) ReplicaRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaRegion {
		return vs[0].([]ReplicaRegion)[vs[1].(int)]
	}).(ReplicaRegionOutput)
}

// Definition of ReplicaRegion
type ReplicaRegionResponse struct {
	// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses ``aws/secretsmanager``.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A string that represents a ``Region``, for example 'us-east-1'.
	Region *string `pulumi:"region"`
}

// Definition of ReplicaRegion
type ReplicaRegionResponseOutput struct{ *pulumi.OutputState }

func (ReplicaRegionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaRegionResponse)(nil)).Elem()
}

func (o ReplicaRegionResponseOutput) ToReplicaRegionResponseOutput() ReplicaRegionResponseOutput {
	return o
}

func (o ReplicaRegionResponseOutput) ToReplicaRegionResponseOutputWithContext(ctx context.Context) ReplicaRegionResponseOutput {
	return o
}

// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses “aws/secretsmanager“.
func (o ReplicaRegionResponseOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaRegionResponse) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// A string that represents a “Region“, for example 'us-east-1'.
func (o ReplicaRegionResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaRegionResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ReplicaRegionResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicaRegionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaRegionResponse)(nil)).Elem()
}

func (o ReplicaRegionResponseArrayOutput) ToReplicaRegionResponseArrayOutput() ReplicaRegionResponseArrayOutput {
	return o
}

func (o ReplicaRegionResponseArrayOutput) ToReplicaRegionResponseArrayOutputWithContext(ctx context.Context) ReplicaRegionResponseArrayOutput {
	return o
}

func (o ReplicaRegionResponseArrayOutput) Index(i pulumi.IntInput) ReplicaRegionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaRegionResponse {
		return vs[0].([]ReplicaRegionResponse)[vs[1].(int)]
	}).(ReplicaRegionResponseOutput)
}

// Definition of ReplicationConfiguration
type ReplicationConfiguration struct {
	// An array of destination objects. Only one destination object is supported.
	Destinations []ReplicationDestination `pulumi:"destinations"`
	// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
	Role *string `pulumi:"role"`
	// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
	Rules []ReplicationRule `pulumi:"rules"`
}

// ReplicationConfigurationInput is an input type that accepts ReplicationConfigurationArgs and ReplicationConfigurationOutput values.
// You can construct a concrete instance of `ReplicationConfigurationInput` via:
//
//	ReplicationConfigurationArgs{...}
type ReplicationConfigurationInput interface {
	pulumi.Input

	ToReplicationConfigurationOutput() ReplicationConfigurationOutput
	ToReplicationConfigurationOutputWithContext(context.Context) ReplicationConfigurationOutput
}

// Definition of ReplicationConfiguration
type ReplicationConfigurationArgs struct {
	// An array of destination objects. Only one destination object is supported.
	Destinations ReplicationDestinationArrayInput `pulumi:"destinations"`
	// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
	Rules ReplicationRuleArrayInput `pulumi:"rules"`
}

func (ReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfiguration)(nil)).Elem()
}

func (i ReplicationConfigurationArgs) ToReplicationConfigurationOutput() ReplicationConfigurationOutput {
	return i.ToReplicationConfigurationOutputWithContext(context.Background())
}

func (i ReplicationConfigurationArgs) ToReplicationConfigurationOutputWithContext(ctx context.Context) ReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationOutput)
}

func (i ReplicationConfigurationArgs) ToReplicationConfigurationPtrOutput() ReplicationConfigurationPtrOutput {
	return i.ToReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i ReplicationConfigurationArgs) ToReplicationConfigurationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationOutput).ToReplicationConfigurationPtrOutputWithContext(ctx)
}

// ReplicationConfigurationPtrInput is an input type that accepts ReplicationConfigurationArgs, ReplicationConfigurationPtr and ReplicationConfigurationPtrOutput values.
// You can construct a concrete instance of `ReplicationConfigurationPtrInput` via:
//
//	        ReplicationConfigurationArgs{...}
//
//	or:
//
//	        nil
type ReplicationConfigurationPtrInput interface {
	pulumi.Input

	ToReplicationConfigurationPtrOutput() ReplicationConfigurationPtrOutput
	ToReplicationConfigurationPtrOutputWithContext(context.Context) ReplicationConfigurationPtrOutput
}

type replicationConfigurationPtrType ReplicationConfigurationArgs

func ReplicationConfigurationPtr(v *ReplicationConfigurationArgs) ReplicationConfigurationPtrInput {
	return (*replicationConfigurationPtrType)(v)
}

func (*replicationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfiguration)(nil)).Elem()
}

func (i *replicationConfigurationPtrType) ToReplicationConfigurationPtrOutput() ReplicationConfigurationPtrOutput {
	return i.ToReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i *replicationConfigurationPtrType) ToReplicationConfigurationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationPtrOutput)
}

// Definition of ReplicationConfiguration
type ReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfiguration)(nil)).Elem()
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationOutput() ReplicationConfigurationOutput {
	return o
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationOutputWithContext(ctx context.Context) ReplicationConfigurationOutput {
	return o
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationPtrOutput() ReplicationConfigurationPtrOutput {
	return o.ToReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationConfiguration) *ReplicationConfiguration {
		return &v
	}).(ReplicationConfigurationPtrOutput)
}

// An array of destination objects. Only one destination object is supported.
func (o ReplicationConfigurationOutput) Destinations() ReplicationDestinationArrayOutput {
	return o.ApplyT(func(v ReplicationConfiguration) []ReplicationDestination { return v.Destinations }).(ReplicationDestinationArrayOutput)
}

// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
func (o ReplicationConfigurationOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfiguration) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
func (o ReplicationConfigurationOutput) Rules() ReplicationRuleArrayOutput {
	return o.ApplyT(func(v ReplicationConfiguration) []ReplicationRule { return v.Rules }).(ReplicationRuleArrayOutput)
}

type ReplicationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfiguration)(nil)).Elem()
}

func (o ReplicationConfigurationPtrOutput) ToReplicationConfigurationPtrOutput() ReplicationConfigurationPtrOutput {
	return o
}

func (o ReplicationConfigurationPtrOutput) ToReplicationConfigurationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationPtrOutput {
	return o
}

func (o ReplicationConfigurationPtrOutput) Elem() ReplicationConfigurationOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) ReplicationConfiguration {
		if v != nil {
			return *v
		}
		var ret ReplicationConfiguration
		return ret
	}).(ReplicationConfigurationOutput)
}

// An array of destination objects. Only one destination object is supported.
func (o ReplicationConfigurationPtrOutput) Destinations() ReplicationDestinationArrayOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) []ReplicationDestination {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(ReplicationDestinationArrayOutput)
}

// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
func (o ReplicationConfigurationPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
func (o ReplicationConfigurationPtrOutput) Rules() ReplicationRuleArrayOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) []ReplicationRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ReplicationRuleArrayOutput)
}

// Definition of ReplicationConfiguration
type ReplicationConfigurationResponse struct {
	// An array of destination objects. Only one destination object is supported.
	Destinations []ReplicationDestinationResponse `pulumi:"destinations"`
	// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
	Role *string `pulumi:"role"`
	// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
	Rules []ReplicationRuleResponse `pulumi:"rules"`
}

// Definition of ReplicationConfiguration
type ReplicationConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationResponse)(nil)).Elem()
}

func (o ReplicationConfigurationResponseOutput) ToReplicationConfigurationResponseOutput() ReplicationConfigurationResponseOutput {
	return o
}

func (o ReplicationConfigurationResponseOutput) ToReplicationConfigurationResponseOutputWithContext(ctx context.Context) ReplicationConfigurationResponseOutput {
	return o
}

// An array of destination objects. Only one destination object is supported.
func (o ReplicationConfigurationResponseOutput) Destinations() ReplicationDestinationResponseArrayOutput {
	return o.ApplyT(func(v ReplicationConfigurationResponse) []ReplicationDestinationResponse { return v.Destinations }).(ReplicationDestinationResponseArrayOutput)
}

// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
func (o ReplicationConfigurationResponseOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationResponse) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
func (o ReplicationConfigurationResponseOutput) Rules() ReplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v ReplicationConfigurationResponse) []ReplicationRuleResponse { return v.Rules }).(ReplicationRuleResponseArrayOutput)
}

type ReplicationConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigurationResponse)(nil)).Elem()
}

func (o ReplicationConfigurationResponsePtrOutput) ToReplicationConfigurationResponsePtrOutput() ReplicationConfigurationResponsePtrOutput {
	return o
}

func (o ReplicationConfigurationResponsePtrOutput) ToReplicationConfigurationResponsePtrOutputWithContext(ctx context.Context) ReplicationConfigurationResponsePtrOutput {
	return o
}

func (o ReplicationConfigurationResponsePtrOutput) Elem() ReplicationConfigurationResponseOutput {
	return o.ApplyT(func(v *ReplicationConfigurationResponse) ReplicationConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationConfigurationResponse
		return ret
	}).(ReplicationConfigurationResponseOutput)
}

// An array of destination objects. Only one destination object is supported.
func (o ReplicationConfigurationResponsePtrOutput) Destinations() ReplicationDestinationResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationConfigurationResponse) []ReplicationDestinationResponse {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(ReplicationDestinationResponseArrayOutput)
}

// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
func (o ReplicationConfigurationResponsePtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
func (o ReplicationConfigurationResponsePtrOutput) Rules() ReplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationConfigurationResponse) []ReplicationRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ReplicationRuleResponseArrayOutput)
}

// Definition of ReplicationDestination
type ReplicationDestination struct {
	// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
	AccessControlTranslation *AccessControlTranslation `pulumi:"accessControlTranslation"`
	// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
	Account *string `pulumi:"account"`
	// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
	Bucket *string `pulumi:"bucket"`
	// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
	EncryptionConfiguration *EncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The ID of the destination Amazon EFS file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// The ID of an kms-key-long used to protect the encrypted file system.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
	Metrics *Metrics `pulumi:"metrics"`
	// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
	Region *string `pulumi:"region"`
	// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block.
	ReplicationTime *ReplicationTime `pulumi:"replicationTime"`
	// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
	StorageClass *string `pulumi:"storageClass"`
}

// ReplicationDestinationInput is an input type that accepts ReplicationDestinationArgs and ReplicationDestinationOutput values.
// You can construct a concrete instance of `ReplicationDestinationInput` via:
//
//	ReplicationDestinationArgs{...}
type ReplicationDestinationInput interface {
	pulumi.Input

	ToReplicationDestinationOutput() ReplicationDestinationOutput
	ToReplicationDestinationOutputWithContext(context.Context) ReplicationDestinationOutput
}

// Definition of ReplicationDestination
type ReplicationDestinationArgs struct {
	// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
	AccessControlTranslation AccessControlTranslationPtrInput `pulumi:"accessControlTranslation"`
	// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
	Account pulumi.StringPtrInput `pulumi:"account"`
	// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
	AvailabilityZoneName pulumi.StringPtrInput `pulumi:"availabilityZoneName"`
	// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
	EncryptionConfiguration EncryptionConfigurationPtrInput `pulumi:"encryptionConfiguration"`
	// The ID of the destination Amazon EFS file system.
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// The ID of an kms-key-long used to protect the encrypted file system.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
	Metrics MetricsPtrInput `pulumi:"metrics"`
	// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block.
	ReplicationTime ReplicationTimePtrInput `pulumi:"replicationTime"`
	// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (ReplicationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationDestination)(nil)).Elem()
}

func (i ReplicationDestinationArgs) ToReplicationDestinationOutput() ReplicationDestinationOutput {
	return i.ToReplicationDestinationOutputWithContext(context.Background())
}

func (i ReplicationDestinationArgs) ToReplicationDestinationOutputWithContext(ctx context.Context) ReplicationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationDestinationOutput)
}

func (i ReplicationDestinationArgs) ToReplicationDestinationPtrOutput() ReplicationDestinationPtrOutput {
	return i.ToReplicationDestinationPtrOutputWithContext(context.Background())
}

func (i ReplicationDestinationArgs) ToReplicationDestinationPtrOutputWithContext(ctx context.Context) ReplicationDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationDestinationOutput).ToReplicationDestinationPtrOutputWithContext(ctx)
}

// ReplicationDestinationPtrInput is an input type that accepts ReplicationDestinationArgs, ReplicationDestinationPtr and ReplicationDestinationPtrOutput values.
// You can construct a concrete instance of `ReplicationDestinationPtrInput` via:
//
//	        ReplicationDestinationArgs{...}
//
//	or:
//
//	        nil
type ReplicationDestinationPtrInput interface {
	pulumi.Input

	ToReplicationDestinationPtrOutput() ReplicationDestinationPtrOutput
	ToReplicationDestinationPtrOutputWithContext(context.Context) ReplicationDestinationPtrOutput
}

type replicationDestinationPtrType ReplicationDestinationArgs

func ReplicationDestinationPtr(v *ReplicationDestinationArgs) ReplicationDestinationPtrInput {
	return (*replicationDestinationPtrType)(v)
}

func (*replicationDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationDestination)(nil)).Elem()
}

func (i *replicationDestinationPtrType) ToReplicationDestinationPtrOutput() ReplicationDestinationPtrOutput {
	return i.ToReplicationDestinationPtrOutputWithContext(context.Background())
}

func (i *replicationDestinationPtrType) ToReplicationDestinationPtrOutputWithContext(ctx context.Context) ReplicationDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationDestinationPtrOutput)
}

// ReplicationDestinationArrayInput is an input type that accepts ReplicationDestinationArray and ReplicationDestinationArrayOutput values.
// You can construct a concrete instance of `ReplicationDestinationArrayInput` via:
//
//	ReplicationDestinationArray{ ReplicationDestinationArgs{...} }
type ReplicationDestinationArrayInput interface {
	pulumi.Input

	ToReplicationDestinationArrayOutput() ReplicationDestinationArrayOutput
	ToReplicationDestinationArrayOutputWithContext(context.Context) ReplicationDestinationArrayOutput
}

type ReplicationDestinationArray []ReplicationDestinationInput

func (ReplicationDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationDestination)(nil)).Elem()
}

func (i ReplicationDestinationArray) ToReplicationDestinationArrayOutput() ReplicationDestinationArrayOutput {
	return i.ToReplicationDestinationArrayOutputWithContext(context.Background())
}

func (i ReplicationDestinationArray) ToReplicationDestinationArrayOutputWithContext(ctx context.Context) ReplicationDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationDestinationArrayOutput)
}

// Definition of ReplicationDestination
type ReplicationDestinationOutput struct{ *pulumi.OutputState }

func (ReplicationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationDestination)(nil)).Elem()
}

func (o ReplicationDestinationOutput) ToReplicationDestinationOutput() ReplicationDestinationOutput {
	return o
}

func (o ReplicationDestinationOutput) ToReplicationDestinationOutputWithContext(ctx context.Context) ReplicationDestinationOutput {
	return o
}

func (o ReplicationDestinationOutput) ToReplicationDestinationPtrOutput() ReplicationDestinationPtrOutput {
	return o.ToReplicationDestinationPtrOutputWithContext(context.Background())
}

func (o ReplicationDestinationOutput) ToReplicationDestinationPtrOutputWithContext(ctx context.Context) ReplicationDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationDestination) *ReplicationDestination {
		return &v
	}).(ReplicationDestinationPtrOutput)
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
func (o ReplicationDestinationOutput) AccessControlTranslation() AccessControlTranslationPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *AccessControlTranslation { return v.AccessControlTranslation }).(AccessControlTranslationPtrOutput)
}

// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the “AccessControlTranslation“ property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the “AccessControlTranslation“ property, the “Account“ property is required.
func (o ReplicationDestinationOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format “us-east-1a“ to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
func (o ReplicationDestinationOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.AvailabilityZoneName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
func (o ReplicationDestinationOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
func (o ReplicationDestinationOutput) EncryptionConfiguration() EncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *EncryptionConfiguration { return v.EncryptionConfiguration }).(EncryptionConfigurationPtrOutput)
}

// The ID of the destination Amazon EFS file system.
func (o ReplicationDestinationOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// The ID of an kms-key-long used to protect the encrypted file system.
func (o ReplicationDestinationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
func (o ReplicationDestinationOutput) Metrics() MetricsPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *Metrics { return v.Metrics }).(MetricsPtrOutput)
}

// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
func (o ReplicationDestinationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
func (o ReplicationDestinationOutput) ReplicationTime() ReplicationTimePtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *ReplicationTime { return v.ReplicationTime }).(ReplicationTimePtrOutput)
}

// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the “StorageClass“ element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
func (o ReplicationDestinationOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestination) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type ReplicationDestinationPtrOutput struct{ *pulumi.OutputState }

func (ReplicationDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationDestination)(nil)).Elem()
}

func (o ReplicationDestinationPtrOutput) ToReplicationDestinationPtrOutput() ReplicationDestinationPtrOutput {
	return o
}

func (o ReplicationDestinationPtrOutput) ToReplicationDestinationPtrOutputWithContext(ctx context.Context) ReplicationDestinationPtrOutput {
	return o
}

func (o ReplicationDestinationPtrOutput) Elem() ReplicationDestinationOutput {
	return o.ApplyT(func(v *ReplicationDestination) ReplicationDestination {
		if v != nil {
			return *v
		}
		var ret ReplicationDestination
		return ret
	}).(ReplicationDestinationOutput)
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
func (o ReplicationDestinationPtrOutput) AccessControlTranslation() AccessControlTranslationPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *AccessControlTranslation {
		if v == nil {
			return nil
		}
		return v.AccessControlTranslation
	}).(AccessControlTranslationPtrOutput)
}

// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the “AccessControlTranslation“ property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the “AccessControlTranslation“ property, the “Account“ property is required.
func (o ReplicationDestinationPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format “us-east-1a“ to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
func (o ReplicationDestinationPtrOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneName
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
func (o ReplicationDestinationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
func (o ReplicationDestinationPtrOutput) EncryptionConfiguration() EncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *EncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.EncryptionConfiguration
	}).(EncryptionConfigurationPtrOutput)
}

// The ID of the destination Amazon EFS file system.
func (o ReplicationDestinationPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// The ID of an kms-key-long used to protect the encrypted file system.
func (o ReplicationDestinationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
func (o ReplicationDestinationPtrOutput) Metrics() MetricsPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *Metrics {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(MetricsPtrOutput)
}

// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
func (o ReplicationDestinationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
func (o ReplicationDestinationPtrOutput) ReplicationTime() ReplicationTimePtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *ReplicationTime {
		if v == nil {
			return nil
		}
		return v.ReplicationTime
	}).(ReplicationTimePtrOutput)
}

// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the “StorageClass“ element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
func (o ReplicationDestinationPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestination) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type ReplicationDestinationArrayOutput struct{ *pulumi.OutputState }

func (ReplicationDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationDestination)(nil)).Elem()
}

func (o ReplicationDestinationArrayOutput) ToReplicationDestinationArrayOutput() ReplicationDestinationArrayOutput {
	return o
}

func (o ReplicationDestinationArrayOutput) ToReplicationDestinationArrayOutputWithContext(ctx context.Context) ReplicationDestinationArrayOutput {
	return o
}

func (o ReplicationDestinationArrayOutput) Index(i pulumi.IntInput) ReplicationDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationDestination {
		return vs[0].([]ReplicationDestination)[vs[1].(int)]
	}).(ReplicationDestinationOutput)
}

// Definition of ReplicationDestination
type ReplicationDestinationResponse struct {
	// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
	AccessControlTranslation *AccessControlTranslationResponse `pulumi:"accessControlTranslation"`
	// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
	Account *string `pulumi:"account"`
	// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
	Bucket *string `pulumi:"bucket"`
	// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
	EncryptionConfiguration *EncryptionConfigurationResponse `pulumi:"encryptionConfiguration"`
	// The ID of the destination Amazon EFS file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// The ID of an kms-key-long used to protect the encrypted file system.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
	Metrics *MetricsResponse `pulumi:"metrics"`
	// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
	Region *string `pulumi:"region"`
	// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block.
	ReplicationTime *ReplicationTimeResponse `pulumi:"replicationTime"`
	// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
	StorageClass *string `pulumi:"storageClass"`
}

// Definition of ReplicationDestination
type ReplicationDestinationResponseOutput struct{ *pulumi.OutputState }

func (ReplicationDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationDestinationResponse)(nil)).Elem()
}

func (o ReplicationDestinationResponseOutput) ToReplicationDestinationResponseOutput() ReplicationDestinationResponseOutput {
	return o
}

func (o ReplicationDestinationResponseOutput) ToReplicationDestinationResponseOutputWithContext(ctx context.Context) ReplicationDestinationResponseOutput {
	return o
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
func (o ReplicationDestinationResponseOutput) AccessControlTranslation() AccessControlTranslationResponsePtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *AccessControlTranslationResponse {
		return v.AccessControlTranslation
	}).(AccessControlTranslationResponsePtrOutput)
}

// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the “AccessControlTranslation“ property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the “AccessControlTranslation“ property, the “Account“ property is required.
func (o ReplicationDestinationResponseOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format “us-east-1a“ to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
func (o ReplicationDestinationResponseOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.AvailabilityZoneName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
func (o ReplicationDestinationResponseOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
func (o ReplicationDestinationResponseOutput) EncryptionConfiguration() EncryptionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *EncryptionConfigurationResponse {
		return v.EncryptionConfiguration
	}).(EncryptionConfigurationResponsePtrOutput)
}

// The ID of the destination Amazon EFS file system.
func (o ReplicationDestinationResponseOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// The ID of an kms-key-long used to protect the encrypted file system.
func (o ReplicationDestinationResponseOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
func (o ReplicationDestinationResponseOutput) Metrics() MetricsResponsePtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *MetricsResponse { return v.Metrics }).(MetricsResponsePtrOutput)
}

// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
func (o ReplicationDestinationResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
func (o ReplicationDestinationResponseOutput) ReplicationTime() ReplicationTimeResponsePtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *ReplicationTimeResponse { return v.ReplicationTime }).(ReplicationTimeResponsePtrOutput)
}

// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the “StorageClass“ element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
func (o ReplicationDestinationResponseOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationDestinationResponse) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type ReplicationDestinationResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationDestinationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationDestinationResponse)(nil)).Elem()
}

func (o ReplicationDestinationResponsePtrOutput) ToReplicationDestinationResponsePtrOutput() ReplicationDestinationResponsePtrOutput {
	return o
}

func (o ReplicationDestinationResponsePtrOutput) ToReplicationDestinationResponsePtrOutputWithContext(ctx context.Context) ReplicationDestinationResponsePtrOutput {
	return o
}

func (o ReplicationDestinationResponsePtrOutput) Elem() ReplicationDestinationResponseOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) ReplicationDestinationResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationDestinationResponse
		return ret
	}).(ReplicationDestinationResponseOutput)
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
func (o ReplicationDestinationResponsePtrOutput) AccessControlTranslation() AccessControlTranslationResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *AccessControlTranslationResponse {
		if v == nil {
			return nil
		}
		return v.AccessControlTranslation
	}).(AccessControlTranslationResponsePtrOutput)
}

// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the “AccessControlTranslation“ property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*. If you specify the “AccessControlTranslation“ property, the “Account“ property is required.
func (o ReplicationDestinationResponsePtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

// The AWS For One Zone file systems, the replication configuration must specify the Availability Zone in which the destination file system is located.  Use the format “us-east-1a“ to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the *Amazon EFS User Guide*.  One Zone file system type is not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
func (o ReplicationDestinationResponsePtrOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneName
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
func (o ReplicationDestinationResponsePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies encryption-related information. Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
func (o ReplicationDestinationResponsePtrOutput) EncryptionConfiguration() EncryptionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *EncryptionConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionConfiguration
	}).(EncryptionConfigurationResponsePtrOutput)
}

// The ID of the destination Amazon EFS file system.
func (o ReplicationDestinationResponsePtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// The ID of an kms-key-long used to protect the encrypted file system.
func (o ReplicationDestinationResponsePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events. A container specifying replication metrics-related settings enabling replication metrics and events.
func (o ReplicationDestinationResponsePtrOutput) Metrics() MetricsResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *MetricsResponse {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(MetricsResponsePtrOutput)
}

// The AWS-Region in which the destination file system is located.  For One Zone file systems, the replication configuration must specify the AWS-Region in which the destination file system is located.
func (o ReplicationDestinationResponsePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block. A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
func (o ReplicationDestinationResponsePtrOutput) ReplicationTime() ReplicationTimeResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *ReplicationTimeResponse {
		if v == nil {
			return nil
		}
		return v.ReplicationTime
	}).(ReplicationTimeResponsePtrOutput)
}

// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.  For valid values, see the “StorageClass“ element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
func (o ReplicationDestinationResponsePtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type ReplicationDestinationResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicationDestinationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationDestinationResponse)(nil)).Elem()
}

func (o ReplicationDestinationResponseArrayOutput) ToReplicationDestinationResponseArrayOutput() ReplicationDestinationResponseArrayOutput {
	return o
}

func (o ReplicationDestinationResponseArrayOutput) ToReplicationDestinationResponseArrayOutputWithContext(ctx context.Context) ReplicationDestinationResponseArrayOutput {
	return o
}

func (o ReplicationDestinationResponseArrayOutput) Index(i pulumi.IntInput) ReplicationDestinationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationDestinationResponse {
		return vs[0].([]ReplicationDestinationResponse)[vs[1].(int)]
	}).(ReplicationDestinationResponseOutput)
}

// Definition of ReplicationPendingModifiedValues
type ReplicationPendingModifiedValues struct {
	// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
	AllocatedStorage *int `pulumi:"allocatedStorage"`
	// <p>The engine version number of the replication instance.</p>
	EngineVersion *string `pulumi:"engineVersion"`
	// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
	MultiAZ *bool `pulumi:"multiAZ"`
	// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
	NetworkType *string `pulumi:"networkType"`
	// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
	ReplicationInstanceClass *string `pulumi:"replicationInstanceClass"`
}

// ReplicationPendingModifiedValuesInput is an input type that accepts ReplicationPendingModifiedValuesArgs and ReplicationPendingModifiedValuesOutput values.
// You can construct a concrete instance of `ReplicationPendingModifiedValuesInput` via:
//
//	ReplicationPendingModifiedValuesArgs{...}
type ReplicationPendingModifiedValuesInput interface {
	pulumi.Input

	ToReplicationPendingModifiedValuesOutput() ReplicationPendingModifiedValuesOutput
	ToReplicationPendingModifiedValuesOutputWithContext(context.Context) ReplicationPendingModifiedValuesOutput
}

// Definition of ReplicationPendingModifiedValues
type ReplicationPendingModifiedValuesArgs struct {
	// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
	AllocatedStorage pulumi.IntPtrInput `pulumi:"allocatedStorage"`
	// <p>The engine version number of the replication instance.</p>
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
	MultiAZ pulumi.BoolPtrInput `pulumi:"multiAZ"`
	// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
	ReplicationInstanceClass pulumi.StringPtrInput `pulumi:"replicationInstanceClass"`
}

func (ReplicationPendingModifiedValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationPendingModifiedValues)(nil)).Elem()
}

func (i ReplicationPendingModifiedValuesArgs) ToReplicationPendingModifiedValuesOutput() ReplicationPendingModifiedValuesOutput {
	return i.ToReplicationPendingModifiedValuesOutputWithContext(context.Background())
}

func (i ReplicationPendingModifiedValuesArgs) ToReplicationPendingModifiedValuesOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPendingModifiedValuesOutput)
}

func (i ReplicationPendingModifiedValuesArgs) ToReplicationPendingModifiedValuesPtrOutput() ReplicationPendingModifiedValuesPtrOutput {
	return i.ToReplicationPendingModifiedValuesPtrOutputWithContext(context.Background())
}

func (i ReplicationPendingModifiedValuesArgs) ToReplicationPendingModifiedValuesPtrOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPendingModifiedValuesOutput).ToReplicationPendingModifiedValuesPtrOutputWithContext(ctx)
}

// ReplicationPendingModifiedValuesPtrInput is an input type that accepts ReplicationPendingModifiedValuesArgs, ReplicationPendingModifiedValuesPtr and ReplicationPendingModifiedValuesPtrOutput values.
// You can construct a concrete instance of `ReplicationPendingModifiedValuesPtrInput` via:
//
//	        ReplicationPendingModifiedValuesArgs{...}
//
//	or:
//
//	        nil
type ReplicationPendingModifiedValuesPtrInput interface {
	pulumi.Input

	ToReplicationPendingModifiedValuesPtrOutput() ReplicationPendingModifiedValuesPtrOutput
	ToReplicationPendingModifiedValuesPtrOutputWithContext(context.Context) ReplicationPendingModifiedValuesPtrOutput
}

type replicationPendingModifiedValuesPtrType ReplicationPendingModifiedValuesArgs

func ReplicationPendingModifiedValuesPtr(v *ReplicationPendingModifiedValuesArgs) ReplicationPendingModifiedValuesPtrInput {
	return (*replicationPendingModifiedValuesPtrType)(v)
}

func (*replicationPendingModifiedValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationPendingModifiedValues)(nil)).Elem()
}

func (i *replicationPendingModifiedValuesPtrType) ToReplicationPendingModifiedValuesPtrOutput() ReplicationPendingModifiedValuesPtrOutput {
	return i.ToReplicationPendingModifiedValuesPtrOutputWithContext(context.Background())
}

func (i *replicationPendingModifiedValuesPtrType) ToReplicationPendingModifiedValuesPtrOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPendingModifiedValuesPtrOutput)
}

// Definition of ReplicationPendingModifiedValues
type ReplicationPendingModifiedValuesOutput struct{ *pulumi.OutputState }

func (ReplicationPendingModifiedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationPendingModifiedValues)(nil)).Elem()
}

func (o ReplicationPendingModifiedValuesOutput) ToReplicationPendingModifiedValuesOutput() ReplicationPendingModifiedValuesOutput {
	return o
}

func (o ReplicationPendingModifiedValuesOutput) ToReplicationPendingModifiedValuesOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesOutput {
	return o
}

func (o ReplicationPendingModifiedValuesOutput) ToReplicationPendingModifiedValuesPtrOutput() ReplicationPendingModifiedValuesPtrOutput {
	return o.ToReplicationPendingModifiedValuesPtrOutputWithContext(context.Background())
}

func (o ReplicationPendingModifiedValuesOutput) ToReplicationPendingModifiedValuesPtrOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationPendingModifiedValues) *ReplicationPendingModifiedValues {
		return &v
	}).(ReplicationPendingModifiedValuesPtrOutput)
}

// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
func (o ReplicationPendingModifiedValuesOutput) AllocatedStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValues) *int { return v.AllocatedStorage }).(pulumi.IntPtrOutput)
}

// <p>The engine version number of the replication instance.</p>
func (o ReplicationPendingModifiedValuesOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValues) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
func (o ReplicationPendingModifiedValuesOutput) MultiAZ() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValues) *bool { return v.MultiAZ }).(pulumi.BoolPtrOutput)
}

// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationPendingModifiedValuesOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValues) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
func (o ReplicationPendingModifiedValuesOutput) ReplicationInstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValues) *string { return v.ReplicationInstanceClass }).(pulumi.StringPtrOutput)
}

type ReplicationPendingModifiedValuesPtrOutput struct{ *pulumi.OutputState }

func (ReplicationPendingModifiedValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationPendingModifiedValues)(nil)).Elem()
}

func (o ReplicationPendingModifiedValuesPtrOutput) ToReplicationPendingModifiedValuesPtrOutput() ReplicationPendingModifiedValuesPtrOutput {
	return o
}

func (o ReplicationPendingModifiedValuesPtrOutput) ToReplicationPendingModifiedValuesPtrOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesPtrOutput {
	return o
}

func (o ReplicationPendingModifiedValuesPtrOutput) Elem() ReplicationPendingModifiedValuesOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValues) ReplicationPendingModifiedValues {
		if v != nil {
			return *v
		}
		var ret ReplicationPendingModifiedValues
		return ret
	}).(ReplicationPendingModifiedValuesOutput)
}

// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
func (o ReplicationPendingModifiedValuesPtrOutput) AllocatedStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValues) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedStorage
	}).(pulumi.IntPtrOutput)
}

// <p>The engine version number of the replication instance.</p>
func (o ReplicationPendingModifiedValuesPtrOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValues) *string {
		if v == nil {
			return nil
		}
		return v.EngineVersion
	}).(pulumi.StringPtrOutput)
}

// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
func (o ReplicationPendingModifiedValuesPtrOutput) MultiAZ() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValues) *bool {
		if v == nil {
			return nil
		}
		return v.MultiAZ
	}).(pulumi.BoolPtrOutput)
}

// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationPendingModifiedValuesPtrOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValues) *string {
		if v == nil {
			return nil
		}
		return v.NetworkType
	}).(pulumi.StringPtrOutput)
}

// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
func (o ReplicationPendingModifiedValuesPtrOutput) ReplicationInstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValues) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationInstanceClass
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicationPendingModifiedValues
type ReplicationPendingModifiedValuesResponse struct {
	// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
	AllocatedStorage *int `pulumi:"allocatedStorage"`
	// <p>The engine version number of the replication instance.</p>
	EngineVersion *string `pulumi:"engineVersion"`
	// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
	MultiAZ *bool `pulumi:"multiAZ"`
	// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
	NetworkType *string `pulumi:"networkType"`
	// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
	ReplicationInstanceClass *string `pulumi:"replicationInstanceClass"`
}

// Definition of ReplicationPendingModifiedValues
type ReplicationPendingModifiedValuesResponseOutput struct{ *pulumi.OutputState }

func (ReplicationPendingModifiedValuesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationPendingModifiedValuesResponse)(nil)).Elem()
}

func (o ReplicationPendingModifiedValuesResponseOutput) ToReplicationPendingModifiedValuesResponseOutput() ReplicationPendingModifiedValuesResponseOutput {
	return o
}

func (o ReplicationPendingModifiedValuesResponseOutput) ToReplicationPendingModifiedValuesResponseOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesResponseOutput {
	return o
}

// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
func (o ReplicationPendingModifiedValuesResponseOutput) AllocatedStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValuesResponse) *int { return v.AllocatedStorage }).(pulumi.IntPtrOutput)
}

// <p>The engine version number of the replication instance.</p>
func (o ReplicationPendingModifiedValuesResponseOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValuesResponse) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
func (o ReplicationPendingModifiedValuesResponseOutput) MultiAZ() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValuesResponse) *bool { return v.MultiAZ }).(pulumi.BoolPtrOutput)
}

// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationPendingModifiedValuesResponseOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValuesResponse) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
func (o ReplicationPendingModifiedValuesResponseOutput) ReplicationInstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationPendingModifiedValuesResponse) *string { return v.ReplicationInstanceClass }).(pulumi.StringPtrOutput)
}

type ReplicationPendingModifiedValuesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationPendingModifiedValuesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationPendingModifiedValuesResponse)(nil)).Elem()
}

func (o ReplicationPendingModifiedValuesResponsePtrOutput) ToReplicationPendingModifiedValuesResponsePtrOutput() ReplicationPendingModifiedValuesResponsePtrOutput {
	return o
}

func (o ReplicationPendingModifiedValuesResponsePtrOutput) ToReplicationPendingModifiedValuesResponsePtrOutputWithContext(ctx context.Context) ReplicationPendingModifiedValuesResponsePtrOutput {
	return o
}

func (o ReplicationPendingModifiedValuesResponsePtrOutput) Elem() ReplicationPendingModifiedValuesResponseOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValuesResponse) ReplicationPendingModifiedValuesResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationPendingModifiedValuesResponse
		return ret
	}).(ReplicationPendingModifiedValuesResponseOutput)
}

// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
func (o ReplicationPendingModifiedValuesResponsePtrOutput) AllocatedStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValuesResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedStorage
	}).(pulumi.IntPtrOutput)
}

// <p>The engine version number of the replication instance.</p>
func (o ReplicationPendingModifiedValuesResponsePtrOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValuesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EngineVersion
	}).(pulumi.StringPtrOutput)
}

// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
func (o ReplicationPendingModifiedValuesResponsePtrOutput) MultiAZ() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValuesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.MultiAZ
	}).(pulumi.BoolPtrOutput)
}

// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationPendingModifiedValuesResponsePtrOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValuesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkType
	}).(pulumi.StringPtrOutput)
}

// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>
func (o ReplicationPendingModifiedValuesResponsePtrOutput) ReplicationInstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPendingModifiedValuesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationInstanceClass
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicationRule
type ReplicationRule struct {
	// Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations). Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
	DeleteMarkerReplication *DeleteMarkerReplication `pulumi:"deleteMarkerReplication"`
	// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
	Destination *ReplicationDestination `pulumi:"destination"`
	// A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.  V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element. A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element.
	Filter *ReplicationRuleFilter `pulumi:"filter"`
	// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as 'ID'.
	Id *string `pulumi:"id"`
	// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
	Priority *int `pulumi:"priority"`
	// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
	SourceSelectionCriteria *SourceSelectionCriteria `pulumi:"sourceSelectionCriteria"`
	// Specifies whether the rule is enabled.
	Status *string `pulumi:"status"`
}

// ReplicationRuleInput is an input type that accepts ReplicationRuleArgs and ReplicationRuleOutput values.
// You can construct a concrete instance of `ReplicationRuleInput` via:
//
//	ReplicationRuleArgs{...}
type ReplicationRuleInput interface {
	pulumi.Input

	ToReplicationRuleOutput() ReplicationRuleOutput
	ToReplicationRuleOutputWithContext(context.Context) ReplicationRuleOutput
}

// Definition of ReplicationRule
type ReplicationRuleArgs struct {
	// Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations). Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
	DeleteMarkerReplication DeleteMarkerReplicationPtrInput `pulumi:"deleteMarkerReplication"`
	// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
	Destination ReplicationDestinationPtrInput `pulumi:"destination"`
	// A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.  V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element. A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element.
	Filter ReplicationRuleFilterPtrInput `pulumi:"filter"`
	// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as 'ID'.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
	SourceSelectionCriteria SourceSelectionCriteriaPtrInput `pulumi:"sourceSelectionCriteria"`
	// Specifies whether the rule is enabled.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ReplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRule)(nil)).Elem()
}

func (i ReplicationRuleArgs) ToReplicationRuleOutput() ReplicationRuleOutput {
	return i.ToReplicationRuleOutputWithContext(context.Background())
}

func (i ReplicationRuleArgs) ToReplicationRuleOutputWithContext(ctx context.Context) ReplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleOutput)
}

// ReplicationRuleArrayInput is an input type that accepts ReplicationRuleArray and ReplicationRuleArrayOutput values.
// You can construct a concrete instance of `ReplicationRuleArrayInput` via:
//
//	ReplicationRuleArray{ ReplicationRuleArgs{...} }
type ReplicationRuleArrayInput interface {
	pulumi.Input

	ToReplicationRuleArrayOutput() ReplicationRuleArrayOutput
	ToReplicationRuleArrayOutputWithContext(context.Context) ReplicationRuleArrayOutput
}

type ReplicationRuleArray []ReplicationRuleInput

func (ReplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRule)(nil)).Elem()
}

func (i ReplicationRuleArray) ToReplicationRuleArrayOutput() ReplicationRuleArrayOutput {
	return i.ToReplicationRuleArrayOutputWithContext(context.Background())
}

func (i ReplicationRuleArray) ToReplicationRuleArrayOutputWithContext(ctx context.Context) ReplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleArrayOutput)
}

// Definition of ReplicationRule
type ReplicationRuleOutput struct{ *pulumi.OutputState }

func (ReplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRule)(nil)).Elem()
}

func (o ReplicationRuleOutput) ToReplicationRuleOutput() ReplicationRuleOutput {
	return o
}

func (o ReplicationRuleOutput) ToReplicationRuleOutputWithContext(ctx context.Context) ReplicationRuleOutput {
	return o
}

// Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations). Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
func (o ReplicationRuleOutput) DeleteMarkerReplication() DeleteMarkerReplicationPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *DeleteMarkerReplication { return v.DeleteMarkerReplication }).(DeleteMarkerReplicationPtrOutput)
}

// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
func (o ReplicationRuleOutput) Destination() ReplicationDestinationPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *ReplicationDestination { return v.Destination }).(ReplicationDestinationPtrOutput)
}

// A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.  V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the “Prefix“ directly as a child element of the “Rule“ element. A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element.
func (o ReplicationRuleOutput) Filter() ReplicationRuleFilterPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *ReplicationRuleFilter { return v.Filter }).(ReplicationRuleFilterPtrOutput)
}

// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as 'ID'.
func (o ReplicationRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the “Prefix“ directly as a child element of the “Rule“ element.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o ReplicationRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
func (o ReplicationRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
func (o ReplicationRuleOutput) SourceSelectionCriteria() SourceSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *SourceSelectionCriteria { return v.SourceSelectionCriteria }).(SourceSelectionCriteriaPtrOutput)
}

// Specifies whether the rule is enabled.
func (o ReplicationRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRule)(nil)).Elem()
}

func (o ReplicationRuleArrayOutput) ToReplicationRuleArrayOutput() ReplicationRuleArrayOutput {
	return o
}

func (o ReplicationRuleArrayOutput) ToReplicationRuleArrayOutputWithContext(ctx context.Context) ReplicationRuleArrayOutput {
	return o
}

func (o ReplicationRuleArrayOutput) Index(i pulumi.IntInput) ReplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRule {
		return vs[0].([]ReplicationRule)[vs[1].(int)]
	}).(ReplicationRuleOutput)
}

// Definition of ReplicationRuleAndOperator
type ReplicationRuleAndOperator struct {
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// An array of tags containing key and value pairs.
	TagFilters []TagFilter `pulumi:"tagFilters"`
}

// ReplicationRuleAndOperatorInput is an input type that accepts ReplicationRuleAndOperatorArgs and ReplicationRuleAndOperatorOutput values.
// You can construct a concrete instance of `ReplicationRuleAndOperatorInput` via:
//
//	ReplicationRuleAndOperatorArgs{...}
type ReplicationRuleAndOperatorInput interface {
	pulumi.Input

	ToReplicationRuleAndOperatorOutput() ReplicationRuleAndOperatorOutput
	ToReplicationRuleAndOperatorOutputWithContext(context.Context) ReplicationRuleAndOperatorOutput
}

// Definition of ReplicationRuleAndOperator
type ReplicationRuleAndOperatorArgs struct {
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// An array of tags containing key and value pairs.
	TagFilters TagFilterArrayInput `pulumi:"tagFilters"`
}

func (ReplicationRuleAndOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleAndOperator)(nil)).Elem()
}

func (i ReplicationRuleAndOperatorArgs) ToReplicationRuleAndOperatorOutput() ReplicationRuleAndOperatorOutput {
	return i.ToReplicationRuleAndOperatorOutputWithContext(context.Background())
}

func (i ReplicationRuleAndOperatorArgs) ToReplicationRuleAndOperatorOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleAndOperatorOutput)
}

func (i ReplicationRuleAndOperatorArgs) ToReplicationRuleAndOperatorPtrOutput() ReplicationRuleAndOperatorPtrOutput {
	return i.ToReplicationRuleAndOperatorPtrOutputWithContext(context.Background())
}

func (i ReplicationRuleAndOperatorArgs) ToReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleAndOperatorOutput).ToReplicationRuleAndOperatorPtrOutputWithContext(ctx)
}

// ReplicationRuleAndOperatorPtrInput is an input type that accepts ReplicationRuleAndOperatorArgs, ReplicationRuleAndOperatorPtr and ReplicationRuleAndOperatorPtrOutput values.
// You can construct a concrete instance of `ReplicationRuleAndOperatorPtrInput` via:
//
//	        ReplicationRuleAndOperatorArgs{...}
//
//	or:
//
//	        nil
type ReplicationRuleAndOperatorPtrInput interface {
	pulumi.Input

	ToReplicationRuleAndOperatorPtrOutput() ReplicationRuleAndOperatorPtrOutput
	ToReplicationRuleAndOperatorPtrOutputWithContext(context.Context) ReplicationRuleAndOperatorPtrOutput
}

type replicationRuleAndOperatorPtrType ReplicationRuleAndOperatorArgs

func ReplicationRuleAndOperatorPtr(v *ReplicationRuleAndOperatorArgs) ReplicationRuleAndOperatorPtrInput {
	return (*replicationRuleAndOperatorPtrType)(v)
}

func (*replicationRuleAndOperatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRuleAndOperator)(nil)).Elem()
}

func (i *replicationRuleAndOperatorPtrType) ToReplicationRuleAndOperatorPtrOutput() ReplicationRuleAndOperatorPtrOutput {
	return i.ToReplicationRuleAndOperatorPtrOutputWithContext(context.Background())
}

func (i *replicationRuleAndOperatorPtrType) ToReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleAndOperatorPtrOutput)
}

// Definition of ReplicationRuleAndOperator
type ReplicationRuleAndOperatorOutput struct{ *pulumi.OutputState }

func (ReplicationRuleAndOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleAndOperator)(nil)).Elem()
}

func (o ReplicationRuleAndOperatorOutput) ToReplicationRuleAndOperatorOutput() ReplicationRuleAndOperatorOutput {
	return o
}

func (o ReplicationRuleAndOperatorOutput) ToReplicationRuleAndOperatorOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorOutput {
	return o
}

func (o ReplicationRuleAndOperatorOutput) ToReplicationRuleAndOperatorPtrOutput() ReplicationRuleAndOperatorPtrOutput {
	return o.ToReplicationRuleAndOperatorPtrOutputWithContext(context.Background())
}

func (o ReplicationRuleAndOperatorOutput) ToReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationRuleAndOperator) *ReplicationRuleAndOperator {
		return &v
	}).(ReplicationRuleAndOperatorPtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o ReplicationRuleAndOperatorOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleAndOperator) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// An array of tags containing key and value pairs.
func (o ReplicationRuleAndOperatorOutput) TagFilters() TagFilterArrayOutput {
	return o.ApplyT(func(v ReplicationRuleAndOperator) []TagFilter { return v.TagFilters }).(TagFilterArrayOutput)
}

type ReplicationRuleAndOperatorPtrOutput struct{ *pulumi.OutputState }

func (ReplicationRuleAndOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRuleAndOperator)(nil)).Elem()
}

func (o ReplicationRuleAndOperatorPtrOutput) ToReplicationRuleAndOperatorPtrOutput() ReplicationRuleAndOperatorPtrOutput {
	return o
}

func (o ReplicationRuleAndOperatorPtrOutput) ToReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorPtrOutput {
	return o
}

func (o ReplicationRuleAndOperatorPtrOutput) Elem() ReplicationRuleAndOperatorOutput {
	return o.ApplyT(func(v *ReplicationRuleAndOperator) ReplicationRuleAndOperator {
		if v != nil {
			return *v
		}
		var ret ReplicationRuleAndOperator
		return ret
	}).(ReplicationRuleAndOperatorOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o ReplicationRuleAndOperatorPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRuleAndOperator) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// An array of tags containing key and value pairs.
func (o ReplicationRuleAndOperatorPtrOutput) TagFilters() TagFilterArrayOutput {
	return o.ApplyT(func(v *ReplicationRuleAndOperator) []TagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(TagFilterArrayOutput)
}

// Definition of ReplicationRuleAndOperator
type ReplicationRuleAndOperatorResponse struct {
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// An array of tags containing key and value pairs.
	TagFilters []TagFilterResponse `pulumi:"tagFilters"`
}

// Definition of ReplicationRuleAndOperator
type ReplicationRuleAndOperatorResponseOutput struct{ *pulumi.OutputState }

func (ReplicationRuleAndOperatorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleAndOperatorResponse)(nil)).Elem()
}

func (o ReplicationRuleAndOperatorResponseOutput) ToReplicationRuleAndOperatorResponseOutput() ReplicationRuleAndOperatorResponseOutput {
	return o
}

func (o ReplicationRuleAndOperatorResponseOutput) ToReplicationRuleAndOperatorResponseOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorResponseOutput {
	return o
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o ReplicationRuleAndOperatorResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleAndOperatorResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// An array of tags containing key and value pairs.
func (o ReplicationRuleAndOperatorResponseOutput) TagFilters() TagFilterResponseArrayOutput {
	return o.ApplyT(func(v ReplicationRuleAndOperatorResponse) []TagFilterResponse { return v.TagFilters }).(TagFilterResponseArrayOutput)
}

type ReplicationRuleAndOperatorResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationRuleAndOperatorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRuleAndOperatorResponse)(nil)).Elem()
}

func (o ReplicationRuleAndOperatorResponsePtrOutput) ToReplicationRuleAndOperatorResponsePtrOutput() ReplicationRuleAndOperatorResponsePtrOutput {
	return o
}

func (o ReplicationRuleAndOperatorResponsePtrOutput) ToReplicationRuleAndOperatorResponsePtrOutputWithContext(ctx context.Context) ReplicationRuleAndOperatorResponsePtrOutput {
	return o
}

func (o ReplicationRuleAndOperatorResponsePtrOutput) Elem() ReplicationRuleAndOperatorResponseOutput {
	return o.ApplyT(func(v *ReplicationRuleAndOperatorResponse) ReplicationRuleAndOperatorResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationRuleAndOperatorResponse
		return ret
	}).(ReplicationRuleAndOperatorResponseOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o ReplicationRuleAndOperatorResponsePtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRuleAndOperatorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// An array of tags containing key and value pairs.
func (o ReplicationRuleAndOperatorResponsePtrOutput) TagFilters() TagFilterResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationRuleAndOperatorResponse) []TagFilterResponse {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(TagFilterResponseArrayOutput)
}

// Definition of ReplicationRuleFilter
type ReplicationRuleFilter struct {
	// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.  +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.   +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
	And *ReplicationRuleAndOperator `pulumi:"and"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
	TagFilter *TagFilter `pulumi:"tagFilter"`
}

// ReplicationRuleFilterInput is an input type that accepts ReplicationRuleFilterArgs and ReplicationRuleFilterOutput values.
// You can construct a concrete instance of `ReplicationRuleFilterInput` via:
//
//	ReplicationRuleFilterArgs{...}
type ReplicationRuleFilterInput interface {
	pulumi.Input

	ToReplicationRuleFilterOutput() ReplicationRuleFilterOutput
	ToReplicationRuleFilterOutputWithContext(context.Context) ReplicationRuleFilterOutput
}

// Definition of ReplicationRuleFilter
type ReplicationRuleFilterArgs struct {
	// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.  +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.   +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
	And ReplicationRuleAndOperatorPtrInput `pulumi:"and"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
	TagFilter TagFilterPtrInput `pulumi:"tagFilter"`
}

func (ReplicationRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleFilter)(nil)).Elem()
}

func (i ReplicationRuleFilterArgs) ToReplicationRuleFilterOutput() ReplicationRuleFilterOutput {
	return i.ToReplicationRuleFilterOutputWithContext(context.Background())
}

func (i ReplicationRuleFilterArgs) ToReplicationRuleFilterOutputWithContext(ctx context.Context) ReplicationRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleFilterOutput)
}

func (i ReplicationRuleFilterArgs) ToReplicationRuleFilterPtrOutput() ReplicationRuleFilterPtrOutput {
	return i.ToReplicationRuleFilterPtrOutputWithContext(context.Background())
}

func (i ReplicationRuleFilterArgs) ToReplicationRuleFilterPtrOutputWithContext(ctx context.Context) ReplicationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleFilterOutput).ToReplicationRuleFilterPtrOutputWithContext(ctx)
}

// ReplicationRuleFilterPtrInput is an input type that accepts ReplicationRuleFilterArgs, ReplicationRuleFilterPtr and ReplicationRuleFilterPtrOutput values.
// You can construct a concrete instance of `ReplicationRuleFilterPtrInput` via:
//
//	        ReplicationRuleFilterArgs{...}
//
//	or:
//
//	        nil
type ReplicationRuleFilterPtrInput interface {
	pulumi.Input

	ToReplicationRuleFilterPtrOutput() ReplicationRuleFilterPtrOutput
	ToReplicationRuleFilterPtrOutputWithContext(context.Context) ReplicationRuleFilterPtrOutput
}

type replicationRuleFilterPtrType ReplicationRuleFilterArgs

func ReplicationRuleFilterPtr(v *ReplicationRuleFilterArgs) ReplicationRuleFilterPtrInput {
	return (*replicationRuleFilterPtrType)(v)
}

func (*replicationRuleFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRuleFilter)(nil)).Elem()
}

func (i *replicationRuleFilterPtrType) ToReplicationRuleFilterPtrOutput() ReplicationRuleFilterPtrOutput {
	return i.ToReplicationRuleFilterPtrOutputWithContext(context.Background())
}

func (i *replicationRuleFilterPtrType) ToReplicationRuleFilterPtrOutputWithContext(ctx context.Context) ReplicationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRuleFilterPtrOutput)
}

// Definition of ReplicationRuleFilter
type ReplicationRuleFilterOutput struct{ *pulumi.OutputState }

func (ReplicationRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleFilter)(nil)).Elem()
}

func (o ReplicationRuleFilterOutput) ToReplicationRuleFilterOutput() ReplicationRuleFilterOutput {
	return o
}

func (o ReplicationRuleFilterOutput) ToReplicationRuleFilterOutputWithContext(ctx context.Context) ReplicationRuleFilterOutput {
	return o
}

func (o ReplicationRuleFilterOutput) ToReplicationRuleFilterPtrOutput() ReplicationRuleFilterPtrOutput {
	return o.ToReplicationRuleFilterPtrOutputWithContext(context.Background())
}

func (o ReplicationRuleFilterOutput) ToReplicationRuleFilterPtrOutputWithContext(ctx context.Context) ReplicationRuleFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationRuleFilter) *ReplicationRuleFilter {
		return &v
	}).(ReplicationRuleFilterPtrOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.  +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.   +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag
func (o ReplicationRuleFilterOutput) And() ReplicationRuleAndOperatorPtrOutput {
	return o.ApplyT(func(v ReplicationRuleFilter) *ReplicationRuleAndOperator { return v.And }).(ReplicationRuleAndOperatorPtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o ReplicationRuleFilterOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
func (o ReplicationRuleFilterOutput) TagFilter() TagFilterPtrOutput {
	return o.ApplyT(func(v ReplicationRuleFilter) *TagFilter { return v.TagFilter }).(TagFilterPtrOutput)
}

type ReplicationRuleFilterPtrOutput struct{ *pulumi.OutputState }

func (ReplicationRuleFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRuleFilter)(nil)).Elem()
}

func (o ReplicationRuleFilterPtrOutput) ToReplicationRuleFilterPtrOutput() ReplicationRuleFilterPtrOutput {
	return o
}

func (o ReplicationRuleFilterPtrOutput) ToReplicationRuleFilterPtrOutputWithContext(ctx context.Context) ReplicationRuleFilterPtrOutput {
	return o
}

func (o ReplicationRuleFilterPtrOutput) Elem() ReplicationRuleFilterOutput {
	return o.ApplyT(func(v *ReplicationRuleFilter) ReplicationRuleFilter {
		if v != nil {
			return *v
		}
		var ret ReplicationRuleFilter
		return ret
	}).(ReplicationRuleFilterOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.  +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.   +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag
func (o ReplicationRuleFilterPtrOutput) And() ReplicationRuleAndOperatorPtrOutput {
	return o.ApplyT(func(v *ReplicationRuleFilter) *ReplicationRuleAndOperator {
		if v == nil {
			return nil
		}
		return v.And
	}).(ReplicationRuleAndOperatorPtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o ReplicationRuleFilterPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRuleFilter) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
func (o ReplicationRuleFilterPtrOutput) TagFilter() TagFilterPtrOutput {
	return o.ApplyT(func(v *ReplicationRuleFilter) *TagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilter
	}).(TagFilterPtrOutput)
}

// Definition of ReplicationRuleFilter
type ReplicationRuleFilterResponse struct {
	// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.  +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.   +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
	And *ReplicationRuleAndOperatorResponse `pulumi:"and"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
	TagFilter *TagFilterResponse `pulumi:"tagFilter"`
}

// Definition of ReplicationRuleFilter
type ReplicationRuleFilterResponseOutput struct{ *pulumi.OutputState }

func (ReplicationRuleFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleFilterResponse)(nil)).Elem()
}

func (o ReplicationRuleFilterResponseOutput) ToReplicationRuleFilterResponseOutput() ReplicationRuleFilterResponseOutput {
	return o
}

func (o ReplicationRuleFilterResponseOutput) ToReplicationRuleFilterResponseOutputWithContext(ctx context.Context) ReplicationRuleFilterResponseOutput {
	return o
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.  +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.   +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag
func (o ReplicationRuleFilterResponseOutput) And() ReplicationRuleAndOperatorResponsePtrOutput {
	return o.ApplyT(func(v ReplicationRuleFilterResponse) *ReplicationRuleAndOperatorResponse { return v.And }).(ReplicationRuleAndOperatorResponsePtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o ReplicationRuleFilterResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleFilterResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
func (o ReplicationRuleFilterResponseOutput) TagFilter() TagFilterResponsePtrOutput {
	return o.ApplyT(func(v ReplicationRuleFilterResponse) *TagFilterResponse { return v.TagFilter }).(TagFilterResponsePtrOutput)
}

type ReplicationRuleFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationRuleFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRuleFilterResponse)(nil)).Elem()
}

func (o ReplicationRuleFilterResponsePtrOutput) ToReplicationRuleFilterResponsePtrOutput() ReplicationRuleFilterResponsePtrOutput {
	return o
}

func (o ReplicationRuleFilterResponsePtrOutput) ToReplicationRuleFilterResponsePtrOutputWithContext(ctx context.Context) ReplicationRuleFilterResponsePtrOutput {
	return o
}

func (o ReplicationRuleFilterResponsePtrOutput) Elem() ReplicationRuleFilterResponseOutput {
	return o.ApplyT(func(v *ReplicationRuleFilterResponse) ReplicationRuleFilterResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationRuleFilterResponse
		return ret
	}).(ReplicationRuleFilterResponseOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:   +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.  +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag. A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.  For example:  +  If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.   +  If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag
func (o ReplicationRuleFilterResponsePtrOutput) And() ReplicationRuleAndOperatorResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationRuleFilterResponse) *ReplicationRuleAndOperatorResponse {
		if v == nil {
			return nil
		}
		return v.And
	}).(ReplicationRuleAndOperatorResponsePtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o ReplicationRuleFilterResponsePtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRuleFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// A container for specifying a tag key and value.  The rule applies only to objects that have the tag in their tag set. Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
func (o ReplicationRuleFilterResponsePtrOutput) TagFilter() TagFilterResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationRuleFilterResponse) *TagFilterResponse {
		if v == nil {
			return nil
		}
		return v.TagFilter
	}).(TagFilterResponsePtrOutput)
}

// Definition of ReplicationRule
type ReplicationRuleResponse struct {
	// Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations). Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
	DeleteMarkerReplication *DeleteMarkerReplicationResponse `pulumi:"deleteMarkerReplication"`
	// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
	Destination *ReplicationDestinationResponse `pulumi:"destination"`
	// A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.  V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element. A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element.
	Filter *ReplicationRuleFilterResponse `pulumi:"filter"`
	// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as 'ID'.
	Id *string `pulumi:"id"`
	// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
	Priority *int `pulumi:"priority"`
	// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
	SourceSelectionCriteria *SourceSelectionCriteriaResponse `pulumi:"sourceSelectionCriteria"`
	// Specifies whether the rule is enabled.
	Status *string `pulumi:"status"`
}

// Definition of ReplicationRule
type ReplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (ReplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRuleResponse)(nil)).Elem()
}

func (o ReplicationRuleResponseOutput) ToReplicationRuleResponseOutput() ReplicationRuleResponseOutput {
	return o
}

func (o ReplicationRuleResponseOutput) ToReplicationRuleResponseOutputWithContext(ctx context.Context) ReplicationRuleResponseOutput {
	return o
}

// Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations). Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
func (o ReplicationRuleResponseOutput) DeleteMarkerReplication() DeleteMarkerReplicationResponsePtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *DeleteMarkerReplicationResponse { return v.DeleteMarkerReplication }).(DeleteMarkerReplicationResponsePtrOutput)
}

// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
func (o ReplicationRuleResponseOutput) Destination() ReplicationDestinationResponsePtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *ReplicationDestinationResponse { return v.Destination }).(ReplicationDestinationResponsePtrOutput)
}

// A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.  V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the “Prefix“ directly as a child element of the “Rule“ element. A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element.
func (o ReplicationRuleResponseOutput) Filter() ReplicationRuleFilterResponsePtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *ReplicationRuleFilterResponse { return v.Filter }).(ReplicationRuleFilterResponsePtrOutput)
}

// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as 'ID'.
func (o ReplicationRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the “Prefix“ directly as a child element of the “Rule“ element.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o ReplicationRuleResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
func (o ReplicationRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
func (o ReplicationRuleResponseOutput) SourceSelectionCriteria() SourceSelectionCriteriaResponsePtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *SourceSelectionCriteriaResponse { return v.SourceSelectionCriteria }).(SourceSelectionCriteriaResponsePtrOutput)
}

// Specifies whether the rule is enabled.
func (o ReplicationRuleResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRuleResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReplicationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRuleResponse)(nil)).Elem()
}

func (o ReplicationRuleResponseArrayOutput) ToReplicationRuleResponseArrayOutput() ReplicationRuleResponseArrayOutput {
	return o
}

func (o ReplicationRuleResponseArrayOutput) ToReplicationRuleResponseArrayOutputWithContext(ctx context.Context) ReplicationRuleResponseArrayOutput {
	return o
}

func (o ReplicationRuleResponseArrayOutput) Index(i pulumi.IntInput) ReplicationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRuleResponse {
		return vs[0].([]ReplicationRuleResponse)[vs[1].(int)]
	}).(ReplicationRuleResponseOutput)
}

// Definition of ReplicationSubnetGroup
type ReplicationSubnetGroup struct {
	// <p>A description for the replication subnet group.</p>
	ReplicationSubnetGroupDescription *string `pulumi:"replicationSubnetGroupDescription"`
	// <p>The identifier of the replication instance subnet group.</p>
	ReplicationSubnetGroupIdentifier *string `pulumi:"replicationSubnetGroupIdentifier"`
	// <p>The status of the subnet group.</p>
	SubnetGroupStatus *string `pulumi:"subnetGroupStatus"`
	// <p>The subnets that are in the subnet group.</p>
	Subnets []Subnet `pulumi:"subnets"`
	// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
	SupportedNetworkTypes []string `pulumi:"supportedNetworkTypes"`
	// <p>The ID of the VPC.</p>
	VpcId *string `pulumi:"vpcId"`
}

// ReplicationSubnetGroupInput is an input type that accepts ReplicationSubnetGroupArgs and ReplicationSubnetGroupOutput values.
// You can construct a concrete instance of `ReplicationSubnetGroupInput` via:
//
//	ReplicationSubnetGroupArgs{...}
type ReplicationSubnetGroupInput interface {
	pulumi.Input

	ToReplicationSubnetGroupOutput() ReplicationSubnetGroupOutput
	ToReplicationSubnetGroupOutputWithContext(context.Context) ReplicationSubnetGroupOutput
}

// Definition of ReplicationSubnetGroup
type ReplicationSubnetGroupArgs struct {
	// <p>A description for the replication subnet group.</p>
	ReplicationSubnetGroupDescription pulumi.StringPtrInput `pulumi:"replicationSubnetGroupDescription"`
	// <p>The identifier of the replication instance subnet group.</p>
	ReplicationSubnetGroupIdentifier pulumi.StringPtrInput `pulumi:"replicationSubnetGroupIdentifier"`
	// <p>The status of the subnet group.</p>
	SubnetGroupStatus pulumi.StringPtrInput `pulumi:"subnetGroupStatus"`
	// <p>The subnets that are in the subnet group.</p>
	Subnets SubnetArrayInput `pulumi:"subnets"`
	// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
	SupportedNetworkTypes pulumi.StringArrayInput `pulumi:"supportedNetworkTypes"`
	// <p>The ID of the VPC.</p>
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (ReplicationSubnetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSubnetGroup)(nil)).Elem()
}

func (i ReplicationSubnetGroupArgs) ToReplicationSubnetGroupOutput() ReplicationSubnetGroupOutput {
	return i.ToReplicationSubnetGroupOutputWithContext(context.Background())
}

func (i ReplicationSubnetGroupArgs) ToReplicationSubnetGroupOutputWithContext(ctx context.Context) ReplicationSubnetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSubnetGroupOutput)
}

func (i ReplicationSubnetGroupArgs) ToReplicationSubnetGroupPtrOutput() ReplicationSubnetGroupPtrOutput {
	return i.ToReplicationSubnetGroupPtrOutputWithContext(context.Background())
}

func (i ReplicationSubnetGroupArgs) ToReplicationSubnetGroupPtrOutputWithContext(ctx context.Context) ReplicationSubnetGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSubnetGroupOutput).ToReplicationSubnetGroupPtrOutputWithContext(ctx)
}

// ReplicationSubnetGroupPtrInput is an input type that accepts ReplicationSubnetGroupArgs, ReplicationSubnetGroupPtr and ReplicationSubnetGroupPtrOutput values.
// You can construct a concrete instance of `ReplicationSubnetGroupPtrInput` via:
//
//	        ReplicationSubnetGroupArgs{...}
//
//	or:
//
//	        nil
type ReplicationSubnetGroupPtrInput interface {
	pulumi.Input

	ToReplicationSubnetGroupPtrOutput() ReplicationSubnetGroupPtrOutput
	ToReplicationSubnetGroupPtrOutputWithContext(context.Context) ReplicationSubnetGroupPtrOutput
}

type replicationSubnetGroupPtrType ReplicationSubnetGroupArgs

func ReplicationSubnetGroupPtr(v *ReplicationSubnetGroupArgs) ReplicationSubnetGroupPtrInput {
	return (*replicationSubnetGroupPtrType)(v)
}

func (*replicationSubnetGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSubnetGroup)(nil)).Elem()
}

func (i *replicationSubnetGroupPtrType) ToReplicationSubnetGroupPtrOutput() ReplicationSubnetGroupPtrOutput {
	return i.ToReplicationSubnetGroupPtrOutputWithContext(context.Background())
}

func (i *replicationSubnetGroupPtrType) ToReplicationSubnetGroupPtrOutputWithContext(ctx context.Context) ReplicationSubnetGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSubnetGroupPtrOutput)
}

// Definition of ReplicationSubnetGroup
type ReplicationSubnetGroupOutput struct{ *pulumi.OutputState }

func (ReplicationSubnetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSubnetGroup)(nil)).Elem()
}

func (o ReplicationSubnetGroupOutput) ToReplicationSubnetGroupOutput() ReplicationSubnetGroupOutput {
	return o
}

func (o ReplicationSubnetGroupOutput) ToReplicationSubnetGroupOutputWithContext(ctx context.Context) ReplicationSubnetGroupOutput {
	return o
}

func (o ReplicationSubnetGroupOutput) ToReplicationSubnetGroupPtrOutput() ReplicationSubnetGroupPtrOutput {
	return o.ToReplicationSubnetGroupPtrOutputWithContext(context.Background())
}

func (o ReplicationSubnetGroupOutput) ToReplicationSubnetGroupPtrOutputWithContext(ctx context.Context) ReplicationSubnetGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationSubnetGroup) *ReplicationSubnetGroup {
		return &v
	}).(ReplicationSubnetGroupPtrOutput)
}

// <p>A description for the replication subnet group.</p>
func (o ReplicationSubnetGroupOutput) ReplicationSubnetGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroup) *string { return v.ReplicationSubnetGroupDescription }).(pulumi.StringPtrOutput)
}

// <p>The identifier of the replication instance subnet group.</p>
func (o ReplicationSubnetGroupOutput) ReplicationSubnetGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroup) *string { return v.ReplicationSubnetGroupIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The status of the subnet group.</p>
func (o ReplicationSubnetGroupOutput) SubnetGroupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroup) *string { return v.SubnetGroupStatus }).(pulumi.StringPtrOutput)
}

// <p>The subnets that are in the subnet group.</p>
func (o ReplicationSubnetGroupOutput) Subnets() SubnetArrayOutput {
	return o.ApplyT(func(v ReplicationSubnetGroup) []Subnet { return v.Subnets }).(SubnetArrayOutput)
}

// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationSubnetGroupOutput) SupportedNetworkTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationSubnetGroup) []string { return v.SupportedNetworkTypes }).(pulumi.StringArrayOutput)
}

// <p>The ID of the VPC.</p>
func (o ReplicationSubnetGroupOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroup) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ReplicationSubnetGroupPtrOutput struct{ *pulumi.OutputState }

func (ReplicationSubnetGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSubnetGroup)(nil)).Elem()
}

func (o ReplicationSubnetGroupPtrOutput) ToReplicationSubnetGroupPtrOutput() ReplicationSubnetGroupPtrOutput {
	return o
}

func (o ReplicationSubnetGroupPtrOutput) ToReplicationSubnetGroupPtrOutputWithContext(ctx context.Context) ReplicationSubnetGroupPtrOutput {
	return o
}

func (o ReplicationSubnetGroupPtrOutput) Elem() ReplicationSubnetGroupOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) ReplicationSubnetGroup {
		if v != nil {
			return *v
		}
		var ret ReplicationSubnetGroup
		return ret
	}).(ReplicationSubnetGroupOutput)
}

// <p>A description for the replication subnet group.</p>
func (o ReplicationSubnetGroupPtrOutput) ReplicationSubnetGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationSubnetGroupDescription
	}).(pulumi.StringPtrOutput)
}

// <p>The identifier of the replication instance subnet group.</p>
func (o ReplicationSubnetGroupPtrOutput) ReplicationSubnetGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationSubnetGroupIdentifier
	}).(pulumi.StringPtrOutput)
}

// <p>The status of the subnet group.</p>
func (o ReplicationSubnetGroupPtrOutput) SubnetGroupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) *string {
		if v == nil {
			return nil
		}
		return v.SubnetGroupStatus
	}).(pulumi.StringPtrOutput)
}

// <p>The subnets that are in the subnet group.</p>
func (o ReplicationSubnetGroupPtrOutput) Subnets() SubnetArrayOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) []Subnet {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetArrayOutput)
}

// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationSubnetGroupPtrOutput) SupportedNetworkTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) []string {
		if v == nil {
			return nil
		}
		return v.SupportedNetworkTypes
	}).(pulumi.StringArrayOutput)
}

// <p>The ID of the VPC.</p>
func (o ReplicationSubnetGroupPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroup) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicationSubnetGroup
type ReplicationSubnetGroupResponse struct {
	// <p>A description for the replication subnet group.</p>
	ReplicationSubnetGroupDescription *string `pulumi:"replicationSubnetGroupDescription"`
	// <p>The identifier of the replication instance subnet group.</p>
	ReplicationSubnetGroupIdentifier *string `pulumi:"replicationSubnetGroupIdentifier"`
	// <p>The status of the subnet group.</p>
	SubnetGroupStatus *string `pulumi:"subnetGroupStatus"`
	// <p>The subnets that are in the subnet group.</p>
	Subnets []SubnetResponse `pulumi:"subnets"`
	// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
	SupportedNetworkTypes []string `pulumi:"supportedNetworkTypes"`
	// <p>The ID of the VPC.</p>
	VpcId *string `pulumi:"vpcId"`
}

// Definition of ReplicationSubnetGroup
type ReplicationSubnetGroupResponseOutput struct{ *pulumi.OutputState }

func (ReplicationSubnetGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSubnetGroupResponse)(nil)).Elem()
}

func (o ReplicationSubnetGroupResponseOutput) ToReplicationSubnetGroupResponseOutput() ReplicationSubnetGroupResponseOutput {
	return o
}

func (o ReplicationSubnetGroupResponseOutput) ToReplicationSubnetGroupResponseOutputWithContext(ctx context.Context) ReplicationSubnetGroupResponseOutput {
	return o
}

// <p>A description for the replication subnet group.</p>
func (o ReplicationSubnetGroupResponseOutput) ReplicationSubnetGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroupResponse) *string { return v.ReplicationSubnetGroupDescription }).(pulumi.StringPtrOutput)
}

// <p>The identifier of the replication instance subnet group.</p>
func (o ReplicationSubnetGroupResponseOutput) ReplicationSubnetGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroupResponse) *string { return v.ReplicationSubnetGroupIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The status of the subnet group.</p>
func (o ReplicationSubnetGroupResponseOutput) SubnetGroupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroupResponse) *string { return v.SubnetGroupStatus }).(pulumi.StringPtrOutput)
}

// <p>The subnets that are in the subnet group.</p>
func (o ReplicationSubnetGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ReplicationSubnetGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationSubnetGroupResponseOutput) SupportedNetworkTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationSubnetGroupResponse) []string { return v.SupportedNetworkTypes }).(pulumi.StringArrayOutput)
}

// <p>The ID of the VPC.</p>
func (o ReplicationSubnetGroupResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSubnetGroupResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ReplicationSubnetGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationSubnetGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSubnetGroupResponse)(nil)).Elem()
}

func (o ReplicationSubnetGroupResponsePtrOutput) ToReplicationSubnetGroupResponsePtrOutput() ReplicationSubnetGroupResponsePtrOutput {
	return o
}

func (o ReplicationSubnetGroupResponsePtrOutput) ToReplicationSubnetGroupResponsePtrOutputWithContext(ctx context.Context) ReplicationSubnetGroupResponsePtrOutput {
	return o
}

func (o ReplicationSubnetGroupResponsePtrOutput) Elem() ReplicationSubnetGroupResponseOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) ReplicationSubnetGroupResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationSubnetGroupResponse
		return ret
	}).(ReplicationSubnetGroupResponseOutput)
}

// <p>A description for the replication subnet group.</p>
func (o ReplicationSubnetGroupResponsePtrOutput) ReplicationSubnetGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationSubnetGroupDescription
	}).(pulumi.StringPtrOutput)
}

// <p>The identifier of the replication instance subnet group.</p>
func (o ReplicationSubnetGroupResponsePtrOutput) ReplicationSubnetGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationSubnetGroupIdentifier
	}).(pulumi.StringPtrOutput)
}

// <p>The status of the subnet group.</p>
func (o ReplicationSubnetGroupResponsePtrOutput) SubnetGroupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetGroupStatus
	}).(pulumi.StringPtrOutput)
}

// <p>The subnets that are in the subnet group.</p>
func (o ReplicationSubnetGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
func (o ReplicationSubnetGroupResponsePtrOutput) SupportedNetworkTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) []string {
		if v == nil {
			return nil
		}
		return v.SupportedNetworkTypes
	}).(pulumi.StringArrayOutput)
}

// <p>The ID of the VPC.</p>
func (o ReplicationSubnetGroupResponsePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSubnetGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of ReplicationTime
type ReplicationTime struct {
	// Specifies whether the replication time is enabled.
	Status *string `pulumi:"status"`
	// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
	Time *ReplicationTimeValue `pulumi:"time"`
}

// ReplicationTimeInput is an input type that accepts ReplicationTimeArgs and ReplicationTimeOutput values.
// You can construct a concrete instance of `ReplicationTimeInput` via:
//
//	ReplicationTimeArgs{...}
type ReplicationTimeInput interface {
	pulumi.Input

	ToReplicationTimeOutput() ReplicationTimeOutput
	ToReplicationTimeOutputWithContext(context.Context) ReplicationTimeOutput
}

// Definition of ReplicationTime
type ReplicationTimeArgs struct {
	// Specifies whether the replication time is enabled.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
	Time ReplicationTimeValuePtrInput `pulumi:"time"`
}

func (ReplicationTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTime)(nil)).Elem()
}

func (i ReplicationTimeArgs) ToReplicationTimeOutput() ReplicationTimeOutput {
	return i.ToReplicationTimeOutputWithContext(context.Background())
}

func (i ReplicationTimeArgs) ToReplicationTimeOutputWithContext(ctx context.Context) ReplicationTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTimeOutput)
}

func (i ReplicationTimeArgs) ToReplicationTimePtrOutput() ReplicationTimePtrOutput {
	return i.ToReplicationTimePtrOutputWithContext(context.Background())
}

func (i ReplicationTimeArgs) ToReplicationTimePtrOutputWithContext(ctx context.Context) ReplicationTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTimeOutput).ToReplicationTimePtrOutputWithContext(ctx)
}

// ReplicationTimePtrInput is an input type that accepts ReplicationTimeArgs, ReplicationTimePtr and ReplicationTimePtrOutput values.
// You can construct a concrete instance of `ReplicationTimePtrInput` via:
//
//	        ReplicationTimeArgs{...}
//
//	or:
//
//	        nil
type ReplicationTimePtrInput interface {
	pulumi.Input

	ToReplicationTimePtrOutput() ReplicationTimePtrOutput
	ToReplicationTimePtrOutputWithContext(context.Context) ReplicationTimePtrOutput
}

type replicationTimePtrType ReplicationTimeArgs

func ReplicationTimePtr(v *ReplicationTimeArgs) ReplicationTimePtrInput {
	return (*replicationTimePtrType)(v)
}

func (*replicationTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTime)(nil)).Elem()
}

func (i *replicationTimePtrType) ToReplicationTimePtrOutput() ReplicationTimePtrOutput {
	return i.ToReplicationTimePtrOutputWithContext(context.Background())
}

func (i *replicationTimePtrType) ToReplicationTimePtrOutputWithContext(ctx context.Context) ReplicationTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTimePtrOutput)
}

// Definition of ReplicationTime
type ReplicationTimeOutput struct{ *pulumi.OutputState }

func (ReplicationTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTime)(nil)).Elem()
}

func (o ReplicationTimeOutput) ToReplicationTimeOutput() ReplicationTimeOutput {
	return o
}

func (o ReplicationTimeOutput) ToReplicationTimeOutputWithContext(ctx context.Context) ReplicationTimeOutput {
	return o
}

func (o ReplicationTimeOutput) ToReplicationTimePtrOutput() ReplicationTimePtrOutput {
	return o.ToReplicationTimePtrOutputWithContext(context.Background())
}

func (o ReplicationTimeOutput) ToReplicationTimePtrOutputWithContext(ctx context.Context) ReplicationTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationTime) *ReplicationTime {
		return &v
	}).(ReplicationTimePtrOutput)
}

// Specifies whether the replication time is enabled.
func (o ReplicationTimeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationTime) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o ReplicationTimeOutput) Time() ReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v ReplicationTime) *ReplicationTimeValue { return v.Time }).(ReplicationTimeValuePtrOutput)
}

type ReplicationTimePtrOutput struct{ *pulumi.OutputState }

func (ReplicationTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTime)(nil)).Elem()
}

func (o ReplicationTimePtrOutput) ToReplicationTimePtrOutput() ReplicationTimePtrOutput {
	return o
}

func (o ReplicationTimePtrOutput) ToReplicationTimePtrOutputWithContext(ctx context.Context) ReplicationTimePtrOutput {
	return o
}

func (o ReplicationTimePtrOutput) Elem() ReplicationTimeOutput {
	return o.ApplyT(func(v *ReplicationTime) ReplicationTime {
		if v != nil {
			return *v
		}
		var ret ReplicationTime
		return ret
	}).(ReplicationTimeOutput)
}

// Specifies whether the replication time is enabled.
func (o ReplicationTimePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationTime) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o ReplicationTimePtrOutput) Time() ReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v *ReplicationTime) *ReplicationTimeValue {
		if v == nil {
			return nil
		}
		return v.Time
	}).(ReplicationTimeValuePtrOutput)
}

// Definition of ReplicationTime
type ReplicationTimeResponse struct {
	// Specifies whether the replication time is enabled.
	Status *string `pulumi:"status"`
	// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
	Time *ReplicationTimeValueResponse `pulumi:"time"`
}

// Definition of ReplicationTime
type ReplicationTimeResponseOutput struct{ *pulumi.OutputState }

func (ReplicationTimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTimeResponse)(nil)).Elem()
}

func (o ReplicationTimeResponseOutput) ToReplicationTimeResponseOutput() ReplicationTimeResponseOutput {
	return o
}

func (o ReplicationTimeResponseOutput) ToReplicationTimeResponseOutputWithContext(ctx context.Context) ReplicationTimeResponseOutput {
	return o
}

// Specifies whether the replication time is enabled.
func (o ReplicationTimeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationTimeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o ReplicationTimeResponseOutput) Time() ReplicationTimeValueResponsePtrOutput {
	return o.ApplyT(func(v ReplicationTimeResponse) *ReplicationTimeValueResponse { return v.Time }).(ReplicationTimeValueResponsePtrOutput)
}

type ReplicationTimeResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationTimeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTimeResponse)(nil)).Elem()
}

func (o ReplicationTimeResponsePtrOutput) ToReplicationTimeResponsePtrOutput() ReplicationTimeResponsePtrOutput {
	return o
}

func (o ReplicationTimeResponsePtrOutput) ToReplicationTimeResponsePtrOutputWithContext(ctx context.Context) ReplicationTimeResponsePtrOutput {
	return o
}

func (o ReplicationTimeResponsePtrOutput) Elem() ReplicationTimeResponseOutput {
	return o.ApplyT(func(v *ReplicationTimeResponse) ReplicationTimeResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationTimeResponse
		return ret
	}).(ReplicationTimeResponseOutput)
}

// Specifies whether the replication time is enabled.
func (o ReplicationTimeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationTimeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A container specifying the time by which replication should be complete for all objects and operations on objects. A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
func (o ReplicationTimeResponsePtrOutput) Time() ReplicationTimeValueResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationTimeResponse) *ReplicationTimeValueResponse {
		if v == nil {
			return nil
		}
		return v.Time
	}).(ReplicationTimeValueResponsePtrOutput)
}

// Definition of ReplicationTimeValue
type ReplicationTimeValue struct {
	// Contains an integer specifying time in minutes.   Valid value: 15
	Minutes *int `pulumi:"minutes"`
}

// ReplicationTimeValueInput is an input type that accepts ReplicationTimeValueArgs and ReplicationTimeValueOutput values.
// You can construct a concrete instance of `ReplicationTimeValueInput` via:
//
//	ReplicationTimeValueArgs{...}
type ReplicationTimeValueInput interface {
	pulumi.Input

	ToReplicationTimeValueOutput() ReplicationTimeValueOutput
	ToReplicationTimeValueOutputWithContext(context.Context) ReplicationTimeValueOutput
}

// Definition of ReplicationTimeValue
type ReplicationTimeValueArgs struct {
	// Contains an integer specifying time in minutes.   Valid value: 15
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (ReplicationTimeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTimeValue)(nil)).Elem()
}

func (i ReplicationTimeValueArgs) ToReplicationTimeValueOutput() ReplicationTimeValueOutput {
	return i.ToReplicationTimeValueOutputWithContext(context.Background())
}

func (i ReplicationTimeValueArgs) ToReplicationTimeValueOutputWithContext(ctx context.Context) ReplicationTimeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTimeValueOutput)
}

func (i ReplicationTimeValueArgs) ToReplicationTimeValuePtrOutput() ReplicationTimeValuePtrOutput {
	return i.ToReplicationTimeValuePtrOutputWithContext(context.Background())
}

func (i ReplicationTimeValueArgs) ToReplicationTimeValuePtrOutputWithContext(ctx context.Context) ReplicationTimeValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTimeValueOutput).ToReplicationTimeValuePtrOutputWithContext(ctx)
}

// ReplicationTimeValuePtrInput is an input type that accepts ReplicationTimeValueArgs, ReplicationTimeValuePtr and ReplicationTimeValuePtrOutput values.
// You can construct a concrete instance of `ReplicationTimeValuePtrInput` via:
//
//	        ReplicationTimeValueArgs{...}
//
//	or:
//
//	        nil
type ReplicationTimeValuePtrInput interface {
	pulumi.Input

	ToReplicationTimeValuePtrOutput() ReplicationTimeValuePtrOutput
	ToReplicationTimeValuePtrOutputWithContext(context.Context) ReplicationTimeValuePtrOutput
}

type replicationTimeValuePtrType ReplicationTimeValueArgs

func ReplicationTimeValuePtr(v *ReplicationTimeValueArgs) ReplicationTimeValuePtrInput {
	return (*replicationTimeValuePtrType)(v)
}

func (*replicationTimeValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTimeValue)(nil)).Elem()
}

func (i *replicationTimeValuePtrType) ToReplicationTimeValuePtrOutput() ReplicationTimeValuePtrOutput {
	return i.ToReplicationTimeValuePtrOutputWithContext(context.Background())
}

func (i *replicationTimeValuePtrType) ToReplicationTimeValuePtrOutputWithContext(ctx context.Context) ReplicationTimeValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTimeValuePtrOutput)
}

// Definition of ReplicationTimeValue
type ReplicationTimeValueOutput struct{ *pulumi.OutputState }

func (ReplicationTimeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTimeValue)(nil)).Elem()
}

func (o ReplicationTimeValueOutput) ToReplicationTimeValueOutput() ReplicationTimeValueOutput {
	return o
}

func (o ReplicationTimeValueOutput) ToReplicationTimeValueOutputWithContext(ctx context.Context) ReplicationTimeValueOutput {
	return o
}

func (o ReplicationTimeValueOutput) ToReplicationTimeValuePtrOutput() ReplicationTimeValuePtrOutput {
	return o.ToReplicationTimeValuePtrOutputWithContext(context.Background())
}

func (o ReplicationTimeValueOutput) ToReplicationTimeValuePtrOutputWithContext(ctx context.Context) ReplicationTimeValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationTimeValue) *ReplicationTimeValue {
		return &v
	}).(ReplicationTimeValuePtrOutput)
}

// Contains an integer specifying time in minutes.   Valid value: 15
func (o ReplicationTimeValueOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationTimeValue) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type ReplicationTimeValuePtrOutput struct{ *pulumi.OutputState }

func (ReplicationTimeValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTimeValue)(nil)).Elem()
}

func (o ReplicationTimeValuePtrOutput) ToReplicationTimeValuePtrOutput() ReplicationTimeValuePtrOutput {
	return o
}

func (o ReplicationTimeValuePtrOutput) ToReplicationTimeValuePtrOutputWithContext(ctx context.Context) ReplicationTimeValuePtrOutput {
	return o
}

func (o ReplicationTimeValuePtrOutput) Elem() ReplicationTimeValueOutput {
	return o.ApplyT(func(v *ReplicationTimeValue) ReplicationTimeValue {
		if v != nil {
			return *v
		}
		var ret ReplicationTimeValue
		return ret
	}).(ReplicationTimeValueOutput)
}

// Contains an integer specifying time in minutes.   Valid value: 15
func (o ReplicationTimeValuePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationTimeValue) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Definition of ReplicationTimeValue
type ReplicationTimeValueResponse struct {
	// Contains an integer specifying time in minutes.   Valid value: 15
	Minutes *int `pulumi:"minutes"`
}

// Definition of ReplicationTimeValue
type ReplicationTimeValueResponseOutput struct{ *pulumi.OutputState }

func (ReplicationTimeValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTimeValueResponse)(nil)).Elem()
}

func (o ReplicationTimeValueResponseOutput) ToReplicationTimeValueResponseOutput() ReplicationTimeValueResponseOutput {
	return o
}

func (o ReplicationTimeValueResponseOutput) ToReplicationTimeValueResponseOutputWithContext(ctx context.Context) ReplicationTimeValueResponseOutput {
	return o
}

// Contains an integer specifying time in minutes.   Valid value: 15
func (o ReplicationTimeValueResponseOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationTimeValueResponse) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type ReplicationTimeValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationTimeValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTimeValueResponse)(nil)).Elem()
}

func (o ReplicationTimeValueResponsePtrOutput) ToReplicationTimeValueResponsePtrOutput() ReplicationTimeValueResponsePtrOutput {
	return o
}

func (o ReplicationTimeValueResponsePtrOutput) ToReplicationTimeValueResponsePtrOutputWithContext(ctx context.Context) ReplicationTimeValueResponsePtrOutput {
	return o
}

func (o ReplicationTimeValueResponsePtrOutput) Elem() ReplicationTimeValueResponseOutput {
	return o.ApplyT(func(v *ReplicationTimeValueResponse) ReplicationTimeValueResponse {
		if v != nil {
			return *v
		}
		var ret ReplicationTimeValueResponse
		return ret
	}).(ReplicationTimeValueResponseOutput)
}

// Contains an integer specifying time in minutes.   Valid value: 15
func (o ReplicationTimeValueResponsePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationTimeValueResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Definition of RepoUpgradeOnBootEnumValue
type RepoUpgradeOnBootEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// RepoUpgradeOnBootEnumValueInput is an input type that accepts RepoUpgradeOnBootEnumValueArgs and RepoUpgradeOnBootEnumValueOutput values.
// You can construct a concrete instance of `RepoUpgradeOnBootEnumValueInput` via:
//
//	RepoUpgradeOnBootEnumValueArgs{...}
type RepoUpgradeOnBootEnumValueInput interface {
	pulumi.Input

	ToRepoUpgradeOnBootEnumValueOutput() RepoUpgradeOnBootEnumValueOutput
	ToRepoUpgradeOnBootEnumValueOutputWithContext(context.Context) RepoUpgradeOnBootEnumValueOutput
}

// Definition of RepoUpgradeOnBootEnumValue
type RepoUpgradeOnBootEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RepoUpgradeOnBootEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoUpgradeOnBootEnumValue)(nil)).Elem()
}

func (i RepoUpgradeOnBootEnumValueArgs) ToRepoUpgradeOnBootEnumValueOutput() RepoUpgradeOnBootEnumValueOutput {
	return i.ToRepoUpgradeOnBootEnumValueOutputWithContext(context.Background())
}

func (i RepoUpgradeOnBootEnumValueArgs) ToRepoUpgradeOnBootEnumValueOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoUpgradeOnBootEnumValueOutput)
}

func (i RepoUpgradeOnBootEnumValueArgs) ToRepoUpgradeOnBootEnumValuePtrOutput() RepoUpgradeOnBootEnumValuePtrOutput {
	return i.ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(context.Background())
}

func (i RepoUpgradeOnBootEnumValueArgs) ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoUpgradeOnBootEnumValueOutput).ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(ctx)
}

// RepoUpgradeOnBootEnumValuePtrInput is an input type that accepts RepoUpgradeOnBootEnumValueArgs, RepoUpgradeOnBootEnumValuePtr and RepoUpgradeOnBootEnumValuePtrOutput values.
// You can construct a concrete instance of `RepoUpgradeOnBootEnumValuePtrInput` via:
//
//	        RepoUpgradeOnBootEnumValueArgs{...}
//
//	or:
//
//	        nil
type RepoUpgradeOnBootEnumValuePtrInput interface {
	pulumi.Input

	ToRepoUpgradeOnBootEnumValuePtrOutput() RepoUpgradeOnBootEnumValuePtrOutput
	ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(context.Context) RepoUpgradeOnBootEnumValuePtrOutput
}

type repoUpgradeOnBootEnumValuePtrType RepoUpgradeOnBootEnumValueArgs

func RepoUpgradeOnBootEnumValuePtr(v *RepoUpgradeOnBootEnumValueArgs) RepoUpgradeOnBootEnumValuePtrInput {
	return (*repoUpgradeOnBootEnumValuePtrType)(v)
}

func (*repoUpgradeOnBootEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoUpgradeOnBootEnumValue)(nil)).Elem()
}

func (i *repoUpgradeOnBootEnumValuePtrType) ToRepoUpgradeOnBootEnumValuePtrOutput() RepoUpgradeOnBootEnumValuePtrOutput {
	return i.ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(context.Background())
}

func (i *repoUpgradeOnBootEnumValuePtrType) ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoUpgradeOnBootEnumValuePtrOutput)
}

// Definition of RepoUpgradeOnBootEnumValue
type RepoUpgradeOnBootEnumValueOutput struct{ *pulumi.OutputState }

func (RepoUpgradeOnBootEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoUpgradeOnBootEnumValue)(nil)).Elem()
}

func (o RepoUpgradeOnBootEnumValueOutput) ToRepoUpgradeOnBootEnumValueOutput() RepoUpgradeOnBootEnumValueOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValueOutput) ToRepoUpgradeOnBootEnumValueOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValueOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValueOutput) ToRepoUpgradeOnBootEnumValuePtrOutput() RepoUpgradeOnBootEnumValuePtrOutput {
	return o.ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(context.Background())
}

func (o RepoUpgradeOnBootEnumValueOutput) ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepoUpgradeOnBootEnumValue) *RepoUpgradeOnBootEnumValue {
		return &v
	}).(RepoUpgradeOnBootEnumValuePtrOutput)
}

// Property value
func (o RepoUpgradeOnBootEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoUpgradeOnBootEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RepoUpgradeOnBootEnumValuePtrOutput struct{ *pulumi.OutputState }

func (RepoUpgradeOnBootEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoUpgradeOnBootEnumValue)(nil)).Elem()
}

func (o RepoUpgradeOnBootEnumValuePtrOutput) ToRepoUpgradeOnBootEnumValuePtrOutput() RepoUpgradeOnBootEnumValuePtrOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValuePtrOutput) ToRepoUpgradeOnBootEnumValuePtrOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValuePtrOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValuePtrOutput) Elem() RepoUpgradeOnBootEnumValueOutput {
	return o.ApplyT(func(v *RepoUpgradeOnBootEnumValue) RepoUpgradeOnBootEnumValue {
		if v != nil {
			return *v
		}
		var ret RepoUpgradeOnBootEnumValue
		return ret
	}).(RepoUpgradeOnBootEnumValueOutput)
}

// Property value
func (o RepoUpgradeOnBootEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoUpgradeOnBootEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RepoUpgradeOnBootEnumValue
type RepoUpgradeOnBootEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of RepoUpgradeOnBootEnumValue
type RepoUpgradeOnBootEnumValueResponseOutput struct{ *pulumi.OutputState }

func (RepoUpgradeOnBootEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoUpgradeOnBootEnumValueResponse)(nil)).Elem()
}

func (o RepoUpgradeOnBootEnumValueResponseOutput) ToRepoUpgradeOnBootEnumValueResponseOutput() RepoUpgradeOnBootEnumValueResponseOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValueResponseOutput) ToRepoUpgradeOnBootEnumValueResponseOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValueResponseOutput {
	return o
}

// Property value
func (o RepoUpgradeOnBootEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoUpgradeOnBootEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RepoUpgradeOnBootEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (RepoUpgradeOnBootEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoUpgradeOnBootEnumValueResponse)(nil)).Elem()
}

func (o RepoUpgradeOnBootEnumValueResponsePtrOutput) ToRepoUpgradeOnBootEnumValueResponsePtrOutput() RepoUpgradeOnBootEnumValueResponsePtrOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValueResponsePtrOutput) ToRepoUpgradeOnBootEnumValueResponsePtrOutputWithContext(ctx context.Context) RepoUpgradeOnBootEnumValueResponsePtrOutput {
	return o
}

func (o RepoUpgradeOnBootEnumValueResponsePtrOutput) Elem() RepoUpgradeOnBootEnumValueResponseOutput {
	return o.ApplyT(func(v *RepoUpgradeOnBootEnumValueResponse) RepoUpgradeOnBootEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret RepoUpgradeOnBootEnumValueResponse
		return ret
	}).(RepoUpgradeOnBootEnumValueResponseOutput)
}

// Property value
func (o RepoUpgradeOnBootEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoUpgradeOnBootEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of RepositoryCredentials
type RepositoryCredentials struct {
	// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
	CredentialsParameter *string `pulumi:"credentialsParameter"`
}

// RepositoryCredentialsInput is an input type that accepts RepositoryCredentialsArgs and RepositoryCredentialsOutput values.
// You can construct a concrete instance of `RepositoryCredentialsInput` via:
//
//	RepositoryCredentialsArgs{...}
type RepositoryCredentialsInput interface {
	pulumi.Input

	ToRepositoryCredentialsOutput() RepositoryCredentialsOutput
	ToRepositoryCredentialsOutputWithContext(context.Context) RepositoryCredentialsOutput
}

// Definition of RepositoryCredentials
type RepositoryCredentialsArgs struct {
	// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
	CredentialsParameter pulumi.StringPtrInput `pulumi:"credentialsParameter"`
}

func (RepositoryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCredentials)(nil)).Elem()
}

func (i RepositoryCredentialsArgs) ToRepositoryCredentialsOutput() RepositoryCredentialsOutput {
	return i.ToRepositoryCredentialsOutputWithContext(context.Background())
}

func (i RepositoryCredentialsArgs) ToRepositoryCredentialsOutputWithContext(ctx context.Context) RepositoryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCredentialsOutput)
}

func (i RepositoryCredentialsArgs) ToRepositoryCredentialsPtrOutput() RepositoryCredentialsPtrOutput {
	return i.ToRepositoryCredentialsPtrOutputWithContext(context.Background())
}

func (i RepositoryCredentialsArgs) ToRepositoryCredentialsPtrOutputWithContext(ctx context.Context) RepositoryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCredentialsOutput).ToRepositoryCredentialsPtrOutputWithContext(ctx)
}

// RepositoryCredentialsPtrInput is an input type that accepts RepositoryCredentialsArgs, RepositoryCredentialsPtr and RepositoryCredentialsPtrOutput values.
// You can construct a concrete instance of `RepositoryCredentialsPtrInput` via:
//
//	        RepositoryCredentialsArgs{...}
//
//	or:
//
//	        nil
type RepositoryCredentialsPtrInput interface {
	pulumi.Input

	ToRepositoryCredentialsPtrOutput() RepositoryCredentialsPtrOutput
	ToRepositoryCredentialsPtrOutputWithContext(context.Context) RepositoryCredentialsPtrOutput
}

type repositoryCredentialsPtrType RepositoryCredentialsArgs

func RepositoryCredentialsPtr(v *RepositoryCredentialsArgs) RepositoryCredentialsPtrInput {
	return (*repositoryCredentialsPtrType)(v)
}

func (*repositoryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCredentials)(nil)).Elem()
}

func (i *repositoryCredentialsPtrType) ToRepositoryCredentialsPtrOutput() RepositoryCredentialsPtrOutput {
	return i.ToRepositoryCredentialsPtrOutputWithContext(context.Background())
}

func (i *repositoryCredentialsPtrType) ToRepositoryCredentialsPtrOutputWithContext(ctx context.Context) RepositoryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCredentialsPtrOutput)
}

// Definition of RepositoryCredentials
type RepositoryCredentialsOutput struct{ *pulumi.OutputState }

func (RepositoryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCredentials)(nil)).Elem()
}

func (o RepositoryCredentialsOutput) ToRepositoryCredentialsOutput() RepositoryCredentialsOutput {
	return o
}

func (o RepositoryCredentialsOutput) ToRepositoryCredentialsOutputWithContext(ctx context.Context) RepositoryCredentialsOutput {
	return o
}

func (o RepositoryCredentialsOutput) ToRepositoryCredentialsPtrOutput() RepositoryCredentialsPtrOutput {
	return o.ToRepositoryCredentialsPtrOutputWithContext(context.Background())
}

func (o RepositoryCredentialsOutput) ToRepositoryCredentialsPtrOutputWithContext(ctx context.Context) RepositoryCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryCredentials) *RepositoryCredentials {
		return &v
	}).(RepositoryCredentialsPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
func (o RepositoryCredentialsOutput) CredentialsParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCredentials) *string { return v.CredentialsParameter }).(pulumi.StringPtrOutput)
}

type RepositoryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (RepositoryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCredentials)(nil)).Elem()
}

func (o RepositoryCredentialsPtrOutput) ToRepositoryCredentialsPtrOutput() RepositoryCredentialsPtrOutput {
	return o
}

func (o RepositoryCredentialsPtrOutput) ToRepositoryCredentialsPtrOutputWithContext(ctx context.Context) RepositoryCredentialsPtrOutput {
	return o
}

func (o RepositoryCredentialsPtrOutput) Elem() RepositoryCredentialsOutput {
	return o.ApplyT(func(v *RepositoryCredentials) RepositoryCredentials {
		if v != nil {
			return *v
		}
		var ret RepositoryCredentials
		return ret
	}).(RepositoryCredentialsOutput)
}

// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
func (o RepositoryCredentialsPtrOutput) CredentialsParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsParameter
	}).(pulumi.StringPtrOutput)
}

// Definition of RepositoryCredentials
type RepositoryCredentialsResponse struct {
	// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
	CredentialsParameter *string `pulumi:"credentialsParameter"`
}

// Definition of RepositoryCredentials
type RepositoryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (RepositoryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCredentialsResponse)(nil)).Elem()
}

func (o RepositoryCredentialsResponseOutput) ToRepositoryCredentialsResponseOutput() RepositoryCredentialsResponseOutput {
	return o
}

func (o RepositoryCredentialsResponseOutput) ToRepositoryCredentialsResponseOutputWithContext(ctx context.Context) RepositoryCredentialsResponseOutput {
	return o
}

// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
func (o RepositoryCredentialsResponseOutput) CredentialsParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCredentialsResponse) *string { return v.CredentialsParameter }).(pulumi.StringPtrOutput)
}

type RepositoryCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (RepositoryCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCredentialsResponse)(nil)).Elem()
}

func (o RepositoryCredentialsResponsePtrOutput) ToRepositoryCredentialsResponsePtrOutput() RepositoryCredentialsResponsePtrOutput {
	return o
}

func (o RepositoryCredentialsResponsePtrOutput) ToRepositoryCredentialsResponsePtrOutputWithContext(ctx context.Context) RepositoryCredentialsResponsePtrOutput {
	return o
}

func (o RepositoryCredentialsResponsePtrOutput) Elem() RepositoryCredentialsResponseOutput {
	return o.ApplyT(func(v *RepositoryCredentialsResponse) RepositoryCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret RepositoryCredentialsResponse
		return ret
	}).(RepositoryCredentialsResponseOutput)
}

// The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.
func (o RepositoryCredentialsResponsePtrOutput) CredentialsParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsParameter
	}).(pulumi.StringPtrOutput)
}

// Definition of ResolverLevelMetricsBehaviorEnumValue
type ResolverLevelMetricsBehaviorEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ResolverLevelMetricsBehaviorEnumValueInput is an input type that accepts ResolverLevelMetricsBehaviorEnumValueArgs and ResolverLevelMetricsBehaviorEnumValueOutput values.
// You can construct a concrete instance of `ResolverLevelMetricsBehaviorEnumValueInput` via:
//
//	ResolverLevelMetricsBehaviorEnumValueArgs{...}
type ResolverLevelMetricsBehaviorEnumValueInput interface {
	pulumi.Input

	ToResolverLevelMetricsBehaviorEnumValueOutput() ResolverLevelMetricsBehaviorEnumValueOutput
	ToResolverLevelMetricsBehaviorEnumValueOutputWithContext(context.Context) ResolverLevelMetricsBehaviorEnumValueOutput
}

// Definition of ResolverLevelMetricsBehaviorEnumValue
type ResolverLevelMetricsBehaviorEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResolverLevelMetricsBehaviorEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverLevelMetricsBehaviorEnumValue)(nil)).Elem()
}

func (i ResolverLevelMetricsBehaviorEnumValueArgs) ToResolverLevelMetricsBehaviorEnumValueOutput() ResolverLevelMetricsBehaviorEnumValueOutput {
	return i.ToResolverLevelMetricsBehaviorEnumValueOutputWithContext(context.Background())
}

func (i ResolverLevelMetricsBehaviorEnumValueArgs) ToResolverLevelMetricsBehaviorEnumValueOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverLevelMetricsBehaviorEnumValueOutput)
}

func (i ResolverLevelMetricsBehaviorEnumValueArgs) ToResolverLevelMetricsBehaviorEnumValuePtrOutput() ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return i.ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(context.Background())
}

func (i ResolverLevelMetricsBehaviorEnumValueArgs) ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverLevelMetricsBehaviorEnumValueOutput).ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(ctx)
}

// ResolverLevelMetricsBehaviorEnumValuePtrInput is an input type that accepts ResolverLevelMetricsBehaviorEnumValueArgs, ResolverLevelMetricsBehaviorEnumValuePtr and ResolverLevelMetricsBehaviorEnumValuePtrOutput values.
// You can construct a concrete instance of `ResolverLevelMetricsBehaviorEnumValuePtrInput` via:
//
//	        ResolverLevelMetricsBehaviorEnumValueArgs{...}
//
//	or:
//
//	        nil
type ResolverLevelMetricsBehaviorEnumValuePtrInput interface {
	pulumi.Input

	ToResolverLevelMetricsBehaviorEnumValuePtrOutput() ResolverLevelMetricsBehaviorEnumValuePtrOutput
	ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(context.Context) ResolverLevelMetricsBehaviorEnumValuePtrOutput
}

type resolverLevelMetricsBehaviorEnumValuePtrType ResolverLevelMetricsBehaviorEnumValueArgs

func ResolverLevelMetricsBehaviorEnumValuePtr(v *ResolverLevelMetricsBehaviorEnumValueArgs) ResolverLevelMetricsBehaviorEnumValuePtrInput {
	return (*resolverLevelMetricsBehaviorEnumValuePtrType)(v)
}

func (*resolverLevelMetricsBehaviorEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverLevelMetricsBehaviorEnumValue)(nil)).Elem()
}

func (i *resolverLevelMetricsBehaviorEnumValuePtrType) ToResolverLevelMetricsBehaviorEnumValuePtrOutput() ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return i.ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(context.Background())
}

func (i *resolverLevelMetricsBehaviorEnumValuePtrType) ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverLevelMetricsBehaviorEnumValuePtrOutput)
}

// Definition of ResolverLevelMetricsBehaviorEnumValue
type ResolverLevelMetricsBehaviorEnumValueOutput struct{ *pulumi.OutputState }

func (ResolverLevelMetricsBehaviorEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverLevelMetricsBehaviorEnumValue)(nil)).Elem()
}

func (o ResolverLevelMetricsBehaviorEnumValueOutput) ToResolverLevelMetricsBehaviorEnumValueOutput() ResolverLevelMetricsBehaviorEnumValueOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValueOutput) ToResolverLevelMetricsBehaviorEnumValueOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValueOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValueOutput) ToResolverLevelMetricsBehaviorEnumValuePtrOutput() ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return o.ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(context.Background())
}

func (o ResolverLevelMetricsBehaviorEnumValueOutput) ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverLevelMetricsBehaviorEnumValue) *ResolverLevelMetricsBehaviorEnumValue {
		return &v
	}).(ResolverLevelMetricsBehaviorEnumValuePtrOutput)
}

// Property value
func (o ResolverLevelMetricsBehaviorEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverLevelMetricsBehaviorEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResolverLevelMetricsBehaviorEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ResolverLevelMetricsBehaviorEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverLevelMetricsBehaviorEnumValue)(nil)).Elem()
}

func (o ResolverLevelMetricsBehaviorEnumValuePtrOutput) ToResolverLevelMetricsBehaviorEnumValuePtrOutput() ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValuePtrOutput) ToResolverLevelMetricsBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValuePtrOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValuePtrOutput) Elem() ResolverLevelMetricsBehaviorEnumValueOutput {
	return o.ApplyT(func(v *ResolverLevelMetricsBehaviorEnumValue) ResolverLevelMetricsBehaviorEnumValue {
		if v != nil {
			return *v
		}
		var ret ResolverLevelMetricsBehaviorEnumValue
		return ret
	}).(ResolverLevelMetricsBehaviorEnumValueOutput)
}

// Property value
func (o ResolverLevelMetricsBehaviorEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverLevelMetricsBehaviorEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResolverLevelMetricsBehaviorEnumValue
type ResolverLevelMetricsBehaviorEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ResolverLevelMetricsBehaviorEnumValue
type ResolverLevelMetricsBehaviorEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ResolverLevelMetricsBehaviorEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverLevelMetricsBehaviorEnumValueResponse)(nil)).Elem()
}

func (o ResolverLevelMetricsBehaviorEnumValueResponseOutput) ToResolverLevelMetricsBehaviorEnumValueResponseOutput() ResolverLevelMetricsBehaviorEnumValueResponseOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValueResponseOutput) ToResolverLevelMetricsBehaviorEnumValueResponseOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValueResponseOutput {
	return o
}

// Property value
func (o ResolverLevelMetricsBehaviorEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverLevelMetricsBehaviorEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverLevelMetricsBehaviorEnumValueResponse)(nil)).Elem()
}

func (o ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput) ToResolverLevelMetricsBehaviorEnumValueResponsePtrOutput() ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput) ToResolverLevelMetricsBehaviorEnumValueResponsePtrOutputWithContext(ctx context.Context) ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput {
	return o
}

func (o ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput) Elem() ResolverLevelMetricsBehaviorEnumValueResponseOutput {
	return o.ApplyT(func(v *ResolverLevelMetricsBehaviorEnumValueResponse) ResolverLevelMetricsBehaviorEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ResolverLevelMetricsBehaviorEnumValueResponse
		return ret
	}).(ResolverLevelMetricsBehaviorEnumValueResponseOutput)
}

// Property value
func (o ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverLevelMetricsBehaviorEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourcePolicy
type ResourcePolicy struct {
	// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
	PolicyDocument interface{} `pulumi:"policyDocument"`
}

// ResourcePolicyInput is an input type that accepts ResourcePolicyArgs and ResourcePolicyOutput values.
// You can construct a concrete instance of `ResourcePolicyInput` via:
//
//	ResourcePolicyArgs{...}
type ResourcePolicyInput interface {
	pulumi.Input

	ToResourcePolicyOutput() ResourcePolicyOutput
	ToResourcePolicyOutputWithContext(context.Context) ResourcePolicyOutput
}

// Definition of ResourcePolicy
type ResourcePolicyArgs struct {
	// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
	PolicyDocument pulumi.Input `pulumi:"policyDocument"`
}

func (ResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicy)(nil)).Elem()
}

func (i ResourcePolicyArgs) ToResourcePolicyOutput() ResourcePolicyOutput {
	return i.ToResourcePolicyOutputWithContext(context.Background())
}

func (i ResourcePolicyArgs) ToResourcePolicyOutputWithContext(ctx context.Context) ResourcePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyOutput)
}

func (i ResourcePolicyArgs) ToResourcePolicyPtrOutput() ResourcePolicyPtrOutput {
	return i.ToResourcePolicyPtrOutputWithContext(context.Background())
}

func (i ResourcePolicyArgs) ToResourcePolicyPtrOutputWithContext(ctx context.Context) ResourcePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyOutput).ToResourcePolicyPtrOutputWithContext(ctx)
}

// ResourcePolicyPtrInput is an input type that accepts ResourcePolicyArgs, ResourcePolicyPtr and ResourcePolicyPtrOutput values.
// You can construct a concrete instance of `ResourcePolicyPtrInput` via:
//
//	        ResourcePolicyArgs{...}
//
//	or:
//
//	        nil
type ResourcePolicyPtrInput interface {
	pulumi.Input

	ToResourcePolicyPtrOutput() ResourcePolicyPtrOutput
	ToResourcePolicyPtrOutputWithContext(context.Context) ResourcePolicyPtrOutput
}

type resourcePolicyPtrType ResourcePolicyArgs

func ResourcePolicyPtr(v *ResourcePolicyArgs) ResourcePolicyPtrInput {
	return (*resourcePolicyPtrType)(v)
}

func (*resourcePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicy)(nil)).Elem()
}

func (i *resourcePolicyPtrType) ToResourcePolicyPtrOutput() ResourcePolicyPtrOutput {
	return i.ToResourcePolicyPtrOutputWithContext(context.Background())
}

func (i *resourcePolicyPtrType) ToResourcePolicyPtrOutputWithContext(ctx context.Context) ResourcePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyPtrOutput)
}

// Definition of ResourcePolicy
type ResourcePolicyOutput struct{ *pulumi.OutputState }

func (ResourcePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicy)(nil)).Elem()
}

func (o ResourcePolicyOutput) ToResourcePolicyOutput() ResourcePolicyOutput {
	return o
}

func (o ResourcePolicyOutput) ToResourcePolicyOutputWithContext(ctx context.Context) ResourcePolicyOutput {
	return o
}

func (o ResourcePolicyOutput) ToResourcePolicyPtrOutput() ResourcePolicyPtrOutput {
	return o.ToResourcePolicyPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyOutput) ToResourcePolicyPtrOutputWithContext(ctx context.Context) ResourcePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicy) *ResourcePolicy {
		return &v
	}).(ResourcePolicyPtrOutput)
}

// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
func (o ResourcePolicyOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v ResourcePolicy) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

type ResourcePolicyPtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicy)(nil)).Elem()
}

func (o ResourcePolicyPtrOutput) ToResourcePolicyPtrOutput() ResourcePolicyPtrOutput {
	return o
}

func (o ResourcePolicyPtrOutput) ToResourcePolicyPtrOutputWithContext(ctx context.Context) ResourcePolicyPtrOutput {
	return o
}

func (o ResourcePolicyPtrOutput) Elem() ResourcePolicyOutput {
	return o.ApplyT(func(v *ResourcePolicy) ResourcePolicy {
		if v != nil {
			return *v
		}
		var ret ResourcePolicy
		return ret
	}).(ResourcePolicyOutput)
}

// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
func (o ResourcePolicyPtrOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v *ResourcePolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.PolicyDocument
	}).(pulumi.AnyOutput)
}

// Definition of ResourcePolicy
type ResourcePolicyResponse struct {
	// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
	PolicyDocument interface{} `pulumi:"policyDocument"`
}

// Definition of ResourcePolicy
type ResourcePolicyResponseOutput struct{ *pulumi.OutputState }

func (ResourcePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyResponse)(nil)).Elem()
}

func (o ResourcePolicyResponseOutput) ToResourcePolicyResponseOutput() ResourcePolicyResponseOutput {
	return o
}

func (o ResourcePolicyResponseOutput) ToResourcePolicyResponseOutputWithContext(ctx context.Context) ResourcePolicyResponseOutput {
	return o
}

// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
func (o ResourcePolicyResponseOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v ResourcePolicyResponse) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

type ResourcePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyResponse)(nil)).Elem()
}

func (o ResourcePolicyResponsePtrOutput) ToResourcePolicyResponsePtrOutput() ResourcePolicyResponsePtrOutput {
	return o
}

func (o ResourcePolicyResponsePtrOutput) ToResourcePolicyResponsePtrOutputWithContext(ctx context.Context) ResourcePolicyResponsePtrOutput {
	return o
}

func (o ResourcePolicyResponsePtrOutput) Elem() ResourcePolicyResponseOutput {
	return o.ApplyT(func(v *ResourcePolicyResponse) ResourcePolicyResponse {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyResponse
		return ret
	}).(ResourcePolicyResponseOutput)
}

// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
func (o ResourcePolicyResponsePtrOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v *ResourcePolicyResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.PolicyDocument
	}).(pulumi.AnyOutput)
}

// Definition of ResourceRecord
type ResourceRecord struct {
	// <p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href='https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html'>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you're creating an alias resource record set, omit <code>Value</code>.</p> </note>
	Value *string `pulumi:"value"`
}

// ResourceRecordInput is an input type that accepts ResourceRecordArgs and ResourceRecordOutput values.
// You can construct a concrete instance of `ResourceRecordInput` via:
//
//	ResourceRecordArgs{...}
type ResourceRecordInput interface {
	pulumi.Input

	ToResourceRecordOutput() ResourceRecordOutput
	ToResourceRecordOutputWithContext(context.Context) ResourceRecordOutput
}

// Definition of ResourceRecord
type ResourceRecordArgs struct {
	// <p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href='https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html'>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you're creating an alias resource record set, omit <code>Value</code>.</p> </note>
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecord)(nil)).Elem()
}

func (i ResourceRecordArgs) ToResourceRecordOutput() ResourceRecordOutput {
	return i.ToResourceRecordOutputWithContext(context.Background())
}

func (i ResourceRecordArgs) ToResourceRecordOutputWithContext(ctx context.Context) ResourceRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordOutput)
}

// ResourceRecordArrayInput is an input type that accepts ResourceRecordArray and ResourceRecordArrayOutput values.
// You can construct a concrete instance of `ResourceRecordArrayInput` via:
//
//	ResourceRecordArray{ ResourceRecordArgs{...} }
type ResourceRecordArrayInput interface {
	pulumi.Input

	ToResourceRecordArrayOutput() ResourceRecordArrayOutput
	ToResourceRecordArrayOutputWithContext(context.Context) ResourceRecordArrayOutput
}

type ResourceRecordArray []ResourceRecordInput

func (ResourceRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceRecord)(nil)).Elem()
}

func (i ResourceRecordArray) ToResourceRecordArrayOutput() ResourceRecordArrayOutput {
	return i.ToResourceRecordArrayOutputWithContext(context.Background())
}

func (i ResourceRecordArray) ToResourceRecordArrayOutputWithContext(ctx context.Context) ResourceRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordArrayOutput)
}

// Definition of ResourceRecord
type ResourceRecordOutput struct{ *pulumi.OutputState }

func (ResourceRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecord)(nil)).Elem()
}

func (o ResourceRecordOutput) ToResourceRecordOutput() ResourceRecordOutput {
	return o
}

func (o ResourceRecordOutput) ToResourceRecordOutputWithContext(ctx context.Context) ResourceRecordOutput {
	return o
}

// <p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href='https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html'>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you're creating an alias resource record set, omit <code>Value</code>.</p> </note>
func (o ResourceRecordOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRecord) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRecordArrayOutput struct{ *pulumi.OutputState }

func (ResourceRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceRecord)(nil)).Elem()
}

func (o ResourceRecordArrayOutput) ToResourceRecordArrayOutput() ResourceRecordArrayOutput {
	return o
}

func (o ResourceRecordArrayOutput) ToResourceRecordArrayOutputWithContext(ctx context.Context) ResourceRecordArrayOutput {
	return o
}

func (o ResourceRecordArrayOutput) Index(i pulumi.IntInput) ResourceRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceRecord {
		return vs[0].([]ResourceRecord)[vs[1].(int)]
	}).(ResourceRecordOutput)
}

// Definition of ResourceRecord
type ResourceRecordResponse struct {
	// <p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href='https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html'>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you're creating an alias resource record set, omit <code>Value</code>.</p> </note>
	Value *string `pulumi:"value"`
}

// Definition of ResourceRecord
type ResourceRecordResponseOutput struct{ *pulumi.OutputState }

func (ResourceRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordResponse)(nil)).Elem()
}

func (o ResourceRecordResponseOutput) ToResourceRecordResponseOutput() ResourceRecordResponseOutput {
	return o
}

func (o ResourceRecordResponseOutput) ToResourceRecordResponseOutputWithContext(ctx context.Context) ResourceRecordResponseOutput {
	return o
}

// <p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href='https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html'>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you're creating an alias resource record set, omit <code>Value</code>.</p> </note>
func (o ResourceRecordResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRecordResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceRecordResponse)(nil)).Elem()
}

func (o ResourceRecordResponseArrayOutput) ToResourceRecordResponseArrayOutput() ResourceRecordResponseArrayOutput {
	return o
}

func (o ResourceRecordResponseArrayOutput) ToResourceRecordResponseArrayOutputWithContext(ctx context.Context) ResourceRecordResponseArrayOutput {
	return o
}

func (o ResourceRecordResponseArrayOutput) Index(i pulumi.IntInput) ResourceRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceRecordResponse {
		return vs[0].([]ResourceRecordResponse)[vs[1].(int)]
	}).(ResourceRecordResponseOutput)
}

// Definition of ResourceRecordSetFailoverEnumValue
type ResourceRecordSetFailoverEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ResourceRecordSetFailoverEnumValueInput is an input type that accepts ResourceRecordSetFailoverEnumValueArgs and ResourceRecordSetFailoverEnumValueOutput values.
// You can construct a concrete instance of `ResourceRecordSetFailoverEnumValueInput` via:
//
//	ResourceRecordSetFailoverEnumValueArgs{...}
type ResourceRecordSetFailoverEnumValueInput interface {
	pulumi.Input

	ToResourceRecordSetFailoverEnumValueOutput() ResourceRecordSetFailoverEnumValueOutput
	ToResourceRecordSetFailoverEnumValueOutputWithContext(context.Context) ResourceRecordSetFailoverEnumValueOutput
}

// Definition of ResourceRecordSetFailoverEnumValue
type ResourceRecordSetFailoverEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceRecordSetFailoverEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordSetFailoverEnumValue)(nil)).Elem()
}

func (i ResourceRecordSetFailoverEnumValueArgs) ToResourceRecordSetFailoverEnumValueOutput() ResourceRecordSetFailoverEnumValueOutput {
	return i.ToResourceRecordSetFailoverEnumValueOutputWithContext(context.Background())
}

func (i ResourceRecordSetFailoverEnumValueArgs) ToResourceRecordSetFailoverEnumValueOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordSetFailoverEnumValueOutput)
}

func (i ResourceRecordSetFailoverEnumValueArgs) ToResourceRecordSetFailoverEnumValuePtrOutput() ResourceRecordSetFailoverEnumValuePtrOutput {
	return i.ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(context.Background())
}

func (i ResourceRecordSetFailoverEnumValueArgs) ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordSetFailoverEnumValueOutput).ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(ctx)
}

// ResourceRecordSetFailoverEnumValuePtrInput is an input type that accepts ResourceRecordSetFailoverEnumValueArgs, ResourceRecordSetFailoverEnumValuePtr and ResourceRecordSetFailoverEnumValuePtrOutput values.
// You can construct a concrete instance of `ResourceRecordSetFailoverEnumValuePtrInput` via:
//
//	        ResourceRecordSetFailoverEnumValueArgs{...}
//
//	or:
//
//	        nil
type ResourceRecordSetFailoverEnumValuePtrInput interface {
	pulumi.Input

	ToResourceRecordSetFailoverEnumValuePtrOutput() ResourceRecordSetFailoverEnumValuePtrOutput
	ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(context.Context) ResourceRecordSetFailoverEnumValuePtrOutput
}

type resourceRecordSetFailoverEnumValuePtrType ResourceRecordSetFailoverEnumValueArgs

func ResourceRecordSetFailoverEnumValuePtr(v *ResourceRecordSetFailoverEnumValueArgs) ResourceRecordSetFailoverEnumValuePtrInput {
	return (*resourceRecordSetFailoverEnumValuePtrType)(v)
}

func (*resourceRecordSetFailoverEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordSetFailoverEnumValue)(nil)).Elem()
}

func (i *resourceRecordSetFailoverEnumValuePtrType) ToResourceRecordSetFailoverEnumValuePtrOutput() ResourceRecordSetFailoverEnumValuePtrOutput {
	return i.ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(context.Background())
}

func (i *resourceRecordSetFailoverEnumValuePtrType) ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordSetFailoverEnumValuePtrOutput)
}

// Definition of ResourceRecordSetFailoverEnumValue
type ResourceRecordSetFailoverEnumValueOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetFailoverEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordSetFailoverEnumValue)(nil)).Elem()
}

func (o ResourceRecordSetFailoverEnumValueOutput) ToResourceRecordSetFailoverEnumValueOutput() ResourceRecordSetFailoverEnumValueOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValueOutput) ToResourceRecordSetFailoverEnumValueOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValueOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValueOutput) ToResourceRecordSetFailoverEnumValuePtrOutput() ResourceRecordSetFailoverEnumValuePtrOutput {
	return o.ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(context.Background())
}

func (o ResourceRecordSetFailoverEnumValueOutput) ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceRecordSetFailoverEnumValue) *ResourceRecordSetFailoverEnumValue {
		return &v
	}).(ResourceRecordSetFailoverEnumValuePtrOutput)
}

// Property value
func (o ResourceRecordSetFailoverEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRecordSetFailoverEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRecordSetFailoverEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetFailoverEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordSetFailoverEnumValue)(nil)).Elem()
}

func (o ResourceRecordSetFailoverEnumValuePtrOutput) ToResourceRecordSetFailoverEnumValuePtrOutput() ResourceRecordSetFailoverEnumValuePtrOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValuePtrOutput) ToResourceRecordSetFailoverEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValuePtrOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValuePtrOutput) Elem() ResourceRecordSetFailoverEnumValueOutput {
	return o.ApplyT(func(v *ResourceRecordSetFailoverEnumValue) ResourceRecordSetFailoverEnumValue {
		if v != nil {
			return *v
		}
		var ret ResourceRecordSetFailoverEnumValue
		return ret
	}).(ResourceRecordSetFailoverEnumValueOutput)
}

// Property value
func (o ResourceRecordSetFailoverEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRecordSetFailoverEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceRecordSetFailoverEnumValue
type ResourceRecordSetFailoverEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ResourceRecordSetFailoverEnumValue
type ResourceRecordSetFailoverEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetFailoverEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordSetFailoverEnumValueResponse)(nil)).Elem()
}

func (o ResourceRecordSetFailoverEnumValueResponseOutput) ToResourceRecordSetFailoverEnumValueResponseOutput() ResourceRecordSetFailoverEnumValueResponseOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValueResponseOutput) ToResourceRecordSetFailoverEnumValueResponseOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValueResponseOutput {
	return o
}

// Property value
func (o ResourceRecordSetFailoverEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRecordSetFailoverEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRecordSetFailoverEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetFailoverEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordSetFailoverEnumValueResponse)(nil)).Elem()
}

func (o ResourceRecordSetFailoverEnumValueResponsePtrOutput) ToResourceRecordSetFailoverEnumValueResponsePtrOutput() ResourceRecordSetFailoverEnumValueResponsePtrOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValueResponsePtrOutput) ToResourceRecordSetFailoverEnumValueResponsePtrOutputWithContext(ctx context.Context) ResourceRecordSetFailoverEnumValueResponsePtrOutput {
	return o
}

func (o ResourceRecordSetFailoverEnumValueResponsePtrOutput) Elem() ResourceRecordSetFailoverEnumValueResponseOutput {
	return o.ApplyT(func(v *ResourceRecordSetFailoverEnumValueResponse) ResourceRecordSetFailoverEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ResourceRecordSetFailoverEnumValueResponse
		return ret
	}).(ResourceRecordSetFailoverEnumValueResponseOutput)
}

// Property value
func (o ResourceRecordSetFailoverEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRecordSetFailoverEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceRecordSetRegionEnumValue
type ResourceRecordSetRegionEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ResourceRecordSetRegionEnumValueInput is an input type that accepts ResourceRecordSetRegionEnumValueArgs and ResourceRecordSetRegionEnumValueOutput values.
// You can construct a concrete instance of `ResourceRecordSetRegionEnumValueInput` via:
//
//	ResourceRecordSetRegionEnumValueArgs{...}
type ResourceRecordSetRegionEnumValueInput interface {
	pulumi.Input

	ToResourceRecordSetRegionEnumValueOutput() ResourceRecordSetRegionEnumValueOutput
	ToResourceRecordSetRegionEnumValueOutputWithContext(context.Context) ResourceRecordSetRegionEnumValueOutput
}

// Definition of ResourceRecordSetRegionEnumValue
type ResourceRecordSetRegionEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceRecordSetRegionEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordSetRegionEnumValue)(nil)).Elem()
}

func (i ResourceRecordSetRegionEnumValueArgs) ToResourceRecordSetRegionEnumValueOutput() ResourceRecordSetRegionEnumValueOutput {
	return i.ToResourceRecordSetRegionEnumValueOutputWithContext(context.Background())
}

func (i ResourceRecordSetRegionEnumValueArgs) ToResourceRecordSetRegionEnumValueOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordSetRegionEnumValueOutput)
}

func (i ResourceRecordSetRegionEnumValueArgs) ToResourceRecordSetRegionEnumValuePtrOutput() ResourceRecordSetRegionEnumValuePtrOutput {
	return i.ToResourceRecordSetRegionEnumValuePtrOutputWithContext(context.Background())
}

func (i ResourceRecordSetRegionEnumValueArgs) ToResourceRecordSetRegionEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordSetRegionEnumValueOutput).ToResourceRecordSetRegionEnumValuePtrOutputWithContext(ctx)
}

// ResourceRecordSetRegionEnumValuePtrInput is an input type that accepts ResourceRecordSetRegionEnumValueArgs, ResourceRecordSetRegionEnumValuePtr and ResourceRecordSetRegionEnumValuePtrOutput values.
// You can construct a concrete instance of `ResourceRecordSetRegionEnumValuePtrInput` via:
//
//	        ResourceRecordSetRegionEnumValueArgs{...}
//
//	or:
//
//	        nil
type ResourceRecordSetRegionEnumValuePtrInput interface {
	pulumi.Input

	ToResourceRecordSetRegionEnumValuePtrOutput() ResourceRecordSetRegionEnumValuePtrOutput
	ToResourceRecordSetRegionEnumValuePtrOutputWithContext(context.Context) ResourceRecordSetRegionEnumValuePtrOutput
}

type resourceRecordSetRegionEnumValuePtrType ResourceRecordSetRegionEnumValueArgs

func ResourceRecordSetRegionEnumValuePtr(v *ResourceRecordSetRegionEnumValueArgs) ResourceRecordSetRegionEnumValuePtrInput {
	return (*resourceRecordSetRegionEnumValuePtrType)(v)
}

func (*resourceRecordSetRegionEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordSetRegionEnumValue)(nil)).Elem()
}

func (i *resourceRecordSetRegionEnumValuePtrType) ToResourceRecordSetRegionEnumValuePtrOutput() ResourceRecordSetRegionEnumValuePtrOutput {
	return i.ToResourceRecordSetRegionEnumValuePtrOutputWithContext(context.Background())
}

func (i *resourceRecordSetRegionEnumValuePtrType) ToResourceRecordSetRegionEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRecordSetRegionEnumValuePtrOutput)
}

// Definition of ResourceRecordSetRegionEnumValue
type ResourceRecordSetRegionEnumValueOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetRegionEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordSetRegionEnumValue)(nil)).Elem()
}

func (o ResourceRecordSetRegionEnumValueOutput) ToResourceRecordSetRegionEnumValueOutput() ResourceRecordSetRegionEnumValueOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValueOutput) ToResourceRecordSetRegionEnumValueOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValueOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValueOutput) ToResourceRecordSetRegionEnumValuePtrOutput() ResourceRecordSetRegionEnumValuePtrOutput {
	return o.ToResourceRecordSetRegionEnumValuePtrOutputWithContext(context.Background())
}

func (o ResourceRecordSetRegionEnumValueOutput) ToResourceRecordSetRegionEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceRecordSetRegionEnumValue) *ResourceRecordSetRegionEnumValue {
		return &v
	}).(ResourceRecordSetRegionEnumValuePtrOutput)
}

// Property value
func (o ResourceRecordSetRegionEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRecordSetRegionEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRecordSetRegionEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetRegionEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordSetRegionEnumValue)(nil)).Elem()
}

func (o ResourceRecordSetRegionEnumValuePtrOutput) ToResourceRecordSetRegionEnumValuePtrOutput() ResourceRecordSetRegionEnumValuePtrOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValuePtrOutput) ToResourceRecordSetRegionEnumValuePtrOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValuePtrOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValuePtrOutput) Elem() ResourceRecordSetRegionEnumValueOutput {
	return o.ApplyT(func(v *ResourceRecordSetRegionEnumValue) ResourceRecordSetRegionEnumValue {
		if v != nil {
			return *v
		}
		var ret ResourceRecordSetRegionEnumValue
		return ret
	}).(ResourceRecordSetRegionEnumValueOutput)
}

// Property value
func (o ResourceRecordSetRegionEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRecordSetRegionEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceRecordSetRegionEnumValue
type ResourceRecordSetRegionEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ResourceRecordSetRegionEnumValue
type ResourceRecordSetRegionEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetRegionEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordSetRegionEnumValueResponse)(nil)).Elem()
}

func (o ResourceRecordSetRegionEnumValueResponseOutput) ToResourceRecordSetRegionEnumValueResponseOutput() ResourceRecordSetRegionEnumValueResponseOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValueResponseOutput) ToResourceRecordSetRegionEnumValueResponseOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValueResponseOutput {
	return o
}

// Property value
func (o ResourceRecordSetRegionEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRecordSetRegionEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRecordSetRegionEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceRecordSetRegionEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordSetRegionEnumValueResponse)(nil)).Elem()
}

func (o ResourceRecordSetRegionEnumValueResponsePtrOutput) ToResourceRecordSetRegionEnumValueResponsePtrOutput() ResourceRecordSetRegionEnumValueResponsePtrOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValueResponsePtrOutput) ToResourceRecordSetRegionEnumValueResponsePtrOutputWithContext(ctx context.Context) ResourceRecordSetRegionEnumValueResponsePtrOutput {
	return o
}

func (o ResourceRecordSetRegionEnumValueResponsePtrOutput) Elem() ResourceRecordSetRegionEnumValueResponseOutput {
	return o.ApplyT(func(v *ResourceRecordSetRegionEnumValueResponse) ResourceRecordSetRegionEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ResourceRecordSetRegionEnumValueResponse
		return ret
	}).(ResourceRecordSetRegionEnumValueResponseOutput)
}

// Property value
func (o ResourceRecordSetRegionEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRecordSetRegionEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceRequirement
type ResourceRequirement struct {
	// The type of resource to assign to a container. The supported values are ``GPU`` or ``InferenceAccelerator``.
	Type *string `pulumi:"type"`
	// The value for the specified resource type. If the ``GPU`` type is used, the value is the number of physical ``GPUs`` the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the ``InferenceAccelerator`` type is used, the ``value`` matches the ``deviceName`` for an [InferenceAccelerator](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html) specified in a task definition.
	Value *string `pulumi:"value"`
}

// ResourceRequirementInput is an input type that accepts ResourceRequirementArgs and ResourceRequirementOutput values.
// You can construct a concrete instance of `ResourceRequirementInput` via:
//
//	ResourceRequirementArgs{...}
type ResourceRequirementInput interface {
	pulumi.Input

	ToResourceRequirementOutput() ResourceRequirementOutput
	ToResourceRequirementOutputWithContext(context.Context) ResourceRequirementOutput
}

// Definition of ResourceRequirement
type ResourceRequirementArgs struct {
	// The type of resource to assign to a container. The supported values are ``GPU`` or ``InferenceAccelerator``.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value for the specified resource type. If the ``GPU`` type is used, the value is the number of physical ``GPUs`` the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the ``InferenceAccelerator`` type is used, the ``value`` matches the ``deviceName`` for an [InferenceAccelerator](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html) specified in a task definition.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceRequirementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRequirement)(nil)).Elem()
}

func (i ResourceRequirementArgs) ToResourceRequirementOutput() ResourceRequirementOutput {
	return i.ToResourceRequirementOutputWithContext(context.Background())
}

func (i ResourceRequirementArgs) ToResourceRequirementOutputWithContext(ctx context.Context) ResourceRequirementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRequirementOutput)
}

// ResourceRequirementArrayInput is an input type that accepts ResourceRequirementArray and ResourceRequirementArrayOutput values.
// You can construct a concrete instance of `ResourceRequirementArrayInput` via:
//
//	ResourceRequirementArray{ ResourceRequirementArgs{...} }
type ResourceRequirementArrayInput interface {
	pulumi.Input

	ToResourceRequirementArrayOutput() ResourceRequirementArrayOutput
	ToResourceRequirementArrayOutputWithContext(context.Context) ResourceRequirementArrayOutput
}

type ResourceRequirementArray []ResourceRequirementInput

func (ResourceRequirementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceRequirement)(nil)).Elem()
}

func (i ResourceRequirementArray) ToResourceRequirementArrayOutput() ResourceRequirementArrayOutput {
	return i.ToResourceRequirementArrayOutputWithContext(context.Background())
}

func (i ResourceRequirementArray) ToResourceRequirementArrayOutputWithContext(ctx context.Context) ResourceRequirementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRequirementArrayOutput)
}

// Definition of ResourceRequirement
type ResourceRequirementOutput struct{ *pulumi.OutputState }

func (ResourceRequirementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRequirement)(nil)).Elem()
}

func (o ResourceRequirementOutput) ToResourceRequirementOutput() ResourceRequirementOutput {
	return o
}

func (o ResourceRequirementOutput) ToResourceRequirementOutputWithContext(ctx context.Context) ResourceRequirementOutput {
	return o
}

// The type of resource to assign to a container. The supported values are “GPU“ or “InferenceAccelerator“.
func (o ResourceRequirementOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequirement) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value for the specified resource type. If the “GPU“ type is used, the value is the number of physical “GPUs“ the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the “InferenceAccelerator“ type is used, the “value“ matches the “deviceName“ for an [InferenceAccelerator](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html) specified in a task definition.
func (o ResourceRequirementOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequirement) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRequirementArrayOutput struct{ *pulumi.OutputState }

func (ResourceRequirementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceRequirement)(nil)).Elem()
}

func (o ResourceRequirementArrayOutput) ToResourceRequirementArrayOutput() ResourceRequirementArrayOutput {
	return o
}

func (o ResourceRequirementArrayOutput) ToResourceRequirementArrayOutputWithContext(ctx context.Context) ResourceRequirementArrayOutput {
	return o
}

func (o ResourceRequirementArrayOutput) Index(i pulumi.IntInput) ResourceRequirementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceRequirement {
		return vs[0].([]ResourceRequirement)[vs[1].(int)]
	}).(ResourceRequirementOutput)
}

// Definition of ResourceRequirement
type ResourceRequirementResponse struct {
	// The type of resource to assign to a container. The supported values are ``GPU`` or ``InferenceAccelerator``.
	Type *string `pulumi:"type"`
	// The value for the specified resource type. If the ``GPU`` type is used, the value is the number of physical ``GPUs`` the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the ``InferenceAccelerator`` type is used, the ``value`` matches the ``deviceName`` for an [InferenceAccelerator](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html) specified in a task definition.
	Value *string `pulumi:"value"`
}

// Definition of ResourceRequirement
type ResourceRequirementResponseOutput struct{ *pulumi.OutputState }

func (ResourceRequirementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRequirementResponse)(nil)).Elem()
}

func (o ResourceRequirementResponseOutput) ToResourceRequirementResponseOutput() ResourceRequirementResponseOutput {
	return o
}

func (o ResourceRequirementResponseOutput) ToResourceRequirementResponseOutputWithContext(ctx context.Context) ResourceRequirementResponseOutput {
	return o
}

// The type of resource to assign to a container. The supported values are “GPU“ or “InferenceAccelerator“.
func (o ResourceRequirementResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequirementResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value for the specified resource type. If the “GPU“ type is used, the value is the number of physical “GPUs“ the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the “InferenceAccelerator“ type is used, the “value“ matches the “deviceName“ for an [InferenceAccelerator](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html) specified in a task definition.
func (o ResourceRequirementResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceRequirementResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceRequirementResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceRequirementResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceRequirementResponse)(nil)).Elem()
}

func (o ResourceRequirementResponseArrayOutput) ToResourceRequirementResponseArrayOutput() ResourceRequirementResponseArrayOutput {
	return o
}

func (o ResourceRequirementResponseArrayOutput) ToResourceRequirementResponseArrayOutputWithContext(ctx context.Context) ResourceRequirementResponseArrayOutput {
	return o
}

func (o ResourceRequirementResponseArrayOutput) Index(i pulumi.IntInput) ResourceRequirementResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceRequirementResponse {
		return vs[0].([]ResourceRequirementResponse)[vs[1].(int)]
	}).(ResourceRequirementResponseOutput)
}

// Definition of ResourceSpec
type ResourceSpec struct {
	// The instance type that the image version runs on.
	InstanceType *string `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn *string `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn *string `pulumi:"sageMakerImageVersionArn"`
}

// ResourceSpecInput is an input type that accepts ResourceSpecArgs and ResourceSpecOutput values.
// You can construct a concrete instance of `ResourceSpecInput` via:
//
//	ResourceSpecArgs{...}
type ResourceSpecInput interface {
	pulumi.Input

	ToResourceSpecOutput() ResourceSpecOutput
	ToResourceSpecOutputWithContext(context.Context) ResourceSpecOutput
}

// Definition of ResourceSpec
type ResourceSpecArgs struct {
	// The instance type that the image version runs on.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn pulumi.StringPtrInput `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn pulumi.StringPtrInput `pulumi:"sageMakerImageVersionArn"`
}

func (ResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSpec)(nil)).Elem()
}

func (i ResourceSpecArgs) ToResourceSpecOutput() ResourceSpecOutput {
	return i.ToResourceSpecOutputWithContext(context.Background())
}

func (i ResourceSpecArgs) ToResourceSpecOutputWithContext(ctx context.Context) ResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSpecOutput)
}

func (i ResourceSpecArgs) ToResourceSpecPtrOutput() ResourceSpecPtrOutput {
	return i.ToResourceSpecPtrOutputWithContext(context.Background())
}

func (i ResourceSpecArgs) ToResourceSpecPtrOutputWithContext(ctx context.Context) ResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSpecOutput).ToResourceSpecPtrOutputWithContext(ctx)
}

// ResourceSpecPtrInput is an input type that accepts ResourceSpecArgs, ResourceSpecPtr and ResourceSpecPtrOutput values.
// You can construct a concrete instance of `ResourceSpecPtrInput` via:
//
//	        ResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ResourceSpecPtrInput interface {
	pulumi.Input

	ToResourceSpecPtrOutput() ResourceSpecPtrOutput
	ToResourceSpecPtrOutputWithContext(context.Context) ResourceSpecPtrOutput
}

type resourceSpecPtrType ResourceSpecArgs

func ResourceSpecPtr(v *ResourceSpecArgs) ResourceSpecPtrInput {
	return (*resourceSpecPtrType)(v)
}

func (*resourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSpec)(nil)).Elem()
}

func (i *resourceSpecPtrType) ToResourceSpecPtrOutput() ResourceSpecPtrOutput {
	return i.ToResourceSpecPtrOutputWithContext(context.Background())
}

func (i *resourceSpecPtrType) ToResourceSpecPtrOutputWithContext(ctx context.Context) ResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSpecPtrOutput)
}

// Definition of ResourceSpec
type ResourceSpecOutput struct{ *pulumi.OutputState }

func (ResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSpec)(nil)).Elem()
}

func (o ResourceSpecOutput) ToResourceSpecOutput() ResourceSpecOutput {
	return o
}

func (o ResourceSpecOutput) ToResourceSpecOutputWithContext(ctx context.Context) ResourceSpecOutput {
	return o
}

func (o ResourceSpecOutput) ToResourceSpecPtrOutput() ResourceSpecPtrOutput {
	return o.ToResourceSpecPtrOutputWithContext(context.Background())
}

func (o ResourceSpecOutput) ToResourceSpecPtrOutputWithContext(ctx context.Context) ResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSpec) *ResourceSpec {
		return &v
	}).(ResourceSpecPtrOutput)
}

// The instance type that the image version runs on.
func (o ResourceSpecOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSpec) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o ResourceSpecOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSpec) *string { return v.SageMakerImageArn }).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o ResourceSpecOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSpec) *string { return v.SageMakerImageVersionArn }).(pulumi.StringPtrOutput)
}

type ResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSpec)(nil)).Elem()
}

func (o ResourceSpecPtrOutput) ToResourceSpecPtrOutput() ResourceSpecPtrOutput {
	return o
}

func (o ResourceSpecPtrOutput) ToResourceSpecPtrOutputWithContext(ctx context.Context) ResourceSpecPtrOutput {
	return o
}

func (o ResourceSpecPtrOutput) Elem() ResourceSpecOutput {
	return o.ApplyT(func(v *ResourceSpec) ResourceSpec {
		if v != nil {
			return *v
		}
		var ret ResourceSpec
		return ret
	}).(ResourceSpecOutput)
}

// The instance type that the image version runs on.
func (o ResourceSpecPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o ResourceSpecPtrOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o ResourceSpecPtrOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageVersionArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceSpec
type ResourceSpecResponse struct {
	// The instance type that the image version runs on.
	InstanceType *string `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn *string `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn *string `pulumi:"sageMakerImageVersionArn"`
}

// Definition of ResourceSpec
type ResourceSpecResponseOutput struct{ *pulumi.OutputState }

func (ResourceSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSpecResponse)(nil)).Elem()
}

func (o ResourceSpecResponseOutput) ToResourceSpecResponseOutput() ResourceSpecResponseOutput {
	return o
}

func (o ResourceSpecResponseOutput) ToResourceSpecResponseOutputWithContext(ctx context.Context) ResourceSpecResponseOutput {
	return o
}

// The instance type that the image version runs on.
func (o ResourceSpecResponseOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSpecResponse) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o ResourceSpecResponseOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSpecResponse) *string { return v.SageMakerImageArn }).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o ResourceSpecResponseOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSpecResponse) *string { return v.SageMakerImageVersionArn }).(pulumi.StringPtrOutput)
}

type ResourceSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSpecResponse)(nil)).Elem()
}

func (o ResourceSpecResponsePtrOutput) ToResourceSpecResponsePtrOutput() ResourceSpecResponsePtrOutput {
	return o
}

func (o ResourceSpecResponsePtrOutput) ToResourceSpecResponsePtrOutputWithContext(ctx context.Context) ResourceSpecResponsePtrOutput {
	return o
}

func (o ResourceSpecResponsePtrOutput) Elem() ResourceSpecResponseOutput {
	return o.ApplyT(func(v *ResourceSpecResponse) ResourceSpecResponse {
		if v != nil {
			return *v
		}
		var ret ResourceSpecResponse
		return ret
	}).(ResourceSpecResponseOutput)
}

// The instance type that the image version runs on.
func (o ResourceSpecResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o ResourceSpecResponsePtrOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o ResourceSpecResponsePtrOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageVersionArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceTypeEnumValue
type ResourceTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ResourceTypeEnumValueInput is an input type that accepts ResourceTypeEnumValueArgs and ResourceTypeEnumValueOutput values.
// You can construct a concrete instance of `ResourceTypeEnumValueInput` via:
//
//	ResourceTypeEnumValueArgs{...}
type ResourceTypeEnumValueInput interface {
	pulumi.Input

	ToResourceTypeEnumValueOutput() ResourceTypeEnumValueOutput
	ToResourceTypeEnumValueOutputWithContext(context.Context) ResourceTypeEnumValueOutput
}

// Definition of ResourceTypeEnumValue
type ResourceTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTypeEnumValue)(nil)).Elem()
}

func (i ResourceTypeEnumValueArgs) ToResourceTypeEnumValueOutput() ResourceTypeEnumValueOutput {
	return i.ToResourceTypeEnumValueOutputWithContext(context.Background())
}

func (i ResourceTypeEnumValueArgs) ToResourceTypeEnumValueOutputWithContext(ctx context.Context) ResourceTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTypeEnumValueOutput)
}

func (i ResourceTypeEnumValueArgs) ToResourceTypeEnumValuePtrOutput() ResourceTypeEnumValuePtrOutput {
	return i.ToResourceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i ResourceTypeEnumValueArgs) ToResourceTypeEnumValuePtrOutputWithContext(ctx context.Context) ResourceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTypeEnumValueOutput).ToResourceTypeEnumValuePtrOutputWithContext(ctx)
}

// ResourceTypeEnumValuePtrInput is an input type that accepts ResourceTypeEnumValueArgs, ResourceTypeEnumValuePtr and ResourceTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `ResourceTypeEnumValuePtrInput` via:
//
//	        ResourceTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type ResourceTypeEnumValuePtrInput interface {
	pulumi.Input

	ToResourceTypeEnumValuePtrOutput() ResourceTypeEnumValuePtrOutput
	ToResourceTypeEnumValuePtrOutputWithContext(context.Context) ResourceTypeEnumValuePtrOutput
}

type resourceTypeEnumValuePtrType ResourceTypeEnumValueArgs

func ResourceTypeEnumValuePtr(v *ResourceTypeEnumValueArgs) ResourceTypeEnumValuePtrInput {
	return (*resourceTypeEnumValuePtrType)(v)
}

func (*resourceTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTypeEnumValue)(nil)).Elem()
}

func (i *resourceTypeEnumValuePtrType) ToResourceTypeEnumValuePtrOutput() ResourceTypeEnumValuePtrOutput {
	return i.ToResourceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *resourceTypeEnumValuePtrType) ToResourceTypeEnumValuePtrOutputWithContext(ctx context.Context) ResourceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceTypeEnumValuePtrOutput)
}

// Definition of ResourceTypeEnumValue
type ResourceTypeEnumValueOutput struct{ *pulumi.OutputState }

func (ResourceTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTypeEnumValue)(nil)).Elem()
}

func (o ResourceTypeEnumValueOutput) ToResourceTypeEnumValueOutput() ResourceTypeEnumValueOutput {
	return o
}

func (o ResourceTypeEnumValueOutput) ToResourceTypeEnumValueOutputWithContext(ctx context.Context) ResourceTypeEnumValueOutput {
	return o
}

func (o ResourceTypeEnumValueOutput) ToResourceTypeEnumValuePtrOutput() ResourceTypeEnumValuePtrOutput {
	return o.ToResourceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o ResourceTypeEnumValueOutput) ToResourceTypeEnumValuePtrOutputWithContext(ctx context.Context) ResourceTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceTypeEnumValue) *ResourceTypeEnumValue {
		return &v
	}).(ResourceTypeEnumValuePtrOutput)
}

// Property value
func (o ResourceTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ResourceTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTypeEnumValue)(nil)).Elem()
}

func (o ResourceTypeEnumValuePtrOutput) ToResourceTypeEnumValuePtrOutput() ResourceTypeEnumValuePtrOutput {
	return o
}

func (o ResourceTypeEnumValuePtrOutput) ToResourceTypeEnumValuePtrOutputWithContext(ctx context.Context) ResourceTypeEnumValuePtrOutput {
	return o
}

func (o ResourceTypeEnumValuePtrOutput) Elem() ResourceTypeEnumValueOutput {
	return o.ApplyT(func(v *ResourceTypeEnumValue) ResourceTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret ResourceTypeEnumValue
		return ret
	}).(ResourceTypeEnumValueOutput)
}

// Property value
func (o ResourceTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ResourceTypeEnumValue
type ResourceTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ResourceTypeEnumValue
type ResourceTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ResourceTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceTypeEnumValueResponse)(nil)).Elem()
}

func (o ResourceTypeEnumValueResponseOutput) ToResourceTypeEnumValueResponseOutput() ResourceTypeEnumValueResponseOutput {
	return o
}

func (o ResourceTypeEnumValueResponseOutput) ToResourceTypeEnumValueResponseOutputWithContext(ctx context.Context) ResourceTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o ResourceTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceTypeEnumValueResponse)(nil)).Elem()
}

func (o ResourceTypeEnumValueResponsePtrOutput) ToResourceTypeEnumValueResponsePtrOutput() ResourceTypeEnumValueResponsePtrOutput {
	return o
}

func (o ResourceTypeEnumValueResponsePtrOutput) ToResourceTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) ResourceTypeEnumValueResponsePtrOutput {
	return o
}

func (o ResourceTypeEnumValueResponsePtrOutput) Elem() ResourceTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *ResourceTypeEnumValueResponse) ResourceTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ResourceTypeEnumValueResponse
		return ret
	}).(ResourceTypeEnumValueResponseOutput)
}

// Property value
func (o ResourceTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Restrictions
type Restrictions struct {
	// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
	GeoRestriction *GeoRestriction `pulumi:"geoRestriction"`
}

// RestrictionsInput is an input type that accepts RestrictionsArgs and RestrictionsOutput values.
// You can construct a concrete instance of `RestrictionsInput` via:
//
//	RestrictionsArgs{...}
type RestrictionsInput interface {
	pulumi.Input

	ToRestrictionsOutput() RestrictionsOutput
	ToRestrictionsOutputWithContext(context.Context) RestrictionsOutput
}

// Definition of Restrictions
type RestrictionsArgs struct {
	// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
	GeoRestriction GeoRestrictionPtrInput `pulumi:"geoRestriction"`
}

func (RestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Restrictions)(nil)).Elem()
}

func (i RestrictionsArgs) ToRestrictionsOutput() RestrictionsOutput {
	return i.ToRestrictionsOutputWithContext(context.Background())
}

func (i RestrictionsArgs) ToRestrictionsOutputWithContext(ctx context.Context) RestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionsOutput)
}

func (i RestrictionsArgs) ToRestrictionsPtrOutput() RestrictionsPtrOutput {
	return i.ToRestrictionsPtrOutputWithContext(context.Background())
}

func (i RestrictionsArgs) ToRestrictionsPtrOutputWithContext(ctx context.Context) RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionsOutput).ToRestrictionsPtrOutputWithContext(ctx)
}

// RestrictionsPtrInput is an input type that accepts RestrictionsArgs, RestrictionsPtr and RestrictionsPtrOutput values.
// You can construct a concrete instance of `RestrictionsPtrInput` via:
//
//	        RestrictionsArgs{...}
//
//	or:
//
//	        nil
type RestrictionsPtrInput interface {
	pulumi.Input

	ToRestrictionsPtrOutput() RestrictionsPtrOutput
	ToRestrictionsPtrOutputWithContext(context.Context) RestrictionsPtrOutput
}

type restrictionsPtrType RestrictionsArgs

func RestrictionsPtr(v *RestrictionsArgs) RestrictionsPtrInput {
	return (*restrictionsPtrType)(v)
}

func (*restrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Restrictions)(nil)).Elem()
}

func (i *restrictionsPtrType) ToRestrictionsPtrOutput() RestrictionsPtrOutput {
	return i.ToRestrictionsPtrOutputWithContext(context.Background())
}

func (i *restrictionsPtrType) ToRestrictionsPtrOutputWithContext(ctx context.Context) RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionsPtrOutput)
}

// Definition of Restrictions
type RestrictionsOutput struct{ *pulumi.OutputState }

func (RestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Restrictions)(nil)).Elem()
}

func (o RestrictionsOutput) ToRestrictionsOutput() RestrictionsOutput {
	return o
}

func (o RestrictionsOutput) ToRestrictionsOutputWithContext(ctx context.Context) RestrictionsOutput {
	return o
}

func (o RestrictionsOutput) ToRestrictionsPtrOutput() RestrictionsPtrOutput {
	return o.ToRestrictionsPtrOutputWithContext(context.Background())
}

func (o RestrictionsOutput) ToRestrictionsPtrOutputWithContext(ctx context.Context) RestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Restrictions) *Restrictions {
		return &v
	}).(RestrictionsPtrOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
func (o RestrictionsOutput) GeoRestriction() GeoRestrictionPtrOutput {
	return o.ApplyT(func(v Restrictions) *GeoRestriction { return v.GeoRestriction }).(GeoRestrictionPtrOutput)
}

type RestrictionsPtrOutput struct{ *pulumi.OutputState }

func (RestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Restrictions)(nil)).Elem()
}

func (o RestrictionsPtrOutput) ToRestrictionsPtrOutput() RestrictionsPtrOutput {
	return o
}

func (o RestrictionsPtrOutput) ToRestrictionsPtrOutputWithContext(ctx context.Context) RestrictionsPtrOutput {
	return o
}

func (o RestrictionsPtrOutput) Elem() RestrictionsOutput {
	return o.ApplyT(func(v *Restrictions) Restrictions {
		if v != nil {
			return *v
		}
		var ret Restrictions
		return ret
	}).(RestrictionsOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
func (o RestrictionsPtrOutput) GeoRestriction() GeoRestrictionPtrOutput {
	return o.ApplyT(func(v *Restrictions) *GeoRestriction {
		if v == nil {
			return nil
		}
		return v.GeoRestriction
	}).(GeoRestrictionPtrOutput)
}

// Definition of Restrictions
type RestrictionsResponse struct {
	// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
	GeoRestriction *GeoRestrictionResponse `pulumi:"geoRestriction"`
}

// Definition of Restrictions
type RestrictionsResponseOutput struct{ *pulumi.OutputState }

func (RestrictionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionsResponse)(nil)).Elem()
}

func (o RestrictionsResponseOutput) ToRestrictionsResponseOutput() RestrictionsResponseOutput {
	return o
}

func (o RestrictionsResponseOutput) ToRestrictionsResponseOutputWithContext(ctx context.Context) RestrictionsResponseOutput {
	return o
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
func (o RestrictionsResponseOutput) GeoRestriction() GeoRestrictionResponsePtrOutput {
	return o.ApplyT(func(v RestrictionsResponse) *GeoRestrictionResponse { return v.GeoRestriction }).(GeoRestrictionResponsePtrOutput)
}

type RestrictionsResponsePtrOutput struct{ *pulumi.OutputState }

func (RestrictionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestrictionsResponse)(nil)).Elem()
}

func (o RestrictionsResponsePtrOutput) ToRestrictionsResponsePtrOutput() RestrictionsResponsePtrOutput {
	return o
}

func (o RestrictionsResponsePtrOutput) ToRestrictionsResponsePtrOutputWithContext(ctx context.Context) RestrictionsResponsePtrOutput {
	return o
}

func (o RestrictionsResponsePtrOutput) Elem() RestrictionsResponseOutput {
	return o.ApplyT(func(v *RestrictionsResponse) RestrictionsResponse {
		if v != nil {
			return *v
		}
		var ret RestrictionsResponse
		return ret
	}).(RestrictionsResponseOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template. A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
func (o RestrictionsResponsePtrOutput) GeoRestriction() GeoRestrictionResponsePtrOutput {
	return o.ApplyT(func(v *RestrictionsResponse) *GeoRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.GeoRestriction
	}).(GeoRestrictionResponsePtrOutput)
}

// Definition of Route53DomainsDomainSummary
type Route53DomainsDomainSummaryProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRoute53DomainsDomainSummaryProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Route53DomainsDomainSummaryPropertiesInput is an input type that accepts Route53DomainsDomainSummaryPropertiesArgs and Route53DomainsDomainSummaryPropertiesOutput values.
// You can construct a concrete instance of `Route53DomainsDomainSummaryPropertiesInput` via:
//
//	Route53DomainsDomainSummaryPropertiesArgs{...}
type Route53DomainsDomainSummaryPropertiesInput interface {
	pulumi.Input

	ToRoute53DomainsDomainSummaryPropertiesOutput() Route53DomainsDomainSummaryPropertiesOutput
	ToRoute53DomainsDomainSummaryPropertiesOutputWithContext(context.Context) Route53DomainsDomainSummaryPropertiesOutput
}

// Definition of Route53DomainsDomainSummary
type Route53DomainsDomainSummaryPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRoute53DomainsDomainSummaryPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (Route53DomainsDomainSummaryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53DomainsDomainSummaryProperties)(nil)).Elem()
}

func (i Route53DomainsDomainSummaryPropertiesArgs) ToRoute53DomainsDomainSummaryPropertiesOutput() Route53DomainsDomainSummaryPropertiesOutput {
	return i.ToRoute53DomainsDomainSummaryPropertiesOutputWithContext(context.Background())
}

func (i Route53DomainsDomainSummaryPropertiesArgs) ToRoute53DomainsDomainSummaryPropertiesOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53DomainsDomainSummaryPropertiesOutput)
}

func (i Route53DomainsDomainSummaryPropertiesArgs) ToRoute53DomainsDomainSummaryPropertiesPtrOutput() Route53DomainsDomainSummaryPropertiesPtrOutput {
	return i.ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i Route53DomainsDomainSummaryPropertiesArgs) ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53DomainsDomainSummaryPropertiesOutput).ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(ctx)
}

// Route53DomainsDomainSummaryPropertiesPtrInput is an input type that accepts Route53DomainsDomainSummaryPropertiesArgs, Route53DomainsDomainSummaryPropertiesPtr and Route53DomainsDomainSummaryPropertiesPtrOutput values.
// You can construct a concrete instance of `Route53DomainsDomainSummaryPropertiesPtrInput` via:
//
//	        Route53DomainsDomainSummaryPropertiesArgs{...}
//
//	or:
//
//	        nil
type Route53DomainsDomainSummaryPropertiesPtrInput interface {
	pulumi.Input

	ToRoute53DomainsDomainSummaryPropertiesPtrOutput() Route53DomainsDomainSummaryPropertiesPtrOutput
	ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(context.Context) Route53DomainsDomainSummaryPropertiesPtrOutput
}

type route53DomainsDomainSummaryPropertiesPtrType Route53DomainsDomainSummaryPropertiesArgs

func Route53DomainsDomainSummaryPropertiesPtr(v *Route53DomainsDomainSummaryPropertiesArgs) Route53DomainsDomainSummaryPropertiesPtrInput {
	return (*route53DomainsDomainSummaryPropertiesPtrType)(v)
}

func (*route53DomainsDomainSummaryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Route53DomainsDomainSummaryProperties)(nil)).Elem()
}

func (i *route53DomainsDomainSummaryPropertiesPtrType) ToRoute53DomainsDomainSummaryPropertiesPtrOutput() Route53DomainsDomainSummaryPropertiesPtrOutput {
	return i.ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i *route53DomainsDomainSummaryPropertiesPtrType) ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53DomainsDomainSummaryPropertiesPtrOutput)
}

// Definition of Route53DomainsDomainSummary
type Route53DomainsDomainSummaryPropertiesOutput struct{ *pulumi.OutputState }

func (Route53DomainsDomainSummaryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53DomainsDomainSummaryProperties)(nil)).Elem()
}

func (o Route53DomainsDomainSummaryPropertiesOutput) ToRoute53DomainsDomainSummaryPropertiesOutput() Route53DomainsDomainSummaryPropertiesOutput {
	return o
}

func (o Route53DomainsDomainSummaryPropertiesOutput) ToRoute53DomainsDomainSummaryPropertiesOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesOutput {
	return o
}

func (o Route53DomainsDomainSummaryPropertiesOutput) ToRoute53DomainsDomainSummaryPropertiesPtrOutput() Route53DomainsDomainSummaryPropertiesPtrOutput {
	return o.ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (o Route53DomainsDomainSummaryPropertiesOutput) ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Route53DomainsDomainSummaryProperties) *Route53DomainsDomainSummaryProperties {
		return &v
	}).(Route53DomainsDomainSummaryPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o Route53DomainsDomainSummaryPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53DomainsDomainSummaryPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53DomainsDomainSummaryPropertiesOutput) AwsProperties() AwsRoute53DomainsDomainSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *AwsRoute53DomainsDomainSummaryProperties {
		return v.AwsProperties
	}).(AwsRoute53DomainsDomainSummaryPropertiesPtrOutput)
}

// AWS Region
func (o Route53DomainsDomainSummaryPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53DomainsDomainSummaryPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53DomainsDomainSummaryPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53DomainsDomainSummaryPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53DomainsDomainSummaryPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type Route53DomainsDomainSummaryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (Route53DomainsDomainSummaryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route53DomainsDomainSummaryProperties)(nil)).Elem()
}

func (o Route53DomainsDomainSummaryPropertiesPtrOutput) ToRoute53DomainsDomainSummaryPropertiesPtrOutput() Route53DomainsDomainSummaryPropertiesPtrOutput {
	return o
}

func (o Route53DomainsDomainSummaryPropertiesPtrOutput) ToRoute53DomainsDomainSummaryPropertiesPtrOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesPtrOutput {
	return o
}

func (o Route53DomainsDomainSummaryPropertiesPtrOutput) Elem() Route53DomainsDomainSummaryPropertiesOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) Route53DomainsDomainSummaryProperties {
		if v != nil {
			return *v
		}
		var ret Route53DomainsDomainSummaryProperties
		return ret
	}).(Route53DomainsDomainSummaryPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) AwsProperties() AwsRoute53DomainsDomainSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *AwsRoute53DomainsDomainSummaryProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRoute53DomainsDomainSummaryPropertiesPtrOutput)
}

// AWS Region
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53DomainsDomainSummaryPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53DomainsDomainSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of Route53DomainsDomainSummary
type Route53DomainsDomainSummaryPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRoute53DomainsDomainSummaryPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of Route53DomainsDomainSummary
type Route53DomainsDomainSummaryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (Route53DomainsDomainSummaryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53DomainsDomainSummaryPropertiesResponse)(nil)).Elem()
}

func (o Route53DomainsDomainSummaryPropertiesResponseOutput) ToRoute53DomainsDomainSummaryPropertiesResponseOutput() Route53DomainsDomainSummaryPropertiesResponseOutput {
	return o
}

func (o Route53DomainsDomainSummaryPropertiesResponseOutput) ToRoute53DomainsDomainSummaryPropertiesResponseOutputWithContext(ctx context.Context) Route53DomainsDomainSummaryPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) AwsProperties() AwsRoute53DomainsDomainSummaryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *AwsRoute53DomainsDomainSummaryPropertiesResponse {
		return v.AwsProperties
	}).(AwsRoute53DomainsDomainSummaryPropertiesResponsePtrOutput)
}

// AWS Region
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53DomainsDomainSummaryPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53DomainsDomainSummaryPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of Route53HostedZone
type Route53HostedZoneProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRoute53HostedZoneProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Route53HostedZonePropertiesInput is an input type that accepts Route53HostedZonePropertiesArgs and Route53HostedZonePropertiesOutput values.
// You can construct a concrete instance of `Route53HostedZonePropertiesInput` via:
//
//	Route53HostedZonePropertiesArgs{...}
type Route53HostedZonePropertiesInput interface {
	pulumi.Input

	ToRoute53HostedZonePropertiesOutput() Route53HostedZonePropertiesOutput
	ToRoute53HostedZonePropertiesOutputWithContext(context.Context) Route53HostedZonePropertiesOutput
}

// Definition of Route53HostedZone
type Route53HostedZonePropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRoute53HostedZonePropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (Route53HostedZonePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53HostedZoneProperties)(nil)).Elem()
}

func (i Route53HostedZonePropertiesArgs) ToRoute53HostedZonePropertiesOutput() Route53HostedZonePropertiesOutput {
	return i.ToRoute53HostedZonePropertiesOutputWithContext(context.Background())
}

func (i Route53HostedZonePropertiesArgs) ToRoute53HostedZonePropertiesOutputWithContext(ctx context.Context) Route53HostedZonePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53HostedZonePropertiesOutput)
}

func (i Route53HostedZonePropertiesArgs) ToRoute53HostedZonePropertiesPtrOutput() Route53HostedZonePropertiesPtrOutput {
	return i.ToRoute53HostedZonePropertiesPtrOutputWithContext(context.Background())
}

func (i Route53HostedZonePropertiesArgs) ToRoute53HostedZonePropertiesPtrOutputWithContext(ctx context.Context) Route53HostedZonePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53HostedZonePropertiesOutput).ToRoute53HostedZonePropertiesPtrOutputWithContext(ctx)
}

// Route53HostedZonePropertiesPtrInput is an input type that accepts Route53HostedZonePropertiesArgs, Route53HostedZonePropertiesPtr and Route53HostedZonePropertiesPtrOutput values.
// You can construct a concrete instance of `Route53HostedZonePropertiesPtrInput` via:
//
//	        Route53HostedZonePropertiesArgs{...}
//
//	or:
//
//	        nil
type Route53HostedZonePropertiesPtrInput interface {
	pulumi.Input

	ToRoute53HostedZonePropertiesPtrOutput() Route53HostedZonePropertiesPtrOutput
	ToRoute53HostedZonePropertiesPtrOutputWithContext(context.Context) Route53HostedZonePropertiesPtrOutput
}

type route53HostedZonePropertiesPtrType Route53HostedZonePropertiesArgs

func Route53HostedZonePropertiesPtr(v *Route53HostedZonePropertiesArgs) Route53HostedZonePropertiesPtrInput {
	return (*route53HostedZonePropertiesPtrType)(v)
}

func (*route53HostedZonePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Route53HostedZoneProperties)(nil)).Elem()
}

func (i *route53HostedZonePropertiesPtrType) ToRoute53HostedZonePropertiesPtrOutput() Route53HostedZonePropertiesPtrOutput {
	return i.ToRoute53HostedZonePropertiesPtrOutputWithContext(context.Background())
}

func (i *route53HostedZonePropertiesPtrType) ToRoute53HostedZonePropertiesPtrOutputWithContext(ctx context.Context) Route53HostedZonePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53HostedZonePropertiesPtrOutput)
}

// Definition of Route53HostedZone
type Route53HostedZonePropertiesOutput struct{ *pulumi.OutputState }

func (Route53HostedZonePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53HostedZoneProperties)(nil)).Elem()
}

func (o Route53HostedZonePropertiesOutput) ToRoute53HostedZonePropertiesOutput() Route53HostedZonePropertiesOutput {
	return o
}

func (o Route53HostedZonePropertiesOutput) ToRoute53HostedZonePropertiesOutputWithContext(ctx context.Context) Route53HostedZonePropertiesOutput {
	return o
}

func (o Route53HostedZonePropertiesOutput) ToRoute53HostedZonePropertiesPtrOutput() Route53HostedZonePropertiesPtrOutput {
	return o.ToRoute53HostedZonePropertiesPtrOutputWithContext(context.Background())
}

func (o Route53HostedZonePropertiesOutput) ToRoute53HostedZonePropertiesPtrOutputWithContext(ctx context.Context) Route53HostedZonePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Route53HostedZoneProperties) *Route53HostedZoneProperties {
		return &v
	}).(Route53HostedZonePropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o Route53HostedZonePropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53HostedZonePropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53HostedZonePropertiesOutput) AwsProperties() AwsRoute53HostedZonePropertiesPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *AwsRoute53HostedZoneProperties { return v.AwsProperties }).(AwsRoute53HostedZonePropertiesPtrOutput)
}

// AWS Region
func (o Route53HostedZonePropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53HostedZonePropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53HostedZonePropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53HostedZonePropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53HostedZonePropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZoneProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type Route53HostedZonePropertiesPtrOutput struct{ *pulumi.OutputState }

func (Route53HostedZonePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route53HostedZoneProperties)(nil)).Elem()
}

func (o Route53HostedZonePropertiesPtrOutput) ToRoute53HostedZonePropertiesPtrOutput() Route53HostedZonePropertiesPtrOutput {
	return o
}

func (o Route53HostedZonePropertiesPtrOutput) ToRoute53HostedZonePropertiesPtrOutputWithContext(ctx context.Context) Route53HostedZonePropertiesPtrOutput {
	return o
}

func (o Route53HostedZonePropertiesPtrOutput) Elem() Route53HostedZonePropertiesOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) Route53HostedZoneProperties {
		if v != nil {
			return *v
		}
		var ret Route53HostedZoneProperties
		return ret
	}).(Route53HostedZonePropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o Route53HostedZonePropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53HostedZonePropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53HostedZonePropertiesPtrOutput) AwsProperties() AwsRoute53HostedZonePropertiesPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *AwsRoute53HostedZoneProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRoute53HostedZonePropertiesPtrOutput)
}

// AWS Region
func (o Route53HostedZonePropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53HostedZonePropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53HostedZonePropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53HostedZonePropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53HostedZonePropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53HostedZoneProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of Route53HostedZone
type Route53HostedZonePropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRoute53HostedZonePropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of Route53HostedZone
type Route53HostedZonePropertiesResponseOutput struct{ *pulumi.OutputState }

func (Route53HostedZonePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53HostedZonePropertiesResponse)(nil)).Elem()
}

func (o Route53HostedZonePropertiesResponseOutput) ToRoute53HostedZonePropertiesResponseOutput() Route53HostedZonePropertiesResponseOutput {
	return o
}

func (o Route53HostedZonePropertiesResponseOutput) ToRoute53HostedZonePropertiesResponseOutputWithContext(ctx context.Context) Route53HostedZonePropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o Route53HostedZonePropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53HostedZonePropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53HostedZonePropertiesResponseOutput) AwsProperties() AwsRoute53HostedZonePropertiesResponsePtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *AwsRoute53HostedZonePropertiesResponse {
		return v.AwsProperties
	}).(AwsRoute53HostedZonePropertiesResponsePtrOutput)
}

// AWS Region
func (o Route53HostedZonePropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53HostedZonePropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53HostedZonePropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o Route53HostedZonePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53HostedZonePropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53HostedZonePropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53HostedZonePropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of Route53ResourceRecordSet
type Route53ResourceRecordSetProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRoute53ResourceRecordSetProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Route53ResourceRecordSetPropertiesInput is an input type that accepts Route53ResourceRecordSetPropertiesArgs and Route53ResourceRecordSetPropertiesOutput values.
// You can construct a concrete instance of `Route53ResourceRecordSetPropertiesInput` via:
//
//	Route53ResourceRecordSetPropertiesArgs{...}
type Route53ResourceRecordSetPropertiesInput interface {
	pulumi.Input

	ToRoute53ResourceRecordSetPropertiesOutput() Route53ResourceRecordSetPropertiesOutput
	ToRoute53ResourceRecordSetPropertiesOutputWithContext(context.Context) Route53ResourceRecordSetPropertiesOutput
}

// Definition of Route53ResourceRecordSet
type Route53ResourceRecordSetPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsRoute53ResourceRecordSetPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (Route53ResourceRecordSetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53ResourceRecordSetProperties)(nil)).Elem()
}

func (i Route53ResourceRecordSetPropertiesArgs) ToRoute53ResourceRecordSetPropertiesOutput() Route53ResourceRecordSetPropertiesOutput {
	return i.ToRoute53ResourceRecordSetPropertiesOutputWithContext(context.Background())
}

func (i Route53ResourceRecordSetPropertiesArgs) ToRoute53ResourceRecordSetPropertiesOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53ResourceRecordSetPropertiesOutput)
}

func (i Route53ResourceRecordSetPropertiesArgs) ToRoute53ResourceRecordSetPropertiesPtrOutput() Route53ResourceRecordSetPropertiesPtrOutput {
	return i.ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(context.Background())
}

func (i Route53ResourceRecordSetPropertiesArgs) ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53ResourceRecordSetPropertiesOutput).ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(ctx)
}

// Route53ResourceRecordSetPropertiesPtrInput is an input type that accepts Route53ResourceRecordSetPropertiesArgs, Route53ResourceRecordSetPropertiesPtr and Route53ResourceRecordSetPropertiesPtrOutput values.
// You can construct a concrete instance of `Route53ResourceRecordSetPropertiesPtrInput` via:
//
//	        Route53ResourceRecordSetPropertiesArgs{...}
//
//	or:
//
//	        nil
type Route53ResourceRecordSetPropertiesPtrInput interface {
	pulumi.Input

	ToRoute53ResourceRecordSetPropertiesPtrOutput() Route53ResourceRecordSetPropertiesPtrOutput
	ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(context.Context) Route53ResourceRecordSetPropertiesPtrOutput
}

type route53ResourceRecordSetPropertiesPtrType Route53ResourceRecordSetPropertiesArgs

func Route53ResourceRecordSetPropertiesPtr(v *Route53ResourceRecordSetPropertiesArgs) Route53ResourceRecordSetPropertiesPtrInput {
	return (*route53ResourceRecordSetPropertiesPtrType)(v)
}

func (*route53ResourceRecordSetPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Route53ResourceRecordSetProperties)(nil)).Elem()
}

func (i *route53ResourceRecordSetPropertiesPtrType) ToRoute53ResourceRecordSetPropertiesPtrOutput() Route53ResourceRecordSetPropertiesPtrOutput {
	return i.ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(context.Background())
}

func (i *route53ResourceRecordSetPropertiesPtrType) ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Route53ResourceRecordSetPropertiesPtrOutput)
}

// Definition of Route53ResourceRecordSet
type Route53ResourceRecordSetPropertiesOutput struct{ *pulumi.OutputState }

func (Route53ResourceRecordSetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53ResourceRecordSetProperties)(nil)).Elem()
}

func (o Route53ResourceRecordSetPropertiesOutput) ToRoute53ResourceRecordSetPropertiesOutput() Route53ResourceRecordSetPropertiesOutput {
	return o
}

func (o Route53ResourceRecordSetPropertiesOutput) ToRoute53ResourceRecordSetPropertiesOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesOutput {
	return o
}

func (o Route53ResourceRecordSetPropertiesOutput) ToRoute53ResourceRecordSetPropertiesPtrOutput() Route53ResourceRecordSetPropertiesPtrOutput {
	return o.ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(context.Background())
}

func (o Route53ResourceRecordSetPropertiesOutput) ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Route53ResourceRecordSetProperties) *Route53ResourceRecordSetProperties {
		return &v
	}).(Route53ResourceRecordSetPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o Route53ResourceRecordSetPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53ResourceRecordSetPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53ResourceRecordSetPropertiesOutput) AwsProperties() AwsRoute53ResourceRecordSetPropertiesPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *AwsRoute53ResourceRecordSetProperties {
		return v.AwsProperties
	}).(AwsRoute53ResourceRecordSetPropertiesPtrOutput)
}

// AWS Region
func (o Route53ResourceRecordSetPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53ResourceRecordSetPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53ResourceRecordSetPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53ResourceRecordSetPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53ResourceRecordSetPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type Route53ResourceRecordSetPropertiesPtrOutput struct{ *pulumi.OutputState }

func (Route53ResourceRecordSetPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route53ResourceRecordSetProperties)(nil)).Elem()
}

func (o Route53ResourceRecordSetPropertiesPtrOutput) ToRoute53ResourceRecordSetPropertiesPtrOutput() Route53ResourceRecordSetPropertiesPtrOutput {
	return o
}

func (o Route53ResourceRecordSetPropertiesPtrOutput) ToRoute53ResourceRecordSetPropertiesPtrOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesPtrOutput {
	return o
}

func (o Route53ResourceRecordSetPropertiesPtrOutput) Elem() Route53ResourceRecordSetPropertiesOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) Route53ResourceRecordSetProperties {
		if v != nil {
			return *v
		}
		var ret Route53ResourceRecordSetProperties
		return ret
	}).(Route53ResourceRecordSetPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o Route53ResourceRecordSetPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53ResourceRecordSetPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53ResourceRecordSetPropertiesPtrOutput) AwsProperties() AwsRoute53ResourceRecordSetPropertiesPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *AwsRoute53ResourceRecordSetProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsRoute53ResourceRecordSetPropertiesPtrOutput)
}

// AWS Region
func (o Route53ResourceRecordSetPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53ResourceRecordSetPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53ResourceRecordSetPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53ResourceRecordSetPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53ResourceRecordSetPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route53ResourceRecordSetProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of Route53ResourceRecordSet
type Route53ResourceRecordSetPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsRoute53ResourceRecordSetPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of Route53ResourceRecordSet
type Route53ResourceRecordSetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (Route53ResourceRecordSetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route53ResourceRecordSetPropertiesResponse)(nil)).Elem()
}

func (o Route53ResourceRecordSetPropertiesResponseOutput) ToRoute53ResourceRecordSetPropertiesResponseOutput() Route53ResourceRecordSetPropertiesResponseOutput {
	return o
}

func (o Route53ResourceRecordSetPropertiesResponseOutput) ToRoute53ResourceRecordSetPropertiesResponseOutputWithContext(ctx context.Context) Route53ResourceRecordSetPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o Route53ResourceRecordSetPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Route53ResourceRecordSetPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Route53ResourceRecordSetPropertiesResponseOutput) AwsProperties() AwsRoute53ResourceRecordSetPropertiesResponsePtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *AwsRoute53ResourceRecordSetPropertiesResponse {
		return v.AwsProperties
	}).(AwsRoute53ResourceRecordSetPropertiesResponsePtrOutput)
}

// AWS Region
func (o Route53ResourceRecordSetPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Route53ResourceRecordSetPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Route53ResourceRecordSetPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o Route53ResourceRecordSetPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o Route53ResourceRecordSetPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Route53ResourceRecordSetPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route53ResourceRecordSetPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of RoutingRule
type RoutingRule struct {
	// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
	RedirectRule *RedirectRule `pulumi:"redirectRule"`
	// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error. A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
	RoutingRuleCondition *RoutingRuleCondition `pulumi:"routingRuleCondition"`
}

// RoutingRuleInput is an input type that accepts RoutingRuleArgs and RoutingRuleOutput values.
// You can construct a concrete instance of `RoutingRuleInput` via:
//
//	RoutingRuleArgs{...}
type RoutingRuleInput interface {
	pulumi.Input

	ToRoutingRuleOutput() RoutingRuleOutput
	ToRoutingRuleOutputWithContext(context.Context) RoutingRuleOutput
}

// Definition of RoutingRule
type RoutingRuleArgs struct {
	// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
	RedirectRule RedirectRulePtrInput `pulumi:"redirectRule"`
	// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error. A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
	RoutingRuleCondition RoutingRuleConditionPtrInput `pulumi:"routingRuleCondition"`
}

func (RoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRule)(nil)).Elem()
}

func (i RoutingRuleArgs) ToRoutingRuleOutput() RoutingRuleOutput {
	return i.ToRoutingRuleOutputWithContext(context.Background())
}

func (i RoutingRuleArgs) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleOutput)
}

// RoutingRuleArrayInput is an input type that accepts RoutingRuleArray and RoutingRuleArrayOutput values.
// You can construct a concrete instance of `RoutingRuleArrayInput` via:
//
//	RoutingRuleArray{ RoutingRuleArgs{...} }
type RoutingRuleArrayInput interface {
	pulumi.Input

	ToRoutingRuleArrayOutput() RoutingRuleArrayOutput
	ToRoutingRuleArrayOutputWithContext(context.Context) RoutingRuleArrayOutput
}

type RoutingRuleArray []RoutingRuleInput

func (RoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRule)(nil)).Elem()
}

func (i RoutingRuleArray) ToRoutingRuleArrayOutput() RoutingRuleArrayOutput {
	return i.ToRoutingRuleArrayOutputWithContext(context.Background())
}

func (i RoutingRuleArray) ToRoutingRuleArrayOutputWithContext(ctx context.Context) RoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleArrayOutput)
}

// Definition of RoutingRule
type RoutingRuleOutput struct{ *pulumi.OutputState }

func (RoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRule)(nil)).Elem()
}

func (o RoutingRuleOutput) ToRoutingRuleOutput() RoutingRuleOutput {
	return o
}

func (o RoutingRuleOutput) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return o
}

// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
func (o RoutingRuleOutput) RedirectRule() RedirectRulePtrOutput {
	return o.ApplyT(func(v RoutingRule) *RedirectRule { return v.RedirectRule }).(RedirectRulePtrOutput)
}

// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error. A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
func (o RoutingRuleOutput) RoutingRuleCondition() RoutingRuleConditionPtrOutput {
	return o.ApplyT(func(v RoutingRule) *RoutingRuleCondition { return v.RoutingRuleCondition }).(RoutingRuleConditionPtrOutput)
}

type RoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRule)(nil)).Elem()
}

func (o RoutingRuleArrayOutput) ToRoutingRuleArrayOutput() RoutingRuleArrayOutput {
	return o
}

func (o RoutingRuleArrayOutput) ToRoutingRuleArrayOutputWithContext(ctx context.Context) RoutingRuleArrayOutput {
	return o
}

func (o RoutingRuleArrayOutput) Index(i pulumi.IntInput) RoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRule {
		return vs[0].([]RoutingRule)[vs[1].(int)]
	}).(RoutingRuleOutput)
}

// Definition of RoutingRuleCondition
type RoutingRuleCondition struct {
	// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
	HttpErrorCodeReturnedEquals *string `pulumi:"httpErrorCodeReturnedEquals"`
	// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
	KeyPrefixEquals *string `pulumi:"keyPrefixEquals"`
}

// RoutingRuleConditionInput is an input type that accepts RoutingRuleConditionArgs and RoutingRuleConditionOutput values.
// You can construct a concrete instance of `RoutingRuleConditionInput` via:
//
//	RoutingRuleConditionArgs{...}
type RoutingRuleConditionInput interface {
	pulumi.Input

	ToRoutingRuleConditionOutput() RoutingRuleConditionOutput
	ToRoutingRuleConditionOutputWithContext(context.Context) RoutingRuleConditionOutput
}

// Definition of RoutingRuleCondition
type RoutingRuleConditionArgs struct {
	// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
	HttpErrorCodeReturnedEquals pulumi.StringPtrInput `pulumi:"httpErrorCodeReturnedEquals"`
	// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
	KeyPrefixEquals pulumi.StringPtrInput `pulumi:"keyPrefixEquals"`
}

func (RoutingRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleCondition)(nil)).Elem()
}

func (i RoutingRuleConditionArgs) ToRoutingRuleConditionOutput() RoutingRuleConditionOutput {
	return i.ToRoutingRuleConditionOutputWithContext(context.Background())
}

func (i RoutingRuleConditionArgs) ToRoutingRuleConditionOutputWithContext(ctx context.Context) RoutingRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleConditionOutput)
}

func (i RoutingRuleConditionArgs) ToRoutingRuleConditionPtrOutput() RoutingRuleConditionPtrOutput {
	return i.ToRoutingRuleConditionPtrOutputWithContext(context.Background())
}

func (i RoutingRuleConditionArgs) ToRoutingRuleConditionPtrOutputWithContext(ctx context.Context) RoutingRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleConditionOutput).ToRoutingRuleConditionPtrOutputWithContext(ctx)
}

// RoutingRuleConditionPtrInput is an input type that accepts RoutingRuleConditionArgs, RoutingRuleConditionPtr and RoutingRuleConditionPtrOutput values.
// You can construct a concrete instance of `RoutingRuleConditionPtrInput` via:
//
//	        RoutingRuleConditionArgs{...}
//
//	or:
//
//	        nil
type RoutingRuleConditionPtrInput interface {
	pulumi.Input

	ToRoutingRuleConditionPtrOutput() RoutingRuleConditionPtrOutput
	ToRoutingRuleConditionPtrOutputWithContext(context.Context) RoutingRuleConditionPtrOutput
}

type routingRuleConditionPtrType RoutingRuleConditionArgs

func RoutingRuleConditionPtr(v *RoutingRuleConditionArgs) RoutingRuleConditionPtrInput {
	return (*routingRuleConditionPtrType)(v)
}

func (*routingRuleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleCondition)(nil)).Elem()
}

func (i *routingRuleConditionPtrType) ToRoutingRuleConditionPtrOutput() RoutingRuleConditionPtrOutput {
	return i.ToRoutingRuleConditionPtrOutputWithContext(context.Background())
}

func (i *routingRuleConditionPtrType) ToRoutingRuleConditionPtrOutputWithContext(ctx context.Context) RoutingRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleConditionPtrOutput)
}

// Definition of RoutingRuleCondition
type RoutingRuleConditionOutput struct{ *pulumi.OutputState }

func (RoutingRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleCondition)(nil)).Elem()
}

func (o RoutingRuleConditionOutput) ToRoutingRuleConditionOutput() RoutingRuleConditionOutput {
	return o
}

func (o RoutingRuleConditionOutput) ToRoutingRuleConditionOutputWithContext(ctx context.Context) RoutingRuleConditionOutput {
	return o
}

func (o RoutingRuleConditionOutput) ToRoutingRuleConditionPtrOutput() RoutingRuleConditionPtrOutput {
	return o.ToRoutingRuleConditionPtrOutputWithContext(context.Background())
}

func (o RoutingRuleConditionOutput) ToRoutingRuleConditionPtrOutputWithContext(ctx context.Context) RoutingRuleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingRuleCondition) *RoutingRuleCondition {
		return &v
	}).(RoutingRuleConditionPtrOutput)
}

// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element “Condition“ is specified and sibling “KeyPrefixEquals“ is not specified. If both are specified, then both must be true for the redirect to be applied.
func (o RoutingRuleConditionOutput) HttpErrorCodeReturnedEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleCondition) *string { return v.HttpErrorCodeReturnedEquals }).(pulumi.StringPtrOutput)
}

// The object key name prefix when the redirect is applied. For example, to redirect requests for “ExamplePage.html“, the key prefix will be “ExamplePage.html“. To redirect request for all pages with the prefix “docs/“, the key prefix will be “/docs“, which identifies all objects in the docs/ folder. Required when the parent element “Condition“ is specified and sibling “HttpErrorCodeReturnedEquals“ is not specified. If both conditions are specified, both must be true for the redirect to be applied.
func (o RoutingRuleConditionOutput) KeyPrefixEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleCondition) *string { return v.KeyPrefixEquals }).(pulumi.StringPtrOutput)
}

type RoutingRuleConditionPtrOutput struct{ *pulumi.OutputState }

func (RoutingRuleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleCondition)(nil)).Elem()
}

func (o RoutingRuleConditionPtrOutput) ToRoutingRuleConditionPtrOutput() RoutingRuleConditionPtrOutput {
	return o
}

func (o RoutingRuleConditionPtrOutput) ToRoutingRuleConditionPtrOutputWithContext(ctx context.Context) RoutingRuleConditionPtrOutput {
	return o
}

func (o RoutingRuleConditionPtrOutput) Elem() RoutingRuleConditionOutput {
	return o.ApplyT(func(v *RoutingRuleCondition) RoutingRuleCondition {
		if v != nil {
			return *v
		}
		var ret RoutingRuleCondition
		return ret
	}).(RoutingRuleConditionOutput)
}

// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element “Condition“ is specified and sibling “KeyPrefixEquals“ is not specified. If both are specified, then both must be true for the redirect to be applied.
func (o RoutingRuleConditionPtrOutput) HttpErrorCodeReturnedEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.HttpErrorCodeReturnedEquals
	}).(pulumi.StringPtrOutput)
}

// The object key name prefix when the redirect is applied. For example, to redirect requests for “ExamplePage.html“, the key prefix will be “ExamplePage.html“. To redirect request for all pages with the prefix “docs/“, the key prefix will be “/docs“, which identifies all objects in the docs/ folder. Required when the parent element “Condition“ is specified and sibling “HttpErrorCodeReturnedEquals“ is not specified. If both conditions are specified, both must be true for the redirect to be applied.
func (o RoutingRuleConditionPtrOutput) KeyPrefixEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefixEquals
	}).(pulumi.StringPtrOutput)
}

// Definition of RoutingRuleCondition
type RoutingRuleConditionResponse struct {
	// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
	HttpErrorCodeReturnedEquals *string `pulumi:"httpErrorCodeReturnedEquals"`
	// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
	KeyPrefixEquals *string `pulumi:"keyPrefixEquals"`
}

// Definition of RoutingRuleCondition
type RoutingRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleConditionResponse)(nil)).Elem()
}

func (o RoutingRuleConditionResponseOutput) ToRoutingRuleConditionResponseOutput() RoutingRuleConditionResponseOutput {
	return o
}

func (o RoutingRuleConditionResponseOutput) ToRoutingRuleConditionResponseOutputWithContext(ctx context.Context) RoutingRuleConditionResponseOutput {
	return o
}

// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element “Condition“ is specified and sibling “KeyPrefixEquals“ is not specified. If both are specified, then both must be true for the redirect to be applied.
func (o RoutingRuleConditionResponseOutput) HttpErrorCodeReturnedEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleConditionResponse) *string { return v.HttpErrorCodeReturnedEquals }).(pulumi.StringPtrOutput)
}

// The object key name prefix when the redirect is applied. For example, to redirect requests for “ExamplePage.html“, the key prefix will be “ExamplePage.html“. To redirect request for all pages with the prefix “docs/“, the key prefix will be “/docs“, which identifies all objects in the docs/ folder. Required when the parent element “Condition“ is specified and sibling “HttpErrorCodeReturnedEquals“ is not specified. If both conditions are specified, both must be true for the redirect to be applied.
func (o RoutingRuleConditionResponseOutput) KeyPrefixEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleConditionResponse) *string { return v.KeyPrefixEquals }).(pulumi.StringPtrOutput)
}

type RoutingRuleConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingRuleConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleConditionResponse)(nil)).Elem()
}

func (o RoutingRuleConditionResponsePtrOutput) ToRoutingRuleConditionResponsePtrOutput() RoutingRuleConditionResponsePtrOutput {
	return o
}

func (o RoutingRuleConditionResponsePtrOutput) ToRoutingRuleConditionResponsePtrOutputWithContext(ctx context.Context) RoutingRuleConditionResponsePtrOutput {
	return o
}

func (o RoutingRuleConditionResponsePtrOutput) Elem() RoutingRuleConditionResponseOutput {
	return o.ApplyT(func(v *RoutingRuleConditionResponse) RoutingRuleConditionResponse {
		if v != nil {
			return *v
		}
		var ret RoutingRuleConditionResponse
		return ret
	}).(RoutingRuleConditionResponseOutput)
}

// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element “Condition“ is specified and sibling “KeyPrefixEquals“ is not specified. If both are specified, then both must be true for the redirect to be applied.
func (o RoutingRuleConditionResponsePtrOutput) HttpErrorCodeReturnedEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpErrorCodeReturnedEquals
	}).(pulumi.StringPtrOutput)
}

// The object key name prefix when the redirect is applied. For example, to redirect requests for “ExamplePage.html“, the key prefix will be “ExamplePage.html“. To redirect request for all pages with the prefix “docs/“, the key prefix will be “/docs“, which identifies all objects in the docs/ folder. Required when the parent element “Condition“ is specified and sibling “HttpErrorCodeReturnedEquals“ is not specified. If both conditions are specified, both must be true for the redirect to be applied.
func (o RoutingRuleConditionResponsePtrOutput) KeyPrefixEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefixEquals
	}).(pulumi.StringPtrOutput)
}

// Definition of RoutingRule
type RoutingRuleResponse struct {
	// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
	RedirectRule *RedirectRuleResponse `pulumi:"redirectRule"`
	// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error. A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
	RoutingRuleCondition *RoutingRuleConditionResponse `pulumi:"routingRuleCondition"`
}

// Definition of RoutingRule
type RoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleResponse)(nil)).Elem()
}

func (o RoutingRuleResponseOutput) ToRoutingRuleResponseOutput() RoutingRuleResponseOutput {
	return o
}

func (o RoutingRuleResponseOutput) ToRoutingRuleResponseOutputWithContext(ctx context.Context) RoutingRuleResponseOutput {
	return o
}

// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
func (o RoutingRuleResponseOutput) RedirectRule() RedirectRuleResponsePtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *RedirectRuleResponse { return v.RedirectRule }).(RedirectRuleResponsePtrOutput)
}

// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error. A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
func (o RoutingRuleResponseOutput) RoutingRuleCondition() RoutingRuleConditionResponsePtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *RoutingRuleConditionResponse { return v.RoutingRuleCondition }).(RoutingRuleConditionResponsePtrOutput)
}

type RoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleResponse)(nil)).Elem()
}

func (o RoutingRuleResponseArrayOutput) ToRoutingRuleResponseArrayOutput() RoutingRuleResponseArrayOutput {
	return o
}

func (o RoutingRuleResponseArrayOutput) ToRoutingRuleResponseArrayOutputWithContext(ctx context.Context) RoutingRuleResponseArrayOutput {
	return o
}

func (o RoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) RoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRuleResponse {
		return vs[0].([]RoutingRuleResponse)[vs[1].(int)]
	}).(RoutingRuleResponseOutput)
}

// Definition of Rule
type Rule struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket. Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
	AbortIncompleteMultipartUpload *AbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
	ExpirationDate *string `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays *int `pulumi:"expirationInDays"`
	// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with ``ExpirationInDays``, ``ExpirationDate``, or ``TagFilters``.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id *string `pulumi:"id"`
	// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
	NoncurrentVersionExpiration *NoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
	NoncurrentVersionExpirationInDays *int `pulumi:"noncurrentVersionExpirationInDays"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property. Container for the transition rule that describes when noncurrent objects transition to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class at a specific period in the object's lifetime. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
	NoncurrentVersionTransition *NoncurrentVersionTransition `pulumi:"noncurrentVersionTransition"`
	// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransition`` property.
	NoncurrentVersionTransitions []NoncurrentVersionTransition `pulumi:"noncurrentVersionTransitions"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeGreaterThan *string `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeLessThan *string `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
	Status *string `pulumi:"status"`
	// Tags to use to identify a subset of objects to which the lifecycle rule applies.
	TagFilters []TagFilter `pulumi:"tagFilters"`
	// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transitions`` property. Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
	Transition *Transition `pulumi:"transition"`
	// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transition`` property.
	Transitions []Transition `pulumi:"transitions"`
}

// RuleInput is an input type that accepts RuleArgs and RuleOutput values.
// You can construct a concrete instance of `RuleInput` via:
//
//	RuleArgs{...}
type RuleInput interface {
	pulumi.Input

	ToRuleOutput() RuleOutput
	ToRuleOutputWithContext(context.Context) RuleOutput
}

// Definition of Rule
type RuleArgs struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket. Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
	AbortIncompleteMultipartUpload AbortIncompleteMultipartUploadPtrInput `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays pulumi.IntPtrInput `pulumi:"expirationInDays"`
	// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with ``ExpirationInDays``, ``ExpirationDate``, or ``TagFilters``.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
	NoncurrentVersionExpiration NoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
	NoncurrentVersionExpirationInDays pulumi.IntPtrInput `pulumi:"noncurrentVersionExpirationInDays"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property. Container for the transition rule that describes when noncurrent objects transition to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class at a specific period in the object's lifetime. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
	NoncurrentVersionTransition NoncurrentVersionTransitionPtrInput `pulumi:"noncurrentVersionTransition"`
	// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransition`` property.
	NoncurrentVersionTransitions NoncurrentVersionTransitionArrayInput `pulumi:"noncurrentVersionTransitions"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeGreaterThan pulumi.StringPtrInput `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeLessThan pulumi.StringPtrInput `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tags to use to identify a subset of objects to which the lifecycle rule applies.
	TagFilters TagFilterArrayInput `pulumi:"tagFilters"`
	// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transitions`` property. Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
	Transition TransitionPtrInput `pulumi:"transition"`
	// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transition`` property.
	Transitions TransitionArrayInput `pulumi:"transitions"`
}

func (RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Rule)(nil)).Elem()
}

func (i RuleArgs) ToRuleOutput() RuleOutput {
	return i.ToRuleOutputWithContext(context.Background())
}

func (i RuleArgs) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOutput)
}

// RuleArrayInput is an input type that accepts RuleArray and RuleArrayOutput values.
// You can construct a concrete instance of `RuleArrayInput` via:
//
//	RuleArray{ RuleArgs{...} }
type RuleArrayInput interface {
	pulumi.Input

	ToRuleArrayOutput() RuleArrayOutput
	ToRuleArrayOutputWithContext(context.Context) RuleArrayOutput
}

type RuleArray []RuleInput

func (RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Rule)(nil)).Elem()
}

func (i RuleArray) ToRuleArrayOutput() RuleArrayOutput {
	return i.ToRuleArrayOutputWithContext(context.Background())
}

func (i RuleArray) ToRuleArrayOutputWithContext(ctx context.Context) RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleArrayOutput)
}

// Definition of Rule
type RuleOutput struct{ *pulumi.OutputState }

func (RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Rule)(nil)).Elem()
}

func (o RuleOutput) ToRuleOutput() RuleOutput {
	return o
}

func (o RuleOutput) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return o
}

// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket. Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
func (o RuleOutput) AbortIncompleteMultipartUpload() AbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v Rule) *AbortIncompleteMultipartUpload { return v.AbortIncompleteMultipartUpload }).(AbortIncompleteMultipartUploadPtrOutput)
}

// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
func (o RuleOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Rule) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
func (o RuleOutput) ExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Rule) *int { return v.ExpirationInDays }).(pulumi.IntPtrOutput)
}

// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with “ExpirationInDays“, “ExpirationDate“, or “TagFilters“.
func (o RuleOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Rule) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

// Unique identifier for the rule. The value can't be longer than 255 characters.
func (o RuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Rule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
func (o RuleOutput) NoncurrentVersionExpiration() NoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v Rule) *NoncurrentVersionExpiration { return v.NoncurrentVersionExpiration }).(NoncurrentVersionExpirationPtrOutput)
}

// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
func (o RuleOutput) NoncurrentVersionExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Rule) *int { return v.NoncurrentVersionExpirationInDays }).(pulumi.IntPtrOutput)
}

// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property. Container for the transition rule that describes when noncurrent objects transition to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class at a specific period in the object's lifetime. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property.
func (o RuleOutput) NoncurrentVersionTransition() NoncurrentVersionTransitionPtrOutput {
	return o.ApplyT(func(v Rule) *NoncurrentVersionTransition { return v.NoncurrentVersionTransition }).(NoncurrentVersionTransitionPtrOutput)
}

// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the “NoncurrentVersionTransition“ property.
func (o RuleOutput) NoncurrentVersionTransitions() NoncurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v Rule) []NoncurrentVersionTransition { return v.NoncurrentVersionTransitions }).(NoncurrentVersionTransitionArrayOutput)
}

// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
func (o RuleOutput) ObjectSizeGreaterThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Rule) *string { return v.ObjectSizeGreaterThan }).(pulumi.StringPtrOutput)
}

// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
func (o RuleOutput) ObjectSizeLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Rule) *string { return v.ObjectSizeLessThan }).(pulumi.StringPtrOutput)
}

// Object key prefix that identifies one or more objects to which this rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Rule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// If “Enabled“, the rule is currently being applied. If “Disabled“, the rule is not currently being applied.
func (o RuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Rule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tags to use to identify a subset of objects to which the lifecycle rule applies.
func (o RuleOutput) TagFilters() TagFilterArrayOutput {
	return o.ApplyT(func(v Rule) []TagFilter { return v.TagFilters }).(TagFilterArrayOutput)
}

// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the “Transitions“ property. Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
func (o RuleOutput) Transition() TransitionPtrOutput {
	return o.ApplyT(func(v Rule) *Transition { return v.Transition }).(TransitionPtrOutput)
}

// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the “Transition“ property.
func (o RuleOutput) Transitions() TransitionArrayOutput {
	return o.ApplyT(func(v Rule) []Transition { return v.Transitions }).(TransitionArrayOutput)
}

type RuleArrayOutput struct{ *pulumi.OutputState }

func (RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Rule)(nil)).Elem()
}

func (o RuleArrayOutput) ToRuleArrayOutput() RuleArrayOutput {
	return o
}

func (o RuleArrayOutput) ToRuleArrayOutputWithContext(ctx context.Context) RuleArrayOutput {
	return o
}

func (o RuleArrayOutput) Index(i pulumi.IntInput) RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Rule {
		return vs[0].([]Rule)[vs[1].(int)]
	}).(RuleOutput)
}

// Definition of RuleDefinition
type RuleDefinition struct {
	// Property actions
	Actions []string `pulumi:"actions"`
	// Property matchAttributes
	MatchAttributes *MatchAttributes `pulumi:"matchAttributes"`
}

// RuleDefinitionInput is an input type that accepts RuleDefinitionArgs and RuleDefinitionOutput values.
// You can construct a concrete instance of `RuleDefinitionInput` via:
//
//	RuleDefinitionArgs{...}
type RuleDefinitionInput interface {
	pulumi.Input

	ToRuleDefinitionOutput() RuleDefinitionOutput
	ToRuleDefinitionOutputWithContext(context.Context) RuleDefinitionOutput
}

// Definition of RuleDefinition
type RuleDefinitionArgs struct {
	// Property actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// Property matchAttributes
	MatchAttributes MatchAttributesPtrInput `pulumi:"matchAttributes"`
}

func (RuleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleDefinition)(nil)).Elem()
}

func (i RuleDefinitionArgs) ToRuleDefinitionOutput() RuleDefinitionOutput {
	return i.ToRuleDefinitionOutputWithContext(context.Background())
}

func (i RuleDefinitionArgs) ToRuleDefinitionOutputWithContext(ctx context.Context) RuleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDefinitionOutput)
}

func (i RuleDefinitionArgs) ToRuleDefinitionPtrOutput() RuleDefinitionPtrOutput {
	return i.ToRuleDefinitionPtrOutputWithContext(context.Background())
}

func (i RuleDefinitionArgs) ToRuleDefinitionPtrOutputWithContext(ctx context.Context) RuleDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDefinitionOutput).ToRuleDefinitionPtrOutputWithContext(ctx)
}

// RuleDefinitionPtrInput is an input type that accepts RuleDefinitionArgs, RuleDefinitionPtr and RuleDefinitionPtrOutput values.
// You can construct a concrete instance of `RuleDefinitionPtrInput` via:
//
//	        RuleDefinitionArgs{...}
//
//	or:
//
//	        nil
type RuleDefinitionPtrInput interface {
	pulumi.Input

	ToRuleDefinitionPtrOutput() RuleDefinitionPtrOutput
	ToRuleDefinitionPtrOutputWithContext(context.Context) RuleDefinitionPtrOutput
}

type ruleDefinitionPtrType RuleDefinitionArgs

func RuleDefinitionPtr(v *RuleDefinitionArgs) RuleDefinitionPtrInput {
	return (*ruleDefinitionPtrType)(v)
}

func (*ruleDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDefinition)(nil)).Elem()
}

func (i *ruleDefinitionPtrType) ToRuleDefinitionPtrOutput() RuleDefinitionPtrOutput {
	return i.ToRuleDefinitionPtrOutputWithContext(context.Background())
}

func (i *ruleDefinitionPtrType) ToRuleDefinitionPtrOutputWithContext(ctx context.Context) RuleDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDefinitionPtrOutput)
}

// Definition of RuleDefinition
type RuleDefinitionOutput struct{ *pulumi.OutputState }

func (RuleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleDefinition)(nil)).Elem()
}

func (o RuleDefinitionOutput) ToRuleDefinitionOutput() RuleDefinitionOutput {
	return o
}

func (o RuleDefinitionOutput) ToRuleDefinitionOutputWithContext(ctx context.Context) RuleDefinitionOutput {
	return o
}

func (o RuleDefinitionOutput) ToRuleDefinitionPtrOutput() RuleDefinitionPtrOutput {
	return o.ToRuleDefinitionPtrOutputWithContext(context.Background())
}

func (o RuleDefinitionOutput) ToRuleDefinitionPtrOutputWithContext(ctx context.Context) RuleDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleDefinition) *RuleDefinition {
		return &v
	}).(RuleDefinitionPtrOutput)
}

// Property actions
func (o RuleDefinitionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleDefinition) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Property matchAttributes
func (o RuleDefinitionOutput) MatchAttributes() MatchAttributesPtrOutput {
	return o.ApplyT(func(v RuleDefinition) *MatchAttributes { return v.MatchAttributes }).(MatchAttributesPtrOutput)
}

type RuleDefinitionPtrOutput struct{ *pulumi.OutputState }

func (RuleDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDefinition)(nil)).Elem()
}

func (o RuleDefinitionPtrOutput) ToRuleDefinitionPtrOutput() RuleDefinitionPtrOutput {
	return o
}

func (o RuleDefinitionPtrOutput) ToRuleDefinitionPtrOutputWithContext(ctx context.Context) RuleDefinitionPtrOutput {
	return o
}

func (o RuleDefinitionPtrOutput) Elem() RuleDefinitionOutput {
	return o.ApplyT(func(v *RuleDefinition) RuleDefinition {
		if v != nil {
			return *v
		}
		var ret RuleDefinition
		return ret
	}).(RuleDefinitionOutput)
}

// Property actions
func (o RuleDefinitionPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Property matchAttributes
func (o RuleDefinitionPtrOutput) MatchAttributes() MatchAttributesPtrOutput {
	return o.ApplyT(func(v *RuleDefinition) *MatchAttributes {
		if v == nil {
			return nil
		}
		return v.MatchAttributes
	}).(MatchAttributesPtrOutput)
}

// Definition of RuleDefinition
type RuleDefinitionResponse struct {
	// Property actions
	Actions []string `pulumi:"actions"`
	// Property matchAttributes
	MatchAttributes *MatchAttributesResponse `pulumi:"matchAttributes"`
}

// Definition of RuleDefinition
type RuleDefinitionResponseOutput struct{ *pulumi.OutputState }

func (RuleDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleDefinitionResponse)(nil)).Elem()
}

func (o RuleDefinitionResponseOutput) ToRuleDefinitionResponseOutput() RuleDefinitionResponseOutput {
	return o
}

func (o RuleDefinitionResponseOutput) ToRuleDefinitionResponseOutputWithContext(ctx context.Context) RuleDefinitionResponseOutput {
	return o
}

// Property actions
func (o RuleDefinitionResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleDefinitionResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Property matchAttributes
func (o RuleDefinitionResponseOutput) MatchAttributes() MatchAttributesResponsePtrOutput {
	return o.ApplyT(func(v RuleDefinitionResponse) *MatchAttributesResponse { return v.MatchAttributes }).(MatchAttributesResponsePtrOutput)
}

type RuleDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (RuleDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDefinitionResponse)(nil)).Elem()
}

func (o RuleDefinitionResponsePtrOutput) ToRuleDefinitionResponsePtrOutput() RuleDefinitionResponsePtrOutput {
	return o
}

func (o RuleDefinitionResponsePtrOutput) ToRuleDefinitionResponsePtrOutputWithContext(ctx context.Context) RuleDefinitionResponsePtrOutput {
	return o
}

func (o RuleDefinitionResponsePtrOutput) Elem() RuleDefinitionResponseOutput {
	return o.ApplyT(func(v *RuleDefinitionResponse) RuleDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret RuleDefinitionResponse
		return ret
	}).(RuleDefinitionResponseOutput)
}

// Property actions
func (o RuleDefinitionResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleDefinitionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Property matchAttributes
func (o RuleDefinitionResponsePtrOutput) MatchAttributes() MatchAttributesResponsePtrOutput {
	return o.ApplyT(func(v *RuleDefinitionResponse) *MatchAttributesResponse {
		if v == nil {
			return nil
		}
		return v.MatchAttributes
	}).(MatchAttributesResponsePtrOutput)
}

// Definition of RuleGroup
type RuleGroup struct {
	// Property referenceSets
	ReferenceSets *ReferenceSets `pulumi:"referenceSets"`
	// Property ruleVariables
	RuleVariables *RuleVariables `pulumi:"ruleVariables"`
	// Property rulesSource
	RulesSource *RulesSource `pulumi:"rulesSource"`
	// Property statefulRuleOptions
	StatefulRuleOptions *StatefulRuleOptions `pulumi:"statefulRuleOptions"`
}

// RuleGroupInput is an input type that accepts RuleGroupArgs and RuleGroupOutput values.
// You can construct a concrete instance of `RuleGroupInput` via:
//
//	RuleGroupArgs{...}
type RuleGroupInput interface {
	pulumi.Input

	ToRuleGroupOutput() RuleGroupOutput
	ToRuleGroupOutputWithContext(context.Context) RuleGroupOutput
}

// Definition of RuleGroup
type RuleGroupArgs struct {
	// Property referenceSets
	ReferenceSets ReferenceSetsPtrInput `pulumi:"referenceSets"`
	// Property ruleVariables
	RuleVariables RuleVariablesPtrInput `pulumi:"ruleVariables"`
	// Property rulesSource
	RulesSource RulesSourcePtrInput `pulumi:"rulesSource"`
	// Property statefulRuleOptions
	StatefulRuleOptions StatefulRuleOptionsPtrInput `pulumi:"statefulRuleOptions"`
}

func (RuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroup)(nil)).Elem()
}

func (i RuleGroupArgs) ToRuleGroupOutput() RuleGroupOutput {
	return i.ToRuleGroupOutputWithContext(context.Background())
}

func (i RuleGroupArgs) ToRuleGroupOutputWithContext(ctx context.Context) RuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupOutput)
}

func (i RuleGroupArgs) ToRuleGroupPtrOutput() RuleGroupPtrOutput {
	return i.ToRuleGroupPtrOutputWithContext(context.Background())
}

func (i RuleGroupArgs) ToRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupOutput).ToRuleGroupPtrOutputWithContext(ctx)
}

// RuleGroupPtrInput is an input type that accepts RuleGroupArgs, RuleGroupPtr and RuleGroupPtrOutput values.
// You can construct a concrete instance of `RuleGroupPtrInput` via:
//
//	        RuleGroupArgs{...}
//
//	or:
//
//	        nil
type RuleGroupPtrInput interface {
	pulumi.Input

	ToRuleGroupPtrOutput() RuleGroupPtrOutput
	ToRuleGroupPtrOutputWithContext(context.Context) RuleGroupPtrOutput
}

type ruleGroupPtrType RuleGroupArgs

func RuleGroupPtr(v *RuleGroupArgs) RuleGroupPtrInput {
	return (*ruleGroupPtrType)(v)
}

func (*ruleGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroup)(nil)).Elem()
}

func (i *ruleGroupPtrType) ToRuleGroupPtrOutput() RuleGroupPtrOutput {
	return i.ToRuleGroupPtrOutputWithContext(context.Background())
}

func (i *ruleGroupPtrType) ToRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupPtrOutput)
}

// Definition of RuleGroup
type RuleGroupOutput struct{ *pulumi.OutputState }

func (RuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroup)(nil)).Elem()
}

func (o RuleGroupOutput) ToRuleGroupOutput() RuleGroupOutput {
	return o
}

func (o RuleGroupOutput) ToRuleGroupOutputWithContext(ctx context.Context) RuleGroupOutput {
	return o
}

func (o RuleGroupOutput) ToRuleGroupPtrOutput() RuleGroupPtrOutput {
	return o.ToRuleGroupPtrOutputWithContext(context.Background())
}

func (o RuleGroupOutput) ToRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroup) *RuleGroup {
		return &v
	}).(RuleGroupPtrOutput)
}

// Property referenceSets
func (o RuleGroupOutput) ReferenceSets() ReferenceSetsPtrOutput {
	return o.ApplyT(func(v RuleGroup) *ReferenceSets { return v.ReferenceSets }).(ReferenceSetsPtrOutput)
}

// Property ruleVariables
func (o RuleGroupOutput) RuleVariables() RuleVariablesPtrOutput {
	return o.ApplyT(func(v RuleGroup) *RuleVariables { return v.RuleVariables }).(RuleVariablesPtrOutput)
}

// Property rulesSource
func (o RuleGroupOutput) RulesSource() RulesSourcePtrOutput {
	return o.ApplyT(func(v RuleGroup) *RulesSource { return v.RulesSource }).(RulesSourcePtrOutput)
}

// Property statefulRuleOptions
func (o RuleGroupOutput) StatefulRuleOptions() StatefulRuleOptionsPtrOutput {
	return o.ApplyT(func(v RuleGroup) *StatefulRuleOptions { return v.StatefulRuleOptions }).(StatefulRuleOptionsPtrOutput)
}

type RuleGroupPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroup)(nil)).Elem()
}

func (o RuleGroupPtrOutput) ToRuleGroupPtrOutput() RuleGroupPtrOutput {
	return o
}

func (o RuleGroupPtrOutput) ToRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupPtrOutput {
	return o
}

func (o RuleGroupPtrOutput) Elem() RuleGroupOutput {
	return o.ApplyT(func(v *RuleGroup) RuleGroup {
		if v != nil {
			return *v
		}
		var ret RuleGroup
		return ret
	}).(RuleGroupOutput)
}

// Property referenceSets
func (o RuleGroupPtrOutput) ReferenceSets() ReferenceSetsPtrOutput {
	return o.ApplyT(func(v *RuleGroup) *ReferenceSets {
		if v == nil {
			return nil
		}
		return v.ReferenceSets
	}).(ReferenceSetsPtrOutput)
}

// Property ruleVariables
func (o RuleGroupPtrOutput) RuleVariables() RuleVariablesPtrOutput {
	return o.ApplyT(func(v *RuleGroup) *RuleVariables {
		if v == nil {
			return nil
		}
		return v.RuleVariables
	}).(RuleVariablesPtrOutput)
}

// Property rulesSource
func (o RuleGroupPtrOutput) RulesSource() RulesSourcePtrOutput {
	return o.ApplyT(func(v *RuleGroup) *RulesSource {
		if v == nil {
			return nil
		}
		return v.RulesSource
	}).(RulesSourcePtrOutput)
}

// Property statefulRuleOptions
func (o RuleGroupPtrOutput) StatefulRuleOptions() StatefulRuleOptionsPtrOutput {
	return o.ApplyT(func(v *RuleGroup) *StatefulRuleOptions {
		if v == nil {
			return nil
		}
		return v.StatefulRuleOptions
	}).(StatefulRuleOptionsPtrOutput)
}

// Definition of RuleGroup
type RuleGroupResponse struct {
	// Property referenceSets
	ReferenceSets *ReferenceSetsResponse `pulumi:"referenceSets"`
	// Property ruleVariables
	RuleVariables *RuleVariablesResponse `pulumi:"ruleVariables"`
	// Property rulesSource
	RulesSource *RulesSourceResponse `pulumi:"rulesSource"`
	// Property statefulRuleOptions
	StatefulRuleOptions *StatefulRuleOptionsResponse `pulumi:"statefulRuleOptions"`
}

// Definition of RuleGroup
type RuleGroupResponseOutput struct{ *pulumi.OutputState }

func (RuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupResponse)(nil)).Elem()
}

func (o RuleGroupResponseOutput) ToRuleGroupResponseOutput() RuleGroupResponseOutput {
	return o
}

func (o RuleGroupResponseOutput) ToRuleGroupResponseOutputWithContext(ctx context.Context) RuleGroupResponseOutput {
	return o
}

// Property referenceSets
func (o RuleGroupResponseOutput) ReferenceSets() ReferenceSetsResponsePtrOutput {
	return o.ApplyT(func(v RuleGroupResponse) *ReferenceSetsResponse { return v.ReferenceSets }).(ReferenceSetsResponsePtrOutput)
}

// Property ruleVariables
func (o RuleGroupResponseOutput) RuleVariables() RuleVariablesResponsePtrOutput {
	return o.ApplyT(func(v RuleGroupResponse) *RuleVariablesResponse { return v.RuleVariables }).(RuleVariablesResponsePtrOutput)
}

// Property rulesSource
func (o RuleGroupResponseOutput) RulesSource() RulesSourceResponsePtrOutput {
	return o.ApplyT(func(v RuleGroupResponse) *RulesSourceResponse { return v.RulesSource }).(RulesSourceResponsePtrOutput)
}

// Property statefulRuleOptions
func (o RuleGroupResponseOutput) StatefulRuleOptions() StatefulRuleOptionsResponsePtrOutput {
	return o.ApplyT(func(v RuleGroupResponse) *StatefulRuleOptionsResponse { return v.StatefulRuleOptions }).(StatefulRuleOptionsResponsePtrOutput)
}

type RuleGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupResponse)(nil)).Elem()
}

func (o RuleGroupResponsePtrOutput) ToRuleGroupResponsePtrOutput() RuleGroupResponsePtrOutput {
	return o
}

func (o RuleGroupResponsePtrOutput) ToRuleGroupResponsePtrOutputWithContext(ctx context.Context) RuleGroupResponsePtrOutput {
	return o
}

func (o RuleGroupResponsePtrOutput) Elem() RuleGroupResponseOutput {
	return o.ApplyT(func(v *RuleGroupResponse) RuleGroupResponse {
		if v != nil {
			return *v
		}
		var ret RuleGroupResponse
		return ret
	}).(RuleGroupResponseOutput)
}

// Property referenceSets
func (o RuleGroupResponsePtrOutput) ReferenceSets() ReferenceSetsResponsePtrOutput {
	return o.ApplyT(func(v *RuleGroupResponse) *ReferenceSetsResponse {
		if v == nil {
			return nil
		}
		return v.ReferenceSets
	}).(ReferenceSetsResponsePtrOutput)
}

// Property ruleVariables
func (o RuleGroupResponsePtrOutput) RuleVariables() RuleVariablesResponsePtrOutput {
	return o.ApplyT(func(v *RuleGroupResponse) *RuleVariablesResponse {
		if v == nil {
			return nil
		}
		return v.RuleVariables
	}).(RuleVariablesResponsePtrOutput)
}

// Property rulesSource
func (o RuleGroupResponsePtrOutput) RulesSource() RulesSourceResponsePtrOutput {
	return o.ApplyT(func(v *RuleGroupResponse) *RulesSourceResponse {
		if v == nil {
			return nil
		}
		return v.RulesSource
	}).(RulesSourceResponsePtrOutput)
}

// Property statefulRuleOptions
func (o RuleGroupResponsePtrOutput) StatefulRuleOptions() StatefulRuleOptionsResponsePtrOutput {
	return o.ApplyT(func(v *RuleGroupResponse) *StatefulRuleOptionsResponse {
		if v == nil {
			return nil
		}
		return v.StatefulRuleOptions
	}).(StatefulRuleOptionsResponsePtrOutput)
}

// Definition of RuleOption
type RuleOption struct {
	// Property keyword
	Keyword *string `pulumi:"keyword"`
	// Property settings
	Settings []string `pulumi:"settings"`
}

// RuleOptionInput is an input type that accepts RuleOptionArgs and RuleOptionOutput values.
// You can construct a concrete instance of `RuleOptionInput` via:
//
//	RuleOptionArgs{...}
type RuleOptionInput interface {
	pulumi.Input

	ToRuleOptionOutput() RuleOptionOutput
	ToRuleOptionOutputWithContext(context.Context) RuleOptionOutput
}

// Definition of RuleOption
type RuleOptionArgs struct {
	// Property keyword
	Keyword pulumi.StringPtrInput `pulumi:"keyword"`
	// Property settings
	Settings pulumi.StringArrayInput `pulumi:"settings"`
}

func (RuleOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOption)(nil)).Elem()
}

func (i RuleOptionArgs) ToRuleOptionOutput() RuleOptionOutput {
	return i.ToRuleOptionOutputWithContext(context.Background())
}

func (i RuleOptionArgs) ToRuleOptionOutputWithContext(ctx context.Context) RuleOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOptionOutput)
}

// RuleOptionArrayInput is an input type that accepts RuleOptionArray and RuleOptionArrayOutput values.
// You can construct a concrete instance of `RuleOptionArrayInput` via:
//
//	RuleOptionArray{ RuleOptionArgs{...} }
type RuleOptionArrayInput interface {
	pulumi.Input

	ToRuleOptionArrayOutput() RuleOptionArrayOutput
	ToRuleOptionArrayOutputWithContext(context.Context) RuleOptionArrayOutput
}

type RuleOptionArray []RuleOptionInput

func (RuleOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOption)(nil)).Elem()
}

func (i RuleOptionArray) ToRuleOptionArrayOutput() RuleOptionArrayOutput {
	return i.ToRuleOptionArrayOutputWithContext(context.Background())
}

func (i RuleOptionArray) ToRuleOptionArrayOutputWithContext(ctx context.Context) RuleOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOptionArrayOutput)
}

// Definition of RuleOption
type RuleOptionOutput struct{ *pulumi.OutputState }

func (RuleOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOption)(nil)).Elem()
}

func (o RuleOptionOutput) ToRuleOptionOutput() RuleOptionOutput {
	return o
}

func (o RuleOptionOutput) ToRuleOptionOutputWithContext(ctx context.Context) RuleOptionOutput {
	return o
}

// Property keyword
func (o RuleOptionOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleOption) *string { return v.Keyword }).(pulumi.StringPtrOutput)
}

// Property settings
func (o RuleOptionOutput) Settings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleOption) []string { return v.Settings }).(pulumi.StringArrayOutput)
}

type RuleOptionArrayOutput struct{ *pulumi.OutputState }

func (RuleOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOption)(nil)).Elem()
}

func (o RuleOptionArrayOutput) ToRuleOptionArrayOutput() RuleOptionArrayOutput {
	return o
}

func (o RuleOptionArrayOutput) ToRuleOptionArrayOutputWithContext(ctx context.Context) RuleOptionArrayOutput {
	return o
}

func (o RuleOptionArrayOutput) Index(i pulumi.IntInput) RuleOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleOption {
		return vs[0].([]RuleOption)[vs[1].(int)]
	}).(RuleOptionOutput)
}

// Definition of RuleOption
type RuleOptionResponse struct {
	// Property keyword
	Keyword *string `pulumi:"keyword"`
	// Property settings
	Settings []string `pulumi:"settings"`
}

// Definition of RuleOption
type RuleOptionResponseOutput struct{ *pulumi.OutputState }

func (RuleOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOptionResponse)(nil)).Elem()
}

func (o RuleOptionResponseOutput) ToRuleOptionResponseOutput() RuleOptionResponseOutput {
	return o
}

func (o RuleOptionResponseOutput) ToRuleOptionResponseOutputWithContext(ctx context.Context) RuleOptionResponseOutput {
	return o
}

// Property keyword
func (o RuleOptionResponseOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleOptionResponse) *string { return v.Keyword }).(pulumi.StringPtrOutput)
}

// Property settings
func (o RuleOptionResponseOutput) Settings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleOptionResponse) []string { return v.Settings }).(pulumi.StringArrayOutput)
}

type RuleOptionResponseArrayOutput struct{ *pulumi.OutputState }

func (RuleOptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOptionResponse)(nil)).Elem()
}

func (o RuleOptionResponseArrayOutput) ToRuleOptionResponseArrayOutput() RuleOptionResponseArrayOutput {
	return o
}

func (o RuleOptionResponseArrayOutput) ToRuleOptionResponseArrayOutputWithContext(ctx context.Context) RuleOptionResponseArrayOutput {
	return o
}

func (o RuleOptionResponseArrayOutput) Index(i pulumi.IntInput) RuleOptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleOptionResponse {
		return vs[0].([]RuleOptionResponse)[vs[1].(int)]
	}).(RuleOptionResponseOutput)
}

// Definition of Rule
type RuleResponse struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket. Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
	AbortIncompleteMultipartUpload *AbortIncompleteMultipartUploadResponse `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
	ExpirationDate *string `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays *int `pulumi:"expirationInDays"`
	// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with ``ExpirationInDays``, ``ExpirationDate``, or ``TagFilters``.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id *string `pulumi:"id"`
	// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
	NoncurrentVersionExpiration *NoncurrentVersionExpirationResponse `pulumi:"noncurrentVersionExpiration"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
	NoncurrentVersionExpirationInDays *int `pulumi:"noncurrentVersionExpirationInDays"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property. Container for the transition rule that describes when noncurrent objects transition to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class at a specific period in the object's lifetime. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
	NoncurrentVersionTransition *NoncurrentVersionTransitionResponse `pulumi:"noncurrentVersionTransition"`
	// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransition`` property.
	NoncurrentVersionTransitions []NoncurrentVersionTransitionResponse `pulumi:"noncurrentVersionTransitions"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeGreaterThan *string `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeLessThan *string `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
	Status *string `pulumi:"status"`
	// Tags to use to identify a subset of objects to which the lifecycle rule applies.
	TagFilters []TagFilterResponse `pulumi:"tagFilters"`
	// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transitions`` property. Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
	Transition *TransitionResponse `pulumi:"transition"`
	// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transition`` property.
	Transitions []TransitionResponse `pulumi:"transitions"`
}

// Definition of Rule
type RuleResponseOutput struct{ *pulumi.OutputState }

func (RuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleResponse)(nil)).Elem()
}

func (o RuleResponseOutput) ToRuleResponseOutput() RuleResponseOutput {
	return o
}

func (o RuleResponseOutput) ToRuleResponseOutputWithContext(ctx context.Context) RuleResponseOutput {
	return o
}

// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket. Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
func (o RuleResponseOutput) AbortIncompleteMultipartUpload() AbortIncompleteMultipartUploadResponsePtrOutput {
	return o.ApplyT(func(v RuleResponse) *AbortIncompleteMultipartUploadResponse { return v.AbortIncompleteMultipartUpload }).(AbortIncompleteMultipartUploadResponsePtrOutput)
}

// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
func (o RuleResponseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleResponse) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
func (o RuleResponseOutput) ExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleResponse) *int { return v.ExpirationInDays }).(pulumi.IntPtrOutput)
}

// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with “ExpirationInDays“, “ExpirationDate“, or “TagFilters“.
func (o RuleResponseOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleResponse) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

// Unique identifier for the rule. The value can't be longer than 255 characters.
func (o RuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
func (o RuleResponseOutput) NoncurrentVersionExpiration() NoncurrentVersionExpirationResponsePtrOutput {
	return o.ApplyT(func(v RuleResponse) *NoncurrentVersionExpirationResponse { return v.NoncurrentVersionExpiration }).(NoncurrentVersionExpirationResponsePtrOutput)
}

// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
func (o RuleResponseOutput) NoncurrentVersionExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleResponse) *int { return v.NoncurrentVersionExpirationInDays }).(pulumi.IntPtrOutput)
}

// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property. Container for the transition rule that describes when noncurrent objects transition to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class at a specific period in the object's lifetime. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property.
func (o RuleResponseOutput) NoncurrentVersionTransition() NoncurrentVersionTransitionResponsePtrOutput {
	return o.ApplyT(func(v RuleResponse) *NoncurrentVersionTransitionResponse { return v.NoncurrentVersionTransition }).(NoncurrentVersionTransitionResponsePtrOutput)
}

// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the “NoncurrentVersionTransition“ property.
func (o RuleResponseOutput) NoncurrentVersionTransitions() NoncurrentVersionTransitionResponseArrayOutput {
	return o.ApplyT(func(v RuleResponse) []NoncurrentVersionTransitionResponse { return v.NoncurrentVersionTransitions }).(NoncurrentVersionTransitionResponseArrayOutput)
}

// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
func (o RuleResponseOutput) ObjectSizeGreaterThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleResponse) *string { return v.ObjectSizeGreaterThan }).(pulumi.StringPtrOutput)
}

// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
func (o RuleResponseOutput) ObjectSizeLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleResponse) *string { return v.ObjectSizeLessThan }).(pulumi.StringPtrOutput)
}

// Object key prefix that identifies one or more objects to which this rule applies.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o RuleResponseOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleResponse) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// If “Enabled“, the rule is currently being applied. If “Disabled“, the rule is not currently being applied.
func (o RuleResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tags to use to identify a subset of objects to which the lifecycle rule applies.
func (o RuleResponseOutput) TagFilters() TagFilterResponseArrayOutput {
	return o.ApplyT(func(v RuleResponse) []TagFilterResponse { return v.TagFilters }).(TagFilterResponseArrayOutput)
}

// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the “Transitions“ property. Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
func (o RuleResponseOutput) Transition() TransitionResponsePtrOutput {
	return o.ApplyT(func(v RuleResponse) *TransitionResponse { return v.Transition }).(TransitionResponsePtrOutput)
}

// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the “Transition“ property.
func (o RuleResponseOutput) Transitions() TransitionResponseArrayOutput {
	return o.ApplyT(func(v RuleResponse) []TransitionResponse { return v.Transitions }).(TransitionResponseArrayOutput)
}

type RuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleResponse)(nil)).Elem()
}

func (o RuleResponseArrayOutput) ToRuleResponseArrayOutput() RuleResponseArrayOutput {
	return o
}

func (o RuleResponseArrayOutput) ToRuleResponseArrayOutputWithContext(ctx context.Context) RuleResponseArrayOutput {
	return o
}

func (o RuleResponseArrayOutput) Index(i pulumi.IntInput) RuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleResponse {
		return vs[0].([]RuleResponse)[vs[1].(int)]
	}).(RuleResponseOutput)
}

// Definition of RuleVariables
type RuleVariables struct {
	// Property ipSets
	IpSets map[string]IPSet `pulumi:"ipSets"`
	// Property portSets
	PortSets map[string]PortSet `pulumi:"portSets"`
}

// RuleVariablesInput is an input type that accepts RuleVariablesArgs and RuleVariablesOutput values.
// You can construct a concrete instance of `RuleVariablesInput` via:
//
//	RuleVariablesArgs{...}
type RuleVariablesInput interface {
	pulumi.Input

	ToRuleVariablesOutput() RuleVariablesOutput
	ToRuleVariablesOutputWithContext(context.Context) RuleVariablesOutput
}

// Definition of RuleVariables
type RuleVariablesArgs struct {
	// Property ipSets
	IpSets IPSetMapInput `pulumi:"ipSets"`
	// Property portSets
	PortSets PortSetMapInput `pulumi:"portSets"`
}

func (RuleVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleVariables)(nil)).Elem()
}

func (i RuleVariablesArgs) ToRuleVariablesOutput() RuleVariablesOutput {
	return i.ToRuleVariablesOutputWithContext(context.Background())
}

func (i RuleVariablesArgs) ToRuleVariablesOutputWithContext(ctx context.Context) RuleVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleVariablesOutput)
}

func (i RuleVariablesArgs) ToRuleVariablesPtrOutput() RuleVariablesPtrOutput {
	return i.ToRuleVariablesPtrOutputWithContext(context.Background())
}

func (i RuleVariablesArgs) ToRuleVariablesPtrOutputWithContext(ctx context.Context) RuleVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleVariablesOutput).ToRuleVariablesPtrOutputWithContext(ctx)
}

// RuleVariablesPtrInput is an input type that accepts RuleVariablesArgs, RuleVariablesPtr and RuleVariablesPtrOutput values.
// You can construct a concrete instance of `RuleVariablesPtrInput` via:
//
//	        RuleVariablesArgs{...}
//
//	or:
//
//	        nil
type RuleVariablesPtrInput interface {
	pulumi.Input

	ToRuleVariablesPtrOutput() RuleVariablesPtrOutput
	ToRuleVariablesPtrOutputWithContext(context.Context) RuleVariablesPtrOutput
}

type ruleVariablesPtrType RuleVariablesArgs

func RuleVariablesPtr(v *RuleVariablesArgs) RuleVariablesPtrInput {
	return (*ruleVariablesPtrType)(v)
}

func (*ruleVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleVariables)(nil)).Elem()
}

func (i *ruleVariablesPtrType) ToRuleVariablesPtrOutput() RuleVariablesPtrOutput {
	return i.ToRuleVariablesPtrOutputWithContext(context.Background())
}

func (i *ruleVariablesPtrType) ToRuleVariablesPtrOutputWithContext(ctx context.Context) RuleVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleVariablesPtrOutput)
}

// Definition of RuleVariables
type RuleVariablesOutput struct{ *pulumi.OutputState }

func (RuleVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleVariables)(nil)).Elem()
}

func (o RuleVariablesOutput) ToRuleVariablesOutput() RuleVariablesOutput {
	return o
}

func (o RuleVariablesOutput) ToRuleVariablesOutputWithContext(ctx context.Context) RuleVariablesOutput {
	return o
}

func (o RuleVariablesOutput) ToRuleVariablesPtrOutput() RuleVariablesPtrOutput {
	return o.ToRuleVariablesPtrOutputWithContext(context.Background())
}

func (o RuleVariablesOutput) ToRuleVariablesPtrOutputWithContext(ctx context.Context) RuleVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleVariables) *RuleVariables {
		return &v
	}).(RuleVariablesPtrOutput)
}

// Property ipSets
func (o RuleVariablesOutput) IpSets() IPSetMapOutput {
	return o.ApplyT(func(v RuleVariables) map[string]IPSet { return v.IpSets }).(IPSetMapOutput)
}

// Property portSets
func (o RuleVariablesOutput) PortSets() PortSetMapOutput {
	return o.ApplyT(func(v RuleVariables) map[string]PortSet { return v.PortSets }).(PortSetMapOutput)
}

type RuleVariablesPtrOutput struct{ *pulumi.OutputState }

func (RuleVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleVariables)(nil)).Elem()
}

func (o RuleVariablesPtrOutput) ToRuleVariablesPtrOutput() RuleVariablesPtrOutput {
	return o
}

func (o RuleVariablesPtrOutput) ToRuleVariablesPtrOutputWithContext(ctx context.Context) RuleVariablesPtrOutput {
	return o
}

func (o RuleVariablesPtrOutput) Elem() RuleVariablesOutput {
	return o.ApplyT(func(v *RuleVariables) RuleVariables {
		if v != nil {
			return *v
		}
		var ret RuleVariables
		return ret
	}).(RuleVariablesOutput)
}

// Property ipSets
func (o RuleVariablesPtrOutput) IpSets() IPSetMapOutput {
	return o.ApplyT(func(v *RuleVariables) map[string]IPSet {
		if v == nil {
			return nil
		}
		return v.IpSets
	}).(IPSetMapOutput)
}

// Property portSets
func (o RuleVariablesPtrOutput) PortSets() PortSetMapOutput {
	return o.ApplyT(func(v *RuleVariables) map[string]PortSet {
		if v == nil {
			return nil
		}
		return v.PortSets
	}).(PortSetMapOutput)
}

// Definition of RuleVariables
type RuleVariablesModel struct {
	// Property ruleVariables
	RuleVariables map[string]IPSet `pulumi:"ruleVariables"`
}

// RuleVariablesModelInput is an input type that accepts RuleVariablesModelArgs and RuleVariablesModelOutput values.
// You can construct a concrete instance of `RuleVariablesModelInput` via:
//
//	RuleVariablesModelArgs{...}
type RuleVariablesModelInput interface {
	pulumi.Input

	ToRuleVariablesModelOutput() RuleVariablesModelOutput
	ToRuleVariablesModelOutputWithContext(context.Context) RuleVariablesModelOutput
}

// Definition of RuleVariables
type RuleVariablesModelArgs struct {
	// Property ruleVariables
	RuleVariables IPSetMapInput `pulumi:"ruleVariables"`
}

func (RuleVariablesModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleVariablesModel)(nil)).Elem()
}

func (i RuleVariablesModelArgs) ToRuleVariablesModelOutput() RuleVariablesModelOutput {
	return i.ToRuleVariablesModelOutputWithContext(context.Background())
}

func (i RuleVariablesModelArgs) ToRuleVariablesModelOutputWithContext(ctx context.Context) RuleVariablesModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleVariablesModelOutput)
}

func (i RuleVariablesModelArgs) ToRuleVariablesModelPtrOutput() RuleVariablesModelPtrOutput {
	return i.ToRuleVariablesModelPtrOutputWithContext(context.Background())
}

func (i RuleVariablesModelArgs) ToRuleVariablesModelPtrOutputWithContext(ctx context.Context) RuleVariablesModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleVariablesModelOutput).ToRuleVariablesModelPtrOutputWithContext(ctx)
}

// RuleVariablesModelPtrInput is an input type that accepts RuleVariablesModelArgs, RuleVariablesModelPtr and RuleVariablesModelPtrOutput values.
// You can construct a concrete instance of `RuleVariablesModelPtrInput` via:
//
//	        RuleVariablesModelArgs{...}
//
//	or:
//
//	        nil
type RuleVariablesModelPtrInput interface {
	pulumi.Input

	ToRuleVariablesModelPtrOutput() RuleVariablesModelPtrOutput
	ToRuleVariablesModelPtrOutputWithContext(context.Context) RuleVariablesModelPtrOutput
}

type ruleVariablesModelPtrType RuleVariablesModelArgs

func RuleVariablesModelPtr(v *RuleVariablesModelArgs) RuleVariablesModelPtrInput {
	return (*ruleVariablesModelPtrType)(v)
}

func (*ruleVariablesModelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleVariablesModel)(nil)).Elem()
}

func (i *ruleVariablesModelPtrType) ToRuleVariablesModelPtrOutput() RuleVariablesModelPtrOutput {
	return i.ToRuleVariablesModelPtrOutputWithContext(context.Background())
}

func (i *ruleVariablesModelPtrType) ToRuleVariablesModelPtrOutputWithContext(ctx context.Context) RuleVariablesModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleVariablesModelPtrOutput)
}

// Definition of RuleVariables
type RuleVariablesModelOutput struct{ *pulumi.OutputState }

func (RuleVariablesModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleVariablesModel)(nil)).Elem()
}

func (o RuleVariablesModelOutput) ToRuleVariablesModelOutput() RuleVariablesModelOutput {
	return o
}

func (o RuleVariablesModelOutput) ToRuleVariablesModelOutputWithContext(ctx context.Context) RuleVariablesModelOutput {
	return o
}

func (o RuleVariablesModelOutput) ToRuleVariablesModelPtrOutput() RuleVariablesModelPtrOutput {
	return o.ToRuleVariablesModelPtrOutputWithContext(context.Background())
}

func (o RuleVariablesModelOutput) ToRuleVariablesModelPtrOutputWithContext(ctx context.Context) RuleVariablesModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleVariablesModel) *RuleVariablesModel {
		return &v
	}).(RuleVariablesModelPtrOutput)
}

// Property ruleVariables
func (o RuleVariablesModelOutput) RuleVariables() IPSetMapOutput {
	return o.ApplyT(func(v RuleVariablesModel) map[string]IPSet { return v.RuleVariables }).(IPSetMapOutput)
}

type RuleVariablesModelPtrOutput struct{ *pulumi.OutputState }

func (RuleVariablesModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleVariablesModel)(nil)).Elem()
}

func (o RuleVariablesModelPtrOutput) ToRuleVariablesModelPtrOutput() RuleVariablesModelPtrOutput {
	return o
}

func (o RuleVariablesModelPtrOutput) ToRuleVariablesModelPtrOutputWithContext(ctx context.Context) RuleVariablesModelPtrOutput {
	return o
}

func (o RuleVariablesModelPtrOutput) Elem() RuleVariablesModelOutput {
	return o.ApplyT(func(v *RuleVariablesModel) RuleVariablesModel {
		if v != nil {
			return *v
		}
		var ret RuleVariablesModel
		return ret
	}).(RuleVariablesModelOutput)
}

// Property ruleVariables
func (o RuleVariablesModelPtrOutput) RuleVariables() IPSetMapOutput {
	return o.ApplyT(func(v *RuleVariablesModel) map[string]IPSet {
		if v == nil {
			return nil
		}
		return v.RuleVariables
	}).(IPSetMapOutput)
}

// Definition of RuleVariables
type RuleVariablesModelResponse struct {
	// Property ruleVariables
	RuleVariables map[string]IPSetResponse `pulumi:"ruleVariables"`
}

// Definition of RuleVariables
type RuleVariablesModelResponseOutput struct{ *pulumi.OutputState }

func (RuleVariablesModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleVariablesModelResponse)(nil)).Elem()
}

func (o RuleVariablesModelResponseOutput) ToRuleVariablesModelResponseOutput() RuleVariablesModelResponseOutput {
	return o
}

func (o RuleVariablesModelResponseOutput) ToRuleVariablesModelResponseOutputWithContext(ctx context.Context) RuleVariablesModelResponseOutput {
	return o
}

// Property ruleVariables
func (o RuleVariablesModelResponseOutput) RuleVariables() IPSetResponseMapOutput {
	return o.ApplyT(func(v RuleVariablesModelResponse) map[string]IPSetResponse { return v.RuleVariables }).(IPSetResponseMapOutput)
}

type RuleVariablesModelResponsePtrOutput struct{ *pulumi.OutputState }

func (RuleVariablesModelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleVariablesModelResponse)(nil)).Elem()
}

func (o RuleVariablesModelResponsePtrOutput) ToRuleVariablesModelResponsePtrOutput() RuleVariablesModelResponsePtrOutput {
	return o
}

func (o RuleVariablesModelResponsePtrOutput) ToRuleVariablesModelResponsePtrOutputWithContext(ctx context.Context) RuleVariablesModelResponsePtrOutput {
	return o
}

func (o RuleVariablesModelResponsePtrOutput) Elem() RuleVariablesModelResponseOutput {
	return o.ApplyT(func(v *RuleVariablesModelResponse) RuleVariablesModelResponse {
		if v != nil {
			return *v
		}
		var ret RuleVariablesModelResponse
		return ret
	}).(RuleVariablesModelResponseOutput)
}

// Property ruleVariables
func (o RuleVariablesModelResponsePtrOutput) RuleVariables() IPSetResponseMapOutput {
	return o.ApplyT(func(v *RuleVariablesModelResponse) map[string]IPSetResponse {
		if v == nil {
			return nil
		}
		return v.RuleVariables
	}).(IPSetResponseMapOutput)
}

// Definition of RuleVariables
type RuleVariablesResponse struct {
	// Property ipSets
	IpSets map[string]IPSetResponse `pulumi:"ipSets"`
	// Property portSets
	PortSets map[string]PortSetResponse `pulumi:"portSets"`
}

// Definition of RuleVariables
type RuleVariablesResponseOutput struct{ *pulumi.OutputState }

func (RuleVariablesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleVariablesResponse)(nil)).Elem()
}

func (o RuleVariablesResponseOutput) ToRuleVariablesResponseOutput() RuleVariablesResponseOutput {
	return o
}

func (o RuleVariablesResponseOutput) ToRuleVariablesResponseOutputWithContext(ctx context.Context) RuleVariablesResponseOutput {
	return o
}

// Property ipSets
func (o RuleVariablesResponseOutput) IpSets() IPSetResponseMapOutput {
	return o.ApplyT(func(v RuleVariablesResponse) map[string]IPSetResponse { return v.IpSets }).(IPSetResponseMapOutput)
}

// Property portSets
func (o RuleVariablesResponseOutput) PortSets() PortSetResponseMapOutput {
	return o.ApplyT(func(v RuleVariablesResponse) map[string]PortSetResponse { return v.PortSets }).(PortSetResponseMapOutput)
}

type RuleVariablesResponsePtrOutput struct{ *pulumi.OutputState }

func (RuleVariablesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleVariablesResponse)(nil)).Elem()
}

func (o RuleVariablesResponsePtrOutput) ToRuleVariablesResponsePtrOutput() RuleVariablesResponsePtrOutput {
	return o
}

func (o RuleVariablesResponsePtrOutput) ToRuleVariablesResponsePtrOutputWithContext(ctx context.Context) RuleVariablesResponsePtrOutput {
	return o
}

func (o RuleVariablesResponsePtrOutput) Elem() RuleVariablesResponseOutput {
	return o.ApplyT(func(v *RuleVariablesResponse) RuleVariablesResponse {
		if v != nil {
			return *v
		}
		var ret RuleVariablesResponse
		return ret
	}).(RuleVariablesResponseOutput)
}

// Property ipSets
func (o RuleVariablesResponsePtrOutput) IpSets() IPSetResponseMapOutput {
	return o.ApplyT(func(v *RuleVariablesResponse) map[string]IPSetResponse {
		if v == nil {
			return nil
		}
		return v.IpSets
	}).(IPSetResponseMapOutput)
}

// Property portSets
func (o RuleVariablesResponsePtrOutput) PortSets() PortSetResponseMapOutput {
	return o.ApplyT(func(v *RuleVariablesResponse) map[string]PortSetResponse {
		if v == nil {
			return nil
		}
		return v.PortSets
	}).(PortSetResponseMapOutput)
}

// Definition of RulesSource
type RulesSource struct {
	// Property rulesSourceList
	RulesSourceList *RulesSourceList `pulumi:"rulesSourceList"`
	// Property rulesString
	RulesString *string `pulumi:"rulesString"`
	// Property statefulRules
	StatefulRules []StatefulRule `pulumi:"statefulRules"`
	// Property statelessRulesAndCustomActions
	StatelessRulesAndCustomActions *StatelessRulesAndCustomActions `pulumi:"statelessRulesAndCustomActions"`
}

// RulesSourceInput is an input type that accepts RulesSourceArgs and RulesSourceOutput values.
// You can construct a concrete instance of `RulesSourceInput` via:
//
//	RulesSourceArgs{...}
type RulesSourceInput interface {
	pulumi.Input

	ToRulesSourceOutput() RulesSourceOutput
	ToRulesSourceOutputWithContext(context.Context) RulesSourceOutput
}

// Definition of RulesSource
type RulesSourceArgs struct {
	// Property rulesSourceList
	RulesSourceList RulesSourceListPtrInput `pulumi:"rulesSourceList"`
	// Property rulesString
	RulesString pulumi.StringPtrInput `pulumi:"rulesString"`
	// Property statefulRules
	StatefulRules StatefulRuleArrayInput `pulumi:"statefulRules"`
	// Property statelessRulesAndCustomActions
	StatelessRulesAndCustomActions StatelessRulesAndCustomActionsPtrInput `pulumi:"statelessRulesAndCustomActions"`
}

func (RulesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesSource)(nil)).Elem()
}

func (i RulesSourceArgs) ToRulesSourceOutput() RulesSourceOutput {
	return i.ToRulesSourceOutputWithContext(context.Background())
}

func (i RulesSourceArgs) ToRulesSourceOutputWithContext(ctx context.Context) RulesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesSourceOutput)
}

func (i RulesSourceArgs) ToRulesSourcePtrOutput() RulesSourcePtrOutput {
	return i.ToRulesSourcePtrOutputWithContext(context.Background())
}

func (i RulesSourceArgs) ToRulesSourcePtrOutputWithContext(ctx context.Context) RulesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesSourceOutput).ToRulesSourcePtrOutputWithContext(ctx)
}

// RulesSourcePtrInput is an input type that accepts RulesSourceArgs, RulesSourcePtr and RulesSourcePtrOutput values.
// You can construct a concrete instance of `RulesSourcePtrInput` via:
//
//	        RulesSourceArgs{...}
//
//	or:
//
//	        nil
type RulesSourcePtrInput interface {
	pulumi.Input

	ToRulesSourcePtrOutput() RulesSourcePtrOutput
	ToRulesSourcePtrOutputWithContext(context.Context) RulesSourcePtrOutput
}

type rulesSourcePtrType RulesSourceArgs

func RulesSourcePtr(v *RulesSourceArgs) RulesSourcePtrInput {
	return (*rulesSourcePtrType)(v)
}

func (*rulesSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesSource)(nil)).Elem()
}

func (i *rulesSourcePtrType) ToRulesSourcePtrOutput() RulesSourcePtrOutput {
	return i.ToRulesSourcePtrOutputWithContext(context.Background())
}

func (i *rulesSourcePtrType) ToRulesSourcePtrOutputWithContext(ctx context.Context) RulesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesSourcePtrOutput)
}

// Definition of RulesSource
type RulesSourceOutput struct{ *pulumi.OutputState }

func (RulesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesSource)(nil)).Elem()
}

func (o RulesSourceOutput) ToRulesSourceOutput() RulesSourceOutput {
	return o
}

func (o RulesSourceOutput) ToRulesSourceOutputWithContext(ctx context.Context) RulesSourceOutput {
	return o
}

func (o RulesSourceOutput) ToRulesSourcePtrOutput() RulesSourcePtrOutput {
	return o.ToRulesSourcePtrOutputWithContext(context.Background())
}

func (o RulesSourceOutput) ToRulesSourcePtrOutputWithContext(ctx context.Context) RulesSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesSource) *RulesSource {
		return &v
	}).(RulesSourcePtrOutput)
}

// Property rulesSourceList
func (o RulesSourceOutput) RulesSourceList() RulesSourceListPtrOutput {
	return o.ApplyT(func(v RulesSource) *RulesSourceList { return v.RulesSourceList }).(RulesSourceListPtrOutput)
}

// Property rulesString
func (o RulesSourceOutput) RulesString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesSource) *string { return v.RulesString }).(pulumi.StringPtrOutput)
}

// Property statefulRules
func (o RulesSourceOutput) StatefulRules() StatefulRuleArrayOutput {
	return o.ApplyT(func(v RulesSource) []StatefulRule { return v.StatefulRules }).(StatefulRuleArrayOutput)
}

// Property statelessRulesAndCustomActions
func (o RulesSourceOutput) StatelessRulesAndCustomActions() StatelessRulesAndCustomActionsPtrOutput {
	return o.ApplyT(func(v RulesSource) *StatelessRulesAndCustomActions { return v.StatelessRulesAndCustomActions }).(StatelessRulesAndCustomActionsPtrOutput)
}

type RulesSourcePtrOutput struct{ *pulumi.OutputState }

func (RulesSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesSource)(nil)).Elem()
}

func (o RulesSourcePtrOutput) ToRulesSourcePtrOutput() RulesSourcePtrOutput {
	return o
}

func (o RulesSourcePtrOutput) ToRulesSourcePtrOutputWithContext(ctx context.Context) RulesSourcePtrOutput {
	return o
}

func (o RulesSourcePtrOutput) Elem() RulesSourceOutput {
	return o.ApplyT(func(v *RulesSource) RulesSource {
		if v != nil {
			return *v
		}
		var ret RulesSource
		return ret
	}).(RulesSourceOutput)
}

// Property rulesSourceList
func (o RulesSourcePtrOutput) RulesSourceList() RulesSourceListPtrOutput {
	return o.ApplyT(func(v *RulesSource) *RulesSourceList {
		if v == nil {
			return nil
		}
		return v.RulesSourceList
	}).(RulesSourceListPtrOutput)
}

// Property rulesString
func (o RulesSourcePtrOutput) RulesString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesSource) *string {
		if v == nil {
			return nil
		}
		return v.RulesString
	}).(pulumi.StringPtrOutput)
}

// Property statefulRules
func (o RulesSourcePtrOutput) StatefulRules() StatefulRuleArrayOutput {
	return o.ApplyT(func(v *RulesSource) []StatefulRule {
		if v == nil {
			return nil
		}
		return v.StatefulRules
	}).(StatefulRuleArrayOutput)
}

// Property statelessRulesAndCustomActions
func (o RulesSourcePtrOutput) StatelessRulesAndCustomActions() StatelessRulesAndCustomActionsPtrOutput {
	return o.ApplyT(func(v *RulesSource) *StatelessRulesAndCustomActions {
		if v == nil {
			return nil
		}
		return v.StatelessRulesAndCustomActions
	}).(StatelessRulesAndCustomActionsPtrOutput)
}

// Definition of RulesSourceList
type RulesSourceList struct {
	// Property generatedRulesType
	GeneratedRulesType *string `pulumi:"generatedRulesType"`
	// Property targetTypes
	TargetTypes []string `pulumi:"targetTypes"`
	// Property targets
	Targets []string `pulumi:"targets"`
}

// RulesSourceListInput is an input type that accepts RulesSourceListArgs and RulesSourceListOutput values.
// You can construct a concrete instance of `RulesSourceListInput` via:
//
//	RulesSourceListArgs{...}
type RulesSourceListInput interface {
	pulumi.Input

	ToRulesSourceListOutput() RulesSourceListOutput
	ToRulesSourceListOutputWithContext(context.Context) RulesSourceListOutput
}

// Definition of RulesSourceList
type RulesSourceListArgs struct {
	// Property generatedRulesType
	GeneratedRulesType pulumi.StringPtrInput `pulumi:"generatedRulesType"`
	// Property targetTypes
	TargetTypes pulumi.StringArrayInput `pulumi:"targetTypes"`
	// Property targets
	Targets pulumi.StringArrayInput `pulumi:"targets"`
}

func (RulesSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesSourceList)(nil)).Elem()
}

func (i RulesSourceListArgs) ToRulesSourceListOutput() RulesSourceListOutput {
	return i.ToRulesSourceListOutputWithContext(context.Background())
}

func (i RulesSourceListArgs) ToRulesSourceListOutputWithContext(ctx context.Context) RulesSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesSourceListOutput)
}

func (i RulesSourceListArgs) ToRulesSourceListPtrOutput() RulesSourceListPtrOutput {
	return i.ToRulesSourceListPtrOutputWithContext(context.Background())
}

func (i RulesSourceListArgs) ToRulesSourceListPtrOutputWithContext(ctx context.Context) RulesSourceListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesSourceListOutput).ToRulesSourceListPtrOutputWithContext(ctx)
}

// RulesSourceListPtrInput is an input type that accepts RulesSourceListArgs, RulesSourceListPtr and RulesSourceListPtrOutput values.
// You can construct a concrete instance of `RulesSourceListPtrInput` via:
//
//	        RulesSourceListArgs{...}
//
//	or:
//
//	        nil
type RulesSourceListPtrInput interface {
	pulumi.Input

	ToRulesSourceListPtrOutput() RulesSourceListPtrOutput
	ToRulesSourceListPtrOutputWithContext(context.Context) RulesSourceListPtrOutput
}

type rulesSourceListPtrType RulesSourceListArgs

func RulesSourceListPtr(v *RulesSourceListArgs) RulesSourceListPtrInput {
	return (*rulesSourceListPtrType)(v)
}

func (*rulesSourceListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesSourceList)(nil)).Elem()
}

func (i *rulesSourceListPtrType) ToRulesSourceListPtrOutput() RulesSourceListPtrOutput {
	return i.ToRulesSourceListPtrOutputWithContext(context.Background())
}

func (i *rulesSourceListPtrType) ToRulesSourceListPtrOutputWithContext(ctx context.Context) RulesSourceListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesSourceListPtrOutput)
}

// Definition of RulesSourceList
type RulesSourceListOutput struct{ *pulumi.OutputState }

func (RulesSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesSourceList)(nil)).Elem()
}

func (o RulesSourceListOutput) ToRulesSourceListOutput() RulesSourceListOutput {
	return o
}

func (o RulesSourceListOutput) ToRulesSourceListOutputWithContext(ctx context.Context) RulesSourceListOutput {
	return o
}

func (o RulesSourceListOutput) ToRulesSourceListPtrOutput() RulesSourceListPtrOutput {
	return o.ToRulesSourceListPtrOutputWithContext(context.Background())
}

func (o RulesSourceListOutput) ToRulesSourceListPtrOutputWithContext(ctx context.Context) RulesSourceListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesSourceList) *RulesSourceList {
		return &v
	}).(RulesSourceListPtrOutput)
}

// Property generatedRulesType
func (o RulesSourceListOutput) GeneratedRulesType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesSourceList) *string { return v.GeneratedRulesType }).(pulumi.StringPtrOutput)
}

// Property targetTypes
func (o RulesSourceListOutput) TargetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesSourceList) []string { return v.TargetTypes }).(pulumi.StringArrayOutput)
}

// Property targets
func (o RulesSourceListOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesSourceList) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type RulesSourceListPtrOutput struct{ *pulumi.OutputState }

func (RulesSourceListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesSourceList)(nil)).Elem()
}

func (o RulesSourceListPtrOutput) ToRulesSourceListPtrOutput() RulesSourceListPtrOutput {
	return o
}

func (o RulesSourceListPtrOutput) ToRulesSourceListPtrOutputWithContext(ctx context.Context) RulesSourceListPtrOutput {
	return o
}

func (o RulesSourceListPtrOutput) Elem() RulesSourceListOutput {
	return o.ApplyT(func(v *RulesSourceList) RulesSourceList {
		if v != nil {
			return *v
		}
		var ret RulesSourceList
		return ret
	}).(RulesSourceListOutput)
}

// Property generatedRulesType
func (o RulesSourceListPtrOutput) GeneratedRulesType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesSourceList) *string {
		if v == nil {
			return nil
		}
		return v.GeneratedRulesType
	}).(pulumi.StringPtrOutput)
}

// Property targetTypes
func (o RulesSourceListPtrOutput) TargetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesSourceList) []string {
		if v == nil {
			return nil
		}
		return v.TargetTypes
	}).(pulumi.StringArrayOutput)
}

// Property targets
func (o RulesSourceListPtrOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesSourceList) []string {
		if v == nil {
			return nil
		}
		return v.Targets
	}).(pulumi.StringArrayOutput)
}

// Definition of RulesSourceList
type RulesSourceListResponse struct {
	// Property generatedRulesType
	GeneratedRulesType *string `pulumi:"generatedRulesType"`
	// Property targetTypes
	TargetTypes []string `pulumi:"targetTypes"`
	// Property targets
	Targets []string `pulumi:"targets"`
}

// Definition of RulesSourceList
type RulesSourceListResponseOutput struct{ *pulumi.OutputState }

func (RulesSourceListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesSourceListResponse)(nil)).Elem()
}

func (o RulesSourceListResponseOutput) ToRulesSourceListResponseOutput() RulesSourceListResponseOutput {
	return o
}

func (o RulesSourceListResponseOutput) ToRulesSourceListResponseOutputWithContext(ctx context.Context) RulesSourceListResponseOutput {
	return o
}

// Property generatedRulesType
func (o RulesSourceListResponseOutput) GeneratedRulesType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesSourceListResponse) *string { return v.GeneratedRulesType }).(pulumi.StringPtrOutput)
}

// Property targetTypes
func (o RulesSourceListResponseOutput) TargetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesSourceListResponse) []string { return v.TargetTypes }).(pulumi.StringArrayOutput)
}

// Property targets
func (o RulesSourceListResponseOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesSourceListResponse) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type RulesSourceListResponsePtrOutput struct{ *pulumi.OutputState }

func (RulesSourceListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesSourceListResponse)(nil)).Elem()
}

func (o RulesSourceListResponsePtrOutput) ToRulesSourceListResponsePtrOutput() RulesSourceListResponsePtrOutput {
	return o
}

func (o RulesSourceListResponsePtrOutput) ToRulesSourceListResponsePtrOutputWithContext(ctx context.Context) RulesSourceListResponsePtrOutput {
	return o
}

func (o RulesSourceListResponsePtrOutput) Elem() RulesSourceListResponseOutput {
	return o.ApplyT(func(v *RulesSourceListResponse) RulesSourceListResponse {
		if v != nil {
			return *v
		}
		var ret RulesSourceListResponse
		return ret
	}).(RulesSourceListResponseOutput)
}

// Property generatedRulesType
func (o RulesSourceListResponsePtrOutput) GeneratedRulesType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesSourceListResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeneratedRulesType
	}).(pulumi.StringPtrOutput)
}

// Property targetTypes
func (o RulesSourceListResponsePtrOutput) TargetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesSourceListResponse) []string {
		if v == nil {
			return nil
		}
		return v.TargetTypes
	}).(pulumi.StringArrayOutput)
}

// Property targets
func (o RulesSourceListResponsePtrOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RulesSourceListResponse) []string {
		if v == nil {
			return nil
		}
		return v.Targets
	}).(pulumi.StringArrayOutput)
}

// Definition of RulesSource
type RulesSourceResponse struct {
	// Property rulesSourceList
	RulesSourceList *RulesSourceListResponse `pulumi:"rulesSourceList"`
	// Property rulesString
	RulesString *string `pulumi:"rulesString"`
	// Property statefulRules
	StatefulRules []StatefulRuleResponse `pulumi:"statefulRules"`
	// Property statelessRulesAndCustomActions
	StatelessRulesAndCustomActions *StatelessRulesAndCustomActionsResponse `pulumi:"statelessRulesAndCustomActions"`
}

// Definition of RulesSource
type RulesSourceResponseOutput struct{ *pulumi.OutputState }

func (RulesSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesSourceResponse)(nil)).Elem()
}

func (o RulesSourceResponseOutput) ToRulesSourceResponseOutput() RulesSourceResponseOutput {
	return o
}

func (o RulesSourceResponseOutput) ToRulesSourceResponseOutputWithContext(ctx context.Context) RulesSourceResponseOutput {
	return o
}

// Property rulesSourceList
func (o RulesSourceResponseOutput) RulesSourceList() RulesSourceListResponsePtrOutput {
	return o.ApplyT(func(v RulesSourceResponse) *RulesSourceListResponse { return v.RulesSourceList }).(RulesSourceListResponsePtrOutput)
}

// Property rulesString
func (o RulesSourceResponseOutput) RulesString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesSourceResponse) *string { return v.RulesString }).(pulumi.StringPtrOutput)
}

// Property statefulRules
func (o RulesSourceResponseOutput) StatefulRules() StatefulRuleResponseArrayOutput {
	return o.ApplyT(func(v RulesSourceResponse) []StatefulRuleResponse { return v.StatefulRules }).(StatefulRuleResponseArrayOutput)
}

// Property statelessRulesAndCustomActions
func (o RulesSourceResponseOutput) StatelessRulesAndCustomActions() StatelessRulesAndCustomActionsResponsePtrOutput {
	return o.ApplyT(func(v RulesSourceResponse) *StatelessRulesAndCustomActionsResponse {
		return v.StatelessRulesAndCustomActions
	}).(StatelessRulesAndCustomActionsResponsePtrOutput)
}

type RulesSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (RulesSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesSourceResponse)(nil)).Elem()
}

func (o RulesSourceResponsePtrOutput) ToRulesSourceResponsePtrOutput() RulesSourceResponsePtrOutput {
	return o
}

func (o RulesSourceResponsePtrOutput) ToRulesSourceResponsePtrOutputWithContext(ctx context.Context) RulesSourceResponsePtrOutput {
	return o
}

func (o RulesSourceResponsePtrOutput) Elem() RulesSourceResponseOutput {
	return o.ApplyT(func(v *RulesSourceResponse) RulesSourceResponse {
		if v != nil {
			return *v
		}
		var ret RulesSourceResponse
		return ret
	}).(RulesSourceResponseOutput)
}

// Property rulesSourceList
func (o RulesSourceResponsePtrOutput) RulesSourceList() RulesSourceListResponsePtrOutput {
	return o.ApplyT(func(v *RulesSourceResponse) *RulesSourceListResponse {
		if v == nil {
			return nil
		}
		return v.RulesSourceList
	}).(RulesSourceListResponsePtrOutput)
}

// Property rulesString
func (o RulesSourceResponsePtrOutput) RulesString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.RulesString
	}).(pulumi.StringPtrOutput)
}

// Property statefulRules
func (o RulesSourceResponsePtrOutput) StatefulRules() StatefulRuleResponseArrayOutput {
	return o.ApplyT(func(v *RulesSourceResponse) []StatefulRuleResponse {
		if v == nil {
			return nil
		}
		return v.StatefulRules
	}).(StatefulRuleResponseArrayOutput)
}

// Property statelessRulesAndCustomActions
func (o RulesSourceResponsePtrOutput) StatelessRulesAndCustomActions() StatelessRulesAndCustomActionsResponsePtrOutput {
	return o.ApplyT(func(v *RulesSourceResponse) *StatelessRulesAndCustomActionsResponse {
		if v == nil {
			return nil
		}
		return v.StatelessRulesAndCustomActions
	}).(StatelessRulesAndCustomActionsResponsePtrOutput)
}

// Definition of RuntimeManagementConfig
type RuntimeManagementConfig struct {
	// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
	RuntimeVersionArn *string `pulumi:"runtimeVersionArn"`
	// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
	UpdateRuntimeOn *string `pulumi:"updateRuntimeOn"`
}

// RuntimeManagementConfigInput is an input type that accepts RuntimeManagementConfigArgs and RuntimeManagementConfigOutput values.
// You can construct a concrete instance of `RuntimeManagementConfigInput` via:
//
//	RuntimeManagementConfigArgs{...}
type RuntimeManagementConfigInput interface {
	pulumi.Input

	ToRuntimeManagementConfigOutput() RuntimeManagementConfigOutput
	ToRuntimeManagementConfigOutputWithContext(context.Context) RuntimeManagementConfigOutput
}

// Definition of RuntimeManagementConfig
type RuntimeManagementConfigArgs struct {
	// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
	RuntimeVersionArn pulumi.StringPtrInput `pulumi:"runtimeVersionArn"`
	// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
	UpdateRuntimeOn pulumi.StringPtrInput `pulumi:"updateRuntimeOn"`
}

func (RuntimeManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuntimeManagementConfig)(nil)).Elem()
}

func (i RuntimeManagementConfigArgs) ToRuntimeManagementConfigOutput() RuntimeManagementConfigOutput {
	return i.ToRuntimeManagementConfigOutputWithContext(context.Background())
}

func (i RuntimeManagementConfigArgs) ToRuntimeManagementConfigOutputWithContext(ctx context.Context) RuntimeManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeManagementConfigOutput)
}

func (i RuntimeManagementConfigArgs) ToRuntimeManagementConfigPtrOutput() RuntimeManagementConfigPtrOutput {
	return i.ToRuntimeManagementConfigPtrOutputWithContext(context.Background())
}

func (i RuntimeManagementConfigArgs) ToRuntimeManagementConfigPtrOutputWithContext(ctx context.Context) RuntimeManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeManagementConfigOutput).ToRuntimeManagementConfigPtrOutputWithContext(ctx)
}

// RuntimeManagementConfigPtrInput is an input type that accepts RuntimeManagementConfigArgs, RuntimeManagementConfigPtr and RuntimeManagementConfigPtrOutput values.
// You can construct a concrete instance of `RuntimeManagementConfigPtrInput` via:
//
//	        RuntimeManagementConfigArgs{...}
//
//	or:
//
//	        nil
type RuntimeManagementConfigPtrInput interface {
	pulumi.Input

	ToRuntimeManagementConfigPtrOutput() RuntimeManagementConfigPtrOutput
	ToRuntimeManagementConfigPtrOutputWithContext(context.Context) RuntimeManagementConfigPtrOutput
}

type runtimeManagementConfigPtrType RuntimeManagementConfigArgs

func RuntimeManagementConfigPtr(v *RuntimeManagementConfigArgs) RuntimeManagementConfigPtrInput {
	return (*runtimeManagementConfigPtrType)(v)
}

func (*runtimeManagementConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeManagementConfig)(nil)).Elem()
}

func (i *runtimeManagementConfigPtrType) ToRuntimeManagementConfigPtrOutput() RuntimeManagementConfigPtrOutput {
	return i.ToRuntimeManagementConfigPtrOutputWithContext(context.Background())
}

func (i *runtimeManagementConfigPtrType) ToRuntimeManagementConfigPtrOutputWithContext(ctx context.Context) RuntimeManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeManagementConfigPtrOutput)
}

// Definition of RuntimeManagementConfig
type RuntimeManagementConfigOutput struct{ *pulumi.OutputState }

func (RuntimeManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuntimeManagementConfig)(nil)).Elem()
}

func (o RuntimeManagementConfigOutput) ToRuntimeManagementConfigOutput() RuntimeManagementConfigOutput {
	return o
}

func (o RuntimeManagementConfigOutput) ToRuntimeManagementConfigOutputWithContext(ctx context.Context) RuntimeManagementConfigOutput {
	return o
}

func (o RuntimeManagementConfigOutput) ToRuntimeManagementConfigPtrOutput() RuntimeManagementConfigPtrOutput {
	return o.ToRuntimeManagementConfigPtrOutputWithContext(context.Background())
}

func (o RuntimeManagementConfigOutput) ToRuntimeManagementConfigPtrOutputWithContext(ctx context.Context) RuntimeManagementConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuntimeManagementConfig) *RuntimeManagementConfig {
		return &v
	}).(RuntimeManagementConfigPtrOutput)
}

// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
func (o RuntimeManagementConfigOutput) RuntimeVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimeManagementConfig) *string { return v.RuntimeVersionArn }).(pulumi.StringPtrOutput)
}

// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: “Auto“ | “FunctionUpdate“ | “Manual“
func (o RuntimeManagementConfigOutput) UpdateRuntimeOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimeManagementConfig) *string { return v.UpdateRuntimeOn }).(pulumi.StringPtrOutput)
}

type RuntimeManagementConfigPtrOutput struct{ *pulumi.OutputState }

func (RuntimeManagementConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeManagementConfig)(nil)).Elem()
}

func (o RuntimeManagementConfigPtrOutput) ToRuntimeManagementConfigPtrOutput() RuntimeManagementConfigPtrOutput {
	return o
}

func (o RuntimeManagementConfigPtrOutput) ToRuntimeManagementConfigPtrOutputWithContext(ctx context.Context) RuntimeManagementConfigPtrOutput {
	return o
}

func (o RuntimeManagementConfigPtrOutput) Elem() RuntimeManagementConfigOutput {
	return o.ApplyT(func(v *RuntimeManagementConfig) RuntimeManagementConfig {
		if v != nil {
			return *v
		}
		var ret RuntimeManagementConfig
		return ret
	}).(RuntimeManagementConfigOutput)
}

// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
func (o RuntimeManagementConfigPtrOutput) RuntimeVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimeManagementConfig) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersionArn
	}).(pulumi.StringPtrOutput)
}

// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: “Auto“ | “FunctionUpdate“ | “Manual“
func (o RuntimeManagementConfigPtrOutput) UpdateRuntimeOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimeManagementConfig) *string {
		if v == nil {
			return nil
		}
		return v.UpdateRuntimeOn
	}).(pulumi.StringPtrOutput)
}

// Definition of RuntimeManagementConfig
type RuntimeManagementConfigResponse struct {
	// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
	RuntimeVersionArn *string `pulumi:"runtimeVersionArn"`
	// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
	UpdateRuntimeOn *string `pulumi:"updateRuntimeOn"`
}

// Definition of RuntimeManagementConfig
type RuntimeManagementConfigResponseOutput struct{ *pulumi.OutputState }

func (RuntimeManagementConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuntimeManagementConfigResponse)(nil)).Elem()
}

func (o RuntimeManagementConfigResponseOutput) ToRuntimeManagementConfigResponseOutput() RuntimeManagementConfigResponseOutput {
	return o
}

func (o RuntimeManagementConfigResponseOutput) ToRuntimeManagementConfigResponseOutputWithContext(ctx context.Context) RuntimeManagementConfigResponseOutput {
	return o
}

// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
func (o RuntimeManagementConfigResponseOutput) RuntimeVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimeManagementConfigResponse) *string { return v.RuntimeVersionArn }).(pulumi.StringPtrOutput)
}

// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: “Auto“ | “FunctionUpdate“ | “Manual“
func (o RuntimeManagementConfigResponseOutput) UpdateRuntimeOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimeManagementConfigResponse) *string { return v.UpdateRuntimeOn }).(pulumi.StringPtrOutput)
}

type RuntimeManagementConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (RuntimeManagementConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeManagementConfigResponse)(nil)).Elem()
}

func (o RuntimeManagementConfigResponsePtrOutput) ToRuntimeManagementConfigResponsePtrOutput() RuntimeManagementConfigResponsePtrOutput {
	return o
}

func (o RuntimeManagementConfigResponsePtrOutput) ToRuntimeManagementConfigResponsePtrOutputWithContext(ctx context.Context) RuntimeManagementConfigResponsePtrOutput {
	return o
}

func (o RuntimeManagementConfigResponsePtrOutput) Elem() RuntimeManagementConfigResponseOutput {
	return o.ApplyT(func(v *RuntimeManagementConfigResponse) RuntimeManagementConfigResponse {
		if v != nil {
			return *v
		}
		var ret RuntimeManagementConfigResponse
		return ret
	}).(RuntimeManagementConfigResponseOutput)
}

// The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.
func (o RuntimeManagementConfigResponsePtrOutput) RuntimeVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimeManagementConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersionArn
	}).(pulumi.StringPtrOutput)
}

// Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: “Auto“ | “FunctionUpdate“ | “Manual“
func (o RuntimeManagementConfigResponsePtrOutput) UpdateRuntimeOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimeManagementConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateRuntimeOn
	}).(pulumi.StringPtrOutput)
}

// Definition of RuntimePlatform
type RuntimePlatform struct {
	// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to ``ARM64``. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
	CpuArchitecture *string `pulumi:"cpuArchitecture"`
	// The operating system.
	OperatingSystemFamily *string `pulumi:"operatingSystemFamily"`
}

// RuntimePlatformInput is an input type that accepts RuntimePlatformArgs and RuntimePlatformOutput values.
// You can construct a concrete instance of `RuntimePlatformInput` via:
//
//	RuntimePlatformArgs{...}
type RuntimePlatformInput interface {
	pulumi.Input

	ToRuntimePlatformOutput() RuntimePlatformOutput
	ToRuntimePlatformOutputWithContext(context.Context) RuntimePlatformOutput
}

// Definition of RuntimePlatform
type RuntimePlatformArgs struct {
	// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to ``ARM64``. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
	CpuArchitecture pulumi.StringPtrInput `pulumi:"cpuArchitecture"`
	// The operating system.
	OperatingSystemFamily pulumi.StringPtrInput `pulumi:"operatingSystemFamily"`
}

func (RuntimePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuntimePlatform)(nil)).Elem()
}

func (i RuntimePlatformArgs) ToRuntimePlatformOutput() RuntimePlatformOutput {
	return i.ToRuntimePlatformOutputWithContext(context.Background())
}

func (i RuntimePlatformArgs) ToRuntimePlatformOutputWithContext(ctx context.Context) RuntimePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimePlatformOutput)
}

func (i RuntimePlatformArgs) ToRuntimePlatformPtrOutput() RuntimePlatformPtrOutput {
	return i.ToRuntimePlatformPtrOutputWithContext(context.Background())
}

func (i RuntimePlatformArgs) ToRuntimePlatformPtrOutputWithContext(ctx context.Context) RuntimePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimePlatformOutput).ToRuntimePlatformPtrOutputWithContext(ctx)
}

// RuntimePlatformPtrInput is an input type that accepts RuntimePlatformArgs, RuntimePlatformPtr and RuntimePlatformPtrOutput values.
// You can construct a concrete instance of `RuntimePlatformPtrInput` via:
//
//	        RuntimePlatformArgs{...}
//
//	or:
//
//	        nil
type RuntimePlatformPtrInput interface {
	pulumi.Input

	ToRuntimePlatformPtrOutput() RuntimePlatformPtrOutput
	ToRuntimePlatformPtrOutputWithContext(context.Context) RuntimePlatformPtrOutput
}

type runtimePlatformPtrType RuntimePlatformArgs

func RuntimePlatformPtr(v *RuntimePlatformArgs) RuntimePlatformPtrInput {
	return (*runtimePlatformPtrType)(v)
}

func (*runtimePlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimePlatform)(nil)).Elem()
}

func (i *runtimePlatformPtrType) ToRuntimePlatformPtrOutput() RuntimePlatformPtrOutput {
	return i.ToRuntimePlatformPtrOutputWithContext(context.Background())
}

func (i *runtimePlatformPtrType) ToRuntimePlatformPtrOutputWithContext(ctx context.Context) RuntimePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimePlatformPtrOutput)
}

// Definition of RuntimePlatform
type RuntimePlatformOutput struct{ *pulumi.OutputState }

func (RuntimePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuntimePlatform)(nil)).Elem()
}

func (o RuntimePlatformOutput) ToRuntimePlatformOutput() RuntimePlatformOutput {
	return o
}

func (o RuntimePlatformOutput) ToRuntimePlatformOutputWithContext(ctx context.Context) RuntimePlatformOutput {
	return o
}

func (o RuntimePlatformOutput) ToRuntimePlatformPtrOutput() RuntimePlatformPtrOutput {
	return o.ToRuntimePlatformPtrOutputWithContext(context.Background())
}

func (o RuntimePlatformOutput) ToRuntimePlatformPtrOutputWithContext(ctx context.Context) RuntimePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuntimePlatform) *RuntimePlatform {
		return &v
	}).(RuntimePlatformPtrOutput)
}

// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to “ARM64“. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
func (o RuntimePlatformOutput) CpuArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimePlatform) *string { return v.CpuArchitecture }).(pulumi.StringPtrOutput)
}

// The operating system.
func (o RuntimePlatformOutput) OperatingSystemFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimePlatform) *string { return v.OperatingSystemFamily }).(pulumi.StringPtrOutput)
}

type RuntimePlatformPtrOutput struct{ *pulumi.OutputState }

func (RuntimePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimePlatform)(nil)).Elem()
}

func (o RuntimePlatformPtrOutput) ToRuntimePlatformPtrOutput() RuntimePlatformPtrOutput {
	return o
}

func (o RuntimePlatformPtrOutput) ToRuntimePlatformPtrOutputWithContext(ctx context.Context) RuntimePlatformPtrOutput {
	return o
}

func (o RuntimePlatformPtrOutput) Elem() RuntimePlatformOutput {
	return o.ApplyT(func(v *RuntimePlatform) RuntimePlatform {
		if v != nil {
			return *v
		}
		var ret RuntimePlatform
		return ret
	}).(RuntimePlatformOutput)
}

// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to “ARM64“. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
func (o RuntimePlatformPtrOutput) CpuArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimePlatform) *string {
		if v == nil {
			return nil
		}
		return v.CpuArchitecture
	}).(pulumi.StringPtrOutput)
}

// The operating system.
func (o RuntimePlatformPtrOutput) OperatingSystemFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimePlatform) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemFamily
	}).(pulumi.StringPtrOutput)
}

// Definition of RuntimePlatform
type RuntimePlatformResponse struct {
	// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to ``ARM64``. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
	CpuArchitecture *string `pulumi:"cpuArchitecture"`
	// The operating system.
	OperatingSystemFamily *string `pulumi:"operatingSystemFamily"`
}

// Definition of RuntimePlatform
type RuntimePlatformResponseOutput struct{ *pulumi.OutputState }

func (RuntimePlatformResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuntimePlatformResponse)(nil)).Elem()
}

func (o RuntimePlatformResponseOutput) ToRuntimePlatformResponseOutput() RuntimePlatformResponseOutput {
	return o
}

func (o RuntimePlatformResponseOutput) ToRuntimePlatformResponseOutputWithContext(ctx context.Context) RuntimePlatformResponseOutput {
	return o
}

// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to “ARM64“. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
func (o RuntimePlatformResponseOutput) CpuArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimePlatformResponse) *string { return v.CpuArchitecture }).(pulumi.StringPtrOutput)
}

// The operating system.
func (o RuntimePlatformResponseOutput) OperatingSystemFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuntimePlatformResponse) *string { return v.OperatingSystemFamily }).(pulumi.StringPtrOutput)
}

type RuntimePlatformResponsePtrOutput struct{ *pulumi.OutputState }

func (RuntimePlatformResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimePlatformResponse)(nil)).Elem()
}

func (o RuntimePlatformResponsePtrOutput) ToRuntimePlatformResponsePtrOutput() RuntimePlatformResponsePtrOutput {
	return o
}

func (o RuntimePlatformResponsePtrOutput) ToRuntimePlatformResponsePtrOutputWithContext(ctx context.Context) RuntimePlatformResponsePtrOutput {
	return o
}

func (o RuntimePlatformResponsePtrOutput) Elem() RuntimePlatformResponseOutput {
	return o.ApplyT(func(v *RuntimePlatformResponse) RuntimePlatformResponse {
		if v != nil {
			return *v
		}
		var ret RuntimePlatformResponse
		return ret
	}).(RuntimePlatformResponseOutput)
}

// The CPU architecture. You can run your Linux tasks on an ARM-based platform by setting the value to “ARM64“. This option is available for tasks that run on Linux Amazon EC2 instance or Linux containers on Fargate.
func (o RuntimePlatformResponsePtrOutput) CpuArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimePlatformResponse) *string {
		if v == nil {
			return nil
		}
		return v.CpuArchitecture
	}).(pulumi.StringPtrOutput)
}

// The operating system.
func (o RuntimePlatformResponsePtrOutput) OperatingSystemFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimePlatformResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemFamily
	}).(pulumi.StringPtrOutput)
}

// Definition of S3AccessControlPolicy
type S3AccessControlPolicyProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3AccessControlPolicyProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// S3AccessControlPolicyPropertiesInput is an input type that accepts S3AccessControlPolicyPropertiesArgs and S3AccessControlPolicyPropertiesOutput values.
// You can construct a concrete instance of `S3AccessControlPolicyPropertiesInput` via:
//
//	S3AccessControlPolicyPropertiesArgs{...}
type S3AccessControlPolicyPropertiesInput interface {
	pulumi.Input

	ToS3AccessControlPolicyPropertiesOutput() S3AccessControlPolicyPropertiesOutput
	ToS3AccessControlPolicyPropertiesOutputWithContext(context.Context) S3AccessControlPolicyPropertiesOutput
}

// Definition of S3AccessControlPolicy
type S3AccessControlPolicyPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsS3AccessControlPolicyPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (S3AccessControlPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AccessControlPolicyProperties)(nil)).Elem()
}

func (i S3AccessControlPolicyPropertiesArgs) ToS3AccessControlPolicyPropertiesOutput() S3AccessControlPolicyPropertiesOutput {
	return i.ToS3AccessControlPolicyPropertiesOutputWithContext(context.Background())
}

func (i S3AccessControlPolicyPropertiesArgs) ToS3AccessControlPolicyPropertiesOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessControlPolicyPropertiesOutput)
}

func (i S3AccessControlPolicyPropertiesArgs) ToS3AccessControlPolicyPropertiesPtrOutput() S3AccessControlPolicyPropertiesPtrOutput {
	return i.ToS3AccessControlPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i S3AccessControlPolicyPropertiesArgs) ToS3AccessControlPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessControlPolicyPropertiesOutput).ToS3AccessControlPolicyPropertiesPtrOutputWithContext(ctx)
}

// S3AccessControlPolicyPropertiesPtrInput is an input type that accepts S3AccessControlPolicyPropertiesArgs, S3AccessControlPolicyPropertiesPtr and S3AccessControlPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `S3AccessControlPolicyPropertiesPtrInput` via:
//
//	        S3AccessControlPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type S3AccessControlPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToS3AccessControlPolicyPropertiesPtrOutput() S3AccessControlPolicyPropertiesPtrOutput
	ToS3AccessControlPolicyPropertiesPtrOutputWithContext(context.Context) S3AccessControlPolicyPropertiesPtrOutput
}

type s3accessControlPolicyPropertiesPtrType S3AccessControlPolicyPropertiesArgs

func S3AccessControlPolicyPropertiesPtr(v *S3AccessControlPolicyPropertiesArgs) S3AccessControlPolicyPropertiesPtrInput {
	return (*s3accessControlPolicyPropertiesPtrType)(v)
}

func (*s3accessControlPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AccessControlPolicyProperties)(nil)).Elem()
}

func (i *s3accessControlPolicyPropertiesPtrType) ToS3AccessControlPolicyPropertiesPtrOutput() S3AccessControlPolicyPropertiesPtrOutput {
	return i.ToS3AccessControlPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *s3accessControlPolicyPropertiesPtrType) ToS3AccessControlPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessControlPolicyPropertiesPtrOutput)
}

// Definition of S3AccessControlPolicy
type S3AccessControlPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (S3AccessControlPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AccessControlPolicyProperties)(nil)).Elem()
}

func (o S3AccessControlPolicyPropertiesOutput) ToS3AccessControlPolicyPropertiesOutput() S3AccessControlPolicyPropertiesOutput {
	return o
}

func (o S3AccessControlPolicyPropertiesOutput) ToS3AccessControlPolicyPropertiesOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesOutput {
	return o
}

func (o S3AccessControlPolicyPropertiesOutput) ToS3AccessControlPolicyPropertiesPtrOutput() S3AccessControlPolicyPropertiesPtrOutput {
	return o.ToS3AccessControlPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o S3AccessControlPolicyPropertiesOutput) ToS3AccessControlPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3AccessControlPolicyProperties) *S3AccessControlPolicyProperties {
		return &v
	}).(S3AccessControlPolicyPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o S3AccessControlPolicyPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3AccessControlPolicyPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3AccessControlPolicyPropertiesOutput) AwsProperties() AwsS3AccessControlPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *AwsS3AccessControlPolicyProperties { return v.AwsProperties }).(AwsS3AccessControlPolicyPropertiesPtrOutput)
}

// AWS Region
func (o S3AccessControlPolicyPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3AccessControlPolicyPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3AccessControlPolicyPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3AccessControlPolicyPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3AccessControlPolicyPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type S3AccessControlPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (S3AccessControlPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AccessControlPolicyProperties)(nil)).Elem()
}

func (o S3AccessControlPolicyPropertiesPtrOutput) ToS3AccessControlPolicyPropertiesPtrOutput() S3AccessControlPolicyPropertiesPtrOutput {
	return o
}

func (o S3AccessControlPolicyPropertiesPtrOutput) ToS3AccessControlPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesPtrOutput {
	return o
}

func (o S3AccessControlPolicyPropertiesPtrOutput) Elem() S3AccessControlPolicyPropertiesOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) S3AccessControlPolicyProperties {
		if v != nil {
			return *v
		}
		var ret S3AccessControlPolicyProperties
		return ret
	}).(S3AccessControlPolicyPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o S3AccessControlPolicyPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3AccessControlPolicyPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3AccessControlPolicyPropertiesPtrOutput) AwsProperties() AwsS3AccessControlPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *AwsS3AccessControlPolicyProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsS3AccessControlPolicyPropertiesPtrOutput)
}

// AWS Region
func (o S3AccessControlPolicyPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3AccessControlPolicyPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3AccessControlPolicyPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3AccessControlPolicyPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3AccessControlPolicyPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessControlPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of S3AccessControlPolicy
type S3AccessControlPolicyPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3AccessControlPolicyPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of S3AccessControlPolicy
type S3AccessControlPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (S3AccessControlPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AccessControlPolicyPropertiesResponse)(nil)).Elem()
}

func (o S3AccessControlPolicyPropertiesResponseOutput) ToS3AccessControlPolicyPropertiesResponseOutput() S3AccessControlPolicyPropertiesResponseOutput {
	return o
}

func (o S3AccessControlPolicyPropertiesResponseOutput) ToS3AccessControlPolicyPropertiesResponseOutputWithContext(ctx context.Context) S3AccessControlPolicyPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o S3AccessControlPolicyPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3AccessControlPolicyPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3AccessControlPolicyPropertiesResponseOutput) AwsProperties() AwsS3AccessControlPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *AwsS3AccessControlPolicyPropertiesResponse {
		return v.AwsProperties
	}).(AwsS3AccessControlPolicyPropertiesResponsePtrOutput)
}

// AWS Region
func (o S3AccessControlPolicyPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3AccessControlPolicyPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3AccessControlPolicyPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o S3AccessControlPolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o S3AccessControlPolicyPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3AccessControlPolicyPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessControlPolicyPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of S3AccessPoint
type S3AccessPointProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3AccessPointProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// S3AccessPointPropertiesInput is an input type that accepts S3AccessPointPropertiesArgs and S3AccessPointPropertiesOutput values.
// You can construct a concrete instance of `S3AccessPointPropertiesInput` via:
//
//	S3AccessPointPropertiesArgs{...}
type S3AccessPointPropertiesInput interface {
	pulumi.Input

	ToS3AccessPointPropertiesOutput() S3AccessPointPropertiesOutput
	ToS3AccessPointPropertiesOutputWithContext(context.Context) S3AccessPointPropertiesOutput
}

// Definition of S3AccessPoint
type S3AccessPointPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsS3AccessPointPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (S3AccessPointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AccessPointProperties)(nil)).Elem()
}

func (i S3AccessPointPropertiesArgs) ToS3AccessPointPropertiesOutput() S3AccessPointPropertiesOutput {
	return i.ToS3AccessPointPropertiesOutputWithContext(context.Background())
}

func (i S3AccessPointPropertiesArgs) ToS3AccessPointPropertiesOutputWithContext(ctx context.Context) S3AccessPointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessPointPropertiesOutput)
}

func (i S3AccessPointPropertiesArgs) ToS3AccessPointPropertiesPtrOutput() S3AccessPointPropertiesPtrOutput {
	return i.ToS3AccessPointPropertiesPtrOutputWithContext(context.Background())
}

func (i S3AccessPointPropertiesArgs) ToS3AccessPointPropertiesPtrOutputWithContext(ctx context.Context) S3AccessPointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessPointPropertiesOutput).ToS3AccessPointPropertiesPtrOutputWithContext(ctx)
}

// S3AccessPointPropertiesPtrInput is an input type that accepts S3AccessPointPropertiesArgs, S3AccessPointPropertiesPtr and S3AccessPointPropertiesPtrOutput values.
// You can construct a concrete instance of `S3AccessPointPropertiesPtrInput` via:
//
//	        S3AccessPointPropertiesArgs{...}
//
//	or:
//
//	        nil
type S3AccessPointPropertiesPtrInput interface {
	pulumi.Input

	ToS3AccessPointPropertiesPtrOutput() S3AccessPointPropertiesPtrOutput
	ToS3AccessPointPropertiesPtrOutputWithContext(context.Context) S3AccessPointPropertiesPtrOutput
}

type s3accessPointPropertiesPtrType S3AccessPointPropertiesArgs

func S3AccessPointPropertiesPtr(v *S3AccessPointPropertiesArgs) S3AccessPointPropertiesPtrInput {
	return (*s3accessPointPropertiesPtrType)(v)
}

func (*s3accessPointPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AccessPointProperties)(nil)).Elem()
}

func (i *s3accessPointPropertiesPtrType) ToS3AccessPointPropertiesPtrOutput() S3AccessPointPropertiesPtrOutput {
	return i.ToS3AccessPointPropertiesPtrOutputWithContext(context.Background())
}

func (i *s3accessPointPropertiesPtrType) ToS3AccessPointPropertiesPtrOutputWithContext(ctx context.Context) S3AccessPointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessPointPropertiesPtrOutput)
}

// Definition of S3AccessPoint
type S3AccessPointPropertiesOutput struct{ *pulumi.OutputState }

func (S3AccessPointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AccessPointProperties)(nil)).Elem()
}

func (o S3AccessPointPropertiesOutput) ToS3AccessPointPropertiesOutput() S3AccessPointPropertiesOutput {
	return o
}

func (o S3AccessPointPropertiesOutput) ToS3AccessPointPropertiesOutputWithContext(ctx context.Context) S3AccessPointPropertiesOutput {
	return o
}

func (o S3AccessPointPropertiesOutput) ToS3AccessPointPropertiesPtrOutput() S3AccessPointPropertiesPtrOutput {
	return o.ToS3AccessPointPropertiesPtrOutputWithContext(context.Background())
}

func (o S3AccessPointPropertiesOutput) ToS3AccessPointPropertiesPtrOutputWithContext(ctx context.Context) S3AccessPointPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3AccessPointProperties) *S3AccessPointProperties {
		return &v
	}).(S3AccessPointPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o S3AccessPointPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3AccessPointPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3AccessPointPropertiesOutput) AwsProperties() AwsS3AccessPointPropertiesPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *AwsS3AccessPointProperties { return v.AwsProperties }).(AwsS3AccessPointPropertiesPtrOutput)
}

// AWS Region
func (o S3AccessPointPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3AccessPointPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3AccessPointPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3AccessPointProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3AccessPointPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3AccessPointPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type S3AccessPointPropertiesPtrOutput struct{ *pulumi.OutputState }

func (S3AccessPointPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AccessPointProperties)(nil)).Elem()
}

func (o S3AccessPointPropertiesPtrOutput) ToS3AccessPointPropertiesPtrOutput() S3AccessPointPropertiesPtrOutput {
	return o
}

func (o S3AccessPointPropertiesPtrOutput) ToS3AccessPointPropertiesPtrOutputWithContext(ctx context.Context) S3AccessPointPropertiesPtrOutput {
	return o
}

func (o S3AccessPointPropertiesPtrOutput) Elem() S3AccessPointPropertiesOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) S3AccessPointProperties {
		if v != nil {
			return *v
		}
		var ret S3AccessPointProperties
		return ret
	}).(S3AccessPointPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o S3AccessPointPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3AccessPointPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3AccessPointPropertiesPtrOutput) AwsProperties() AwsS3AccessPointPropertiesPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *AwsS3AccessPointProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsS3AccessPointPropertiesPtrOutput)
}

// AWS Region
func (o S3AccessPointPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3AccessPointPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3AccessPointPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3AccessPointPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3AccessPointPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AccessPointProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of S3AccessPoint
type S3AccessPointPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3AccessPointPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of S3AccessPoint
type S3AccessPointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (S3AccessPointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AccessPointPropertiesResponse)(nil)).Elem()
}

func (o S3AccessPointPropertiesResponseOutput) ToS3AccessPointPropertiesResponseOutput() S3AccessPointPropertiesResponseOutput {
	return o
}

func (o S3AccessPointPropertiesResponseOutput) ToS3AccessPointPropertiesResponseOutputWithContext(ctx context.Context) S3AccessPointPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o S3AccessPointPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3AccessPointPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3AccessPointPropertiesResponseOutput) AwsProperties() AwsS3AccessPointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *AwsS3AccessPointPropertiesResponse { return v.AwsProperties }).(AwsS3AccessPointPropertiesResponsePtrOutput)
}

// AWS Region
func (o S3AccessPointPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3AccessPointPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3AccessPointPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o S3AccessPointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o S3AccessPointPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3AccessPointPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AccessPointPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of S3BucketCriteriaForJob
type S3BucketCriteriaForJob struct {
	// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
	Excludes *CriteriaBlockForJob `pulumi:"excludes"`
	// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
	Includes *CriteriaBlockForJob `pulumi:"includes"`
}

// S3BucketCriteriaForJobInput is an input type that accepts S3BucketCriteriaForJobArgs and S3BucketCriteriaForJobOutput values.
// You can construct a concrete instance of `S3BucketCriteriaForJobInput` via:
//
//	S3BucketCriteriaForJobArgs{...}
type S3BucketCriteriaForJobInput interface {
	pulumi.Input

	ToS3BucketCriteriaForJobOutput() S3BucketCriteriaForJobOutput
	ToS3BucketCriteriaForJobOutputWithContext(context.Context) S3BucketCriteriaForJobOutput
}

// Definition of S3BucketCriteriaForJob
type S3BucketCriteriaForJobArgs struct {
	// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
	Excludes CriteriaBlockForJobPtrInput `pulumi:"excludes"`
	// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
	Includes CriteriaBlockForJobPtrInput `pulumi:"includes"`
}

func (S3BucketCriteriaForJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketCriteriaForJob)(nil)).Elem()
}

func (i S3BucketCriteriaForJobArgs) ToS3BucketCriteriaForJobOutput() S3BucketCriteriaForJobOutput {
	return i.ToS3BucketCriteriaForJobOutputWithContext(context.Background())
}

func (i S3BucketCriteriaForJobArgs) ToS3BucketCriteriaForJobOutputWithContext(ctx context.Context) S3BucketCriteriaForJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketCriteriaForJobOutput)
}

func (i S3BucketCriteriaForJobArgs) ToS3BucketCriteriaForJobPtrOutput() S3BucketCriteriaForJobPtrOutput {
	return i.ToS3BucketCriteriaForJobPtrOutputWithContext(context.Background())
}

func (i S3BucketCriteriaForJobArgs) ToS3BucketCriteriaForJobPtrOutputWithContext(ctx context.Context) S3BucketCriteriaForJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketCriteriaForJobOutput).ToS3BucketCriteriaForJobPtrOutputWithContext(ctx)
}

// S3BucketCriteriaForJobPtrInput is an input type that accepts S3BucketCriteriaForJobArgs, S3BucketCriteriaForJobPtr and S3BucketCriteriaForJobPtrOutput values.
// You can construct a concrete instance of `S3BucketCriteriaForJobPtrInput` via:
//
//	        S3BucketCriteriaForJobArgs{...}
//
//	or:
//
//	        nil
type S3BucketCriteriaForJobPtrInput interface {
	pulumi.Input

	ToS3BucketCriteriaForJobPtrOutput() S3BucketCriteriaForJobPtrOutput
	ToS3BucketCriteriaForJobPtrOutputWithContext(context.Context) S3BucketCriteriaForJobPtrOutput
}

type s3bucketCriteriaForJobPtrType S3BucketCriteriaForJobArgs

func S3BucketCriteriaForJobPtr(v *S3BucketCriteriaForJobArgs) S3BucketCriteriaForJobPtrInput {
	return (*s3bucketCriteriaForJobPtrType)(v)
}

func (*s3bucketCriteriaForJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketCriteriaForJob)(nil)).Elem()
}

func (i *s3bucketCriteriaForJobPtrType) ToS3BucketCriteriaForJobPtrOutput() S3BucketCriteriaForJobPtrOutput {
	return i.ToS3BucketCriteriaForJobPtrOutputWithContext(context.Background())
}

func (i *s3bucketCriteriaForJobPtrType) ToS3BucketCriteriaForJobPtrOutputWithContext(ctx context.Context) S3BucketCriteriaForJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketCriteriaForJobPtrOutput)
}

// Definition of S3BucketCriteriaForJob
type S3BucketCriteriaForJobOutput struct{ *pulumi.OutputState }

func (S3BucketCriteriaForJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketCriteriaForJob)(nil)).Elem()
}

func (o S3BucketCriteriaForJobOutput) ToS3BucketCriteriaForJobOutput() S3BucketCriteriaForJobOutput {
	return o
}

func (o S3BucketCriteriaForJobOutput) ToS3BucketCriteriaForJobOutputWithContext(ctx context.Context) S3BucketCriteriaForJobOutput {
	return o
}

func (o S3BucketCriteriaForJobOutput) ToS3BucketCriteriaForJobPtrOutput() S3BucketCriteriaForJobPtrOutput {
	return o.ToS3BucketCriteriaForJobPtrOutputWithContext(context.Background())
}

func (o S3BucketCriteriaForJobOutput) ToS3BucketCriteriaForJobPtrOutputWithContext(ctx context.Context) S3BucketCriteriaForJobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3BucketCriteriaForJob) *S3BucketCriteriaForJob {
		return &v
	}).(S3BucketCriteriaForJobPtrOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
func (o S3BucketCriteriaForJobOutput) Excludes() CriteriaBlockForJobPtrOutput {
	return o.ApplyT(func(v S3BucketCriteriaForJob) *CriteriaBlockForJob { return v.Excludes }).(CriteriaBlockForJobPtrOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
func (o S3BucketCriteriaForJobOutput) Includes() CriteriaBlockForJobPtrOutput {
	return o.ApplyT(func(v S3BucketCriteriaForJob) *CriteriaBlockForJob { return v.Includes }).(CriteriaBlockForJobPtrOutput)
}

type S3BucketCriteriaForJobPtrOutput struct{ *pulumi.OutputState }

func (S3BucketCriteriaForJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketCriteriaForJob)(nil)).Elem()
}

func (o S3BucketCriteriaForJobPtrOutput) ToS3BucketCriteriaForJobPtrOutput() S3BucketCriteriaForJobPtrOutput {
	return o
}

func (o S3BucketCriteriaForJobPtrOutput) ToS3BucketCriteriaForJobPtrOutputWithContext(ctx context.Context) S3BucketCriteriaForJobPtrOutput {
	return o
}

func (o S3BucketCriteriaForJobPtrOutput) Elem() S3BucketCriteriaForJobOutput {
	return o.ApplyT(func(v *S3BucketCriteriaForJob) S3BucketCriteriaForJob {
		if v != nil {
			return *v
		}
		var ret S3BucketCriteriaForJob
		return ret
	}).(S3BucketCriteriaForJobOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
func (o S3BucketCriteriaForJobPtrOutput) Excludes() CriteriaBlockForJobPtrOutput {
	return o.ApplyT(func(v *S3BucketCriteriaForJob) *CriteriaBlockForJob {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(CriteriaBlockForJobPtrOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
func (o S3BucketCriteriaForJobPtrOutput) Includes() CriteriaBlockForJobPtrOutput {
	return o.ApplyT(func(v *S3BucketCriteriaForJob) *CriteriaBlockForJob {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(CriteriaBlockForJobPtrOutput)
}

// Definition of S3BucketCriteriaForJob
type S3BucketCriteriaForJobResponse struct {
	// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
	Excludes *CriteriaBlockForJobResponse `pulumi:"excludes"`
	// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
	Includes *CriteriaBlockForJobResponse `pulumi:"includes"`
}

// Definition of S3BucketCriteriaForJob
type S3BucketCriteriaForJobResponseOutput struct{ *pulumi.OutputState }

func (S3BucketCriteriaForJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketCriteriaForJobResponse)(nil)).Elem()
}

func (o S3BucketCriteriaForJobResponseOutput) ToS3BucketCriteriaForJobResponseOutput() S3BucketCriteriaForJobResponseOutput {
	return o
}

func (o S3BucketCriteriaForJobResponseOutput) ToS3BucketCriteriaForJobResponseOutputWithContext(ctx context.Context) S3BucketCriteriaForJobResponseOutput {
	return o
}

// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
func (o S3BucketCriteriaForJobResponseOutput) Excludes() CriteriaBlockForJobResponsePtrOutput {
	return o.ApplyT(func(v S3BucketCriteriaForJobResponse) *CriteriaBlockForJobResponse { return v.Excludes }).(CriteriaBlockForJobResponsePtrOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
func (o S3BucketCriteriaForJobResponseOutput) Includes() CriteriaBlockForJobResponsePtrOutput {
	return o.ApplyT(func(v S3BucketCriteriaForJobResponse) *CriteriaBlockForJobResponse { return v.Includes }).(CriteriaBlockForJobResponsePtrOutput)
}

type S3BucketCriteriaForJobResponsePtrOutput struct{ *pulumi.OutputState }

func (S3BucketCriteriaForJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketCriteriaForJobResponse)(nil)).Elem()
}

func (o S3BucketCriteriaForJobResponsePtrOutput) ToS3BucketCriteriaForJobResponsePtrOutput() S3BucketCriteriaForJobResponsePtrOutput {
	return o
}

func (o S3BucketCriteriaForJobResponsePtrOutput) ToS3BucketCriteriaForJobResponsePtrOutputWithContext(ctx context.Context) S3BucketCriteriaForJobResponsePtrOutput {
	return o
}

func (o S3BucketCriteriaForJobResponsePtrOutput) Elem() S3BucketCriteriaForJobResponseOutput {
	return o.ApplyT(func(v *S3BucketCriteriaForJobResponse) S3BucketCriteriaForJobResponse {
		if v != nil {
			return *v
		}
		var ret S3BucketCriteriaForJobResponse
		return ret
	}).(S3BucketCriteriaForJobResponseOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to exclude from the job.</p>
func (o S3BucketCriteriaForJobResponsePtrOutput) Excludes() CriteriaBlockForJobResponsePtrOutput {
	return o.ApplyT(func(v *S3BucketCriteriaForJobResponse) *CriteriaBlockForJobResponse {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(CriteriaBlockForJobResponsePtrOutput)
}

// <p>The property- and tag-based conditions that determine which buckets to include in the job.</p>
func (o S3BucketCriteriaForJobResponsePtrOutput) Includes() CriteriaBlockForJobResponsePtrOutput {
	return o.ApplyT(func(v *S3BucketCriteriaForJobResponse) *CriteriaBlockForJobResponse {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(CriteriaBlockForJobResponsePtrOutput)
}

// Definition of S3BucketDefinitionForJob
type S3BucketDefinitionForJob struct {
	// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
	AccountId *string `pulumi:"accountId"`
	// <p>An array that lists the names of the buckets.</p>
	Buckets []string `pulumi:"buckets"`
}

// S3BucketDefinitionForJobInput is an input type that accepts S3BucketDefinitionForJobArgs and S3BucketDefinitionForJobOutput values.
// You can construct a concrete instance of `S3BucketDefinitionForJobInput` via:
//
//	S3BucketDefinitionForJobArgs{...}
type S3BucketDefinitionForJobInput interface {
	pulumi.Input

	ToS3BucketDefinitionForJobOutput() S3BucketDefinitionForJobOutput
	ToS3BucketDefinitionForJobOutputWithContext(context.Context) S3BucketDefinitionForJobOutput
}

// Definition of S3BucketDefinitionForJob
type S3BucketDefinitionForJobArgs struct {
	// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// <p>An array that lists the names of the buckets.</p>
	Buckets pulumi.StringArrayInput `pulumi:"buckets"`
}

func (S3BucketDefinitionForJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketDefinitionForJob)(nil)).Elem()
}

func (i S3BucketDefinitionForJobArgs) ToS3BucketDefinitionForJobOutput() S3BucketDefinitionForJobOutput {
	return i.ToS3BucketDefinitionForJobOutputWithContext(context.Background())
}

func (i S3BucketDefinitionForJobArgs) ToS3BucketDefinitionForJobOutputWithContext(ctx context.Context) S3BucketDefinitionForJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketDefinitionForJobOutput)
}

// S3BucketDefinitionForJobArrayInput is an input type that accepts S3BucketDefinitionForJobArray and S3BucketDefinitionForJobArrayOutput values.
// You can construct a concrete instance of `S3BucketDefinitionForJobArrayInput` via:
//
//	S3BucketDefinitionForJobArray{ S3BucketDefinitionForJobArgs{...} }
type S3BucketDefinitionForJobArrayInput interface {
	pulumi.Input

	ToS3BucketDefinitionForJobArrayOutput() S3BucketDefinitionForJobArrayOutput
	ToS3BucketDefinitionForJobArrayOutputWithContext(context.Context) S3BucketDefinitionForJobArrayOutput
}

type S3BucketDefinitionForJobArray []S3BucketDefinitionForJobInput

func (S3BucketDefinitionForJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketDefinitionForJob)(nil)).Elem()
}

func (i S3BucketDefinitionForJobArray) ToS3BucketDefinitionForJobArrayOutput() S3BucketDefinitionForJobArrayOutput {
	return i.ToS3BucketDefinitionForJobArrayOutputWithContext(context.Background())
}

func (i S3BucketDefinitionForJobArray) ToS3BucketDefinitionForJobArrayOutputWithContext(ctx context.Context) S3BucketDefinitionForJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketDefinitionForJobArrayOutput)
}

// Definition of S3BucketDefinitionForJob
type S3BucketDefinitionForJobOutput struct{ *pulumi.OutputState }

func (S3BucketDefinitionForJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketDefinitionForJob)(nil)).Elem()
}

func (o S3BucketDefinitionForJobOutput) ToS3BucketDefinitionForJobOutput() S3BucketDefinitionForJobOutput {
	return o
}

func (o S3BucketDefinitionForJobOutput) ToS3BucketDefinitionForJobOutputWithContext(ctx context.Context) S3BucketDefinitionForJobOutput {
	return o
}

// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
func (o S3BucketDefinitionForJobOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketDefinitionForJob) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// <p>An array that lists the names of the buckets.</p>
func (o S3BucketDefinitionForJobOutput) Buckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3BucketDefinitionForJob) []string { return v.Buckets }).(pulumi.StringArrayOutput)
}

type S3BucketDefinitionForJobArrayOutput struct{ *pulumi.OutputState }

func (S3BucketDefinitionForJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketDefinitionForJob)(nil)).Elem()
}

func (o S3BucketDefinitionForJobArrayOutput) ToS3BucketDefinitionForJobArrayOutput() S3BucketDefinitionForJobArrayOutput {
	return o
}

func (o S3BucketDefinitionForJobArrayOutput) ToS3BucketDefinitionForJobArrayOutputWithContext(ctx context.Context) S3BucketDefinitionForJobArrayOutput {
	return o
}

func (o S3BucketDefinitionForJobArrayOutput) Index(i pulumi.IntInput) S3BucketDefinitionForJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3BucketDefinitionForJob {
		return vs[0].([]S3BucketDefinitionForJob)[vs[1].(int)]
	}).(S3BucketDefinitionForJobOutput)
}

// Definition of S3BucketDefinitionForJob
type S3BucketDefinitionForJobResponse struct {
	// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
	AccountId *string `pulumi:"accountId"`
	// <p>An array that lists the names of the buckets.</p>
	Buckets []string `pulumi:"buckets"`
}

// Definition of S3BucketDefinitionForJob
type S3BucketDefinitionForJobResponseOutput struct{ *pulumi.OutputState }

func (S3BucketDefinitionForJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketDefinitionForJobResponse)(nil)).Elem()
}

func (o S3BucketDefinitionForJobResponseOutput) ToS3BucketDefinitionForJobResponseOutput() S3BucketDefinitionForJobResponseOutput {
	return o
}

func (o S3BucketDefinitionForJobResponseOutput) ToS3BucketDefinitionForJobResponseOutputWithContext(ctx context.Context) S3BucketDefinitionForJobResponseOutput {
	return o
}

// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
func (o S3BucketDefinitionForJobResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketDefinitionForJobResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// <p>An array that lists the names of the buckets.</p>
func (o S3BucketDefinitionForJobResponseOutput) Buckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3BucketDefinitionForJobResponse) []string { return v.Buckets }).(pulumi.StringArrayOutput)
}

type S3BucketDefinitionForJobResponseArrayOutput struct{ *pulumi.OutputState }

func (S3BucketDefinitionForJobResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketDefinitionForJobResponse)(nil)).Elem()
}

func (o S3BucketDefinitionForJobResponseArrayOutput) ToS3BucketDefinitionForJobResponseArrayOutput() S3BucketDefinitionForJobResponseArrayOutput {
	return o
}

func (o S3BucketDefinitionForJobResponseArrayOutput) ToS3BucketDefinitionForJobResponseArrayOutputWithContext(ctx context.Context) S3BucketDefinitionForJobResponseArrayOutput {
	return o
}

func (o S3BucketDefinitionForJobResponseArrayOutput) Index(i pulumi.IntInput) S3BucketDefinitionForJobResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3BucketDefinitionForJobResponse {
		return vs[0].([]S3BucketDefinitionForJobResponse)[vs[1].(int)]
	}).(S3BucketDefinitionForJobResponseOutput)
}

// Definition of S3BucketPolicy
type S3BucketPolicyProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3BucketPolicyProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// S3BucketPolicyPropertiesInput is an input type that accepts S3BucketPolicyPropertiesArgs and S3BucketPolicyPropertiesOutput values.
// You can construct a concrete instance of `S3BucketPolicyPropertiesInput` via:
//
//	S3BucketPolicyPropertiesArgs{...}
type S3BucketPolicyPropertiesInput interface {
	pulumi.Input

	ToS3BucketPolicyPropertiesOutput() S3BucketPolicyPropertiesOutput
	ToS3BucketPolicyPropertiesOutputWithContext(context.Context) S3BucketPolicyPropertiesOutput
}

// Definition of S3BucketPolicy
type S3BucketPolicyPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsS3BucketPolicyPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (S3BucketPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketPolicyProperties)(nil)).Elem()
}

func (i S3BucketPolicyPropertiesArgs) ToS3BucketPolicyPropertiesOutput() S3BucketPolicyPropertiesOutput {
	return i.ToS3BucketPolicyPropertiesOutputWithContext(context.Background())
}

func (i S3BucketPolicyPropertiesArgs) ToS3BucketPolicyPropertiesOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketPolicyPropertiesOutput)
}

func (i S3BucketPolicyPropertiesArgs) ToS3BucketPolicyPropertiesPtrOutput() S3BucketPolicyPropertiesPtrOutput {
	return i.ToS3BucketPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i S3BucketPolicyPropertiesArgs) ToS3BucketPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketPolicyPropertiesOutput).ToS3BucketPolicyPropertiesPtrOutputWithContext(ctx)
}

// S3BucketPolicyPropertiesPtrInput is an input type that accepts S3BucketPolicyPropertiesArgs, S3BucketPolicyPropertiesPtr and S3BucketPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `S3BucketPolicyPropertiesPtrInput` via:
//
//	        S3BucketPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type S3BucketPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToS3BucketPolicyPropertiesPtrOutput() S3BucketPolicyPropertiesPtrOutput
	ToS3BucketPolicyPropertiesPtrOutputWithContext(context.Context) S3BucketPolicyPropertiesPtrOutput
}

type s3bucketPolicyPropertiesPtrType S3BucketPolicyPropertiesArgs

func S3BucketPolicyPropertiesPtr(v *S3BucketPolicyPropertiesArgs) S3BucketPolicyPropertiesPtrInput {
	return (*s3bucketPolicyPropertiesPtrType)(v)
}

func (*s3bucketPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketPolicyProperties)(nil)).Elem()
}

func (i *s3bucketPolicyPropertiesPtrType) ToS3BucketPolicyPropertiesPtrOutput() S3BucketPolicyPropertiesPtrOutput {
	return i.ToS3BucketPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *s3bucketPolicyPropertiesPtrType) ToS3BucketPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketPolicyPropertiesPtrOutput)
}

// Definition of S3BucketPolicy
type S3BucketPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (S3BucketPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketPolicyProperties)(nil)).Elem()
}

func (o S3BucketPolicyPropertiesOutput) ToS3BucketPolicyPropertiesOutput() S3BucketPolicyPropertiesOutput {
	return o
}

func (o S3BucketPolicyPropertiesOutput) ToS3BucketPolicyPropertiesOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesOutput {
	return o
}

func (o S3BucketPolicyPropertiesOutput) ToS3BucketPolicyPropertiesPtrOutput() S3BucketPolicyPropertiesPtrOutput {
	return o.ToS3BucketPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o S3BucketPolicyPropertiesOutput) ToS3BucketPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3BucketPolicyProperties) *S3BucketPolicyProperties {
		return &v
	}).(S3BucketPolicyPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o S3BucketPolicyPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3BucketPolicyPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3BucketPolicyPropertiesOutput) AwsProperties() AwsS3BucketPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *AwsS3BucketPolicyProperties { return v.AwsProperties }).(AwsS3BucketPolicyPropertiesPtrOutput)
}

// AWS Region
func (o S3BucketPolicyPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3BucketPolicyPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3BucketPolicyPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3BucketPolicyPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3BucketPolicyPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type S3BucketPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (S3BucketPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketPolicyProperties)(nil)).Elem()
}

func (o S3BucketPolicyPropertiesPtrOutput) ToS3BucketPolicyPropertiesPtrOutput() S3BucketPolicyPropertiesPtrOutput {
	return o
}

func (o S3BucketPolicyPropertiesPtrOutput) ToS3BucketPolicyPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesPtrOutput {
	return o
}

func (o S3BucketPolicyPropertiesPtrOutput) Elem() S3BucketPolicyPropertiesOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) S3BucketPolicyProperties {
		if v != nil {
			return *v
		}
		var ret S3BucketPolicyProperties
		return ret
	}).(S3BucketPolicyPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o S3BucketPolicyPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3BucketPolicyPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3BucketPolicyPropertiesPtrOutput) AwsProperties() AwsS3BucketPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *AwsS3BucketPolicyProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsS3BucketPolicyPropertiesPtrOutput)
}

// AWS Region
func (o S3BucketPolicyPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3BucketPolicyPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3BucketPolicyPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3BucketPolicyPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3BucketPolicyPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of S3BucketPolicy
type S3BucketPolicyPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3BucketPolicyPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of S3BucketPolicy
type S3BucketPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (S3BucketPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketPolicyPropertiesResponse)(nil)).Elem()
}

func (o S3BucketPolicyPropertiesResponseOutput) ToS3BucketPolicyPropertiesResponseOutput() S3BucketPolicyPropertiesResponseOutput {
	return o
}

func (o S3BucketPolicyPropertiesResponseOutput) ToS3BucketPolicyPropertiesResponseOutputWithContext(ctx context.Context) S3BucketPolicyPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o S3BucketPolicyPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3BucketPolicyPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3BucketPolicyPropertiesResponseOutput) AwsProperties() AwsS3BucketPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *AwsS3BucketPolicyPropertiesResponse { return v.AwsProperties }).(AwsS3BucketPolicyPropertiesResponsePtrOutput)
}

// AWS Region
func (o S3BucketPolicyPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3BucketPolicyPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3BucketPolicyPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o S3BucketPolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o S3BucketPolicyPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3BucketPolicyPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPolicyPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of S3Bucket
type S3BucketProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3BucketProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for S3BucketProperties
func (val *S3BucketProperties) Defaults() *S3BucketProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// S3BucketPropertiesInput is an input type that accepts S3BucketPropertiesArgs and S3BucketPropertiesOutput values.
// You can construct a concrete instance of `S3BucketPropertiesInput` via:
//
//	S3BucketPropertiesArgs{...}
type S3BucketPropertiesInput interface {
	pulumi.Input

	ToS3BucketPropertiesOutput() S3BucketPropertiesOutput
	ToS3BucketPropertiesOutputWithContext(context.Context) S3BucketPropertiesOutput
}

// Definition of S3Bucket
type S3BucketPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsS3BucketPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for S3BucketPropertiesArgs
func (val *S3BucketPropertiesArgs) Defaults() *S3BucketPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (S3BucketPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketProperties)(nil)).Elem()
}

func (i S3BucketPropertiesArgs) ToS3BucketPropertiesOutput() S3BucketPropertiesOutput {
	return i.ToS3BucketPropertiesOutputWithContext(context.Background())
}

func (i S3BucketPropertiesArgs) ToS3BucketPropertiesOutputWithContext(ctx context.Context) S3BucketPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketPropertiesOutput)
}

func (i S3BucketPropertiesArgs) ToS3BucketPropertiesPtrOutput() S3BucketPropertiesPtrOutput {
	return i.ToS3BucketPropertiesPtrOutputWithContext(context.Background())
}

func (i S3BucketPropertiesArgs) ToS3BucketPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketPropertiesOutput).ToS3BucketPropertiesPtrOutputWithContext(ctx)
}

// S3BucketPropertiesPtrInput is an input type that accepts S3BucketPropertiesArgs, S3BucketPropertiesPtr and S3BucketPropertiesPtrOutput values.
// You can construct a concrete instance of `S3BucketPropertiesPtrInput` via:
//
//	        S3BucketPropertiesArgs{...}
//
//	or:
//
//	        nil
type S3BucketPropertiesPtrInput interface {
	pulumi.Input

	ToS3BucketPropertiesPtrOutput() S3BucketPropertiesPtrOutput
	ToS3BucketPropertiesPtrOutputWithContext(context.Context) S3BucketPropertiesPtrOutput
}

type s3bucketPropertiesPtrType S3BucketPropertiesArgs

func S3BucketPropertiesPtr(v *S3BucketPropertiesArgs) S3BucketPropertiesPtrInput {
	return (*s3bucketPropertiesPtrType)(v)
}

func (*s3bucketPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketProperties)(nil)).Elem()
}

func (i *s3bucketPropertiesPtrType) ToS3BucketPropertiesPtrOutput() S3BucketPropertiesPtrOutput {
	return i.ToS3BucketPropertiesPtrOutputWithContext(context.Background())
}

func (i *s3bucketPropertiesPtrType) ToS3BucketPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketPropertiesPtrOutput)
}

// Definition of S3Bucket
type S3BucketPropertiesOutput struct{ *pulumi.OutputState }

func (S3BucketPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketProperties)(nil)).Elem()
}

func (o S3BucketPropertiesOutput) ToS3BucketPropertiesOutput() S3BucketPropertiesOutput {
	return o
}

func (o S3BucketPropertiesOutput) ToS3BucketPropertiesOutputWithContext(ctx context.Context) S3BucketPropertiesOutput {
	return o
}

func (o S3BucketPropertiesOutput) ToS3BucketPropertiesPtrOutput() S3BucketPropertiesPtrOutput {
	return o.ToS3BucketPropertiesPtrOutputWithContext(context.Background())
}

func (o S3BucketPropertiesOutput) ToS3BucketPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3BucketProperties) *S3BucketProperties {
		return &v
	}).(S3BucketPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o S3BucketPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3BucketPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3BucketPropertiesOutput) AwsProperties() AwsS3BucketPropertiesPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *AwsS3BucketProperties { return v.AwsProperties }).(AwsS3BucketPropertiesPtrOutput)
}

// AWS Region
func (o S3BucketPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3BucketPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3BucketPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3BucketProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3BucketPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3BucketPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type S3BucketPropertiesPtrOutput struct{ *pulumi.OutputState }

func (S3BucketPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketProperties)(nil)).Elem()
}

func (o S3BucketPropertiesPtrOutput) ToS3BucketPropertiesPtrOutput() S3BucketPropertiesPtrOutput {
	return o
}

func (o S3BucketPropertiesPtrOutput) ToS3BucketPropertiesPtrOutputWithContext(ctx context.Context) S3BucketPropertiesPtrOutput {
	return o
}

func (o S3BucketPropertiesPtrOutput) Elem() S3BucketPropertiesOutput {
	return o.ApplyT(func(v *S3BucketProperties) S3BucketProperties {
		if v != nil {
			return *v
		}
		var ret S3BucketProperties
		return ret
	}).(S3BucketPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o S3BucketPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3BucketPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3BucketPropertiesPtrOutput) AwsProperties() AwsS3BucketPropertiesPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *AwsS3BucketProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsS3BucketPropertiesPtrOutput)
}

// AWS Region
func (o S3BucketPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3BucketPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3BucketPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *S3BucketProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3BucketPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3BucketPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of S3Bucket
type S3BucketPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3BucketPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Defaults sets the appropriate defaults for S3BucketPropertiesResponse
func (val *S3BucketPropertiesResponse) Defaults() *S3BucketPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AwsProperties = tmp.AwsProperties.Defaults()

	return &tmp
}

// Definition of S3Bucket
type S3BucketPropertiesResponseOutput struct{ *pulumi.OutputState }

func (S3BucketPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketPropertiesResponse)(nil)).Elem()
}

func (o S3BucketPropertiesResponseOutput) ToS3BucketPropertiesResponseOutput() S3BucketPropertiesResponseOutput {
	return o
}

func (o S3BucketPropertiesResponseOutput) ToS3BucketPropertiesResponseOutputWithContext(ctx context.Context) S3BucketPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o S3BucketPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3BucketPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3BucketPropertiesResponseOutput) AwsProperties() AwsS3BucketPropertiesResponsePtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *AwsS3BucketPropertiesResponse { return v.AwsProperties }).(AwsS3BucketPropertiesResponsePtrOutput)
}

// AWS Region
func (o S3BucketPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3BucketPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3BucketPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o S3BucketPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o S3BucketPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3BucketPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of S3BucketSource
type S3BucketSource struct {
	// The S3 bucket that is being imported from.
	S3Bucket *string `pulumi:"s3Bucket"`
	// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
	S3BucketOwner *string `pulumi:"s3BucketOwner"`
	// The key prefix shared by all S3 Objects that are being imported.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// S3BucketSourceInput is an input type that accepts S3BucketSourceArgs and S3BucketSourceOutput values.
// You can construct a concrete instance of `S3BucketSourceInput` via:
//
//	S3BucketSourceArgs{...}
type S3BucketSourceInput interface {
	pulumi.Input

	ToS3BucketSourceOutput() S3BucketSourceOutput
	ToS3BucketSourceOutputWithContext(context.Context) S3BucketSourceOutput
}

// Definition of S3BucketSource
type S3BucketSourceArgs struct {
	// The S3 bucket that is being imported from.
	S3Bucket pulumi.StringPtrInput `pulumi:"s3Bucket"`
	// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
	S3BucketOwner pulumi.StringPtrInput `pulumi:"s3BucketOwner"`
	// The key prefix shared by all S3 Objects that are being imported.
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (S3BucketSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketSource)(nil)).Elem()
}

func (i S3BucketSourceArgs) ToS3BucketSourceOutput() S3BucketSourceOutput {
	return i.ToS3BucketSourceOutputWithContext(context.Background())
}

func (i S3BucketSourceArgs) ToS3BucketSourceOutputWithContext(ctx context.Context) S3BucketSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketSourceOutput)
}

func (i S3BucketSourceArgs) ToS3BucketSourcePtrOutput() S3BucketSourcePtrOutput {
	return i.ToS3BucketSourcePtrOutputWithContext(context.Background())
}

func (i S3BucketSourceArgs) ToS3BucketSourcePtrOutputWithContext(ctx context.Context) S3BucketSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketSourceOutput).ToS3BucketSourcePtrOutputWithContext(ctx)
}

// S3BucketSourcePtrInput is an input type that accepts S3BucketSourceArgs, S3BucketSourcePtr and S3BucketSourcePtrOutput values.
// You can construct a concrete instance of `S3BucketSourcePtrInput` via:
//
//	        S3BucketSourceArgs{...}
//
//	or:
//
//	        nil
type S3BucketSourcePtrInput interface {
	pulumi.Input

	ToS3BucketSourcePtrOutput() S3BucketSourcePtrOutput
	ToS3BucketSourcePtrOutputWithContext(context.Context) S3BucketSourcePtrOutput
}

type s3bucketSourcePtrType S3BucketSourceArgs

func S3BucketSourcePtr(v *S3BucketSourceArgs) S3BucketSourcePtrInput {
	return (*s3bucketSourcePtrType)(v)
}

func (*s3bucketSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketSource)(nil)).Elem()
}

func (i *s3bucketSourcePtrType) ToS3BucketSourcePtrOutput() S3BucketSourcePtrOutput {
	return i.ToS3BucketSourcePtrOutputWithContext(context.Background())
}

func (i *s3bucketSourcePtrType) ToS3BucketSourcePtrOutputWithContext(ctx context.Context) S3BucketSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketSourcePtrOutput)
}

// Definition of S3BucketSource
type S3BucketSourceOutput struct{ *pulumi.OutputState }

func (S3BucketSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketSource)(nil)).Elem()
}

func (o S3BucketSourceOutput) ToS3BucketSourceOutput() S3BucketSourceOutput {
	return o
}

func (o S3BucketSourceOutput) ToS3BucketSourceOutputWithContext(ctx context.Context) S3BucketSourceOutput {
	return o
}

func (o S3BucketSourceOutput) ToS3BucketSourcePtrOutput() S3BucketSourcePtrOutput {
	return o.ToS3BucketSourcePtrOutputWithContext(context.Background())
}

func (o S3BucketSourceOutput) ToS3BucketSourcePtrOutputWithContext(ctx context.Context) S3BucketSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3BucketSource) *S3BucketSource {
		return &v
	}).(S3BucketSourcePtrOutput)
}

// The S3 bucket that is being imported from.
func (o S3BucketSourceOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketSource) *string { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
func (o S3BucketSourceOutput) S3BucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketSource) *string { return v.S3BucketOwner }).(pulumi.StringPtrOutput)
}

// The key prefix shared by all S3 Objects that are being imported.
func (o S3BucketSourceOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketSource) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type S3BucketSourcePtrOutput struct{ *pulumi.OutputState }

func (S3BucketSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketSource)(nil)).Elem()
}

func (o S3BucketSourcePtrOutput) ToS3BucketSourcePtrOutput() S3BucketSourcePtrOutput {
	return o
}

func (o S3BucketSourcePtrOutput) ToS3BucketSourcePtrOutputWithContext(ctx context.Context) S3BucketSourcePtrOutput {
	return o
}

func (o S3BucketSourcePtrOutput) Elem() S3BucketSourceOutput {
	return o.ApplyT(func(v *S3BucketSource) S3BucketSource {
		if v != nil {
			return *v
		}
		var ret S3BucketSource
		return ret
	}).(S3BucketSourceOutput)
}

// The S3 bucket that is being imported from.
func (o S3BucketSourcePtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketSource) *string {
		if v == nil {
			return nil
		}
		return v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
func (o S3BucketSourcePtrOutput) S3BucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketSource) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketOwner
	}).(pulumi.StringPtrOutput)
}

// The key prefix shared by all S3 Objects that are being imported.
func (o S3BucketSourcePtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketSource) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// Definition of S3BucketSource
type S3BucketSourceResponse struct {
	// The S3 bucket that is being imported from.
	S3Bucket *string `pulumi:"s3Bucket"`
	// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
	S3BucketOwner *string `pulumi:"s3BucketOwner"`
	// The key prefix shared by all S3 Objects that are being imported.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// Definition of S3BucketSource
type S3BucketSourceResponseOutput struct{ *pulumi.OutputState }

func (S3BucketSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketSourceResponse)(nil)).Elem()
}

func (o S3BucketSourceResponseOutput) ToS3BucketSourceResponseOutput() S3BucketSourceResponseOutput {
	return o
}

func (o S3BucketSourceResponseOutput) ToS3BucketSourceResponseOutputWithContext(ctx context.Context) S3BucketSourceResponseOutput {
	return o
}

// The S3 bucket that is being imported from.
func (o S3BucketSourceResponseOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketSourceResponse) *string { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
func (o S3BucketSourceResponseOutput) S3BucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketSourceResponse) *string { return v.S3BucketOwner }).(pulumi.StringPtrOutput)
}

// The key prefix shared by all S3 Objects that are being imported.
func (o S3BucketSourceResponseOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketSourceResponse) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type S3BucketSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (S3BucketSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketSourceResponse)(nil)).Elem()
}

func (o S3BucketSourceResponsePtrOutput) ToS3BucketSourceResponsePtrOutput() S3BucketSourceResponsePtrOutput {
	return o
}

func (o S3BucketSourceResponsePtrOutput) ToS3BucketSourceResponsePtrOutputWithContext(ctx context.Context) S3BucketSourceResponsePtrOutput {
	return o
}

func (o S3BucketSourceResponsePtrOutput) Elem() S3BucketSourceResponseOutput {
	return o.ApplyT(func(v *S3BucketSourceResponse) S3BucketSourceResponse {
		if v != nil {
			return *v
		}
		var ret S3BucketSourceResponse
		return ret
	}).(S3BucketSourceResponseOutput)
}

// The S3 bucket that is being imported from.
func (o S3BucketSourceResponsePtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
func (o S3BucketSourceResponsePtrOutput) S3BucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketOwner
	}).(pulumi.StringPtrOutput)
}

// The key prefix shared by all S3 Objects that are being imported.
func (o S3BucketSourceResponsePtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// Definition of S3ControlMultiRegionAccessPointPolicyDocument
type S3ControlMultiRegionAccessPointPolicyDocumentProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3ControlMultiRegionAccessPointPolicyDocumentProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// S3ControlMultiRegionAccessPointPolicyDocumentPropertiesInput is an input type that accepts S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs and S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput values.
// You can construct a concrete instance of `S3ControlMultiRegionAccessPointPolicyDocumentPropertiesInput` via:
//
//	S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs{...}
type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesInput interface {
	pulumi.Input

	ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput
	ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutputWithContext(context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput
}

// Definition of S3ControlMultiRegionAccessPointPolicyDocument
type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ControlMultiRegionAccessPointPolicyDocumentProperties)(nil)).Elem()
}

func (i S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput {
	return i.ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutputWithContext(context.Background())
}

func (i S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput)
}

func (i S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return i.ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(context.Background())
}

func (i S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput).ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(ctx)
}

// S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrInput is an input type that accepts S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs, S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtr and S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput values.
// You can construct a concrete instance of `S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrInput` via:
//
//	        S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs{...}
//
//	or:
//
//	        nil
type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrInput interface {
	pulumi.Input

	ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput
	ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput
}

type s3controlMultiRegionAccessPointPolicyDocumentPropertiesPtrType S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs

func S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtr(v *S3ControlMultiRegionAccessPointPolicyDocumentPropertiesArgs) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrInput {
	return (*s3controlMultiRegionAccessPointPolicyDocumentPropertiesPtrType)(v)
}

func (*s3controlMultiRegionAccessPointPolicyDocumentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3ControlMultiRegionAccessPointPolicyDocumentProperties)(nil)).Elem()
}

func (i *s3controlMultiRegionAccessPointPolicyDocumentPropertiesPtrType) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return i.ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(context.Background())
}

func (i *s3controlMultiRegionAccessPointPolicyDocumentPropertiesPtrType) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput)
}

// Definition of S3ControlMultiRegionAccessPointPolicyDocument
type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput struct{ *pulumi.OutputState }

func (S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ControlMultiRegionAccessPointPolicyDocumentProperties)(nil)).Elem()
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput {
	return o
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput {
	return o
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return o.ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(context.Background())
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *S3ControlMultiRegionAccessPointPolicyDocumentProperties {
		return &v
	}).(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) AwsProperties() AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *AwsS3ControlMultiRegionAccessPointPolicyDocumentProperties {
		return v.AwsProperties
	}).(AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput)
}

// AWS Region
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3ControlMultiRegionAccessPointPolicyDocumentProperties)(nil)).Elem()
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return o
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return o
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) Elem() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) S3ControlMultiRegionAccessPointPolicyDocumentProperties {
		if v != nil {
			return *v
		}
		var ret S3ControlMultiRegionAccessPointPolicyDocumentProperties
		return ret
	}).(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) AwsProperties() AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *AwsS3ControlMultiRegionAccessPointPolicyDocumentProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput)
}

// AWS Region
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ControlMultiRegionAccessPointPolicyDocumentProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of S3ControlMultiRegionAccessPointPolicyDocument
type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of S3ControlMultiRegionAccessPointPolicyDocument
type S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse)(nil)).Elem()
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput() S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput {
	return o
}

func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) ToS3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutputWithContext(ctx context.Context) S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) AwsProperties() AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse {
		return v.AwsProperties
	}).(AwsS3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponsePtrOutput)
}

// AWS Region
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *string {
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) map[string]string {
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponse) *string {
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of S3KeyFilter
type S3KeyFilter struct {
	// A list of containers for the key-value pair that defines the criteria for the filter rule.
	Rules []FilterRule `pulumi:"rules"`
}

// S3KeyFilterInput is an input type that accepts S3KeyFilterArgs and S3KeyFilterOutput values.
// You can construct a concrete instance of `S3KeyFilterInput` via:
//
//	S3KeyFilterArgs{...}
type S3KeyFilterInput interface {
	pulumi.Input

	ToS3KeyFilterOutput() S3KeyFilterOutput
	ToS3KeyFilterOutputWithContext(context.Context) S3KeyFilterOutput
}

// Definition of S3KeyFilter
type S3KeyFilterArgs struct {
	// A list of containers for the key-value pair that defines the criteria for the filter rule.
	Rules FilterRuleArrayInput `pulumi:"rules"`
}

func (S3KeyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3KeyFilter)(nil)).Elem()
}

func (i S3KeyFilterArgs) ToS3KeyFilterOutput() S3KeyFilterOutput {
	return i.ToS3KeyFilterOutputWithContext(context.Background())
}

func (i S3KeyFilterArgs) ToS3KeyFilterOutputWithContext(ctx context.Context) S3KeyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3KeyFilterOutput)
}

func (i S3KeyFilterArgs) ToS3KeyFilterPtrOutput() S3KeyFilterPtrOutput {
	return i.ToS3KeyFilterPtrOutputWithContext(context.Background())
}

func (i S3KeyFilterArgs) ToS3KeyFilterPtrOutputWithContext(ctx context.Context) S3KeyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3KeyFilterOutput).ToS3KeyFilterPtrOutputWithContext(ctx)
}

// S3KeyFilterPtrInput is an input type that accepts S3KeyFilterArgs, S3KeyFilterPtr and S3KeyFilterPtrOutput values.
// You can construct a concrete instance of `S3KeyFilterPtrInput` via:
//
//	        S3KeyFilterArgs{...}
//
//	or:
//
//	        nil
type S3KeyFilterPtrInput interface {
	pulumi.Input

	ToS3KeyFilterPtrOutput() S3KeyFilterPtrOutput
	ToS3KeyFilterPtrOutputWithContext(context.Context) S3KeyFilterPtrOutput
}

type s3keyFilterPtrType S3KeyFilterArgs

func S3KeyFilterPtr(v *S3KeyFilterArgs) S3KeyFilterPtrInput {
	return (*s3keyFilterPtrType)(v)
}

func (*s3keyFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3KeyFilter)(nil)).Elem()
}

func (i *s3keyFilterPtrType) ToS3KeyFilterPtrOutput() S3KeyFilterPtrOutput {
	return i.ToS3KeyFilterPtrOutputWithContext(context.Background())
}

func (i *s3keyFilterPtrType) ToS3KeyFilterPtrOutputWithContext(ctx context.Context) S3KeyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3KeyFilterPtrOutput)
}

// Definition of S3KeyFilter
type S3KeyFilterOutput struct{ *pulumi.OutputState }

func (S3KeyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3KeyFilter)(nil)).Elem()
}

func (o S3KeyFilterOutput) ToS3KeyFilterOutput() S3KeyFilterOutput {
	return o
}

func (o S3KeyFilterOutput) ToS3KeyFilterOutputWithContext(ctx context.Context) S3KeyFilterOutput {
	return o
}

func (o S3KeyFilterOutput) ToS3KeyFilterPtrOutput() S3KeyFilterPtrOutput {
	return o.ToS3KeyFilterPtrOutputWithContext(context.Background())
}

func (o S3KeyFilterOutput) ToS3KeyFilterPtrOutputWithContext(ctx context.Context) S3KeyFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3KeyFilter) *S3KeyFilter {
		return &v
	}).(S3KeyFilterPtrOutput)
}

// A list of containers for the key-value pair that defines the criteria for the filter rule.
func (o S3KeyFilterOutput) Rules() FilterRuleArrayOutput {
	return o.ApplyT(func(v S3KeyFilter) []FilterRule { return v.Rules }).(FilterRuleArrayOutput)
}

type S3KeyFilterPtrOutput struct{ *pulumi.OutputState }

func (S3KeyFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3KeyFilter)(nil)).Elem()
}

func (o S3KeyFilterPtrOutput) ToS3KeyFilterPtrOutput() S3KeyFilterPtrOutput {
	return o
}

func (o S3KeyFilterPtrOutput) ToS3KeyFilterPtrOutputWithContext(ctx context.Context) S3KeyFilterPtrOutput {
	return o
}

func (o S3KeyFilterPtrOutput) Elem() S3KeyFilterOutput {
	return o.ApplyT(func(v *S3KeyFilter) S3KeyFilter {
		if v != nil {
			return *v
		}
		var ret S3KeyFilter
		return ret
	}).(S3KeyFilterOutput)
}

// A list of containers for the key-value pair that defines the criteria for the filter rule.
func (o S3KeyFilterPtrOutput) Rules() FilterRuleArrayOutput {
	return o.ApplyT(func(v *S3KeyFilter) []FilterRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(FilterRuleArrayOutput)
}

// Definition of S3KeyFilter
type S3KeyFilterResponse struct {
	// A list of containers for the key-value pair that defines the criteria for the filter rule.
	Rules []FilterRuleResponse `pulumi:"rules"`
}

// Definition of S3KeyFilter
type S3KeyFilterResponseOutput struct{ *pulumi.OutputState }

func (S3KeyFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3KeyFilterResponse)(nil)).Elem()
}

func (o S3KeyFilterResponseOutput) ToS3KeyFilterResponseOutput() S3KeyFilterResponseOutput {
	return o
}

func (o S3KeyFilterResponseOutput) ToS3KeyFilterResponseOutputWithContext(ctx context.Context) S3KeyFilterResponseOutput {
	return o
}

// A list of containers for the key-value pair that defines the criteria for the filter rule.
func (o S3KeyFilterResponseOutput) Rules() FilterRuleResponseArrayOutput {
	return o.ApplyT(func(v S3KeyFilterResponse) []FilterRuleResponse { return v.Rules }).(FilterRuleResponseArrayOutput)
}

type S3KeyFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (S3KeyFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3KeyFilterResponse)(nil)).Elem()
}

func (o S3KeyFilterResponsePtrOutput) ToS3KeyFilterResponsePtrOutput() S3KeyFilterResponsePtrOutput {
	return o
}

func (o S3KeyFilterResponsePtrOutput) ToS3KeyFilterResponsePtrOutputWithContext(ctx context.Context) S3KeyFilterResponsePtrOutput {
	return o
}

func (o S3KeyFilterResponsePtrOutput) Elem() S3KeyFilterResponseOutput {
	return o.ApplyT(func(v *S3KeyFilterResponse) S3KeyFilterResponse {
		if v != nil {
			return *v
		}
		var ret S3KeyFilterResponse
		return ret
	}).(S3KeyFilterResponseOutput)
}

// A list of containers for the key-value pair that defines the criteria for the filter rule.
func (o S3KeyFilterResponsePtrOutput) Rules() FilterRuleResponseArrayOutput {
	return o.ApplyT(func(v *S3KeyFilterResponse) []FilterRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(FilterRuleResponseArrayOutput)
}

// Definition of S3Location
type S3Location struct {
	// The name of the S3 bucket where the OpenAPI file is stored.
	Bucket *string `pulumi:"bucket"`
	// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
	ETag *string `pulumi:"eTag"`
	// The file name of the OpenAPI file (Amazon S3 object name).
	Key *string `pulumi:"key"`
	// For versioning-enabled buckets, a specific version of the OpenAPI file.
	Version *string `pulumi:"version"`
}

// S3LocationInput is an input type that accepts S3LocationArgs and S3LocationOutput values.
// You can construct a concrete instance of `S3LocationInput` via:
//
//	S3LocationArgs{...}
type S3LocationInput interface {
	pulumi.Input

	ToS3LocationOutput() S3LocationOutput
	ToS3LocationOutputWithContext(context.Context) S3LocationOutput
}

// Definition of S3Location
type S3LocationArgs struct {
	// The name of the S3 bucket where the OpenAPI file is stored.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
	ETag pulumi.StringPtrInput `pulumi:"eTag"`
	// The file name of the OpenAPI file (Amazon S3 object name).
	Key pulumi.StringPtrInput `pulumi:"key"`
	// For versioning-enabled buckets, a specific version of the OpenAPI file.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (S3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3Location)(nil)).Elem()
}

func (i S3LocationArgs) ToS3LocationOutput() S3LocationOutput {
	return i.ToS3LocationOutputWithContext(context.Background())
}

func (i S3LocationArgs) ToS3LocationOutputWithContext(ctx context.Context) S3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LocationOutput)
}

func (i S3LocationArgs) ToS3LocationPtrOutput() S3LocationPtrOutput {
	return i.ToS3LocationPtrOutputWithContext(context.Background())
}

func (i S3LocationArgs) ToS3LocationPtrOutputWithContext(ctx context.Context) S3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LocationOutput).ToS3LocationPtrOutputWithContext(ctx)
}

// S3LocationPtrInput is an input type that accepts S3LocationArgs, S3LocationPtr and S3LocationPtrOutput values.
// You can construct a concrete instance of `S3LocationPtrInput` via:
//
//	        S3LocationArgs{...}
//
//	or:
//
//	        nil
type S3LocationPtrInput interface {
	pulumi.Input

	ToS3LocationPtrOutput() S3LocationPtrOutput
	ToS3LocationPtrOutputWithContext(context.Context) S3LocationPtrOutput
}

type s3locationPtrType S3LocationArgs

func S3LocationPtr(v *S3LocationArgs) S3LocationPtrInput {
	return (*s3locationPtrType)(v)
}

func (*s3locationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3Location)(nil)).Elem()
}

func (i *s3locationPtrType) ToS3LocationPtrOutput() S3LocationPtrOutput {
	return i.ToS3LocationPtrOutputWithContext(context.Background())
}

func (i *s3locationPtrType) ToS3LocationPtrOutputWithContext(ctx context.Context) S3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LocationPtrOutput)
}

// Definition of S3Location
type S3LocationOutput struct{ *pulumi.OutputState }

func (S3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3Location)(nil)).Elem()
}

func (o S3LocationOutput) ToS3LocationOutput() S3LocationOutput {
	return o
}

func (o S3LocationOutput) ToS3LocationOutputWithContext(ctx context.Context) S3LocationOutput {
	return o
}

func (o S3LocationOutput) ToS3LocationPtrOutput() S3LocationPtrOutput {
	return o.ToS3LocationPtrOutputWithContext(context.Background())
}

func (o S3LocationOutput) ToS3LocationPtrOutputWithContext(ctx context.Context) S3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3Location) *S3Location {
		return &v
	}).(S3LocationPtrOutput)
}

// The name of the S3 bucket where the OpenAPI file is stored.
func (o S3LocationOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3Location) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
func (o S3LocationOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3Location) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// The file name of the OpenAPI file (Amazon S3 object name).
func (o S3LocationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3Location) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// For versioning-enabled buckets, a specific version of the OpenAPI file.
func (o S3LocationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3Location) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type S3LocationPtrOutput struct{ *pulumi.OutputState }

func (S3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3Location)(nil)).Elem()
}

func (o S3LocationPtrOutput) ToS3LocationPtrOutput() S3LocationPtrOutput {
	return o
}

func (o S3LocationPtrOutput) ToS3LocationPtrOutputWithContext(ctx context.Context) S3LocationPtrOutput {
	return o
}

func (o S3LocationPtrOutput) Elem() S3LocationOutput {
	return o.ApplyT(func(v *S3Location) S3Location {
		if v != nil {
			return *v
		}
		var ret S3Location
		return ret
	}).(S3LocationOutput)
}

// The name of the S3 bucket where the OpenAPI file is stored.
func (o S3LocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3Location) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
func (o S3LocationPtrOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3Location) *string {
		if v == nil {
			return nil
		}
		return v.ETag
	}).(pulumi.StringPtrOutput)
}

// The file name of the OpenAPI file (Amazon S3 object name).
func (o S3LocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3Location) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// For versioning-enabled buckets, a specific version of the OpenAPI file.
func (o S3LocationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3Location) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Definition of S3Location
type S3LocationResponse struct {
	// The name of the S3 bucket where the OpenAPI file is stored.
	Bucket *string `pulumi:"bucket"`
	// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
	ETag *string `pulumi:"eTag"`
	// The file name of the OpenAPI file (Amazon S3 object name).
	Key *string `pulumi:"key"`
	// For versioning-enabled buckets, a specific version of the OpenAPI file.
	Version *string `pulumi:"version"`
}

// Definition of S3Location
type S3LocationResponseOutput struct{ *pulumi.OutputState }

func (S3LocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3LocationResponse)(nil)).Elem()
}

func (o S3LocationResponseOutput) ToS3LocationResponseOutput() S3LocationResponseOutput {
	return o
}

func (o S3LocationResponseOutput) ToS3LocationResponseOutputWithContext(ctx context.Context) S3LocationResponseOutput {
	return o
}

// The name of the S3 bucket where the OpenAPI file is stored.
func (o S3LocationResponseOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3LocationResponse) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
func (o S3LocationResponseOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3LocationResponse) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// The file name of the OpenAPI file (Amazon S3 object name).
func (o S3LocationResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3LocationResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// For versioning-enabled buckets, a specific version of the OpenAPI file.
func (o S3LocationResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3LocationResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type S3LocationResponsePtrOutput struct{ *pulumi.OutputState }

func (S3LocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3LocationResponse)(nil)).Elem()
}

func (o S3LocationResponsePtrOutput) ToS3LocationResponsePtrOutput() S3LocationResponsePtrOutput {
	return o
}

func (o S3LocationResponsePtrOutput) ToS3LocationResponsePtrOutputWithContext(ctx context.Context) S3LocationResponsePtrOutput {
	return o
}

func (o S3LocationResponsePtrOutput) Elem() S3LocationResponseOutput {
	return o.ApplyT(func(v *S3LocationResponse) S3LocationResponse {
		if v != nil {
			return *v
		}
		var ret S3LocationResponse
		return ret
	}).(S3LocationResponseOutput)
}

// The name of the S3 bucket where the OpenAPI file is stored.
func (o S3LocationResponsePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3LocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 ETag (a file checksum) of the OpenAPI file. If you don't specify a value, API Gateway skips ETag validation of your OpenAPI file.
func (o S3LocationResponsePtrOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3LocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ETag
	}).(pulumi.StringPtrOutput)
}

// The file name of the OpenAPI file (Amazon S3 object name).
func (o S3LocationResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3LocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// For versioning-enabled buckets, a specific version of the OpenAPI file.
func (o S3LocationResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3LocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Definition of S3LogsConfig
type S3LogsConfig struct {
	// Property bucketOwnerAccess
	BucketOwnerAccess *BucketOwnerAccessEnumValue `pulumi:"bucketOwnerAccess"`
	// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
	EncryptionDisabled *bool `pulumi:"encryptionDisabled"`
	// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
	Location *string `pulumi:"location"`
	// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
	Status *LogsConfigStatusTypeEnumValue `pulumi:"status"`
}

// S3LogsConfigInput is an input type that accepts S3LogsConfigArgs and S3LogsConfigOutput values.
// You can construct a concrete instance of `S3LogsConfigInput` via:
//
//	S3LogsConfigArgs{...}
type S3LogsConfigInput interface {
	pulumi.Input

	ToS3LogsConfigOutput() S3LogsConfigOutput
	ToS3LogsConfigOutputWithContext(context.Context) S3LogsConfigOutput
}

// Definition of S3LogsConfig
type S3LogsConfigArgs struct {
	// Property bucketOwnerAccess
	BucketOwnerAccess BucketOwnerAccessEnumValuePtrInput `pulumi:"bucketOwnerAccess"`
	// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
	EncryptionDisabled pulumi.BoolPtrInput `pulumi:"encryptionDisabled"`
	// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
	Location pulumi.StringPtrInput `pulumi:"location"`
	// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
	Status LogsConfigStatusTypeEnumValuePtrInput `pulumi:"status"`
}

func (S3LogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3LogsConfig)(nil)).Elem()
}

func (i S3LogsConfigArgs) ToS3LogsConfigOutput() S3LogsConfigOutput {
	return i.ToS3LogsConfigOutputWithContext(context.Background())
}

func (i S3LogsConfigArgs) ToS3LogsConfigOutputWithContext(ctx context.Context) S3LogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LogsConfigOutput)
}

func (i S3LogsConfigArgs) ToS3LogsConfigPtrOutput() S3LogsConfigPtrOutput {
	return i.ToS3LogsConfigPtrOutputWithContext(context.Background())
}

func (i S3LogsConfigArgs) ToS3LogsConfigPtrOutputWithContext(ctx context.Context) S3LogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LogsConfigOutput).ToS3LogsConfigPtrOutputWithContext(ctx)
}

// S3LogsConfigPtrInput is an input type that accepts S3LogsConfigArgs, S3LogsConfigPtr and S3LogsConfigPtrOutput values.
// You can construct a concrete instance of `S3LogsConfigPtrInput` via:
//
//	        S3LogsConfigArgs{...}
//
//	or:
//
//	        nil
type S3LogsConfigPtrInput interface {
	pulumi.Input

	ToS3LogsConfigPtrOutput() S3LogsConfigPtrOutput
	ToS3LogsConfigPtrOutputWithContext(context.Context) S3LogsConfigPtrOutput
}

type s3logsConfigPtrType S3LogsConfigArgs

func S3LogsConfigPtr(v *S3LogsConfigArgs) S3LogsConfigPtrInput {
	return (*s3logsConfigPtrType)(v)
}

func (*s3logsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3LogsConfig)(nil)).Elem()
}

func (i *s3logsConfigPtrType) ToS3LogsConfigPtrOutput() S3LogsConfigPtrOutput {
	return i.ToS3LogsConfigPtrOutputWithContext(context.Background())
}

func (i *s3logsConfigPtrType) ToS3LogsConfigPtrOutputWithContext(ctx context.Context) S3LogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LogsConfigPtrOutput)
}

// Definition of S3LogsConfig
type S3LogsConfigOutput struct{ *pulumi.OutputState }

func (S3LogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3LogsConfig)(nil)).Elem()
}

func (o S3LogsConfigOutput) ToS3LogsConfigOutput() S3LogsConfigOutput {
	return o
}

func (o S3LogsConfigOutput) ToS3LogsConfigOutputWithContext(ctx context.Context) S3LogsConfigOutput {
	return o
}

func (o S3LogsConfigOutput) ToS3LogsConfigPtrOutput() S3LogsConfigPtrOutput {
	return o.ToS3LogsConfigPtrOutputWithContext(context.Background())
}

func (o S3LogsConfigOutput) ToS3LogsConfigPtrOutputWithContext(ctx context.Context) S3LogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3LogsConfig) *S3LogsConfig {
		return &v
	}).(S3LogsConfigPtrOutput)
}

// Property bucketOwnerAccess
func (o S3LogsConfigOutput) BucketOwnerAccess() BucketOwnerAccessEnumValuePtrOutput {
	return o.ApplyT(func(v S3LogsConfig) *BucketOwnerAccessEnumValue { return v.BucketOwnerAccess }).(BucketOwnerAccessEnumValuePtrOutput)
}

// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
func (o S3LogsConfigOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3LogsConfig) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
func (o S3LogsConfigOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3LogsConfig) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
func (o S3LogsConfigOutput) Status() LogsConfigStatusTypeEnumValuePtrOutput {
	return o.ApplyT(func(v S3LogsConfig) *LogsConfigStatusTypeEnumValue { return v.Status }).(LogsConfigStatusTypeEnumValuePtrOutput)
}

type S3LogsConfigPtrOutput struct{ *pulumi.OutputState }

func (S3LogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3LogsConfig)(nil)).Elem()
}

func (o S3LogsConfigPtrOutput) ToS3LogsConfigPtrOutput() S3LogsConfigPtrOutput {
	return o
}

func (o S3LogsConfigPtrOutput) ToS3LogsConfigPtrOutputWithContext(ctx context.Context) S3LogsConfigPtrOutput {
	return o
}

func (o S3LogsConfigPtrOutput) Elem() S3LogsConfigOutput {
	return o.ApplyT(func(v *S3LogsConfig) S3LogsConfig {
		if v != nil {
			return *v
		}
		var ret S3LogsConfig
		return ret
	}).(S3LogsConfigOutput)
}

// Property bucketOwnerAccess
func (o S3LogsConfigPtrOutput) BucketOwnerAccess() BucketOwnerAccessEnumValuePtrOutput {
	return o.ApplyT(func(v *S3LogsConfig) *BucketOwnerAccessEnumValue {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccess
	}).(BucketOwnerAccessEnumValuePtrOutput)
}

// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
func (o S3LogsConfigPtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3LogsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
func (o S3LogsConfigPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3LogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
func (o S3LogsConfigPtrOutput) Status() LogsConfigStatusTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *S3LogsConfig) *LogsConfigStatusTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Status
	}).(LogsConfigStatusTypeEnumValuePtrOutput)
}

// Definition of S3LogsConfig
type S3LogsConfigResponse struct {
	// Property bucketOwnerAccess
	BucketOwnerAccess *BucketOwnerAccessEnumValueResponse `pulumi:"bucketOwnerAccess"`
	// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
	EncryptionDisabled *bool `pulumi:"encryptionDisabled"`
	// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
	Location *string `pulumi:"location"`
	// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
	Status *LogsConfigStatusTypeEnumValueResponse `pulumi:"status"`
}

// Definition of S3LogsConfig
type S3LogsConfigResponseOutput struct{ *pulumi.OutputState }

func (S3LogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3LogsConfigResponse)(nil)).Elem()
}

func (o S3LogsConfigResponseOutput) ToS3LogsConfigResponseOutput() S3LogsConfigResponseOutput {
	return o
}

func (o S3LogsConfigResponseOutput) ToS3LogsConfigResponseOutputWithContext(ctx context.Context) S3LogsConfigResponseOutput {
	return o
}

// Property bucketOwnerAccess
func (o S3LogsConfigResponseOutput) BucketOwnerAccess() BucketOwnerAccessEnumValueResponsePtrOutput {
	return o.ApplyT(func(v S3LogsConfigResponse) *BucketOwnerAccessEnumValueResponse { return v.BucketOwnerAccess }).(BucketOwnerAccessEnumValueResponsePtrOutput)
}

// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
func (o S3LogsConfigResponseOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3LogsConfigResponse) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
func (o S3LogsConfigResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3LogsConfigResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
func (o S3LogsConfigResponseOutput) Status() LogsConfigStatusTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v S3LogsConfigResponse) *LogsConfigStatusTypeEnumValueResponse { return v.Status }).(LogsConfigStatusTypeEnumValueResponsePtrOutput)
}

type S3LogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (S3LogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3LogsConfigResponse)(nil)).Elem()
}

func (o S3LogsConfigResponsePtrOutput) ToS3LogsConfigResponsePtrOutput() S3LogsConfigResponsePtrOutput {
	return o
}

func (o S3LogsConfigResponsePtrOutput) ToS3LogsConfigResponsePtrOutputWithContext(ctx context.Context) S3LogsConfigResponsePtrOutput {
	return o
}

func (o S3LogsConfigResponsePtrOutput) Elem() S3LogsConfigResponseOutput {
	return o.ApplyT(func(v *S3LogsConfigResponse) S3LogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret S3LogsConfigResponse
		return ret
	}).(S3LogsConfigResponseOutput)
}

// Property bucketOwnerAccess
func (o S3LogsConfigResponsePtrOutput) BucketOwnerAccess() BucketOwnerAccessEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *S3LogsConfigResponse) *BucketOwnerAccessEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccess
	}).(BucketOwnerAccessEnumValueResponsePtrOutput)
}

// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
func (o S3LogsConfigResponsePtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3LogsConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>
func (o S3LogsConfigResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3LogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build project.</p> </li> </ul>
func (o S3LogsConfigResponsePtrOutput) Status() LogsConfigStatusTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *S3LogsConfigResponse) *LogsConfigStatusTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Status
	}).(LogsConfigStatusTypeEnumValueResponsePtrOutput)
}

// Definition of S3OriginConfig
type S3OriginConfigResponse struct {
	// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is: origin-access-identity/cloudfront/*ID-of-origin-access-identity*  where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you created the origin access identity. If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty ``OriginAccessIdentity`` element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. For more information about the origin access identity, see [Serving Private Content through CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	OriginAccessIdentity *string `pulumi:"originAccessIdentity"`
}

// Definition of S3OriginConfig
type S3OriginConfigResponseOutput struct{ *pulumi.OutputState }

func (S3OriginConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3OriginConfigResponse)(nil)).Elem()
}

func (o S3OriginConfigResponseOutput) ToS3OriginConfigResponseOutput() S3OriginConfigResponseOutput {
	return o
}

func (o S3OriginConfigResponseOutput) ToS3OriginConfigResponseOutputWithContext(ctx context.Context) S3OriginConfigResponseOutput {
	return o
}

// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is: origin-access-identity/cloudfront/*ID-of-origin-access-identity*  where “ID-of-origin-access-identity“ is the value that CloudFront returned in the “ID“ element when you created the origin access identity. If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty “OriginAccessIdentity“ element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty “OriginAccessIdentity“ element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. For more information about the origin access identity, see [Serving Private Content through CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o S3OriginConfigResponseOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3OriginConfigResponse) *string { return v.OriginAccessIdentity }).(pulumi.StringPtrOutput)
}

type S3OriginConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (S3OriginConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3OriginConfigResponse)(nil)).Elem()
}

func (o S3OriginConfigResponsePtrOutput) ToS3OriginConfigResponsePtrOutput() S3OriginConfigResponsePtrOutput {
	return o
}

func (o S3OriginConfigResponsePtrOutput) ToS3OriginConfigResponsePtrOutputWithContext(ctx context.Context) S3OriginConfigResponsePtrOutput {
	return o
}

func (o S3OriginConfigResponsePtrOutput) Elem() S3OriginConfigResponseOutput {
	return o.ApplyT(func(v *S3OriginConfigResponse) S3OriginConfigResponse {
		if v != nil {
			return *v
		}
		var ret S3OriginConfigResponse
		return ret
	}).(S3OriginConfigResponseOutput)
}

// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is: origin-access-identity/cloudfront/*ID-of-origin-access-identity*  where “ID-of-origin-access-identity“ is the value that CloudFront returned in the “ID“ element when you created the origin access identity. If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty “OriginAccessIdentity“ element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty “OriginAccessIdentity“ element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. For more information about the origin access identity, see [Serving Private Content through CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o S3OriginConfigResponsePtrOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3OriginConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginAccessIdentity
	}).(pulumi.StringPtrOutput)
}

// Definition of S3WordsList
type S3WordsList struct {
	// Property bucketName
	BucketName *string `pulumi:"bucketName"`
	// Property objectKey
	ObjectKey *string `pulumi:"objectKey"`
}

// S3WordsListInput is an input type that accepts S3WordsListArgs and S3WordsListOutput values.
// You can construct a concrete instance of `S3WordsListInput` via:
//
//	S3WordsListArgs{...}
type S3WordsListInput interface {
	pulumi.Input

	ToS3WordsListOutput() S3WordsListOutput
	ToS3WordsListOutputWithContext(context.Context) S3WordsListOutput
}

// Definition of S3WordsList
type S3WordsListArgs struct {
	// Property bucketName
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Property objectKey
	ObjectKey pulumi.StringPtrInput `pulumi:"objectKey"`
}

func (S3WordsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3WordsList)(nil)).Elem()
}

func (i S3WordsListArgs) ToS3WordsListOutput() S3WordsListOutput {
	return i.ToS3WordsListOutputWithContext(context.Background())
}

func (i S3WordsListArgs) ToS3WordsListOutputWithContext(ctx context.Context) S3WordsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3WordsListOutput)
}

func (i S3WordsListArgs) ToS3WordsListPtrOutput() S3WordsListPtrOutput {
	return i.ToS3WordsListPtrOutputWithContext(context.Background())
}

func (i S3WordsListArgs) ToS3WordsListPtrOutputWithContext(ctx context.Context) S3WordsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3WordsListOutput).ToS3WordsListPtrOutputWithContext(ctx)
}

// S3WordsListPtrInput is an input type that accepts S3WordsListArgs, S3WordsListPtr and S3WordsListPtrOutput values.
// You can construct a concrete instance of `S3WordsListPtrInput` via:
//
//	        S3WordsListArgs{...}
//
//	or:
//
//	        nil
type S3WordsListPtrInput interface {
	pulumi.Input

	ToS3WordsListPtrOutput() S3WordsListPtrOutput
	ToS3WordsListPtrOutputWithContext(context.Context) S3WordsListPtrOutput
}

type s3wordsListPtrType S3WordsListArgs

func S3WordsListPtr(v *S3WordsListArgs) S3WordsListPtrInput {
	return (*s3wordsListPtrType)(v)
}

func (*s3wordsListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3WordsList)(nil)).Elem()
}

func (i *s3wordsListPtrType) ToS3WordsListPtrOutput() S3WordsListPtrOutput {
	return i.ToS3WordsListPtrOutputWithContext(context.Background())
}

func (i *s3wordsListPtrType) ToS3WordsListPtrOutputWithContext(ctx context.Context) S3WordsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3WordsListPtrOutput)
}

// Definition of S3WordsList
type S3WordsListOutput struct{ *pulumi.OutputState }

func (S3WordsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3WordsList)(nil)).Elem()
}

func (o S3WordsListOutput) ToS3WordsListOutput() S3WordsListOutput {
	return o
}

func (o S3WordsListOutput) ToS3WordsListOutputWithContext(ctx context.Context) S3WordsListOutput {
	return o
}

func (o S3WordsListOutput) ToS3WordsListPtrOutput() S3WordsListPtrOutput {
	return o.ToS3WordsListPtrOutputWithContext(context.Background())
}

func (o S3WordsListOutput) ToS3WordsListPtrOutputWithContext(ctx context.Context) S3WordsListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3WordsList) *S3WordsList {
		return &v
	}).(S3WordsListPtrOutput)
}

// Property bucketName
func (o S3WordsListOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3WordsList) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Property objectKey
func (o S3WordsListOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3WordsList) *string { return v.ObjectKey }).(pulumi.StringPtrOutput)
}

type S3WordsListPtrOutput struct{ *pulumi.OutputState }

func (S3WordsListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3WordsList)(nil)).Elem()
}

func (o S3WordsListPtrOutput) ToS3WordsListPtrOutput() S3WordsListPtrOutput {
	return o
}

func (o S3WordsListPtrOutput) ToS3WordsListPtrOutputWithContext(ctx context.Context) S3WordsListPtrOutput {
	return o
}

func (o S3WordsListPtrOutput) Elem() S3WordsListOutput {
	return o.ApplyT(func(v *S3WordsList) S3WordsList {
		if v != nil {
			return *v
		}
		var ret S3WordsList
		return ret
	}).(S3WordsListOutput)
}

// Property bucketName
func (o S3WordsListPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3WordsList) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Property objectKey
func (o S3WordsListPtrOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3WordsList) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKey
	}).(pulumi.StringPtrOutput)
}

// Definition of S3WordsList
type S3WordsListResponse struct {
	// Property bucketName
	BucketName *string `pulumi:"bucketName"`
	// Property objectKey
	ObjectKey *string `pulumi:"objectKey"`
}

// Definition of S3WordsList
type S3WordsListResponseOutput struct{ *pulumi.OutputState }

func (S3WordsListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3WordsListResponse)(nil)).Elem()
}

func (o S3WordsListResponseOutput) ToS3WordsListResponseOutput() S3WordsListResponseOutput {
	return o
}

func (o S3WordsListResponseOutput) ToS3WordsListResponseOutputWithContext(ctx context.Context) S3WordsListResponseOutput {
	return o
}

// Property bucketName
func (o S3WordsListResponseOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3WordsListResponse) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Property objectKey
func (o S3WordsListResponseOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3WordsListResponse) *string { return v.ObjectKey }).(pulumi.StringPtrOutput)
}

type S3WordsListResponsePtrOutput struct{ *pulumi.OutputState }

func (S3WordsListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3WordsListResponse)(nil)).Elem()
}

func (o S3WordsListResponsePtrOutput) ToS3WordsListResponsePtrOutput() S3WordsListResponsePtrOutput {
	return o
}

func (o S3WordsListResponsePtrOutput) ToS3WordsListResponsePtrOutputWithContext(ctx context.Context) S3WordsListResponsePtrOutput {
	return o
}

func (o S3WordsListResponsePtrOutput) Elem() S3WordsListResponseOutput {
	return o.ApplyT(func(v *S3WordsListResponse) S3WordsListResponse {
		if v != nil {
			return *v
		}
		var ret S3WordsListResponse
		return ret
	}).(S3WordsListResponseOutput)
}

// Property bucketName
func (o S3WordsListResponsePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3WordsListResponse) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Property objectKey
func (o S3WordsListResponsePtrOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3WordsListResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKey
	}).(pulumi.StringPtrOutput)
}

// Definition of SAMLIdp
type SAMLIdp struct {
	// <p>The unique entity ID of the application in the SAML identity provider.</p>
	EntityId *string `pulumi:"entityId"`
	// <p>The metadata of the SAML application, in XML format.</p>
	MetadataContent *string `pulumi:"metadataContent"`
}

// SAMLIdpInput is an input type that accepts SAMLIdpArgs and SAMLIdpOutput values.
// You can construct a concrete instance of `SAMLIdpInput` via:
//
//	SAMLIdpArgs{...}
type SAMLIdpInput interface {
	pulumi.Input

	ToSAMLIdpOutput() SAMLIdpOutput
	ToSAMLIdpOutputWithContext(context.Context) SAMLIdpOutput
}

// Definition of SAMLIdp
type SAMLIdpArgs struct {
	// <p>The unique entity ID of the application in the SAML identity provider.</p>
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// <p>The metadata of the SAML application, in XML format.</p>
	MetadataContent pulumi.StringPtrInput `pulumi:"metadataContent"`
}

func (SAMLIdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLIdp)(nil)).Elem()
}

func (i SAMLIdpArgs) ToSAMLIdpOutput() SAMLIdpOutput {
	return i.ToSAMLIdpOutputWithContext(context.Background())
}

func (i SAMLIdpArgs) ToSAMLIdpOutputWithContext(ctx context.Context) SAMLIdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLIdpOutput)
}

func (i SAMLIdpArgs) ToSAMLIdpPtrOutput() SAMLIdpPtrOutput {
	return i.ToSAMLIdpPtrOutputWithContext(context.Background())
}

func (i SAMLIdpArgs) ToSAMLIdpPtrOutputWithContext(ctx context.Context) SAMLIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLIdpOutput).ToSAMLIdpPtrOutputWithContext(ctx)
}

// SAMLIdpPtrInput is an input type that accepts SAMLIdpArgs, SAMLIdpPtr and SAMLIdpPtrOutput values.
// You can construct a concrete instance of `SAMLIdpPtrInput` via:
//
//	        SAMLIdpArgs{...}
//
//	or:
//
//	        nil
type SAMLIdpPtrInput interface {
	pulumi.Input

	ToSAMLIdpPtrOutput() SAMLIdpPtrOutput
	ToSAMLIdpPtrOutputWithContext(context.Context) SAMLIdpPtrOutput
}

type samlidpPtrType SAMLIdpArgs

func SAMLIdpPtr(v *SAMLIdpArgs) SAMLIdpPtrInput {
	return (*samlidpPtrType)(v)
}

func (*samlidpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLIdp)(nil)).Elem()
}

func (i *samlidpPtrType) ToSAMLIdpPtrOutput() SAMLIdpPtrOutput {
	return i.ToSAMLIdpPtrOutputWithContext(context.Background())
}

func (i *samlidpPtrType) ToSAMLIdpPtrOutputWithContext(ctx context.Context) SAMLIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLIdpPtrOutput)
}

// Definition of SAMLIdp
type SAMLIdpOutput struct{ *pulumi.OutputState }

func (SAMLIdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLIdp)(nil)).Elem()
}

func (o SAMLIdpOutput) ToSAMLIdpOutput() SAMLIdpOutput {
	return o
}

func (o SAMLIdpOutput) ToSAMLIdpOutputWithContext(ctx context.Context) SAMLIdpOutput {
	return o
}

func (o SAMLIdpOutput) ToSAMLIdpPtrOutput() SAMLIdpPtrOutput {
	return o.ToSAMLIdpPtrOutputWithContext(context.Background())
}

func (o SAMLIdpOutput) ToSAMLIdpPtrOutputWithContext(ctx context.Context) SAMLIdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAMLIdp) *SAMLIdp {
		return &v
	}).(SAMLIdpPtrOutput)
}

// <p>The unique entity ID of the application in the SAML identity provider.</p>
func (o SAMLIdpOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLIdp) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// <p>The metadata of the SAML application, in XML format.</p>
func (o SAMLIdpOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLIdp) *string { return v.MetadataContent }).(pulumi.StringPtrOutput)
}

type SAMLIdpPtrOutput struct{ *pulumi.OutputState }

func (SAMLIdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLIdp)(nil)).Elem()
}

func (o SAMLIdpPtrOutput) ToSAMLIdpPtrOutput() SAMLIdpPtrOutput {
	return o
}

func (o SAMLIdpPtrOutput) ToSAMLIdpPtrOutputWithContext(ctx context.Context) SAMLIdpPtrOutput {
	return o
}

func (o SAMLIdpPtrOutput) Elem() SAMLIdpOutput {
	return o.ApplyT(func(v *SAMLIdp) SAMLIdp {
		if v != nil {
			return *v
		}
		var ret SAMLIdp
		return ret
	}).(SAMLIdpOutput)
}

// <p>The unique entity ID of the application in the SAML identity provider.</p>
func (o SAMLIdpPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLIdp) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// <p>The metadata of the SAML application, in XML format.</p>
func (o SAMLIdpPtrOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLIdp) *string {
		if v == nil {
			return nil
		}
		return v.MetadataContent
	}).(pulumi.StringPtrOutput)
}

// Definition of SAMLIdp
type SAMLIdpResponse struct {
	// <p>The unique entity ID of the application in the SAML identity provider.</p>
	EntityId *string `pulumi:"entityId"`
	// <p>The metadata of the SAML application, in XML format.</p>
	MetadataContent *string `pulumi:"metadataContent"`
}

// Definition of SAMLIdp
type SAMLIdpResponseOutput struct{ *pulumi.OutputState }

func (SAMLIdpResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLIdpResponse)(nil)).Elem()
}

func (o SAMLIdpResponseOutput) ToSAMLIdpResponseOutput() SAMLIdpResponseOutput {
	return o
}

func (o SAMLIdpResponseOutput) ToSAMLIdpResponseOutputWithContext(ctx context.Context) SAMLIdpResponseOutput {
	return o
}

// <p>The unique entity ID of the application in the SAML identity provider.</p>
func (o SAMLIdpResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLIdpResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// <p>The metadata of the SAML application, in XML format.</p>
func (o SAMLIdpResponseOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLIdpResponse) *string { return v.MetadataContent }).(pulumi.StringPtrOutput)
}

type SAMLIdpResponsePtrOutput struct{ *pulumi.OutputState }

func (SAMLIdpResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLIdpResponse)(nil)).Elem()
}

func (o SAMLIdpResponsePtrOutput) ToSAMLIdpResponsePtrOutput() SAMLIdpResponsePtrOutput {
	return o
}

func (o SAMLIdpResponsePtrOutput) ToSAMLIdpResponsePtrOutputWithContext(ctx context.Context) SAMLIdpResponsePtrOutput {
	return o
}

func (o SAMLIdpResponsePtrOutput) Elem() SAMLIdpResponseOutput {
	return o.ApplyT(func(v *SAMLIdpResponse) SAMLIdpResponse {
		if v != nil {
			return *v
		}
		var ret SAMLIdpResponse
		return ret
	}).(SAMLIdpResponseOutput)
}

// <p>The unique entity ID of the application in the SAML identity provider.</p>
func (o SAMLIdpResponsePtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLIdpResponse) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// <p>The metadata of the SAML application, in XML format.</p>
func (o SAMLIdpResponsePtrOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLIdpResponse) *string {
		if v == nil {
			return nil
		}
		return v.MetadataContent
	}).(pulumi.StringPtrOutput)
}

// Definition of SAMLOptionsOutput
type SAMLOptionsOutput struct {
	// <p>True if SAML is enabled.</p>
	Enabled *bool `pulumi:"enabled"`
	// <p>Describes the SAML identity provider's information.</p>
	Idp *SAMLIdp `pulumi:"idp"`
	// <p>The key used for matching the SAML roles attribute.</p>
	RolesKey *string `pulumi:"rolesKey"`
	// <p>The duration, in minutes, after which a user session becomes inactive.</p>
	SessionTimeoutMinutes *int `pulumi:"sessionTimeoutMinutes"`
	// <p>The key used for matching the SAML subject attribute.</p>
	SubjectKey *string `pulumi:"subjectKey"`
}

// SAMLOptionsOutputInput is an input type that accepts SAMLOptionsOutputArgs and SAMLOptionsOutputOutput values.
// You can construct a concrete instance of `SAMLOptionsOutputInput` via:
//
//	SAMLOptionsOutputArgs{...}
type SAMLOptionsOutputInput interface {
	pulumi.Input

	ToSAMLOptionsOutputOutput() SAMLOptionsOutputOutput
	ToSAMLOptionsOutputOutputWithContext(context.Context) SAMLOptionsOutputOutput
}

// Definition of SAMLOptionsOutput
type SAMLOptionsOutputArgs struct {
	// <p>True if SAML is enabled.</p>
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// <p>Describes the SAML identity provider's information.</p>
	Idp SAMLIdpPtrInput `pulumi:"idp"`
	// <p>The key used for matching the SAML roles attribute.</p>
	RolesKey pulumi.StringPtrInput `pulumi:"rolesKey"`
	// <p>The duration, in minutes, after which a user session becomes inactive.</p>
	SessionTimeoutMinutes pulumi.IntPtrInput `pulumi:"sessionTimeoutMinutes"`
	// <p>The key used for matching the SAML subject attribute.</p>
	SubjectKey pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (SAMLOptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLOptionsOutput)(nil)).Elem()
}

func (i SAMLOptionsOutputArgs) ToSAMLOptionsOutputOutput() SAMLOptionsOutputOutput {
	return i.ToSAMLOptionsOutputOutputWithContext(context.Background())
}

func (i SAMLOptionsOutputArgs) ToSAMLOptionsOutputOutputWithContext(ctx context.Context) SAMLOptionsOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLOptionsOutputOutput)
}

func (i SAMLOptionsOutputArgs) ToSAMLOptionsOutputPtrOutput() SAMLOptionsOutputPtrOutput {
	return i.ToSAMLOptionsOutputPtrOutputWithContext(context.Background())
}

func (i SAMLOptionsOutputArgs) ToSAMLOptionsOutputPtrOutputWithContext(ctx context.Context) SAMLOptionsOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLOptionsOutputOutput).ToSAMLOptionsOutputPtrOutputWithContext(ctx)
}

// SAMLOptionsOutputPtrInput is an input type that accepts SAMLOptionsOutputArgs, SAMLOptionsOutputPtr and SAMLOptionsOutputPtrOutput values.
// You can construct a concrete instance of `SAMLOptionsOutputPtrInput` via:
//
//	        SAMLOptionsOutputArgs{...}
//
//	or:
//
//	        nil
type SAMLOptionsOutputPtrInput interface {
	pulumi.Input

	ToSAMLOptionsOutputPtrOutput() SAMLOptionsOutputPtrOutput
	ToSAMLOptionsOutputPtrOutputWithContext(context.Context) SAMLOptionsOutputPtrOutput
}

type samloptionsOutputPtrType SAMLOptionsOutputArgs

func SAMLOptionsOutputPtr(v *SAMLOptionsOutputArgs) SAMLOptionsOutputPtrInput {
	return (*samloptionsOutputPtrType)(v)
}

func (*samloptionsOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLOptionsOutput)(nil)).Elem()
}

func (i *samloptionsOutputPtrType) ToSAMLOptionsOutputPtrOutput() SAMLOptionsOutputPtrOutput {
	return i.ToSAMLOptionsOutputPtrOutputWithContext(context.Background())
}

func (i *samloptionsOutputPtrType) ToSAMLOptionsOutputPtrOutputWithContext(ctx context.Context) SAMLOptionsOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLOptionsOutputPtrOutput)
}

// Definition of SAMLOptionsOutput
type SAMLOptionsOutputOutput struct{ *pulumi.OutputState }

func (SAMLOptionsOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLOptionsOutput)(nil)).Elem()
}

func (o SAMLOptionsOutputOutput) ToSAMLOptionsOutputOutput() SAMLOptionsOutputOutput {
	return o
}

func (o SAMLOptionsOutputOutput) ToSAMLOptionsOutputOutputWithContext(ctx context.Context) SAMLOptionsOutputOutput {
	return o
}

func (o SAMLOptionsOutputOutput) ToSAMLOptionsOutputPtrOutput() SAMLOptionsOutputPtrOutput {
	return o.ToSAMLOptionsOutputPtrOutputWithContext(context.Background())
}

func (o SAMLOptionsOutputOutput) ToSAMLOptionsOutputPtrOutputWithContext(ctx context.Context) SAMLOptionsOutputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAMLOptionsOutput) *SAMLOptionsOutput {
		return &v
	}).(SAMLOptionsOutputPtrOutput)
}

// <p>True if SAML is enabled.</p>
func (o SAMLOptionsOutputOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutput) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// <p>Describes the SAML identity provider's information.</p>
func (o SAMLOptionsOutputOutput) Idp() SAMLIdpPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutput) *SAMLIdp { return v.Idp }).(SAMLIdpPtrOutput)
}

// <p>The key used for matching the SAML roles attribute.</p>
func (o SAMLOptionsOutputOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutput) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

// <p>The duration, in minutes, after which a user session becomes inactive.</p>
func (o SAMLOptionsOutputOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutput) *int { return v.SessionTimeoutMinutes }).(pulumi.IntPtrOutput)
}

// <p>The key used for matching the SAML subject attribute.</p>
func (o SAMLOptionsOutputOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutput) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type SAMLOptionsOutputPtrOutput struct{ *pulumi.OutputState }

func (SAMLOptionsOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLOptionsOutput)(nil)).Elem()
}

func (o SAMLOptionsOutputPtrOutput) ToSAMLOptionsOutputPtrOutput() SAMLOptionsOutputPtrOutput {
	return o
}

func (o SAMLOptionsOutputPtrOutput) ToSAMLOptionsOutputPtrOutputWithContext(ctx context.Context) SAMLOptionsOutputPtrOutput {
	return o
}

func (o SAMLOptionsOutputPtrOutput) Elem() SAMLOptionsOutputOutput {
	return o.ApplyT(func(v *SAMLOptionsOutput) SAMLOptionsOutput {
		if v != nil {
			return *v
		}
		var ret SAMLOptionsOutput
		return ret
	}).(SAMLOptionsOutputOutput)
}

// <p>True if SAML is enabled.</p>
func (o SAMLOptionsOutputPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutput) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// <p>Describes the SAML identity provider's information.</p>
func (o SAMLOptionsOutputPtrOutput) Idp() SAMLIdpPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutput) *SAMLIdp {
		if v == nil {
			return nil
		}
		return v.Idp
	}).(SAMLIdpPtrOutput)
}

// <p>The key used for matching the SAML roles attribute.</p>
func (o SAMLOptionsOutputPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutput) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

// <p>The duration, in minutes, after which a user session becomes inactive.</p>
func (o SAMLOptionsOutputPtrOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutput) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

// <p>The key used for matching the SAML subject attribute.</p>
func (o SAMLOptionsOutputPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutput) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

// Definition of SAMLOptionsOutput
type SAMLOptionsOutputResponse struct {
	// <p>True if SAML is enabled.</p>
	Enabled *bool `pulumi:"enabled"`
	// <p>Describes the SAML identity provider's information.</p>
	Idp *SAMLIdpResponse `pulumi:"idp"`
	// <p>The key used for matching the SAML roles attribute.</p>
	RolesKey *string `pulumi:"rolesKey"`
	// <p>The duration, in minutes, after which a user session becomes inactive.</p>
	SessionTimeoutMinutes *int `pulumi:"sessionTimeoutMinutes"`
	// <p>The key used for matching the SAML subject attribute.</p>
	SubjectKey *string `pulumi:"subjectKey"`
}

// Definition of SAMLOptionsOutput
type SAMLOptionsOutputResponseOutput struct{ *pulumi.OutputState }

func (SAMLOptionsOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLOptionsOutputResponse)(nil)).Elem()
}

func (o SAMLOptionsOutputResponseOutput) ToSAMLOptionsOutputResponseOutput() SAMLOptionsOutputResponseOutput {
	return o
}

func (o SAMLOptionsOutputResponseOutput) ToSAMLOptionsOutputResponseOutputWithContext(ctx context.Context) SAMLOptionsOutputResponseOutput {
	return o
}

// <p>True if SAML is enabled.</p>
func (o SAMLOptionsOutputResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutputResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// <p>Describes the SAML identity provider's information.</p>
func (o SAMLOptionsOutputResponseOutput) Idp() SAMLIdpResponsePtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutputResponse) *SAMLIdpResponse { return v.Idp }).(SAMLIdpResponsePtrOutput)
}

// <p>The key used for matching the SAML roles attribute.</p>
func (o SAMLOptionsOutputResponseOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutputResponse) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

// <p>The duration, in minutes, after which a user session becomes inactive.</p>
func (o SAMLOptionsOutputResponseOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutputResponse) *int { return v.SessionTimeoutMinutes }).(pulumi.IntPtrOutput)
}

// <p>The key used for matching the SAML subject attribute.</p>
func (o SAMLOptionsOutputResponseOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLOptionsOutputResponse) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type SAMLOptionsOutputResponsePtrOutput struct{ *pulumi.OutputState }

func (SAMLOptionsOutputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLOptionsOutputResponse)(nil)).Elem()
}

func (o SAMLOptionsOutputResponsePtrOutput) ToSAMLOptionsOutputResponsePtrOutput() SAMLOptionsOutputResponsePtrOutput {
	return o
}

func (o SAMLOptionsOutputResponsePtrOutput) ToSAMLOptionsOutputResponsePtrOutputWithContext(ctx context.Context) SAMLOptionsOutputResponsePtrOutput {
	return o
}

func (o SAMLOptionsOutputResponsePtrOutput) Elem() SAMLOptionsOutputResponseOutput {
	return o.ApplyT(func(v *SAMLOptionsOutputResponse) SAMLOptionsOutputResponse {
		if v != nil {
			return *v
		}
		var ret SAMLOptionsOutputResponse
		return ret
	}).(SAMLOptionsOutputResponseOutput)
}

// <p>True if SAML is enabled.</p>
func (o SAMLOptionsOutputResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// <p>Describes the SAML identity provider's information.</p>
func (o SAMLOptionsOutputResponsePtrOutput) Idp() SAMLIdpResponsePtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutputResponse) *SAMLIdpResponse {
		if v == nil {
			return nil
		}
		return v.Idp
	}).(SAMLIdpResponsePtrOutput)
}

// <p>The key used for matching the SAML roles attribute.</p>
func (o SAMLOptionsOutputResponsePtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

// <p>The duration, in minutes, after which a user session becomes inactive.</p>
func (o SAMLOptionsOutputResponsePtrOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutputResponse) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

// <p>The key used for matching the SAML subject attribute.</p>
func (o SAMLOptionsOutputResponsePtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLOptionsOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

// Definition of SSEDescription
type SSEDescription struct {
	// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
	Status *SSEStatusEnumValue `pulumi:"status"`
}

// SSEDescriptionInput is an input type that accepts SSEDescriptionArgs and SSEDescriptionOutput values.
// You can construct a concrete instance of `SSEDescriptionInput` via:
//
//	SSEDescriptionArgs{...}
type SSEDescriptionInput interface {
	pulumi.Input

	ToSSEDescriptionOutput() SSEDescriptionOutput
	ToSSEDescriptionOutputWithContext(context.Context) SSEDescriptionOutput
}

// Definition of SSEDescription
type SSEDescriptionArgs struct {
	// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
	Status SSEStatusEnumValuePtrInput `pulumi:"status"`
}

func (SSEDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSEDescription)(nil)).Elem()
}

func (i SSEDescriptionArgs) ToSSEDescriptionOutput() SSEDescriptionOutput {
	return i.ToSSEDescriptionOutputWithContext(context.Background())
}

func (i SSEDescriptionArgs) ToSSEDescriptionOutputWithContext(ctx context.Context) SSEDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSEDescriptionOutput)
}

func (i SSEDescriptionArgs) ToSSEDescriptionPtrOutput() SSEDescriptionPtrOutput {
	return i.ToSSEDescriptionPtrOutputWithContext(context.Background())
}

func (i SSEDescriptionArgs) ToSSEDescriptionPtrOutputWithContext(ctx context.Context) SSEDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSEDescriptionOutput).ToSSEDescriptionPtrOutputWithContext(ctx)
}

// SSEDescriptionPtrInput is an input type that accepts SSEDescriptionArgs, SSEDescriptionPtr and SSEDescriptionPtrOutput values.
// You can construct a concrete instance of `SSEDescriptionPtrInput` via:
//
//	        SSEDescriptionArgs{...}
//
//	or:
//
//	        nil
type SSEDescriptionPtrInput interface {
	pulumi.Input

	ToSSEDescriptionPtrOutput() SSEDescriptionPtrOutput
	ToSSEDescriptionPtrOutputWithContext(context.Context) SSEDescriptionPtrOutput
}

type ssedescriptionPtrType SSEDescriptionArgs

func SSEDescriptionPtr(v *SSEDescriptionArgs) SSEDescriptionPtrInput {
	return (*ssedescriptionPtrType)(v)
}

func (*ssedescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSEDescription)(nil)).Elem()
}

func (i *ssedescriptionPtrType) ToSSEDescriptionPtrOutput() SSEDescriptionPtrOutput {
	return i.ToSSEDescriptionPtrOutputWithContext(context.Background())
}

func (i *ssedescriptionPtrType) ToSSEDescriptionPtrOutputWithContext(ctx context.Context) SSEDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSEDescriptionPtrOutput)
}

// Definition of SSEDescription
type SSEDescriptionOutput struct{ *pulumi.OutputState }

func (SSEDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSEDescription)(nil)).Elem()
}

func (o SSEDescriptionOutput) ToSSEDescriptionOutput() SSEDescriptionOutput {
	return o
}

func (o SSEDescriptionOutput) ToSSEDescriptionOutputWithContext(ctx context.Context) SSEDescriptionOutput {
	return o
}

func (o SSEDescriptionOutput) ToSSEDescriptionPtrOutput() SSEDescriptionPtrOutput {
	return o.ToSSEDescriptionPtrOutputWithContext(context.Background())
}

func (o SSEDescriptionOutput) ToSSEDescriptionPtrOutputWithContext(ctx context.Context) SSEDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSEDescription) *SSEDescription {
		return &v
	}).(SSEDescriptionPtrOutput)
}

// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
func (o SSEDescriptionOutput) Status() SSEStatusEnumValuePtrOutput {
	return o.ApplyT(func(v SSEDescription) *SSEStatusEnumValue { return v.Status }).(SSEStatusEnumValuePtrOutput)
}

type SSEDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SSEDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSEDescription)(nil)).Elem()
}

func (o SSEDescriptionPtrOutput) ToSSEDescriptionPtrOutput() SSEDescriptionPtrOutput {
	return o
}

func (o SSEDescriptionPtrOutput) ToSSEDescriptionPtrOutputWithContext(ctx context.Context) SSEDescriptionPtrOutput {
	return o
}

func (o SSEDescriptionPtrOutput) Elem() SSEDescriptionOutput {
	return o.ApplyT(func(v *SSEDescription) SSEDescription {
		if v != nil {
			return *v
		}
		var ret SSEDescription
		return ret
	}).(SSEDescriptionOutput)
}

// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
func (o SSEDescriptionPtrOutput) Status() SSEStatusEnumValuePtrOutput {
	return o.ApplyT(func(v *SSEDescription) *SSEStatusEnumValue {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SSEStatusEnumValuePtrOutput)
}

// Definition of SSEDescription
type SSEDescriptionResponse struct {
	// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
	Status *SSEStatusEnumValueResponse `pulumi:"status"`
}

// Definition of SSEDescription
type SSEDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SSEDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSEDescriptionResponse)(nil)).Elem()
}

func (o SSEDescriptionResponseOutput) ToSSEDescriptionResponseOutput() SSEDescriptionResponseOutput {
	return o
}

func (o SSEDescriptionResponseOutput) ToSSEDescriptionResponseOutputWithContext(ctx context.Context) SSEDescriptionResponseOutput {
	return o
}

// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
func (o SSEDescriptionResponseOutput) Status() SSEStatusEnumValueResponsePtrOutput {
	return o.ApplyT(func(v SSEDescriptionResponse) *SSEStatusEnumValueResponse { return v.Status }).(SSEStatusEnumValueResponsePtrOutput)
}

type SSEDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SSEDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSEDescriptionResponse)(nil)).Elem()
}

func (o SSEDescriptionResponsePtrOutput) ToSSEDescriptionResponsePtrOutput() SSEDescriptionResponsePtrOutput {
	return o
}

func (o SSEDescriptionResponsePtrOutput) ToSSEDescriptionResponsePtrOutputWithContext(ctx context.Context) SSEDescriptionResponsePtrOutput {
	return o
}

func (o SSEDescriptionResponsePtrOutput) Elem() SSEDescriptionResponseOutput {
	return o.ApplyT(func(v *SSEDescriptionResponse) SSEDescriptionResponse {
		if v != nil {
			return *v
		}
		var ret SSEDescriptionResponse
		return ret
	}).(SSEDescriptionResponseOutput)
}

// <p>The current state of server-side encryption:</p> <ul> <li> <p> <code>ENABLING</code> - Server-side encryption is being enabled.</p> </li> <li> <p> <code>ENABLED</code> - Server-side encryption is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Server-side encryption is being disabled.</p> </li> <li> <p> <code>DISABLED</code> - Server-side encryption is disabled.</p> </li> </ul>
func (o SSEDescriptionResponsePtrOutput) Status() SSEStatusEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *SSEDescriptionResponse) *SSEStatusEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SSEStatusEnumValueResponsePtrOutput)
}

// Definition of SSESpecification
type SSESpecification struct {
	// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key ``alias/aws/dynamodb``.
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
	SseEnabled *bool `pulumi:"sseEnabled"`
	// Server-side encryption type. The only supported value is:  +   ``KMS`` - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
	SseType *string `pulumi:"sseType"`
}

// SSESpecificationInput is an input type that accepts SSESpecificationArgs and SSESpecificationOutput values.
// You can construct a concrete instance of `SSESpecificationInput` via:
//
//	SSESpecificationArgs{...}
type SSESpecificationInput interface {
	pulumi.Input

	ToSSESpecificationOutput() SSESpecificationOutput
	ToSSESpecificationOutputWithContext(context.Context) SSESpecificationOutput
}

// Definition of SSESpecification
type SSESpecificationArgs struct {
	// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key ``alias/aws/dynamodb``.
	KmsMasterKeyId pulumi.StringPtrInput `pulumi:"kmsMasterKeyId"`
	// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
	SseEnabled pulumi.BoolPtrInput `pulumi:"sseEnabled"`
	// Server-side encryption type. The only supported value is:  +   ``KMS`` - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
	SseType pulumi.StringPtrInput `pulumi:"sseType"`
}

func (SSESpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSESpecification)(nil)).Elem()
}

func (i SSESpecificationArgs) ToSSESpecificationOutput() SSESpecificationOutput {
	return i.ToSSESpecificationOutputWithContext(context.Background())
}

func (i SSESpecificationArgs) ToSSESpecificationOutputWithContext(ctx context.Context) SSESpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSESpecificationOutput)
}

func (i SSESpecificationArgs) ToSSESpecificationPtrOutput() SSESpecificationPtrOutput {
	return i.ToSSESpecificationPtrOutputWithContext(context.Background())
}

func (i SSESpecificationArgs) ToSSESpecificationPtrOutputWithContext(ctx context.Context) SSESpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSESpecificationOutput).ToSSESpecificationPtrOutputWithContext(ctx)
}

// SSESpecificationPtrInput is an input type that accepts SSESpecificationArgs, SSESpecificationPtr and SSESpecificationPtrOutput values.
// You can construct a concrete instance of `SSESpecificationPtrInput` via:
//
//	        SSESpecificationArgs{...}
//
//	or:
//
//	        nil
type SSESpecificationPtrInput interface {
	pulumi.Input

	ToSSESpecificationPtrOutput() SSESpecificationPtrOutput
	ToSSESpecificationPtrOutputWithContext(context.Context) SSESpecificationPtrOutput
}

type ssespecificationPtrType SSESpecificationArgs

func SSESpecificationPtr(v *SSESpecificationArgs) SSESpecificationPtrInput {
	return (*ssespecificationPtrType)(v)
}

func (*ssespecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSESpecification)(nil)).Elem()
}

func (i *ssespecificationPtrType) ToSSESpecificationPtrOutput() SSESpecificationPtrOutput {
	return i.ToSSESpecificationPtrOutputWithContext(context.Background())
}

func (i *ssespecificationPtrType) ToSSESpecificationPtrOutputWithContext(ctx context.Context) SSESpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSESpecificationPtrOutput)
}

// Definition of SSESpecification
type SSESpecificationOutput struct{ *pulumi.OutputState }

func (SSESpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSESpecification)(nil)).Elem()
}

func (o SSESpecificationOutput) ToSSESpecificationOutput() SSESpecificationOutput {
	return o
}

func (o SSESpecificationOutput) ToSSESpecificationOutputWithContext(ctx context.Context) SSESpecificationOutput {
	return o
}

func (o SSESpecificationOutput) ToSSESpecificationPtrOutput() SSESpecificationPtrOutput {
	return o.ToSSESpecificationPtrOutputWithContext(context.Background())
}

func (o SSESpecificationOutput) ToSSESpecificationPtrOutputWithContext(ctx context.Context) SSESpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSESpecification) *SSESpecification {
		return &v
	}).(SSESpecificationPtrOutput)
}

// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key “alias/aws/dynamodb“.
func (o SSESpecificationOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSESpecification) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to “KMS“ and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
func (o SSESpecificationOutput) SseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SSESpecification) *bool { return v.SseEnabled }).(pulumi.BoolPtrOutput)
}

// Server-side encryption type. The only supported value is:  +   “KMS“ - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
func (o SSESpecificationOutput) SseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSESpecification) *string { return v.SseType }).(pulumi.StringPtrOutput)
}

type SSESpecificationPtrOutput struct{ *pulumi.OutputState }

func (SSESpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSESpecification)(nil)).Elem()
}

func (o SSESpecificationPtrOutput) ToSSESpecificationPtrOutput() SSESpecificationPtrOutput {
	return o
}

func (o SSESpecificationPtrOutput) ToSSESpecificationPtrOutputWithContext(ctx context.Context) SSESpecificationPtrOutput {
	return o
}

func (o SSESpecificationPtrOutput) Elem() SSESpecificationOutput {
	return o.ApplyT(func(v *SSESpecification) SSESpecification {
		if v != nil {
			return *v
		}
		var ret SSESpecification
		return ret
	}).(SSESpecificationOutput)
}

// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key “alias/aws/dynamodb“.
func (o SSESpecificationPtrOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSESpecification) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to “KMS“ and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
func (o SSESpecificationPtrOutput) SseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SSESpecification) *bool {
		if v == nil {
			return nil
		}
		return v.SseEnabled
	}).(pulumi.BoolPtrOutput)
}

// Server-side encryption type. The only supported value is:  +   “KMS“ - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
func (o SSESpecificationPtrOutput) SseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSESpecification) *string {
		if v == nil {
			return nil
		}
		return v.SseType
	}).(pulumi.StringPtrOutput)
}

// Definition of SSESpecification
type SSESpecificationResponse struct {
	// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key ``alias/aws/dynamodb``.
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
	SseEnabled *bool `pulumi:"sseEnabled"`
	// Server-side encryption type. The only supported value is:  +   ``KMS`` - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
	SseType *string `pulumi:"sseType"`
}

// Definition of SSESpecification
type SSESpecificationResponseOutput struct{ *pulumi.OutputState }

func (SSESpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSESpecificationResponse)(nil)).Elem()
}

func (o SSESpecificationResponseOutput) ToSSESpecificationResponseOutput() SSESpecificationResponseOutput {
	return o
}

func (o SSESpecificationResponseOutput) ToSSESpecificationResponseOutputWithContext(ctx context.Context) SSESpecificationResponseOutput {
	return o
}

// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key “alias/aws/dynamodb“.
func (o SSESpecificationResponseOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSESpecificationResponse) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to “KMS“ and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
func (o SSESpecificationResponseOutput) SseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SSESpecificationResponse) *bool { return v.SseEnabled }).(pulumi.BoolPtrOutput)
}

// Server-side encryption type. The only supported value is:  +   “KMS“ - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
func (o SSESpecificationResponseOutput) SseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSESpecificationResponse) *string { return v.SseType }).(pulumi.StringPtrOutput)
}

type SSESpecificationResponsePtrOutput struct{ *pulumi.OutputState }

func (SSESpecificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSESpecificationResponse)(nil)).Elem()
}

func (o SSESpecificationResponsePtrOutput) ToSSESpecificationResponsePtrOutput() SSESpecificationResponsePtrOutput {
	return o
}

func (o SSESpecificationResponsePtrOutput) ToSSESpecificationResponsePtrOutputWithContext(ctx context.Context) SSESpecificationResponsePtrOutput {
	return o
}

func (o SSESpecificationResponsePtrOutput) Elem() SSESpecificationResponseOutput {
	return o.ApplyT(func(v *SSESpecificationResponse) SSESpecificationResponse {
		if v != nil {
			return *v
		}
		var ret SSESpecificationResponse
		return ret
	}).(SSESpecificationResponseOutput)
}

// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key “alias/aws/dynamodb“.
func (o SSESpecificationResponsePtrOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSESpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to “KMS“ and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
func (o SSESpecificationResponsePtrOutput) SseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SSESpecificationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SseEnabled
	}).(pulumi.BoolPtrOutput)
}

// Server-side encryption type. The only supported value is:  +   “KMS“ - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
func (o SSESpecificationResponsePtrOutput) SseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSESpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SseType
	}).(pulumi.StringPtrOutput)
}

// Definition of SSEStatusEnumValue
type SSEStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SSEStatusEnumValueInput is an input type that accepts SSEStatusEnumValueArgs and SSEStatusEnumValueOutput values.
// You can construct a concrete instance of `SSEStatusEnumValueInput` via:
//
//	SSEStatusEnumValueArgs{...}
type SSEStatusEnumValueInput interface {
	pulumi.Input

	ToSSEStatusEnumValueOutput() SSEStatusEnumValueOutput
	ToSSEStatusEnumValueOutputWithContext(context.Context) SSEStatusEnumValueOutput
}

// Definition of SSEStatusEnumValue
type SSEStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SSEStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSEStatusEnumValue)(nil)).Elem()
}

func (i SSEStatusEnumValueArgs) ToSSEStatusEnumValueOutput() SSEStatusEnumValueOutput {
	return i.ToSSEStatusEnumValueOutputWithContext(context.Background())
}

func (i SSEStatusEnumValueArgs) ToSSEStatusEnumValueOutputWithContext(ctx context.Context) SSEStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSEStatusEnumValueOutput)
}

func (i SSEStatusEnumValueArgs) ToSSEStatusEnumValuePtrOutput() SSEStatusEnumValuePtrOutput {
	return i.ToSSEStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i SSEStatusEnumValueArgs) ToSSEStatusEnumValuePtrOutputWithContext(ctx context.Context) SSEStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSEStatusEnumValueOutput).ToSSEStatusEnumValuePtrOutputWithContext(ctx)
}

// SSEStatusEnumValuePtrInput is an input type that accepts SSEStatusEnumValueArgs, SSEStatusEnumValuePtr and SSEStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `SSEStatusEnumValuePtrInput` via:
//
//	        SSEStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type SSEStatusEnumValuePtrInput interface {
	pulumi.Input

	ToSSEStatusEnumValuePtrOutput() SSEStatusEnumValuePtrOutput
	ToSSEStatusEnumValuePtrOutputWithContext(context.Context) SSEStatusEnumValuePtrOutput
}

type ssestatusEnumValuePtrType SSEStatusEnumValueArgs

func SSEStatusEnumValuePtr(v *SSEStatusEnumValueArgs) SSEStatusEnumValuePtrInput {
	return (*ssestatusEnumValuePtrType)(v)
}

func (*ssestatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSEStatusEnumValue)(nil)).Elem()
}

func (i *ssestatusEnumValuePtrType) ToSSEStatusEnumValuePtrOutput() SSEStatusEnumValuePtrOutput {
	return i.ToSSEStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *ssestatusEnumValuePtrType) ToSSEStatusEnumValuePtrOutputWithContext(ctx context.Context) SSEStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSEStatusEnumValuePtrOutput)
}

// Definition of SSEStatusEnumValue
type SSEStatusEnumValueOutput struct{ *pulumi.OutputState }

func (SSEStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSEStatusEnumValue)(nil)).Elem()
}

func (o SSEStatusEnumValueOutput) ToSSEStatusEnumValueOutput() SSEStatusEnumValueOutput {
	return o
}

func (o SSEStatusEnumValueOutput) ToSSEStatusEnumValueOutputWithContext(ctx context.Context) SSEStatusEnumValueOutput {
	return o
}

func (o SSEStatusEnumValueOutput) ToSSEStatusEnumValuePtrOutput() SSEStatusEnumValuePtrOutput {
	return o.ToSSEStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o SSEStatusEnumValueOutput) ToSSEStatusEnumValuePtrOutputWithContext(ctx context.Context) SSEStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSEStatusEnumValue) *SSEStatusEnumValue {
		return &v
	}).(SSEStatusEnumValuePtrOutput)
}

// Property value
func (o SSEStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSEStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SSEStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SSEStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSEStatusEnumValue)(nil)).Elem()
}

func (o SSEStatusEnumValuePtrOutput) ToSSEStatusEnumValuePtrOutput() SSEStatusEnumValuePtrOutput {
	return o
}

func (o SSEStatusEnumValuePtrOutput) ToSSEStatusEnumValuePtrOutputWithContext(ctx context.Context) SSEStatusEnumValuePtrOutput {
	return o
}

func (o SSEStatusEnumValuePtrOutput) Elem() SSEStatusEnumValueOutput {
	return o.ApplyT(func(v *SSEStatusEnumValue) SSEStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret SSEStatusEnumValue
		return ret
	}).(SSEStatusEnumValueOutput)
}

// Property value
func (o SSEStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSEStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SSEStatusEnumValue
type SSEStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SSEStatusEnumValue
type SSEStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SSEStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSEStatusEnumValueResponse)(nil)).Elem()
}

func (o SSEStatusEnumValueResponseOutput) ToSSEStatusEnumValueResponseOutput() SSEStatusEnumValueResponseOutput {
	return o
}

func (o SSEStatusEnumValueResponseOutput) ToSSEStatusEnumValueResponseOutputWithContext(ctx context.Context) SSEStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o SSEStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSEStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SSEStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SSEStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSEStatusEnumValueResponse)(nil)).Elem()
}

func (o SSEStatusEnumValueResponsePtrOutput) ToSSEStatusEnumValueResponsePtrOutput() SSEStatusEnumValueResponsePtrOutput {
	return o
}

func (o SSEStatusEnumValueResponsePtrOutput) ToSSEStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) SSEStatusEnumValueResponsePtrOutput {
	return o
}

func (o SSEStatusEnumValueResponsePtrOutput) Elem() SSEStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *SSEStatusEnumValueResponse) SSEStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SSEStatusEnumValueResponse
		return ret
	}).(SSEStatusEnumValueResponseOutput)
}

// Property value
func (o SSEStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSEStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SSETypeEnumValue
type SSETypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SSETypeEnumValueInput is an input type that accepts SSETypeEnumValueArgs and SSETypeEnumValueOutput values.
// You can construct a concrete instance of `SSETypeEnumValueInput` via:
//
//	SSETypeEnumValueArgs{...}
type SSETypeEnumValueInput interface {
	pulumi.Input

	ToSSETypeEnumValueOutput() SSETypeEnumValueOutput
	ToSSETypeEnumValueOutputWithContext(context.Context) SSETypeEnumValueOutput
}

// Definition of SSETypeEnumValue
type SSETypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SSETypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SSETypeEnumValue)(nil)).Elem()
}

func (i SSETypeEnumValueArgs) ToSSETypeEnumValueOutput() SSETypeEnumValueOutput {
	return i.ToSSETypeEnumValueOutputWithContext(context.Background())
}

func (i SSETypeEnumValueArgs) ToSSETypeEnumValueOutputWithContext(ctx context.Context) SSETypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSETypeEnumValueOutput)
}

func (i SSETypeEnumValueArgs) ToSSETypeEnumValuePtrOutput() SSETypeEnumValuePtrOutput {
	return i.ToSSETypeEnumValuePtrOutputWithContext(context.Background())
}

func (i SSETypeEnumValueArgs) ToSSETypeEnumValuePtrOutputWithContext(ctx context.Context) SSETypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSETypeEnumValueOutput).ToSSETypeEnumValuePtrOutputWithContext(ctx)
}

// SSETypeEnumValuePtrInput is an input type that accepts SSETypeEnumValueArgs, SSETypeEnumValuePtr and SSETypeEnumValuePtrOutput values.
// You can construct a concrete instance of `SSETypeEnumValuePtrInput` via:
//
//	        SSETypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type SSETypeEnumValuePtrInput interface {
	pulumi.Input

	ToSSETypeEnumValuePtrOutput() SSETypeEnumValuePtrOutput
	ToSSETypeEnumValuePtrOutputWithContext(context.Context) SSETypeEnumValuePtrOutput
}

type ssetypeEnumValuePtrType SSETypeEnumValueArgs

func SSETypeEnumValuePtr(v *SSETypeEnumValueArgs) SSETypeEnumValuePtrInput {
	return (*ssetypeEnumValuePtrType)(v)
}

func (*ssetypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SSETypeEnumValue)(nil)).Elem()
}

func (i *ssetypeEnumValuePtrType) ToSSETypeEnumValuePtrOutput() SSETypeEnumValuePtrOutput {
	return i.ToSSETypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *ssetypeEnumValuePtrType) ToSSETypeEnumValuePtrOutputWithContext(ctx context.Context) SSETypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SSETypeEnumValuePtrOutput)
}

// Definition of SSETypeEnumValue
type SSETypeEnumValueOutput struct{ *pulumi.OutputState }

func (SSETypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSETypeEnumValue)(nil)).Elem()
}

func (o SSETypeEnumValueOutput) ToSSETypeEnumValueOutput() SSETypeEnumValueOutput {
	return o
}

func (o SSETypeEnumValueOutput) ToSSETypeEnumValueOutputWithContext(ctx context.Context) SSETypeEnumValueOutput {
	return o
}

func (o SSETypeEnumValueOutput) ToSSETypeEnumValuePtrOutput() SSETypeEnumValuePtrOutput {
	return o.ToSSETypeEnumValuePtrOutputWithContext(context.Background())
}

func (o SSETypeEnumValueOutput) ToSSETypeEnumValuePtrOutputWithContext(ctx context.Context) SSETypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSETypeEnumValue) *SSETypeEnumValue {
		return &v
	}).(SSETypeEnumValuePtrOutput)
}

// Property value
func (o SSETypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSETypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SSETypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SSETypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSETypeEnumValue)(nil)).Elem()
}

func (o SSETypeEnumValuePtrOutput) ToSSETypeEnumValuePtrOutput() SSETypeEnumValuePtrOutput {
	return o
}

func (o SSETypeEnumValuePtrOutput) ToSSETypeEnumValuePtrOutputWithContext(ctx context.Context) SSETypeEnumValuePtrOutput {
	return o
}

func (o SSETypeEnumValuePtrOutput) Elem() SSETypeEnumValueOutput {
	return o.ApplyT(func(v *SSETypeEnumValue) SSETypeEnumValue {
		if v != nil {
			return *v
		}
		var ret SSETypeEnumValue
		return ret
	}).(SSETypeEnumValueOutput)
}

// Property value
func (o SSETypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSETypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SSETypeEnumValue
type SSETypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SSETypeEnumValue
type SSETypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SSETypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSETypeEnumValueResponse)(nil)).Elem()
}

func (o SSETypeEnumValueResponseOutput) ToSSETypeEnumValueResponseOutput() SSETypeEnumValueResponseOutput {
	return o
}

func (o SSETypeEnumValueResponseOutput) ToSSETypeEnumValueResponseOutputWithContext(ctx context.Context) SSETypeEnumValueResponseOutput {
	return o
}

// Property value
func (o SSETypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSETypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SSETypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SSETypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSETypeEnumValueResponse)(nil)).Elem()
}

func (o SSETypeEnumValueResponsePtrOutput) ToSSETypeEnumValueResponsePtrOutput() SSETypeEnumValueResponsePtrOutput {
	return o
}

func (o SSETypeEnumValueResponsePtrOutput) ToSSETypeEnumValueResponsePtrOutputWithContext(ctx context.Context) SSETypeEnumValueResponsePtrOutput {
	return o
}

func (o SSETypeEnumValueResponsePtrOutput) Elem() SSETypeEnumValueResponseOutput {
	return o.ApplyT(func(v *SSETypeEnumValueResponse) SSETypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SSETypeEnumValueResponse
		return ret
	}).(SSETypeEnumValueResponseOutput)
}

// Property value
func (o SSETypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SSETypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SageMakerApp
type SageMakerAppProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSageMakerAppProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SageMakerAppPropertiesInput is an input type that accepts SageMakerAppPropertiesArgs and SageMakerAppPropertiesOutput values.
// You can construct a concrete instance of `SageMakerAppPropertiesInput` via:
//
//	SageMakerAppPropertiesArgs{...}
type SageMakerAppPropertiesInput interface {
	pulumi.Input

	ToSageMakerAppPropertiesOutput() SageMakerAppPropertiesOutput
	ToSageMakerAppPropertiesOutputWithContext(context.Context) SageMakerAppPropertiesOutput
}

// Definition of SageMakerApp
type SageMakerAppPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSageMakerAppPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SageMakerAppPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SageMakerAppProperties)(nil)).Elem()
}

func (i SageMakerAppPropertiesArgs) ToSageMakerAppPropertiesOutput() SageMakerAppPropertiesOutput {
	return i.ToSageMakerAppPropertiesOutputWithContext(context.Background())
}

func (i SageMakerAppPropertiesArgs) ToSageMakerAppPropertiesOutputWithContext(ctx context.Context) SageMakerAppPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SageMakerAppPropertiesOutput)
}

func (i SageMakerAppPropertiesArgs) ToSageMakerAppPropertiesPtrOutput() SageMakerAppPropertiesPtrOutput {
	return i.ToSageMakerAppPropertiesPtrOutputWithContext(context.Background())
}

func (i SageMakerAppPropertiesArgs) ToSageMakerAppPropertiesPtrOutputWithContext(ctx context.Context) SageMakerAppPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SageMakerAppPropertiesOutput).ToSageMakerAppPropertiesPtrOutputWithContext(ctx)
}

// SageMakerAppPropertiesPtrInput is an input type that accepts SageMakerAppPropertiesArgs, SageMakerAppPropertiesPtr and SageMakerAppPropertiesPtrOutput values.
// You can construct a concrete instance of `SageMakerAppPropertiesPtrInput` via:
//
//	        SageMakerAppPropertiesArgs{...}
//
//	or:
//
//	        nil
type SageMakerAppPropertiesPtrInput interface {
	pulumi.Input

	ToSageMakerAppPropertiesPtrOutput() SageMakerAppPropertiesPtrOutput
	ToSageMakerAppPropertiesPtrOutputWithContext(context.Context) SageMakerAppPropertiesPtrOutput
}

type sageMakerAppPropertiesPtrType SageMakerAppPropertiesArgs

func SageMakerAppPropertiesPtr(v *SageMakerAppPropertiesArgs) SageMakerAppPropertiesPtrInput {
	return (*sageMakerAppPropertiesPtrType)(v)
}

func (*sageMakerAppPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SageMakerAppProperties)(nil)).Elem()
}

func (i *sageMakerAppPropertiesPtrType) ToSageMakerAppPropertiesPtrOutput() SageMakerAppPropertiesPtrOutput {
	return i.ToSageMakerAppPropertiesPtrOutputWithContext(context.Background())
}

func (i *sageMakerAppPropertiesPtrType) ToSageMakerAppPropertiesPtrOutputWithContext(ctx context.Context) SageMakerAppPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SageMakerAppPropertiesPtrOutput)
}

// Definition of SageMakerApp
type SageMakerAppPropertiesOutput struct{ *pulumi.OutputState }

func (SageMakerAppPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SageMakerAppProperties)(nil)).Elem()
}

func (o SageMakerAppPropertiesOutput) ToSageMakerAppPropertiesOutput() SageMakerAppPropertiesOutput {
	return o
}

func (o SageMakerAppPropertiesOutput) ToSageMakerAppPropertiesOutputWithContext(ctx context.Context) SageMakerAppPropertiesOutput {
	return o
}

func (o SageMakerAppPropertiesOutput) ToSageMakerAppPropertiesPtrOutput() SageMakerAppPropertiesPtrOutput {
	return o.ToSageMakerAppPropertiesPtrOutputWithContext(context.Background())
}

func (o SageMakerAppPropertiesOutput) ToSageMakerAppPropertiesPtrOutputWithContext(ctx context.Context) SageMakerAppPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SageMakerAppProperties) *SageMakerAppProperties {
		return &v
	}).(SageMakerAppPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SageMakerAppPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SageMakerAppPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SageMakerAppPropertiesOutput) AwsProperties() AwsSageMakerAppPropertiesPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *AwsSageMakerAppProperties { return v.AwsProperties }).(AwsSageMakerAppPropertiesPtrOutput)
}

// AWS Region
func (o SageMakerAppPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SageMakerAppPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SageMakerAppPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SageMakerAppProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SageMakerAppPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SageMakerAppPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SageMakerAppPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SageMakerAppPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SageMakerAppProperties)(nil)).Elem()
}

func (o SageMakerAppPropertiesPtrOutput) ToSageMakerAppPropertiesPtrOutput() SageMakerAppPropertiesPtrOutput {
	return o
}

func (o SageMakerAppPropertiesPtrOutput) ToSageMakerAppPropertiesPtrOutputWithContext(ctx context.Context) SageMakerAppPropertiesPtrOutput {
	return o
}

func (o SageMakerAppPropertiesPtrOutput) Elem() SageMakerAppPropertiesOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) SageMakerAppProperties {
		if v != nil {
			return *v
		}
		var ret SageMakerAppProperties
		return ret
	}).(SageMakerAppPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SageMakerAppPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SageMakerAppPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SageMakerAppPropertiesPtrOutput) AwsProperties() AwsSageMakerAppPropertiesPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *AwsSageMakerAppProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSageMakerAppPropertiesPtrOutput)
}

// AWS Region
func (o SageMakerAppPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SageMakerAppPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SageMakerAppPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SageMakerAppPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SageMakerAppPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerAppProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SageMakerApp
type SageMakerAppPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSageMakerAppPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SageMakerApp
type SageMakerAppPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SageMakerAppPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SageMakerAppPropertiesResponse)(nil)).Elem()
}

func (o SageMakerAppPropertiesResponseOutput) ToSageMakerAppPropertiesResponseOutput() SageMakerAppPropertiesResponseOutput {
	return o
}

func (o SageMakerAppPropertiesResponseOutput) ToSageMakerAppPropertiesResponseOutputWithContext(ctx context.Context) SageMakerAppPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SageMakerAppPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SageMakerAppPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SageMakerAppPropertiesResponseOutput) AwsProperties() AwsSageMakerAppPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *AwsSageMakerAppPropertiesResponse { return v.AwsProperties }).(AwsSageMakerAppPropertiesResponsePtrOutput)
}

// AWS Region
func (o SageMakerAppPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SageMakerAppPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SageMakerAppPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SageMakerAppPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SageMakerAppPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SageMakerAppPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerAppPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SageMakerNotebookInstanceSummary
type SageMakerNotebookInstanceSummaryProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSageMakerNotebookInstanceSummaryProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SageMakerNotebookInstanceSummaryPropertiesInput is an input type that accepts SageMakerNotebookInstanceSummaryPropertiesArgs and SageMakerNotebookInstanceSummaryPropertiesOutput values.
// You can construct a concrete instance of `SageMakerNotebookInstanceSummaryPropertiesInput` via:
//
//	SageMakerNotebookInstanceSummaryPropertiesArgs{...}
type SageMakerNotebookInstanceSummaryPropertiesInput interface {
	pulumi.Input

	ToSageMakerNotebookInstanceSummaryPropertiesOutput() SageMakerNotebookInstanceSummaryPropertiesOutput
	ToSageMakerNotebookInstanceSummaryPropertiesOutputWithContext(context.Context) SageMakerNotebookInstanceSummaryPropertiesOutput
}

// Definition of SageMakerNotebookInstanceSummary
type SageMakerNotebookInstanceSummaryPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSageMakerNotebookInstanceSummaryPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SageMakerNotebookInstanceSummaryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SageMakerNotebookInstanceSummaryProperties)(nil)).Elem()
}

func (i SageMakerNotebookInstanceSummaryPropertiesArgs) ToSageMakerNotebookInstanceSummaryPropertiesOutput() SageMakerNotebookInstanceSummaryPropertiesOutput {
	return i.ToSageMakerNotebookInstanceSummaryPropertiesOutputWithContext(context.Background())
}

func (i SageMakerNotebookInstanceSummaryPropertiesArgs) ToSageMakerNotebookInstanceSummaryPropertiesOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SageMakerNotebookInstanceSummaryPropertiesOutput)
}

func (i SageMakerNotebookInstanceSummaryPropertiesArgs) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutput() SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return i.ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i SageMakerNotebookInstanceSummaryPropertiesArgs) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SageMakerNotebookInstanceSummaryPropertiesOutput).ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(ctx)
}

// SageMakerNotebookInstanceSummaryPropertiesPtrInput is an input type that accepts SageMakerNotebookInstanceSummaryPropertiesArgs, SageMakerNotebookInstanceSummaryPropertiesPtr and SageMakerNotebookInstanceSummaryPropertiesPtrOutput values.
// You can construct a concrete instance of `SageMakerNotebookInstanceSummaryPropertiesPtrInput` via:
//
//	        SageMakerNotebookInstanceSummaryPropertiesArgs{...}
//
//	or:
//
//	        nil
type SageMakerNotebookInstanceSummaryPropertiesPtrInput interface {
	pulumi.Input

	ToSageMakerNotebookInstanceSummaryPropertiesPtrOutput() SageMakerNotebookInstanceSummaryPropertiesPtrOutput
	ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(context.Context) SageMakerNotebookInstanceSummaryPropertiesPtrOutput
}

type sageMakerNotebookInstanceSummaryPropertiesPtrType SageMakerNotebookInstanceSummaryPropertiesArgs

func SageMakerNotebookInstanceSummaryPropertiesPtr(v *SageMakerNotebookInstanceSummaryPropertiesArgs) SageMakerNotebookInstanceSummaryPropertiesPtrInput {
	return (*sageMakerNotebookInstanceSummaryPropertiesPtrType)(v)
}

func (*sageMakerNotebookInstanceSummaryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SageMakerNotebookInstanceSummaryProperties)(nil)).Elem()
}

func (i *sageMakerNotebookInstanceSummaryPropertiesPtrType) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutput() SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return i.ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i *sageMakerNotebookInstanceSummaryPropertiesPtrType) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SageMakerNotebookInstanceSummaryPropertiesPtrOutput)
}

// Definition of SageMakerNotebookInstanceSummary
type SageMakerNotebookInstanceSummaryPropertiesOutput struct{ *pulumi.OutputState }

func (SageMakerNotebookInstanceSummaryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SageMakerNotebookInstanceSummaryProperties)(nil)).Elem()
}

func (o SageMakerNotebookInstanceSummaryPropertiesOutput) ToSageMakerNotebookInstanceSummaryPropertiesOutput() SageMakerNotebookInstanceSummaryPropertiesOutput {
	return o
}

func (o SageMakerNotebookInstanceSummaryPropertiesOutput) ToSageMakerNotebookInstanceSummaryPropertiesOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesOutput {
	return o
}

func (o SageMakerNotebookInstanceSummaryPropertiesOutput) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutput() SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return o.ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (o SageMakerNotebookInstanceSummaryPropertiesOutput) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SageMakerNotebookInstanceSummaryProperties) *SageMakerNotebookInstanceSummaryProperties {
		return &v
	}).(SageMakerNotebookInstanceSummaryPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) AwsProperties() AwsSageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *AwsSageMakerNotebookInstanceSummaryProperties {
		return v.AwsProperties
	}).(AwsSageMakerNotebookInstanceSummaryPropertiesPtrOutput)
}

// AWS Region
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SageMakerNotebookInstanceSummaryPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SageMakerNotebookInstanceSummaryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SageMakerNotebookInstanceSummaryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SageMakerNotebookInstanceSummaryProperties)(nil)).Elem()
}

func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutput() SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return o
}

func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) ToSageMakerNotebookInstanceSummaryPropertiesPtrOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return o
}

func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) Elem() SageMakerNotebookInstanceSummaryPropertiesOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) SageMakerNotebookInstanceSummaryProperties {
		if v != nil {
			return *v
		}
		var ret SageMakerNotebookInstanceSummaryProperties
		return ret
	}).(SageMakerNotebookInstanceSummaryPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) AwsProperties() AwsSageMakerNotebookInstanceSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *AwsSageMakerNotebookInstanceSummaryProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSageMakerNotebookInstanceSummaryPropertiesPtrOutput)
}

// AWS Region
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SageMakerNotebookInstanceSummaryPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SageMakerNotebookInstanceSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SageMakerNotebookInstanceSummary
type SageMakerNotebookInstanceSummaryPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSageMakerNotebookInstanceSummaryPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SageMakerNotebookInstanceSummary
type SageMakerNotebookInstanceSummaryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SageMakerNotebookInstanceSummaryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SageMakerNotebookInstanceSummaryPropertiesResponse)(nil)).Elem()
}

func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) ToSageMakerNotebookInstanceSummaryPropertiesResponseOutput() SageMakerNotebookInstanceSummaryPropertiesResponseOutput {
	return o
}

func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) ToSageMakerNotebookInstanceSummaryPropertiesResponseOutputWithContext(ctx context.Context) SageMakerNotebookInstanceSummaryPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) AwsProperties() AwsSageMakerNotebookInstanceSummaryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *AwsSageMakerNotebookInstanceSummaryPropertiesResponse {
		return v.AwsProperties
	}).(AwsSageMakerNotebookInstanceSummaryPropertiesResponsePtrOutput)
}

// AWS Region
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SageMakerNotebookInstanceSummaryPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SageMakerNotebookInstanceSummaryPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of ScaleDownBehaviorEnumValue
type ScaleDownBehaviorEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ScaleDownBehaviorEnumValueInput is an input type that accepts ScaleDownBehaviorEnumValueArgs and ScaleDownBehaviorEnumValueOutput values.
// You can construct a concrete instance of `ScaleDownBehaviorEnumValueInput` via:
//
//	ScaleDownBehaviorEnumValueArgs{...}
type ScaleDownBehaviorEnumValueInput interface {
	pulumi.Input

	ToScaleDownBehaviorEnumValueOutput() ScaleDownBehaviorEnumValueOutput
	ToScaleDownBehaviorEnumValueOutputWithContext(context.Context) ScaleDownBehaviorEnumValueOutput
}

// Definition of ScaleDownBehaviorEnumValue
type ScaleDownBehaviorEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScaleDownBehaviorEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleDownBehaviorEnumValue)(nil)).Elem()
}

func (i ScaleDownBehaviorEnumValueArgs) ToScaleDownBehaviorEnumValueOutput() ScaleDownBehaviorEnumValueOutput {
	return i.ToScaleDownBehaviorEnumValueOutputWithContext(context.Background())
}

func (i ScaleDownBehaviorEnumValueArgs) ToScaleDownBehaviorEnumValueOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleDownBehaviorEnumValueOutput)
}

func (i ScaleDownBehaviorEnumValueArgs) ToScaleDownBehaviorEnumValuePtrOutput() ScaleDownBehaviorEnumValuePtrOutput {
	return i.ToScaleDownBehaviorEnumValuePtrOutputWithContext(context.Background())
}

func (i ScaleDownBehaviorEnumValueArgs) ToScaleDownBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleDownBehaviorEnumValueOutput).ToScaleDownBehaviorEnumValuePtrOutputWithContext(ctx)
}

// ScaleDownBehaviorEnumValuePtrInput is an input type that accepts ScaleDownBehaviorEnumValueArgs, ScaleDownBehaviorEnumValuePtr and ScaleDownBehaviorEnumValuePtrOutput values.
// You can construct a concrete instance of `ScaleDownBehaviorEnumValuePtrInput` via:
//
//	        ScaleDownBehaviorEnumValueArgs{...}
//
//	or:
//
//	        nil
type ScaleDownBehaviorEnumValuePtrInput interface {
	pulumi.Input

	ToScaleDownBehaviorEnumValuePtrOutput() ScaleDownBehaviorEnumValuePtrOutput
	ToScaleDownBehaviorEnumValuePtrOutputWithContext(context.Context) ScaleDownBehaviorEnumValuePtrOutput
}

type scaleDownBehaviorEnumValuePtrType ScaleDownBehaviorEnumValueArgs

func ScaleDownBehaviorEnumValuePtr(v *ScaleDownBehaviorEnumValueArgs) ScaleDownBehaviorEnumValuePtrInput {
	return (*scaleDownBehaviorEnumValuePtrType)(v)
}

func (*scaleDownBehaviorEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleDownBehaviorEnumValue)(nil)).Elem()
}

func (i *scaleDownBehaviorEnumValuePtrType) ToScaleDownBehaviorEnumValuePtrOutput() ScaleDownBehaviorEnumValuePtrOutput {
	return i.ToScaleDownBehaviorEnumValuePtrOutputWithContext(context.Background())
}

func (i *scaleDownBehaviorEnumValuePtrType) ToScaleDownBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleDownBehaviorEnumValuePtrOutput)
}

// Definition of ScaleDownBehaviorEnumValue
type ScaleDownBehaviorEnumValueOutput struct{ *pulumi.OutputState }

func (ScaleDownBehaviorEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleDownBehaviorEnumValue)(nil)).Elem()
}

func (o ScaleDownBehaviorEnumValueOutput) ToScaleDownBehaviorEnumValueOutput() ScaleDownBehaviorEnumValueOutput {
	return o
}

func (o ScaleDownBehaviorEnumValueOutput) ToScaleDownBehaviorEnumValueOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValueOutput {
	return o
}

func (o ScaleDownBehaviorEnumValueOutput) ToScaleDownBehaviorEnumValuePtrOutput() ScaleDownBehaviorEnumValuePtrOutput {
	return o.ToScaleDownBehaviorEnumValuePtrOutputWithContext(context.Background())
}

func (o ScaleDownBehaviorEnumValueOutput) ToScaleDownBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleDownBehaviorEnumValue) *ScaleDownBehaviorEnumValue {
		return &v
	}).(ScaleDownBehaviorEnumValuePtrOutput)
}

// Property value
func (o ScaleDownBehaviorEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleDownBehaviorEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScaleDownBehaviorEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ScaleDownBehaviorEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleDownBehaviorEnumValue)(nil)).Elem()
}

func (o ScaleDownBehaviorEnumValuePtrOutput) ToScaleDownBehaviorEnumValuePtrOutput() ScaleDownBehaviorEnumValuePtrOutput {
	return o
}

func (o ScaleDownBehaviorEnumValuePtrOutput) ToScaleDownBehaviorEnumValuePtrOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValuePtrOutput {
	return o
}

func (o ScaleDownBehaviorEnumValuePtrOutput) Elem() ScaleDownBehaviorEnumValueOutput {
	return o.ApplyT(func(v *ScaleDownBehaviorEnumValue) ScaleDownBehaviorEnumValue {
		if v != nil {
			return *v
		}
		var ret ScaleDownBehaviorEnumValue
		return ret
	}).(ScaleDownBehaviorEnumValueOutput)
}

// Property value
func (o ScaleDownBehaviorEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleDownBehaviorEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ScaleDownBehaviorEnumValue
type ScaleDownBehaviorEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ScaleDownBehaviorEnumValue
type ScaleDownBehaviorEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ScaleDownBehaviorEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleDownBehaviorEnumValueResponse)(nil)).Elem()
}

func (o ScaleDownBehaviorEnumValueResponseOutput) ToScaleDownBehaviorEnumValueResponseOutput() ScaleDownBehaviorEnumValueResponseOutput {
	return o
}

func (o ScaleDownBehaviorEnumValueResponseOutput) ToScaleDownBehaviorEnumValueResponseOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValueResponseOutput {
	return o
}

// Property value
func (o ScaleDownBehaviorEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleDownBehaviorEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScaleDownBehaviorEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleDownBehaviorEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleDownBehaviorEnumValueResponse)(nil)).Elem()
}

func (o ScaleDownBehaviorEnumValueResponsePtrOutput) ToScaleDownBehaviorEnumValueResponsePtrOutput() ScaleDownBehaviorEnumValueResponsePtrOutput {
	return o
}

func (o ScaleDownBehaviorEnumValueResponsePtrOutput) ToScaleDownBehaviorEnumValueResponsePtrOutputWithContext(ctx context.Context) ScaleDownBehaviorEnumValueResponsePtrOutput {
	return o
}

func (o ScaleDownBehaviorEnumValueResponsePtrOutput) Elem() ScaleDownBehaviorEnumValueResponseOutput {
	return o.ApplyT(func(v *ScaleDownBehaviorEnumValueResponse) ScaleDownBehaviorEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ScaleDownBehaviorEnumValueResponse
		return ret
	}).(ScaleDownBehaviorEnumValueResponseOutput)
}

// Property value
func (o ScaleDownBehaviorEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleDownBehaviorEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ScalingConfig
type ScalingConfig struct {
	// Property desiredSize
	DesiredSize *int `pulumi:"desiredSize"`
	// Property maxSize
	MaxSize *int `pulumi:"maxSize"`
	// Property minSize
	MinSize *int `pulumi:"minSize"`
}

// ScalingConfigInput is an input type that accepts ScalingConfigArgs and ScalingConfigOutput values.
// You can construct a concrete instance of `ScalingConfigInput` via:
//
//	ScalingConfigArgs{...}
type ScalingConfigInput interface {
	pulumi.Input

	ToScalingConfigOutput() ScalingConfigOutput
	ToScalingConfigOutputWithContext(context.Context) ScalingConfigOutput
}

// Definition of ScalingConfig
type ScalingConfigArgs struct {
	// Property desiredSize
	DesiredSize pulumi.IntPtrInput `pulumi:"desiredSize"`
	// Property maxSize
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// Property minSize
	MinSize pulumi.IntPtrInput `pulumi:"minSize"`
}

func (ScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfig)(nil)).Elem()
}

func (i ScalingConfigArgs) ToScalingConfigOutput() ScalingConfigOutput {
	return i.ToScalingConfigOutputWithContext(context.Background())
}

func (i ScalingConfigArgs) ToScalingConfigOutputWithContext(ctx context.Context) ScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigOutput)
}

func (i ScalingConfigArgs) ToScalingConfigPtrOutput() ScalingConfigPtrOutput {
	return i.ToScalingConfigPtrOutputWithContext(context.Background())
}

func (i ScalingConfigArgs) ToScalingConfigPtrOutputWithContext(ctx context.Context) ScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigOutput).ToScalingConfigPtrOutputWithContext(ctx)
}

// ScalingConfigPtrInput is an input type that accepts ScalingConfigArgs, ScalingConfigPtr and ScalingConfigPtrOutput values.
// You can construct a concrete instance of `ScalingConfigPtrInput` via:
//
//	        ScalingConfigArgs{...}
//
//	or:
//
//	        nil
type ScalingConfigPtrInput interface {
	pulumi.Input

	ToScalingConfigPtrOutput() ScalingConfigPtrOutput
	ToScalingConfigPtrOutputWithContext(context.Context) ScalingConfigPtrOutput
}

type scalingConfigPtrType ScalingConfigArgs

func ScalingConfigPtr(v *ScalingConfigArgs) ScalingConfigPtrInput {
	return (*scalingConfigPtrType)(v)
}

func (*scalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfig)(nil)).Elem()
}

func (i *scalingConfigPtrType) ToScalingConfigPtrOutput() ScalingConfigPtrOutput {
	return i.ToScalingConfigPtrOutputWithContext(context.Background())
}

func (i *scalingConfigPtrType) ToScalingConfigPtrOutputWithContext(ctx context.Context) ScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigPtrOutput)
}

// Definition of ScalingConfig
type ScalingConfigOutput struct{ *pulumi.OutputState }

func (ScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfig)(nil)).Elem()
}

func (o ScalingConfigOutput) ToScalingConfigOutput() ScalingConfigOutput {
	return o
}

func (o ScalingConfigOutput) ToScalingConfigOutputWithContext(ctx context.Context) ScalingConfigOutput {
	return o
}

func (o ScalingConfigOutput) ToScalingConfigPtrOutput() ScalingConfigPtrOutput {
	return o.ToScalingConfigPtrOutputWithContext(context.Background())
}

func (o ScalingConfigOutput) ToScalingConfigPtrOutputWithContext(ctx context.Context) ScalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingConfig) *ScalingConfig {
		return &v
	}).(ScalingConfigPtrOutput)
}

// Property desiredSize
func (o ScalingConfigOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfig) *int { return v.DesiredSize }).(pulumi.IntPtrOutput)
}

// Property maxSize
func (o ScalingConfigOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfig) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Property minSize
func (o ScalingConfigOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfig) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

type ScalingConfigPtrOutput struct{ *pulumi.OutputState }

func (ScalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfig)(nil)).Elem()
}

func (o ScalingConfigPtrOutput) ToScalingConfigPtrOutput() ScalingConfigPtrOutput {
	return o
}

func (o ScalingConfigPtrOutput) ToScalingConfigPtrOutputWithContext(ctx context.Context) ScalingConfigPtrOutput {
	return o
}

func (o ScalingConfigPtrOutput) Elem() ScalingConfigOutput {
	return o.ApplyT(func(v *ScalingConfig) ScalingConfig {
		if v != nil {
			return *v
		}
		var ret ScalingConfig
		return ret
	}).(ScalingConfigOutput)
}

// Property desiredSize
func (o ScalingConfigPtrOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.DesiredSize
	}).(pulumi.IntPtrOutput)
}

// Property maxSize
func (o ScalingConfigPtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Property minSize
func (o ScalingConfigPtrOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.IntPtrOutput)
}

// Definition of ScalingConfig
type ScalingConfigResponse struct {
	// Property desiredSize
	DesiredSize *int `pulumi:"desiredSize"`
	// Property maxSize
	MaxSize *int `pulumi:"maxSize"`
	// Property minSize
	MinSize *int `pulumi:"minSize"`
}

// Definition of ScalingConfig
type ScalingConfigResponseOutput struct{ *pulumi.OutputState }

func (ScalingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigResponse)(nil)).Elem()
}

func (o ScalingConfigResponseOutput) ToScalingConfigResponseOutput() ScalingConfigResponseOutput {
	return o
}

func (o ScalingConfigResponseOutput) ToScalingConfigResponseOutputWithContext(ctx context.Context) ScalingConfigResponseOutput {
	return o
}

// Property desiredSize
func (o ScalingConfigResponseOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigResponse) *int { return v.DesiredSize }).(pulumi.IntPtrOutput)
}

// Property maxSize
func (o ScalingConfigResponseOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigResponse) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Property minSize
func (o ScalingConfigResponseOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigResponse) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

type ScalingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ScalingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfigResponse)(nil)).Elem()
}

func (o ScalingConfigResponsePtrOutput) ToScalingConfigResponsePtrOutput() ScalingConfigResponsePtrOutput {
	return o
}

func (o ScalingConfigResponsePtrOutput) ToScalingConfigResponsePtrOutputWithContext(ctx context.Context) ScalingConfigResponsePtrOutput {
	return o
}

func (o ScalingConfigResponsePtrOutput) Elem() ScalingConfigResponseOutput {
	return o.ApplyT(func(v *ScalingConfigResponse) ScalingConfigResponse {
		if v != nil {
			return *v
		}
		var ret ScalingConfigResponse
		return ret
	}).(ScalingConfigResponseOutput)
}

// Property desiredSize
func (o ScalingConfigResponsePtrOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.DesiredSize
	}).(pulumi.IntPtrOutput)
}

// Property maxSize
func (o ScalingConfigResponsePtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Property minSize
func (o ScalingConfigResponsePtrOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.IntPtrOutput)
}

// Definition of ScalingConfiguration
type ScalingConfiguration struct {
	// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
	AutoPause *bool `pulumi:"autoPause"`
	// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
	MinCapacity *int `pulumi:"minCapacity"`
	// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
	SecondsBeforeTimeout *int `pulumi:"secondsBeforeTimeout"`
	// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
	SecondsUntilAutoPause *int `pulumi:"secondsUntilAutoPause"`
	// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
	TimeoutAction *string `pulumi:"timeoutAction"`
}

// ScalingConfigurationInput is an input type that accepts ScalingConfigurationArgs and ScalingConfigurationOutput values.
// You can construct a concrete instance of `ScalingConfigurationInput` via:
//
//	ScalingConfigurationArgs{...}
type ScalingConfigurationInput interface {
	pulumi.Input

	ToScalingConfigurationOutput() ScalingConfigurationOutput
	ToScalingConfigurationOutputWithContext(context.Context) ScalingConfigurationOutput
}

// Definition of ScalingConfiguration
type ScalingConfigurationArgs struct {
	// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
	AutoPause pulumi.BoolPtrInput `pulumi:"autoPause"`
	// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
	// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
	SecondsBeforeTimeout pulumi.IntPtrInput `pulumi:"secondsBeforeTimeout"`
	// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
	SecondsUntilAutoPause pulumi.IntPtrInput `pulumi:"secondsUntilAutoPause"`
	// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
	TimeoutAction pulumi.StringPtrInput `pulumi:"timeoutAction"`
}

func (ScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfiguration)(nil)).Elem()
}

func (i ScalingConfigurationArgs) ToScalingConfigurationOutput() ScalingConfigurationOutput {
	return i.ToScalingConfigurationOutputWithContext(context.Background())
}

func (i ScalingConfigurationArgs) ToScalingConfigurationOutputWithContext(ctx context.Context) ScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationOutput)
}

func (i ScalingConfigurationArgs) ToScalingConfigurationPtrOutput() ScalingConfigurationPtrOutput {
	return i.ToScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i ScalingConfigurationArgs) ToScalingConfigurationPtrOutputWithContext(ctx context.Context) ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationOutput).ToScalingConfigurationPtrOutputWithContext(ctx)
}

// ScalingConfigurationPtrInput is an input type that accepts ScalingConfigurationArgs, ScalingConfigurationPtr and ScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `ScalingConfigurationPtrInput` via:
//
//	        ScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScalingConfigurationPtrInput interface {
	pulumi.Input

	ToScalingConfigurationPtrOutput() ScalingConfigurationPtrOutput
	ToScalingConfigurationPtrOutputWithContext(context.Context) ScalingConfigurationPtrOutput
}

type scalingConfigurationPtrType ScalingConfigurationArgs

func ScalingConfigurationPtr(v *ScalingConfigurationArgs) ScalingConfigurationPtrInput {
	return (*scalingConfigurationPtrType)(v)
}

func (*scalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfiguration)(nil)).Elem()
}

func (i *scalingConfigurationPtrType) ToScalingConfigurationPtrOutput() ScalingConfigurationPtrOutput {
	return i.ToScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *scalingConfigurationPtrType) ToScalingConfigurationPtrOutputWithContext(ctx context.Context) ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationPtrOutput)
}

// Definition of ScalingConfiguration
type ScalingConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfiguration)(nil)).Elem()
}

func (o ScalingConfigurationOutput) ToScalingConfigurationOutput() ScalingConfigurationOutput {
	return o
}

func (o ScalingConfigurationOutput) ToScalingConfigurationOutputWithContext(ctx context.Context) ScalingConfigurationOutput {
	return o
}

func (o ScalingConfigurationOutput) ToScalingConfigurationPtrOutput() ScalingConfigurationPtrOutput {
	return o.ToScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o ScalingConfigurationOutput) ToScalingConfigurationPtrOutputWithContext(ctx context.Context) ScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingConfiguration) *ScalingConfiguration {
		return &v
	}).(ScalingConfigurationPtrOutput)
}

// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
func (o ScalingConfigurationOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingConfiguration) *bool { return v.AutoPause }).(pulumi.BoolPtrOutput)
}

// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
func (o ScalingConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
func (o ScalingConfigurationOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfiguration) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
func (o ScalingConfigurationOutput) SecondsBeforeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfiguration) *int { return v.SecondsBeforeTimeout }).(pulumi.IntPtrOutput)
}

// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
func (o ScalingConfigurationOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfiguration) *int { return v.SecondsUntilAutoPause }).(pulumi.IntPtrOutput)
}

// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
func (o ScalingConfigurationOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfiguration) *string { return v.TimeoutAction }).(pulumi.StringPtrOutput)
}

type ScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfiguration)(nil)).Elem()
}

func (o ScalingConfigurationPtrOutput) ToScalingConfigurationPtrOutput() ScalingConfigurationPtrOutput {
	return o
}

func (o ScalingConfigurationPtrOutput) ToScalingConfigurationPtrOutputWithContext(ctx context.Context) ScalingConfigurationPtrOutput {
	return o
}

func (o ScalingConfigurationPtrOutput) Elem() ScalingConfigurationOutput {
	return o.ApplyT(func(v *ScalingConfiguration) ScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret ScalingConfiguration
		return ret
	}).(ScalingConfigurationOutput)
}

// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
func (o ScalingConfigurationPtrOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoPause
	}).(pulumi.BoolPtrOutput)
}

// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
func (o ScalingConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
func (o ScalingConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
func (o ScalingConfigurationPtrOutput) SecondsBeforeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SecondsBeforeTimeout
	}).(pulumi.IntPtrOutput)
}

// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
func (o ScalingConfigurationPtrOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SecondsUntilAutoPause
	}).(pulumi.IntPtrOutput)
}

// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
func (o ScalingConfigurationPtrOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeoutAction
	}).(pulumi.StringPtrOutput)
}

// Definition of ScalingConfiguration
type ScalingConfigurationResponse struct {
	// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
	AutoPause *bool `pulumi:"autoPause"`
	// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
	MinCapacity *int `pulumi:"minCapacity"`
	// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
	SecondsBeforeTimeout *int `pulumi:"secondsBeforeTimeout"`
	// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
	SecondsUntilAutoPause *int `pulumi:"secondsUntilAutoPause"`
	// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
	TimeoutAction *string `pulumi:"timeoutAction"`
}

// Definition of ScalingConfiguration
type ScalingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationResponse)(nil)).Elem()
}

func (o ScalingConfigurationResponseOutput) ToScalingConfigurationResponseOutput() ScalingConfigurationResponseOutput {
	return o
}

func (o ScalingConfigurationResponseOutput) ToScalingConfigurationResponseOutputWithContext(ctx context.Context) ScalingConfigurationResponseOutput {
	return o
}

// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
func (o ScalingConfigurationResponseOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationResponse) *bool { return v.AutoPause }).(pulumi.BoolPtrOutput)
}

// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
func (o ScalingConfigurationResponseOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationResponse) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
func (o ScalingConfigurationResponseOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationResponse) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
func (o ScalingConfigurationResponseOutput) SecondsBeforeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationResponse) *int { return v.SecondsBeforeTimeout }).(pulumi.IntPtrOutput)
}

// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
func (o ScalingConfigurationResponseOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationResponse) *int { return v.SecondsUntilAutoPause }).(pulumi.IntPtrOutput)
}

// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
func (o ScalingConfigurationResponseOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationResponse) *string { return v.TimeoutAction }).(pulumi.StringPtrOutput)
}

type ScalingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfigurationResponse)(nil)).Elem()
}

func (o ScalingConfigurationResponsePtrOutput) ToScalingConfigurationResponsePtrOutput() ScalingConfigurationResponsePtrOutput {
	return o
}

func (o ScalingConfigurationResponsePtrOutput) ToScalingConfigurationResponsePtrOutputWithContext(ctx context.Context) ScalingConfigurationResponsePtrOutput {
	return o
}

func (o ScalingConfigurationResponsePtrOutput) Elem() ScalingConfigurationResponseOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) ScalingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ScalingConfigurationResponse
		return ret
	}).(ScalingConfigurationResponseOutput)
}

// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
func (o ScalingConfigurationResponsePtrOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoPause
	}).(pulumi.BoolPtrOutput)
}

// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The maximum capacity must be greater than or equal to the minimum capacity.
func (o ScalingConfigurationResponsePtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.The minimum capacity must be less than or equal to the maximum capacity.
func (o ScalingConfigurationResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.The default is 300.
func (o ScalingConfigurationResponsePtrOutput) SecondsBeforeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondsBeforeTimeout
	}).(pulumi.IntPtrOutput)
}

// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
func (o ScalingConfigurationResponsePtrOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondsUntilAutoPause
	}).(pulumi.IntPtrOutput)
}

// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
func (o ScalingConfigurationResponsePtrOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeoutAction
	}).(pulumi.StringPtrOutput)
}

// Definition of ScanStatusEnumValue
type ScanStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ScanStatusEnumValueInput is an input type that accepts ScanStatusEnumValueArgs and ScanStatusEnumValueOutput values.
// You can construct a concrete instance of `ScanStatusEnumValueInput` via:
//
//	ScanStatusEnumValueArgs{...}
type ScanStatusEnumValueInput interface {
	pulumi.Input

	ToScanStatusEnumValueOutput() ScanStatusEnumValueOutput
	ToScanStatusEnumValueOutputWithContext(context.Context) ScanStatusEnumValueOutput
}

// Definition of ScanStatusEnumValue
type ScanStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScanStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanStatusEnumValue)(nil)).Elem()
}

func (i ScanStatusEnumValueArgs) ToScanStatusEnumValueOutput() ScanStatusEnumValueOutput {
	return i.ToScanStatusEnumValueOutputWithContext(context.Background())
}

func (i ScanStatusEnumValueArgs) ToScanStatusEnumValueOutputWithContext(ctx context.Context) ScanStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanStatusEnumValueOutput)
}

func (i ScanStatusEnumValueArgs) ToScanStatusEnumValuePtrOutput() ScanStatusEnumValuePtrOutput {
	return i.ToScanStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i ScanStatusEnumValueArgs) ToScanStatusEnumValuePtrOutputWithContext(ctx context.Context) ScanStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanStatusEnumValueOutput).ToScanStatusEnumValuePtrOutputWithContext(ctx)
}

// ScanStatusEnumValuePtrInput is an input type that accepts ScanStatusEnumValueArgs, ScanStatusEnumValuePtr and ScanStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `ScanStatusEnumValuePtrInput` via:
//
//	        ScanStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type ScanStatusEnumValuePtrInput interface {
	pulumi.Input

	ToScanStatusEnumValuePtrOutput() ScanStatusEnumValuePtrOutput
	ToScanStatusEnumValuePtrOutputWithContext(context.Context) ScanStatusEnumValuePtrOutput
}

type scanStatusEnumValuePtrType ScanStatusEnumValueArgs

func ScanStatusEnumValuePtr(v *ScanStatusEnumValueArgs) ScanStatusEnumValuePtrInput {
	return (*scanStatusEnumValuePtrType)(v)
}

func (*scanStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanStatusEnumValue)(nil)).Elem()
}

func (i *scanStatusEnumValuePtrType) ToScanStatusEnumValuePtrOutput() ScanStatusEnumValuePtrOutput {
	return i.ToScanStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *scanStatusEnumValuePtrType) ToScanStatusEnumValuePtrOutputWithContext(ctx context.Context) ScanStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanStatusEnumValuePtrOutput)
}

// Definition of ScanStatusEnumValue
type ScanStatusEnumValueOutput struct{ *pulumi.OutputState }

func (ScanStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanStatusEnumValue)(nil)).Elem()
}

func (o ScanStatusEnumValueOutput) ToScanStatusEnumValueOutput() ScanStatusEnumValueOutput {
	return o
}

func (o ScanStatusEnumValueOutput) ToScanStatusEnumValueOutputWithContext(ctx context.Context) ScanStatusEnumValueOutput {
	return o
}

func (o ScanStatusEnumValueOutput) ToScanStatusEnumValuePtrOutput() ScanStatusEnumValuePtrOutput {
	return o.ToScanStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o ScanStatusEnumValueOutput) ToScanStatusEnumValuePtrOutputWithContext(ctx context.Context) ScanStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanStatusEnumValue) *ScanStatusEnumValue {
		return &v
	}).(ScanStatusEnumValuePtrOutput)
}

// Property value
func (o ScanStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScanStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ScanStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanStatusEnumValue)(nil)).Elem()
}

func (o ScanStatusEnumValuePtrOutput) ToScanStatusEnumValuePtrOutput() ScanStatusEnumValuePtrOutput {
	return o
}

func (o ScanStatusEnumValuePtrOutput) ToScanStatusEnumValuePtrOutputWithContext(ctx context.Context) ScanStatusEnumValuePtrOutput {
	return o
}

func (o ScanStatusEnumValuePtrOutput) Elem() ScanStatusEnumValueOutput {
	return o.ApplyT(func(v *ScanStatusEnumValue) ScanStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret ScanStatusEnumValue
		return ret
	}).(ScanStatusEnumValueOutput)
}

// Property value
func (o ScanStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ScanStatusEnumValue
type ScanStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ScanStatusEnumValue
type ScanStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ScanStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanStatusEnumValueResponse)(nil)).Elem()
}

func (o ScanStatusEnumValueResponseOutput) ToScanStatusEnumValueResponseOutput() ScanStatusEnumValueResponseOutput {
	return o
}

func (o ScanStatusEnumValueResponseOutput) ToScanStatusEnumValueResponseOutputWithContext(ctx context.Context) ScanStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o ScanStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScanStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ScanStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanStatusEnumValueResponse)(nil)).Elem()
}

func (o ScanStatusEnumValueResponsePtrOutput) ToScanStatusEnumValueResponsePtrOutput() ScanStatusEnumValueResponsePtrOutput {
	return o
}

func (o ScanStatusEnumValueResponsePtrOutput) ToScanStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) ScanStatusEnumValueResponsePtrOutput {
	return o
}

func (o ScanStatusEnumValueResponsePtrOutput) Elem() ScanStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *ScanStatusEnumValueResponse) ScanStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ScanStatusEnumValueResponse
		return ret
	}).(ScanStatusEnumValueResponseOutput)
}

// Property value
func (o ScanStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Secret
type Secret struct {
	// The name of the secret.
	Name *string `pulumi:"name"`
	// The secret to expose to the container. The supported values are either the full ARN of the ASMlong secret or the full ARN of the parameter in the SSM Parameter Store. For information about the require IAMlong permissions, see [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-iam) (for Secrets Manager) or [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-parameters.html) (for Systems Manager Parameter store) in the *Amazon Elastic Container Service Developer Guide*.  If the SSM Parameter Store parameter exists in the same Region as the task you're launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
	ValueFrom *string `pulumi:"valueFrom"`
}

// SecretInput is an input type that accepts SecretArgs and SecretOutput values.
// You can construct a concrete instance of `SecretInput` via:
//
//	SecretArgs{...}
type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(context.Context) SecretOutput
}

// Definition of Secret
type SecretArgs struct {
	// The name of the secret.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The secret to expose to the container. The supported values are either the full ARN of the ASMlong secret or the full ARN of the parameter in the SSM Parameter Store. For information about the require IAMlong permissions, see [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-iam) (for Secrets Manager) or [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-parameters.html) (for Systems Manager Parameter store) in the *Amazon Elastic Container Service Developer Guide*.  If the SSM Parameter Store parameter exists in the same Region as the task you're launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
	ValueFrom pulumi.StringPtrInput `pulumi:"valueFrom"`
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (i SecretArgs) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i SecretArgs) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

// SecretArrayInput is an input type that accepts SecretArray and SecretArrayOutput values.
// You can construct a concrete instance of `SecretArrayInput` via:
//
//	SecretArray{ SecretArgs{...} }
type SecretArrayInput interface {
	pulumi.Input

	ToSecretArrayOutput() SecretArrayOutput
	ToSecretArrayOutputWithContext(context.Context) SecretArrayOutput
}

type SecretArray []SecretInput

func (SecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Secret)(nil)).Elem()
}

func (i SecretArray) ToSecretArrayOutput() SecretArrayOutput {
	return i.ToSecretArrayOutputWithContext(context.Background())
}

func (i SecretArray) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretArrayOutput)
}

// Definition of Secret
type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// The name of the secret.
func (o SecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The secret to expose to the container. The supported values are either the full ARN of the ASMlong secret or the full ARN of the parameter in the SSM Parameter Store. For information about the require IAMlong permissions, see [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-iam) (for Secrets Manager) or [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-parameters.html) (for Systems Manager Parameter store) in the *Amazon Elastic Container Service Developer Guide*.  If the SSM Parameter Store parameter exists in the same Region as the task you're launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
func (o SecretOutput) ValueFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.ValueFrom }).(pulumi.StringPtrOutput)
}

type SecretArrayOutput struct{ *pulumi.OutputState }

func (SecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Secret)(nil)).Elem()
}

func (o SecretArrayOutput) ToSecretArrayOutput() SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) Index(i pulumi.IntInput) SecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Secret {
		return vs[0].([]Secret)[vs[1].(int)]
	}).(SecretOutput)
}

// Definition of Secret
type SecretResponse struct {
	// The name of the secret.
	Name *string `pulumi:"name"`
	// The secret to expose to the container. The supported values are either the full ARN of the ASMlong secret or the full ARN of the parameter in the SSM Parameter Store. For information about the require IAMlong permissions, see [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-iam) (for Secrets Manager) or [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-parameters.html) (for Systems Manager Parameter store) in the *Amazon Elastic Container Service Developer Guide*.  If the SSM Parameter Store parameter exists in the same Region as the task you're launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
	ValueFrom *string `pulumi:"valueFrom"`
}

// Definition of Secret
type SecretResponseOutput struct{ *pulumi.OutputState }

func (SecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretResponse)(nil)).Elem()
}

func (o SecretResponseOutput) ToSecretResponseOutput() SecretResponseOutput {
	return o
}

func (o SecretResponseOutput) ToSecretResponseOutputWithContext(ctx context.Context) SecretResponseOutput {
	return o
}

// The name of the secret.
func (o SecretResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The secret to expose to the container. The supported values are either the full ARN of the ASMlong secret or the full ARN of the parameter in the SSM Parameter Store. For information about the require IAMlong permissions, see [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-iam) (for Secrets Manager) or [Required IAM permissions for Amazon ECS secrets](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-parameters.html) (for Systems Manager Parameter store) in the *Amazon Elastic Container Service Developer Guide*.  If the SSM Parameter Store parameter exists in the same Region as the task you're launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
func (o SecretResponseOutput) ValueFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretResponse) *string { return v.ValueFrom }).(pulumi.StringPtrOutput)
}

type SecretResponseArrayOutput struct{ *pulumi.OutputState }

func (SecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretResponse)(nil)).Elem()
}

func (o SecretResponseArrayOutput) ToSecretResponseArrayOutput() SecretResponseArrayOutput {
	return o
}

func (o SecretResponseArrayOutput) ToSecretResponseArrayOutputWithContext(ctx context.Context) SecretResponseArrayOutput {
	return o
}

func (o SecretResponseArrayOutput) Index(i pulumi.IntInput) SecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretResponse {
		return vs[0].([]SecretResponse)[vs[1].(int)]
	}).(SecretResponseOutput)
}

// Definition of SecretsManagerResourcePolicy
type SecretsManagerResourcePolicyProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSecretsManagerResourcePolicyProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SecretsManagerResourcePolicyPropertiesInput is an input type that accepts SecretsManagerResourcePolicyPropertiesArgs and SecretsManagerResourcePolicyPropertiesOutput values.
// You can construct a concrete instance of `SecretsManagerResourcePolicyPropertiesInput` via:
//
//	SecretsManagerResourcePolicyPropertiesArgs{...}
type SecretsManagerResourcePolicyPropertiesInput interface {
	pulumi.Input

	ToSecretsManagerResourcePolicyPropertiesOutput() SecretsManagerResourcePolicyPropertiesOutput
	ToSecretsManagerResourcePolicyPropertiesOutputWithContext(context.Context) SecretsManagerResourcePolicyPropertiesOutput
}

// Definition of SecretsManagerResourcePolicy
type SecretsManagerResourcePolicyPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSecretsManagerResourcePolicyPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SecretsManagerResourcePolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagerResourcePolicyProperties)(nil)).Elem()
}

func (i SecretsManagerResourcePolicyPropertiesArgs) ToSecretsManagerResourcePolicyPropertiesOutput() SecretsManagerResourcePolicyPropertiesOutput {
	return i.ToSecretsManagerResourcePolicyPropertiesOutputWithContext(context.Background())
}

func (i SecretsManagerResourcePolicyPropertiesArgs) ToSecretsManagerResourcePolicyPropertiesOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagerResourcePolicyPropertiesOutput)
}

func (i SecretsManagerResourcePolicyPropertiesArgs) ToSecretsManagerResourcePolicyPropertiesPtrOutput() SecretsManagerResourcePolicyPropertiesPtrOutput {
	return i.ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i SecretsManagerResourcePolicyPropertiesArgs) ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagerResourcePolicyPropertiesOutput).ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(ctx)
}

// SecretsManagerResourcePolicyPropertiesPtrInput is an input type that accepts SecretsManagerResourcePolicyPropertiesArgs, SecretsManagerResourcePolicyPropertiesPtr and SecretsManagerResourcePolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `SecretsManagerResourcePolicyPropertiesPtrInput` via:
//
//	        SecretsManagerResourcePolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type SecretsManagerResourcePolicyPropertiesPtrInput interface {
	pulumi.Input

	ToSecretsManagerResourcePolicyPropertiesPtrOutput() SecretsManagerResourcePolicyPropertiesPtrOutput
	ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(context.Context) SecretsManagerResourcePolicyPropertiesPtrOutput
}

type secretsManagerResourcePolicyPropertiesPtrType SecretsManagerResourcePolicyPropertiesArgs

func SecretsManagerResourcePolicyPropertiesPtr(v *SecretsManagerResourcePolicyPropertiesArgs) SecretsManagerResourcePolicyPropertiesPtrInput {
	return (*secretsManagerResourcePolicyPropertiesPtrType)(v)
}

func (*secretsManagerResourcePolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagerResourcePolicyProperties)(nil)).Elem()
}

func (i *secretsManagerResourcePolicyPropertiesPtrType) ToSecretsManagerResourcePolicyPropertiesPtrOutput() SecretsManagerResourcePolicyPropertiesPtrOutput {
	return i.ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *secretsManagerResourcePolicyPropertiesPtrType) ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagerResourcePolicyPropertiesPtrOutput)
}

// Definition of SecretsManagerResourcePolicy
type SecretsManagerResourcePolicyPropertiesOutput struct{ *pulumi.OutputState }

func (SecretsManagerResourcePolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagerResourcePolicyProperties)(nil)).Elem()
}

func (o SecretsManagerResourcePolicyPropertiesOutput) ToSecretsManagerResourcePolicyPropertiesOutput() SecretsManagerResourcePolicyPropertiesOutput {
	return o
}

func (o SecretsManagerResourcePolicyPropertiesOutput) ToSecretsManagerResourcePolicyPropertiesOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesOutput {
	return o
}

func (o SecretsManagerResourcePolicyPropertiesOutput) ToSecretsManagerResourcePolicyPropertiesPtrOutput() SecretsManagerResourcePolicyPropertiesPtrOutput {
	return o.ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o SecretsManagerResourcePolicyPropertiesOutput) ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsManagerResourcePolicyProperties) *SecretsManagerResourcePolicyProperties {
		return &v
	}).(SecretsManagerResourcePolicyPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SecretsManagerResourcePolicyPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SecretsManagerResourcePolicyPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SecretsManagerResourcePolicyPropertiesOutput) AwsProperties() AwsSecretsManagerResourcePolicyPropertiesPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *AwsSecretsManagerResourcePolicyProperties {
		return v.AwsProperties
	}).(AwsSecretsManagerResourcePolicyPropertiesPtrOutput)
}

// AWS Region
func (o SecretsManagerResourcePolicyPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SecretsManagerResourcePolicyPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SecretsManagerResourcePolicyPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SecretsManagerResourcePolicyPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SecretsManagerResourcePolicyPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SecretsManagerResourcePolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SecretsManagerResourcePolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagerResourcePolicyProperties)(nil)).Elem()
}

func (o SecretsManagerResourcePolicyPropertiesPtrOutput) ToSecretsManagerResourcePolicyPropertiesPtrOutput() SecretsManagerResourcePolicyPropertiesPtrOutput {
	return o
}

func (o SecretsManagerResourcePolicyPropertiesPtrOutput) ToSecretsManagerResourcePolicyPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesPtrOutput {
	return o
}

func (o SecretsManagerResourcePolicyPropertiesPtrOutput) Elem() SecretsManagerResourcePolicyPropertiesOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) SecretsManagerResourcePolicyProperties {
		if v != nil {
			return *v
		}
		var ret SecretsManagerResourcePolicyProperties
		return ret
	}).(SecretsManagerResourcePolicyPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) AwsProperties() AwsSecretsManagerResourcePolicyPropertiesPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *AwsSecretsManagerResourcePolicyProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSecretsManagerResourcePolicyPropertiesPtrOutput)
}

// AWS Region
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SecretsManagerResourcePolicyPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerResourcePolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SecretsManagerResourcePolicy
type SecretsManagerResourcePolicyPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSecretsManagerResourcePolicyPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SecretsManagerResourcePolicy
type SecretsManagerResourcePolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SecretsManagerResourcePolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagerResourcePolicyPropertiesResponse)(nil)).Elem()
}

func (o SecretsManagerResourcePolicyPropertiesResponseOutput) ToSecretsManagerResourcePolicyPropertiesResponseOutput() SecretsManagerResourcePolicyPropertiesResponseOutput {
	return o
}

func (o SecretsManagerResourcePolicyPropertiesResponseOutput) ToSecretsManagerResourcePolicyPropertiesResponseOutputWithContext(ctx context.Context) SecretsManagerResourcePolicyPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) AwsProperties() AwsSecretsManagerResourcePolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *AwsSecretsManagerResourcePolicyPropertiesResponse {
		return v.AwsProperties
	}).(AwsSecretsManagerResourcePolicyPropertiesResponsePtrOutput)
}

// AWS Region
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SecretsManagerResourcePolicyPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerResourcePolicyPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SecretsManagerSecret
type SecretsManagerSecretProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSecretsManagerSecretProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SecretsManagerSecretPropertiesInput is an input type that accepts SecretsManagerSecretPropertiesArgs and SecretsManagerSecretPropertiesOutput values.
// You can construct a concrete instance of `SecretsManagerSecretPropertiesInput` via:
//
//	SecretsManagerSecretPropertiesArgs{...}
type SecretsManagerSecretPropertiesInput interface {
	pulumi.Input

	ToSecretsManagerSecretPropertiesOutput() SecretsManagerSecretPropertiesOutput
	ToSecretsManagerSecretPropertiesOutputWithContext(context.Context) SecretsManagerSecretPropertiesOutput
}

// Definition of SecretsManagerSecret
type SecretsManagerSecretPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSecretsManagerSecretPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SecretsManagerSecretPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagerSecretProperties)(nil)).Elem()
}

func (i SecretsManagerSecretPropertiesArgs) ToSecretsManagerSecretPropertiesOutput() SecretsManagerSecretPropertiesOutput {
	return i.ToSecretsManagerSecretPropertiesOutputWithContext(context.Background())
}

func (i SecretsManagerSecretPropertiesArgs) ToSecretsManagerSecretPropertiesOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagerSecretPropertiesOutput)
}

func (i SecretsManagerSecretPropertiesArgs) ToSecretsManagerSecretPropertiesPtrOutput() SecretsManagerSecretPropertiesPtrOutput {
	return i.ToSecretsManagerSecretPropertiesPtrOutputWithContext(context.Background())
}

func (i SecretsManagerSecretPropertiesArgs) ToSecretsManagerSecretPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagerSecretPropertiesOutput).ToSecretsManagerSecretPropertiesPtrOutputWithContext(ctx)
}

// SecretsManagerSecretPropertiesPtrInput is an input type that accepts SecretsManagerSecretPropertiesArgs, SecretsManagerSecretPropertiesPtr and SecretsManagerSecretPropertiesPtrOutput values.
// You can construct a concrete instance of `SecretsManagerSecretPropertiesPtrInput` via:
//
//	        SecretsManagerSecretPropertiesArgs{...}
//
//	or:
//
//	        nil
type SecretsManagerSecretPropertiesPtrInput interface {
	pulumi.Input

	ToSecretsManagerSecretPropertiesPtrOutput() SecretsManagerSecretPropertiesPtrOutput
	ToSecretsManagerSecretPropertiesPtrOutputWithContext(context.Context) SecretsManagerSecretPropertiesPtrOutput
}

type secretsManagerSecretPropertiesPtrType SecretsManagerSecretPropertiesArgs

func SecretsManagerSecretPropertiesPtr(v *SecretsManagerSecretPropertiesArgs) SecretsManagerSecretPropertiesPtrInput {
	return (*secretsManagerSecretPropertiesPtrType)(v)
}

func (*secretsManagerSecretPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagerSecretProperties)(nil)).Elem()
}

func (i *secretsManagerSecretPropertiesPtrType) ToSecretsManagerSecretPropertiesPtrOutput() SecretsManagerSecretPropertiesPtrOutput {
	return i.ToSecretsManagerSecretPropertiesPtrOutputWithContext(context.Background())
}

func (i *secretsManagerSecretPropertiesPtrType) ToSecretsManagerSecretPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagerSecretPropertiesPtrOutput)
}

// Definition of SecretsManagerSecret
type SecretsManagerSecretPropertiesOutput struct{ *pulumi.OutputState }

func (SecretsManagerSecretPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagerSecretProperties)(nil)).Elem()
}

func (o SecretsManagerSecretPropertiesOutput) ToSecretsManagerSecretPropertiesOutput() SecretsManagerSecretPropertiesOutput {
	return o
}

func (o SecretsManagerSecretPropertiesOutput) ToSecretsManagerSecretPropertiesOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesOutput {
	return o
}

func (o SecretsManagerSecretPropertiesOutput) ToSecretsManagerSecretPropertiesPtrOutput() SecretsManagerSecretPropertiesPtrOutput {
	return o.ToSecretsManagerSecretPropertiesPtrOutputWithContext(context.Background())
}

func (o SecretsManagerSecretPropertiesOutput) ToSecretsManagerSecretPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsManagerSecretProperties) *SecretsManagerSecretProperties {
		return &v
	}).(SecretsManagerSecretPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SecretsManagerSecretPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SecretsManagerSecretPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SecretsManagerSecretPropertiesOutput) AwsProperties() AwsSecretsManagerSecretPropertiesPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *AwsSecretsManagerSecretProperties { return v.AwsProperties }).(AwsSecretsManagerSecretPropertiesPtrOutput)
}

// AWS Region
func (o SecretsManagerSecretPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SecretsManagerSecretPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SecretsManagerSecretPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SecretsManagerSecretPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SecretsManagerSecretPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SecretsManagerSecretPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SecretsManagerSecretPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagerSecretProperties)(nil)).Elem()
}

func (o SecretsManagerSecretPropertiesPtrOutput) ToSecretsManagerSecretPropertiesPtrOutput() SecretsManagerSecretPropertiesPtrOutput {
	return o
}

func (o SecretsManagerSecretPropertiesPtrOutput) ToSecretsManagerSecretPropertiesPtrOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesPtrOutput {
	return o
}

func (o SecretsManagerSecretPropertiesPtrOutput) Elem() SecretsManagerSecretPropertiesOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) SecretsManagerSecretProperties {
		if v != nil {
			return *v
		}
		var ret SecretsManagerSecretProperties
		return ret
	}).(SecretsManagerSecretPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SecretsManagerSecretPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SecretsManagerSecretPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SecretsManagerSecretPropertiesPtrOutput) AwsProperties() AwsSecretsManagerSecretPropertiesPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *AwsSecretsManagerSecretProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSecretsManagerSecretPropertiesPtrOutput)
}

// AWS Region
func (o SecretsManagerSecretPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SecretsManagerSecretPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SecretsManagerSecretPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SecretsManagerSecretPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SecretsManagerSecretPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagerSecretProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SecretsManagerSecret
type SecretsManagerSecretPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSecretsManagerSecretPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SecretsManagerSecret
type SecretsManagerSecretPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SecretsManagerSecretPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagerSecretPropertiesResponse)(nil)).Elem()
}

func (o SecretsManagerSecretPropertiesResponseOutput) ToSecretsManagerSecretPropertiesResponseOutput() SecretsManagerSecretPropertiesResponseOutput {
	return o
}

func (o SecretsManagerSecretPropertiesResponseOutput) ToSecretsManagerSecretPropertiesResponseOutputWithContext(ctx context.Context) SecretsManagerSecretPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SecretsManagerSecretPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SecretsManagerSecretPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SecretsManagerSecretPropertiesResponseOutput) AwsProperties() AwsSecretsManagerSecretPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *AwsSecretsManagerSecretPropertiesResponse {
		return v.AwsProperties
	}).(AwsSecretsManagerSecretPropertiesResponsePtrOutput)
}

// AWS Region
func (o SecretsManagerSecretPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SecretsManagerSecretPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SecretsManagerSecretPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SecretsManagerSecretPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SecretsManagerSecretPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SecretsManagerSecretPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagerSecretPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SecurityGroupMembership
type SecurityGroupMembership struct {
	// <p>The unique ID for this security group.</p>
	SecurityGroupIdentifier *string `pulumi:"securityGroupIdentifier"`
	// <p>The status of this security group.</p>
	Status *string `pulumi:"status"`
}

// SecurityGroupMembershipInput is an input type that accepts SecurityGroupMembershipArgs and SecurityGroupMembershipOutput values.
// You can construct a concrete instance of `SecurityGroupMembershipInput` via:
//
//	SecurityGroupMembershipArgs{...}
type SecurityGroupMembershipInput interface {
	pulumi.Input

	ToSecurityGroupMembershipOutput() SecurityGroupMembershipOutput
	ToSecurityGroupMembershipOutputWithContext(context.Context) SecurityGroupMembershipOutput
}

// Definition of SecurityGroupMembership
type SecurityGroupMembershipArgs struct {
	// <p>The unique ID for this security group.</p>
	SecurityGroupIdentifier pulumi.StringPtrInput `pulumi:"securityGroupIdentifier"`
	// <p>The status of this security group.</p>
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SecurityGroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupMembership)(nil)).Elem()
}

func (i SecurityGroupMembershipArgs) ToSecurityGroupMembershipOutput() SecurityGroupMembershipOutput {
	return i.ToSecurityGroupMembershipOutputWithContext(context.Background())
}

func (i SecurityGroupMembershipArgs) ToSecurityGroupMembershipOutputWithContext(ctx context.Context) SecurityGroupMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupMembershipOutput)
}

// SecurityGroupMembershipArrayInput is an input type that accepts SecurityGroupMembershipArray and SecurityGroupMembershipArrayOutput values.
// You can construct a concrete instance of `SecurityGroupMembershipArrayInput` via:
//
//	SecurityGroupMembershipArray{ SecurityGroupMembershipArgs{...} }
type SecurityGroupMembershipArrayInput interface {
	pulumi.Input

	ToSecurityGroupMembershipArrayOutput() SecurityGroupMembershipArrayOutput
	ToSecurityGroupMembershipArrayOutputWithContext(context.Context) SecurityGroupMembershipArrayOutput
}

type SecurityGroupMembershipArray []SecurityGroupMembershipInput

func (SecurityGroupMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupMembership)(nil)).Elem()
}

func (i SecurityGroupMembershipArray) ToSecurityGroupMembershipArrayOutput() SecurityGroupMembershipArrayOutput {
	return i.ToSecurityGroupMembershipArrayOutputWithContext(context.Background())
}

func (i SecurityGroupMembershipArray) ToSecurityGroupMembershipArrayOutputWithContext(ctx context.Context) SecurityGroupMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupMembershipArrayOutput)
}

// Definition of SecurityGroupMembership
type SecurityGroupMembershipOutput struct{ *pulumi.OutputState }

func (SecurityGroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupMembership)(nil)).Elem()
}

func (o SecurityGroupMembershipOutput) ToSecurityGroupMembershipOutput() SecurityGroupMembershipOutput {
	return o
}

func (o SecurityGroupMembershipOutput) ToSecurityGroupMembershipOutputWithContext(ctx context.Context) SecurityGroupMembershipOutput {
	return o
}

// <p>The unique ID for this security group.</p>
func (o SecurityGroupMembershipOutput) SecurityGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupMembership) *string { return v.SecurityGroupIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The status of this security group.</p>
func (o SecurityGroupMembershipOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupMembership) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SecurityGroupMembershipArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupMembership)(nil)).Elem()
}

func (o SecurityGroupMembershipArrayOutput) ToSecurityGroupMembershipArrayOutput() SecurityGroupMembershipArrayOutput {
	return o
}

func (o SecurityGroupMembershipArrayOutput) ToSecurityGroupMembershipArrayOutputWithContext(ctx context.Context) SecurityGroupMembershipArrayOutput {
	return o
}

func (o SecurityGroupMembershipArrayOutput) Index(i pulumi.IntInput) SecurityGroupMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupMembership {
		return vs[0].([]SecurityGroupMembership)[vs[1].(int)]
	}).(SecurityGroupMembershipOutput)
}

// Definition of SecurityGroupMembership
type SecurityGroupMembershipResponse struct {
	// <p>The unique ID for this security group.</p>
	SecurityGroupIdentifier *string `pulumi:"securityGroupIdentifier"`
	// <p>The status of this security group.</p>
	Status *string `pulumi:"status"`
}

// Definition of SecurityGroupMembership
type SecurityGroupMembershipResponseOutput struct{ *pulumi.OutputState }

func (SecurityGroupMembershipResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupMembershipResponse)(nil)).Elem()
}

func (o SecurityGroupMembershipResponseOutput) ToSecurityGroupMembershipResponseOutput() SecurityGroupMembershipResponseOutput {
	return o
}

func (o SecurityGroupMembershipResponseOutput) ToSecurityGroupMembershipResponseOutputWithContext(ctx context.Context) SecurityGroupMembershipResponseOutput {
	return o
}

// <p>The unique ID for this security group.</p>
func (o SecurityGroupMembershipResponseOutput) SecurityGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupMembershipResponse) *string { return v.SecurityGroupIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The status of this security group.</p>
func (o SecurityGroupMembershipResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupMembershipResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SecurityGroupMembershipResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupMembershipResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupMembershipResponse)(nil)).Elem()
}

func (o SecurityGroupMembershipResponseArrayOutput) ToSecurityGroupMembershipResponseArrayOutput() SecurityGroupMembershipResponseArrayOutput {
	return o
}

func (o SecurityGroupMembershipResponseArrayOutput) ToSecurityGroupMembershipResponseArrayOutputWithContext(ctx context.Context) SecurityGroupMembershipResponseArrayOutput {
	return o
}

func (o SecurityGroupMembershipResponseArrayOutput) Index(i pulumi.IntInput) SecurityGroupMembershipResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupMembershipResponse {
		return vs[0].([]SecurityGroupMembershipResponse)[vs[1].(int)]
	}).(SecurityGroupMembershipResponseOutput)
}

// Definition of ServerSideEncryptionByDefault
type ServerSideEncryptionByDefault struct {
	// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key Alias: ``alias/alias-name``    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	KmsMasterKeyID *string `pulumi:"kmsMasterKeyID"`
	// Server-side encryption algorithm to use for the default encryption.
	SseAlgorithm *string `pulumi:"sseAlgorithm"`
}

// ServerSideEncryptionByDefaultInput is an input type that accepts ServerSideEncryptionByDefaultArgs and ServerSideEncryptionByDefaultOutput values.
// You can construct a concrete instance of `ServerSideEncryptionByDefaultInput` via:
//
//	ServerSideEncryptionByDefaultArgs{...}
type ServerSideEncryptionByDefaultInput interface {
	pulumi.Input

	ToServerSideEncryptionByDefaultOutput() ServerSideEncryptionByDefaultOutput
	ToServerSideEncryptionByDefaultOutputWithContext(context.Context) ServerSideEncryptionByDefaultOutput
}

// Definition of ServerSideEncryptionByDefault
type ServerSideEncryptionByDefaultArgs struct {
	// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key Alias: ``alias/alias-name``    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	KmsMasterKeyID pulumi.StringPtrInput `pulumi:"kmsMasterKeyID"`
	// Server-side encryption algorithm to use for the default encryption.
	SseAlgorithm pulumi.StringPtrInput `pulumi:"sseAlgorithm"`
}

func (ServerSideEncryptionByDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSideEncryptionByDefault)(nil)).Elem()
}

func (i ServerSideEncryptionByDefaultArgs) ToServerSideEncryptionByDefaultOutput() ServerSideEncryptionByDefaultOutput {
	return i.ToServerSideEncryptionByDefaultOutputWithContext(context.Background())
}

func (i ServerSideEncryptionByDefaultArgs) ToServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSideEncryptionByDefaultOutput)
}

func (i ServerSideEncryptionByDefaultArgs) ToServerSideEncryptionByDefaultPtrOutput() ServerSideEncryptionByDefaultPtrOutput {
	return i.ToServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i ServerSideEncryptionByDefaultArgs) ToServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSideEncryptionByDefaultOutput).ToServerSideEncryptionByDefaultPtrOutputWithContext(ctx)
}

// ServerSideEncryptionByDefaultPtrInput is an input type that accepts ServerSideEncryptionByDefaultArgs, ServerSideEncryptionByDefaultPtr and ServerSideEncryptionByDefaultPtrOutput values.
// You can construct a concrete instance of `ServerSideEncryptionByDefaultPtrInput` via:
//
//	        ServerSideEncryptionByDefaultArgs{...}
//
//	or:
//
//	        nil
type ServerSideEncryptionByDefaultPtrInput interface {
	pulumi.Input

	ToServerSideEncryptionByDefaultPtrOutput() ServerSideEncryptionByDefaultPtrOutput
	ToServerSideEncryptionByDefaultPtrOutputWithContext(context.Context) ServerSideEncryptionByDefaultPtrOutput
}

type serverSideEncryptionByDefaultPtrType ServerSideEncryptionByDefaultArgs

func ServerSideEncryptionByDefaultPtr(v *ServerSideEncryptionByDefaultArgs) ServerSideEncryptionByDefaultPtrInput {
	return (*serverSideEncryptionByDefaultPtrType)(v)
}

func (*serverSideEncryptionByDefaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSideEncryptionByDefault)(nil)).Elem()
}

func (i *serverSideEncryptionByDefaultPtrType) ToServerSideEncryptionByDefaultPtrOutput() ServerSideEncryptionByDefaultPtrOutput {
	return i.ToServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i *serverSideEncryptionByDefaultPtrType) ToServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSideEncryptionByDefaultPtrOutput)
}

// Definition of ServerSideEncryptionByDefault
type ServerSideEncryptionByDefaultOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionByDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSideEncryptionByDefault)(nil)).Elem()
}

func (o ServerSideEncryptionByDefaultOutput) ToServerSideEncryptionByDefaultOutput() ServerSideEncryptionByDefaultOutput {
	return o
}

func (o ServerSideEncryptionByDefaultOutput) ToServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultOutput {
	return o
}

func (o ServerSideEncryptionByDefaultOutput) ToServerSideEncryptionByDefaultPtrOutput() ServerSideEncryptionByDefaultPtrOutput {
	return o.ToServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (o ServerSideEncryptionByDefaultOutput) ToServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerSideEncryptionByDefault) *ServerSideEncryptionByDefault {
		return &v
	}).(ServerSideEncryptionByDefaultPtrOutput)
}

// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if “SSEAlgorithm“ is set to “aws:kms“ or “aws:kms:dsse“. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: “1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key ARN: “arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key Alias: “alias/alias-name“    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o ServerSideEncryptionByDefaultOutput) KmsMasterKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionByDefault) *string { return v.KmsMasterKeyID }).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
func (o ServerSideEncryptionByDefaultOutput) SseAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionByDefault) *string { return v.SseAlgorithm }).(pulumi.StringPtrOutput)
}

type ServerSideEncryptionByDefaultPtrOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionByDefaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSideEncryptionByDefault)(nil)).Elem()
}

func (o ServerSideEncryptionByDefaultPtrOutput) ToServerSideEncryptionByDefaultPtrOutput() ServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o ServerSideEncryptionByDefaultPtrOutput) ToServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o ServerSideEncryptionByDefaultPtrOutput) Elem() ServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func(v *ServerSideEncryptionByDefault) ServerSideEncryptionByDefault {
		if v != nil {
			return *v
		}
		var ret ServerSideEncryptionByDefault
		return ret
	}).(ServerSideEncryptionByDefaultOutput)
}

// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if “SSEAlgorithm“ is set to “aws:kms“ or “aws:kms:dsse“. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: “1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key ARN: “arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key Alias: “alias/alias-name“    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o ServerSideEncryptionByDefaultPtrOutput) KmsMasterKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyID
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
func (o ServerSideEncryptionByDefaultPtrOutput) SseAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return v.SseAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Definition of ServerSideEncryptionByDefault
type ServerSideEncryptionByDefaultResponse struct {
	// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key Alias: ``alias/alias-name``    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	KmsMasterKeyID *string `pulumi:"kmsMasterKeyID"`
	// Server-side encryption algorithm to use for the default encryption.
	SseAlgorithm *string `pulumi:"sseAlgorithm"`
}

// Definition of ServerSideEncryptionByDefault
type ServerSideEncryptionByDefaultResponseOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionByDefaultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSideEncryptionByDefaultResponse)(nil)).Elem()
}

func (o ServerSideEncryptionByDefaultResponseOutput) ToServerSideEncryptionByDefaultResponseOutput() ServerSideEncryptionByDefaultResponseOutput {
	return o
}

func (o ServerSideEncryptionByDefaultResponseOutput) ToServerSideEncryptionByDefaultResponseOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultResponseOutput {
	return o
}

// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if “SSEAlgorithm“ is set to “aws:kms“ or “aws:kms:dsse“. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: “1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key ARN: “arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key Alias: “alias/alias-name“    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o ServerSideEncryptionByDefaultResponseOutput) KmsMasterKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionByDefaultResponse) *string { return v.KmsMasterKeyID }).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
func (o ServerSideEncryptionByDefaultResponseOutput) SseAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionByDefaultResponse) *string { return v.SseAlgorithm }).(pulumi.StringPtrOutput)
}

type ServerSideEncryptionByDefaultResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionByDefaultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSideEncryptionByDefaultResponse)(nil)).Elem()
}

func (o ServerSideEncryptionByDefaultResponsePtrOutput) ToServerSideEncryptionByDefaultResponsePtrOutput() ServerSideEncryptionByDefaultResponsePtrOutput {
	return o
}

func (o ServerSideEncryptionByDefaultResponsePtrOutput) ToServerSideEncryptionByDefaultResponsePtrOutputWithContext(ctx context.Context) ServerSideEncryptionByDefaultResponsePtrOutput {
	return o
}

func (o ServerSideEncryptionByDefaultResponsePtrOutput) Elem() ServerSideEncryptionByDefaultResponseOutput {
	return o.ApplyT(func(v *ServerSideEncryptionByDefaultResponse) ServerSideEncryptionByDefaultResponse {
		if v != nil {
			return *v
		}
		var ret ServerSideEncryptionByDefaultResponse
		return ret
	}).(ServerSideEncryptionByDefaultResponseOutput)
}

// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if “SSEAlgorithm“ is set to “aws:kms“ or “aws:kms:dsse“. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: “1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key ARN: “arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab“   +  Key Alias: “alias/alias-name“    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o ServerSideEncryptionByDefaultResponsePtrOutput) KmsMasterKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSideEncryptionByDefaultResponse) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyID
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
func (o ServerSideEncryptionByDefaultResponsePtrOutput) SseAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSideEncryptionByDefaultResponse) *string {
		if v == nil {
			return nil
		}
		return v.SseAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Definition of ServerSideEncryptionRule
type ServerSideEncryptionRule struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
	BucketKeyEnabled *bool `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
	ServerSideEncryptionByDefault *ServerSideEncryptionByDefault `pulumi:"serverSideEncryptionByDefault"`
}

// ServerSideEncryptionRuleInput is an input type that accepts ServerSideEncryptionRuleArgs and ServerSideEncryptionRuleOutput values.
// You can construct a concrete instance of `ServerSideEncryptionRuleInput` via:
//
//	ServerSideEncryptionRuleArgs{...}
type ServerSideEncryptionRuleInput interface {
	pulumi.Input

	ToServerSideEncryptionRuleOutput() ServerSideEncryptionRuleOutput
	ToServerSideEncryptionRuleOutputWithContext(context.Context) ServerSideEncryptionRuleOutput
}

// Definition of ServerSideEncryptionRule
type ServerSideEncryptionRuleArgs struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
	BucketKeyEnabled pulumi.BoolPtrInput `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
	ServerSideEncryptionByDefault ServerSideEncryptionByDefaultPtrInput `pulumi:"serverSideEncryptionByDefault"`
}

func (ServerSideEncryptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSideEncryptionRule)(nil)).Elem()
}

func (i ServerSideEncryptionRuleArgs) ToServerSideEncryptionRuleOutput() ServerSideEncryptionRuleOutput {
	return i.ToServerSideEncryptionRuleOutputWithContext(context.Background())
}

func (i ServerSideEncryptionRuleArgs) ToServerSideEncryptionRuleOutputWithContext(ctx context.Context) ServerSideEncryptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSideEncryptionRuleOutput)
}

// ServerSideEncryptionRuleArrayInput is an input type that accepts ServerSideEncryptionRuleArray and ServerSideEncryptionRuleArrayOutput values.
// You can construct a concrete instance of `ServerSideEncryptionRuleArrayInput` via:
//
//	ServerSideEncryptionRuleArray{ ServerSideEncryptionRuleArgs{...} }
type ServerSideEncryptionRuleArrayInput interface {
	pulumi.Input

	ToServerSideEncryptionRuleArrayOutput() ServerSideEncryptionRuleArrayOutput
	ToServerSideEncryptionRuleArrayOutputWithContext(context.Context) ServerSideEncryptionRuleArrayOutput
}

type ServerSideEncryptionRuleArray []ServerSideEncryptionRuleInput

func (ServerSideEncryptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerSideEncryptionRule)(nil)).Elem()
}

func (i ServerSideEncryptionRuleArray) ToServerSideEncryptionRuleArrayOutput() ServerSideEncryptionRuleArrayOutput {
	return i.ToServerSideEncryptionRuleArrayOutputWithContext(context.Background())
}

func (i ServerSideEncryptionRuleArray) ToServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) ServerSideEncryptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSideEncryptionRuleArrayOutput)
}

// Definition of ServerSideEncryptionRule
type ServerSideEncryptionRuleOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSideEncryptionRule)(nil)).Elem()
}

func (o ServerSideEncryptionRuleOutput) ToServerSideEncryptionRuleOutput() ServerSideEncryptionRuleOutput {
	return o
}

func (o ServerSideEncryptionRuleOutput) ToServerSideEncryptionRuleOutputWithContext(ctx context.Context) ServerSideEncryptionRuleOutput {
	return o
}

// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the “BucketKeyEnabled“ element to “true“ causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
func (o ServerSideEncryptionRuleOutput) BucketKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionRule) *bool { return v.BucketKeyEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
func (o ServerSideEncryptionRuleOutput) ServerSideEncryptionByDefault() ServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionRule) *ServerSideEncryptionByDefault {
		return v.ServerSideEncryptionByDefault
	}).(ServerSideEncryptionByDefaultPtrOutput)
}

type ServerSideEncryptionRuleArrayOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerSideEncryptionRule)(nil)).Elem()
}

func (o ServerSideEncryptionRuleArrayOutput) ToServerSideEncryptionRuleArrayOutput() ServerSideEncryptionRuleArrayOutput {
	return o
}

func (o ServerSideEncryptionRuleArrayOutput) ToServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) ServerSideEncryptionRuleArrayOutput {
	return o
}

func (o ServerSideEncryptionRuleArrayOutput) Index(i pulumi.IntInput) ServerSideEncryptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerSideEncryptionRule {
		return vs[0].([]ServerSideEncryptionRule)[vs[1].(int)]
	}).(ServerSideEncryptionRuleOutput)
}

// Definition of ServerSideEncryptionRule
type ServerSideEncryptionRuleResponse struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
	BucketKeyEnabled *bool `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
	ServerSideEncryptionByDefault *ServerSideEncryptionByDefaultResponse `pulumi:"serverSideEncryptionByDefault"`
}

// Definition of ServerSideEncryptionRule
type ServerSideEncryptionRuleResponseOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSideEncryptionRuleResponse)(nil)).Elem()
}

func (o ServerSideEncryptionRuleResponseOutput) ToServerSideEncryptionRuleResponseOutput() ServerSideEncryptionRuleResponseOutput {
	return o
}

func (o ServerSideEncryptionRuleResponseOutput) ToServerSideEncryptionRuleResponseOutputWithContext(ctx context.Context) ServerSideEncryptionRuleResponseOutput {
	return o
}

// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the “BucketKeyEnabled“ element to “true“ causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
func (o ServerSideEncryptionRuleResponseOutput) BucketKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionRuleResponse) *bool { return v.BucketKeyEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
func (o ServerSideEncryptionRuleResponseOutput) ServerSideEncryptionByDefault() ServerSideEncryptionByDefaultResponsePtrOutput {
	return o.ApplyT(func(v ServerSideEncryptionRuleResponse) *ServerSideEncryptionByDefaultResponse {
		return v.ServerSideEncryptionByDefault
	}).(ServerSideEncryptionByDefaultResponsePtrOutput)
}

type ServerSideEncryptionRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ServerSideEncryptionRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerSideEncryptionRuleResponse)(nil)).Elem()
}

func (o ServerSideEncryptionRuleResponseArrayOutput) ToServerSideEncryptionRuleResponseArrayOutput() ServerSideEncryptionRuleResponseArrayOutput {
	return o
}

func (o ServerSideEncryptionRuleResponseArrayOutput) ToServerSideEncryptionRuleResponseArrayOutputWithContext(ctx context.Context) ServerSideEncryptionRuleResponseArrayOutput {
	return o
}

func (o ServerSideEncryptionRuleResponseArrayOutput) Index(i pulumi.IntInput) ServerSideEncryptionRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerSideEncryptionRuleResponse {
		return vs[0].([]ServerSideEncryptionRuleResponse)[vs[1].(int)]
	}).(ServerSideEncryptionRuleResponseOutput)
}

// Definition of ServerTypeEnumValue
type ServerTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// ServerTypeEnumValueInput is an input type that accepts ServerTypeEnumValueArgs and ServerTypeEnumValueOutput values.
// You can construct a concrete instance of `ServerTypeEnumValueInput` via:
//
//	ServerTypeEnumValueArgs{...}
type ServerTypeEnumValueInput interface {
	pulumi.Input

	ToServerTypeEnumValueOutput() ServerTypeEnumValueOutput
	ToServerTypeEnumValueOutputWithContext(context.Context) ServerTypeEnumValueOutput
}

// Definition of ServerTypeEnumValue
type ServerTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServerTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTypeEnumValue)(nil)).Elem()
}

func (i ServerTypeEnumValueArgs) ToServerTypeEnumValueOutput() ServerTypeEnumValueOutput {
	return i.ToServerTypeEnumValueOutputWithContext(context.Background())
}

func (i ServerTypeEnumValueArgs) ToServerTypeEnumValueOutputWithContext(ctx context.Context) ServerTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTypeEnumValueOutput)
}

func (i ServerTypeEnumValueArgs) ToServerTypeEnumValuePtrOutput() ServerTypeEnumValuePtrOutput {
	return i.ToServerTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i ServerTypeEnumValueArgs) ToServerTypeEnumValuePtrOutputWithContext(ctx context.Context) ServerTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTypeEnumValueOutput).ToServerTypeEnumValuePtrOutputWithContext(ctx)
}

// ServerTypeEnumValuePtrInput is an input type that accepts ServerTypeEnumValueArgs, ServerTypeEnumValuePtr and ServerTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `ServerTypeEnumValuePtrInput` via:
//
//	        ServerTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type ServerTypeEnumValuePtrInput interface {
	pulumi.Input

	ToServerTypeEnumValuePtrOutput() ServerTypeEnumValuePtrOutput
	ToServerTypeEnumValuePtrOutputWithContext(context.Context) ServerTypeEnumValuePtrOutput
}

type serverTypeEnumValuePtrType ServerTypeEnumValueArgs

func ServerTypeEnumValuePtr(v *ServerTypeEnumValueArgs) ServerTypeEnumValuePtrInput {
	return (*serverTypeEnumValuePtrType)(v)
}

func (*serverTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTypeEnumValue)(nil)).Elem()
}

func (i *serverTypeEnumValuePtrType) ToServerTypeEnumValuePtrOutput() ServerTypeEnumValuePtrOutput {
	return i.ToServerTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *serverTypeEnumValuePtrType) ToServerTypeEnumValuePtrOutputWithContext(ctx context.Context) ServerTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTypeEnumValuePtrOutput)
}

// Definition of ServerTypeEnumValue
type ServerTypeEnumValueOutput struct{ *pulumi.OutputState }

func (ServerTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTypeEnumValue)(nil)).Elem()
}

func (o ServerTypeEnumValueOutput) ToServerTypeEnumValueOutput() ServerTypeEnumValueOutput {
	return o
}

func (o ServerTypeEnumValueOutput) ToServerTypeEnumValueOutputWithContext(ctx context.Context) ServerTypeEnumValueOutput {
	return o
}

func (o ServerTypeEnumValueOutput) ToServerTypeEnumValuePtrOutput() ServerTypeEnumValuePtrOutput {
	return o.ToServerTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o ServerTypeEnumValueOutput) ToServerTypeEnumValuePtrOutputWithContext(ctx context.Context) ServerTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerTypeEnumValue) *ServerTypeEnumValue {
		return &v
	}).(ServerTypeEnumValuePtrOutput)
}

// Property value
func (o ServerTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServerTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (ServerTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTypeEnumValue)(nil)).Elem()
}

func (o ServerTypeEnumValuePtrOutput) ToServerTypeEnumValuePtrOutput() ServerTypeEnumValuePtrOutput {
	return o
}

func (o ServerTypeEnumValuePtrOutput) ToServerTypeEnumValuePtrOutputWithContext(ctx context.Context) ServerTypeEnumValuePtrOutput {
	return o
}

func (o ServerTypeEnumValuePtrOutput) Elem() ServerTypeEnumValueOutput {
	return o.ApplyT(func(v *ServerTypeEnumValue) ServerTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret ServerTypeEnumValue
		return ret
	}).(ServerTypeEnumValueOutput)
}

// Property value
func (o ServerTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ServerTypeEnumValue
type ServerTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of ServerTypeEnumValue
type ServerTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (ServerTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTypeEnumValueResponse)(nil)).Elem()
}

func (o ServerTypeEnumValueResponseOutput) ToServerTypeEnumValueResponseOutput() ServerTypeEnumValueResponseOutput {
	return o
}

func (o ServerTypeEnumValueResponseOutput) ToServerTypeEnumValueResponseOutputWithContext(ctx context.Context) ServerTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o ServerTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServerTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTypeEnumValueResponse)(nil)).Elem()
}

func (o ServerTypeEnumValueResponsePtrOutput) ToServerTypeEnumValueResponsePtrOutput() ServerTypeEnumValueResponsePtrOutput {
	return o
}

func (o ServerTypeEnumValueResponsePtrOutput) ToServerTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) ServerTypeEnumValueResponsePtrOutput {
	return o
}

func (o ServerTypeEnumValueResponsePtrOutput) Elem() ServerTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *ServerTypeEnumValueResponse) ServerTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret ServerTypeEnumValueResponse
		return ret
	}).(ServerTypeEnumValueResponseOutput)
}

// Property value
func (o ServerTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of ServerlessV2ScalingConfiguration
type ServerlessV2ScalingConfiguration struct {
	// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
	MinCapacity *float64 `pulumi:"minCapacity"`
}

// ServerlessV2ScalingConfigurationInput is an input type that accepts ServerlessV2ScalingConfigurationArgs and ServerlessV2ScalingConfigurationOutput values.
// You can construct a concrete instance of `ServerlessV2ScalingConfigurationInput` via:
//
//	ServerlessV2ScalingConfigurationArgs{...}
type ServerlessV2ScalingConfigurationInput interface {
	pulumi.Input

	ToServerlessV2ScalingConfigurationOutput() ServerlessV2ScalingConfigurationOutput
	ToServerlessV2ScalingConfigurationOutputWithContext(context.Context) ServerlessV2ScalingConfigurationOutput
}

// Definition of ServerlessV2ScalingConfiguration
type ServerlessV2ScalingConfigurationArgs struct {
	// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
	MaxCapacity pulumi.Float64PtrInput `pulumi:"maxCapacity"`
	// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
	MinCapacity pulumi.Float64PtrInput `pulumi:"minCapacity"`
}

func (ServerlessV2ScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (i ServerlessV2ScalingConfigurationArgs) ToServerlessV2ScalingConfigurationOutput() ServerlessV2ScalingConfigurationOutput {
	return i.ToServerlessV2ScalingConfigurationOutputWithContext(context.Background())
}

func (i ServerlessV2ScalingConfigurationArgs) ToServerlessV2ScalingConfigurationOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessV2ScalingConfigurationOutput)
}

func (i ServerlessV2ScalingConfigurationArgs) ToServerlessV2ScalingConfigurationPtrOutput() ServerlessV2ScalingConfigurationPtrOutput {
	return i.ToServerlessV2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i ServerlessV2ScalingConfigurationArgs) ToServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessV2ScalingConfigurationOutput).ToServerlessV2ScalingConfigurationPtrOutputWithContext(ctx)
}

// ServerlessV2ScalingConfigurationPtrInput is an input type that accepts ServerlessV2ScalingConfigurationArgs, ServerlessV2ScalingConfigurationPtr and ServerlessV2ScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `ServerlessV2ScalingConfigurationPtrInput` via:
//
//	        ServerlessV2ScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServerlessV2ScalingConfigurationPtrInput interface {
	pulumi.Input

	ToServerlessV2ScalingConfigurationPtrOutput() ServerlessV2ScalingConfigurationPtrOutput
	ToServerlessV2ScalingConfigurationPtrOutputWithContext(context.Context) ServerlessV2ScalingConfigurationPtrOutput
}

type serverlessV2ScalingConfigurationPtrType ServerlessV2ScalingConfigurationArgs

func ServerlessV2ScalingConfigurationPtr(v *ServerlessV2ScalingConfigurationArgs) ServerlessV2ScalingConfigurationPtrInput {
	return (*serverlessV2ScalingConfigurationPtrType)(v)
}

func (*serverlessV2ScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (i *serverlessV2ScalingConfigurationPtrType) ToServerlessV2ScalingConfigurationPtrOutput() ServerlessV2ScalingConfigurationPtrOutput {
	return i.ToServerlessV2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *serverlessV2ScalingConfigurationPtrType) ToServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessV2ScalingConfigurationPtrOutput)
}

// Definition of ServerlessV2ScalingConfiguration
type ServerlessV2ScalingConfigurationOutput struct{ *pulumi.OutputState }

func (ServerlessV2ScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (o ServerlessV2ScalingConfigurationOutput) ToServerlessV2ScalingConfigurationOutput() ServerlessV2ScalingConfigurationOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationOutput) ToServerlessV2ScalingConfigurationOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationOutput) ToServerlessV2ScalingConfigurationPtrOutput() ServerlessV2ScalingConfigurationPtrOutput {
	return o.ToServerlessV2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o ServerlessV2ScalingConfigurationOutput) ToServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessV2ScalingConfiguration) *ServerlessV2ScalingConfiguration {
		return &v
	}).(ServerlessV2ScalingConfigurationPtrOutput)
}

// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
func (o ServerlessV2ScalingConfigurationOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerlessV2ScalingConfiguration) *float64 { return v.MaxCapacity }).(pulumi.Float64PtrOutput)
}

// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
func (o ServerlessV2ScalingConfigurationOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerlessV2ScalingConfiguration) *float64 { return v.MinCapacity }).(pulumi.Float64PtrOutput)
}

type ServerlessV2ScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServerlessV2ScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (o ServerlessV2ScalingConfigurationPtrOutput) ToServerlessV2ScalingConfigurationPtrOutput() ServerlessV2ScalingConfigurationPtrOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationPtrOutput) ToServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationPtrOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationPtrOutput) Elem() ServerlessV2ScalingConfigurationOutput {
	return o.ApplyT(func(v *ServerlessV2ScalingConfiguration) ServerlessV2ScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret ServerlessV2ScalingConfiguration
		return ret
	}).(ServerlessV2ScalingConfigurationOutput)
}

// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
func (o ServerlessV2ScalingConfigurationPtrOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerlessV2ScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
func (o ServerlessV2ScalingConfigurationPtrOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerlessV2ScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.Float64PtrOutput)
}

// Definition of ServerlessV2ScalingConfiguration
type ServerlessV2ScalingConfigurationResponse struct {
	// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
	MinCapacity *float64 `pulumi:"minCapacity"`
}

// Definition of ServerlessV2ScalingConfiguration
type ServerlessV2ScalingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServerlessV2ScalingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessV2ScalingConfigurationResponse)(nil)).Elem()
}

func (o ServerlessV2ScalingConfigurationResponseOutput) ToServerlessV2ScalingConfigurationResponseOutput() ServerlessV2ScalingConfigurationResponseOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationResponseOutput) ToServerlessV2ScalingConfigurationResponseOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationResponseOutput {
	return o
}

// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
func (o ServerlessV2ScalingConfigurationResponseOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerlessV2ScalingConfigurationResponse) *float64 { return v.MaxCapacity }).(pulumi.Float64PtrOutput)
}

// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
func (o ServerlessV2ScalingConfigurationResponseOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerlessV2ScalingConfigurationResponse) *float64 { return v.MinCapacity }).(pulumi.Float64PtrOutput)
}

type ServerlessV2ScalingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerlessV2ScalingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessV2ScalingConfigurationResponse)(nil)).Elem()
}

func (o ServerlessV2ScalingConfigurationResponsePtrOutput) ToServerlessV2ScalingConfigurationResponsePtrOutput() ServerlessV2ScalingConfigurationResponsePtrOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationResponsePtrOutput) ToServerlessV2ScalingConfigurationResponsePtrOutputWithContext(ctx context.Context) ServerlessV2ScalingConfigurationResponsePtrOutput {
	return o
}

func (o ServerlessV2ScalingConfigurationResponsePtrOutput) Elem() ServerlessV2ScalingConfigurationResponseOutput {
	return o.ApplyT(func(v *ServerlessV2ScalingConfigurationResponse) ServerlessV2ScalingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ServerlessV2ScalingConfigurationResponse
		return ret
	}).(ServerlessV2ScalingConfigurationResponseOutput)
}

// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
func (o ServerlessV2ScalingConfigurationResponsePtrOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerlessV2ScalingConfigurationResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
func (o ServerlessV2ScalingConfigurationResponsePtrOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerlessV2ScalingConfigurationResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.Float64PtrOutput)
}

// Definition of ServiceConnectClientAlias
type ServiceConnectClientAlias struct {
	// The ``dnsName`` is the name that you use in the applications of client tasks to connect to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of ``discoveryName.namespace`` is used. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``. To avoid changing your applications in client Amazon ECS services, set this to the same name that the client application uses by default. For example, a few common names are ``database``, ``db``, or the lowercase name of a database, such as ``mysql`` or ``redis``. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	DnsName *string `pulumi:"dnsName"`
	// The listening port number for the Service Connect proxy. This port is available inside of all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services, set this to the same port that the client application uses by default. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	Port *int `pulumi:"port"`
}

// ServiceConnectClientAliasInput is an input type that accepts ServiceConnectClientAliasArgs and ServiceConnectClientAliasOutput values.
// You can construct a concrete instance of `ServiceConnectClientAliasInput` via:
//
//	ServiceConnectClientAliasArgs{...}
type ServiceConnectClientAliasInput interface {
	pulumi.Input

	ToServiceConnectClientAliasOutput() ServiceConnectClientAliasOutput
	ToServiceConnectClientAliasOutputWithContext(context.Context) ServiceConnectClientAliasOutput
}

// Definition of ServiceConnectClientAlias
type ServiceConnectClientAliasArgs struct {
	// The ``dnsName`` is the name that you use in the applications of client tasks to connect to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of ``discoveryName.namespace`` is used. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``. To avoid changing your applications in client Amazon ECS services, set this to the same name that the client application uses by default. For example, a few common names are ``database``, ``db``, or the lowercase name of a database, such as ``mysql`` or ``redis``. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The listening port number for the Service Connect proxy. This port is available inside of all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services, set this to the same port that the client application uses by default. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ServiceConnectClientAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectClientAlias)(nil)).Elem()
}

func (i ServiceConnectClientAliasArgs) ToServiceConnectClientAliasOutput() ServiceConnectClientAliasOutput {
	return i.ToServiceConnectClientAliasOutputWithContext(context.Background())
}

func (i ServiceConnectClientAliasArgs) ToServiceConnectClientAliasOutputWithContext(ctx context.Context) ServiceConnectClientAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectClientAliasOutput)
}

// ServiceConnectClientAliasArrayInput is an input type that accepts ServiceConnectClientAliasArray and ServiceConnectClientAliasArrayOutput values.
// You can construct a concrete instance of `ServiceConnectClientAliasArrayInput` via:
//
//	ServiceConnectClientAliasArray{ ServiceConnectClientAliasArgs{...} }
type ServiceConnectClientAliasArrayInput interface {
	pulumi.Input

	ToServiceConnectClientAliasArrayOutput() ServiceConnectClientAliasArrayOutput
	ToServiceConnectClientAliasArrayOutputWithContext(context.Context) ServiceConnectClientAliasArrayOutput
}

type ServiceConnectClientAliasArray []ServiceConnectClientAliasInput

func (ServiceConnectClientAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectClientAlias)(nil)).Elem()
}

func (i ServiceConnectClientAliasArray) ToServiceConnectClientAliasArrayOutput() ServiceConnectClientAliasArrayOutput {
	return i.ToServiceConnectClientAliasArrayOutputWithContext(context.Background())
}

func (i ServiceConnectClientAliasArray) ToServiceConnectClientAliasArrayOutputWithContext(ctx context.Context) ServiceConnectClientAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectClientAliasArrayOutput)
}

// Definition of ServiceConnectClientAlias
type ServiceConnectClientAliasOutput struct{ *pulumi.OutputState }

func (ServiceConnectClientAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectClientAlias)(nil)).Elem()
}

func (o ServiceConnectClientAliasOutput) ToServiceConnectClientAliasOutput() ServiceConnectClientAliasOutput {
	return o
}

func (o ServiceConnectClientAliasOutput) ToServiceConnectClientAliasOutputWithContext(ctx context.Context) ServiceConnectClientAliasOutput {
	return o
}

// The “dnsName“ is the name that you use in the applications of client tasks to connect to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of “discoveryName.namespace“ is used. If the “discoveryName“ isn't specified, the port mapping name from the task definition is used in “portName.namespace“. To avoid changing your applications in client Amazon ECS services, set this to the same name that the client application uses by default. For example, a few common names are “database“, “db“, or the lowercase name of a database, such as “mysql“ or “redis“. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o ServiceConnectClientAliasOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectClientAlias) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The listening port number for the Service Connect proxy. This port is available inside of all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services, set this to the same port that the client application uses by default. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o ServiceConnectClientAliasOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceConnectClientAlias) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ServiceConnectClientAliasArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectClientAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectClientAlias)(nil)).Elem()
}

func (o ServiceConnectClientAliasArrayOutput) ToServiceConnectClientAliasArrayOutput() ServiceConnectClientAliasArrayOutput {
	return o
}

func (o ServiceConnectClientAliasArrayOutput) ToServiceConnectClientAliasArrayOutputWithContext(ctx context.Context) ServiceConnectClientAliasArrayOutput {
	return o
}

func (o ServiceConnectClientAliasArrayOutput) Index(i pulumi.IntInput) ServiceConnectClientAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConnectClientAlias {
		return vs[0].([]ServiceConnectClientAlias)[vs[1].(int)]
	}).(ServiceConnectClientAliasOutput)
}

// Definition of ServiceConnectClientAlias
type ServiceConnectClientAliasResponse struct {
	// The ``dnsName`` is the name that you use in the applications of client tasks to connect to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of ``discoveryName.namespace`` is used. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``. To avoid changing your applications in client Amazon ECS services, set this to the same name that the client application uses by default. For example, a few common names are ``database``, ``db``, or the lowercase name of a database, such as ``mysql`` or ``redis``. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	DnsName *string `pulumi:"dnsName"`
	// The listening port number for the Service Connect proxy. This port is available inside of all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services, set this to the same port that the client application uses by default. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
	Port *int `pulumi:"port"`
}

// Definition of ServiceConnectClientAlias
type ServiceConnectClientAliasResponseOutput struct{ *pulumi.OutputState }

func (ServiceConnectClientAliasResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectClientAliasResponse)(nil)).Elem()
}

func (o ServiceConnectClientAliasResponseOutput) ToServiceConnectClientAliasResponseOutput() ServiceConnectClientAliasResponseOutput {
	return o
}

func (o ServiceConnectClientAliasResponseOutput) ToServiceConnectClientAliasResponseOutputWithContext(ctx context.Context) ServiceConnectClientAliasResponseOutput {
	return o
}

// The “dnsName“ is the name that you use in the applications of client tasks to connect to this service. The name must be a valid DNS name but doesn't need to be fully-qualified. The name can include up to 127 characters. The name can include lowercase letters, numbers, underscores (_), hyphens (-), and periods (.). The name can't start with a hyphen. If this parameter isn't specified, the default value of “discoveryName.namespace“ is used. If the “discoveryName“ isn't specified, the port mapping name from the task definition is used in “portName.namespace“. To avoid changing your applications in client Amazon ECS services, set this to the same name that the client application uses by default. For example, a few common names are “database“, “db“, or the lowercase name of a database, such as “mysql“ or “redis“. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o ServiceConnectClientAliasResponseOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectClientAliasResponse) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The listening port number for the Service Connect proxy. This port is available inside of all of the tasks within the same namespace. To avoid changing your applications in client Amazon ECS services, set this to the same port that the client application uses by default. For more information, see [Service Connect](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o ServiceConnectClientAliasResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceConnectClientAliasResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ServiceConnectClientAliasResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectClientAliasResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectClientAliasResponse)(nil)).Elem()
}

func (o ServiceConnectClientAliasResponseArrayOutput) ToServiceConnectClientAliasResponseArrayOutput() ServiceConnectClientAliasResponseArrayOutput {
	return o
}

func (o ServiceConnectClientAliasResponseArrayOutput) ToServiceConnectClientAliasResponseArrayOutputWithContext(ctx context.Context) ServiceConnectClientAliasResponseArrayOutput {
	return o
}

func (o ServiceConnectClientAliasResponseArrayOutput) Index(i pulumi.IntInput) ServiceConnectClientAliasResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConnectClientAliasResponse {
		return vs[0].([]ServiceConnectClientAliasResponse)[vs[1].(int)]
	}).(ServiceConnectClientAliasResponseOutput)
}

// Definition of ServiceConnectConfiguration
type ServiceConnectConfiguration struct {
	// Specifies whether to use Service Connect with this service.
	Enabled *bool `pulumi:"enabled"`
	// The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
	LogConfiguration *LogConfiguration `pulumi:"logConfiguration"`
	// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
	Namespace *string `pulumi:"namespace"`
	// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
	Services []ServiceConnectService `pulumi:"services"`
}

// ServiceConnectConfigurationInput is an input type that accepts ServiceConnectConfigurationArgs and ServiceConnectConfigurationOutput values.
// You can construct a concrete instance of `ServiceConnectConfigurationInput` via:
//
//	ServiceConnectConfigurationArgs{...}
type ServiceConnectConfigurationInput interface {
	pulumi.Input

	ToServiceConnectConfigurationOutput() ServiceConnectConfigurationOutput
	ToServiceConnectConfigurationOutputWithContext(context.Context) ServiceConnectConfigurationOutput
}

// Definition of ServiceConnectConfiguration
type ServiceConnectConfigurationArgs struct {
	// Specifies whether to use Service Connect with this service.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
	LogConfiguration LogConfigurationPtrInput `pulumi:"logConfiguration"`
	// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
	Services ServiceConnectServiceArrayInput `pulumi:"services"`
}

func (ServiceConnectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectConfiguration)(nil)).Elem()
}

func (i ServiceConnectConfigurationArgs) ToServiceConnectConfigurationOutput() ServiceConnectConfigurationOutput {
	return i.ToServiceConnectConfigurationOutputWithContext(context.Background())
}

func (i ServiceConnectConfigurationArgs) ToServiceConnectConfigurationOutputWithContext(ctx context.Context) ServiceConnectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectConfigurationOutput)
}

func (i ServiceConnectConfigurationArgs) ToServiceConnectConfigurationPtrOutput() ServiceConnectConfigurationPtrOutput {
	return i.ToServiceConnectConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceConnectConfigurationArgs) ToServiceConnectConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectConfigurationOutput).ToServiceConnectConfigurationPtrOutputWithContext(ctx)
}

// ServiceConnectConfigurationPtrInput is an input type that accepts ServiceConnectConfigurationArgs, ServiceConnectConfigurationPtr and ServiceConnectConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceConnectConfigurationPtrInput` via:
//
//	        ServiceConnectConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectConfigurationPtrInput interface {
	pulumi.Input

	ToServiceConnectConfigurationPtrOutput() ServiceConnectConfigurationPtrOutput
	ToServiceConnectConfigurationPtrOutputWithContext(context.Context) ServiceConnectConfigurationPtrOutput
}

type serviceConnectConfigurationPtrType ServiceConnectConfigurationArgs

func ServiceConnectConfigurationPtr(v *ServiceConnectConfigurationArgs) ServiceConnectConfigurationPtrInput {
	return (*serviceConnectConfigurationPtrType)(v)
}

func (*serviceConnectConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectConfiguration)(nil)).Elem()
}

func (i *serviceConnectConfigurationPtrType) ToServiceConnectConfigurationPtrOutput() ServiceConnectConfigurationPtrOutput {
	return i.ToServiceConnectConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceConnectConfigurationPtrType) ToServiceConnectConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectConfigurationPtrOutput)
}

// Definition of ServiceConnectConfiguration
type ServiceConnectConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceConnectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectConfiguration)(nil)).Elem()
}

func (o ServiceConnectConfigurationOutput) ToServiceConnectConfigurationOutput() ServiceConnectConfigurationOutput {
	return o
}

func (o ServiceConnectConfigurationOutput) ToServiceConnectConfigurationOutputWithContext(ctx context.Context) ServiceConnectConfigurationOutput {
	return o
}

func (o ServiceConnectConfigurationOutput) ToServiceConnectConfigurationPtrOutput() ServiceConnectConfigurationPtrOutput {
	return o.ToServiceConnectConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceConnectConfigurationOutput) ToServiceConnectConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectConfiguration) *ServiceConnectConfiguration {
		return &v
	}).(ServiceConnectConfigurationPtrOutput)
}

// Specifies whether to use Service Connect with this service.
func (o ServiceConnectConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceConnectConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
func (o ServiceConnectConfigurationOutput) LogConfiguration() LogConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceConnectConfiguration) *LogConfiguration { return v.LogConfiguration }).(LogConfigurationPtrOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectConfigurationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectConfiguration) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
func (o ServiceConnectConfigurationOutput) Services() ServiceConnectServiceArrayOutput {
	return o.ApplyT(func(v ServiceConnectConfiguration) []ServiceConnectService { return v.Services }).(ServiceConnectServiceArrayOutput)
}

type ServiceConnectConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectConfiguration)(nil)).Elem()
}

func (o ServiceConnectConfigurationPtrOutput) ToServiceConnectConfigurationPtrOutput() ServiceConnectConfigurationPtrOutput {
	return o
}

func (o ServiceConnectConfigurationPtrOutput) ToServiceConnectConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectConfigurationPtrOutput {
	return o
}

func (o ServiceConnectConfigurationPtrOutput) Elem() ServiceConnectConfigurationOutput {
	return o.ApplyT(func(v *ServiceConnectConfiguration) ServiceConnectConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceConnectConfiguration
		return ret
	}).(ServiceConnectConfigurationOutput)
}

// Specifies whether to use Service Connect with this service.
func (o ServiceConnectConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceConnectConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
func (o ServiceConnectConfigurationPtrOutput) LogConfiguration() LogConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceConnectConfiguration) *LogConfiguration {
		if v == nil {
			return nil
		}
		return v.LogConfiguration
	}).(LogConfigurationPtrOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectConfigurationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
func (o ServiceConnectConfigurationPtrOutput) Services() ServiceConnectServiceArrayOutput {
	return o.ApplyT(func(v *ServiceConnectConfiguration) []ServiceConnectService {
		if v == nil {
			return nil
		}
		return v.Services
	}).(ServiceConnectServiceArrayOutput)
}

// Definition of ServiceConnectConfiguration
type ServiceConnectConfigurationResponse struct {
	// Specifies whether to use Service Connect with this service.
	Enabled *bool `pulumi:"enabled"`
	// The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
	LogConfiguration *LogConfigurationResponse `pulumi:"logConfiguration"`
	// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
	Namespace *string `pulumi:"namespace"`
	// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
	Services []ServiceConnectServiceResponse `pulumi:"services"`
}

// Definition of ServiceConnectConfiguration
type ServiceConnectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServiceConnectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectConfigurationResponse)(nil)).Elem()
}

func (o ServiceConnectConfigurationResponseOutput) ToServiceConnectConfigurationResponseOutput() ServiceConnectConfigurationResponseOutput {
	return o
}

func (o ServiceConnectConfigurationResponseOutput) ToServiceConnectConfigurationResponseOutputWithContext(ctx context.Context) ServiceConnectConfigurationResponseOutput {
	return o
}

// Specifies whether to use Service Connect with this service.
func (o ServiceConnectConfigurationResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceConnectConfigurationResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
func (o ServiceConnectConfigurationResponseOutput) LogConfiguration() LogConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ServiceConnectConfigurationResponse) *LogConfigurationResponse { return v.LogConfiguration }).(LogConfigurationResponsePtrOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectConfigurationResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectConfigurationResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
func (o ServiceConnectConfigurationResponseOutput) Services() ServiceConnectServiceResponseArrayOutput {
	return o.ApplyT(func(v ServiceConnectConfigurationResponse) []ServiceConnectServiceResponse { return v.Services }).(ServiceConnectServiceResponseArrayOutput)
}

type ServiceConnectConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectConfigurationResponse)(nil)).Elem()
}

func (o ServiceConnectConfigurationResponsePtrOutput) ToServiceConnectConfigurationResponsePtrOutput() ServiceConnectConfigurationResponsePtrOutput {
	return o
}

func (o ServiceConnectConfigurationResponsePtrOutput) ToServiceConnectConfigurationResponsePtrOutputWithContext(ctx context.Context) ServiceConnectConfigurationResponsePtrOutput {
	return o
}

func (o ServiceConnectConfigurationResponsePtrOutput) Elem() ServiceConnectConfigurationResponseOutput {
	return o.ApplyT(func(v *ServiceConnectConfigurationResponse) ServiceConnectConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ServiceConnectConfigurationResponse
		return ret
	}).(ServiceConnectConfigurationResponseOutput)
}

// Specifies whether to use Service Connect with this service.
func (o ServiceConnectConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceConnectConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log configuration for the container. This parameter maps to “LogConfig“ in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the “--log-driver“ option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. Understand the following when specifying a log configuration for your containers.  +  Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are “awslogs“, “splunk“, and “awsfirelens“. For tasks hosted on Amazon EC2 instances, the supported log drivers are “awslogs“, “fluentd“, “gelf“, “json-file“, “journald“, “logentries“,“syslog“, “splunk“, and “awsfirelens“.  +  This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.  +  For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the “ECS_AVAILABLE_LOGGING_DRIVERS“ environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  +  For tasks that are on FARGATElong, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
func (o ServiceConnectConfigurationResponsePtrOutput) LogConfiguration() LogConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ServiceConnectConfigurationResponse) *LogConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LogConfiguration
	}).(LogConfigurationResponsePtrOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectConfigurationResponsePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.
func (o ServiceConnectConfigurationResponsePtrOutput) Services() ServiceConnectServiceResponseArrayOutput {
	return o.ApplyT(func(v *ServiceConnectConfigurationResponse) []ServiceConnectServiceResponse {
		if v == nil {
			return nil
		}
		return v.Services
	}).(ServiceConnectServiceResponseArrayOutput)
}

// Definition of ServiceConnectDefaults
type ServiceConnectDefaults struct {
	// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string ``''`` for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
	Namespace *string `pulumi:"namespace"`
}

// ServiceConnectDefaultsInput is an input type that accepts ServiceConnectDefaultsArgs and ServiceConnectDefaultsOutput values.
// You can construct a concrete instance of `ServiceConnectDefaultsInput` via:
//
//	ServiceConnectDefaultsArgs{...}
type ServiceConnectDefaultsInput interface {
	pulumi.Input

	ToServiceConnectDefaultsOutput() ServiceConnectDefaultsOutput
	ToServiceConnectDefaultsOutputWithContext(context.Context) ServiceConnectDefaultsOutput
}

// Definition of ServiceConnectDefaults
type ServiceConnectDefaultsArgs struct {
	// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string ``''`` for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ServiceConnectDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectDefaults)(nil)).Elem()
}

func (i ServiceConnectDefaultsArgs) ToServiceConnectDefaultsOutput() ServiceConnectDefaultsOutput {
	return i.ToServiceConnectDefaultsOutputWithContext(context.Background())
}

func (i ServiceConnectDefaultsArgs) ToServiceConnectDefaultsOutputWithContext(ctx context.Context) ServiceConnectDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectDefaultsOutput)
}

func (i ServiceConnectDefaultsArgs) ToServiceConnectDefaultsPtrOutput() ServiceConnectDefaultsPtrOutput {
	return i.ToServiceConnectDefaultsPtrOutputWithContext(context.Background())
}

func (i ServiceConnectDefaultsArgs) ToServiceConnectDefaultsPtrOutputWithContext(ctx context.Context) ServiceConnectDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectDefaultsOutput).ToServiceConnectDefaultsPtrOutputWithContext(ctx)
}

// ServiceConnectDefaultsPtrInput is an input type that accepts ServiceConnectDefaultsArgs, ServiceConnectDefaultsPtr and ServiceConnectDefaultsPtrOutput values.
// You can construct a concrete instance of `ServiceConnectDefaultsPtrInput` via:
//
//	        ServiceConnectDefaultsArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectDefaultsPtrInput interface {
	pulumi.Input

	ToServiceConnectDefaultsPtrOutput() ServiceConnectDefaultsPtrOutput
	ToServiceConnectDefaultsPtrOutputWithContext(context.Context) ServiceConnectDefaultsPtrOutput
}

type serviceConnectDefaultsPtrType ServiceConnectDefaultsArgs

func ServiceConnectDefaultsPtr(v *ServiceConnectDefaultsArgs) ServiceConnectDefaultsPtrInput {
	return (*serviceConnectDefaultsPtrType)(v)
}

func (*serviceConnectDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectDefaults)(nil)).Elem()
}

func (i *serviceConnectDefaultsPtrType) ToServiceConnectDefaultsPtrOutput() ServiceConnectDefaultsPtrOutput {
	return i.ToServiceConnectDefaultsPtrOutputWithContext(context.Background())
}

func (i *serviceConnectDefaultsPtrType) ToServiceConnectDefaultsPtrOutputWithContext(ctx context.Context) ServiceConnectDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectDefaultsPtrOutput)
}

// Definition of ServiceConnectDefaults
type ServiceConnectDefaultsOutput struct{ *pulumi.OutputState }

func (ServiceConnectDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectDefaults)(nil)).Elem()
}

func (o ServiceConnectDefaultsOutput) ToServiceConnectDefaultsOutput() ServiceConnectDefaultsOutput {
	return o
}

func (o ServiceConnectDefaultsOutput) ToServiceConnectDefaultsOutputWithContext(ctx context.Context) ServiceConnectDefaultsOutput {
	return o
}

func (o ServiceConnectDefaultsOutput) ToServiceConnectDefaultsPtrOutput() ServiceConnectDefaultsPtrOutput {
	return o.ToServiceConnectDefaultsPtrOutputWithContext(context.Background())
}

func (o ServiceConnectDefaultsOutput) ToServiceConnectDefaultsPtrOutputWithContext(ctx context.Context) ServiceConnectDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectDefaults) *ServiceConnectDefaults {
		return &v
	}).(ServiceConnectDefaultsPtrOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string “”“ for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectDefaultsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectDefaults) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ServiceConnectDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectDefaults)(nil)).Elem()
}

func (o ServiceConnectDefaultsPtrOutput) ToServiceConnectDefaultsPtrOutput() ServiceConnectDefaultsPtrOutput {
	return o
}

func (o ServiceConnectDefaultsPtrOutput) ToServiceConnectDefaultsPtrOutputWithContext(ctx context.Context) ServiceConnectDefaultsPtrOutput {
	return o
}

func (o ServiceConnectDefaultsPtrOutput) Elem() ServiceConnectDefaultsOutput {
	return o.ApplyT(func(v *ServiceConnectDefaults) ServiceConnectDefaults {
		if v != nil {
			return *v
		}
		var ret ServiceConnectDefaults
		return ret
	}).(ServiceConnectDefaultsOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string “”“ for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectDefaultsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectDefaults) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceConnectDefaults
type ServiceConnectDefaultsResponse struct {
	// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string ``''`` for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
	Namespace *string `pulumi:"namespace"`
}

// Definition of ServiceConnectDefaults
type ServiceConnectDefaultsResponseOutput struct{ *pulumi.OutputState }

func (ServiceConnectDefaultsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectDefaultsResponse)(nil)).Elem()
}

func (o ServiceConnectDefaultsResponseOutput) ToServiceConnectDefaultsResponseOutput() ServiceConnectDefaultsResponseOutput {
	return o
}

func (o ServiceConnectDefaultsResponseOutput) ToServiceConnectDefaultsResponseOutputWithContext(ctx context.Context) ServiceConnectDefaultsResponseOutput {
	return o
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string “”“ for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectDefaultsResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectDefaultsResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ServiceConnectDefaultsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectDefaultsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectDefaultsResponse)(nil)).Elem()
}

func (o ServiceConnectDefaultsResponsePtrOutput) ToServiceConnectDefaultsResponsePtrOutput() ServiceConnectDefaultsResponsePtrOutput {
	return o
}

func (o ServiceConnectDefaultsResponsePtrOutput) ToServiceConnectDefaultsResponsePtrOutputWithContext(ctx context.Context) ServiceConnectDefaultsResponsePtrOutput {
	return o
}

func (o ServiceConnectDefaultsResponsePtrOutput) Elem() ServiceConnectDefaultsResponseOutput {
	return o.ApplyT(func(v *ServiceConnectDefaultsResponse) ServiceConnectDefaultsResponse {
		if v != nil {
			return *v
		}
		var ret ServiceConnectDefaultsResponse
		return ret
	}).(ServiceConnectDefaultsResponseOutput)
}

// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace that's used when you create a service and don't specify a Service Connect configuration. The namespace name can include up to 1024 characters. The name is case-sensitive. The name can't include hyphens (-), tilde (~), greater than (>), less than (<), or slash (/). If you enter an existing namespace name or ARN, then that namespace will be used. Any namespace type is supported. The namespace must be in this account and this AWS Region. If you enter a new name, a CMAPlong namespace will be created. Amazon ECS creates a CMAP namespace with the 'API calls' method of instance discovery only. This instance discovery method is the 'HTTP' namespace type in the CLIlong. Other types of instance discovery aren't used by Service Connect. If you update the cluster with an empty string “”“ for the namespace name, the cluster configuration for Service Connect is removed. Note that the namespace will remain in CMAP and must be deleted separately. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.
func (o ServiceConnectDefaultsResponsePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectDefaultsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceConnectService
type ServiceConnectService struct {
	// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias`` with one ``port``.
	ClientAliases []ServiceConnectClientAlias `pulumi:"clientAliases"`
	// The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``.
	DiscoveryName *string `pulumi:"discoveryName"`
	// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate, the default value is the container port number. The container port number is in the ``portMapping`` in the task definition. In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
	IngressPortOverride *int `pulumi:"ingressPortOverride"`
	// The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of this Amazon ECS service.
	PortName *string `pulumi:"portName"`
	// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout configurations for Service Connect.  If ``idleTimeout`` is set to a time that is less than ``perRequestTimeout``, the connection will close when the ``idleTimeout`` is reached and not the ``perRequestTimeout``.
	Timeout *TimeoutConfiguration `pulumi:"timeout"`
	// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the configuration for Service Connect TLS.
	Tls *ServiceConnectTlsConfiguration `pulumi:"tls"`
}

// ServiceConnectServiceInput is an input type that accepts ServiceConnectServiceArgs and ServiceConnectServiceOutput values.
// You can construct a concrete instance of `ServiceConnectServiceInput` via:
//
//	ServiceConnectServiceArgs{...}
type ServiceConnectServiceInput interface {
	pulumi.Input

	ToServiceConnectServiceOutput() ServiceConnectServiceOutput
	ToServiceConnectServiceOutputWithContext(context.Context) ServiceConnectServiceOutput
}

// Definition of ServiceConnectService
type ServiceConnectServiceArgs struct {
	// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias`` with one ``port``.
	ClientAliases ServiceConnectClientAliasArrayInput `pulumi:"clientAliases"`
	// The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``.
	DiscoveryName pulumi.StringPtrInput `pulumi:"discoveryName"`
	// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate, the default value is the container port number. The container port number is in the ``portMapping`` in the task definition. In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
	IngressPortOverride pulumi.IntPtrInput `pulumi:"ingressPortOverride"`
	// The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of this Amazon ECS service.
	PortName pulumi.StringPtrInput `pulumi:"portName"`
	// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout configurations for Service Connect.  If ``idleTimeout`` is set to a time that is less than ``perRequestTimeout``, the connection will close when the ``idleTimeout`` is reached and not the ``perRequestTimeout``.
	Timeout TimeoutConfigurationPtrInput `pulumi:"timeout"`
	// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the configuration for Service Connect TLS.
	Tls ServiceConnectTlsConfigurationPtrInput `pulumi:"tls"`
}

func (ServiceConnectServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectService)(nil)).Elem()
}

func (i ServiceConnectServiceArgs) ToServiceConnectServiceOutput() ServiceConnectServiceOutput {
	return i.ToServiceConnectServiceOutputWithContext(context.Background())
}

func (i ServiceConnectServiceArgs) ToServiceConnectServiceOutputWithContext(ctx context.Context) ServiceConnectServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectServiceOutput)
}

// ServiceConnectServiceArrayInput is an input type that accepts ServiceConnectServiceArray and ServiceConnectServiceArrayOutput values.
// You can construct a concrete instance of `ServiceConnectServiceArrayInput` via:
//
//	ServiceConnectServiceArray{ ServiceConnectServiceArgs{...} }
type ServiceConnectServiceArrayInput interface {
	pulumi.Input

	ToServiceConnectServiceArrayOutput() ServiceConnectServiceArrayOutput
	ToServiceConnectServiceArrayOutputWithContext(context.Context) ServiceConnectServiceArrayOutput
}

type ServiceConnectServiceArray []ServiceConnectServiceInput

func (ServiceConnectServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectService)(nil)).Elem()
}

func (i ServiceConnectServiceArray) ToServiceConnectServiceArrayOutput() ServiceConnectServiceArrayOutput {
	return i.ToServiceConnectServiceArrayOutputWithContext(context.Background())
}

func (i ServiceConnectServiceArray) ToServiceConnectServiceArrayOutputWithContext(ctx context.Context) ServiceConnectServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectServiceArrayOutput)
}

// Definition of ServiceConnectService
type ServiceConnectServiceOutput struct{ *pulumi.OutputState }

func (ServiceConnectServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectService)(nil)).Elem()
}

func (o ServiceConnectServiceOutput) ToServiceConnectServiceOutput() ServiceConnectServiceOutput {
	return o
}

func (o ServiceConnectServiceOutput) ToServiceConnectServiceOutputWithContext(ctx context.Context) ServiceConnectServiceOutput {
	return o
}

// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping must be unique within the namespace. For each “ServiceConnectService“, you must provide at least one “clientAlias“ with one “port“.
func (o ServiceConnectServiceOutput) ClientAliases() ServiceConnectClientAliasArrayOutput {
	return o.ApplyT(func(v ServiceConnectService) []ServiceConnectClientAlias { return v.ClientAliases }).(ServiceConnectClientAliasArrayOutput)
}

// The “discoveryName“ is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the “discoveryName“ isn't specified, the port mapping name from the task definition is used in “portName.namespace“.
func (o ServiceConnectServiceOutput) DiscoveryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectService) *string { return v.DiscoveryName }).(pulumi.StringPtrOutput)
}

// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic on the port number specified in the named “portMapping“ in the task definition of this application, and then use it in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In “awsvpc“ mode and Fargate, the default value is the container port number. The container port number is in the “portMapping“ in the task definition. In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
func (o ServiceConnectServiceOutput) IngressPortOverride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceConnectService) *int { return v.IngressPortOverride }).(pulumi.IntPtrOutput)
}

// The “portName“ must match the name of one of the “portMappings“ from all the containers in the task definition of this Amazon ECS service.
func (o ServiceConnectServiceOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectService) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout configurations for Service Connect.  If “idleTimeout“ is set to a time that is less than “perRequestTimeout“, the connection will close when the “idleTimeout“ is reached and not the “perRequestTimeout“.
func (o ServiceConnectServiceOutput) Timeout() TimeoutConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceConnectService) *TimeoutConfiguration { return v.Timeout }).(TimeoutConfigurationPtrOutput)
}

// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the configuration for Service Connect TLS.
func (o ServiceConnectServiceOutput) Tls() ServiceConnectTlsConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceConnectService) *ServiceConnectTlsConfiguration { return v.Tls }).(ServiceConnectTlsConfigurationPtrOutput)
}

type ServiceConnectServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectService)(nil)).Elem()
}

func (o ServiceConnectServiceArrayOutput) ToServiceConnectServiceArrayOutput() ServiceConnectServiceArrayOutput {
	return o
}

func (o ServiceConnectServiceArrayOutput) ToServiceConnectServiceArrayOutputWithContext(ctx context.Context) ServiceConnectServiceArrayOutput {
	return o
}

func (o ServiceConnectServiceArrayOutput) Index(i pulumi.IntInput) ServiceConnectServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConnectService {
		return vs[0].([]ServiceConnectService)[vs[1].(int)]
	}).(ServiceConnectServiceOutput)
}

// Definition of ServiceConnectService
type ServiceConnectServiceResponse struct {
	// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias`` with one ``port``.
	ClientAliases []ServiceConnectClientAliasResponse `pulumi:"clientAliases"`
	// The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``.
	DiscoveryName *string `pulumi:"discoveryName"`
	// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate, the default value is the container port number. The container port number is in the ``portMapping`` in the task definition. In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
	IngressPortOverride *int `pulumi:"ingressPortOverride"`
	// The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of this Amazon ECS service.
	PortName *string `pulumi:"portName"`
	// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout configurations for Service Connect.  If ``idleTimeout`` is set to a time that is less than ``perRequestTimeout``, the connection will close when the ``idleTimeout`` is reached and not the ``perRequestTimeout``.
	Timeout *TimeoutConfigurationResponse `pulumi:"timeout"`
	// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the configuration for Service Connect TLS.
	Tls *ServiceConnectTlsConfigurationResponse `pulumi:"tls"`
}

// Definition of ServiceConnectService
type ServiceConnectServiceResponseOutput struct{ *pulumi.OutputState }

func (ServiceConnectServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectServiceResponse)(nil)).Elem()
}

func (o ServiceConnectServiceResponseOutput) ToServiceConnectServiceResponseOutput() ServiceConnectServiceResponseOutput {
	return o
}

func (o ServiceConnectServiceResponseOutput) ToServiceConnectServiceResponseOutputWithContext(ctx context.Context) ServiceConnectServiceResponseOutput {
	return o
}

// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping must be unique within the namespace. For each “ServiceConnectService“, you must provide at least one “clientAlias“ with one “port“.
func (o ServiceConnectServiceResponseOutput) ClientAliases() ServiceConnectClientAliasResponseArrayOutput {
	return o.ApplyT(func(v ServiceConnectServiceResponse) []ServiceConnectClientAliasResponse { return v.ClientAliases }).(ServiceConnectClientAliasResponseArrayOutput)
}

// The “discoveryName“ is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the “discoveryName“ isn't specified, the port mapping name from the task definition is used in “portName.namespace“.
func (o ServiceConnectServiceResponseOutput) DiscoveryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectServiceResponse) *string { return v.DiscoveryName }).(pulumi.StringPtrOutput)
}

// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic on the port number specified in the named “portMapping“ in the task definition of this application, and then use it in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In “awsvpc“ mode and Fargate, the default value is the container port number. The container port number is in the “portMapping“ in the task definition. In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
func (o ServiceConnectServiceResponseOutput) IngressPortOverride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceConnectServiceResponse) *int { return v.IngressPortOverride }).(pulumi.IntPtrOutput)
}

// The “portName“ must match the name of one of the “portMappings“ from all the containers in the task definition of this Amazon ECS service.
func (o ServiceConnectServiceResponseOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectServiceResponse) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout configurations for Service Connect.  If “idleTimeout“ is set to a time that is less than “perRequestTimeout“, the connection will close when the “idleTimeout“ is reached and not the “perRequestTimeout“.
func (o ServiceConnectServiceResponseOutput) Timeout() TimeoutConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ServiceConnectServiceResponse) *TimeoutConfigurationResponse { return v.Timeout }).(TimeoutConfigurationResponsePtrOutput)
}

// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the configuration for Service Connect TLS.
func (o ServiceConnectServiceResponseOutput) Tls() ServiceConnectTlsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ServiceConnectServiceResponse) *ServiceConnectTlsConfigurationResponse { return v.Tls }).(ServiceConnectTlsConfigurationResponsePtrOutput)
}

type ServiceConnectServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectServiceResponse)(nil)).Elem()
}

func (o ServiceConnectServiceResponseArrayOutput) ToServiceConnectServiceResponseArrayOutput() ServiceConnectServiceResponseArrayOutput {
	return o
}

func (o ServiceConnectServiceResponseArrayOutput) ToServiceConnectServiceResponseArrayOutputWithContext(ctx context.Context) ServiceConnectServiceResponseArrayOutput {
	return o
}

func (o ServiceConnectServiceResponseArrayOutput) Index(i pulumi.IntInput) ServiceConnectServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConnectServiceResponse {
		return vs[0].([]ServiceConnectServiceResponse)[vs[1].(int)]
	}).(ServiceConnectServiceResponseOutput)
}

// Definition of ServiceConnectTlsCertificateAuthority
type ServiceConnectTlsCertificateAuthority struct {
	// The ARN of the AWS Private Certificate Authority certificate.
	AwsPcaAuthorityArn *string `pulumi:"awsPcaAuthorityArn"`
}

// ServiceConnectTlsCertificateAuthorityInput is an input type that accepts ServiceConnectTlsCertificateAuthorityArgs and ServiceConnectTlsCertificateAuthorityOutput values.
// You can construct a concrete instance of `ServiceConnectTlsCertificateAuthorityInput` via:
//
//	ServiceConnectTlsCertificateAuthorityArgs{...}
type ServiceConnectTlsCertificateAuthorityInput interface {
	pulumi.Input

	ToServiceConnectTlsCertificateAuthorityOutput() ServiceConnectTlsCertificateAuthorityOutput
	ToServiceConnectTlsCertificateAuthorityOutputWithContext(context.Context) ServiceConnectTlsCertificateAuthorityOutput
}

// Definition of ServiceConnectTlsCertificateAuthority
type ServiceConnectTlsCertificateAuthorityArgs struct {
	// The ARN of the AWS Private Certificate Authority certificate.
	AwsPcaAuthorityArn pulumi.StringPtrInput `pulumi:"awsPcaAuthorityArn"`
}

func (ServiceConnectTlsCertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectTlsCertificateAuthority)(nil)).Elem()
}

func (i ServiceConnectTlsCertificateAuthorityArgs) ToServiceConnectTlsCertificateAuthorityOutput() ServiceConnectTlsCertificateAuthorityOutput {
	return i.ToServiceConnectTlsCertificateAuthorityOutputWithContext(context.Background())
}

func (i ServiceConnectTlsCertificateAuthorityArgs) ToServiceConnectTlsCertificateAuthorityOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectTlsCertificateAuthorityOutput)
}

func (i ServiceConnectTlsCertificateAuthorityArgs) ToServiceConnectTlsCertificateAuthorityPtrOutput() ServiceConnectTlsCertificateAuthorityPtrOutput {
	return i.ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i ServiceConnectTlsCertificateAuthorityArgs) ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectTlsCertificateAuthorityOutput).ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(ctx)
}

// ServiceConnectTlsCertificateAuthorityPtrInput is an input type that accepts ServiceConnectTlsCertificateAuthorityArgs, ServiceConnectTlsCertificateAuthorityPtr and ServiceConnectTlsCertificateAuthorityPtrOutput values.
// You can construct a concrete instance of `ServiceConnectTlsCertificateAuthorityPtrInput` via:
//
//	        ServiceConnectTlsCertificateAuthorityArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectTlsCertificateAuthorityPtrInput interface {
	pulumi.Input

	ToServiceConnectTlsCertificateAuthorityPtrOutput() ServiceConnectTlsCertificateAuthorityPtrOutput
	ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(context.Context) ServiceConnectTlsCertificateAuthorityPtrOutput
}

type serviceConnectTlsCertificateAuthorityPtrType ServiceConnectTlsCertificateAuthorityArgs

func ServiceConnectTlsCertificateAuthorityPtr(v *ServiceConnectTlsCertificateAuthorityArgs) ServiceConnectTlsCertificateAuthorityPtrInput {
	return (*serviceConnectTlsCertificateAuthorityPtrType)(v)
}

func (*serviceConnectTlsCertificateAuthorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectTlsCertificateAuthority)(nil)).Elem()
}

func (i *serviceConnectTlsCertificateAuthorityPtrType) ToServiceConnectTlsCertificateAuthorityPtrOutput() ServiceConnectTlsCertificateAuthorityPtrOutput {
	return i.ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i *serviceConnectTlsCertificateAuthorityPtrType) ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectTlsCertificateAuthorityPtrOutput)
}

// Definition of ServiceConnectTlsCertificateAuthority
type ServiceConnectTlsCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectTlsCertificateAuthority)(nil)).Elem()
}

func (o ServiceConnectTlsCertificateAuthorityOutput) ToServiceConnectTlsCertificateAuthorityOutput() ServiceConnectTlsCertificateAuthorityOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityOutput) ToServiceConnectTlsCertificateAuthorityOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityOutput) ToServiceConnectTlsCertificateAuthorityPtrOutput() ServiceConnectTlsCertificateAuthorityPtrOutput {
	return o.ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (o ServiceConnectTlsCertificateAuthorityOutput) ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectTlsCertificateAuthority) *ServiceConnectTlsCertificateAuthority {
		return &v
	}).(ServiceConnectTlsCertificateAuthorityPtrOutput)
}

// The ARN of the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsCertificateAuthorityOutput) AwsPcaAuthorityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsCertificateAuthority) *string { return v.AwsPcaAuthorityArn }).(pulumi.StringPtrOutput)
}

type ServiceConnectTlsCertificateAuthorityPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsCertificateAuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectTlsCertificateAuthority)(nil)).Elem()
}

func (o ServiceConnectTlsCertificateAuthorityPtrOutput) ToServiceConnectTlsCertificateAuthorityPtrOutput() ServiceConnectTlsCertificateAuthorityPtrOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityPtrOutput) ToServiceConnectTlsCertificateAuthorityPtrOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityPtrOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityPtrOutput) Elem() ServiceConnectTlsCertificateAuthorityOutput {
	return o.ApplyT(func(v *ServiceConnectTlsCertificateAuthority) ServiceConnectTlsCertificateAuthority {
		if v != nil {
			return *v
		}
		var ret ServiceConnectTlsCertificateAuthority
		return ret
	}).(ServiceConnectTlsCertificateAuthorityOutput)
}

// The ARN of the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsCertificateAuthorityPtrOutput) AwsPcaAuthorityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsCertificateAuthority) *string {
		if v == nil {
			return nil
		}
		return v.AwsPcaAuthorityArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceConnectTlsCertificateAuthority
type ServiceConnectTlsCertificateAuthorityResponse struct {
	// The ARN of the AWS Private Certificate Authority certificate.
	AwsPcaAuthorityArn *string `pulumi:"awsPcaAuthorityArn"`
}

// Definition of ServiceConnectTlsCertificateAuthority
type ServiceConnectTlsCertificateAuthorityResponseOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsCertificateAuthorityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectTlsCertificateAuthorityResponse)(nil)).Elem()
}

func (o ServiceConnectTlsCertificateAuthorityResponseOutput) ToServiceConnectTlsCertificateAuthorityResponseOutput() ServiceConnectTlsCertificateAuthorityResponseOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityResponseOutput) ToServiceConnectTlsCertificateAuthorityResponseOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityResponseOutput {
	return o
}

// The ARN of the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsCertificateAuthorityResponseOutput) AwsPcaAuthorityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsCertificateAuthorityResponse) *string { return v.AwsPcaAuthorityArn }).(pulumi.StringPtrOutput)
}

type ServiceConnectTlsCertificateAuthorityResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsCertificateAuthorityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectTlsCertificateAuthorityResponse)(nil)).Elem()
}

func (o ServiceConnectTlsCertificateAuthorityResponsePtrOutput) ToServiceConnectTlsCertificateAuthorityResponsePtrOutput() ServiceConnectTlsCertificateAuthorityResponsePtrOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityResponsePtrOutput) ToServiceConnectTlsCertificateAuthorityResponsePtrOutputWithContext(ctx context.Context) ServiceConnectTlsCertificateAuthorityResponsePtrOutput {
	return o
}

func (o ServiceConnectTlsCertificateAuthorityResponsePtrOutput) Elem() ServiceConnectTlsCertificateAuthorityResponseOutput {
	return o.ApplyT(func(v *ServiceConnectTlsCertificateAuthorityResponse) ServiceConnectTlsCertificateAuthorityResponse {
		if v != nil {
			return *v
		}
		var ret ServiceConnectTlsCertificateAuthorityResponse
		return ret
	}).(ServiceConnectTlsCertificateAuthorityResponseOutput)
}

// The ARN of the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsCertificateAuthorityResponsePtrOutput) AwsPcaAuthorityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsCertificateAuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return v.AwsPcaAuthorityArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceConnectTlsConfiguration
type ServiceConnectTlsConfiguration struct {
	// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
	IssuerCertificateAuthority *ServiceConnectTlsCertificateAuthority `pulumi:"issuerCertificateAuthority"`
	// The AWS Key Management Service key.
	KmsKey *string `pulumi:"kmsKey"`
	// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
	RoleArn *string `pulumi:"roleArn"`
}

// ServiceConnectTlsConfigurationInput is an input type that accepts ServiceConnectTlsConfigurationArgs and ServiceConnectTlsConfigurationOutput values.
// You can construct a concrete instance of `ServiceConnectTlsConfigurationInput` via:
//
//	ServiceConnectTlsConfigurationArgs{...}
type ServiceConnectTlsConfigurationInput interface {
	pulumi.Input

	ToServiceConnectTlsConfigurationOutput() ServiceConnectTlsConfigurationOutput
	ToServiceConnectTlsConfigurationOutputWithContext(context.Context) ServiceConnectTlsConfigurationOutput
}

// Definition of ServiceConnectTlsConfiguration
type ServiceConnectTlsConfigurationArgs struct {
	// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
	IssuerCertificateAuthority ServiceConnectTlsCertificateAuthorityPtrInput `pulumi:"issuerCertificateAuthority"`
	// The AWS Key Management Service key.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
	// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (ServiceConnectTlsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectTlsConfiguration)(nil)).Elem()
}

func (i ServiceConnectTlsConfigurationArgs) ToServiceConnectTlsConfigurationOutput() ServiceConnectTlsConfigurationOutput {
	return i.ToServiceConnectTlsConfigurationOutputWithContext(context.Background())
}

func (i ServiceConnectTlsConfigurationArgs) ToServiceConnectTlsConfigurationOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectTlsConfigurationOutput)
}

func (i ServiceConnectTlsConfigurationArgs) ToServiceConnectTlsConfigurationPtrOutput() ServiceConnectTlsConfigurationPtrOutput {
	return i.ToServiceConnectTlsConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceConnectTlsConfigurationArgs) ToServiceConnectTlsConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectTlsConfigurationOutput).ToServiceConnectTlsConfigurationPtrOutputWithContext(ctx)
}

// ServiceConnectTlsConfigurationPtrInput is an input type that accepts ServiceConnectTlsConfigurationArgs, ServiceConnectTlsConfigurationPtr and ServiceConnectTlsConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceConnectTlsConfigurationPtrInput` via:
//
//	        ServiceConnectTlsConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectTlsConfigurationPtrInput interface {
	pulumi.Input

	ToServiceConnectTlsConfigurationPtrOutput() ServiceConnectTlsConfigurationPtrOutput
	ToServiceConnectTlsConfigurationPtrOutputWithContext(context.Context) ServiceConnectTlsConfigurationPtrOutput
}

type serviceConnectTlsConfigurationPtrType ServiceConnectTlsConfigurationArgs

func ServiceConnectTlsConfigurationPtr(v *ServiceConnectTlsConfigurationArgs) ServiceConnectTlsConfigurationPtrInput {
	return (*serviceConnectTlsConfigurationPtrType)(v)
}

func (*serviceConnectTlsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectTlsConfiguration)(nil)).Elem()
}

func (i *serviceConnectTlsConfigurationPtrType) ToServiceConnectTlsConfigurationPtrOutput() ServiceConnectTlsConfigurationPtrOutput {
	return i.ToServiceConnectTlsConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceConnectTlsConfigurationPtrType) ToServiceConnectTlsConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectTlsConfigurationPtrOutput)
}

// Definition of ServiceConnectTlsConfiguration
type ServiceConnectTlsConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectTlsConfiguration)(nil)).Elem()
}

func (o ServiceConnectTlsConfigurationOutput) ToServiceConnectTlsConfigurationOutput() ServiceConnectTlsConfigurationOutput {
	return o
}

func (o ServiceConnectTlsConfigurationOutput) ToServiceConnectTlsConfigurationOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationOutput {
	return o
}

func (o ServiceConnectTlsConfigurationOutput) ToServiceConnectTlsConfigurationPtrOutput() ServiceConnectTlsConfigurationPtrOutput {
	return o.ToServiceConnectTlsConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceConnectTlsConfigurationOutput) ToServiceConnectTlsConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectTlsConfiguration) *ServiceConnectTlsConfiguration {
		return &v
	}).(ServiceConnectTlsConfigurationPtrOutput)
}

// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsConfigurationOutput) IssuerCertificateAuthority() ServiceConnectTlsCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsConfiguration) *ServiceConnectTlsCertificateAuthority {
		return v.IssuerCertificateAuthority
	}).(ServiceConnectTlsCertificateAuthorityPtrOutput)
}

// The AWS Key Management Service key.
func (o ServiceConnectTlsConfigurationOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsConfiguration) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
func (o ServiceConnectTlsConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type ServiceConnectTlsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectTlsConfiguration)(nil)).Elem()
}

func (o ServiceConnectTlsConfigurationPtrOutput) ToServiceConnectTlsConfigurationPtrOutput() ServiceConnectTlsConfigurationPtrOutput {
	return o
}

func (o ServiceConnectTlsConfigurationPtrOutput) ToServiceConnectTlsConfigurationPtrOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationPtrOutput {
	return o
}

func (o ServiceConnectTlsConfigurationPtrOutput) Elem() ServiceConnectTlsConfigurationOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfiguration) ServiceConnectTlsConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceConnectTlsConfiguration
		return ret
	}).(ServiceConnectTlsConfigurationOutput)
}

// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsConfigurationPtrOutput) IssuerCertificateAuthority() ServiceConnectTlsCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfiguration) *ServiceConnectTlsCertificateAuthority {
		if v == nil {
			return nil
		}
		return v.IssuerCertificateAuthority
	}).(ServiceConnectTlsCertificateAuthorityPtrOutput)
}

// The AWS Key Management Service key.
func (o ServiceConnectTlsConfigurationPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
func (o ServiceConnectTlsConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceConnectTlsConfiguration
type ServiceConnectTlsConfigurationResponse struct {
	// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
	IssuerCertificateAuthority *ServiceConnectTlsCertificateAuthorityResponse `pulumi:"issuerCertificateAuthority"`
	// The AWS Key Management Service key.
	KmsKey *string `pulumi:"kmsKey"`
	// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
	RoleArn *string `pulumi:"roleArn"`
}

// Definition of ServiceConnectTlsConfiguration
type ServiceConnectTlsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectTlsConfigurationResponse)(nil)).Elem()
}

func (o ServiceConnectTlsConfigurationResponseOutput) ToServiceConnectTlsConfigurationResponseOutput() ServiceConnectTlsConfigurationResponseOutput {
	return o
}

func (o ServiceConnectTlsConfigurationResponseOutput) ToServiceConnectTlsConfigurationResponseOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationResponseOutput {
	return o
}

// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsConfigurationResponseOutput) IssuerCertificateAuthority() ServiceConnectTlsCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsConfigurationResponse) *ServiceConnectTlsCertificateAuthorityResponse {
		return v.IssuerCertificateAuthority
	}).(ServiceConnectTlsCertificateAuthorityResponsePtrOutput)
}

// The AWS Key Management Service key.
func (o ServiceConnectTlsConfigurationResponseOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsConfigurationResponse) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
func (o ServiceConnectTlsConfigurationResponseOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectTlsConfigurationResponse) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type ServiceConnectTlsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectTlsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectTlsConfigurationResponse)(nil)).Elem()
}

func (o ServiceConnectTlsConfigurationResponsePtrOutput) ToServiceConnectTlsConfigurationResponsePtrOutput() ServiceConnectTlsConfigurationResponsePtrOutput {
	return o
}

func (o ServiceConnectTlsConfigurationResponsePtrOutput) ToServiceConnectTlsConfigurationResponsePtrOutputWithContext(ctx context.Context) ServiceConnectTlsConfigurationResponsePtrOutput {
	return o
}

func (o ServiceConnectTlsConfigurationResponsePtrOutput) Elem() ServiceConnectTlsConfigurationResponseOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfigurationResponse) ServiceConnectTlsConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ServiceConnectTlsConfigurationResponse
		return ret
	}).(ServiceConnectTlsConfigurationResponseOutput)
}

// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
func (o ServiceConnectTlsConfigurationResponsePtrOutput) IssuerCertificateAuthority() ServiceConnectTlsCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfigurationResponse) *ServiceConnectTlsCertificateAuthorityResponse {
		if v == nil {
			return nil
		}
		return v.IssuerCertificateAuthority
	}).(ServiceConnectTlsCertificateAuthorityResponsePtrOutput)
}

// The AWS Key Management Service key.
func (o ServiceConnectTlsConfigurationResponsePtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
func (o ServiceConnectTlsConfigurationResponsePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectTlsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceManagedEBSVolumeConfiguration
type ServiceManagedEBSVolumeConfiguration struct {
	// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	Encrypted *bool `pulumi:"encrypted"`
	// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem type is used by default.
	FilesystemType *string `pulumi:"filesystemType"`
	// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   ``gp3``: 3,000 - 16,000 IOPS  +   ``io1``: 100 - 64,000 IOPS  +   ``io2``: 100 - 256,000 IOPS   This parameter is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	Iops *int `pulumi:"iops"`
	// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes`` IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
	RoleArn *string `pulumi:"roleArn"`
	// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   ``gp2`` and ``gp3``: 1-16,384  +   ``io1`` and ``io2``: 4-16,384  +   ``st1`` and ``sc1``: 125-16,384  +   ``standard``: 1-1,024
	SizeInGiB *int `pulumi:"sizeInGiB"`
	// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	SnapshotId *string `pulumi:"snapshotId"`
	// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	TagSpecifications []EBSTagSpecification `pulumi:"tagSpecifications"`
	// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the ``gp3`` volume type.
	Throughput *int `pulumi:"throughput"`
	// The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: ``gp2``|``gp3``   +  Provisioned IOPS SSD: ``io1``|``io2``   +  Throughput Optimized HDD: ``st1``   +  Cold HDD: ``sc1``   +  Magnetic: ``standard``   The magnetic volume type is not supported on Fargate.
	VolumeType *string `pulumi:"volumeType"`
}

// ServiceManagedEBSVolumeConfigurationInput is an input type that accepts ServiceManagedEBSVolumeConfigurationArgs and ServiceManagedEBSVolumeConfigurationOutput values.
// You can construct a concrete instance of `ServiceManagedEBSVolumeConfigurationInput` via:
//
//	ServiceManagedEBSVolumeConfigurationArgs{...}
type ServiceManagedEBSVolumeConfigurationInput interface {
	pulumi.Input

	ToServiceManagedEBSVolumeConfigurationOutput() ServiceManagedEBSVolumeConfigurationOutput
	ToServiceManagedEBSVolumeConfigurationOutputWithContext(context.Context) ServiceManagedEBSVolumeConfigurationOutput
}

// Definition of ServiceManagedEBSVolumeConfiguration
type ServiceManagedEBSVolumeConfigurationArgs struct {
	// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem type is used by default.
	FilesystemType pulumi.StringPtrInput `pulumi:"filesystemType"`
	// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   ``gp3``: 3,000 - 16,000 IOPS  +   ``io1``: 100 - 64,000 IOPS  +   ``io2``: 100 - 256,000 IOPS   This parameter is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes`` IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   ``gp2`` and ``gp3``: 1-16,384  +   ``io1`` and ``io2``: 4-16,384  +   ``st1`` and ``sc1``: 125-16,384  +   ``standard``: 1-1,024
	SizeInGiB pulumi.IntPtrInput `pulumi:"sizeInGiB"`
	// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	TagSpecifications EBSTagSpecificationArrayInput `pulumi:"tagSpecifications"`
	// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the ``gp3`` volume type.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: ``gp2``|``gp3``   +  Provisioned IOPS SSD: ``io1``|``io2``   +  Throughput Optimized HDD: ``st1``   +  Cold HDD: ``sc1``   +  Magnetic: ``standard``   The magnetic volume type is not supported on Fargate.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ServiceManagedEBSVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedEBSVolumeConfiguration)(nil)).Elem()
}

func (i ServiceManagedEBSVolumeConfigurationArgs) ToServiceManagedEBSVolumeConfigurationOutput() ServiceManagedEBSVolumeConfigurationOutput {
	return i.ToServiceManagedEBSVolumeConfigurationOutputWithContext(context.Background())
}

func (i ServiceManagedEBSVolumeConfigurationArgs) ToServiceManagedEBSVolumeConfigurationOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedEBSVolumeConfigurationOutput)
}

func (i ServiceManagedEBSVolumeConfigurationArgs) ToServiceManagedEBSVolumeConfigurationPtrOutput() ServiceManagedEBSVolumeConfigurationPtrOutput {
	return i.ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceManagedEBSVolumeConfigurationArgs) ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedEBSVolumeConfigurationOutput).ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(ctx)
}

// ServiceManagedEBSVolumeConfigurationPtrInput is an input type that accepts ServiceManagedEBSVolumeConfigurationArgs, ServiceManagedEBSVolumeConfigurationPtr and ServiceManagedEBSVolumeConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceManagedEBSVolumeConfigurationPtrInput` via:
//
//	        ServiceManagedEBSVolumeConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceManagedEBSVolumeConfigurationPtrInput interface {
	pulumi.Input

	ToServiceManagedEBSVolumeConfigurationPtrOutput() ServiceManagedEBSVolumeConfigurationPtrOutput
	ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(context.Context) ServiceManagedEBSVolumeConfigurationPtrOutput
}

type serviceManagedEBSVolumeConfigurationPtrType ServiceManagedEBSVolumeConfigurationArgs

func ServiceManagedEBSVolumeConfigurationPtr(v *ServiceManagedEBSVolumeConfigurationArgs) ServiceManagedEBSVolumeConfigurationPtrInput {
	return (*serviceManagedEBSVolumeConfigurationPtrType)(v)
}

func (*serviceManagedEBSVolumeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedEBSVolumeConfiguration)(nil)).Elem()
}

func (i *serviceManagedEBSVolumeConfigurationPtrType) ToServiceManagedEBSVolumeConfigurationPtrOutput() ServiceManagedEBSVolumeConfigurationPtrOutput {
	return i.ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceManagedEBSVolumeConfigurationPtrType) ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedEBSVolumeConfigurationPtrOutput)
}

// Definition of ServiceManagedEBSVolumeConfiguration
type ServiceManagedEBSVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceManagedEBSVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedEBSVolumeConfiguration)(nil)).Elem()
}

func (o ServiceManagedEBSVolumeConfigurationOutput) ToServiceManagedEBSVolumeConfigurationOutput() ServiceManagedEBSVolumeConfigurationOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationOutput) ToServiceManagedEBSVolumeConfigurationOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationOutput) ToServiceManagedEBSVolumeConfigurationPtrOutput() ServiceManagedEBSVolumeConfigurationPtrOutput {
	return o.ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceManagedEBSVolumeConfigurationOutput) ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceManagedEBSVolumeConfiguration) *ServiceManagedEBSVolumeConfiguration {
		return &v
	}).(ServiceManagedEBSVolumeConfigurationPtrOutput)
}

// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the “Encrypted“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are “ext3“, “ext4“, and “xfs“. If no value is specified, the “xfs“ filesystem type is used by default.
func (o ServiceManagedEBSVolumeConfigurationOutput) FilesystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *string { return v.FilesystemType }).(pulumi.StringPtrOutput)
}

// The number of I/O operations per second (IOPS). For “gp3“, “io1“, and “io2“ volumes, this represents the number of IOPS that are provisioned for the volume. For “gp2“ volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   “gp3“: 3,000 - 16,000 IOPS  +   “io1“: 100 - 64,000 IOPS  +   “io2“: 100 - 256,000 IOPS   This parameter is required for “io1“ and “io2“ volume types. The default for “gp3“ volumes is “3,000 IOPS“. This parameter is not supported for “st1“, “sc1“, or “standard“ volume types. This parameter maps 1:1 with the “Iops“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the “KmsKeyId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
func (o ServiceManagedEBSVolumeConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed “AmazonECSInfrastructureRolePolicyForVolumes“ IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
func (o ServiceManagedEBSVolumeConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the “Size“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   “gp2“ and “gp3“: 1-16,384  +   “io1“ and “io2“: 4-16,384  +   “st1“ and “sc1“: 125-16,384  +   “standard“: 1-1,024
func (o ServiceManagedEBSVolumeConfigurationOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *int { return v.SizeInGiB }).(pulumi.IntPtrOutput)
}

// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the “SnapshotId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the “TagSpecifications.N“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationOutput) TagSpecifications() EBSTagSpecificationArrayOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) []EBSTagSpecification { return v.TagSpecifications }).(EBSTagSpecificationArrayOutput)
}

// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the “Throughput“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the “gp3“ volume type.
func (o ServiceManagedEBSVolumeConfigurationOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// The volume type. This parameter maps 1:1 with the “VolumeType“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: “gp2“|“gp3“   +  Provisioned IOPS SSD: “io1“|“io2“   +  Throughput Optimized HDD: “st1“   +  Cold HDD: “sc1“   +  Magnetic: “standard“   The magnetic volume type is not supported on Fargate.
func (o ServiceManagedEBSVolumeConfigurationOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfiguration) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ServiceManagedEBSVolumeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedEBSVolumeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedEBSVolumeConfiguration)(nil)).Elem()
}

func (o ServiceManagedEBSVolumeConfigurationPtrOutput) ToServiceManagedEBSVolumeConfigurationPtrOutput() ServiceManagedEBSVolumeConfigurationPtrOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationPtrOutput) ToServiceManagedEBSVolumeConfigurationPtrOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationPtrOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationPtrOutput) Elem() ServiceManagedEBSVolumeConfigurationOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) ServiceManagedEBSVolumeConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceManagedEBSVolumeConfiguration
		return ret
	}).(ServiceManagedEBSVolumeConfigurationOutput)
}

// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the “Encrypted“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.BoolPtrOutput)
}

// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are “ext3“, “ext4“, and “xfs“. If no value is specified, the “xfs“ filesystem type is used by default.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) FilesystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FilesystemType
	}).(pulumi.StringPtrOutput)
}

// The number of I/O operations per second (IOPS). For “gp3“, “io1“, and “io2“ volumes, this represents the number of IOPS that are provisioned for the volume. For “gp2“ volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   “gp3“: 3,000 - 16,000 IOPS  +   “io1“: 100 - 64,000 IOPS  +   “io2“: 100 - 256,000 IOPS   This parameter is required for “io1“ and “io2“ volume types. The default for “gp3“ volumes is “3,000 IOPS“. This parameter is not supported for “st1“, “sc1“, or “standard“ volume types. This parameter maps 1:1 with the “Iops“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the “KmsKeyId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed “AmazonECSInfrastructureRolePolicyForVolumes“ IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the “Size“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   “gp2“ and “gp3“: 1-16,384  +   “io1“ and “io2“: 4-16,384  +   “st1“ and “sc1“: 125-16,384  +   “standard“: 1-1,024
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGiB
	}).(pulumi.IntPtrOutput)
}

// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the “SnapshotId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the “TagSpecifications.N“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) TagSpecifications() EBSTagSpecificationArrayOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) []EBSTagSpecification {
		if v == nil {
			return nil
		}
		return v.TagSpecifications
	}).(EBSTagSpecificationArrayOutput)
}

// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the “Throughput“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the “gp3“ volume type.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// The volume type. This parameter maps 1:1 with the “VolumeType“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: “gp2“|“gp3“   +  Provisioned IOPS SSD: “io1“|“io2“   +  Throughput Optimized HDD: “st1“   +  Cold HDD: “sc1“   +  Magnetic: “standard“   The magnetic volume type is not supported on Fargate.
func (o ServiceManagedEBSVolumeConfigurationPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceManagedEBSVolumeConfiguration
type ServiceManagedEBSVolumeConfigurationResponse struct {
	// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	Encrypted *bool `pulumi:"encrypted"`
	// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem type is used by default.
	FilesystemType *string `pulumi:"filesystemType"`
	// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   ``gp3``: 3,000 - 16,000 IOPS  +   ``io1``: 100 - 64,000 IOPS  +   ``io2``: 100 - 256,000 IOPS   This parameter is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	Iops *int `pulumi:"iops"`
	// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes`` IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
	RoleArn *string `pulumi:"roleArn"`
	// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   ``gp2`` and ``gp3``: 1-16,384  +   ``io1`` and ``io2``: 4-16,384  +   ``st1`` and ``sc1``: 125-16,384  +   ``standard``: 1-1,024
	SizeInGiB *int `pulumi:"sizeInGiB"`
	// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	SnapshotId *string `pulumi:"snapshotId"`
	// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
	TagSpecifications []EBSTagSpecificationResponse `pulumi:"tagSpecifications"`
	// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the ``gp3`` volume type.
	Throughput *int `pulumi:"throughput"`
	// The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: ``gp2``|``gp3``   +  Provisioned IOPS SSD: ``io1``|``io2``   +  Throughput Optimized HDD: ``st1``   +  Cold HDD: ``sc1``   +  Magnetic: ``standard``   The magnetic volume type is not supported on Fargate.
	VolumeType *string `pulumi:"volumeType"`
}

// Definition of ServiceManagedEBSVolumeConfiguration
type ServiceManagedEBSVolumeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServiceManagedEBSVolumeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedEBSVolumeConfigurationResponse)(nil)).Elem()
}

func (o ServiceManagedEBSVolumeConfigurationResponseOutput) ToServiceManagedEBSVolumeConfigurationResponseOutput() ServiceManagedEBSVolumeConfigurationResponseOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationResponseOutput) ToServiceManagedEBSVolumeConfigurationResponseOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationResponseOutput {
	return o
}

// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the “Encrypted“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are “ext3“, “ext4“, and “xfs“. If no value is specified, the “xfs“ filesystem type is used by default.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) FilesystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *string { return v.FilesystemType }).(pulumi.StringPtrOutput)
}

// The number of I/O operations per second (IOPS). For “gp3“, “io1“, and “io2“ volumes, this represents the number of IOPS that are provisioned for the volume. For “gp2“ volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   “gp3“: 3,000 - 16,000 IOPS  +   “io1“: 100 - 64,000 IOPS  +   “io2“: 100 - 256,000 IOPS   This parameter is required for “io1“ and “io2“ volume types. The default for “gp3“ volumes is “3,000 IOPS“. This parameter is not supported for “st1“, “sc1“, or “standard“ volume types. This parameter maps 1:1 with the “Iops“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the “KmsKeyId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed “AmazonECSInfrastructureRolePolicyForVolumes“ IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the “Size“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   “gp2“ and “gp3“: 1-16,384  +   “io1“ and “io2“: 4-16,384  +   “st1“ and “sc1“: 125-16,384  +   “standard“: 1-1,024
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *int { return v.SizeInGiB }).(pulumi.IntPtrOutput)
}

// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the “SnapshotId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the “TagSpecifications.N“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) TagSpecifications() EBSTagSpecificationResponseArrayOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) []EBSTagSpecificationResponse {
		return v.TagSpecifications
	}).(EBSTagSpecificationResponseArrayOutput)
}

// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the “Throughput“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the “gp3“ volume type.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// The volume type. This parameter maps 1:1 with the “VolumeType“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: “gp2“|“gp3“   +  Provisioned IOPS SSD: “io1“|“io2“   +  Throughput Optimized HDD: “st1“   +  Cold HDD: “sc1“   +  Magnetic: “standard“   The magnetic volume type is not supported on Fargate.
func (o ServiceManagedEBSVolumeConfigurationResponseOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceManagedEBSVolumeConfigurationResponse) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ServiceManagedEBSVolumeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedEBSVolumeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedEBSVolumeConfigurationResponse)(nil)).Elem()
}

func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) ToServiceManagedEBSVolumeConfigurationResponsePtrOutput() ServiceManagedEBSVolumeConfigurationResponsePtrOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) ToServiceManagedEBSVolumeConfigurationResponsePtrOutputWithContext(ctx context.Context) ServiceManagedEBSVolumeConfigurationResponsePtrOutput {
	return o
}

func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) Elem() ServiceManagedEBSVolumeConfigurationResponseOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) ServiceManagedEBSVolumeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ServiceManagedEBSVolumeConfigurationResponse
		return ret
	}).(ServiceManagedEBSVolumeConfigurationResponseOutput)
}

// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the “Encrypted“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.BoolPtrOutput)
}

// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are “ext3“, “ext4“, and “xfs“. If no value is specified, the “xfs“ filesystem type is used by default.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) FilesystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.FilesystemType
	}).(pulumi.StringPtrOutput)
}

// The number of I/O operations per second (IOPS). For “gp3“, “io1“, and “io2“ volumes, this represents the number of IOPS that are provisioned for the volume. For “gp2“ volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   “gp3“: 3,000 - 16,000 IOPS  +   “io1“: 100 - 64,000 IOPS  +   “io2“: 100 - 256,000 IOPS   This parameter is required for “io1“ and “io2“ volume types. The default for “gp3“ volumes is “3,000 IOPS“. This parameter is not supported for “st1“, “sc1“, or “standard“ volume types. This parameter maps 1:1 with the “Iops“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the “KmsKeyId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed “AmazonECSInfrastructureRolePolicyForVolumes“ IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the “Size“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   “gp2“ and “gp3“: 1-16,384  +   “io1“ and “io2“: 4-16,384  +   “st1“ and “sc1“: 125-16,384  +   “standard“: 1-1,024
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGiB
	}).(pulumi.IntPtrOutput)
}

// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the “SnapshotId“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the “TagSpecifications.N“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) TagSpecifications() EBSTagSpecificationResponseArrayOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) []EBSTagSpecificationResponse {
		if v == nil {
			return nil
		}
		return v.TagSpecifications
	}).(EBSTagSpecificationResponseArrayOutput)
}

// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the “Throughput“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the “gp3“ volume type.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// The volume type. This parameter maps 1:1 with the “VolumeType“ parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: “gp2“|“gp3“   +  Provisioned IOPS SSD: “io1“|“io2“   +  Throughput Optimized HDD: “st1“   +  Cold HDD: “sc1“   +  Magnetic: “standard“   The magnetic volume type is not supported on Fargate.
func (o ServiceManagedEBSVolumeConfigurationResponsePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceManagedEBSVolumeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

// Definition of ServiceRegistry
type ServiceRegistry struct {
	// The container name value to be used for your service discovery service. It's already specified in the task definition. If the task definition that your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task definition that your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
	ContainerName *string `pulumi:"containerName"`
	// The port value to be used for your service discovery service. It's already specified in the task definition. If the task definition your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task definition your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
	ContainerPort *int `pulumi:"containerPort"`
	// The port value used if your service discovery service specified an SRV record. This field might be used if both the ``awsvpc`` network mode and SRV records are used.
	Port *int `pulumi:"port"`
	// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is CMAP. For more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
	RegistryArn *string `pulumi:"registryArn"`
}

// ServiceRegistryInput is an input type that accepts ServiceRegistryArgs and ServiceRegistryOutput values.
// You can construct a concrete instance of `ServiceRegistryInput` via:
//
//	ServiceRegistryArgs{...}
type ServiceRegistryInput interface {
	pulumi.Input

	ToServiceRegistryOutput() ServiceRegistryOutput
	ToServiceRegistryOutputWithContext(context.Context) ServiceRegistryOutput
}

// Definition of ServiceRegistry
type ServiceRegistryArgs struct {
	// The container name value to be used for your service discovery service. It's already specified in the task definition. If the task definition that your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task definition that your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The port value to be used for your service discovery service. It's already specified in the task definition. If the task definition your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task definition your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
	ContainerPort pulumi.IntPtrInput `pulumi:"containerPort"`
	// The port value used if your service discovery service specified an SRV record. This field might be used if both the ``awsvpc`` network mode and SRV records are used.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is CMAP. For more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
	RegistryArn pulumi.StringPtrInput `pulumi:"registryArn"`
}

func (ServiceRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistry)(nil)).Elem()
}

func (i ServiceRegistryArgs) ToServiceRegistryOutput() ServiceRegistryOutput {
	return i.ToServiceRegistryOutputWithContext(context.Background())
}

func (i ServiceRegistryArgs) ToServiceRegistryOutputWithContext(ctx context.Context) ServiceRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRegistryOutput)
}

// ServiceRegistryArrayInput is an input type that accepts ServiceRegistryArray and ServiceRegistryArrayOutput values.
// You can construct a concrete instance of `ServiceRegistryArrayInput` via:
//
//	ServiceRegistryArray{ ServiceRegistryArgs{...} }
type ServiceRegistryArrayInput interface {
	pulumi.Input

	ToServiceRegistryArrayOutput() ServiceRegistryArrayOutput
	ToServiceRegistryArrayOutputWithContext(context.Context) ServiceRegistryArrayOutput
}

type ServiceRegistryArray []ServiceRegistryInput

func (ServiceRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRegistry)(nil)).Elem()
}

func (i ServiceRegistryArray) ToServiceRegistryArrayOutput() ServiceRegistryArrayOutput {
	return i.ToServiceRegistryArrayOutputWithContext(context.Background())
}

func (i ServiceRegistryArray) ToServiceRegistryArrayOutputWithContext(ctx context.Context) ServiceRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRegistryArrayOutput)
}

// Definition of ServiceRegistry
type ServiceRegistryOutput struct{ *pulumi.OutputState }

func (ServiceRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistry)(nil)).Elem()
}

func (o ServiceRegistryOutput) ToServiceRegistryOutput() ServiceRegistryOutput {
	return o
}

func (o ServiceRegistryOutput) ToServiceRegistryOutputWithContext(ctx context.Context) ServiceRegistryOutput {
	return o
}

// The container name value to be used for your service discovery service. It's already specified in the task definition. If the task definition that your service task specifies uses the “bridge“ or “host“ network mode, you must specify a “containerName“ and “containerPort“ combination from the task definition. If the task definition that your service task specifies uses the “awsvpc“ network mode and a type SRV DNS record is used, you must specify either a “containerName“ and “containerPort“ combination or a “port“ value. However, you can't specify both.
func (o ServiceRegistryOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The port value to be used for your service discovery service. It's already specified in the task definition. If the task definition your service task specifies uses the “bridge“ or “host“ network mode, you must specify a “containerName“ and “containerPort“ combination from the task definition. If the task definition your service task specifies uses the “awsvpc“ network mode and a type SRV DNS record is used, you must specify either a “containerName“ and “containerPort“ combination or a “port“ value. However, you can't specify both.
func (o ServiceRegistryOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// The port value used if your service discovery service specified an SRV record. This field might be used if both the “awsvpc“ network mode and SRV records are used.
func (o ServiceRegistryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is CMAP. For more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
func (o ServiceRegistryOutput) RegistryArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *string { return v.RegistryArn }).(pulumi.StringPtrOutput)
}

type ServiceRegistryArrayOutput struct{ *pulumi.OutputState }

func (ServiceRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRegistry)(nil)).Elem()
}

func (o ServiceRegistryArrayOutput) ToServiceRegistryArrayOutput() ServiceRegistryArrayOutput {
	return o
}

func (o ServiceRegistryArrayOutput) ToServiceRegistryArrayOutputWithContext(ctx context.Context) ServiceRegistryArrayOutput {
	return o
}

func (o ServiceRegistryArrayOutput) Index(i pulumi.IntInput) ServiceRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRegistry {
		return vs[0].([]ServiceRegistry)[vs[1].(int)]
	}).(ServiceRegistryOutput)
}

// Definition of ServiceRegistry
type ServiceRegistryResponse struct {
	// The container name value to be used for your service discovery service. It's already specified in the task definition. If the task definition that your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task definition that your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
	ContainerName *string `pulumi:"containerName"`
	// The port value to be used for your service discovery service. It's already specified in the task definition. If the task definition your service task specifies uses the ``bridge`` or ``host`` network mode, you must specify a ``containerName`` and ``containerPort`` combination from the task definition. If the task definition your service task specifies uses the ``awsvpc`` network mode and a type SRV DNS record is used, you must specify either a ``containerName`` and ``containerPort`` combination or a ``port`` value. However, you can't specify both.
	ContainerPort *int `pulumi:"containerPort"`
	// The port value used if your service discovery service specified an SRV record. This field might be used if both the ``awsvpc`` network mode and SRV records are used.
	Port *int `pulumi:"port"`
	// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is CMAP. For more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
	RegistryArn *string `pulumi:"registryArn"`
}

// Definition of ServiceRegistry
type ServiceRegistryResponseOutput struct{ *pulumi.OutputState }

func (ServiceRegistryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistryResponse)(nil)).Elem()
}

func (o ServiceRegistryResponseOutput) ToServiceRegistryResponseOutput() ServiceRegistryResponseOutput {
	return o
}

func (o ServiceRegistryResponseOutput) ToServiceRegistryResponseOutputWithContext(ctx context.Context) ServiceRegistryResponseOutput {
	return o
}

// The container name value to be used for your service discovery service. It's already specified in the task definition. If the task definition that your service task specifies uses the “bridge“ or “host“ network mode, you must specify a “containerName“ and “containerPort“ combination from the task definition. If the task definition that your service task specifies uses the “awsvpc“ network mode and a type SRV DNS record is used, you must specify either a “containerName“ and “containerPort“ combination or a “port“ value. However, you can't specify both.
func (o ServiceRegistryResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRegistryResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The port value to be used for your service discovery service. It's already specified in the task definition. If the task definition your service task specifies uses the “bridge“ or “host“ network mode, you must specify a “containerName“ and “containerPort“ combination from the task definition. If the task definition your service task specifies uses the “awsvpc“ network mode and a type SRV DNS record is used, you must specify either a “containerName“ and “containerPort“ combination or a “port“ value. However, you can't specify both.
func (o ServiceRegistryResponseOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceRegistryResponse) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// The port value used if your service discovery service specified an SRV record. This field might be used if both the “awsvpc“ network mode and SRV records are used.
func (o ServiceRegistryResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceRegistryResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is CMAP. For more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html).
func (o ServiceRegistryResponseOutput) RegistryArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRegistryResponse) *string { return v.RegistryArn }).(pulumi.StringPtrOutput)
}

type ServiceRegistryResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceRegistryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRegistryResponse)(nil)).Elem()
}

func (o ServiceRegistryResponseArrayOutput) ToServiceRegistryResponseArrayOutput() ServiceRegistryResponseArrayOutput {
	return o
}

func (o ServiceRegistryResponseArrayOutput) ToServiceRegistryResponseArrayOutputWithContext(ctx context.Context) ServiceRegistryResponseArrayOutput {
	return o
}

func (o ServiceRegistryResponseArrayOutput) Index(i pulumi.IntInput) ServiceRegistryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRegistryResponse {
		return vs[0].([]ServiceRegistryResponse)[vs[1].(int)]
	}).(ServiceRegistryResponseOutput)
}

// Definition of ServiceSoftwareOptions
type ServiceSoftwareOptions struct {
	// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
	AutomatedUpdateDate *string `pulumi:"automatedUpdateDate"`
	// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
	Cancellable *bool `pulumi:"cancellable"`
	// <p>The current service software version present on the domain.</p>
	CurrentVersion *string `pulumi:"currentVersion"`
	// <p>A description of the service software update status.</p>
	Description *string `pulumi:"description"`
	// <p>The new service software version, if one is available.</p>
	NewVersion *string `pulumi:"newVersion"`
	// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
	OptionalDeployment *bool `pulumi:"optionalDeployment"`
	// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
	UpdateAvailable *bool `pulumi:"updateAvailable"`
	// <p>The status of your service software update.</p>
	UpdateStatus *DeploymentStatusEnumValue `pulumi:"updateStatus"`
}

// ServiceSoftwareOptionsInput is an input type that accepts ServiceSoftwareOptionsArgs and ServiceSoftwareOptionsOutput values.
// You can construct a concrete instance of `ServiceSoftwareOptionsInput` via:
//
//	ServiceSoftwareOptionsArgs{...}
type ServiceSoftwareOptionsInput interface {
	pulumi.Input

	ToServiceSoftwareOptionsOutput() ServiceSoftwareOptionsOutput
	ToServiceSoftwareOptionsOutputWithContext(context.Context) ServiceSoftwareOptionsOutput
}

// Definition of ServiceSoftwareOptions
type ServiceSoftwareOptionsArgs struct {
	// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
	AutomatedUpdateDate pulumi.StringPtrInput `pulumi:"automatedUpdateDate"`
	// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
	Cancellable pulumi.BoolPtrInput `pulumi:"cancellable"`
	// <p>The current service software version present on the domain.</p>
	CurrentVersion pulumi.StringPtrInput `pulumi:"currentVersion"`
	// <p>A description of the service software update status.</p>
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <p>The new service software version, if one is available.</p>
	NewVersion pulumi.StringPtrInput `pulumi:"newVersion"`
	// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
	OptionalDeployment pulumi.BoolPtrInput `pulumi:"optionalDeployment"`
	// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
	UpdateAvailable pulumi.BoolPtrInput `pulumi:"updateAvailable"`
	// <p>The status of your service software update.</p>
	UpdateStatus DeploymentStatusEnumValuePtrInput `pulumi:"updateStatus"`
}

func (ServiceSoftwareOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSoftwareOptions)(nil)).Elem()
}

func (i ServiceSoftwareOptionsArgs) ToServiceSoftwareOptionsOutput() ServiceSoftwareOptionsOutput {
	return i.ToServiceSoftwareOptionsOutputWithContext(context.Background())
}

func (i ServiceSoftwareOptionsArgs) ToServiceSoftwareOptionsOutputWithContext(ctx context.Context) ServiceSoftwareOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSoftwareOptionsOutput)
}

func (i ServiceSoftwareOptionsArgs) ToServiceSoftwareOptionsPtrOutput() ServiceSoftwareOptionsPtrOutput {
	return i.ToServiceSoftwareOptionsPtrOutputWithContext(context.Background())
}

func (i ServiceSoftwareOptionsArgs) ToServiceSoftwareOptionsPtrOutputWithContext(ctx context.Context) ServiceSoftwareOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSoftwareOptionsOutput).ToServiceSoftwareOptionsPtrOutputWithContext(ctx)
}

// ServiceSoftwareOptionsPtrInput is an input type that accepts ServiceSoftwareOptionsArgs, ServiceSoftwareOptionsPtr and ServiceSoftwareOptionsPtrOutput values.
// You can construct a concrete instance of `ServiceSoftwareOptionsPtrInput` via:
//
//	        ServiceSoftwareOptionsArgs{...}
//
//	or:
//
//	        nil
type ServiceSoftwareOptionsPtrInput interface {
	pulumi.Input

	ToServiceSoftwareOptionsPtrOutput() ServiceSoftwareOptionsPtrOutput
	ToServiceSoftwareOptionsPtrOutputWithContext(context.Context) ServiceSoftwareOptionsPtrOutput
}

type serviceSoftwareOptionsPtrType ServiceSoftwareOptionsArgs

func ServiceSoftwareOptionsPtr(v *ServiceSoftwareOptionsArgs) ServiceSoftwareOptionsPtrInput {
	return (*serviceSoftwareOptionsPtrType)(v)
}

func (*serviceSoftwareOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSoftwareOptions)(nil)).Elem()
}

func (i *serviceSoftwareOptionsPtrType) ToServiceSoftwareOptionsPtrOutput() ServiceSoftwareOptionsPtrOutput {
	return i.ToServiceSoftwareOptionsPtrOutputWithContext(context.Background())
}

func (i *serviceSoftwareOptionsPtrType) ToServiceSoftwareOptionsPtrOutputWithContext(ctx context.Context) ServiceSoftwareOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSoftwareOptionsPtrOutput)
}

// Definition of ServiceSoftwareOptions
type ServiceSoftwareOptionsOutput struct{ *pulumi.OutputState }

func (ServiceSoftwareOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSoftwareOptions)(nil)).Elem()
}

func (o ServiceSoftwareOptionsOutput) ToServiceSoftwareOptionsOutput() ServiceSoftwareOptionsOutput {
	return o
}

func (o ServiceSoftwareOptionsOutput) ToServiceSoftwareOptionsOutputWithContext(ctx context.Context) ServiceSoftwareOptionsOutput {
	return o
}

func (o ServiceSoftwareOptionsOutput) ToServiceSoftwareOptionsPtrOutput() ServiceSoftwareOptionsPtrOutput {
	return o.ToServiceSoftwareOptionsPtrOutputWithContext(context.Background())
}

func (o ServiceSoftwareOptionsOutput) ToServiceSoftwareOptionsPtrOutputWithContext(ctx context.Context) ServiceSoftwareOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSoftwareOptions) *ServiceSoftwareOptions {
		return &v
	}).(ServiceSoftwareOptionsPtrOutput)
}

// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
func (o ServiceSoftwareOptionsOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *string { return v.AutomatedUpdateDate }).(pulumi.StringPtrOutput)
}

// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
func (o ServiceSoftwareOptionsOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *bool { return v.Cancellable }).(pulumi.BoolPtrOutput)
}

// <p>The current service software version present on the domain.</p>
func (o ServiceSoftwareOptionsOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

// <p>A description of the service software update status.</p>
func (o ServiceSoftwareOptionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The new service software version, if one is available.</p>
func (o ServiceSoftwareOptionsOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *string { return v.NewVersion }).(pulumi.StringPtrOutput)
}

// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
func (o ServiceSoftwareOptionsOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *bool { return v.OptionalDeployment }).(pulumi.BoolPtrOutput)
}

// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
func (o ServiceSoftwareOptionsOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *bool { return v.UpdateAvailable }).(pulumi.BoolPtrOutput)
}

// <p>The status of your service software update.</p>
func (o ServiceSoftwareOptionsOutput) UpdateStatus() DeploymentStatusEnumValuePtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptions) *DeploymentStatusEnumValue { return v.UpdateStatus }).(DeploymentStatusEnumValuePtrOutput)
}

type ServiceSoftwareOptionsPtrOutput struct{ *pulumi.OutputState }

func (ServiceSoftwareOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSoftwareOptions)(nil)).Elem()
}

func (o ServiceSoftwareOptionsPtrOutput) ToServiceSoftwareOptionsPtrOutput() ServiceSoftwareOptionsPtrOutput {
	return o
}

func (o ServiceSoftwareOptionsPtrOutput) ToServiceSoftwareOptionsPtrOutputWithContext(ctx context.Context) ServiceSoftwareOptionsPtrOutput {
	return o
}

func (o ServiceSoftwareOptionsPtrOutput) Elem() ServiceSoftwareOptionsOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) ServiceSoftwareOptions {
		if v != nil {
			return *v
		}
		var ret ServiceSoftwareOptions
		return ret
	}).(ServiceSoftwareOptionsOutput)
}

// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
func (o ServiceSoftwareOptionsPtrOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.AutomatedUpdateDate
	}).(pulumi.StringPtrOutput)
}

// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
func (o ServiceSoftwareOptionsPtrOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Cancellable
	}).(pulumi.BoolPtrOutput)
}

// <p>The current service software version present on the domain.</p>
func (o ServiceSoftwareOptionsPtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

// <p>A description of the service software update status.</p>
func (o ServiceSoftwareOptionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// <p>The new service software version, if one is available.</p>
func (o ServiceSoftwareOptionsPtrOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.NewVersion
	}).(pulumi.StringPtrOutput)
}

// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
func (o ServiceSoftwareOptionsPtrOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.OptionalDeployment
	}).(pulumi.BoolPtrOutput)
}

// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
func (o ServiceSoftwareOptionsPtrOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateAvailable
	}).(pulumi.BoolPtrOutput)
}

// <p>The status of your service software update.</p>
func (o ServiceSoftwareOptionsPtrOutput) UpdateStatus() DeploymentStatusEnumValuePtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptions) *DeploymentStatusEnumValue {
		if v == nil {
			return nil
		}
		return v.UpdateStatus
	}).(DeploymentStatusEnumValuePtrOutput)
}

// Definition of ServiceSoftwareOptions
type ServiceSoftwareOptionsResponse struct {
	// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
	AutomatedUpdateDate *string `pulumi:"automatedUpdateDate"`
	// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
	Cancellable *bool `pulumi:"cancellable"`
	// <p>The current service software version present on the domain.</p>
	CurrentVersion *string `pulumi:"currentVersion"`
	// <p>A description of the service software update status.</p>
	Description *string `pulumi:"description"`
	// <p>The new service software version, if one is available.</p>
	NewVersion *string `pulumi:"newVersion"`
	// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
	OptionalDeployment *bool `pulumi:"optionalDeployment"`
	// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
	UpdateAvailable *bool `pulumi:"updateAvailable"`
	// <p>The status of your service software update.</p>
	UpdateStatus *DeploymentStatusEnumValueResponse `pulumi:"updateStatus"`
}

// Definition of ServiceSoftwareOptions
type ServiceSoftwareOptionsResponseOutput struct{ *pulumi.OutputState }

func (ServiceSoftwareOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSoftwareOptionsResponse)(nil)).Elem()
}

func (o ServiceSoftwareOptionsResponseOutput) ToServiceSoftwareOptionsResponseOutput() ServiceSoftwareOptionsResponseOutput {
	return o
}

func (o ServiceSoftwareOptionsResponseOutput) ToServiceSoftwareOptionsResponseOutputWithContext(ctx context.Context) ServiceSoftwareOptionsResponseOutput {
	return o
}

// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
func (o ServiceSoftwareOptionsResponseOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *string { return v.AutomatedUpdateDate }).(pulumi.StringPtrOutput)
}

// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
func (o ServiceSoftwareOptionsResponseOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *bool { return v.Cancellable }).(pulumi.BoolPtrOutput)
}

// <p>The current service software version present on the domain.</p>
func (o ServiceSoftwareOptionsResponseOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

// <p>A description of the service software update status.</p>
func (o ServiceSoftwareOptionsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The new service software version, if one is available.</p>
func (o ServiceSoftwareOptionsResponseOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *string { return v.NewVersion }).(pulumi.StringPtrOutput)
}

// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
func (o ServiceSoftwareOptionsResponseOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *bool { return v.OptionalDeployment }).(pulumi.BoolPtrOutput)
}

// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
func (o ServiceSoftwareOptionsResponseOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *bool { return v.UpdateAvailable }).(pulumi.BoolPtrOutput)
}

// <p>The status of your service software update.</p>
func (o ServiceSoftwareOptionsResponseOutput) UpdateStatus() DeploymentStatusEnumValueResponsePtrOutput {
	return o.ApplyT(func(v ServiceSoftwareOptionsResponse) *DeploymentStatusEnumValueResponse { return v.UpdateStatus }).(DeploymentStatusEnumValueResponsePtrOutput)
}

type ServiceSoftwareOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceSoftwareOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSoftwareOptionsResponse)(nil)).Elem()
}

func (o ServiceSoftwareOptionsResponsePtrOutput) ToServiceSoftwareOptionsResponsePtrOutput() ServiceSoftwareOptionsResponsePtrOutput {
	return o
}

func (o ServiceSoftwareOptionsResponsePtrOutput) ToServiceSoftwareOptionsResponsePtrOutputWithContext(ctx context.Context) ServiceSoftwareOptionsResponsePtrOutput {
	return o
}

func (o ServiceSoftwareOptionsResponsePtrOutput) Elem() ServiceSoftwareOptionsResponseOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) ServiceSoftwareOptionsResponse {
		if v != nil {
			return *v
		}
		var ret ServiceSoftwareOptionsResponse
		return ret
	}).(ServiceSoftwareOptionsResponseOutput)
}

// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutomatedUpdateDate
	}).(pulumi.StringPtrOutput)
}

// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Cancellable
	}).(pulumi.BoolPtrOutput)
}

// <p>The current service software version present on the domain.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

// <p>A description of the service software update status.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// <p>The new service software version, if one is available.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NewVersion
	}).(pulumi.StringPtrOutput)
}

// <p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.OptionalDeployment
	}).(pulumi.BoolPtrOutput)
}

// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateAvailable
	}).(pulumi.BoolPtrOutput)
}

// <p>The status of your service software update.</p>
func (o ServiceSoftwareOptionsResponsePtrOutput) UpdateStatus() DeploymentStatusEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *ServiceSoftwareOptionsResponse) *DeploymentStatusEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.UpdateStatus
	}).(DeploymentStatusEnumValueResponsePtrOutput)
}

// Definition of ServiceVolumeConfiguration
type ServiceVolumeConfiguration struct {
	// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
	ManagedEBSVolume *ServiceManagedEBSVolumeConfiguration `pulumi:"managedEBSVolume"`
	// The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
	Name *string `pulumi:"name"`
}

// ServiceVolumeConfigurationInput is an input type that accepts ServiceVolumeConfigurationArgs and ServiceVolumeConfigurationOutput values.
// You can construct a concrete instance of `ServiceVolumeConfigurationInput` via:
//
//	ServiceVolumeConfigurationArgs{...}
type ServiceVolumeConfigurationInput interface {
	pulumi.Input

	ToServiceVolumeConfigurationOutput() ServiceVolumeConfigurationOutput
	ToServiceVolumeConfigurationOutputWithContext(context.Context) ServiceVolumeConfigurationOutput
}

// Definition of ServiceVolumeConfiguration
type ServiceVolumeConfigurationArgs struct {
	// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
	ManagedEBSVolume ServiceManagedEBSVolumeConfigurationPtrInput `pulumi:"managedEBSVolume"`
	// The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServiceVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVolumeConfiguration)(nil)).Elem()
}

func (i ServiceVolumeConfigurationArgs) ToServiceVolumeConfigurationOutput() ServiceVolumeConfigurationOutput {
	return i.ToServiceVolumeConfigurationOutputWithContext(context.Background())
}

func (i ServiceVolumeConfigurationArgs) ToServiceVolumeConfigurationOutputWithContext(ctx context.Context) ServiceVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVolumeConfigurationOutput)
}

// ServiceVolumeConfigurationArrayInput is an input type that accepts ServiceVolumeConfigurationArray and ServiceVolumeConfigurationArrayOutput values.
// You can construct a concrete instance of `ServiceVolumeConfigurationArrayInput` via:
//
//	ServiceVolumeConfigurationArray{ ServiceVolumeConfigurationArgs{...} }
type ServiceVolumeConfigurationArrayInput interface {
	pulumi.Input

	ToServiceVolumeConfigurationArrayOutput() ServiceVolumeConfigurationArrayOutput
	ToServiceVolumeConfigurationArrayOutputWithContext(context.Context) ServiceVolumeConfigurationArrayOutput
}

type ServiceVolumeConfigurationArray []ServiceVolumeConfigurationInput

func (ServiceVolumeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceVolumeConfiguration)(nil)).Elem()
}

func (i ServiceVolumeConfigurationArray) ToServiceVolumeConfigurationArrayOutput() ServiceVolumeConfigurationArrayOutput {
	return i.ToServiceVolumeConfigurationArrayOutputWithContext(context.Background())
}

func (i ServiceVolumeConfigurationArray) ToServiceVolumeConfigurationArrayOutputWithContext(ctx context.Context) ServiceVolumeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVolumeConfigurationArrayOutput)
}

// Definition of ServiceVolumeConfiguration
type ServiceVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVolumeConfiguration)(nil)).Elem()
}

func (o ServiceVolumeConfigurationOutput) ToServiceVolumeConfigurationOutput() ServiceVolumeConfigurationOutput {
	return o
}

func (o ServiceVolumeConfigurationOutput) ToServiceVolumeConfigurationOutputWithContext(ctx context.Context) ServiceVolumeConfigurationOutput {
	return o
}

// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. Many of these parameters map 1:1 with the Amazon EBS “CreateVolume“ API request parameters.
func (o ServiceVolumeConfigurationOutput) ManagedEBSVolume() ServiceManagedEBSVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceVolumeConfiguration) *ServiceManagedEBSVolumeConfiguration { return v.ManagedEBSVolume }).(ServiceManagedEBSVolumeConfigurationPtrOutput)
}

// The name of the volume. This value must match the volume name from the “Volume“ object in the task definition.
func (o ServiceVolumeConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceVolumeConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServiceVolumeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ServiceVolumeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceVolumeConfiguration)(nil)).Elem()
}

func (o ServiceVolumeConfigurationArrayOutput) ToServiceVolumeConfigurationArrayOutput() ServiceVolumeConfigurationArrayOutput {
	return o
}

func (o ServiceVolumeConfigurationArrayOutput) ToServiceVolumeConfigurationArrayOutputWithContext(ctx context.Context) ServiceVolumeConfigurationArrayOutput {
	return o
}

func (o ServiceVolumeConfigurationArrayOutput) Index(i pulumi.IntInput) ServiceVolumeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceVolumeConfiguration {
		return vs[0].([]ServiceVolumeConfiguration)[vs[1].(int)]
	}).(ServiceVolumeConfigurationOutput)
}

// Definition of ServiceVolumeConfiguration
type ServiceVolumeConfigurationResponse struct {
	// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
	ManagedEBSVolume *ServiceManagedEBSVolumeConfigurationResponse `pulumi:"managedEBSVolume"`
	// The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
	Name *string `pulumi:"name"`
}

// Definition of ServiceVolumeConfiguration
type ServiceVolumeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServiceVolumeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVolumeConfigurationResponse)(nil)).Elem()
}

func (o ServiceVolumeConfigurationResponseOutput) ToServiceVolumeConfigurationResponseOutput() ServiceVolumeConfigurationResponseOutput {
	return o
}

func (o ServiceVolumeConfigurationResponseOutput) ToServiceVolumeConfigurationResponseOutputWithContext(ctx context.Context) ServiceVolumeConfigurationResponseOutput {
	return o
}

// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created for each task in the service. Many of these parameters map 1:1 with the Amazon EBS “CreateVolume“ API request parameters.
func (o ServiceVolumeConfigurationResponseOutput) ManagedEBSVolume() ServiceManagedEBSVolumeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ServiceVolumeConfigurationResponse) *ServiceManagedEBSVolumeConfigurationResponse {
		return v.ManagedEBSVolume
	}).(ServiceManagedEBSVolumeConfigurationResponsePtrOutput)
}

// The name of the volume. This value must match the volume name from the “Volume“ object in the task definition.
func (o ServiceVolumeConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceVolumeConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServiceVolumeConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceVolumeConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceVolumeConfigurationResponse)(nil)).Elem()
}

func (o ServiceVolumeConfigurationResponseArrayOutput) ToServiceVolumeConfigurationResponseArrayOutput() ServiceVolumeConfigurationResponseArrayOutput {
	return o
}

func (o ServiceVolumeConfigurationResponseArrayOutput) ToServiceVolumeConfigurationResponseArrayOutputWithContext(ctx context.Context) ServiceVolumeConfigurationResponseArrayOutput {
	return o
}

func (o ServiceVolumeConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ServiceVolumeConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceVolumeConfigurationResponse {
		return vs[0].([]ServiceVolumeConfigurationResponse)[vs[1].(int)]
	}).(ServiceVolumeConfigurationResponseOutput)
}

// Definition of SeveritySummary
type SeveritySummary struct {
	// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
	CriticalCount *int `pulumi:"criticalCount"`
	// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
	HighCount *int `pulumi:"highCount"`
	// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
	InformationalCount *int `pulumi:"informationalCount"`
	// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
	LowCount *int `pulumi:"lowCount"`
	// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
	MediumCount *int `pulumi:"mediumCount"`
	// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
	UnspecifiedCount *int `pulumi:"unspecifiedCount"`
}

// SeveritySummaryInput is an input type that accepts SeveritySummaryArgs and SeveritySummaryOutput values.
// You can construct a concrete instance of `SeveritySummaryInput` via:
//
//	SeveritySummaryArgs{...}
type SeveritySummaryInput interface {
	pulumi.Input

	ToSeveritySummaryOutput() SeveritySummaryOutput
	ToSeveritySummaryOutputWithContext(context.Context) SeveritySummaryOutput
}

// Definition of SeveritySummary
type SeveritySummaryArgs struct {
	// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
	CriticalCount pulumi.IntPtrInput `pulumi:"criticalCount"`
	// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
	HighCount pulumi.IntPtrInput `pulumi:"highCount"`
	// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
	InformationalCount pulumi.IntPtrInput `pulumi:"informationalCount"`
	// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
	LowCount pulumi.IntPtrInput `pulumi:"lowCount"`
	// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
	MediumCount pulumi.IntPtrInput `pulumi:"mediumCount"`
	// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
	UnspecifiedCount pulumi.IntPtrInput `pulumi:"unspecifiedCount"`
}

func (SeveritySummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySummary)(nil)).Elem()
}

func (i SeveritySummaryArgs) ToSeveritySummaryOutput() SeveritySummaryOutput {
	return i.ToSeveritySummaryOutputWithContext(context.Background())
}

func (i SeveritySummaryArgs) ToSeveritySummaryOutputWithContext(ctx context.Context) SeveritySummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySummaryOutput)
}

func (i SeveritySummaryArgs) ToSeveritySummaryPtrOutput() SeveritySummaryPtrOutput {
	return i.ToSeveritySummaryPtrOutputWithContext(context.Background())
}

func (i SeveritySummaryArgs) ToSeveritySummaryPtrOutputWithContext(ctx context.Context) SeveritySummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySummaryOutput).ToSeveritySummaryPtrOutputWithContext(ctx)
}

// SeveritySummaryPtrInput is an input type that accepts SeveritySummaryArgs, SeveritySummaryPtr and SeveritySummaryPtrOutput values.
// You can construct a concrete instance of `SeveritySummaryPtrInput` via:
//
//	        SeveritySummaryArgs{...}
//
//	or:
//
//	        nil
type SeveritySummaryPtrInput interface {
	pulumi.Input

	ToSeveritySummaryPtrOutput() SeveritySummaryPtrOutput
	ToSeveritySummaryPtrOutputWithContext(context.Context) SeveritySummaryPtrOutput
}

type severitySummaryPtrType SeveritySummaryArgs

func SeveritySummaryPtr(v *SeveritySummaryArgs) SeveritySummaryPtrInput {
	return (*severitySummaryPtrType)(v)
}

func (*severitySummaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SeveritySummary)(nil)).Elem()
}

func (i *severitySummaryPtrType) ToSeveritySummaryPtrOutput() SeveritySummaryPtrOutput {
	return i.ToSeveritySummaryPtrOutputWithContext(context.Background())
}

func (i *severitySummaryPtrType) ToSeveritySummaryPtrOutputWithContext(ctx context.Context) SeveritySummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeveritySummaryPtrOutput)
}

// Definition of SeveritySummary
type SeveritySummaryOutput struct{ *pulumi.OutputState }

func (SeveritySummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySummary)(nil)).Elem()
}

func (o SeveritySummaryOutput) ToSeveritySummaryOutput() SeveritySummaryOutput {
	return o
}

func (o SeveritySummaryOutput) ToSeveritySummaryOutputWithContext(ctx context.Context) SeveritySummaryOutput {
	return o
}

func (o SeveritySummaryOutput) ToSeveritySummaryPtrOutput() SeveritySummaryPtrOutput {
	return o.ToSeveritySummaryPtrOutputWithContext(context.Background())
}

func (o SeveritySummaryOutput) ToSeveritySummaryPtrOutputWithContext(ctx context.Context) SeveritySummaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SeveritySummary) *SeveritySummary {
		return &v
	}).(SeveritySummaryPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryOutput) CriticalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummary) *int { return v.CriticalCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryOutput) HighCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummary) *int { return v.HighCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryOutput) InformationalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummary) *int { return v.InformationalCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryOutput) LowCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummary) *int { return v.LowCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryOutput) MediumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummary) *int { return v.MediumCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryOutput) UnspecifiedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummary) *int { return v.UnspecifiedCount }).(pulumi.IntPtrOutput)
}

type SeveritySummaryPtrOutput struct{ *pulumi.OutputState }

func (SeveritySummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SeveritySummary)(nil)).Elem()
}

func (o SeveritySummaryPtrOutput) ToSeveritySummaryPtrOutput() SeveritySummaryPtrOutput {
	return o
}

func (o SeveritySummaryPtrOutput) ToSeveritySummaryPtrOutputWithContext(ctx context.Context) SeveritySummaryPtrOutput {
	return o
}

func (o SeveritySummaryPtrOutput) Elem() SeveritySummaryOutput {
	return o.ApplyT(func(v *SeveritySummary) SeveritySummary {
		if v != nil {
			return *v
		}
		var ret SeveritySummary
		return ret
	}).(SeveritySummaryOutput)
}

// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryPtrOutput) CriticalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummary) *int {
		if v == nil {
			return nil
		}
		return v.CriticalCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryPtrOutput) HighCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummary) *int {
		if v == nil {
			return nil
		}
		return v.HighCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryPtrOutput) InformationalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummary) *int {
		if v == nil {
			return nil
		}
		return v.InformationalCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryPtrOutput) LowCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummary) *int {
		if v == nil {
			return nil
		}
		return v.LowCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryPtrOutput) MediumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummary) *int {
		if v == nil {
			return nil
		}
		return v.MediumCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryPtrOutput) UnspecifiedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummary) *int {
		if v == nil {
			return nil
		}
		return v.UnspecifiedCount
	}).(pulumi.IntPtrOutput)
}

// Definition of SeveritySummary
type SeveritySummaryResponse struct {
	// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
	CriticalCount *int `pulumi:"criticalCount"`
	// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
	HighCount *int `pulumi:"highCount"`
	// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
	InformationalCount *int `pulumi:"informationalCount"`
	// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
	LowCount *int `pulumi:"lowCount"`
	// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
	MediumCount *int `pulumi:"mediumCount"`
	// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
	UnspecifiedCount *int `pulumi:"unspecifiedCount"`
}

// Definition of SeveritySummary
type SeveritySummaryResponseOutput struct{ *pulumi.OutputState }

func (SeveritySummaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeveritySummaryResponse)(nil)).Elem()
}

func (o SeveritySummaryResponseOutput) ToSeveritySummaryResponseOutput() SeveritySummaryResponseOutput {
	return o
}

func (o SeveritySummaryResponseOutput) ToSeveritySummaryResponseOutputWithContext(ctx context.Context) SeveritySummaryResponseOutput {
	return o
}

// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponseOutput) CriticalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummaryResponse) *int { return v.CriticalCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponseOutput) HighCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummaryResponse) *int { return v.HighCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponseOutput) InformationalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummaryResponse) *int { return v.InformationalCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponseOutput) LowCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummaryResponse) *int { return v.LowCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponseOutput) MediumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummaryResponse) *int { return v.MediumCount }).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponseOutput) UnspecifiedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SeveritySummaryResponse) *int { return v.UnspecifiedCount }).(pulumi.IntPtrOutput)
}

type SeveritySummaryResponsePtrOutput struct{ *pulumi.OutputState }

func (SeveritySummaryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SeveritySummaryResponse)(nil)).Elem()
}

func (o SeveritySummaryResponsePtrOutput) ToSeveritySummaryResponsePtrOutput() SeveritySummaryResponsePtrOutput {
	return o
}

func (o SeveritySummaryResponsePtrOutput) ToSeveritySummaryResponsePtrOutputWithContext(ctx context.Context) SeveritySummaryResponsePtrOutput {
	return o
}

func (o SeveritySummaryResponsePtrOutput) Elem() SeveritySummaryResponseOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) SeveritySummaryResponse {
		if v != nil {
			return *v
		}
		var ret SeveritySummaryResponse
		return ret
	}).(SeveritySummaryResponseOutput)
}

// <p>The total number of resources or compliance items that have a severity level of <code>Critical</code>. Critical severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponsePtrOutput) CriticalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.CriticalCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponsePtrOutput) HighCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.HighCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponsePtrOutput) InformationalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.InformationalCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponsePtrOutput) LowCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.LowCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponsePtrOutput) MediumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.MediumCount
	}).(pulumi.IntPtrOutput)
}

// <p>The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.</p>
func (o SeveritySummaryResponsePtrOutput) UnspecifiedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SeveritySummaryResponse) *int {
		if v == nil {
			return nil
		}
		return v.UnspecifiedCount
	}).(pulumi.IntPtrOutput)
}

// Definition of SimpleCriterionForJob
type SimpleCriterionForJob struct {
	// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
	Comparator *JobComparatorEnumValue `pulumi:"comparator"`
	// <p>The property to use in the condition.</p>
	Key *SimpleCriterionKeyForJobEnumValue `pulumi:"key"`
	// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
	Values []string `pulumi:"values"`
}

// SimpleCriterionForJobInput is an input type that accepts SimpleCriterionForJobArgs and SimpleCriterionForJobOutput values.
// You can construct a concrete instance of `SimpleCriterionForJobInput` via:
//
//	SimpleCriterionForJobArgs{...}
type SimpleCriterionForJobInput interface {
	pulumi.Input

	ToSimpleCriterionForJobOutput() SimpleCriterionForJobOutput
	ToSimpleCriterionForJobOutputWithContext(context.Context) SimpleCriterionForJobOutput
}

// Definition of SimpleCriterionForJob
type SimpleCriterionForJobArgs struct {
	// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
	Comparator JobComparatorEnumValuePtrInput `pulumi:"comparator"`
	// <p>The property to use in the condition.</p>
	Key SimpleCriterionKeyForJobEnumValuePtrInput `pulumi:"key"`
	// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SimpleCriterionForJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleCriterionForJob)(nil)).Elem()
}

func (i SimpleCriterionForJobArgs) ToSimpleCriterionForJobOutput() SimpleCriterionForJobOutput {
	return i.ToSimpleCriterionForJobOutputWithContext(context.Background())
}

func (i SimpleCriterionForJobArgs) ToSimpleCriterionForJobOutputWithContext(ctx context.Context) SimpleCriterionForJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleCriterionForJobOutput)
}

func (i SimpleCriterionForJobArgs) ToSimpleCriterionForJobPtrOutput() SimpleCriterionForJobPtrOutput {
	return i.ToSimpleCriterionForJobPtrOutputWithContext(context.Background())
}

func (i SimpleCriterionForJobArgs) ToSimpleCriterionForJobPtrOutputWithContext(ctx context.Context) SimpleCriterionForJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleCriterionForJobOutput).ToSimpleCriterionForJobPtrOutputWithContext(ctx)
}

// SimpleCriterionForJobPtrInput is an input type that accepts SimpleCriterionForJobArgs, SimpleCriterionForJobPtr and SimpleCriterionForJobPtrOutput values.
// You can construct a concrete instance of `SimpleCriterionForJobPtrInput` via:
//
//	        SimpleCriterionForJobArgs{...}
//
//	or:
//
//	        nil
type SimpleCriterionForJobPtrInput interface {
	pulumi.Input

	ToSimpleCriterionForJobPtrOutput() SimpleCriterionForJobPtrOutput
	ToSimpleCriterionForJobPtrOutputWithContext(context.Context) SimpleCriterionForJobPtrOutput
}

type simpleCriterionForJobPtrType SimpleCriterionForJobArgs

func SimpleCriterionForJobPtr(v *SimpleCriterionForJobArgs) SimpleCriterionForJobPtrInput {
	return (*simpleCriterionForJobPtrType)(v)
}

func (*simpleCriterionForJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleCriterionForJob)(nil)).Elem()
}

func (i *simpleCriterionForJobPtrType) ToSimpleCriterionForJobPtrOutput() SimpleCriterionForJobPtrOutput {
	return i.ToSimpleCriterionForJobPtrOutputWithContext(context.Background())
}

func (i *simpleCriterionForJobPtrType) ToSimpleCriterionForJobPtrOutputWithContext(ctx context.Context) SimpleCriterionForJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleCriterionForJobPtrOutput)
}

// Definition of SimpleCriterionForJob
type SimpleCriterionForJobOutput struct{ *pulumi.OutputState }

func (SimpleCriterionForJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleCriterionForJob)(nil)).Elem()
}

func (o SimpleCriterionForJobOutput) ToSimpleCriterionForJobOutput() SimpleCriterionForJobOutput {
	return o
}

func (o SimpleCriterionForJobOutput) ToSimpleCriterionForJobOutputWithContext(ctx context.Context) SimpleCriterionForJobOutput {
	return o
}

func (o SimpleCriterionForJobOutput) ToSimpleCriterionForJobPtrOutput() SimpleCriterionForJobPtrOutput {
	return o.ToSimpleCriterionForJobPtrOutputWithContext(context.Background())
}

func (o SimpleCriterionForJobOutput) ToSimpleCriterionForJobPtrOutputWithContext(ctx context.Context) SimpleCriterionForJobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleCriterionForJob) *SimpleCriterionForJob {
		return &v
	}).(SimpleCriterionForJobPtrOutput)
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o SimpleCriterionForJobOutput) Comparator() JobComparatorEnumValuePtrOutput {
	return o.ApplyT(func(v SimpleCriterionForJob) *JobComparatorEnumValue { return v.Comparator }).(JobComparatorEnumValuePtrOutput)
}

// <p>The property to use in the condition.</p>
func (o SimpleCriterionForJobOutput) Key() SimpleCriterionKeyForJobEnumValuePtrOutput {
	return o.ApplyT(func(v SimpleCriterionForJob) *SimpleCriterionKeyForJobEnumValue { return v.Key }).(SimpleCriterionKeyForJobEnumValuePtrOutput)
}

// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
func (o SimpleCriterionForJobOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleCriterionForJob) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SimpleCriterionForJobPtrOutput struct{ *pulumi.OutputState }

func (SimpleCriterionForJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleCriterionForJob)(nil)).Elem()
}

func (o SimpleCriterionForJobPtrOutput) ToSimpleCriterionForJobPtrOutput() SimpleCriterionForJobPtrOutput {
	return o
}

func (o SimpleCriterionForJobPtrOutput) ToSimpleCriterionForJobPtrOutputWithContext(ctx context.Context) SimpleCriterionForJobPtrOutput {
	return o
}

func (o SimpleCriterionForJobPtrOutput) Elem() SimpleCriterionForJobOutput {
	return o.ApplyT(func(v *SimpleCriterionForJob) SimpleCriterionForJob {
		if v != nil {
			return *v
		}
		var ret SimpleCriterionForJob
		return ret
	}).(SimpleCriterionForJobOutput)
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o SimpleCriterionForJobPtrOutput) Comparator() JobComparatorEnumValuePtrOutput {
	return o.ApplyT(func(v *SimpleCriterionForJob) *JobComparatorEnumValue {
		if v == nil {
			return nil
		}
		return v.Comparator
	}).(JobComparatorEnumValuePtrOutput)
}

// <p>The property to use in the condition.</p>
func (o SimpleCriterionForJobPtrOutput) Key() SimpleCriterionKeyForJobEnumValuePtrOutput {
	return o.ApplyT(func(v *SimpleCriterionForJob) *SimpleCriterionKeyForJobEnumValue {
		if v == nil {
			return nil
		}
		return v.Key
	}).(SimpleCriterionKeyForJobEnumValuePtrOutput)
}

// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
func (o SimpleCriterionForJobPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleCriterionForJob) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// Definition of SimpleCriterionForJob
type SimpleCriterionForJobResponse struct {
	// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
	Comparator *JobComparatorEnumValueResponse `pulumi:"comparator"`
	// <p>The property to use in the condition.</p>
	Key *SimpleCriterionKeyForJobEnumValueResponse `pulumi:"key"`
	// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
	Values []string `pulumi:"values"`
}

// Definition of SimpleCriterionForJob
type SimpleCriterionForJobResponseOutput struct{ *pulumi.OutputState }

func (SimpleCriterionForJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleCriterionForJobResponse)(nil)).Elem()
}

func (o SimpleCriterionForJobResponseOutput) ToSimpleCriterionForJobResponseOutput() SimpleCriterionForJobResponseOutput {
	return o
}

func (o SimpleCriterionForJobResponseOutput) ToSimpleCriterionForJobResponseOutputWithContext(ctx context.Context) SimpleCriterionForJobResponseOutput {
	return o
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o SimpleCriterionForJobResponseOutput) Comparator() JobComparatorEnumValueResponsePtrOutput {
	return o.ApplyT(func(v SimpleCriterionForJobResponse) *JobComparatorEnumValueResponse { return v.Comparator }).(JobComparatorEnumValueResponsePtrOutput)
}

// <p>The property to use in the condition.</p>
func (o SimpleCriterionForJobResponseOutput) Key() SimpleCriterionKeyForJobEnumValueResponsePtrOutput {
	return o.ApplyT(func(v SimpleCriterionForJobResponse) *SimpleCriterionKeyForJobEnumValueResponse { return v.Key }).(SimpleCriterionKeyForJobEnumValueResponsePtrOutput)
}

// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
func (o SimpleCriterionForJobResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleCriterionForJobResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SimpleCriterionForJobResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleCriterionForJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleCriterionForJobResponse)(nil)).Elem()
}

func (o SimpleCriterionForJobResponsePtrOutput) ToSimpleCriterionForJobResponsePtrOutput() SimpleCriterionForJobResponsePtrOutput {
	return o
}

func (o SimpleCriterionForJobResponsePtrOutput) ToSimpleCriterionForJobResponsePtrOutputWithContext(ctx context.Context) SimpleCriterionForJobResponsePtrOutput {
	return o
}

func (o SimpleCriterionForJobResponsePtrOutput) Elem() SimpleCriterionForJobResponseOutput {
	return o.ApplyT(func(v *SimpleCriterionForJobResponse) SimpleCriterionForJobResponse {
		if v != nil {
			return *v
		}
		var ret SimpleCriterionForJobResponse
		return ret
	}).(SimpleCriterionForJobResponseOutput)
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o SimpleCriterionForJobResponsePtrOutput) Comparator() JobComparatorEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *SimpleCriterionForJobResponse) *JobComparatorEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Comparator
	}).(JobComparatorEnumValueResponsePtrOutput)
}

// <p>The property to use in the condition.</p>
func (o SimpleCriterionForJobResponsePtrOutput) Key() SimpleCriterionKeyForJobEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *SimpleCriterionForJobResponse) *SimpleCriterionKeyForJobEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Key
	}).(SimpleCriterionKeyForJobEnumValueResponsePtrOutput)
}

// <p>An array that lists one or more values to use in the condition. If you specify multiple values, Amazon Macie uses OR logic to join the values. Valid values for each supported property (key) are:</p> <ul><li><p>ACCOUNT_ID - A string that represents the unique identifier for the Amazon Web Services account that owns the bucket.</p></li> <li><p>S3_BUCKET_EFFECTIVE_PERMISSION - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketpublicaccess-effectivepermission'>BucketPublicAccess.effectivePermission</a> property of a bucket.</p></li> <li><p>S3_BUCKET_NAME - A string that represents the name of a bucket.</p></li> <li><p>S3_BUCKET_SHARED_ACCESS - A string that represents an enumerated value that Macie defines for the <a href='https://docs.aws.amazon.com/macie/latest/APIReference/datasources-s3.html#datasources-s3-prop-bucketmetadata-sharedaccess'>BucketMetadata.sharedAccess</a> property of a bucket.</p></li></ul> <p>Values are case sensitive. Also, Macie doesn't support use of partial values or wildcard characters in these values.</p>
func (o SimpleCriterionForJobResponsePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleCriterionForJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// Definition of SimpleCriterionKeyForJobEnumValue
type SimpleCriterionKeyForJobEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SimpleCriterionKeyForJobEnumValueInput is an input type that accepts SimpleCriterionKeyForJobEnumValueArgs and SimpleCriterionKeyForJobEnumValueOutput values.
// You can construct a concrete instance of `SimpleCriterionKeyForJobEnumValueInput` via:
//
//	SimpleCriterionKeyForJobEnumValueArgs{...}
type SimpleCriterionKeyForJobEnumValueInput interface {
	pulumi.Input

	ToSimpleCriterionKeyForJobEnumValueOutput() SimpleCriterionKeyForJobEnumValueOutput
	ToSimpleCriterionKeyForJobEnumValueOutputWithContext(context.Context) SimpleCriterionKeyForJobEnumValueOutput
}

// Definition of SimpleCriterionKeyForJobEnumValue
type SimpleCriterionKeyForJobEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SimpleCriterionKeyForJobEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleCriterionKeyForJobEnumValue)(nil)).Elem()
}

func (i SimpleCriterionKeyForJobEnumValueArgs) ToSimpleCriterionKeyForJobEnumValueOutput() SimpleCriterionKeyForJobEnumValueOutput {
	return i.ToSimpleCriterionKeyForJobEnumValueOutputWithContext(context.Background())
}

func (i SimpleCriterionKeyForJobEnumValueArgs) ToSimpleCriterionKeyForJobEnumValueOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleCriterionKeyForJobEnumValueOutput)
}

func (i SimpleCriterionKeyForJobEnumValueArgs) ToSimpleCriterionKeyForJobEnumValuePtrOutput() SimpleCriterionKeyForJobEnumValuePtrOutput {
	return i.ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(context.Background())
}

func (i SimpleCriterionKeyForJobEnumValueArgs) ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleCriterionKeyForJobEnumValueOutput).ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(ctx)
}

// SimpleCriterionKeyForJobEnumValuePtrInput is an input type that accepts SimpleCriterionKeyForJobEnumValueArgs, SimpleCriterionKeyForJobEnumValuePtr and SimpleCriterionKeyForJobEnumValuePtrOutput values.
// You can construct a concrete instance of `SimpleCriterionKeyForJobEnumValuePtrInput` via:
//
//	        SimpleCriterionKeyForJobEnumValueArgs{...}
//
//	or:
//
//	        nil
type SimpleCriterionKeyForJobEnumValuePtrInput interface {
	pulumi.Input

	ToSimpleCriterionKeyForJobEnumValuePtrOutput() SimpleCriterionKeyForJobEnumValuePtrOutput
	ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(context.Context) SimpleCriterionKeyForJobEnumValuePtrOutput
}

type simpleCriterionKeyForJobEnumValuePtrType SimpleCriterionKeyForJobEnumValueArgs

func SimpleCriterionKeyForJobEnumValuePtr(v *SimpleCriterionKeyForJobEnumValueArgs) SimpleCriterionKeyForJobEnumValuePtrInput {
	return (*simpleCriterionKeyForJobEnumValuePtrType)(v)
}

func (*simpleCriterionKeyForJobEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleCriterionKeyForJobEnumValue)(nil)).Elem()
}

func (i *simpleCriterionKeyForJobEnumValuePtrType) ToSimpleCriterionKeyForJobEnumValuePtrOutput() SimpleCriterionKeyForJobEnumValuePtrOutput {
	return i.ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(context.Background())
}

func (i *simpleCriterionKeyForJobEnumValuePtrType) ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleCriterionKeyForJobEnumValuePtrOutput)
}

// Definition of SimpleCriterionKeyForJobEnumValue
type SimpleCriterionKeyForJobEnumValueOutput struct{ *pulumi.OutputState }

func (SimpleCriterionKeyForJobEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleCriterionKeyForJobEnumValue)(nil)).Elem()
}

func (o SimpleCriterionKeyForJobEnumValueOutput) ToSimpleCriterionKeyForJobEnumValueOutput() SimpleCriterionKeyForJobEnumValueOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValueOutput) ToSimpleCriterionKeyForJobEnumValueOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValueOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValueOutput) ToSimpleCriterionKeyForJobEnumValuePtrOutput() SimpleCriterionKeyForJobEnumValuePtrOutput {
	return o.ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(context.Background())
}

func (o SimpleCriterionKeyForJobEnumValueOutput) ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleCriterionKeyForJobEnumValue) *SimpleCriterionKeyForJobEnumValue {
		return &v
	}).(SimpleCriterionKeyForJobEnumValuePtrOutput)
}

// Property value
func (o SimpleCriterionKeyForJobEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleCriterionKeyForJobEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SimpleCriterionKeyForJobEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SimpleCriterionKeyForJobEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleCriterionKeyForJobEnumValue)(nil)).Elem()
}

func (o SimpleCriterionKeyForJobEnumValuePtrOutput) ToSimpleCriterionKeyForJobEnumValuePtrOutput() SimpleCriterionKeyForJobEnumValuePtrOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValuePtrOutput) ToSimpleCriterionKeyForJobEnumValuePtrOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValuePtrOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValuePtrOutput) Elem() SimpleCriterionKeyForJobEnumValueOutput {
	return o.ApplyT(func(v *SimpleCriterionKeyForJobEnumValue) SimpleCriterionKeyForJobEnumValue {
		if v != nil {
			return *v
		}
		var ret SimpleCriterionKeyForJobEnumValue
		return ret
	}).(SimpleCriterionKeyForJobEnumValueOutput)
}

// Property value
func (o SimpleCriterionKeyForJobEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleCriterionKeyForJobEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SimpleCriterionKeyForJobEnumValue
type SimpleCriterionKeyForJobEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SimpleCriterionKeyForJobEnumValue
type SimpleCriterionKeyForJobEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SimpleCriterionKeyForJobEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleCriterionKeyForJobEnumValueResponse)(nil)).Elem()
}

func (o SimpleCriterionKeyForJobEnumValueResponseOutput) ToSimpleCriterionKeyForJobEnumValueResponseOutput() SimpleCriterionKeyForJobEnumValueResponseOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValueResponseOutput) ToSimpleCriterionKeyForJobEnumValueResponseOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValueResponseOutput {
	return o
}

// Property value
func (o SimpleCriterionKeyForJobEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleCriterionKeyForJobEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SimpleCriterionKeyForJobEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleCriterionKeyForJobEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleCriterionKeyForJobEnumValueResponse)(nil)).Elem()
}

func (o SimpleCriterionKeyForJobEnumValueResponsePtrOutput) ToSimpleCriterionKeyForJobEnumValueResponsePtrOutput() SimpleCriterionKeyForJobEnumValueResponsePtrOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValueResponsePtrOutput) ToSimpleCriterionKeyForJobEnumValueResponsePtrOutputWithContext(ctx context.Context) SimpleCriterionKeyForJobEnumValueResponsePtrOutput {
	return o
}

func (o SimpleCriterionKeyForJobEnumValueResponsePtrOutput) Elem() SimpleCriterionKeyForJobEnumValueResponseOutput {
	return o.ApplyT(func(v *SimpleCriterionKeyForJobEnumValueResponse) SimpleCriterionKeyForJobEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SimpleCriterionKeyForJobEnumValueResponse
		return ret
	}).(SimpleCriterionKeyForJobEnumValueResponseOutput)
}

// Property value
func (o SimpleCriterionKeyForJobEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleCriterionKeyForJobEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SingleHeaderModelProperties
type SingleHeaderModelProperties struct {
	// The name of the query header to inspect.
	Name *string `pulumi:"name"`
}

// SingleHeaderModelPropertiesInput is an input type that accepts SingleHeaderModelPropertiesArgs and SingleHeaderModelPropertiesOutput values.
// You can construct a concrete instance of `SingleHeaderModelPropertiesInput` via:
//
//	SingleHeaderModelPropertiesArgs{...}
type SingleHeaderModelPropertiesInput interface {
	pulumi.Input

	ToSingleHeaderModelPropertiesOutput() SingleHeaderModelPropertiesOutput
	ToSingleHeaderModelPropertiesOutputWithContext(context.Context) SingleHeaderModelPropertiesOutput
}

// Definition of SingleHeaderModelProperties
type SingleHeaderModelPropertiesArgs struct {
	// The name of the query header to inspect.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SingleHeaderModelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleHeaderModelProperties)(nil)).Elem()
}

func (i SingleHeaderModelPropertiesArgs) ToSingleHeaderModelPropertiesOutput() SingleHeaderModelPropertiesOutput {
	return i.ToSingleHeaderModelPropertiesOutputWithContext(context.Background())
}

func (i SingleHeaderModelPropertiesArgs) ToSingleHeaderModelPropertiesOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleHeaderModelPropertiesOutput)
}

func (i SingleHeaderModelPropertiesArgs) ToSingleHeaderModelPropertiesPtrOutput() SingleHeaderModelPropertiesPtrOutput {
	return i.ToSingleHeaderModelPropertiesPtrOutputWithContext(context.Background())
}

func (i SingleHeaderModelPropertiesArgs) ToSingleHeaderModelPropertiesPtrOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleHeaderModelPropertiesOutput).ToSingleHeaderModelPropertiesPtrOutputWithContext(ctx)
}

// SingleHeaderModelPropertiesPtrInput is an input type that accepts SingleHeaderModelPropertiesArgs, SingleHeaderModelPropertiesPtr and SingleHeaderModelPropertiesPtrOutput values.
// You can construct a concrete instance of `SingleHeaderModelPropertiesPtrInput` via:
//
//	        SingleHeaderModelPropertiesArgs{...}
//
//	or:
//
//	        nil
type SingleHeaderModelPropertiesPtrInput interface {
	pulumi.Input

	ToSingleHeaderModelPropertiesPtrOutput() SingleHeaderModelPropertiesPtrOutput
	ToSingleHeaderModelPropertiesPtrOutputWithContext(context.Context) SingleHeaderModelPropertiesPtrOutput
}

type singleHeaderModelPropertiesPtrType SingleHeaderModelPropertiesArgs

func SingleHeaderModelPropertiesPtr(v *SingleHeaderModelPropertiesArgs) SingleHeaderModelPropertiesPtrInput {
	return (*singleHeaderModelPropertiesPtrType)(v)
}

func (*singleHeaderModelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleHeaderModelProperties)(nil)).Elem()
}

func (i *singleHeaderModelPropertiesPtrType) ToSingleHeaderModelPropertiesPtrOutput() SingleHeaderModelPropertiesPtrOutput {
	return i.ToSingleHeaderModelPropertiesPtrOutputWithContext(context.Background())
}

func (i *singleHeaderModelPropertiesPtrType) ToSingleHeaderModelPropertiesPtrOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleHeaderModelPropertiesPtrOutput)
}

// Definition of SingleHeaderModelProperties
type SingleHeaderModelPropertiesOutput struct{ *pulumi.OutputState }

func (SingleHeaderModelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleHeaderModelProperties)(nil)).Elem()
}

func (o SingleHeaderModelPropertiesOutput) ToSingleHeaderModelPropertiesOutput() SingleHeaderModelPropertiesOutput {
	return o
}

func (o SingleHeaderModelPropertiesOutput) ToSingleHeaderModelPropertiesOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesOutput {
	return o
}

func (o SingleHeaderModelPropertiesOutput) ToSingleHeaderModelPropertiesPtrOutput() SingleHeaderModelPropertiesPtrOutput {
	return o.ToSingleHeaderModelPropertiesPtrOutputWithContext(context.Background())
}

func (o SingleHeaderModelPropertiesOutput) ToSingleHeaderModelPropertiesPtrOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SingleHeaderModelProperties) *SingleHeaderModelProperties {
		return &v
	}).(SingleHeaderModelPropertiesPtrOutput)
}

// The name of the query header to inspect.
func (o SingleHeaderModelPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleHeaderModelProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SingleHeaderModelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SingleHeaderModelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleHeaderModelProperties)(nil)).Elem()
}

func (o SingleHeaderModelPropertiesPtrOutput) ToSingleHeaderModelPropertiesPtrOutput() SingleHeaderModelPropertiesPtrOutput {
	return o
}

func (o SingleHeaderModelPropertiesPtrOutput) ToSingleHeaderModelPropertiesPtrOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesPtrOutput {
	return o
}

func (o SingleHeaderModelPropertiesPtrOutput) Elem() SingleHeaderModelPropertiesOutput {
	return o.ApplyT(func(v *SingleHeaderModelProperties) SingleHeaderModelProperties {
		if v != nil {
			return *v
		}
		var ret SingleHeaderModelProperties
		return ret
	}).(SingleHeaderModelPropertiesOutput)
}

// The name of the query header to inspect.
func (o SingleHeaderModelPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleHeaderModelProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Definition of SingleHeaderModelProperties
type SingleHeaderModelPropertiesResponse struct {
	// The name of the query header to inspect.
	Name *string `pulumi:"name"`
}

// Definition of SingleHeaderModelProperties
type SingleHeaderModelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SingleHeaderModelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleHeaderModelPropertiesResponse)(nil)).Elem()
}

func (o SingleHeaderModelPropertiesResponseOutput) ToSingleHeaderModelPropertiesResponseOutput() SingleHeaderModelPropertiesResponseOutput {
	return o
}

func (o SingleHeaderModelPropertiesResponseOutput) ToSingleHeaderModelPropertiesResponseOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesResponseOutput {
	return o
}

// The name of the query header to inspect.
func (o SingleHeaderModelPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleHeaderModelPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SingleHeaderModelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SingleHeaderModelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleHeaderModelPropertiesResponse)(nil)).Elem()
}

func (o SingleHeaderModelPropertiesResponsePtrOutput) ToSingleHeaderModelPropertiesResponsePtrOutput() SingleHeaderModelPropertiesResponsePtrOutput {
	return o
}

func (o SingleHeaderModelPropertiesResponsePtrOutput) ToSingleHeaderModelPropertiesResponsePtrOutputWithContext(ctx context.Context) SingleHeaderModelPropertiesResponsePtrOutput {
	return o
}

func (o SingleHeaderModelPropertiesResponsePtrOutput) Elem() SingleHeaderModelPropertiesResponseOutput {
	return o.ApplyT(func(v *SingleHeaderModelPropertiesResponse) SingleHeaderModelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SingleHeaderModelPropertiesResponse
		return ret
	}).(SingleHeaderModelPropertiesResponseOutput)
}

// The name of the query header to inspect.
func (o SingleHeaderModelPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleHeaderModelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Definition of SnapStart
type SnapStart struct {
	// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish a function version.
	ApplyOn *string `pulumi:"applyOn"`
}

// SnapStartInput is an input type that accepts SnapStartArgs and SnapStartOutput values.
// You can construct a concrete instance of `SnapStartInput` via:
//
//	SnapStartArgs{...}
type SnapStartInput interface {
	pulumi.Input

	ToSnapStartOutput() SnapStartOutput
	ToSnapStartOutputWithContext(context.Context) SnapStartOutput
}

// Definition of SnapStart
type SnapStartArgs struct {
	// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish a function version.
	ApplyOn pulumi.StringPtrInput `pulumi:"applyOn"`
}

func (SnapStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapStart)(nil)).Elem()
}

func (i SnapStartArgs) ToSnapStartOutput() SnapStartOutput {
	return i.ToSnapStartOutputWithContext(context.Background())
}

func (i SnapStartArgs) ToSnapStartOutputWithContext(ctx context.Context) SnapStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapStartOutput)
}

func (i SnapStartArgs) ToSnapStartPtrOutput() SnapStartPtrOutput {
	return i.ToSnapStartPtrOutputWithContext(context.Background())
}

func (i SnapStartArgs) ToSnapStartPtrOutputWithContext(ctx context.Context) SnapStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapStartOutput).ToSnapStartPtrOutputWithContext(ctx)
}

// SnapStartPtrInput is an input type that accepts SnapStartArgs, SnapStartPtr and SnapStartPtrOutput values.
// You can construct a concrete instance of `SnapStartPtrInput` via:
//
//	        SnapStartArgs{...}
//
//	or:
//
//	        nil
type SnapStartPtrInput interface {
	pulumi.Input

	ToSnapStartPtrOutput() SnapStartPtrOutput
	ToSnapStartPtrOutputWithContext(context.Context) SnapStartPtrOutput
}

type snapStartPtrType SnapStartArgs

func SnapStartPtr(v *SnapStartArgs) SnapStartPtrInput {
	return (*snapStartPtrType)(v)
}

func (*snapStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapStart)(nil)).Elem()
}

func (i *snapStartPtrType) ToSnapStartPtrOutput() SnapStartPtrOutput {
	return i.ToSnapStartPtrOutputWithContext(context.Background())
}

func (i *snapStartPtrType) ToSnapStartPtrOutputWithContext(ctx context.Context) SnapStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapStartPtrOutput)
}

// Definition of SnapStart
type SnapStartOutput struct{ *pulumi.OutputState }

func (SnapStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapStart)(nil)).Elem()
}

func (o SnapStartOutput) ToSnapStartOutput() SnapStartOutput {
	return o
}

func (o SnapStartOutput) ToSnapStartOutputWithContext(ctx context.Context) SnapStartOutput {
	return o
}

func (o SnapStartOutput) ToSnapStartPtrOutput() SnapStartPtrOutput {
	return o.ToSnapStartPtrOutputWithContext(context.Background())
}

func (o SnapStartOutput) ToSnapStartPtrOutputWithContext(ctx context.Context) SnapStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapStart) *SnapStart {
		return &v
	}).(SnapStartPtrOutput)
}

// Set “ApplyOn“ to “PublishedVersions“ to create a snapshot of the initialized execution environment when you publish a function version.
func (o SnapStartOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapStart) *string { return v.ApplyOn }).(pulumi.StringPtrOutput)
}

type SnapStartPtrOutput struct{ *pulumi.OutputState }

func (SnapStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapStart)(nil)).Elem()
}

func (o SnapStartPtrOutput) ToSnapStartPtrOutput() SnapStartPtrOutput {
	return o
}

func (o SnapStartPtrOutput) ToSnapStartPtrOutputWithContext(ctx context.Context) SnapStartPtrOutput {
	return o
}

func (o SnapStartPtrOutput) Elem() SnapStartOutput {
	return o.ApplyT(func(v *SnapStart) SnapStart {
		if v != nil {
			return *v
		}
		var ret SnapStart
		return ret
	}).(SnapStartOutput)
}

// Set “ApplyOn“ to “PublishedVersions“ to create a snapshot of the initialized execution environment when you publish a function version.
func (o SnapStartPtrOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapStart) *string {
		if v == nil {
			return nil
		}
		return v.ApplyOn
	}).(pulumi.StringPtrOutput)
}

// Definition of SnapStart
type SnapStartResponse struct {
	// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish a function version.
	ApplyOn *string `pulumi:"applyOn"`
}

// SnapStartResponseInput is an input type that accepts SnapStartResponseArgs and SnapStartResponseOutput values.
// You can construct a concrete instance of `SnapStartResponseInput` via:
//
//	SnapStartResponseArgs{...}
type SnapStartResponseInput interface {
	pulumi.Input

	ToSnapStartResponseOutput() SnapStartResponseOutput
	ToSnapStartResponseOutputWithContext(context.Context) SnapStartResponseOutput
}

// Definition of SnapStart
type SnapStartResponseArgs struct {
	// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish a function version.
	ApplyOn pulumi.StringPtrInput `pulumi:"applyOn"`
}

func (SnapStartResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapStartResponse)(nil)).Elem()
}

func (i SnapStartResponseArgs) ToSnapStartResponseOutput() SnapStartResponseOutput {
	return i.ToSnapStartResponseOutputWithContext(context.Background())
}

func (i SnapStartResponseArgs) ToSnapStartResponseOutputWithContext(ctx context.Context) SnapStartResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapStartResponseOutput)
}

func (i SnapStartResponseArgs) ToSnapStartResponsePtrOutput() SnapStartResponsePtrOutput {
	return i.ToSnapStartResponsePtrOutputWithContext(context.Background())
}

func (i SnapStartResponseArgs) ToSnapStartResponsePtrOutputWithContext(ctx context.Context) SnapStartResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapStartResponseOutput).ToSnapStartResponsePtrOutputWithContext(ctx)
}

// SnapStartResponsePtrInput is an input type that accepts SnapStartResponseArgs, SnapStartResponsePtr and SnapStartResponsePtrOutput values.
// You can construct a concrete instance of `SnapStartResponsePtrInput` via:
//
//	        SnapStartResponseArgs{...}
//
//	or:
//
//	        nil
type SnapStartResponsePtrInput interface {
	pulumi.Input

	ToSnapStartResponsePtrOutput() SnapStartResponsePtrOutput
	ToSnapStartResponsePtrOutputWithContext(context.Context) SnapStartResponsePtrOutput
}

type snapStartResponsePtrType SnapStartResponseArgs

func SnapStartResponsePtr(v *SnapStartResponseArgs) SnapStartResponsePtrInput {
	return (*snapStartResponsePtrType)(v)
}

func (*snapStartResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapStartResponse)(nil)).Elem()
}

func (i *snapStartResponsePtrType) ToSnapStartResponsePtrOutput() SnapStartResponsePtrOutput {
	return i.ToSnapStartResponsePtrOutputWithContext(context.Background())
}

func (i *snapStartResponsePtrType) ToSnapStartResponsePtrOutputWithContext(ctx context.Context) SnapStartResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapStartResponsePtrOutput)
}

// Definition of SnapStart
type SnapStartResponseOutput struct{ *pulumi.OutputState }

func (SnapStartResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapStartResponse)(nil)).Elem()
}

func (o SnapStartResponseOutput) ToSnapStartResponseOutput() SnapStartResponseOutput {
	return o
}

func (o SnapStartResponseOutput) ToSnapStartResponseOutputWithContext(ctx context.Context) SnapStartResponseOutput {
	return o
}

func (o SnapStartResponseOutput) ToSnapStartResponsePtrOutput() SnapStartResponsePtrOutput {
	return o.ToSnapStartResponsePtrOutputWithContext(context.Background())
}

func (o SnapStartResponseOutput) ToSnapStartResponsePtrOutputWithContext(ctx context.Context) SnapStartResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapStartResponse) *SnapStartResponse {
		return &v
	}).(SnapStartResponsePtrOutput)
}

// Set “ApplyOn“ to “PublishedVersions“ to create a snapshot of the initialized execution environment when you publish a function version.
func (o SnapStartResponseOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapStartResponse) *string { return v.ApplyOn }).(pulumi.StringPtrOutput)
}

type SnapStartResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapStartResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapStartResponse)(nil)).Elem()
}

func (o SnapStartResponsePtrOutput) ToSnapStartResponsePtrOutput() SnapStartResponsePtrOutput {
	return o
}

func (o SnapStartResponsePtrOutput) ToSnapStartResponsePtrOutputWithContext(ctx context.Context) SnapStartResponsePtrOutput {
	return o
}

func (o SnapStartResponsePtrOutput) Elem() SnapStartResponseOutput {
	return o.ApplyT(func(v *SnapStartResponse) SnapStartResponse {
		if v != nil {
			return *v
		}
		var ret SnapStartResponse
		return ret
	}).(SnapStartResponseOutput)
}

// Set “ApplyOn“ to “PublishedVersions“ to create a snapshot of the initialized execution environment when you publish a function version.
func (o SnapStartResponsePtrOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapStartResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplyOn
	}).(pulumi.StringPtrOutput)
}

// Definition of SnapStartResponse
type SnapStartResponseResponse struct {
	// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function version.
	ApplyOn *string `pulumi:"applyOn"`
	// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using), this response element indicates whether SnapStart is activated for the specified function version.
	OptimizationStatus *string `pulumi:"optimizationStatus"`
}

// Definition of SnapStartResponse
type SnapStartResponseResponseOutput struct{ *pulumi.OutputState }

func (SnapStartResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapStartResponseResponse)(nil)).Elem()
}

func (o SnapStartResponseResponseOutput) ToSnapStartResponseResponseOutput() SnapStartResponseResponseOutput {
	return o
}

func (o SnapStartResponseResponseOutput) ToSnapStartResponseResponseOutputWithContext(ctx context.Context) SnapStartResponseResponseOutput {
	return o
}

// When set to “PublishedVersions“, Lambda creates a snapshot of the execution environment when you publish a function version.
func (o SnapStartResponseResponseOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapStartResponseResponse) *string { return v.ApplyOn }).(pulumi.StringPtrOutput)
}

// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using), this response element indicates whether SnapStart is activated for the specified function version.
func (o SnapStartResponseResponseOutput) OptimizationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapStartResponseResponse) *string { return v.OptimizationStatus }).(pulumi.StringPtrOutput)
}

type SnapStartResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapStartResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapStartResponseResponse)(nil)).Elem()
}

func (o SnapStartResponseResponsePtrOutput) ToSnapStartResponseResponsePtrOutput() SnapStartResponseResponsePtrOutput {
	return o
}

func (o SnapStartResponseResponsePtrOutput) ToSnapStartResponseResponsePtrOutputWithContext(ctx context.Context) SnapStartResponseResponsePtrOutput {
	return o
}

func (o SnapStartResponseResponsePtrOutput) Elem() SnapStartResponseResponseOutput {
	return o.ApplyT(func(v *SnapStartResponseResponse) SnapStartResponseResponse {
		if v != nil {
			return *v
		}
		var ret SnapStartResponseResponse
		return ret
	}).(SnapStartResponseResponseOutput)
}

// When set to “PublishedVersions“, Lambda creates a snapshot of the execution environment when you publish a function version.
func (o SnapStartResponseResponsePtrOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapStartResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplyOn
	}).(pulumi.StringPtrOutput)
}

// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using), this response element indicates whether SnapStart is activated for the specified function version.
func (o SnapStartResponseResponsePtrOutput) OptimizationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapStartResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationStatus
	}).(pulumi.StringPtrOutput)
}

// Definition of SnapshotOptions
type SnapshotOptions struct {
	// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
	AutomatedSnapshotStartHour *int `pulumi:"automatedSnapshotStartHour"`
}

// SnapshotOptionsInput is an input type that accepts SnapshotOptionsArgs and SnapshotOptionsOutput values.
// You can construct a concrete instance of `SnapshotOptionsInput` via:
//
//	SnapshotOptionsArgs{...}
type SnapshotOptionsInput interface {
	pulumi.Input

	ToSnapshotOptionsOutput() SnapshotOptionsOutput
	ToSnapshotOptionsOutputWithContext(context.Context) SnapshotOptionsOutput
}

// Definition of SnapshotOptions
type SnapshotOptionsArgs struct {
	// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
	AutomatedSnapshotStartHour pulumi.IntPtrInput `pulumi:"automatedSnapshotStartHour"`
}

func (SnapshotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotOptions)(nil)).Elem()
}

func (i SnapshotOptionsArgs) ToSnapshotOptionsOutput() SnapshotOptionsOutput {
	return i.ToSnapshotOptionsOutputWithContext(context.Background())
}

func (i SnapshotOptionsArgs) ToSnapshotOptionsOutputWithContext(ctx context.Context) SnapshotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotOptionsOutput)
}

func (i SnapshotOptionsArgs) ToSnapshotOptionsPtrOutput() SnapshotOptionsPtrOutput {
	return i.ToSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i SnapshotOptionsArgs) ToSnapshotOptionsPtrOutputWithContext(ctx context.Context) SnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotOptionsOutput).ToSnapshotOptionsPtrOutputWithContext(ctx)
}

// SnapshotOptionsPtrInput is an input type that accepts SnapshotOptionsArgs, SnapshotOptionsPtr and SnapshotOptionsPtrOutput values.
// You can construct a concrete instance of `SnapshotOptionsPtrInput` via:
//
//	        SnapshotOptionsArgs{...}
//
//	or:
//
//	        nil
type SnapshotOptionsPtrInput interface {
	pulumi.Input

	ToSnapshotOptionsPtrOutput() SnapshotOptionsPtrOutput
	ToSnapshotOptionsPtrOutputWithContext(context.Context) SnapshotOptionsPtrOutput
}

type snapshotOptionsPtrType SnapshotOptionsArgs

func SnapshotOptionsPtr(v *SnapshotOptionsArgs) SnapshotOptionsPtrInput {
	return (*snapshotOptionsPtrType)(v)
}

func (*snapshotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotOptions)(nil)).Elem()
}

func (i *snapshotOptionsPtrType) ToSnapshotOptionsPtrOutput() SnapshotOptionsPtrOutput {
	return i.ToSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i *snapshotOptionsPtrType) ToSnapshotOptionsPtrOutputWithContext(ctx context.Context) SnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotOptionsPtrOutput)
}

// Definition of SnapshotOptions
type SnapshotOptionsOutput struct{ *pulumi.OutputState }

func (SnapshotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotOptions)(nil)).Elem()
}

func (o SnapshotOptionsOutput) ToSnapshotOptionsOutput() SnapshotOptionsOutput {
	return o
}

func (o SnapshotOptionsOutput) ToSnapshotOptionsOutputWithContext(ctx context.Context) SnapshotOptionsOutput {
	return o
}

func (o SnapshotOptionsOutput) ToSnapshotOptionsPtrOutput() SnapshotOptionsPtrOutput {
	return o.ToSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (o SnapshotOptionsOutput) ToSnapshotOptionsPtrOutputWithContext(ctx context.Context) SnapshotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotOptions) *SnapshotOptions {
		return &v
	}).(SnapshotOptionsPtrOutput)
}

// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
func (o SnapshotOptionsOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnapshotOptions) *int { return v.AutomatedSnapshotStartHour }).(pulumi.IntPtrOutput)
}

type SnapshotOptionsPtrOutput struct{ *pulumi.OutputState }

func (SnapshotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotOptions)(nil)).Elem()
}

func (o SnapshotOptionsPtrOutput) ToSnapshotOptionsPtrOutput() SnapshotOptionsPtrOutput {
	return o
}

func (o SnapshotOptionsPtrOutput) ToSnapshotOptionsPtrOutputWithContext(ctx context.Context) SnapshotOptionsPtrOutput {
	return o
}

func (o SnapshotOptionsPtrOutput) Elem() SnapshotOptionsOutput {
	return o.ApplyT(func(v *SnapshotOptions) SnapshotOptions {
		if v != nil {
			return *v
		}
		var ret SnapshotOptions
		return ret
	}).(SnapshotOptionsOutput)
}

// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
func (o SnapshotOptionsPtrOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SnapshotOptions) *int {
		if v == nil {
			return nil
		}
		return v.AutomatedSnapshotStartHour
	}).(pulumi.IntPtrOutput)
}

// Definition of SnapshotOptions
type SnapshotOptionsResponse struct {
	// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
	AutomatedSnapshotStartHour *int `pulumi:"automatedSnapshotStartHour"`
}

// Definition of SnapshotOptions
type SnapshotOptionsResponseOutput struct{ *pulumi.OutputState }

func (SnapshotOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotOptionsResponse)(nil)).Elem()
}

func (o SnapshotOptionsResponseOutput) ToSnapshotOptionsResponseOutput() SnapshotOptionsResponseOutput {
	return o
}

func (o SnapshotOptionsResponseOutput) ToSnapshotOptionsResponseOutputWithContext(ctx context.Context) SnapshotOptionsResponseOutput {
	return o
}

// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
func (o SnapshotOptionsResponseOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnapshotOptionsResponse) *int { return v.AutomatedSnapshotStartHour }).(pulumi.IntPtrOutput)
}

type SnapshotOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapshotOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotOptionsResponse)(nil)).Elem()
}

func (o SnapshotOptionsResponsePtrOutput) ToSnapshotOptionsResponsePtrOutput() SnapshotOptionsResponsePtrOutput {
	return o
}

func (o SnapshotOptionsResponsePtrOutput) ToSnapshotOptionsResponsePtrOutputWithContext(ctx context.Context) SnapshotOptionsResponsePtrOutput {
	return o
}

func (o SnapshotOptionsResponsePtrOutput) Elem() SnapshotOptionsResponseOutput {
	return o.ApplyT(func(v *SnapshotOptionsResponse) SnapshotOptionsResponse {
		if v != nil {
			return *v
		}
		var ret SnapshotOptionsResponse
		return ret
	}).(SnapshotOptionsResponseOutput)
}

// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>
func (o SnapshotOptionsResponsePtrOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SnapshotOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AutomatedSnapshotStartHour
	}).(pulumi.IntPtrOutput)
}

// Definition of SnapshotStateEnumValue
type SnapshotStateEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SnapshotStateEnumValueInput is an input type that accepts SnapshotStateEnumValueArgs and SnapshotStateEnumValueOutput values.
// You can construct a concrete instance of `SnapshotStateEnumValueInput` via:
//
//	SnapshotStateEnumValueArgs{...}
type SnapshotStateEnumValueInput interface {
	pulumi.Input

	ToSnapshotStateEnumValueOutput() SnapshotStateEnumValueOutput
	ToSnapshotStateEnumValueOutputWithContext(context.Context) SnapshotStateEnumValueOutput
}

// Definition of SnapshotStateEnumValue
type SnapshotStateEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SnapshotStateEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStateEnumValue)(nil)).Elem()
}

func (i SnapshotStateEnumValueArgs) ToSnapshotStateEnumValueOutput() SnapshotStateEnumValueOutput {
	return i.ToSnapshotStateEnumValueOutputWithContext(context.Background())
}

func (i SnapshotStateEnumValueArgs) ToSnapshotStateEnumValueOutputWithContext(ctx context.Context) SnapshotStateEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotStateEnumValueOutput)
}

func (i SnapshotStateEnumValueArgs) ToSnapshotStateEnumValuePtrOutput() SnapshotStateEnumValuePtrOutput {
	return i.ToSnapshotStateEnumValuePtrOutputWithContext(context.Background())
}

func (i SnapshotStateEnumValueArgs) ToSnapshotStateEnumValuePtrOutputWithContext(ctx context.Context) SnapshotStateEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotStateEnumValueOutput).ToSnapshotStateEnumValuePtrOutputWithContext(ctx)
}

// SnapshotStateEnumValuePtrInput is an input type that accepts SnapshotStateEnumValueArgs, SnapshotStateEnumValuePtr and SnapshotStateEnumValuePtrOutput values.
// You can construct a concrete instance of `SnapshotStateEnumValuePtrInput` via:
//
//	        SnapshotStateEnumValueArgs{...}
//
//	or:
//
//	        nil
type SnapshotStateEnumValuePtrInput interface {
	pulumi.Input

	ToSnapshotStateEnumValuePtrOutput() SnapshotStateEnumValuePtrOutput
	ToSnapshotStateEnumValuePtrOutputWithContext(context.Context) SnapshotStateEnumValuePtrOutput
}

type snapshotStateEnumValuePtrType SnapshotStateEnumValueArgs

func SnapshotStateEnumValuePtr(v *SnapshotStateEnumValueArgs) SnapshotStateEnumValuePtrInput {
	return (*snapshotStateEnumValuePtrType)(v)
}

func (*snapshotStateEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotStateEnumValue)(nil)).Elem()
}

func (i *snapshotStateEnumValuePtrType) ToSnapshotStateEnumValuePtrOutput() SnapshotStateEnumValuePtrOutput {
	return i.ToSnapshotStateEnumValuePtrOutputWithContext(context.Background())
}

func (i *snapshotStateEnumValuePtrType) ToSnapshotStateEnumValuePtrOutputWithContext(ctx context.Context) SnapshotStateEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotStateEnumValuePtrOutput)
}

// Definition of SnapshotStateEnumValue
type SnapshotStateEnumValueOutput struct{ *pulumi.OutputState }

func (SnapshotStateEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStateEnumValue)(nil)).Elem()
}

func (o SnapshotStateEnumValueOutput) ToSnapshotStateEnumValueOutput() SnapshotStateEnumValueOutput {
	return o
}

func (o SnapshotStateEnumValueOutput) ToSnapshotStateEnumValueOutputWithContext(ctx context.Context) SnapshotStateEnumValueOutput {
	return o
}

func (o SnapshotStateEnumValueOutput) ToSnapshotStateEnumValuePtrOutput() SnapshotStateEnumValuePtrOutput {
	return o.ToSnapshotStateEnumValuePtrOutputWithContext(context.Background())
}

func (o SnapshotStateEnumValueOutput) ToSnapshotStateEnumValuePtrOutputWithContext(ctx context.Context) SnapshotStateEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotStateEnumValue) *SnapshotStateEnumValue {
		return &v
	}).(SnapshotStateEnumValuePtrOutput)
}

// Property value
func (o SnapshotStateEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotStateEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SnapshotStateEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SnapshotStateEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotStateEnumValue)(nil)).Elem()
}

func (o SnapshotStateEnumValuePtrOutput) ToSnapshotStateEnumValuePtrOutput() SnapshotStateEnumValuePtrOutput {
	return o
}

func (o SnapshotStateEnumValuePtrOutput) ToSnapshotStateEnumValuePtrOutputWithContext(ctx context.Context) SnapshotStateEnumValuePtrOutput {
	return o
}

func (o SnapshotStateEnumValuePtrOutput) Elem() SnapshotStateEnumValueOutput {
	return o.ApplyT(func(v *SnapshotStateEnumValue) SnapshotStateEnumValue {
		if v != nil {
			return *v
		}
		var ret SnapshotStateEnumValue
		return ret
	}).(SnapshotStateEnumValueOutput)
}

// Property value
func (o SnapshotStateEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotStateEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SnapshotStateEnumValue
type SnapshotStateEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SnapshotStateEnumValue
type SnapshotStateEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SnapshotStateEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStateEnumValueResponse)(nil)).Elem()
}

func (o SnapshotStateEnumValueResponseOutput) ToSnapshotStateEnumValueResponseOutput() SnapshotStateEnumValueResponseOutput {
	return o
}

func (o SnapshotStateEnumValueResponseOutput) ToSnapshotStateEnumValueResponseOutputWithContext(ctx context.Context) SnapshotStateEnumValueResponseOutput {
	return o
}

// Property value
func (o SnapshotStateEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotStateEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SnapshotStateEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapshotStateEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotStateEnumValueResponse)(nil)).Elem()
}

func (o SnapshotStateEnumValueResponsePtrOutput) ToSnapshotStateEnumValueResponsePtrOutput() SnapshotStateEnumValueResponsePtrOutput {
	return o
}

func (o SnapshotStateEnumValueResponsePtrOutput) ToSnapshotStateEnumValueResponsePtrOutputWithContext(ctx context.Context) SnapshotStateEnumValueResponsePtrOutput {
	return o
}

func (o SnapshotStateEnumValueResponsePtrOutput) Elem() SnapshotStateEnumValueResponseOutput {
	return o.ApplyT(func(v *SnapshotStateEnumValueResponse) SnapshotStateEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SnapshotStateEnumValueResponse
		return ret
	}).(SnapshotStateEnumValueResponseOutput)
}

// Property value
func (o SnapshotStateEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotStateEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SnsSubscription
type SnsSubscriptionProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSnsSubscriptionProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SnsSubscriptionPropertiesInput is an input type that accepts SnsSubscriptionPropertiesArgs and SnsSubscriptionPropertiesOutput values.
// You can construct a concrete instance of `SnsSubscriptionPropertiesInput` via:
//
//	SnsSubscriptionPropertiesArgs{...}
type SnsSubscriptionPropertiesInput interface {
	pulumi.Input

	ToSnsSubscriptionPropertiesOutput() SnsSubscriptionPropertiesOutput
	ToSnsSubscriptionPropertiesOutputWithContext(context.Context) SnsSubscriptionPropertiesOutput
}

// Definition of SnsSubscription
type SnsSubscriptionPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSnsSubscriptionPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SnsSubscriptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsSubscriptionProperties)(nil)).Elem()
}

func (i SnsSubscriptionPropertiesArgs) ToSnsSubscriptionPropertiesOutput() SnsSubscriptionPropertiesOutput {
	return i.ToSnsSubscriptionPropertiesOutputWithContext(context.Background())
}

func (i SnsSubscriptionPropertiesArgs) ToSnsSubscriptionPropertiesOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsSubscriptionPropertiesOutput)
}

func (i SnsSubscriptionPropertiesArgs) ToSnsSubscriptionPropertiesPtrOutput() SnsSubscriptionPropertiesPtrOutput {
	return i.ToSnsSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (i SnsSubscriptionPropertiesArgs) ToSnsSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsSubscriptionPropertiesOutput).ToSnsSubscriptionPropertiesPtrOutputWithContext(ctx)
}

// SnsSubscriptionPropertiesPtrInput is an input type that accepts SnsSubscriptionPropertiesArgs, SnsSubscriptionPropertiesPtr and SnsSubscriptionPropertiesPtrOutput values.
// You can construct a concrete instance of `SnsSubscriptionPropertiesPtrInput` via:
//
//	        SnsSubscriptionPropertiesArgs{...}
//
//	or:
//
//	        nil
type SnsSubscriptionPropertiesPtrInput interface {
	pulumi.Input

	ToSnsSubscriptionPropertiesPtrOutput() SnsSubscriptionPropertiesPtrOutput
	ToSnsSubscriptionPropertiesPtrOutputWithContext(context.Context) SnsSubscriptionPropertiesPtrOutput
}

type snsSubscriptionPropertiesPtrType SnsSubscriptionPropertiesArgs

func SnsSubscriptionPropertiesPtr(v *SnsSubscriptionPropertiesArgs) SnsSubscriptionPropertiesPtrInput {
	return (*snsSubscriptionPropertiesPtrType)(v)
}

func (*snsSubscriptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnsSubscriptionProperties)(nil)).Elem()
}

func (i *snsSubscriptionPropertiesPtrType) ToSnsSubscriptionPropertiesPtrOutput() SnsSubscriptionPropertiesPtrOutput {
	return i.ToSnsSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *snsSubscriptionPropertiesPtrType) ToSnsSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsSubscriptionPropertiesPtrOutput)
}

// Definition of SnsSubscription
type SnsSubscriptionPropertiesOutput struct{ *pulumi.OutputState }

func (SnsSubscriptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsSubscriptionProperties)(nil)).Elem()
}

func (o SnsSubscriptionPropertiesOutput) ToSnsSubscriptionPropertiesOutput() SnsSubscriptionPropertiesOutput {
	return o
}

func (o SnsSubscriptionPropertiesOutput) ToSnsSubscriptionPropertiesOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesOutput {
	return o
}

func (o SnsSubscriptionPropertiesOutput) ToSnsSubscriptionPropertiesPtrOutput() SnsSubscriptionPropertiesPtrOutput {
	return o.ToSnsSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (o SnsSubscriptionPropertiesOutput) ToSnsSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnsSubscriptionProperties) *SnsSubscriptionProperties {
		return &v
	}).(SnsSubscriptionPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SnsSubscriptionPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SnsSubscriptionPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SnsSubscriptionPropertiesOutput) AwsProperties() AwsSnsSubscriptionPropertiesPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *AwsSnsSubscriptionProperties { return v.AwsProperties }).(AwsSnsSubscriptionPropertiesPtrOutput)
}

// AWS Region
func (o SnsSubscriptionPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SnsSubscriptionPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SnsSubscriptionPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SnsSubscriptionPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SnsSubscriptionPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SnsSubscriptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SnsSubscriptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnsSubscriptionProperties)(nil)).Elem()
}

func (o SnsSubscriptionPropertiesPtrOutput) ToSnsSubscriptionPropertiesPtrOutput() SnsSubscriptionPropertiesPtrOutput {
	return o
}

func (o SnsSubscriptionPropertiesPtrOutput) ToSnsSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesPtrOutput {
	return o
}

func (o SnsSubscriptionPropertiesPtrOutput) Elem() SnsSubscriptionPropertiesOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) SnsSubscriptionProperties {
		if v != nil {
			return *v
		}
		var ret SnsSubscriptionProperties
		return ret
	}).(SnsSubscriptionPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SnsSubscriptionPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SnsSubscriptionPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SnsSubscriptionPropertiesPtrOutput) AwsProperties() AwsSnsSubscriptionPropertiesPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *AwsSnsSubscriptionProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSnsSubscriptionPropertiesPtrOutput)
}

// AWS Region
func (o SnsSubscriptionPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SnsSubscriptionPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SnsSubscriptionPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SnsSubscriptionPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SnsSubscriptionPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SnsSubscription
type SnsSubscriptionPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSnsSubscriptionPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SnsSubscription
type SnsSubscriptionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SnsSubscriptionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsSubscriptionPropertiesResponse)(nil)).Elem()
}

func (o SnsSubscriptionPropertiesResponseOutput) ToSnsSubscriptionPropertiesResponseOutput() SnsSubscriptionPropertiesResponseOutput {
	return o
}

func (o SnsSubscriptionPropertiesResponseOutput) ToSnsSubscriptionPropertiesResponseOutputWithContext(ctx context.Context) SnsSubscriptionPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SnsSubscriptionPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SnsSubscriptionPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SnsSubscriptionPropertiesResponseOutput) AwsProperties() AwsSnsSubscriptionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *AwsSnsSubscriptionPropertiesResponse {
		return v.AwsProperties
	}).(AwsSnsSubscriptionPropertiesResponsePtrOutput)
}

// AWS Region
func (o SnsSubscriptionPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SnsSubscriptionPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SnsSubscriptionPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SnsSubscriptionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SnsSubscriptionPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SnsSubscriptionPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsSubscriptionPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SnsTopic
type SnsTopicProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSnsTopicProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SnsTopicPropertiesInput is an input type that accepts SnsTopicPropertiesArgs and SnsTopicPropertiesOutput values.
// You can construct a concrete instance of `SnsTopicPropertiesInput` via:
//
//	SnsTopicPropertiesArgs{...}
type SnsTopicPropertiesInput interface {
	pulumi.Input

	ToSnsTopicPropertiesOutput() SnsTopicPropertiesOutput
	ToSnsTopicPropertiesOutputWithContext(context.Context) SnsTopicPropertiesOutput
}

// Definition of SnsTopic
type SnsTopicPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSnsTopicPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SnsTopicPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsTopicProperties)(nil)).Elem()
}

func (i SnsTopicPropertiesArgs) ToSnsTopicPropertiesOutput() SnsTopicPropertiesOutput {
	return i.ToSnsTopicPropertiesOutputWithContext(context.Background())
}

func (i SnsTopicPropertiesArgs) ToSnsTopicPropertiesOutputWithContext(ctx context.Context) SnsTopicPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsTopicPropertiesOutput)
}

func (i SnsTopicPropertiesArgs) ToSnsTopicPropertiesPtrOutput() SnsTopicPropertiesPtrOutput {
	return i.ToSnsTopicPropertiesPtrOutputWithContext(context.Background())
}

func (i SnsTopicPropertiesArgs) ToSnsTopicPropertiesPtrOutputWithContext(ctx context.Context) SnsTopicPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsTopicPropertiesOutput).ToSnsTopicPropertiesPtrOutputWithContext(ctx)
}

// SnsTopicPropertiesPtrInput is an input type that accepts SnsTopicPropertiesArgs, SnsTopicPropertiesPtr and SnsTopicPropertiesPtrOutput values.
// You can construct a concrete instance of `SnsTopicPropertiesPtrInput` via:
//
//	        SnsTopicPropertiesArgs{...}
//
//	or:
//
//	        nil
type SnsTopicPropertiesPtrInput interface {
	pulumi.Input

	ToSnsTopicPropertiesPtrOutput() SnsTopicPropertiesPtrOutput
	ToSnsTopicPropertiesPtrOutputWithContext(context.Context) SnsTopicPropertiesPtrOutput
}

type snsTopicPropertiesPtrType SnsTopicPropertiesArgs

func SnsTopicPropertiesPtr(v *SnsTopicPropertiesArgs) SnsTopicPropertiesPtrInput {
	return (*snsTopicPropertiesPtrType)(v)
}

func (*snsTopicPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnsTopicProperties)(nil)).Elem()
}

func (i *snsTopicPropertiesPtrType) ToSnsTopicPropertiesPtrOutput() SnsTopicPropertiesPtrOutput {
	return i.ToSnsTopicPropertiesPtrOutputWithContext(context.Background())
}

func (i *snsTopicPropertiesPtrType) ToSnsTopicPropertiesPtrOutputWithContext(ctx context.Context) SnsTopicPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsTopicPropertiesPtrOutput)
}

// Definition of SnsTopic
type SnsTopicPropertiesOutput struct{ *pulumi.OutputState }

func (SnsTopicPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsTopicProperties)(nil)).Elem()
}

func (o SnsTopicPropertiesOutput) ToSnsTopicPropertiesOutput() SnsTopicPropertiesOutput {
	return o
}

func (o SnsTopicPropertiesOutput) ToSnsTopicPropertiesOutputWithContext(ctx context.Context) SnsTopicPropertiesOutput {
	return o
}

func (o SnsTopicPropertiesOutput) ToSnsTopicPropertiesPtrOutput() SnsTopicPropertiesPtrOutput {
	return o.ToSnsTopicPropertiesPtrOutputWithContext(context.Background())
}

func (o SnsTopicPropertiesOutput) ToSnsTopicPropertiesPtrOutputWithContext(ctx context.Context) SnsTopicPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnsTopicProperties) *SnsTopicProperties {
		return &v
	}).(SnsTopicPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SnsTopicPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SnsTopicPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SnsTopicPropertiesOutput) AwsProperties() AwsSnsTopicPropertiesPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *AwsSnsTopicProperties { return v.AwsProperties }).(AwsSnsTopicPropertiesPtrOutput)
}

// AWS Region
func (o SnsTopicPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SnsTopicPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SnsTopicPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SnsTopicProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SnsTopicPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SnsTopicPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SnsTopicPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SnsTopicPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnsTopicProperties)(nil)).Elem()
}

func (o SnsTopicPropertiesPtrOutput) ToSnsTopicPropertiesPtrOutput() SnsTopicPropertiesPtrOutput {
	return o
}

func (o SnsTopicPropertiesPtrOutput) ToSnsTopicPropertiesPtrOutputWithContext(ctx context.Context) SnsTopicPropertiesPtrOutput {
	return o
}

func (o SnsTopicPropertiesPtrOutput) Elem() SnsTopicPropertiesOutput {
	return o.ApplyT(func(v *SnsTopicProperties) SnsTopicProperties {
		if v != nil {
			return *v
		}
		var ret SnsTopicProperties
		return ret
	}).(SnsTopicPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SnsTopicPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SnsTopicPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SnsTopicPropertiesPtrOutput) AwsProperties() AwsSnsTopicPropertiesPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *AwsSnsTopicProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSnsTopicPropertiesPtrOutput)
}

// AWS Region
func (o SnsTopicPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SnsTopicPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SnsTopicPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SnsTopicProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SnsTopicPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SnsTopicPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnsTopicProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SnsTopic
type SnsTopicPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSnsTopicPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SnsTopic
type SnsTopicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SnsTopicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsTopicPropertiesResponse)(nil)).Elem()
}

func (o SnsTopicPropertiesResponseOutput) ToSnsTopicPropertiesResponseOutput() SnsTopicPropertiesResponseOutput {
	return o
}

func (o SnsTopicPropertiesResponseOutput) ToSnsTopicPropertiesResponseOutputWithContext(ctx context.Context) SnsTopicPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SnsTopicPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SnsTopicPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SnsTopicPropertiesResponseOutput) AwsProperties() AwsSnsTopicPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *AwsSnsTopicPropertiesResponse { return v.AwsProperties }).(AwsSnsTopicPropertiesResponsePtrOutput)
}

// AWS Region
func (o SnsTopicPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SnsTopicPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SnsTopicPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SnsTopicPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SnsTopicPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SnsTopicPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnsTopicPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SoftwareUpdateOptions
type SoftwareUpdateOptions struct {
	// <p>Whether automatic service software updates are enabled for the domain.</p>
	AutoSoftwareUpdateEnabled *bool `pulumi:"autoSoftwareUpdateEnabled"`
}

// SoftwareUpdateOptionsInput is an input type that accepts SoftwareUpdateOptionsArgs and SoftwareUpdateOptionsOutput values.
// You can construct a concrete instance of `SoftwareUpdateOptionsInput` via:
//
//	SoftwareUpdateOptionsArgs{...}
type SoftwareUpdateOptionsInput interface {
	pulumi.Input

	ToSoftwareUpdateOptionsOutput() SoftwareUpdateOptionsOutput
	ToSoftwareUpdateOptionsOutputWithContext(context.Context) SoftwareUpdateOptionsOutput
}

// Definition of SoftwareUpdateOptions
type SoftwareUpdateOptionsArgs struct {
	// <p>Whether automatic service software updates are enabled for the domain.</p>
	AutoSoftwareUpdateEnabled pulumi.BoolPtrInput `pulumi:"autoSoftwareUpdateEnabled"`
}

func (SoftwareUpdateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareUpdateOptions)(nil)).Elem()
}

func (i SoftwareUpdateOptionsArgs) ToSoftwareUpdateOptionsOutput() SoftwareUpdateOptionsOutput {
	return i.ToSoftwareUpdateOptionsOutputWithContext(context.Background())
}

func (i SoftwareUpdateOptionsArgs) ToSoftwareUpdateOptionsOutputWithContext(ctx context.Context) SoftwareUpdateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareUpdateOptionsOutput)
}

func (i SoftwareUpdateOptionsArgs) ToSoftwareUpdateOptionsPtrOutput() SoftwareUpdateOptionsPtrOutput {
	return i.ToSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i SoftwareUpdateOptionsArgs) ToSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) SoftwareUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareUpdateOptionsOutput).ToSoftwareUpdateOptionsPtrOutputWithContext(ctx)
}

// SoftwareUpdateOptionsPtrInput is an input type that accepts SoftwareUpdateOptionsArgs, SoftwareUpdateOptionsPtr and SoftwareUpdateOptionsPtrOutput values.
// You can construct a concrete instance of `SoftwareUpdateOptionsPtrInput` via:
//
//	        SoftwareUpdateOptionsArgs{...}
//
//	or:
//
//	        nil
type SoftwareUpdateOptionsPtrInput interface {
	pulumi.Input

	ToSoftwareUpdateOptionsPtrOutput() SoftwareUpdateOptionsPtrOutput
	ToSoftwareUpdateOptionsPtrOutputWithContext(context.Context) SoftwareUpdateOptionsPtrOutput
}

type softwareUpdateOptionsPtrType SoftwareUpdateOptionsArgs

func SoftwareUpdateOptionsPtr(v *SoftwareUpdateOptionsArgs) SoftwareUpdateOptionsPtrInput {
	return (*softwareUpdateOptionsPtrType)(v)
}

func (*softwareUpdateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareUpdateOptions)(nil)).Elem()
}

func (i *softwareUpdateOptionsPtrType) ToSoftwareUpdateOptionsPtrOutput() SoftwareUpdateOptionsPtrOutput {
	return i.ToSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i *softwareUpdateOptionsPtrType) ToSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) SoftwareUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareUpdateOptionsPtrOutput)
}

// Definition of SoftwareUpdateOptions
type SoftwareUpdateOptionsOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareUpdateOptions)(nil)).Elem()
}

func (o SoftwareUpdateOptionsOutput) ToSoftwareUpdateOptionsOutput() SoftwareUpdateOptionsOutput {
	return o
}

func (o SoftwareUpdateOptionsOutput) ToSoftwareUpdateOptionsOutputWithContext(ctx context.Context) SoftwareUpdateOptionsOutput {
	return o
}

func (o SoftwareUpdateOptionsOutput) ToSoftwareUpdateOptionsPtrOutput() SoftwareUpdateOptionsPtrOutput {
	return o.ToSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (o SoftwareUpdateOptionsOutput) ToSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) SoftwareUpdateOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftwareUpdateOptions) *SoftwareUpdateOptions {
		return &v
	}).(SoftwareUpdateOptionsPtrOutput)
}

// <p>Whether automatic service software updates are enabled for the domain.</p>
func (o SoftwareUpdateOptionsOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SoftwareUpdateOptions) *bool { return v.AutoSoftwareUpdateEnabled }).(pulumi.BoolPtrOutput)
}

type SoftwareUpdateOptionsPtrOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareUpdateOptions)(nil)).Elem()
}

func (o SoftwareUpdateOptionsPtrOutput) ToSoftwareUpdateOptionsPtrOutput() SoftwareUpdateOptionsPtrOutput {
	return o
}

func (o SoftwareUpdateOptionsPtrOutput) ToSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) SoftwareUpdateOptionsPtrOutput {
	return o
}

func (o SoftwareUpdateOptionsPtrOutput) Elem() SoftwareUpdateOptionsOutput {
	return o.ApplyT(func(v *SoftwareUpdateOptions) SoftwareUpdateOptions {
		if v != nil {
			return *v
		}
		var ret SoftwareUpdateOptions
		return ret
	}).(SoftwareUpdateOptionsOutput)
}

// <p>Whether automatic service software updates are enabled for the domain.</p>
func (o SoftwareUpdateOptionsPtrOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SoftwareUpdateOptions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoSoftwareUpdateEnabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of SoftwareUpdateOptions
type SoftwareUpdateOptionsResponse struct {
	// <p>Whether automatic service software updates are enabled for the domain.</p>
	AutoSoftwareUpdateEnabled *bool `pulumi:"autoSoftwareUpdateEnabled"`
}

// Definition of SoftwareUpdateOptions
type SoftwareUpdateOptionsResponseOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareUpdateOptionsResponse)(nil)).Elem()
}

func (o SoftwareUpdateOptionsResponseOutput) ToSoftwareUpdateOptionsResponseOutput() SoftwareUpdateOptionsResponseOutput {
	return o
}

func (o SoftwareUpdateOptionsResponseOutput) ToSoftwareUpdateOptionsResponseOutputWithContext(ctx context.Context) SoftwareUpdateOptionsResponseOutput {
	return o
}

// <p>Whether automatic service software updates are enabled for the domain.</p>
func (o SoftwareUpdateOptionsResponseOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SoftwareUpdateOptionsResponse) *bool { return v.AutoSoftwareUpdateEnabled }).(pulumi.BoolPtrOutput)
}

type SoftwareUpdateOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftwareUpdateOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareUpdateOptionsResponse)(nil)).Elem()
}

func (o SoftwareUpdateOptionsResponsePtrOutput) ToSoftwareUpdateOptionsResponsePtrOutput() SoftwareUpdateOptionsResponsePtrOutput {
	return o
}

func (o SoftwareUpdateOptionsResponsePtrOutput) ToSoftwareUpdateOptionsResponsePtrOutputWithContext(ctx context.Context) SoftwareUpdateOptionsResponsePtrOutput {
	return o
}

func (o SoftwareUpdateOptionsResponsePtrOutput) Elem() SoftwareUpdateOptionsResponseOutput {
	return o.ApplyT(func(v *SoftwareUpdateOptionsResponse) SoftwareUpdateOptionsResponse {
		if v != nil {
			return *v
		}
		var ret SoftwareUpdateOptionsResponse
		return ret
	}).(SoftwareUpdateOptionsResponseOutput)
}

// <p>Whether automatic service software updates are enabled for the domain.</p>
func (o SoftwareUpdateOptionsResponsePtrOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SoftwareUpdateOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoSoftwareUpdateEnabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of SourceAuth
type SourceAuth struct {
	// <p>The resource value that applies to the specified authorization type.</p>
	Resource *string `pulumi:"resource"`
	// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
	Type *SourceAuthTypeEnumValue `pulumi:"type"`
}

// SourceAuthInput is an input type that accepts SourceAuthArgs and SourceAuthOutput values.
// You can construct a concrete instance of `SourceAuthInput` via:
//
//	SourceAuthArgs{...}
type SourceAuthInput interface {
	pulumi.Input

	ToSourceAuthOutput() SourceAuthOutput
	ToSourceAuthOutputWithContext(context.Context) SourceAuthOutput
}

// Definition of SourceAuth
type SourceAuthArgs struct {
	// <p>The resource value that applies to the specified authorization type.</p>
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
	Type SourceAuthTypeEnumValuePtrInput `pulumi:"type"`
}

func (SourceAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceAuth)(nil)).Elem()
}

func (i SourceAuthArgs) ToSourceAuthOutput() SourceAuthOutput {
	return i.ToSourceAuthOutputWithContext(context.Background())
}

func (i SourceAuthArgs) ToSourceAuthOutputWithContext(ctx context.Context) SourceAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAuthOutput)
}

func (i SourceAuthArgs) ToSourceAuthPtrOutput() SourceAuthPtrOutput {
	return i.ToSourceAuthPtrOutputWithContext(context.Background())
}

func (i SourceAuthArgs) ToSourceAuthPtrOutputWithContext(ctx context.Context) SourceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAuthOutput).ToSourceAuthPtrOutputWithContext(ctx)
}

// SourceAuthPtrInput is an input type that accepts SourceAuthArgs, SourceAuthPtr and SourceAuthPtrOutput values.
// You can construct a concrete instance of `SourceAuthPtrInput` via:
//
//	        SourceAuthArgs{...}
//
//	or:
//
//	        nil
type SourceAuthPtrInput interface {
	pulumi.Input

	ToSourceAuthPtrOutput() SourceAuthPtrOutput
	ToSourceAuthPtrOutputWithContext(context.Context) SourceAuthPtrOutput
}

type sourceAuthPtrType SourceAuthArgs

func SourceAuthPtr(v *SourceAuthArgs) SourceAuthPtrInput {
	return (*sourceAuthPtrType)(v)
}

func (*sourceAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAuth)(nil)).Elem()
}

func (i *sourceAuthPtrType) ToSourceAuthPtrOutput() SourceAuthPtrOutput {
	return i.ToSourceAuthPtrOutputWithContext(context.Background())
}

func (i *sourceAuthPtrType) ToSourceAuthPtrOutputWithContext(ctx context.Context) SourceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAuthPtrOutput)
}

// Definition of SourceAuth
type SourceAuthOutput struct{ *pulumi.OutputState }

func (SourceAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceAuth)(nil)).Elem()
}

func (o SourceAuthOutput) ToSourceAuthOutput() SourceAuthOutput {
	return o
}

func (o SourceAuthOutput) ToSourceAuthOutputWithContext(ctx context.Context) SourceAuthOutput {
	return o
}

func (o SourceAuthOutput) ToSourceAuthPtrOutput() SourceAuthPtrOutput {
	return o.ToSourceAuthPtrOutputWithContext(context.Background())
}

func (o SourceAuthOutput) ToSourceAuthPtrOutputWithContext(ctx context.Context) SourceAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceAuth) *SourceAuth {
		return &v
	}).(SourceAuthPtrOutput)
}

// <p>The resource value that applies to the specified authorization type.</p>
func (o SourceAuthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceAuth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
func (o SourceAuthOutput) Type() SourceAuthTypeEnumValuePtrOutput {
	return o.ApplyT(func(v SourceAuth) *SourceAuthTypeEnumValue { return v.Type }).(SourceAuthTypeEnumValuePtrOutput)
}

type SourceAuthPtrOutput struct{ *pulumi.OutputState }

func (SourceAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAuth)(nil)).Elem()
}

func (o SourceAuthPtrOutput) ToSourceAuthPtrOutput() SourceAuthPtrOutput {
	return o
}

func (o SourceAuthPtrOutput) ToSourceAuthPtrOutputWithContext(ctx context.Context) SourceAuthPtrOutput {
	return o
}

func (o SourceAuthPtrOutput) Elem() SourceAuthOutput {
	return o.ApplyT(func(v *SourceAuth) SourceAuth {
		if v != nil {
			return *v
		}
		var ret SourceAuth
		return ret
	}).(SourceAuthOutput)
}

// <p>The resource value that applies to the specified authorization type.</p>
func (o SourceAuthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceAuth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
func (o SourceAuthPtrOutput) Type() SourceAuthTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *SourceAuth) *SourceAuthTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Type
	}).(SourceAuthTypeEnumValuePtrOutput)
}

// Definition of SourceAuth
type SourceAuthResponse struct {
	// <p>The resource value that applies to the specified authorization type.</p>
	Resource *string `pulumi:"resource"`
	// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
	Type *SourceAuthTypeEnumValueResponse `pulumi:"type"`
}

// Definition of SourceAuth
type SourceAuthResponseOutput struct{ *pulumi.OutputState }

func (SourceAuthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceAuthResponse)(nil)).Elem()
}

func (o SourceAuthResponseOutput) ToSourceAuthResponseOutput() SourceAuthResponseOutput {
	return o
}

func (o SourceAuthResponseOutput) ToSourceAuthResponseOutputWithContext(ctx context.Context) SourceAuthResponseOutput {
	return o
}

// <p>The resource value that applies to the specified authorization type.</p>
func (o SourceAuthResponseOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceAuthResponse) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
func (o SourceAuthResponseOutput) Type() SourceAuthTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v SourceAuthResponse) *SourceAuthTypeEnumValueResponse { return v.Type }).(SourceAuthTypeEnumValueResponsePtrOutput)
}

type SourceAuthResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceAuthResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAuthResponse)(nil)).Elem()
}

func (o SourceAuthResponsePtrOutput) ToSourceAuthResponsePtrOutput() SourceAuthResponsePtrOutput {
	return o
}

func (o SourceAuthResponsePtrOutput) ToSourceAuthResponsePtrOutputWithContext(ctx context.Context) SourceAuthResponsePtrOutput {
	return o
}

func (o SourceAuthResponsePtrOutput) Elem() SourceAuthResponseOutput {
	return o.ApplyT(func(v *SourceAuthResponse) SourceAuthResponse {
		if v != nil {
			return *v
		}
		var ret SourceAuthResponse
		return ret
	}).(SourceAuthResponseOutput)
}

// <p>The resource value that applies to the specified authorization type.</p>
func (o SourceAuthResponsePtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceAuthResponse) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
func (o SourceAuthResponsePtrOutput) Type() SourceAuthTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *SourceAuthResponse) *SourceAuthTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Type
	}).(SourceAuthTypeEnumValueResponsePtrOutput)
}

// Definition of SourceAuthTypeEnumValue
type SourceAuthTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SourceAuthTypeEnumValueInput is an input type that accepts SourceAuthTypeEnumValueArgs and SourceAuthTypeEnumValueOutput values.
// You can construct a concrete instance of `SourceAuthTypeEnumValueInput` via:
//
//	SourceAuthTypeEnumValueArgs{...}
type SourceAuthTypeEnumValueInput interface {
	pulumi.Input

	ToSourceAuthTypeEnumValueOutput() SourceAuthTypeEnumValueOutput
	ToSourceAuthTypeEnumValueOutputWithContext(context.Context) SourceAuthTypeEnumValueOutput
}

// Definition of SourceAuthTypeEnumValue
type SourceAuthTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SourceAuthTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceAuthTypeEnumValue)(nil)).Elem()
}

func (i SourceAuthTypeEnumValueArgs) ToSourceAuthTypeEnumValueOutput() SourceAuthTypeEnumValueOutput {
	return i.ToSourceAuthTypeEnumValueOutputWithContext(context.Background())
}

func (i SourceAuthTypeEnumValueArgs) ToSourceAuthTypeEnumValueOutputWithContext(ctx context.Context) SourceAuthTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAuthTypeEnumValueOutput)
}

func (i SourceAuthTypeEnumValueArgs) ToSourceAuthTypeEnumValuePtrOutput() SourceAuthTypeEnumValuePtrOutput {
	return i.ToSourceAuthTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i SourceAuthTypeEnumValueArgs) ToSourceAuthTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceAuthTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAuthTypeEnumValueOutput).ToSourceAuthTypeEnumValuePtrOutputWithContext(ctx)
}

// SourceAuthTypeEnumValuePtrInput is an input type that accepts SourceAuthTypeEnumValueArgs, SourceAuthTypeEnumValuePtr and SourceAuthTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `SourceAuthTypeEnumValuePtrInput` via:
//
//	        SourceAuthTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type SourceAuthTypeEnumValuePtrInput interface {
	pulumi.Input

	ToSourceAuthTypeEnumValuePtrOutput() SourceAuthTypeEnumValuePtrOutput
	ToSourceAuthTypeEnumValuePtrOutputWithContext(context.Context) SourceAuthTypeEnumValuePtrOutput
}

type sourceAuthTypeEnumValuePtrType SourceAuthTypeEnumValueArgs

func SourceAuthTypeEnumValuePtr(v *SourceAuthTypeEnumValueArgs) SourceAuthTypeEnumValuePtrInput {
	return (*sourceAuthTypeEnumValuePtrType)(v)
}

func (*sourceAuthTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAuthTypeEnumValue)(nil)).Elem()
}

func (i *sourceAuthTypeEnumValuePtrType) ToSourceAuthTypeEnumValuePtrOutput() SourceAuthTypeEnumValuePtrOutput {
	return i.ToSourceAuthTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *sourceAuthTypeEnumValuePtrType) ToSourceAuthTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceAuthTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAuthTypeEnumValuePtrOutput)
}

// Definition of SourceAuthTypeEnumValue
type SourceAuthTypeEnumValueOutput struct{ *pulumi.OutputState }

func (SourceAuthTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceAuthTypeEnumValue)(nil)).Elem()
}

func (o SourceAuthTypeEnumValueOutput) ToSourceAuthTypeEnumValueOutput() SourceAuthTypeEnumValueOutput {
	return o
}

func (o SourceAuthTypeEnumValueOutput) ToSourceAuthTypeEnumValueOutputWithContext(ctx context.Context) SourceAuthTypeEnumValueOutput {
	return o
}

func (o SourceAuthTypeEnumValueOutput) ToSourceAuthTypeEnumValuePtrOutput() SourceAuthTypeEnumValuePtrOutput {
	return o.ToSourceAuthTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o SourceAuthTypeEnumValueOutput) ToSourceAuthTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceAuthTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceAuthTypeEnumValue) *SourceAuthTypeEnumValue {
		return &v
	}).(SourceAuthTypeEnumValuePtrOutput)
}

// Property value
func (o SourceAuthTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceAuthTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SourceAuthTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SourceAuthTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAuthTypeEnumValue)(nil)).Elem()
}

func (o SourceAuthTypeEnumValuePtrOutput) ToSourceAuthTypeEnumValuePtrOutput() SourceAuthTypeEnumValuePtrOutput {
	return o
}

func (o SourceAuthTypeEnumValuePtrOutput) ToSourceAuthTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceAuthTypeEnumValuePtrOutput {
	return o
}

func (o SourceAuthTypeEnumValuePtrOutput) Elem() SourceAuthTypeEnumValueOutput {
	return o.ApplyT(func(v *SourceAuthTypeEnumValue) SourceAuthTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret SourceAuthTypeEnumValue
		return ret
	}).(SourceAuthTypeEnumValueOutput)
}

// Property value
func (o SourceAuthTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceAuthTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SourceAuthTypeEnumValue
type SourceAuthTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SourceAuthTypeEnumValue
type SourceAuthTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SourceAuthTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceAuthTypeEnumValueResponse)(nil)).Elem()
}

func (o SourceAuthTypeEnumValueResponseOutput) ToSourceAuthTypeEnumValueResponseOutput() SourceAuthTypeEnumValueResponseOutput {
	return o
}

func (o SourceAuthTypeEnumValueResponseOutput) ToSourceAuthTypeEnumValueResponseOutputWithContext(ctx context.Context) SourceAuthTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o SourceAuthTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceAuthTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SourceAuthTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceAuthTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAuthTypeEnumValueResponse)(nil)).Elem()
}

func (o SourceAuthTypeEnumValueResponsePtrOutput) ToSourceAuthTypeEnumValueResponsePtrOutput() SourceAuthTypeEnumValueResponsePtrOutput {
	return o
}

func (o SourceAuthTypeEnumValueResponsePtrOutput) ToSourceAuthTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) SourceAuthTypeEnumValueResponsePtrOutput {
	return o
}

func (o SourceAuthTypeEnumValueResponsePtrOutput) Elem() SourceAuthTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *SourceAuthTypeEnumValueResponse) SourceAuthTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SourceAuthTypeEnumValueResponse
		return ret
	}).(SourceAuthTypeEnumValueResponseOutput)
}

// Property value
func (o SourceAuthTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceAuthTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SourceConfiguration
type SourceConfiguration struct {
	// The name of the application associated with the configuration.
	ApplicationName *string `pulumi:"applicationName"`
	// The name of the configuration template.
	TemplateName *string `pulumi:"templateName"`
}

// SourceConfigurationInput is an input type that accepts SourceConfigurationArgs and SourceConfigurationOutput values.
// You can construct a concrete instance of `SourceConfigurationInput` via:
//
//	SourceConfigurationArgs{...}
type SourceConfigurationInput interface {
	pulumi.Input

	ToSourceConfigurationOutput() SourceConfigurationOutput
	ToSourceConfigurationOutputWithContext(context.Context) SourceConfigurationOutput
}

// Definition of SourceConfiguration
type SourceConfigurationArgs struct {
	// The name of the application associated with the configuration.
	ApplicationName pulumi.StringPtrInput `pulumi:"applicationName"`
	// The name of the configuration template.
	TemplateName pulumi.StringPtrInput `pulumi:"templateName"`
}

func (SourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceConfiguration)(nil)).Elem()
}

func (i SourceConfigurationArgs) ToSourceConfigurationOutput() SourceConfigurationOutput {
	return i.ToSourceConfigurationOutputWithContext(context.Background())
}

func (i SourceConfigurationArgs) ToSourceConfigurationOutputWithContext(ctx context.Context) SourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceConfigurationOutput)
}

func (i SourceConfigurationArgs) ToSourceConfigurationPtrOutput() SourceConfigurationPtrOutput {
	return i.ToSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i SourceConfigurationArgs) ToSourceConfigurationPtrOutputWithContext(ctx context.Context) SourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceConfigurationOutput).ToSourceConfigurationPtrOutputWithContext(ctx)
}

// SourceConfigurationPtrInput is an input type that accepts SourceConfigurationArgs, SourceConfigurationPtr and SourceConfigurationPtrOutput values.
// You can construct a concrete instance of `SourceConfigurationPtrInput` via:
//
//	        SourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type SourceConfigurationPtrInput interface {
	pulumi.Input

	ToSourceConfigurationPtrOutput() SourceConfigurationPtrOutput
	ToSourceConfigurationPtrOutputWithContext(context.Context) SourceConfigurationPtrOutput
}

type sourceConfigurationPtrType SourceConfigurationArgs

func SourceConfigurationPtr(v *SourceConfigurationArgs) SourceConfigurationPtrInput {
	return (*sourceConfigurationPtrType)(v)
}

func (*sourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceConfiguration)(nil)).Elem()
}

func (i *sourceConfigurationPtrType) ToSourceConfigurationPtrOutput() SourceConfigurationPtrOutput {
	return i.ToSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *sourceConfigurationPtrType) ToSourceConfigurationPtrOutputWithContext(ctx context.Context) SourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceConfigurationPtrOutput)
}

// Definition of SourceConfiguration
type SourceConfigurationOutput struct{ *pulumi.OutputState }

func (SourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceConfiguration)(nil)).Elem()
}

func (o SourceConfigurationOutput) ToSourceConfigurationOutput() SourceConfigurationOutput {
	return o
}

func (o SourceConfigurationOutput) ToSourceConfigurationOutputWithContext(ctx context.Context) SourceConfigurationOutput {
	return o
}

func (o SourceConfigurationOutput) ToSourceConfigurationPtrOutput() SourceConfigurationPtrOutput {
	return o.ToSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o SourceConfigurationOutput) ToSourceConfigurationPtrOutputWithContext(ctx context.Context) SourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceConfiguration) *SourceConfiguration {
		return &v
	}).(SourceConfigurationPtrOutput)
}

// The name of the application associated with the configuration.
func (o SourceConfigurationOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceConfiguration) *string { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// The name of the configuration template.
func (o SourceConfigurationOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceConfiguration) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

type SourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceConfiguration)(nil)).Elem()
}

func (o SourceConfigurationPtrOutput) ToSourceConfigurationPtrOutput() SourceConfigurationPtrOutput {
	return o
}

func (o SourceConfigurationPtrOutput) ToSourceConfigurationPtrOutputWithContext(ctx context.Context) SourceConfigurationPtrOutput {
	return o
}

func (o SourceConfigurationPtrOutput) Elem() SourceConfigurationOutput {
	return o.ApplyT(func(v *SourceConfiguration) SourceConfiguration {
		if v != nil {
			return *v
		}
		var ret SourceConfiguration
		return ret
	}).(SourceConfigurationOutput)
}

// The name of the application associated with the configuration.
func (o SourceConfigurationPtrOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationName
	}).(pulumi.StringPtrOutput)
}

// The name of the configuration template.
func (o SourceConfigurationPtrOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TemplateName
	}).(pulumi.StringPtrOutput)
}

// Definition of SourceConfiguration
type SourceConfigurationResponse struct {
	// The name of the application associated with the configuration.
	ApplicationName *string `pulumi:"applicationName"`
	// The name of the configuration template.
	TemplateName *string `pulumi:"templateName"`
}

// Definition of SourceConfiguration
type SourceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SourceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceConfigurationResponse)(nil)).Elem()
}

func (o SourceConfigurationResponseOutput) ToSourceConfigurationResponseOutput() SourceConfigurationResponseOutput {
	return o
}

func (o SourceConfigurationResponseOutput) ToSourceConfigurationResponseOutputWithContext(ctx context.Context) SourceConfigurationResponseOutput {
	return o
}

// The name of the application associated with the configuration.
func (o SourceConfigurationResponseOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceConfigurationResponse) *string { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// The name of the configuration template.
func (o SourceConfigurationResponseOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceConfigurationResponse) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

type SourceConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceConfigurationResponse)(nil)).Elem()
}

func (o SourceConfigurationResponsePtrOutput) ToSourceConfigurationResponsePtrOutput() SourceConfigurationResponsePtrOutput {
	return o
}

func (o SourceConfigurationResponsePtrOutput) ToSourceConfigurationResponsePtrOutputWithContext(ctx context.Context) SourceConfigurationResponsePtrOutput {
	return o
}

func (o SourceConfigurationResponsePtrOutput) Elem() SourceConfigurationResponseOutput {
	return o.ApplyT(func(v *SourceConfigurationResponse) SourceConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret SourceConfigurationResponse
		return ret
	}).(SourceConfigurationResponseOutput)
}

// The name of the application associated with the configuration.
func (o SourceConfigurationResponsePtrOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationName
	}).(pulumi.StringPtrOutput)
}

// The name of the configuration template.
func (o SourceConfigurationResponsePtrOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateName
	}).(pulumi.StringPtrOutput)
}

// Definition of SourceSelectionCriteria
type SourceSelectionCriteria struct {
	// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
	ReplicaModifications *ReplicaModifications `pulumi:"replicaModifications"`
	// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
	SseKmsEncryptedObjects *SseKmsEncryptedObjects `pulumi:"sseKmsEncryptedObjects"`
}

// SourceSelectionCriteriaInput is an input type that accepts SourceSelectionCriteriaArgs and SourceSelectionCriteriaOutput values.
// You can construct a concrete instance of `SourceSelectionCriteriaInput` via:
//
//	SourceSelectionCriteriaArgs{...}
type SourceSelectionCriteriaInput interface {
	pulumi.Input

	ToSourceSelectionCriteriaOutput() SourceSelectionCriteriaOutput
	ToSourceSelectionCriteriaOutputWithContext(context.Context) SourceSelectionCriteriaOutput
}

// Definition of SourceSelectionCriteria
type SourceSelectionCriteriaArgs struct {
	// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
	ReplicaModifications ReplicaModificationsPtrInput `pulumi:"replicaModifications"`
	// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
	SseKmsEncryptedObjects SseKmsEncryptedObjectsPtrInput `pulumi:"sseKmsEncryptedObjects"`
}

func (SourceSelectionCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceSelectionCriteria)(nil)).Elem()
}

func (i SourceSelectionCriteriaArgs) ToSourceSelectionCriteriaOutput() SourceSelectionCriteriaOutput {
	return i.ToSourceSelectionCriteriaOutputWithContext(context.Background())
}

func (i SourceSelectionCriteriaArgs) ToSourceSelectionCriteriaOutputWithContext(ctx context.Context) SourceSelectionCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSelectionCriteriaOutput)
}

func (i SourceSelectionCriteriaArgs) ToSourceSelectionCriteriaPtrOutput() SourceSelectionCriteriaPtrOutput {
	return i.ToSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i SourceSelectionCriteriaArgs) ToSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) SourceSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSelectionCriteriaOutput).ToSourceSelectionCriteriaPtrOutputWithContext(ctx)
}

// SourceSelectionCriteriaPtrInput is an input type that accepts SourceSelectionCriteriaArgs, SourceSelectionCriteriaPtr and SourceSelectionCriteriaPtrOutput values.
// You can construct a concrete instance of `SourceSelectionCriteriaPtrInput` via:
//
//	        SourceSelectionCriteriaArgs{...}
//
//	or:
//
//	        nil
type SourceSelectionCriteriaPtrInput interface {
	pulumi.Input

	ToSourceSelectionCriteriaPtrOutput() SourceSelectionCriteriaPtrOutput
	ToSourceSelectionCriteriaPtrOutputWithContext(context.Context) SourceSelectionCriteriaPtrOutput
}

type sourceSelectionCriteriaPtrType SourceSelectionCriteriaArgs

func SourceSelectionCriteriaPtr(v *SourceSelectionCriteriaArgs) SourceSelectionCriteriaPtrInput {
	return (*sourceSelectionCriteriaPtrType)(v)
}

func (*sourceSelectionCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSelectionCriteria)(nil)).Elem()
}

func (i *sourceSelectionCriteriaPtrType) ToSourceSelectionCriteriaPtrOutput() SourceSelectionCriteriaPtrOutput {
	return i.ToSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i *sourceSelectionCriteriaPtrType) ToSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) SourceSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSelectionCriteriaPtrOutput)
}

// Definition of SourceSelectionCriteria
type SourceSelectionCriteriaOutput struct{ *pulumi.OutputState }

func (SourceSelectionCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceSelectionCriteria)(nil)).Elem()
}

func (o SourceSelectionCriteriaOutput) ToSourceSelectionCriteriaOutput() SourceSelectionCriteriaOutput {
	return o
}

func (o SourceSelectionCriteriaOutput) ToSourceSelectionCriteriaOutputWithContext(ctx context.Context) SourceSelectionCriteriaOutput {
	return o
}

func (o SourceSelectionCriteriaOutput) ToSourceSelectionCriteriaPtrOutput() SourceSelectionCriteriaPtrOutput {
	return o.ToSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (o SourceSelectionCriteriaOutput) ToSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) SourceSelectionCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceSelectionCriteria) *SourceSelectionCriteria {
		return &v
	}).(SourceSelectionCriteriaPtrOutput)
}

// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
func (o SourceSelectionCriteriaOutput) ReplicaModifications() ReplicaModificationsPtrOutput {
	return o.ApplyT(func(v SourceSelectionCriteria) *ReplicaModifications { return v.ReplicaModifications }).(ReplicaModificationsPtrOutput)
}

// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
func (o SourceSelectionCriteriaOutput) SseKmsEncryptedObjects() SseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func(v SourceSelectionCriteria) *SseKmsEncryptedObjects { return v.SseKmsEncryptedObjects }).(SseKmsEncryptedObjectsPtrOutput)
}

type SourceSelectionCriteriaPtrOutput struct{ *pulumi.OutputState }

func (SourceSelectionCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSelectionCriteria)(nil)).Elem()
}

func (o SourceSelectionCriteriaPtrOutput) ToSourceSelectionCriteriaPtrOutput() SourceSelectionCriteriaPtrOutput {
	return o
}

func (o SourceSelectionCriteriaPtrOutput) ToSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) SourceSelectionCriteriaPtrOutput {
	return o
}

func (o SourceSelectionCriteriaPtrOutput) Elem() SourceSelectionCriteriaOutput {
	return o.ApplyT(func(v *SourceSelectionCriteria) SourceSelectionCriteria {
		if v != nil {
			return *v
		}
		var ret SourceSelectionCriteria
		return ret
	}).(SourceSelectionCriteriaOutput)
}

// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
func (o SourceSelectionCriteriaPtrOutput) ReplicaModifications() ReplicaModificationsPtrOutput {
	return o.ApplyT(func(v *SourceSelectionCriteria) *ReplicaModifications {
		if v == nil {
			return nil
		}
		return v.ReplicaModifications
	}).(ReplicaModificationsPtrOutput)
}

// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
func (o SourceSelectionCriteriaPtrOutput) SseKmsEncryptedObjects() SseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func(v *SourceSelectionCriteria) *SseKmsEncryptedObjects {
		if v == nil {
			return nil
		}
		return v.SseKmsEncryptedObjects
	}).(SseKmsEncryptedObjectsPtrOutput)
}

// Definition of SourceSelectionCriteria
type SourceSelectionCriteriaResponse struct {
	// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
	ReplicaModifications *ReplicaModificationsResponse `pulumi:"replicaModifications"`
	// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
	SseKmsEncryptedObjects *SseKmsEncryptedObjectsResponse `pulumi:"sseKmsEncryptedObjects"`
}

// Definition of SourceSelectionCriteria
type SourceSelectionCriteriaResponseOutput struct{ *pulumi.OutputState }

func (SourceSelectionCriteriaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceSelectionCriteriaResponse)(nil)).Elem()
}

func (o SourceSelectionCriteriaResponseOutput) ToSourceSelectionCriteriaResponseOutput() SourceSelectionCriteriaResponseOutput {
	return o
}

func (o SourceSelectionCriteriaResponseOutput) ToSourceSelectionCriteriaResponseOutputWithContext(ctx context.Context) SourceSelectionCriteriaResponseOutput {
	return o
}

// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
func (o SourceSelectionCriteriaResponseOutput) ReplicaModifications() ReplicaModificationsResponsePtrOutput {
	return o.ApplyT(func(v SourceSelectionCriteriaResponse) *ReplicaModificationsResponse { return v.ReplicaModifications }).(ReplicaModificationsResponsePtrOutput)
}

// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
func (o SourceSelectionCriteriaResponseOutput) SseKmsEncryptedObjects() SseKmsEncryptedObjectsResponsePtrOutput {
	return o.ApplyT(func(v SourceSelectionCriteriaResponse) *SseKmsEncryptedObjectsResponse {
		return v.SseKmsEncryptedObjects
	}).(SseKmsEncryptedObjectsResponsePtrOutput)
}

type SourceSelectionCriteriaResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceSelectionCriteriaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSelectionCriteriaResponse)(nil)).Elem()
}

func (o SourceSelectionCriteriaResponsePtrOutput) ToSourceSelectionCriteriaResponsePtrOutput() SourceSelectionCriteriaResponsePtrOutput {
	return o
}

func (o SourceSelectionCriteriaResponsePtrOutput) ToSourceSelectionCriteriaResponsePtrOutputWithContext(ctx context.Context) SourceSelectionCriteriaResponsePtrOutput {
	return o
}

func (o SourceSelectionCriteriaResponsePtrOutput) Elem() SourceSelectionCriteriaResponseOutput {
	return o.ApplyT(func(v *SourceSelectionCriteriaResponse) SourceSelectionCriteriaResponse {
		if v != nil {
			return *v
		}
		var ret SourceSelectionCriteriaResponse
		return ret
	}).(SourceSelectionCriteriaResponseOutput)
}

// A filter that you can specify for selection for modifications on replicas. A filter that you can specify for selection for modifications on replicas.
func (o SourceSelectionCriteriaResponsePtrOutput) ReplicaModifications() ReplicaModificationsResponsePtrOutput {
	return o.ApplyT(func(v *SourceSelectionCriteriaResponse) *ReplicaModificationsResponse {
		if v == nil {
			return nil
		}
		return v.ReplicaModifications
	}).(ReplicaModificationsResponsePtrOutput)
}

// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. A container for filter information for the selection of S3 objects encrypted with AWS KMS.
func (o SourceSelectionCriteriaResponsePtrOutput) SseKmsEncryptedObjects() SseKmsEncryptedObjectsResponsePtrOutput {
	return o.ApplyT(func(v *SourceSelectionCriteriaResponse) *SseKmsEncryptedObjectsResponse {
		if v == nil {
			return nil
		}
		return v.SseKmsEncryptedObjects
	}).(SseKmsEncryptedObjectsResponsePtrOutput)
}

// Definition of SourceTypeEnumValue
type SourceTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SourceTypeEnumValueInput is an input type that accepts SourceTypeEnumValueArgs and SourceTypeEnumValueOutput values.
// You can construct a concrete instance of `SourceTypeEnumValueInput` via:
//
//	SourceTypeEnumValueArgs{...}
type SourceTypeEnumValueInput interface {
	pulumi.Input

	ToSourceTypeEnumValueOutput() SourceTypeEnumValueOutput
	ToSourceTypeEnumValueOutputWithContext(context.Context) SourceTypeEnumValueOutput
}

// Definition of SourceTypeEnumValue
type SourceTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SourceTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTypeEnumValue)(nil)).Elem()
}

func (i SourceTypeEnumValueArgs) ToSourceTypeEnumValueOutput() SourceTypeEnumValueOutput {
	return i.ToSourceTypeEnumValueOutputWithContext(context.Background())
}

func (i SourceTypeEnumValueArgs) ToSourceTypeEnumValueOutputWithContext(ctx context.Context) SourceTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTypeEnumValueOutput)
}

func (i SourceTypeEnumValueArgs) ToSourceTypeEnumValuePtrOutput() SourceTypeEnumValuePtrOutput {
	return i.ToSourceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i SourceTypeEnumValueArgs) ToSourceTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTypeEnumValueOutput).ToSourceTypeEnumValuePtrOutputWithContext(ctx)
}

// SourceTypeEnumValuePtrInput is an input type that accepts SourceTypeEnumValueArgs, SourceTypeEnumValuePtr and SourceTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `SourceTypeEnumValuePtrInput` via:
//
//	        SourceTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type SourceTypeEnumValuePtrInput interface {
	pulumi.Input

	ToSourceTypeEnumValuePtrOutput() SourceTypeEnumValuePtrOutput
	ToSourceTypeEnumValuePtrOutputWithContext(context.Context) SourceTypeEnumValuePtrOutput
}

type sourceTypeEnumValuePtrType SourceTypeEnumValueArgs

func SourceTypeEnumValuePtr(v *SourceTypeEnumValueArgs) SourceTypeEnumValuePtrInput {
	return (*sourceTypeEnumValuePtrType)(v)
}

func (*sourceTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTypeEnumValue)(nil)).Elem()
}

func (i *sourceTypeEnumValuePtrType) ToSourceTypeEnumValuePtrOutput() SourceTypeEnumValuePtrOutput {
	return i.ToSourceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *sourceTypeEnumValuePtrType) ToSourceTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTypeEnumValuePtrOutput)
}

// Definition of SourceTypeEnumValue
type SourceTypeEnumValueOutput struct{ *pulumi.OutputState }

func (SourceTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTypeEnumValue)(nil)).Elem()
}

func (o SourceTypeEnumValueOutput) ToSourceTypeEnumValueOutput() SourceTypeEnumValueOutput {
	return o
}

func (o SourceTypeEnumValueOutput) ToSourceTypeEnumValueOutputWithContext(ctx context.Context) SourceTypeEnumValueOutput {
	return o
}

func (o SourceTypeEnumValueOutput) ToSourceTypeEnumValuePtrOutput() SourceTypeEnumValuePtrOutput {
	return o.ToSourceTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o SourceTypeEnumValueOutput) ToSourceTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceTypeEnumValue) *SourceTypeEnumValue {
		return &v
	}).(SourceTypeEnumValuePtrOutput)
}

// Property value
func (o SourceTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SourceTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SourceTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTypeEnumValue)(nil)).Elem()
}

func (o SourceTypeEnumValuePtrOutput) ToSourceTypeEnumValuePtrOutput() SourceTypeEnumValuePtrOutput {
	return o
}

func (o SourceTypeEnumValuePtrOutput) ToSourceTypeEnumValuePtrOutputWithContext(ctx context.Context) SourceTypeEnumValuePtrOutput {
	return o
}

func (o SourceTypeEnumValuePtrOutput) Elem() SourceTypeEnumValueOutput {
	return o.ApplyT(func(v *SourceTypeEnumValue) SourceTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret SourceTypeEnumValue
		return ret
	}).(SourceTypeEnumValueOutput)
}

// Property value
func (o SourceTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SourceTypeEnumValue
type SourceTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SourceTypeEnumValue
type SourceTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SourceTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTypeEnumValueResponse)(nil)).Elem()
}

func (o SourceTypeEnumValueResponseOutput) ToSourceTypeEnumValueResponseOutput() SourceTypeEnumValueResponseOutput {
	return o
}

func (o SourceTypeEnumValueResponseOutput) ToSourceTypeEnumValueResponseOutputWithContext(ctx context.Context) SourceTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o SourceTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SourceTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTypeEnumValueResponse)(nil)).Elem()
}

func (o SourceTypeEnumValueResponsePtrOutput) ToSourceTypeEnumValueResponsePtrOutput() SourceTypeEnumValueResponsePtrOutput {
	return o
}

func (o SourceTypeEnumValueResponsePtrOutput) ToSourceTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) SourceTypeEnumValueResponsePtrOutput {
	return o
}

func (o SourceTypeEnumValueResponsePtrOutput) Elem() SourceTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *SourceTypeEnumValueResponse) SourceTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SourceTypeEnumValueResponse
		return ret
	}).(SourceTypeEnumValueResponseOutput)
}

// Property value
func (o SourceTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SqsQueue
type SqsQueueProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSqsQueueProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SqsQueuePropertiesInput is an input type that accepts SqsQueuePropertiesArgs and SqsQueuePropertiesOutput values.
// You can construct a concrete instance of `SqsQueuePropertiesInput` via:
//
//	SqsQueuePropertiesArgs{...}
type SqsQueuePropertiesInput interface {
	pulumi.Input

	ToSqsQueuePropertiesOutput() SqsQueuePropertiesOutput
	ToSqsQueuePropertiesOutputWithContext(context.Context) SqsQueuePropertiesOutput
}

// Definition of SqsQueue
type SqsQueuePropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSqsQueuePropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SqsQueuePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqsQueueProperties)(nil)).Elem()
}

func (i SqsQueuePropertiesArgs) ToSqsQueuePropertiesOutput() SqsQueuePropertiesOutput {
	return i.ToSqsQueuePropertiesOutputWithContext(context.Background())
}

func (i SqsQueuePropertiesArgs) ToSqsQueuePropertiesOutputWithContext(ctx context.Context) SqsQueuePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqsQueuePropertiesOutput)
}

func (i SqsQueuePropertiesArgs) ToSqsQueuePropertiesPtrOutput() SqsQueuePropertiesPtrOutput {
	return i.ToSqsQueuePropertiesPtrOutputWithContext(context.Background())
}

func (i SqsQueuePropertiesArgs) ToSqsQueuePropertiesPtrOutputWithContext(ctx context.Context) SqsQueuePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqsQueuePropertiesOutput).ToSqsQueuePropertiesPtrOutputWithContext(ctx)
}

// SqsQueuePropertiesPtrInput is an input type that accepts SqsQueuePropertiesArgs, SqsQueuePropertiesPtr and SqsQueuePropertiesPtrOutput values.
// You can construct a concrete instance of `SqsQueuePropertiesPtrInput` via:
//
//	        SqsQueuePropertiesArgs{...}
//
//	or:
//
//	        nil
type SqsQueuePropertiesPtrInput interface {
	pulumi.Input

	ToSqsQueuePropertiesPtrOutput() SqsQueuePropertiesPtrOutput
	ToSqsQueuePropertiesPtrOutputWithContext(context.Context) SqsQueuePropertiesPtrOutput
}

type sqsQueuePropertiesPtrType SqsQueuePropertiesArgs

func SqsQueuePropertiesPtr(v *SqsQueuePropertiesArgs) SqsQueuePropertiesPtrInput {
	return (*sqsQueuePropertiesPtrType)(v)
}

func (*sqsQueuePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqsQueueProperties)(nil)).Elem()
}

func (i *sqsQueuePropertiesPtrType) ToSqsQueuePropertiesPtrOutput() SqsQueuePropertiesPtrOutput {
	return i.ToSqsQueuePropertiesPtrOutputWithContext(context.Background())
}

func (i *sqsQueuePropertiesPtrType) ToSqsQueuePropertiesPtrOutputWithContext(ctx context.Context) SqsQueuePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqsQueuePropertiesPtrOutput)
}

// Definition of SqsQueue
type SqsQueuePropertiesOutput struct{ *pulumi.OutputState }

func (SqsQueuePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqsQueueProperties)(nil)).Elem()
}

func (o SqsQueuePropertiesOutput) ToSqsQueuePropertiesOutput() SqsQueuePropertiesOutput {
	return o
}

func (o SqsQueuePropertiesOutput) ToSqsQueuePropertiesOutputWithContext(ctx context.Context) SqsQueuePropertiesOutput {
	return o
}

func (o SqsQueuePropertiesOutput) ToSqsQueuePropertiesPtrOutput() SqsQueuePropertiesPtrOutput {
	return o.ToSqsQueuePropertiesPtrOutputWithContext(context.Background())
}

func (o SqsQueuePropertiesOutput) ToSqsQueuePropertiesPtrOutputWithContext(ctx context.Context) SqsQueuePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqsQueueProperties) *SqsQueueProperties {
		return &v
	}).(SqsQueuePropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SqsQueuePropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SqsQueuePropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SqsQueuePropertiesOutput) AwsProperties() AwsSqsQueuePropertiesPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *AwsSqsQueueProperties { return v.AwsProperties }).(AwsSqsQueuePropertiesPtrOutput)
}

// AWS Region
func (o SqsQueuePropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SqsQueuePropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SqsQueuePropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SqsQueueProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SqsQueuePropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SqsQueuePropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueueProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SqsQueuePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SqsQueuePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqsQueueProperties)(nil)).Elem()
}

func (o SqsQueuePropertiesPtrOutput) ToSqsQueuePropertiesPtrOutput() SqsQueuePropertiesPtrOutput {
	return o
}

func (o SqsQueuePropertiesPtrOutput) ToSqsQueuePropertiesPtrOutputWithContext(ctx context.Context) SqsQueuePropertiesPtrOutput {
	return o
}

func (o SqsQueuePropertiesPtrOutput) Elem() SqsQueuePropertiesOutput {
	return o.ApplyT(func(v *SqsQueueProperties) SqsQueueProperties {
		if v != nil {
			return *v
		}
		var ret SqsQueueProperties
		return ret
	}).(SqsQueuePropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SqsQueuePropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SqsQueuePropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SqsQueuePropertiesPtrOutput) AwsProperties() AwsSqsQueuePropertiesPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *AwsSqsQueueProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSqsQueuePropertiesPtrOutput)
}

// AWS Region
func (o SqsQueuePropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SqsQueuePropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SqsQueuePropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SqsQueueProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SqsQueuePropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SqsQueuePropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqsQueueProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SqsQueue
type SqsQueuePropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSqsQueuePropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SqsQueue
type SqsQueuePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SqsQueuePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqsQueuePropertiesResponse)(nil)).Elem()
}

func (o SqsQueuePropertiesResponseOutput) ToSqsQueuePropertiesResponseOutput() SqsQueuePropertiesResponseOutput {
	return o
}

func (o SqsQueuePropertiesResponseOutput) ToSqsQueuePropertiesResponseOutputWithContext(ctx context.Context) SqsQueuePropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SqsQueuePropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SqsQueuePropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SqsQueuePropertiesResponseOutput) AwsProperties() AwsSqsQueuePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *AwsSqsQueuePropertiesResponse { return v.AwsProperties }).(AwsSqsQueuePropertiesResponsePtrOutput)
}

// AWS Region
func (o SqsQueuePropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SqsQueuePropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SqsQueuePropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SqsQueuePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SqsQueuePropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SqsQueuePropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqsQueuePropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SseKmsEncryptedObjects
type SseKmsEncryptedObjects struct {
	// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
	Status *string `pulumi:"status"`
}

// SseKmsEncryptedObjectsInput is an input type that accepts SseKmsEncryptedObjectsArgs and SseKmsEncryptedObjectsOutput values.
// You can construct a concrete instance of `SseKmsEncryptedObjectsInput` via:
//
//	SseKmsEncryptedObjectsArgs{...}
type SseKmsEncryptedObjectsInput interface {
	pulumi.Input

	ToSseKmsEncryptedObjectsOutput() SseKmsEncryptedObjectsOutput
	ToSseKmsEncryptedObjectsOutputWithContext(context.Context) SseKmsEncryptedObjectsOutput
}

// Definition of SseKmsEncryptedObjects
type SseKmsEncryptedObjectsArgs struct {
	// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SseKmsEncryptedObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SseKmsEncryptedObjects)(nil)).Elem()
}

func (i SseKmsEncryptedObjectsArgs) ToSseKmsEncryptedObjectsOutput() SseKmsEncryptedObjectsOutput {
	return i.ToSseKmsEncryptedObjectsOutputWithContext(context.Background())
}

func (i SseKmsEncryptedObjectsArgs) ToSseKmsEncryptedObjectsOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SseKmsEncryptedObjectsOutput)
}

func (i SseKmsEncryptedObjectsArgs) ToSseKmsEncryptedObjectsPtrOutput() SseKmsEncryptedObjectsPtrOutput {
	return i.ToSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (i SseKmsEncryptedObjectsArgs) ToSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SseKmsEncryptedObjectsOutput).ToSseKmsEncryptedObjectsPtrOutputWithContext(ctx)
}

// SseKmsEncryptedObjectsPtrInput is an input type that accepts SseKmsEncryptedObjectsArgs, SseKmsEncryptedObjectsPtr and SseKmsEncryptedObjectsPtrOutput values.
// You can construct a concrete instance of `SseKmsEncryptedObjectsPtrInput` via:
//
//	        SseKmsEncryptedObjectsArgs{...}
//
//	or:
//
//	        nil
type SseKmsEncryptedObjectsPtrInput interface {
	pulumi.Input

	ToSseKmsEncryptedObjectsPtrOutput() SseKmsEncryptedObjectsPtrOutput
	ToSseKmsEncryptedObjectsPtrOutputWithContext(context.Context) SseKmsEncryptedObjectsPtrOutput
}

type sseKmsEncryptedObjectsPtrType SseKmsEncryptedObjectsArgs

func SseKmsEncryptedObjectsPtr(v *SseKmsEncryptedObjectsArgs) SseKmsEncryptedObjectsPtrInput {
	return (*sseKmsEncryptedObjectsPtrType)(v)
}

func (*sseKmsEncryptedObjectsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SseKmsEncryptedObjects)(nil)).Elem()
}

func (i *sseKmsEncryptedObjectsPtrType) ToSseKmsEncryptedObjectsPtrOutput() SseKmsEncryptedObjectsPtrOutput {
	return i.ToSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (i *sseKmsEncryptedObjectsPtrType) ToSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SseKmsEncryptedObjectsPtrOutput)
}

// Definition of SseKmsEncryptedObjects
type SseKmsEncryptedObjectsOutput struct{ *pulumi.OutputState }

func (SseKmsEncryptedObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SseKmsEncryptedObjects)(nil)).Elem()
}

func (o SseKmsEncryptedObjectsOutput) ToSseKmsEncryptedObjectsOutput() SseKmsEncryptedObjectsOutput {
	return o
}

func (o SseKmsEncryptedObjectsOutput) ToSseKmsEncryptedObjectsOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsOutput {
	return o
}

func (o SseKmsEncryptedObjectsOutput) ToSseKmsEncryptedObjectsPtrOutput() SseKmsEncryptedObjectsPtrOutput {
	return o.ToSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (o SseKmsEncryptedObjectsOutput) ToSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SseKmsEncryptedObjects) *SseKmsEncryptedObjects {
		return &v
	}).(SseKmsEncryptedObjectsPtrOutput)
}

// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
func (o SseKmsEncryptedObjectsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SseKmsEncryptedObjects) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SseKmsEncryptedObjectsPtrOutput struct{ *pulumi.OutputState }

func (SseKmsEncryptedObjectsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SseKmsEncryptedObjects)(nil)).Elem()
}

func (o SseKmsEncryptedObjectsPtrOutput) ToSseKmsEncryptedObjectsPtrOutput() SseKmsEncryptedObjectsPtrOutput {
	return o
}

func (o SseKmsEncryptedObjectsPtrOutput) ToSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsPtrOutput {
	return o
}

func (o SseKmsEncryptedObjectsPtrOutput) Elem() SseKmsEncryptedObjectsOutput {
	return o.ApplyT(func(v *SseKmsEncryptedObjects) SseKmsEncryptedObjects {
		if v != nil {
			return *v
		}
		var ret SseKmsEncryptedObjects
		return ret
	}).(SseKmsEncryptedObjectsOutput)
}

// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
func (o SseKmsEncryptedObjectsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SseKmsEncryptedObjects) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of SseKmsEncryptedObjects
type SseKmsEncryptedObjectsResponse struct {
	// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
	Status *string `pulumi:"status"`
}

// Definition of SseKmsEncryptedObjects
type SseKmsEncryptedObjectsResponseOutput struct{ *pulumi.OutputState }

func (SseKmsEncryptedObjectsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SseKmsEncryptedObjectsResponse)(nil)).Elem()
}

func (o SseKmsEncryptedObjectsResponseOutput) ToSseKmsEncryptedObjectsResponseOutput() SseKmsEncryptedObjectsResponseOutput {
	return o
}

func (o SseKmsEncryptedObjectsResponseOutput) ToSseKmsEncryptedObjectsResponseOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsResponseOutput {
	return o
}

// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
func (o SseKmsEncryptedObjectsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SseKmsEncryptedObjectsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SseKmsEncryptedObjectsResponsePtrOutput struct{ *pulumi.OutputState }

func (SseKmsEncryptedObjectsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SseKmsEncryptedObjectsResponse)(nil)).Elem()
}

func (o SseKmsEncryptedObjectsResponsePtrOutput) ToSseKmsEncryptedObjectsResponsePtrOutput() SseKmsEncryptedObjectsResponsePtrOutput {
	return o
}

func (o SseKmsEncryptedObjectsResponsePtrOutput) ToSseKmsEncryptedObjectsResponsePtrOutputWithContext(ctx context.Context) SseKmsEncryptedObjectsResponsePtrOutput {
	return o
}

func (o SseKmsEncryptedObjectsResponsePtrOutput) Elem() SseKmsEncryptedObjectsResponseOutput {
	return o.ApplyT(func(v *SseKmsEncryptedObjectsResponse) SseKmsEncryptedObjectsResponse {
		if v != nil {
			return *v
		}
		var ret SseKmsEncryptedObjectsResponse
		return ret
	}).(SseKmsEncryptedObjectsResponseOutput)
}

// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
func (o SseKmsEncryptedObjectsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SseKmsEncryptedObjectsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of SsmInstanceInformation
type SsmInstanceInformationProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmInstanceInformationProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SsmInstanceInformationPropertiesInput is an input type that accepts SsmInstanceInformationPropertiesArgs and SsmInstanceInformationPropertiesOutput values.
// You can construct a concrete instance of `SsmInstanceInformationPropertiesInput` via:
//
//	SsmInstanceInformationPropertiesArgs{...}
type SsmInstanceInformationPropertiesInput interface {
	pulumi.Input

	ToSsmInstanceInformationPropertiesOutput() SsmInstanceInformationPropertiesOutput
	ToSsmInstanceInformationPropertiesOutputWithContext(context.Context) SsmInstanceInformationPropertiesOutput
}

// Definition of SsmInstanceInformation
type SsmInstanceInformationPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSsmInstanceInformationPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SsmInstanceInformationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmInstanceInformationProperties)(nil)).Elem()
}

func (i SsmInstanceInformationPropertiesArgs) ToSsmInstanceInformationPropertiesOutput() SsmInstanceInformationPropertiesOutput {
	return i.ToSsmInstanceInformationPropertiesOutputWithContext(context.Background())
}

func (i SsmInstanceInformationPropertiesArgs) ToSsmInstanceInformationPropertiesOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmInstanceInformationPropertiesOutput)
}

func (i SsmInstanceInformationPropertiesArgs) ToSsmInstanceInformationPropertiesPtrOutput() SsmInstanceInformationPropertiesPtrOutput {
	return i.ToSsmInstanceInformationPropertiesPtrOutputWithContext(context.Background())
}

func (i SsmInstanceInformationPropertiesArgs) ToSsmInstanceInformationPropertiesPtrOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmInstanceInformationPropertiesOutput).ToSsmInstanceInformationPropertiesPtrOutputWithContext(ctx)
}

// SsmInstanceInformationPropertiesPtrInput is an input type that accepts SsmInstanceInformationPropertiesArgs, SsmInstanceInformationPropertiesPtr and SsmInstanceInformationPropertiesPtrOutput values.
// You can construct a concrete instance of `SsmInstanceInformationPropertiesPtrInput` via:
//
//	        SsmInstanceInformationPropertiesArgs{...}
//
//	or:
//
//	        nil
type SsmInstanceInformationPropertiesPtrInput interface {
	pulumi.Input

	ToSsmInstanceInformationPropertiesPtrOutput() SsmInstanceInformationPropertiesPtrOutput
	ToSsmInstanceInformationPropertiesPtrOutputWithContext(context.Context) SsmInstanceInformationPropertiesPtrOutput
}

type ssmInstanceInformationPropertiesPtrType SsmInstanceInformationPropertiesArgs

func SsmInstanceInformationPropertiesPtr(v *SsmInstanceInformationPropertiesArgs) SsmInstanceInformationPropertiesPtrInput {
	return (*ssmInstanceInformationPropertiesPtrType)(v)
}

func (*ssmInstanceInformationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmInstanceInformationProperties)(nil)).Elem()
}

func (i *ssmInstanceInformationPropertiesPtrType) ToSsmInstanceInformationPropertiesPtrOutput() SsmInstanceInformationPropertiesPtrOutput {
	return i.ToSsmInstanceInformationPropertiesPtrOutputWithContext(context.Background())
}

func (i *ssmInstanceInformationPropertiesPtrType) ToSsmInstanceInformationPropertiesPtrOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmInstanceInformationPropertiesPtrOutput)
}

// Definition of SsmInstanceInformation
type SsmInstanceInformationPropertiesOutput struct{ *pulumi.OutputState }

func (SsmInstanceInformationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmInstanceInformationProperties)(nil)).Elem()
}

func (o SsmInstanceInformationPropertiesOutput) ToSsmInstanceInformationPropertiesOutput() SsmInstanceInformationPropertiesOutput {
	return o
}

func (o SsmInstanceInformationPropertiesOutput) ToSsmInstanceInformationPropertiesOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesOutput {
	return o
}

func (o SsmInstanceInformationPropertiesOutput) ToSsmInstanceInformationPropertiesPtrOutput() SsmInstanceInformationPropertiesPtrOutput {
	return o.ToSsmInstanceInformationPropertiesPtrOutputWithContext(context.Background())
}

func (o SsmInstanceInformationPropertiesOutput) ToSsmInstanceInformationPropertiesPtrOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsmInstanceInformationProperties) *SsmInstanceInformationProperties {
		return &v
	}).(SsmInstanceInformationPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SsmInstanceInformationPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmInstanceInformationPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmInstanceInformationPropertiesOutput) AwsProperties() AwsSsmInstanceInformationPropertiesPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *AwsSsmInstanceInformationProperties { return v.AwsProperties }).(AwsSsmInstanceInformationPropertiesPtrOutput)
}

// AWS Region
func (o SsmInstanceInformationPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmInstanceInformationPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmInstanceInformationPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmInstanceInformationPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmInstanceInformationPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SsmInstanceInformationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SsmInstanceInformationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmInstanceInformationProperties)(nil)).Elem()
}

func (o SsmInstanceInformationPropertiesPtrOutput) ToSsmInstanceInformationPropertiesPtrOutput() SsmInstanceInformationPropertiesPtrOutput {
	return o
}

func (o SsmInstanceInformationPropertiesPtrOutput) ToSsmInstanceInformationPropertiesPtrOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesPtrOutput {
	return o
}

func (o SsmInstanceInformationPropertiesPtrOutput) Elem() SsmInstanceInformationPropertiesOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) SsmInstanceInformationProperties {
		if v != nil {
			return *v
		}
		var ret SsmInstanceInformationProperties
		return ret
	}).(SsmInstanceInformationPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SsmInstanceInformationPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmInstanceInformationPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmInstanceInformationPropertiesPtrOutput) AwsProperties() AwsSsmInstanceInformationPropertiesPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *AwsSsmInstanceInformationProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSsmInstanceInformationPropertiesPtrOutput)
}

// AWS Region
func (o SsmInstanceInformationPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmInstanceInformationPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmInstanceInformationPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmInstanceInformationPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmInstanceInformationPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmInstanceInformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SsmInstanceInformation
type SsmInstanceInformationPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmInstanceInformationPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SsmInstanceInformation
type SsmInstanceInformationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SsmInstanceInformationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmInstanceInformationPropertiesResponse)(nil)).Elem()
}

func (o SsmInstanceInformationPropertiesResponseOutput) ToSsmInstanceInformationPropertiesResponseOutput() SsmInstanceInformationPropertiesResponseOutput {
	return o
}

func (o SsmInstanceInformationPropertiesResponseOutput) ToSsmInstanceInformationPropertiesResponseOutputWithContext(ctx context.Context) SsmInstanceInformationPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SsmInstanceInformationPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmInstanceInformationPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmInstanceInformationPropertiesResponseOutput) AwsProperties() AwsSsmInstanceInformationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *AwsSsmInstanceInformationPropertiesResponse {
		return v.AwsProperties
	}).(AwsSsmInstanceInformationPropertiesResponsePtrOutput)
}

// AWS Region
func (o SsmInstanceInformationPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmInstanceInformationPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmInstanceInformationPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SsmInstanceInformationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmInstanceInformationPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmInstanceInformationPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmInstanceInformationPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SsmParameter
type SsmParameterProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmParameterProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SsmParameterPropertiesInput is an input type that accepts SsmParameterPropertiesArgs and SsmParameterPropertiesOutput values.
// You can construct a concrete instance of `SsmParameterPropertiesInput` via:
//
//	SsmParameterPropertiesArgs{...}
type SsmParameterPropertiesInput interface {
	pulumi.Input

	ToSsmParameterPropertiesOutput() SsmParameterPropertiesOutput
	ToSsmParameterPropertiesOutputWithContext(context.Context) SsmParameterPropertiesOutput
}

// Definition of SsmParameter
type SsmParameterPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSsmParameterPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SsmParameterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmParameterProperties)(nil)).Elem()
}

func (i SsmParameterPropertiesArgs) ToSsmParameterPropertiesOutput() SsmParameterPropertiesOutput {
	return i.ToSsmParameterPropertiesOutputWithContext(context.Background())
}

func (i SsmParameterPropertiesArgs) ToSsmParameterPropertiesOutputWithContext(ctx context.Context) SsmParameterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmParameterPropertiesOutput)
}

func (i SsmParameterPropertiesArgs) ToSsmParameterPropertiesPtrOutput() SsmParameterPropertiesPtrOutput {
	return i.ToSsmParameterPropertiesPtrOutputWithContext(context.Background())
}

func (i SsmParameterPropertiesArgs) ToSsmParameterPropertiesPtrOutputWithContext(ctx context.Context) SsmParameterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmParameterPropertiesOutput).ToSsmParameterPropertiesPtrOutputWithContext(ctx)
}

// SsmParameterPropertiesPtrInput is an input type that accepts SsmParameterPropertiesArgs, SsmParameterPropertiesPtr and SsmParameterPropertiesPtrOutput values.
// You can construct a concrete instance of `SsmParameterPropertiesPtrInput` via:
//
//	        SsmParameterPropertiesArgs{...}
//
//	or:
//
//	        nil
type SsmParameterPropertiesPtrInput interface {
	pulumi.Input

	ToSsmParameterPropertiesPtrOutput() SsmParameterPropertiesPtrOutput
	ToSsmParameterPropertiesPtrOutputWithContext(context.Context) SsmParameterPropertiesPtrOutput
}

type ssmParameterPropertiesPtrType SsmParameterPropertiesArgs

func SsmParameterPropertiesPtr(v *SsmParameterPropertiesArgs) SsmParameterPropertiesPtrInput {
	return (*ssmParameterPropertiesPtrType)(v)
}

func (*ssmParameterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmParameterProperties)(nil)).Elem()
}

func (i *ssmParameterPropertiesPtrType) ToSsmParameterPropertiesPtrOutput() SsmParameterPropertiesPtrOutput {
	return i.ToSsmParameterPropertiesPtrOutputWithContext(context.Background())
}

func (i *ssmParameterPropertiesPtrType) ToSsmParameterPropertiesPtrOutputWithContext(ctx context.Context) SsmParameterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmParameterPropertiesPtrOutput)
}

// Definition of SsmParameter
type SsmParameterPropertiesOutput struct{ *pulumi.OutputState }

func (SsmParameterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmParameterProperties)(nil)).Elem()
}

func (o SsmParameterPropertiesOutput) ToSsmParameterPropertiesOutput() SsmParameterPropertiesOutput {
	return o
}

func (o SsmParameterPropertiesOutput) ToSsmParameterPropertiesOutputWithContext(ctx context.Context) SsmParameterPropertiesOutput {
	return o
}

func (o SsmParameterPropertiesOutput) ToSsmParameterPropertiesPtrOutput() SsmParameterPropertiesPtrOutput {
	return o.ToSsmParameterPropertiesPtrOutputWithContext(context.Background())
}

func (o SsmParameterPropertiesOutput) ToSsmParameterPropertiesPtrOutputWithContext(ctx context.Context) SsmParameterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsmParameterProperties) *SsmParameterProperties {
		return &v
	}).(SsmParameterPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SsmParameterPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmParameterPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmParameterPropertiesOutput) AwsProperties() AwsSsmParameterPropertiesPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *AwsSsmParameterProperties { return v.AwsProperties }).(AwsSsmParameterPropertiesPtrOutput)
}

// AWS Region
func (o SsmParameterPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmParameterPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmParameterPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmParameterProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmParameterPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmParameterPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SsmParameterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SsmParameterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmParameterProperties)(nil)).Elem()
}

func (o SsmParameterPropertiesPtrOutput) ToSsmParameterPropertiesPtrOutput() SsmParameterPropertiesPtrOutput {
	return o
}

func (o SsmParameterPropertiesPtrOutput) ToSsmParameterPropertiesPtrOutputWithContext(ctx context.Context) SsmParameterPropertiesPtrOutput {
	return o
}

func (o SsmParameterPropertiesPtrOutput) Elem() SsmParameterPropertiesOutput {
	return o.ApplyT(func(v *SsmParameterProperties) SsmParameterProperties {
		if v != nil {
			return *v
		}
		var ret SsmParameterProperties
		return ret
	}).(SsmParameterPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SsmParameterPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmParameterPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmParameterPropertiesPtrOutput) AwsProperties() AwsSsmParameterPropertiesPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *AwsSsmParameterProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSsmParameterPropertiesPtrOutput)
}

// AWS Region
func (o SsmParameterPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmParameterPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmParameterPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SsmParameterProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmParameterPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmParameterPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmParameterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SsmParameter
type SsmParameterPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmParameterPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SsmParameter
type SsmParameterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SsmParameterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmParameterPropertiesResponse)(nil)).Elem()
}

func (o SsmParameterPropertiesResponseOutput) ToSsmParameterPropertiesResponseOutput() SsmParameterPropertiesResponseOutput {
	return o
}

func (o SsmParameterPropertiesResponseOutput) ToSsmParameterPropertiesResponseOutputWithContext(ctx context.Context) SsmParameterPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SsmParameterPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmParameterPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmParameterPropertiesResponseOutput) AwsProperties() AwsSsmParameterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *AwsSsmParameterPropertiesResponse { return v.AwsProperties }).(AwsSsmParameterPropertiesResponsePtrOutput)
}

// AWS Region
func (o SsmParameterPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmParameterPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmParameterPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SsmParameterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmParameterPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmParameterPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmResourceComplianceSummaryItemProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SsmResourceComplianceSummaryItemPropertiesInput is an input type that accepts SsmResourceComplianceSummaryItemPropertiesArgs and SsmResourceComplianceSummaryItemPropertiesOutput values.
// You can construct a concrete instance of `SsmResourceComplianceSummaryItemPropertiesInput` via:
//
//	SsmResourceComplianceSummaryItemPropertiesArgs{...}
type SsmResourceComplianceSummaryItemPropertiesInput interface {
	pulumi.Input

	ToSsmResourceComplianceSummaryItemPropertiesOutput() SsmResourceComplianceSummaryItemPropertiesOutput
	ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(context.Context) SsmResourceComplianceSummaryItemPropertiesOutput
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSsmResourceComplianceSummaryItemPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SsmResourceComplianceSummaryItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesOutput() SsmResourceComplianceSummaryItemPropertiesOutput {
	return i.ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(context.Background())
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmResourceComplianceSummaryItemPropertiesOutput)
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return i.ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Background())
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmResourceComplianceSummaryItemPropertiesOutput).ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx)
}

// SsmResourceComplianceSummaryItemPropertiesPtrInput is an input type that accepts SsmResourceComplianceSummaryItemPropertiesArgs, SsmResourceComplianceSummaryItemPropertiesPtr and SsmResourceComplianceSummaryItemPropertiesPtrOutput values.
// You can construct a concrete instance of `SsmResourceComplianceSummaryItemPropertiesPtrInput` via:
//
//	        SsmResourceComplianceSummaryItemPropertiesArgs{...}
//
//	or:
//
//	        nil
type SsmResourceComplianceSummaryItemPropertiesPtrInput interface {
	pulumi.Input

	ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput
	ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput
}

type ssmResourceComplianceSummaryItemPropertiesPtrType SsmResourceComplianceSummaryItemPropertiesArgs

func SsmResourceComplianceSummaryItemPropertiesPtr(v *SsmResourceComplianceSummaryItemPropertiesArgs) SsmResourceComplianceSummaryItemPropertiesPtrInput {
	return (*ssmResourceComplianceSummaryItemPropertiesPtrType)(v)
}

func (*ssmResourceComplianceSummaryItemPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (i *ssmResourceComplianceSummaryItemPropertiesPtrType) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return i.ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Background())
}

func (i *ssmResourceComplianceSummaryItemPropertiesPtrType) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesOutput struct{ *pulumi.OutputState }

func (SsmResourceComplianceSummaryItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesOutput() SsmResourceComplianceSummaryItemPropertiesOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Background())
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsmResourceComplianceSummaryItemProperties) *SsmResourceComplianceSummaryItemProperties {
		return &v
	}).(SsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SsmResourceComplianceSummaryItemPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsProperties() AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *AwsSsmResourceComplianceSummaryItemProperties {
		return v.AwsProperties
	}).(AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// AWS Region
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmResourceComplianceSummaryItemPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmResourceComplianceSummaryItemPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SsmResourceComplianceSummaryItemPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SsmResourceComplianceSummaryItemPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) Elem() SsmResourceComplianceSummaryItemPropertiesOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) SsmResourceComplianceSummaryItemProperties {
		if v != nil {
			return *v
		}
		var ret SsmResourceComplianceSummaryItemProperties
		return ret
	}).(SsmResourceComplianceSummaryItemPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsProperties() AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *AwsSsmResourceComplianceSummaryItemProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// AWS Region
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmResourceComplianceSummaryItemPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SsmResourceComplianceSummaryItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmResourceComplianceSummaryItemPropertiesResponse)(nil)).Elem()
}

func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) ToSsmResourceComplianceSummaryItemPropertiesResponseOutput() SsmResourceComplianceSummaryItemPropertiesResponseOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) ToSsmResourceComplianceSummaryItemPropertiesResponseOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsProperties() AwsSsmResourceComplianceSummaryItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *AwsSsmResourceComplianceSummaryItemPropertiesResponse {
		return v.AwsProperties
	}).(AwsSsmResourceComplianceSummaryItemPropertiesResponsePtrOutput)
}

// AWS Region
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of StackInstances
type StackInstances struct {
	// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
	DeploymentTargets *DeploymentTargets `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides []Parameter `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions []string `pulumi:"regions"`
}

// StackInstancesInput is an input type that accepts StackInstancesArgs and StackInstancesOutput values.
// You can construct a concrete instance of `StackInstancesInput` via:
//
//	StackInstancesArgs{...}
type StackInstancesInput interface {
	pulumi.Input

	ToStackInstancesOutput() StackInstancesOutput
	ToStackInstancesOutputWithContext(context.Context) StackInstancesOutput
}

// Definition of StackInstances
type StackInstancesArgs struct {
	// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
	DeploymentTargets DeploymentTargetsPtrInput `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides ParameterArrayInput `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (StackInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstances)(nil)).Elem()
}

func (i StackInstancesArgs) ToStackInstancesOutput() StackInstancesOutput {
	return i.ToStackInstancesOutputWithContext(context.Background())
}

func (i StackInstancesArgs) ToStackInstancesOutputWithContext(ctx context.Context) StackInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackInstancesOutput)
}

// StackInstancesArrayInput is an input type that accepts StackInstancesArray and StackInstancesArrayOutput values.
// You can construct a concrete instance of `StackInstancesArrayInput` via:
//
//	StackInstancesArray{ StackInstancesArgs{...} }
type StackInstancesArrayInput interface {
	pulumi.Input

	ToStackInstancesArrayOutput() StackInstancesArrayOutput
	ToStackInstancesArrayOutputWithContext(context.Context) StackInstancesArrayOutput
}

type StackInstancesArray []StackInstancesInput

func (StackInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstances)(nil)).Elem()
}

func (i StackInstancesArray) ToStackInstancesArrayOutput() StackInstancesArrayOutput {
	return i.ToStackInstancesArrayOutputWithContext(context.Background())
}

func (i StackInstancesArray) ToStackInstancesArrayOutputWithContext(ctx context.Context) StackInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackInstancesArrayOutput)
}

// Definition of StackInstances
type StackInstancesOutput struct{ *pulumi.OutputState }

func (StackInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstances)(nil)).Elem()
}

func (o StackInstancesOutput) ToStackInstancesOutput() StackInstancesOutput {
	return o
}

func (o StackInstancesOutput) ToStackInstancesOutputWithContext(ctx context.Context) StackInstancesOutput {
	return o
}

// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
func (o StackInstancesOutput) DeploymentTargets() DeploymentTargetsPtrOutput {
	return o.ApplyT(func(v StackInstances) *DeploymentTargets { return v.DeploymentTargets }).(DeploymentTargetsPtrOutput)
}

// A list of stack set parameters whose values you want to override in the selected stack instances.
func (o StackInstancesOutput) ParameterOverrides() ParameterArrayOutput {
	return o.ApplyT(func(v StackInstances) []Parameter { return v.ParameterOverrides }).(ParameterArrayOutput)
}

// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
func (o StackInstancesOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackInstances) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type StackInstancesArrayOutput struct{ *pulumi.OutputState }

func (StackInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstances)(nil)).Elem()
}

func (o StackInstancesArrayOutput) ToStackInstancesArrayOutput() StackInstancesArrayOutput {
	return o
}

func (o StackInstancesArrayOutput) ToStackInstancesArrayOutputWithContext(ctx context.Context) StackInstancesArrayOutput {
	return o
}

func (o StackInstancesArrayOutput) Index(i pulumi.IntInput) StackInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackInstances {
		return vs[0].([]StackInstances)[vs[1].(int)]
	}).(StackInstancesOutput)
}

func init() {
	pulumi.RegisterOutputType(LoggingFilterModelPropertiesOutput{})
	pulumi.RegisterOutputType(LoggingFilterModelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LoggingFilterModelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LoggingFilterModelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LoggingPropertiesOutput{})
	pulumi.RegisterOutputType(LoggingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LoggingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LoggingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LoggingResponseOutput{})
	pulumi.RegisterOutputType(LoggingResponsePtrOutput{})
	pulumi.RegisterOutputType(LogsConfigOutput{})
	pulumi.RegisterOutputType(LogsConfigPtrOutput{})
	pulumi.RegisterOutputType(LogsConfigResponseOutput{})
	pulumi.RegisterOutputType(LogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(LogsConfigStatusTypeEnumValueOutput{})
	pulumi.RegisterOutputType(LogsConfigStatusTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(LogsConfigStatusTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(LogsConfigStatusTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(LogsLogGroupPropertiesOutput{})
	pulumi.RegisterOutputType(LogsLogGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LogsLogGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LogsLogStreamPropertiesOutput{})
	pulumi.RegisterOutputType(LogsLogStreamPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LogsLogStreamPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LogsMetricFilterPropertiesOutput{})
	pulumi.RegisterOutputType(LogsMetricFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LogsMetricFilterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LogsSubscriptionFilterPropertiesOutput{})
	pulumi.RegisterOutputType(LogsSubscriptionFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LogsSubscriptionFilterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(Macie2JobSummaryPropertiesOutput{})
	pulumi.RegisterOutputType(Macie2JobSummaryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(Macie2JobSummaryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MacieAllowListPropertiesOutput{})
	pulumi.RegisterOutputType(MacieAllowListPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MacieAllowListPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MasterUserSecretOutput{})
	pulumi.RegisterOutputType(MasterUserSecretPtrOutput{})
	pulumi.RegisterOutputType(MasterUserSecretResponseOutput{})
	pulumi.RegisterOutputType(MasterUserSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(MatchAttributesOutput{})
	pulumi.RegisterOutputType(MatchAttributesPtrOutput{})
	pulumi.RegisterOutputType(MatchAttributesResponseOutput{})
	pulumi.RegisterOutputType(MatchAttributesResponsePtrOutput{})
	pulumi.RegisterOutputType(MatcherOutput{})
	pulumi.RegisterOutputType(MatcherPtrOutput{})
	pulumi.RegisterOutputType(MatcherResponseOutput{})
	pulumi.RegisterOutputType(MatcherResponsePtrOutput{})
	pulumi.RegisterOutputType(MaxAgeRuleOutput{})
	pulumi.RegisterOutputType(MaxAgeRulePtrOutput{})
	pulumi.RegisterOutputType(MaxAgeRuleResponseOutput{})
	pulumi.RegisterOutputType(MaxAgeRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(MaxCountRuleOutput{})
	pulumi.RegisterOutputType(MaxCountRulePtrOutput{})
	pulumi.RegisterOutputType(MaxCountRuleResponseOutput{})
	pulumi.RegisterOutputType(MaxCountRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(MaximumExecutionFrequencyEnumValueOutput{})
	pulumi.RegisterOutputType(MaximumExecutionFrequencyEnumValuePtrOutput{})
	pulumi.RegisterOutputType(MaximumExecutionFrequencyEnumValueResponseOutput{})
	pulumi.RegisterOutputType(MaximumExecutionFrequencyEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(MemoryGiBPerVCpuRequestOutput{})
	pulumi.RegisterOutputType(MemoryGiBPerVCpuRequestPtrOutput{})
	pulumi.RegisterOutputType(MemoryGiBPerVCpuRequestResponseOutput{})
	pulumi.RegisterOutputType(MemoryGiBPerVCpuRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(MemoryMiBRequestOutput{})
	pulumi.RegisterOutputType(MemoryMiBRequestPtrOutput{})
	pulumi.RegisterOutputType(MemoryMiBRequestResponseOutput{})
	pulumi.RegisterOutputType(MemoryMiBRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(MethodSettingOutput{})
	pulumi.RegisterOutputType(MethodSettingArrayOutput{})
	pulumi.RegisterOutputType(MethodSettingResponseOutput{})
	pulumi.RegisterOutputType(MethodSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricOutput{})
	pulumi.RegisterOutputType(MetricPtrOutput{})
	pulumi.RegisterOutputType(MetricDataQueryOutput{})
	pulumi.RegisterOutputType(MetricDataQueryArrayOutput{})
	pulumi.RegisterOutputType(MetricDataQueryResponseOutput{})
	pulumi.RegisterOutputType(MetricDataQueryResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricResponseOutput{})
	pulumi.RegisterOutputType(MetricResponsePtrOutput{})
	pulumi.RegisterOutputType(MetricStatOutput{})
	pulumi.RegisterOutputType(MetricStatPtrOutput{})
	pulumi.RegisterOutputType(MetricStatResponseOutput{})
	pulumi.RegisterOutputType(MetricStatResponsePtrOutput{})
	pulumi.RegisterOutputType(MetricTransformationOutput{})
	pulumi.RegisterOutputType(MetricTransformationArrayOutput{})
	pulumi.RegisterOutputType(MetricTransformationResponseOutput{})
	pulumi.RegisterOutputType(MetricTransformationResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricsOutput{})
	pulumi.RegisterOutputType(MetricsPtrOutput{})
	pulumi.RegisterOutputType(MetricsCollectionOutput{})
	pulumi.RegisterOutputType(MetricsCollectionArrayOutput{})
	pulumi.RegisterOutputType(MetricsCollectionResponseOutput{})
	pulumi.RegisterOutputType(MetricsCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricsConfigurationOutput{})
	pulumi.RegisterOutputType(MetricsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MetricsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(MetricsConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricsResponseOutput{})
	pulumi.RegisterOutputType(MetricsResponsePtrOutput{})
	pulumi.RegisterOutputType(MitigationInEffectEnumEnumValueOutput{})
	pulumi.RegisterOutputType(MitigationInEffectEnumEnumValuePtrOutput{})
	pulumi.RegisterOutputType(MitigationInEffectEnumEnumValueResponseOutput{})
	pulumi.RegisterOutputType(MitigationInEffectEnumEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(MixedInstancesPolicyOutput{})
	pulumi.RegisterOutputType(MixedInstancesPolicyPtrOutput{})
	pulumi.RegisterOutputType(MixedInstancesPolicyResponseOutput{})
	pulumi.RegisterOutputType(MixedInstancesPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ModifyingPropertiesOutput{})
	pulumi.RegisterOutputType(ModifyingPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ModifyingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ModifyingPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(MonitoringOutput{})
	pulumi.RegisterOutputType(MonitoringPtrOutput{})
	pulumi.RegisterOutputType(MonitoringResponseOutput{})
	pulumi.RegisterOutputType(MonitoringResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitoringStateEnumValueOutput{})
	pulumi.RegisterOutputType(MonitoringStateEnumValuePtrOutput{})
	pulumi.RegisterOutputType(MonitoringStateEnumValueResponseOutput{})
	pulumi.RegisterOutputType(MonitoringStateEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(MonthlyTransferOutput{})
	pulumi.RegisterOutputType(MonthlyTransferPtrOutput{})
	pulumi.RegisterOutputType(MonthlyTransferResponseOutput{})
	pulumi.RegisterOutputType(MonthlyTransferResponsePtrOutput{})
	pulumi.RegisterOutputType(MountPointOutput{})
	pulumi.RegisterOutputType(MountPointArrayOutput{})
	pulumi.RegisterOutputType(MountPointResponseOutput{})
	pulumi.RegisterOutputType(MountPointResponseArrayOutput{})
	pulumi.RegisterOutputType(MutualAuthenticationOutput{})
	pulumi.RegisterOutputType(MutualAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(MutualAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(MutualAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkBandwidthGbpsRequestOutput{})
	pulumi.RegisterOutputType(NetworkBandwidthGbpsRequestPtrOutput{})
	pulumi.RegisterOutputType(NetworkBandwidthGbpsRequestResponseOutput{})
	pulumi.RegisterOutputType(NetworkBandwidthGbpsRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkFirewallFirewallPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(NetworkFirewallFirewallPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(NetworkFirewallFirewallPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkFirewallFirewallPropertiesOutput{})
	pulumi.RegisterOutputType(NetworkFirewallFirewallPropertiesPtrOutput{})
	pulumi.RegisterOutputType(NetworkFirewallFirewallPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkFirewallRuleGroupPropertiesOutput{})
	pulumi.RegisterOutputType(NetworkFirewallRuleGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(NetworkFirewallRuleGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceCountRequestOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceCountRequestPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceCountRequestResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceCountRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusEnumValueOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkingOutput{})
	pulumi.RegisterOutputType(NetworkingPtrOutput{})
	pulumi.RegisterOutputType(NetworkingResponseOutput{})
	pulumi.RegisterOutputType(NetworkingResponsePtrOutput{})
	pulumi.RegisterOutputType(NodeOutput{})
	pulumi.RegisterOutputType(NodeArrayOutput{})
	pulumi.RegisterOutputType(NodeResponseOutput{})
	pulumi.RegisterOutputType(NodeResponseArrayOutput{})
	pulumi.RegisterOutputType(NodeToNodeEncryptionOptionsOutput{})
	pulumi.RegisterOutputType(NodeToNodeEncryptionOptionsPtrOutput{})
	pulumi.RegisterOutputType(NodeToNodeEncryptionOptionsResponseOutput{})
	pulumi.RegisterOutputType(NodeToNodeEncryptionOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(NonCompliantSummaryOutput{})
	pulumi.RegisterOutputType(NonCompliantSummaryPtrOutput{})
	pulumi.RegisterOutputType(NonCompliantSummaryResponseOutput{})
	pulumi.RegisterOutputType(NonCompliantSummaryResponsePtrOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionExpirationResponseOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionExpirationResponsePtrOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionTransitionPtrOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionTransitionResponseOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionTransitionResponsePtrOutput{})
	pulumi.RegisterOutputType(NoncurrentVersionTransitionResponseArrayOutput{})
	pulumi.RegisterOutputType(NotebookInstanceStatusEnumValueOutput{})
	pulumi.RegisterOutputType(NotebookInstanceStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(NotebookInstanceStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(NotebookInstanceStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationConfigurationOutput{})
	pulumi.RegisterOutputType(NotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NotificationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NotificationConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NotificationConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NotificationFilterOutput{})
	pulumi.RegisterOutputType(NotificationFilterPtrOutput{})
	pulumi.RegisterOutputType(NotificationFilterResponseOutput{})
	pulumi.RegisterOutputType(NotificationFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(OIDCOutput{})
	pulumi.RegisterOutputType(OIDCPtrOutput{})
	pulumi.RegisterOutputType(OIDCResponseOutput{})
	pulumi.RegisterOutputType(OIDCResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectLockConfigurationOutput{})
	pulumi.RegisterOutputType(ObjectLockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ObjectLockConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ObjectLockConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectLockRuleOutput{})
	pulumi.RegisterOutputType(ObjectLockRulePtrOutput{})
	pulumi.RegisterOutputType(ObjectLockRuleResponseOutput{})
	pulumi.RegisterOutputType(ObjectLockRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(OffPeakWindowOutput{})
	pulumi.RegisterOutputType(OffPeakWindowPtrOutput{})
	pulumi.RegisterOutputType(OffPeakWindowOptionsOutput{})
	pulumi.RegisterOutputType(OffPeakWindowOptionsPtrOutput{})
	pulumi.RegisterOutputType(OffPeakWindowOptionsResponseOutput{})
	pulumi.RegisterOutputType(OffPeakWindowOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(OffPeakWindowResponseOutput{})
	pulumi.RegisterOutputType(OffPeakWindowResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIDConnectConfigOutput{})
	pulumi.RegisterOutputType(OpenIDConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(OpenIDConnectConfigResponseOutput{})
	pulumi.RegisterOutputType(OpenIDConnectConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenSearchDomainStatusPropertiesOutput{})
	pulumi.RegisterOutputType(OpenSearchDomainStatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OpenSearchDomainStatusPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OpenSearchPartitionInstanceTypeEnumValueOutput{})
	pulumi.RegisterOutputType(OpenSearchPartitionInstanceTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(OpenSearchPartitionInstanceTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(OpenSearchPartitionInstanceTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenSearchWarmPartitionInstanceTypeEnumValueOutput{})
	pulumi.RegisterOutputType(OpenSearchWarmPartitionInstanceTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(OpenSearchWarmPartitionInstanceTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(OpenSearchWarmPartitionInstanceTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(OperationLevelMetricsConfigEnumValueOutput{})
	pulumi.RegisterOutputType(OperationLevelMetricsConfigEnumValuePtrOutput{})
	pulumi.RegisterOutputType(OperationLevelMetricsConfigEnumValueResponseOutput{})
	pulumi.RegisterOutputType(OperationLevelMetricsConfigEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(OperationPreferencesOutput{})
	pulumi.RegisterOutputType(OperationPreferencesPtrOutput{})
	pulumi.RegisterOutputType(OperationPreferencesResponseOutput{})
	pulumi.RegisterOutputType(OperationPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(OptionSettingOutput{})
	pulumi.RegisterOutputType(OptionSettingArrayOutput{})
	pulumi.RegisterOutputType(OptionSettingResponseOutput{})
	pulumi.RegisterOutputType(OptionSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(OrganizationsAccountPropertiesOutput{})
	pulumi.RegisterOutputType(OrganizationsAccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OrganizationsAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OrganizationsOrganizationPropertiesOutput{})
	pulumi.RegisterOutputType(OrganizationsOrganizationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OrganizationsOrganizationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OriginCustomHeaderResponseOutput{})
	pulumi.RegisterOutputType(OriginCustomHeaderResponseArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupOutput{})
	pulumi.RegisterOutputType(OriginGroupArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupFailoverCriteriaOutput{})
	pulumi.RegisterOutputType(OriginGroupFailoverCriteriaPtrOutput{})
	pulumi.RegisterOutputType(OriginGroupFailoverCriteriaResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupFailoverCriteriaResponsePtrOutput{})
	pulumi.RegisterOutputType(OriginGroupMemberOutput{})
	pulumi.RegisterOutputType(OriginGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupMemberResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupMemberResponseArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupMembersOutput{})
	pulumi.RegisterOutputType(OriginGroupMembersPtrOutput{})
	pulumi.RegisterOutputType(OriginGroupMembersResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupMembersResponsePtrOutput{})
	pulumi.RegisterOutputType(OriginGroupResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupsOutput{})
	pulumi.RegisterOutputType(OriginGroupsPtrOutput{})
	pulumi.RegisterOutputType(OriginGroupsResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupsResponsePtrOutput{})
	pulumi.RegisterOutputType(OriginResponseOutput{})
	pulumi.RegisterOutputType(OriginResponseArrayOutput{})
	pulumi.RegisterOutputType(OriginShieldResponseOutput{})
	pulumi.RegisterOutputType(OriginShieldResponsePtrOutput{})
	pulumi.RegisterOutputType(OutpostConfigResponseOutput{})
	pulumi.RegisterOutputType(OutpostConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(OutpostConfigResponseResponseOutput{})
	pulumi.RegisterOutputType(OutpostConfigResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(OutputOutput{})
	pulumi.RegisterOutputType(OutputArrayOutput{})
	pulumi.RegisterOutputType(OutputResponseOutput{})
	pulumi.RegisterOutputType(OutputResponseArrayOutput{})
	pulumi.RegisterOutputType(OwnerOutput{})
	pulumi.RegisterOutputType(OwnerPtrOutput{})
	pulumi.RegisterOutputType(OwnerResponseOutput{})
	pulumi.RegisterOutputType(OwnerResponsePtrOutput{})
	pulumi.RegisterOutputType(OwnershipControlsOutput{})
	pulumi.RegisterOutputType(OwnershipControlsPtrOutput{})
	pulumi.RegisterOutputType(OwnershipControlsResponseOutput{})
	pulumi.RegisterOutputType(OwnershipControlsResponsePtrOutput{})
	pulumi.RegisterOutputType(OwnershipControlsRuleOutput{})
	pulumi.RegisterOutputType(OwnershipControlsRuleArrayOutput{})
	pulumi.RegisterOutputType(OwnershipControlsRuleResponseOutput{})
	pulumi.RegisterOutputType(OwnershipControlsRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ParameterOutput{})
	pulumi.RegisterOutputType(ParameterArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupStatusOutput{})
	pulumi.RegisterOutputType(ParameterGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(ParameterGroupStatusResponseOutput{})
	pulumi.RegisterOutputType(ParameterGroupStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ParameterResponseOutput{})
	pulumi.RegisterOutputType(ParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(PartitionedPrefixOutput{})
	pulumi.RegisterOutputType(PartitionedPrefixPtrOutput{})
	pulumi.RegisterOutputType(PartitionedPrefixResponseOutput{})
	pulumi.RegisterOutputType(PartitionedPrefixResponsePtrOutput{})
	pulumi.RegisterOutputType(PermissionEnumValueOutput{})
	pulumi.RegisterOutputType(PermissionEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PermissionEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PermissionEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(PingStatusEnumValueOutput{})
	pulumi.RegisterOutputType(PingStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PingStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PingStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(PlacementOutput{})
	pulumi.RegisterOutputType(PlacementPtrOutput{})
	pulumi.RegisterOutputType(PlacementConstraintOutput{})
	pulumi.RegisterOutputType(PlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(PlacementConstraintResponseOutput{})
	pulumi.RegisterOutputType(PlacementConstraintResponseArrayOutput{})
	pulumi.RegisterOutputType(PlacementGroupConfigOutput{})
	pulumi.RegisterOutputType(PlacementGroupConfigArrayOutput{})
	pulumi.RegisterOutputType(PlacementGroupConfigResponseOutput{})
	pulumi.RegisterOutputType(PlacementGroupConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(PlacementGroupStrategyEnumValueOutput{})
	pulumi.RegisterOutputType(PlacementGroupStrategyEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PlacementGroupStrategyEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PlacementGroupStrategyEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(PlacementResponseOutput{})
	pulumi.RegisterOutputType(PlacementResponsePtrOutput{})
	pulumi.RegisterOutputType(PlacementStrategyOutput{})
	pulumi.RegisterOutputType(PlacementStrategyArrayOutput{})
	pulumi.RegisterOutputType(PlacementStrategyResponseOutput{})
	pulumi.RegisterOutputType(PlacementStrategyResponseArrayOutput{})
	pulumi.RegisterOutputType(PlatformTypeEnumValueOutput{})
	pulumi.RegisterOutputType(PlatformTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PlatformTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PlatformTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(PlatformValuesEnumValueOutput{})
	pulumi.RegisterOutputType(PlatformValuesEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PlatformValuesEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PlatformValuesEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryDescriptionOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryDescriptionPtrOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryDescriptionResponseOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoverySpecificationOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoverySpecificationPtrOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoverySpecificationResponseOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoverySpecificationResponsePtrOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryStatusEnumValueOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PointInTimeRecoveryStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyOutput{})
	pulumi.RegisterOutputType(PolicyArrayOutput{})
	pulumi.RegisterOutputType(PolicyResponseOutput{})
	pulumi.RegisterOutputType(PolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(PortOutput{})
	pulumi.RegisterOutputType(PortArrayOutput{})
	pulumi.RegisterOutputType(PortMappingOutput{})
	pulumi.RegisterOutputType(PortMappingArrayOutput{})
	pulumi.RegisterOutputType(PortMappingResponseOutput{})
	pulumi.RegisterOutputType(PortMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(PortRangeOutput{})
	pulumi.RegisterOutputType(PortRangeArrayOutput{})
	pulumi.RegisterOutputType(PortRangeResponseOutput{})
	pulumi.RegisterOutputType(PortRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(PortResponseOutput{})
	pulumi.RegisterOutputType(PortResponseArrayOutput{})
	pulumi.RegisterOutputType(PortSetOutput{})
	pulumi.RegisterOutputType(PortSetMapOutput{})
	pulumi.RegisterOutputType(PortSetResponseOutput{})
	pulumi.RegisterOutputType(PortSetResponseMapOutput{})
	pulumi.RegisterOutputType(PrefixListIdOutput{})
	pulumi.RegisterOutputType(PrefixListIdArrayOutput{})
	pulumi.RegisterOutputType(PrefixListIdResponseOutput{})
	pulumi.RegisterOutputType(PrefixListIdResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsOnLaunchModelPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsOnLaunchModelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsOnLaunchModelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsOnLaunchModelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsResponseOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsResponseResponseOutput{})
	pulumi.RegisterOutputType(PrivateDnsNameOptionsResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateIpAddressSpecificationOutput{})
	pulumi.RegisterOutputType(PrivateIpAddressSpecificationArrayOutput{})
	pulumi.RegisterOutputType(PrivateIpAddressSpecificationResponseOutput{})
	pulumi.RegisterOutputType(PrivateIpAddressSpecificationResponseArrayOutput{})
	pulumi.RegisterOutputType(ProcessorFeatureOutput{})
	pulumi.RegisterOutputType(ProcessorFeatureArrayOutput{})
	pulumi.RegisterOutputType(ProcessorFeatureResponseOutput{})
	pulumi.RegisterOutputType(ProcessorFeatureResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductCodeOutput{})
	pulumi.RegisterOutputType(ProductCodeArrayOutput{})
	pulumi.RegisterOutputType(ProductCodeResponseOutput{})
	pulumi.RegisterOutputType(ProductCodeResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductCodeValuesEnumValueOutput{})
	pulumi.RegisterOutputType(ProductCodeValuesEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ProductCodeValuesEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ProductCodeValuesEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsPtrOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsArrayOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsResponseOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsResponseArrayOutput{})
	pulumi.RegisterOutputType(ProjectBadgeOutput{})
	pulumi.RegisterOutputType(ProjectBadgePtrOutput{})
	pulumi.RegisterOutputType(ProjectBadgeResponseOutput{})
	pulumi.RegisterOutputType(ProjectBadgeResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigResponseOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectCacheOutput{})
	pulumi.RegisterOutputType(ProjectCachePtrOutput{})
	pulumi.RegisterOutputType(ProjectCacheResponseOutput{})
	pulumi.RegisterOutputType(ProjectCacheResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentResponseOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectFileSystemLocationOutput{})
	pulumi.RegisterOutputType(ProjectFileSystemLocationArrayOutput{})
	pulumi.RegisterOutputType(ProjectFileSystemLocationResponseOutput{})
	pulumi.RegisterOutputType(ProjectFileSystemLocationResponseArrayOutput{})
	pulumi.RegisterOutputType(ProjectFleetOutput{})
	pulumi.RegisterOutputType(ProjectFleetPtrOutput{})
	pulumi.RegisterOutputType(ProjectFleetResponseOutput{})
	pulumi.RegisterOutputType(ProjectFleetResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectSourceOutput{})
	pulumi.RegisterOutputType(ProjectSourcePtrOutput{})
	pulumi.RegisterOutputType(ProjectSourceArrayOutput{})
	pulumi.RegisterOutputType(ProjectSourceResponseOutput{})
	pulumi.RegisterOutputType(ProjectSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectSourceResponseArrayOutput{})
	pulumi.RegisterOutputType(ProjectSourceVersionOutput{})
	pulumi.RegisterOutputType(ProjectSourceVersionArrayOutput{})
	pulumi.RegisterOutputType(ProjectSourceVersionResponseOutput{})
	pulumi.RegisterOutputType(ProjectSourceVersionResponseArrayOutput{})
	pulumi.RegisterOutputType(ProjectVisibilityTypeEnumValueOutput{})
	pulumi.RegisterOutputType(ProjectVisibilityTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ProjectVisibilityTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ProjectVisibilityTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectionOutput{})
	pulumi.RegisterOutputType(ProjectionPtrOutput{})
	pulumi.RegisterOutputType(ProjectionResponseOutput{})
	pulumi.RegisterOutputType(ProjectionResponsePtrOutput{})
	pulumi.RegisterOutputType(PropertyValueTypeEnumValueOutput{})
	pulumi.RegisterOutputType(PropertyValueTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(PropertyValueTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(PropertyValueTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ProposedMultiRegionAccessPointPolicyOutput{})
	pulumi.RegisterOutputType(ProposedMultiRegionAccessPointPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProposedMultiRegionAccessPointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ProposedMultiRegionAccessPointPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderPtrOutput{})
	pulumi.RegisterOutputType(ProviderResponseOutput{})
	pulumi.RegisterOutputType(ProviderResponsePtrOutput{})
	pulumi.RegisterOutputType(ProvisionedThroughputOutput{})
	pulumi.RegisterOutputType(ProvisionedThroughputPtrOutput{})
	pulumi.RegisterOutputType(ProvisionedThroughputResponseOutput{})
	pulumi.RegisterOutputType(ProvisionedThroughputResponsePtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigurationOutput{})
	pulumi.RegisterOutputType(ProxyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ProxyConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicAccessBlockConfigurationOutput{})
	pulumi.RegisterOutputType(PublicAccessBlockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PublicAccessBlockConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PublicAccessBlockConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(PublishMetricActionOutput{})
	pulumi.RegisterOutputType(PublishMetricActionPtrOutput{})
	pulumi.RegisterOutputType(PublishMetricActionResponseOutput{})
	pulumi.RegisterOutputType(PublishMetricActionResponsePtrOutput{})
	pulumi.RegisterOutputType(QueryLoggingConfigOutput{})
	pulumi.RegisterOutputType(QueryLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(QueryLoggingConfigResponseOutput{})
	pulumi.RegisterOutputType(QueryLoggingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(QueueConfigurationOutput{})
	pulumi.RegisterOutputType(QueueConfigurationArrayOutput{})
	pulumi.RegisterOutputType(QueueConfigurationResponseOutput{})
	pulumi.RegisterOutputType(QueueConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(RRTypeEnumValueOutput{})
	pulumi.RegisterOutputType(RRTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(RRTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(RRTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RdsDBClusterPropertiesOutput{})
	pulumi.RegisterOutputType(RdsDBClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RdsDBClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RdsDBInstancePropertiesOutput{})
	pulumi.RegisterOutputType(RdsDBInstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(RdsDBInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(RdsDBSnapshotAttributesResultPropertiesOutput{})
	pulumi.RegisterOutputType(RdsDBSnapshotAttributesResultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RdsDBSnapshotAttributesResultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RdsDBSnapshotPropertiesOutput{})
	pulumi.RegisterOutputType(RdsDBSnapshotPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RdsDBSnapshotPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RdsDbClusterEndpointOutput{})
	pulumi.RegisterOutputType(RdsDbClusterEndpointPtrOutput{})
	pulumi.RegisterOutputType(RdsDbClusterEndpointResponseOutput{})
	pulumi.RegisterOutputType(RdsDbClusterEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(RdsDbInstanceEndpointOutput{})
	pulumi.RegisterOutputType(RdsDbInstanceEndpointPtrOutput{})
	pulumi.RegisterOutputType(RdsDbInstanceEndpointResponseOutput{})
	pulumi.RegisterOutputType(RdsDbInstanceEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(RdsEventSubscriptionPropertiesOutput{})
	pulumi.RegisterOutputType(RdsEventSubscriptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RdsEventSubscriptionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RdsExportTaskPropertiesOutput{})
	pulumi.RegisterOutputType(RdsExportTaskPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RdsExportTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReadEndpointOutput{})
	pulumi.RegisterOutputType(ReadEndpointPtrOutput{})
	pulumi.RegisterOutputType(ReadEndpointResponseOutput{})
	pulumi.RegisterOutputType(ReadEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(RecorderStatusEnumValueOutput{})
	pulumi.RegisterOutputType(RecorderStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(RecorderStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(RecorderStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordingFrequencyEnumValueOutput{})
	pulumi.RegisterOutputType(RecordingFrequencyEnumValuePtrOutput{})
	pulumi.RegisterOutputType(RecordingFrequencyEnumValueResponseOutput{})
	pulumi.RegisterOutputType(RecordingFrequencyEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordingGroupOutput{})
	pulumi.RegisterOutputType(RecordingGroupPtrOutput{})
	pulumi.RegisterOutputType(RecordingGroupResponseOutput{})
	pulumi.RegisterOutputType(RecordingGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordingModeOutput{})
	pulumi.RegisterOutputType(RecordingModePtrOutput{})
	pulumi.RegisterOutputType(RecordingModeOverrideOutput{})
	pulumi.RegisterOutputType(RecordingModeOverrideArrayOutput{})
	pulumi.RegisterOutputType(RecordingModeOverrideResponseOutput{})
	pulumi.RegisterOutputType(RecordingModeOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(RecordingModeResponseOutput{})
	pulumi.RegisterOutputType(RecordingModeResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordingStrategyOutput{})
	pulumi.RegisterOutputType(RecordingStrategyPtrOutput{})
	pulumi.RegisterOutputType(RecordingStrategyResponseOutput{})
	pulumi.RegisterOutputType(RecordingStrategyResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordingStrategyTypeEnumValueOutput{})
	pulumi.RegisterOutputType(RecordingStrategyTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(RecordingStrategyTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(RecordingStrategyTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RedirectAllRequestsToOutput{})
	pulumi.RegisterOutputType(RedirectAllRequestsToPtrOutput{})
	pulumi.RegisterOutputType(RedirectAllRequestsToResponseOutput{})
	pulumi.RegisterOutputType(RedirectAllRequestsToResponsePtrOutput{})
	pulumi.RegisterOutputType(RedirectConfigResponseOutput{})
	pulumi.RegisterOutputType(RedirectConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(RedirectRuleOutput{})
	pulumi.RegisterOutputType(RedirectRulePtrOutput{})
	pulumi.RegisterOutputType(RedirectRuleResponseOutput{})
	pulumi.RegisterOutputType(RedirectRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(RedshiftClusterEndpointOutput{})
	pulumi.RegisterOutputType(RedshiftClusterEndpointPtrOutput{})
	pulumi.RegisterOutputType(RedshiftClusterEndpointResponseOutput{})
	pulumi.RegisterOutputType(RedshiftClusterEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(RedshiftClusterParameterGroupPropertiesOutput{})
	pulumi.RegisterOutputType(RedshiftClusterParameterGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RedshiftClusterParameterGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RedshiftClusterPropertiesOutput{})
	pulumi.RegisterOutputType(RedshiftClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RedshiftClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReferenceSetsOutput{})
	pulumi.RegisterOutputType(ReferenceSetsPtrOutput{})
	pulumi.RegisterOutputType(ReferenceSetsResponseOutput{})
	pulumi.RegisterOutputType(ReferenceSetsResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryCredentialOutput{})
	pulumi.RegisterOutputType(RegistryCredentialPtrOutput{})
	pulumi.RegisterOutputType(RegistryCredentialResponseOutput{})
	pulumi.RegisterOutputType(RegistryCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(RemoteAccessOutput{})
	pulumi.RegisterOutputType(RemoteAccessPtrOutput{})
	pulumi.RegisterOutputType(RemoteAccessResponseOutput{})
	pulumi.RegisterOutputType(RemoteAccessResponsePtrOutput{})
	pulumi.RegisterOutputType(RenewalEligibilityEnumValueOutput{})
	pulumi.RegisterOutputType(RenewalEligibilityEnumValuePtrOutput{})
	pulumi.RegisterOutputType(RenewalEligibilityEnumValueResponseOutput{})
	pulumi.RegisterOutputType(RenewalEligibilityEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicaModificationsOutput{})
	pulumi.RegisterOutputType(ReplicaModificationsPtrOutput{})
	pulumi.RegisterOutputType(ReplicaModificationsResponseOutput{})
	pulumi.RegisterOutputType(ReplicaModificationsResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicaRegionOutput{})
	pulumi.RegisterOutputType(ReplicaRegionArrayOutput{})
	pulumi.RegisterOutputType(ReplicaRegionResponseOutput{})
	pulumi.RegisterOutputType(ReplicaRegionResponseArrayOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationDestinationOutput{})
	pulumi.RegisterOutputType(ReplicationDestinationPtrOutput{})
	pulumi.RegisterOutputType(ReplicationDestinationArrayOutput{})
	pulumi.RegisterOutputType(ReplicationDestinationResponseOutput{})
	pulumi.RegisterOutputType(ReplicationDestinationResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationDestinationResponseArrayOutput{})
	pulumi.RegisterOutputType(ReplicationPendingModifiedValuesOutput{})
	pulumi.RegisterOutputType(ReplicationPendingModifiedValuesPtrOutput{})
	pulumi.RegisterOutputType(ReplicationPendingModifiedValuesResponseOutput{})
	pulumi.RegisterOutputType(ReplicationPendingModifiedValuesResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationRuleOutput{})
	pulumi.RegisterOutputType(ReplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRuleAndOperatorOutput{})
	pulumi.RegisterOutputType(ReplicationRuleAndOperatorPtrOutput{})
	pulumi.RegisterOutputType(ReplicationRuleAndOperatorResponseOutput{})
	pulumi.RegisterOutputType(ReplicationRuleAndOperatorResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationRuleFilterOutput{})
	pulumi.RegisterOutputType(ReplicationRuleFilterPtrOutput{})
	pulumi.RegisterOutputType(ReplicationRuleFilterResponseOutput{})
	pulumi.RegisterOutputType(ReplicationRuleFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(ReplicationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ReplicationSubnetGroupOutput{})
	pulumi.RegisterOutputType(ReplicationSubnetGroupPtrOutput{})
	pulumi.RegisterOutputType(ReplicationSubnetGroupResponseOutput{})
	pulumi.RegisterOutputType(ReplicationSubnetGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationTimeOutput{})
	pulumi.RegisterOutputType(ReplicationTimePtrOutput{})
	pulumi.RegisterOutputType(ReplicationTimeResponseOutput{})
	pulumi.RegisterOutputType(ReplicationTimeResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationTimeValueOutput{})
	pulumi.RegisterOutputType(ReplicationTimeValuePtrOutput{})
	pulumi.RegisterOutputType(ReplicationTimeValueResponseOutput{})
	pulumi.RegisterOutputType(ReplicationTimeValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RepoUpgradeOnBootEnumValueOutput{})
	pulumi.RegisterOutputType(RepoUpgradeOnBootEnumValuePtrOutput{})
	pulumi.RegisterOutputType(RepoUpgradeOnBootEnumValueResponseOutput{})
	pulumi.RegisterOutputType(RepoUpgradeOnBootEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RepositoryCredentialsOutput{})
	pulumi.RegisterOutputType(RepositoryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(RepositoryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(RepositoryCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(ResolverLevelMetricsBehaviorEnumValueOutput{})
	pulumi.RegisterOutputType(ResolverLevelMetricsBehaviorEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ResolverLevelMetricsBehaviorEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ResolverLevelMetricsBehaviorEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyOutput{})
	pulumi.RegisterOutputType(ResourcePolicyPtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyResponseOutput{})
	pulumi.RegisterOutputType(ResourcePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceRecordOutput{})
	pulumi.RegisterOutputType(ResourceRecordArrayOutput{})
	pulumi.RegisterOutputType(ResourceRecordResponseOutput{})
	pulumi.RegisterOutputType(ResourceRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetFailoverEnumValueOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetFailoverEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetFailoverEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetFailoverEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetRegionEnumValueOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetRegionEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetRegionEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ResourceRecordSetRegionEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceRequirementOutput{})
	pulumi.RegisterOutputType(ResourceRequirementArrayOutput{})
	pulumi.RegisterOutputType(ResourceRequirementResponseOutput{})
	pulumi.RegisterOutputType(ResourceRequirementResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceSpecOutput{})
	pulumi.RegisterOutputType(ResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ResourceSpecResponseOutput{})
	pulumi.RegisterOutputType(ResourceSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceTypeEnumValueOutput{})
	pulumi.RegisterOutputType(ResourceTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ResourceTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ResourceTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(RestrictionsOutput{})
	pulumi.RegisterOutputType(RestrictionsPtrOutput{})
	pulumi.RegisterOutputType(RestrictionsResponseOutput{})
	pulumi.RegisterOutputType(RestrictionsResponsePtrOutput{})
	pulumi.RegisterOutputType(Route53DomainsDomainSummaryPropertiesOutput{})
	pulumi.RegisterOutputType(Route53DomainsDomainSummaryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(Route53DomainsDomainSummaryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(Route53HostedZonePropertiesOutput{})
	pulumi.RegisterOutputType(Route53HostedZonePropertiesPtrOutput{})
	pulumi.RegisterOutputType(Route53HostedZonePropertiesResponseOutput{})
	pulumi.RegisterOutputType(Route53ResourceRecordSetPropertiesOutput{})
	pulumi.RegisterOutputType(Route53ResourceRecordSetPropertiesPtrOutput{})
	pulumi.RegisterOutputType(Route53ResourceRecordSetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleOutput{})
	pulumi.RegisterOutputType(RoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleConditionOutput{})
	pulumi.RegisterOutputType(RoutingRuleConditionPtrOutput{})
	pulumi.RegisterOutputType(RoutingRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RuleOutput{})
	pulumi.RegisterOutputType(RuleArrayOutput{})
	pulumi.RegisterOutputType(RuleDefinitionOutput{})
	pulumi.RegisterOutputType(RuleDefinitionPtrOutput{})
	pulumi.RegisterOutputType(RuleDefinitionResponseOutput{})
	pulumi.RegisterOutputType(RuleDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupOutput{})
	pulumi.RegisterOutputType(RuleGroupPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupResponseOutput{})
	pulumi.RegisterOutputType(RuleGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(RuleOptionOutput{})
	pulumi.RegisterOutputType(RuleOptionArrayOutput{})
	pulumi.RegisterOutputType(RuleOptionResponseOutput{})
	pulumi.RegisterOutputType(RuleOptionResponseArrayOutput{})
	pulumi.RegisterOutputType(RuleResponseOutput{})
	pulumi.RegisterOutputType(RuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RuleVariablesOutput{})
	pulumi.RegisterOutputType(RuleVariablesPtrOutput{})
	pulumi.RegisterOutputType(RuleVariablesModelOutput{})
	pulumi.RegisterOutputType(RuleVariablesModelPtrOutput{})
	pulumi.RegisterOutputType(RuleVariablesModelResponseOutput{})
	pulumi.RegisterOutputType(RuleVariablesModelResponsePtrOutput{})
	pulumi.RegisterOutputType(RuleVariablesResponseOutput{})
	pulumi.RegisterOutputType(RuleVariablesResponsePtrOutput{})
	pulumi.RegisterOutputType(RulesSourceOutput{})
	pulumi.RegisterOutputType(RulesSourcePtrOutput{})
	pulumi.RegisterOutputType(RulesSourceListOutput{})
	pulumi.RegisterOutputType(RulesSourceListPtrOutput{})
	pulumi.RegisterOutputType(RulesSourceListResponseOutput{})
	pulumi.RegisterOutputType(RulesSourceListResponsePtrOutput{})
	pulumi.RegisterOutputType(RulesSourceResponseOutput{})
	pulumi.RegisterOutputType(RulesSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(RuntimeManagementConfigOutput{})
	pulumi.RegisterOutputType(RuntimeManagementConfigPtrOutput{})
	pulumi.RegisterOutputType(RuntimeManagementConfigResponseOutput{})
	pulumi.RegisterOutputType(RuntimeManagementConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(RuntimePlatformOutput{})
	pulumi.RegisterOutputType(RuntimePlatformPtrOutput{})
	pulumi.RegisterOutputType(RuntimePlatformResponseOutput{})
	pulumi.RegisterOutputType(RuntimePlatformResponsePtrOutput{})
	pulumi.RegisterOutputType(S3AccessControlPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(S3AccessControlPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(S3AccessControlPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(S3AccessPointPropertiesOutput{})
	pulumi.RegisterOutputType(S3AccessPointPropertiesPtrOutput{})
	pulumi.RegisterOutputType(S3AccessPointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(S3BucketCriteriaForJobOutput{})
	pulumi.RegisterOutputType(S3BucketCriteriaForJobPtrOutput{})
	pulumi.RegisterOutputType(S3BucketCriteriaForJobResponseOutput{})
	pulumi.RegisterOutputType(S3BucketCriteriaForJobResponsePtrOutput{})
	pulumi.RegisterOutputType(S3BucketDefinitionForJobOutput{})
	pulumi.RegisterOutputType(S3BucketDefinitionForJobArrayOutput{})
	pulumi.RegisterOutputType(S3BucketDefinitionForJobResponseOutput{})
	pulumi.RegisterOutputType(S3BucketDefinitionForJobResponseArrayOutput{})
	pulumi.RegisterOutputType(S3BucketPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(S3BucketPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(S3BucketPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(S3BucketPropertiesOutput{})
	pulumi.RegisterOutputType(S3BucketPropertiesPtrOutput{})
	pulumi.RegisterOutputType(S3BucketPropertiesResponseOutput{})
	pulumi.RegisterOutputType(S3BucketSourceOutput{})
	pulumi.RegisterOutputType(S3BucketSourcePtrOutput{})
	pulumi.RegisterOutputType(S3BucketSourceResponseOutput{})
	pulumi.RegisterOutputType(S3BucketSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesOutput{})
	pulumi.RegisterOutputType(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(S3ControlMultiRegionAccessPointPolicyDocumentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(S3KeyFilterOutput{})
	pulumi.RegisterOutputType(S3KeyFilterPtrOutput{})
	pulumi.RegisterOutputType(S3KeyFilterResponseOutput{})
	pulumi.RegisterOutputType(S3KeyFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(S3LocationOutput{})
	pulumi.RegisterOutputType(S3LocationPtrOutput{})
	pulumi.RegisterOutputType(S3LocationResponseOutput{})
	pulumi.RegisterOutputType(S3LocationResponsePtrOutput{})
	pulumi.RegisterOutputType(S3LogsConfigOutput{})
	pulumi.RegisterOutputType(S3LogsConfigPtrOutput{})
	pulumi.RegisterOutputType(S3LogsConfigResponseOutput{})
	pulumi.RegisterOutputType(S3LogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(S3OriginConfigResponseOutput{})
	pulumi.RegisterOutputType(S3OriginConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(S3WordsListOutput{})
	pulumi.RegisterOutputType(S3WordsListPtrOutput{})
	pulumi.RegisterOutputType(S3WordsListResponseOutput{})
	pulumi.RegisterOutputType(S3WordsListResponsePtrOutput{})
	pulumi.RegisterOutputType(SAMLIdpOutput{})
	pulumi.RegisterOutputType(SAMLIdpPtrOutput{})
	pulumi.RegisterOutputType(SAMLIdpResponseOutput{})
	pulumi.RegisterOutputType(SAMLIdpResponsePtrOutput{})
	pulumi.RegisterOutputType(SAMLOptionsOutputOutput{})
	pulumi.RegisterOutputType(SAMLOptionsOutputPtrOutput{})
	pulumi.RegisterOutputType(SAMLOptionsOutputResponseOutput{})
	pulumi.RegisterOutputType(SAMLOptionsOutputResponsePtrOutput{})
	pulumi.RegisterOutputType(SSEDescriptionOutput{})
	pulumi.RegisterOutputType(SSEDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SSEDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SSEDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(SSESpecificationOutput{})
	pulumi.RegisterOutputType(SSESpecificationPtrOutput{})
	pulumi.RegisterOutputType(SSESpecificationResponseOutput{})
	pulumi.RegisterOutputType(SSESpecificationResponsePtrOutput{})
	pulumi.RegisterOutputType(SSEStatusEnumValueOutput{})
	pulumi.RegisterOutputType(SSEStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SSEStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SSEStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SSETypeEnumValueOutput{})
	pulumi.RegisterOutputType(SSETypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SSETypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SSETypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SageMakerAppPropertiesOutput{})
	pulumi.RegisterOutputType(SageMakerAppPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SageMakerAppPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SageMakerNotebookInstanceSummaryPropertiesOutput{})
	pulumi.RegisterOutputType(SageMakerNotebookInstanceSummaryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SageMakerNotebookInstanceSummaryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ScaleDownBehaviorEnumValueOutput{})
	pulumi.RegisterOutputType(ScaleDownBehaviorEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ScaleDownBehaviorEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ScaleDownBehaviorEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ScalingConfigOutput{})
	pulumi.RegisterOutputType(ScalingConfigPtrOutput{})
	pulumi.RegisterOutputType(ScalingConfigResponseOutput{})
	pulumi.RegisterOutputType(ScalingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ScanStatusEnumValueOutput{})
	pulumi.RegisterOutputType(ScanStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ScanStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ScanStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SecretOutput{})
	pulumi.RegisterOutputType(SecretArrayOutput{})
	pulumi.RegisterOutputType(SecretResponseOutput{})
	pulumi.RegisterOutputType(SecretResponseArrayOutput{})
	pulumi.RegisterOutputType(SecretsManagerResourcePolicyPropertiesOutput{})
	pulumi.RegisterOutputType(SecretsManagerResourcePolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SecretsManagerResourcePolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SecretsManagerSecretPropertiesOutput{})
	pulumi.RegisterOutputType(SecretsManagerSecretPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SecretsManagerSecretPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SecurityGroupMembershipOutput{})
	pulumi.RegisterOutputType(SecurityGroupMembershipArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupMembershipResponseOutput{})
	pulumi.RegisterOutputType(SecurityGroupMembershipResponseArrayOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionByDefaultOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionByDefaultPtrOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionByDefaultResponseOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionByDefaultResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionRuleOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionRuleArrayOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionRuleResponseOutput{})
	pulumi.RegisterOutputType(ServerSideEncryptionRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServerTypeEnumValueOutput{})
	pulumi.RegisterOutputType(ServerTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(ServerTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(ServerTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerlessV2ScalingConfigurationOutput{})
	pulumi.RegisterOutputType(ServerlessV2ScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerlessV2ScalingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServerlessV2ScalingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectClientAliasOutput{})
	pulumi.RegisterOutputType(ServiceConnectClientAliasArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectClientAliasResponseOutput{})
	pulumi.RegisterOutputType(ServiceConnectClientAliasResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceConnectConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServiceConnectConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectDefaultsOutput{})
	pulumi.RegisterOutputType(ServiceConnectDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectDefaultsResponseOutput{})
	pulumi.RegisterOutputType(ServiceConnectDefaultsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectServiceOutput{})
	pulumi.RegisterOutputType(ServiceConnectServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectServiceResponseOutput{})
	pulumi.RegisterOutputType(ServiceConnectServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsCertificateAuthorityPtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsCertificateAuthorityResponseOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsCertificateAuthorityResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServiceConnectTlsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedEBSVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceManagedEBSVolumeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedEBSVolumeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServiceManagedEBSVolumeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceRegistryOutput{})
	pulumi.RegisterOutputType(ServiceRegistryArrayOutput{})
	pulumi.RegisterOutputType(ServiceRegistryResponseOutput{})
	pulumi.RegisterOutputType(ServiceRegistryResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceSoftwareOptionsOutput{})
	pulumi.RegisterOutputType(ServiceSoftwareOptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceSoftwareOptionsResponseOutput{})
	pulumi.RegisterOutputType(ServiceSoftwareOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceVolumeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ServiceVolumeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServiceVolumeConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(SeveritySummaryOutput{})
	pulumi.RegisterOutputType(SeveritySummaryPtrOutput{})
	pulumi.RegisterOutputType(SeveritySummaryResponseOutput{})
	pulumi.RegisterOutputType(SeveritySummaryResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleCriterionForJobOutput{})
	pulumi.RegisterOutputType(SimpleCriterionForJobPtrOutput{})
	pulumi.RegisterOutputType(SimpleCriterionForJobResponseOutput{})
	pulumi.RegisterOutputType(SimpleCriterionForJobResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleCriterionKeyForJobEnumValueOutput{})
	pulumi.RegisterOutputType(SimpleCriterionKeyForJobEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SimpleCriterionKeyForJobEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SimpleCriterionKeyForJobEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SingleHeaderModelPropertiesOutput{})
	pulumi.RegisterOutputType(SingleHeaderModelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SingleHeaderModelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SingleHeaderModelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapStartOutput{})
	pulumi.RegisterOutputType(SnapStartPtrOutput{})
	pulumi.RegisterOutputType(SnapStartResponseOutput{})
	pulumi.RegisterOutputType(SnapStartResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapStartResponseResponseOutput{})
	pulumi.RegisterOutputType(SnapStartResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapshotOptionsOutput{})
	pulumi.RegisterOutputType(SnapshotOptionsPtrOutput{})
	pulumi.RegisterOutputType(SnapshotOptionsResponseOutput{})
	pulumi.RegisterOutputType(SnapshotOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapshotStateEnumValueOutput{})
	pulumi.RegisterOutputType(SnapshotStateEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SnapshotStateEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SnapshotStateEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SnsSubscriptionPropertiesOutput{})
	pulumi.RegisterOutputType(SnsSubscriptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SnsSubscriptionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SnsTopicPropertiesOutput{})
	pulumi.RegisterOutputType(SnsTopicPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SnsTopicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateOptionsOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateOptionsPtrOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateOptionsResponseOutput{})
	pulumi.RegisterOutputType(SoftwareUpdateOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceAuthOutput{})
	pulumi.RegisterOutputType(SourceAuthPtrOutput{})
	pulumi.RegisterOutputType(SourceAuthResponseOutput{})
	pulumi.RegisterOutputType(SourceAuthResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceAuthTypeEnumValueOutput{})
	pulumi.RegisterOutputType(SourceAuthTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SourceAuthTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SourceAuthTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceConfigurationOutput{})
	pulumi.RegisterOutputType(SourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SourceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SourceConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceSelectionCriteriaOutput{})
	pulumi.RegisterOutputType(SourceSelectionCriteriaPtrOutput{})
	pulumi.RegisterOutputType(SourceSelectionCriteriaResponseOutput{})
	pulumi.RegisterOutputType(SourceSelectionCriteriaResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceTypeEnumValueOutput{})
	pulumi.RegisterOutputType(SourceTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SourceTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SourceTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SqsQueuePropertiesOutput{})
	pulumi.RegisterOutputType(SqsQueuePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SqsQueuePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SseKmsEncryptedObjectsOutput{})
	pulumi.RegisterOutputType(SseKmsEncryptedObjectsPtrOutput{})
	pulumi.RegisterOutputType(SseKmsEncryptedObjectsResponseOutput{})
	pulumi.RegisterOutputType(SseKmsEncryptedObjectsResponsePtrOutput{})
	pulumi.RegisterOutputType(SsmInstanceInformationPropertiesOutput{})
	pulumi.RegisterOutputType(SsmInstanceInformationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SsmInstanceInformationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SsmParameterPropertiesOutput{})
	pulumi.RegisterOutputType(SsmParameterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SsmParameterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SsmResourceComplianceSummaryItemPropertiesOutput{})
	pulumi.RegisterOutputType(SsmResourceComplianceSummaryItemPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SsmResourceComplianceSummaryItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StackInstancesOutput{})
	pulumi.RegisterOutputType(StackInstancesArrayOutput{})
}
