// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Definition of SsmParameter
type SsmParameterPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmParameterPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SsmParameter
type SsmParameterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SsmParameterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmParameterPropertiesResponse)(nil)).Elem()
}

func (o SsmParameterPropertiesResponseOutput) ToSsmParameterPropertiesResponseOutput() SsmParameterPropertiesResponseOutput {
	return o
}

func (o SsmParameterPropertiesResponseOutput) ToSsmParameterPropertiesResponseOutputWithContext(ctx context.Context) SsmParameterPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SsmParameterPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmParameterPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmParameterPropertiesResponseOutput) AwsProperties() AwsSsmParameterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *AwsSsmParameterPropertiesResponse { return v.AwsProperties }).(AwsSsmParameterPropertiesResponsePtrOutput)
}

// AWS Region
func (o SsmParameterPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmParameterPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmParameterPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SsmParameterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmParameterPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmParameterPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmParameterPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmResourceComplianceSummaryItemProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// SsmResourceComplianceSummaryItemPropertiesInput is an input type that accepts SsmResourceComplianceSummaryItemPropertiesArgs and SsmResourceComplianceSummaryItemPropertiesOutput values.
// You can construct a concrete instance of `SsmResourceComplianceSummaryItemPropertiesInput` via:
//
//	SsmResourceComplianceSummaryItemPropertiesArgs{...}
type SsmResourceComplianceSummaryItemPropertiesInput interface {
	pulumi.Input

	ToSsmResourceComplianceSummaryItemPropertiesOutput() SsmResourceComplianceSummaryItemPropertiesOutput
	ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(context.Context) SsmResourceComplianceSummaryItemPropertiesOutput
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsSsmResourceComplianceSummaryItemPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (SsmResourceComplianceSummaryItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesOutput() SsmResourceComplianceSummaryItemPropertiesOutput {
	return i.ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(context.Background())
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmResourceComplianceSummaryItemPropertiesOutput)
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return i.ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Background())
}

func (i SsmResourceComplianceSummaryItemPropertiesArgs) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmResourceComplianceSummaryItemPropertiesOutput).ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx)
}

// SsmResourceComplianceSummaryItemPropertiesPtrInput is an input type that accepts SsmResourceComplianceSummaryItemPropertiesArgs, SsmResourceComplianceSummaryItemPropertiesPtr and SsmResourceComplianceSummaryItemPropertiesPtrOutput values.
// You can construct a concrete instance of `SsmResourceComplianceSummaryItemPropertiesPtrInput` via:
//
//	        SsmResourceComplianceSummaryItemPropertiesArgs{...}
//
//	or:
//
//	        nil
type SsmResourceComplianceSummaryItemPropertiesPtrInput interface {
	pulumi.Input

	ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput
	ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput
}

type ssmResourceComplianceSummaryItemPropertiesPtrType SsmResourceComplianceSummaryItemPropertiesArgs

func SsmResourceComplianceSummaryItemPropertiesPtr(v *SsmResourceComplianceSummaryItemPropertiesArgs) SsmResourceComplianceSummaryItemPropertiesPtrInput {
	return (*ssmResourceComplianceSummaryItemPropertiesPtrType)(v)
}

func (*ssmResourceComplianceSummaryItemPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (i *ssmResourceComplianceSummaryItemPropertiesPtrType) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return i.ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Background())
}

func (i *ssmResourceComplianceSummaryItemPropertiesPtrType) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesOutput struct{ *pulumi.OutputState }

func (SsmResourceComplianceSummaryItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesOutput() SsmResourceComplianceSummaryItemPropertiesOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(context.Background())
}

func (o SsmResourceComplianceSummaryItemPropertiesOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsmResourceComplianceSummaryItemProperties) *SsmResourceComplianceSummaryItemProperties {
		return &v
	}).(SsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o SsmResourceComplianceSummaryItemPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsProperties() AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *AwsSsmResourceComplianceSummaryItemProperties {
		return v.AwsProperties
	}).(AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// AWS Region
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmResourceComplianceSummaryItemPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmResourceComplianceSummaryItemPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmResourceComplianceSummaryItemPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type SsmResourceComplianceSummaryItemPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SsmResourceComplianceSummaryItemPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsmResourceComplianceSummaryItemProperties)(nil)).Elem()
}

func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutput() SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) ToSsmResourceComplianceSummaryItemPropertiesPtrOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) Elem() SsmResourceComplianceSummaryItemPropertiesOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) SsmResourceComplianceSummaryItemProperties {
		if v != nil {
			return *v
		}
		var ret SsmResourceComplianceSummaryItemProperties
		return ret
	}).(SsmResourceComplianceSummaryItemPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsProperties() AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *AwsSsmResourceComplianceSummaryItemProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsSsmResourceComplianceSummaryItemPropertiesPtrOutput)
}

// AWS Region
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmResourceComplianceSummaryItemPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsmResourceComplianceSummaryItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsSsmResourceComplianceSummaryItemPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of SsmResourceComplianceSummaryItem
type SsmResourceComplianceSummaryItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SsmResourceComplianceSummaryItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsmResourceComplianceSummaryItemPropertiesResponse)(nil)).Elem()
}

func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) ToSsmResourceComplianceSummaryItemPropertiesResponseOutput() SsmResourceComplianceSummaryItemPropertiesResponseOutput {
	return o
}

func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) ToSsmResourceComplianceSummaryItemPropertiesResponseOutputWithContext(ctx context.Context) SsmResourceComplianceSummaryItemPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsProperties() AwsSsmResourceComplianceSummaryItemPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *AwsSsmResourceComplianceSummaryItemPropertiesResponse {
		return v.AwsProperties
	}).(AwsSsmResourceComplianceSummaryItemPropertiesResponsePtrOutput)
}

// AWS Region
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string {
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o SsmResourceComplianceSummaryItemPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsmResourceComplianceSummaryItemPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of StackInstances
type StackInstances struct {
	// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
	DeploymentTargets *DeploymentTargets `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides []Parameter `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions []string `pulumi:"regions"`
}

// StackInstancesInput is an input type that accepts StackInstancesArgs and StackInstancesOutput values.
// You can construct a concrete instance of `StackInstancesInput` via:
//
//	StackInstancesArgs{...}
type StackInstancesInput interface {
	pulumi.Input

	ToStackInstancesOutput() StackInstancesOutput
	ToStackInstancesOutputWithContext(context.Context) StackInstancesOutput
}

// Definition of StackInstances
type StackInstancesArgs struct {
	// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
	DeploymentTargets DeploymentTargetsPtrInput `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides ParameterArrayInput `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (StackInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstances)(nil)).Elem()
}

func (i StackInstancesArgs) ToStackInstancesOutput() StackInstancesOutput {
	return i.ToStackInstancesOutputWithContext(context.Background())
}

func (i StackInstancesArgs) ToStackInstancesOutputWithContext(ctx context.Context) StackInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackInstancesOutput)
}

// StackInstancesArrayInput is an input type that accepts StackInstancesArray and StackInstancesArrayOutput values.
// You can construct a concrete instance of `StackInstancesArrayInput` via:
//
//	StackInstancesArray{ StackInstancesArgs{...} }
type StackInstancesArrayInput interface {
	pulumi.Input

	ToStackInstancesArrayOutput() StackInstancesArrayOutput
	ToStackInstancesArrayOutputWithContext(context.Context) StackInstancesArrayOutput
}

type StackInstancesArray []StackInstancesInput

func (StackInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstances)(nil)).Elem()
}

func (i StackInstancesArray) ToStackInstancesArrayOutput() StackInstancesArrayOutput {
	return i.ToStackInstancesArrayOutputWithContext(context.Background())
}

func (i StackInstancesArray) ToStackInstancesArrayOutputWithContext(ctx context.Context) StackInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackInstancesArrayOutput)
}

// Definition of StackInstances
type StackInstancesOutput struct{ *pulumi.OutputState }

func (StackInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstances)(nil)).Elem()
}

func (o StackInstancesOutput) ToStackInstancesOutput() StackInstancesOutput {
	return o
}

func (o StackInstancesOutput) ToStackInstancesOutputWithContext(ctx context.Context) StackInstancesOutput {
	return o
}

// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
func (o StackInstancesOutput) DeploymentTargets() DeploymentTargetsPtrOutput {
	return o.ApplyT(func(v StackInstances) *DeploymentTargets { return v.DeploymentTargets }).(DeploymentTargetsPtrOutput)
}

// A list of stack set parameters whose values you want to override in the selected stack instances.
func (o StackInstancesOutput) ParameterOverrides() ParameterArrayOutput {
	return o.ApplyT(func(v StackInstances) []Parameter { return v.ParameterOverrides }).(ParameterArrayOutput)
}

// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
func (o StackInstancesOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackInstances) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type StackInstancesArrayOutput struct{ *pulumi.OutputState }

func (StackInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstances)(nil)).Elem()
}

func (o StackInstancesArrayOutput) ToStackInstancesArrayOutput() StackInstancesArrayOutput {
	return o
}

func (o StackInstancesArrayOutput) ToStackInstancesArrayOutputWithContext(ctx context.Context) StackInstancesArrayOutput {
	return o
}

func (o StackInstancesArrayOutput) Index(i pulumi.IntInput) StackInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackInstances {
		return vs[0].([]StackInstances)[vs[1].(int)]
	}).(StackInstancesOutput)
}

// Definition of StackInstances
type StackInstancesResponse struct {
	// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
	DeploymentTargets *DeploymentTargetsResponse `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides []ParameterResponse `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions []string `pulumi:"regions"`
}

// Definition of StackInstances
type StackInstancesResponseOutput struct{ *pulumi.OutputState }

func (StackInstancesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstancesResponse)(nil)).Elem()
}

func (o StackInstancesResponseOutput) ToStackInstancesResponseOutput() StackInstancesResponseOutput {
	return o
}

func (o StackInstancesResponseOutput) ToStackInstancesResponseOutputWithContext(ctx context.Context) StackInstancesResponseOutput {
	return o
}

// The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
func (o StackInstancesResponseOutput) DeploymentTargets() DeploymentTargetsResponsePtrOutput {
	return o.ApplyT(func(v StackInstancesResponse) *DeploymentTargetsResponse { return v.DeploymentTargets }).(DeploymentTargetsResponsePtrOutput)
}

// A list of stack set parameters whose values you want to override in the selected stack instances.
func (o StackInstancesResponseOutput) ParameterOverrides() ParameterResponseArrayOutput {
	return o.ApplyT(func(v StackInstancesResponse) []ParameterResponse { return v.ParameterOverrides }).(ParameterResponseArrayOutput)
}

// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
func (o StackInstancesResponseOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackInstancesResponse) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type StackInstancesResponseArrayOutput struct{ *pulumi.OutputState }

func (StackInstancesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstancesResponse)(nil)).Elem()
}

func (o StackInstancesResponseArrayOutput) ToStackInstancesResponseArrayOutput() StackInstancesResponseArrayOutput {
	return o
}

func (o StackInstancesResponseArrayOutput) ToStackInstancesResponseArrayOutputWithContext(ctx context.Context) StackInstancesResponseArrayOutput {
	return o
}

func (o StackInstancesResponseArrayOutput) Index(i pulumi.IntInput) StackInstancesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackInstancesResponse {
		return vs[0].([]StackInstancesResponse)[vs[1].(int)]
	}).(StackInstancesResponseOutput)
}

// Definition of State
type State struct {
	// Status code of the Instance.
	Code *int `pulumi:"code"`
	// Status code of the Instance.
	Name *string `pulumi:"name"`
}

// StateInput is an input type that accepts StateArgs and StateOutput values.
// You can construct a concrete instance of `StateInput` via:
//
//	StateArgs{...}
type StateInput interface {
	pulumi.Input

	ToStateOutput() StateOutput
	ToStateOutputWithContext(context.Context) StateOutput
}

// Definition of State
type StateArgs struct {
	// Status code of the Instance.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Status code of the Instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (i StateArgs) ToStateOutput() StateOutput {
	return i.ToStateOutputWithContext(context.Background())
}

func (i StateArgs) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateOutput)
}

func (i StateArgs) ToStatePtrOutput() StatePtrOutput {
	return i.ToStatePtrOutputWithContext(context.Background())
}

func (i StateArgs) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateOutput).ToStatePtrOutputWithContext(ctx)
}

// StatePtrInput is an input type that accepts StateArgs, StatePtr and StatePtrOutput values.
// You can construct a concrete instance of `StatePtrInput` via:
//
//	        StateArgs{...}
//
//	or:
//
//	        nil
type StatePtrInput interface {
	pulumi.Input

	ToStatePtrOutput() StatePtrOutput
	ToStatePtrOutputWithContext(context.Context) StatePtrOutput
}

type statePtrType StateArgs

func StatePtr(v *StateArgs) StatePtrInput {
	return (*statePtrType)(v)
}

func (*statePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**State)(nil)).Elem()
}

func (i *statePtrType) ToStatePtrOutput() StatePtrOutput {
	return i.ToStatePtrOutputWithContext(context.Background())
}

func (i *statePtrType) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatePtrOutput)
}

// Definition of State
type StateOutput struct{ *pulumi.OutputState }

func (StateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (o StateOutput) ToStateOutput() StateOutput {
	return o
}

func (o StateOutput) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return o
}

func (o StateOutput) ToStatePtrOutput() StatePtrOutput {
	return o.ToStatePtrOutputWithContext(context.Background())
}

func (o StateOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v State) *State {
		return &v
	}).(StatePtrOutput)
}

// Status code of the Instance.
func (o StateOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v State) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Status code of the Instance.
func (o StateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v State) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StatePtrOutput struct{ *pulumi.OutputState }

func (StatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**State)(nil)).Elem()
}

func (o StatePtrOutput) ToStatePtrOutput() StatePtrOutput {
	return o
}

func (o StatePtrOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o
}

func (o StatePtrOutput) Elem() StateOutput {
	return o.ApplyT(func(v *State) State {
		if v != nil {
			return *v
		}
		var ret State
		return ret
	}).(StateOutput)
}

// Status code of the Instance.
func (o StatePtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *State) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// Status code of the Instance.
func (o StatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *State) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Definition of StateReason
type StateReason struct {
	// <p>The reason code for the state change.</p>
	Code *string `pulumi:"code"`
	// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
	Message *string `pulumi:"message"`
}

// StateReasonInput is an input type that accepts StateReasonArgs and StateReasonOutput values.
// You can construct a concrete instance of `StateReasonInput` via:
//
//	StateReasonArgs{...}
type StateReasonInput interface {
	pulumi.Input

	ToStateReasonOutput() StateReasonOutput
	ToStateReasonOutputWithContext(context.Context) StateReasonOutput
}

// Definition of StateReason
type StateReasonArgs struct {
	// <p>The reason code for the state change.</p>
	Code pulumi.StringPtrInput `pulumi:"code"`
	// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (StateReasonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateReason)(nil)).Elem()
}

func (i StateReasonArgs) ToStateReasonOutput() StateReasonOutput {
	return i.ToStateReasonOutputWithContext(context.Background())
}

func (i StateReasonArgs) ToStateReasonOutputWithContext(ctx context.Context) StateReasonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateReasonOutput)
}

func (i StateReasonArgs) ToStateReasonPtrOutput() StateReasonPtrOutput {
	return i.ToStateReasonPtrOutputWithContext(context.Background())
}

func (i StateReasonArgs) ToStateReasonPtrOutputWithContext(ctx context.Context) StateReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateReasonOutput).ToStateReasonPtrOutputWithContext(ctx)
}

// StateReasonPtrInput is an input type that accepts StateReasonArgs, StateReasonPtr and StateReasonPtrOutput values.
// You can construct a concrete instance of `StateReasonPtrInput` via:
//
//	        StateReasonArgs{...}
//
//	or:
//
//	        nil
type StateReasonPtrInput interface {
	pulumi.Input

	ToStateReasonPtrOutput() StateReasonPtrOutput
	ToStateReasonPtrOutputWithContext(context.Context) StateReasonPtrOutput
}

type stateReasonPtrType StateReasonArgs

func StateReasonPtr(v *StateReasonArgs) StateReasonPtrInput {
	return (*stateReasonPtrType)(v)
}

func (*stateReasonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateReason)(nil)).Elem()
}

func (i *stateReasonPtrType) ToStateReasonPtrOutput() StateReasonPtrOutput {
	return i.ToStateReasonPtrOutputWithContext(context.Background())
}

func (i *stateReasonPtrType) ToStateReasonPtrOutputWithContext(ctx context.Context) StateReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateReasonPtrOutput)
}

// Definition of StateReason
type StateReasonOutput struct{ *pulumi.OutputState }

func (StateReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateReason)(nil)).Elem()
}

func (o StateReasonOutput) ToStateReasonOutput() StateReasonOutput {
	return o
}

func (o StateReasonOutput) ToStateReasonOutputWithContext(ctx context.Context) StateReasonOutput {
	return o
}

func (o StateReasonOutput) ToStateReasonPtrOutput() StateReasonPtrOutput {
	return o.ToStateReasonPtrOutputWithContext(context.Background())
}

func (o StateReasonOutput) ToStateReasonPtrOutputWithContext(ctx context.Context) StateReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateReason) *StateReason {
		return &v
	}).(StateReasonPtrOutput)
}

// <p>The reason code for the state change.</p>
func (o StateReasonOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateReason) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
func (o StateReasonOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateReason) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type StateReasonPtrOutput struct{ *pulumi.OutputState }

func (StateReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateReason)(nil)).Elem()
}

func (o StateReasonPtrOutput) ToStateReasonPtrOutput() StateReasonPtrOutput {
	return o
}

func (o StateReasonPtrOutput) ToStateReasonPtrOutputWithContext(ctx context.Context) StateReasonPtrOutput {
	return o
}

func (o StateReasonPtrOutput) Elem() StateReasonOutput {
	return o.ApplyT(func(v *StateReason) StateReason {
		if v != nil {
			return *v
		}
		var ret StateReason
		return ret
	}).(StateReasonOutput)
}

// <p>The reason code for the state change.</p>
func (o StateReasonPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateReason) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
func (o StateReasonPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateReason) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Definition of StateReason
type StateReasonResponse struct {
	// <p>The reason code for the state change.</p>
	Code *string `pulumi:"code"`
	// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
	Message *string `pulumi:"message"`
}

// Definition of StateReason
type StateReasonResponseOutput struct{ *pulumi.OutputState }

func (StateReasonResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateReasonResponse)(nil)).Elem()
}

func (o StateReasonResponseOutput) ToStateReasonResponseOutput() StateReasonResponseOutput {
	return o
}

func (o StateReasonResponseOutput) ToStateReasonResponseOutputWithContext(ctx context.Context) StateReasonResponseOutput {
	return o
}

// <p>The reason code for the state change.</p>
func (o StateReasonResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateReasonResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
func (o StateReasonResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateReasonResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type StateReasonResponsePtrOutput struct{ *pulumi.OutputState }

func (StateReasonResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateReasonResponse)(nil)).Elem()
}

func (o StateReasonResponsePtrOutput) ToStateReasonResponsePtrOutput() StateReasonResponsePtrOutput {
	return o
}

func (o StateReasonResponsePtrOutput) ToStateReasonResponsePtrOutputWithContext(ctx context.Context) StateReasonResponsePtrOutput {
	return o
}

func (o StateReasonResponsePtrOutput) Elem() StateReasonResponseOutput {
	return o.ApplyT(func(v *StateReasonResponse) StateReasonResponse {
		if v != nil {
			return *v
		}
		var ret StateReasonResponse
		return ret
	}).(StateReasonResponseOutput)
}

// <p>The reason code for the state change.</p>
func (o StateReasonResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateReasonResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
func (o StateReasonResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateReasonResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Definition of State
type StateResponse struct {
	// Status code of the Instance.
	Code *int `pulumi:"code"`
	// Status code of the Instance.
	Name *string `pulumi:"name"`
}

// Definition of State
type StateResponseOutput struct{ *pulumi.OutputState }

func (StateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateResponse)(nil)).Elem()
}

func (o StateResponseOutput) ToStateResponseOutput() StateResponseOutput {
	return o
}

func (o StateResponseOutput) ToStateResponseOutputWithContext(ctx context.Context) StateResponseOutput {
	return o
}

// Status code of the Instance.
func (o StateResponseOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StateResponse) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Status code of the Instance.
func (o StateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StateResponsePtrOutput struct{ *pulumi.OutputState }

func (StateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateResponse)(nil)).Elem()
}

func (o StateResponsePtrOutput) ToStateResponsePtrOutput() StateResponsePtrOutput {
	return o
}

func (o StateResponsePtrOutput) ToStateResponsePtrOutputWithContext(ctx context.Context) StateResponsePtrOutput {
	return o
}

func (o StateResponsePtrOutput) Elem() StateResponseOutput {
	return o.ApplyT(func(v *StateResponse) StateResponse {
		if v != nil {
			return *v
		}
		var ret StateResponse
		return ret
	}).(StateResponseOutput)
}

// Status code of the Instance.
func (o StateResponsePtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StateResponse) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// Status code of the Instance.
func (o StateResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulEngineOptions
type StatefulEngineOptions struct {
	// Property ruleOrder
	RuleOrder *string `pulumi:"ruleOrder"`
	// Property streamExceptionPolicy
	StreamExceptionPolicy *string `pulumi:"streamExceptionPolicy"`
}

// StatefulEngineOptionsInput is an input type that accepts StatefulEngineOptionsArgs and StatefulEngineOptionsOutput values.
// You can construct a concrete instance of `StatefulEngineOptionsInput` via:
//
//	StatefulEngineOptionsArgs{...}
type StatefulEngineOptionsInput interface {
	pulumi.Input

	ToStatefulEngineOptionsOutput() StatefulEngineOptionsOutput
	ToStatefulEngineOptionsOutputWithContext(context.Context) StatefulEngineOptionsOutput
}

// Definition of StatefulEngineOptions
type StatefulEngineOptionsArgs struct {
	// Property ruleOrder
	RuleOrder pulumi.StringPtrInput `pulumi:"ruleOrder"`
	// Property streamExceptionPolicy
	StreamExceptionPolicy pulumi.StringPtrInput `pulumi:"streamExceptionPolicy"`
}

func (StatefulEngineOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulEngineOptions)(nil)).Elem()
}

func (i StatefulEngineOptionsArgs) ToStatefulEngineOptionsOutput() StatefulEngineOptionsOutput {
	return i.ToStatefulEngineOptionsOutputWithContext(context.Background())
}

func (i StatefulEngineOptionsArgs) ToStatefulEngineOptionsOutputWithContext(ctx context.Context) StatefulEngineOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulEngineOptionsOutput)
}

func (i StatefulEngineOptionsArgs) ToStatefulEngineOptionsPtrOutput() StatefulEngineOptionsPtrOutput {
	return i.ToStatefulEngineOptionsPtrOutputWithContext(context.Background())
}

func (i StatefulEngineOptionsArgs) ToStatefulEngineOptionsPtrOutputWithContext(ctx context.Context) StatefulEngineOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulEngineOptionsOutput).ToStatefulEngineOptionsPtrOutputWithContext(ctx)
}

// StatefulEngineOptionsPtrInput is an input type that accepts StatefulEngineOptionsArgs, StatefulEngineOptionsPtr and StatefulEngineOptionsPtrOutput values.
// You can construct a concrete instance of `StatefulEngineOptionsPtrInput` via:
//
//	        StatefulEngineOptionsArgs{...}
//
//	or:
//
//	        nil
type StatefulEngineOptionsPtrInput interface {
	pulumi.Input

	ToStatefulEngineOptionsPtrOutput() StatefulEngineOptionsPtrOutput
	ToStatefulEngineOptionsPtrOutputWithContext(context.Context) StatefulEngineOptionsPtrOutput
}

type statefulEngineOptionsPtrType StatefulEngineOptionsArgs

func StatefulEngineOptionsPtr(v *StatefulEngineOptionsArgs) StatefulEngineOptionsPtrInput {
	return (*statefulEngineOptionsPtrType)(v)
}

func (*statefulEngineOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulEngineOptions)(nil)).Elem()
}

func (i *statefulEngineOptionsPtrType) ToStatefulEngineOptionsPtrOutput() StatefulEngineOptionsPtrOutput {
	return i.ToStatefulEngineOptionsPtrOutputWithContext(context.Background())
}

func (i *statefulEngineOptionsPtrType) ToStatefulEngineOptionsPtrOutputWithContext(ctx context.Context) StatefulEngineOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulEngineOptionsPtrOutput)
}

// Definition of StatefulEngineOptions
type StatefulEngineOptionsOutput struct{ *pulumi.OutputState }

func (StatefulEngineOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulEngineOptions)(nil)).Elem()
}

func (o StatefulEngineOptionsOutput) ToStatefulEngineOptionsOutput() StatefulEngineOptionsOutput {
	return o
}

func (o StatefulEngineOptionsOutput) ToStatefulEngineOptionsOutputWithContext(ctx context.Context) StatefulEngineOptionsOutput {
	return o
}

func (o StatefulEngineOptionsOutput) ToStatefulEngineOptionsPtrOutput() StatefulEngineOptionsPtrOutput {
	return o.ToStatefulEngineOptionsPtrOutputWithContext(context.Background())
}

func (o StatefulEngineOptionsOutput) ToStatefulEngineOptionsPtrOutputWithContext(ctx context.Context) StatefulEngineOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulEngineOptions) *StatefulEngineOptions {
		return &v
	}).(StatefulEngineOptionsPtrOutput)
}

// Property ruleOrder
func (o StatefulEngineOptionsOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulEngineOptions) *string { return v.RuleOrder }).(pulumi.StringPtrOutput)
}

// Property streamExceptionPolicy
func (o StatefulEngineOptionsOutput) StreamExceptionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulEngineOptions) *string { return v.StreamExceptionPolicy }).(pulumi.StringPtrOutput)
}

type StatefulEngineOptionsPtrOutput struct{ *pulumi.OutputState }

func (StatefulEngineOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulEngineOptions)(nil)).Elem()
}

func (o StatefulEngineOptionsPtrOutput) ToStatefulEngineOptionsPtrOutput() StatefulEngineOptionsPtrOutput {
	return o
}

func (o StatefulEngineOptionsPtrOutput) ToStatefulEngineOptionsPtrOutputWithContext(ctx context.Context) StatefulEngineOptionsPtrOutput {
	return o
}

func (o StatefulEngineOptionsPtrOutput) Elem() StatefulEngineOptionsOutput {
	return o.ApplyT(func(v *StatefulEngineOptions) StatefulEngineOptions {
		if v != nil {
			return *v
		}
		var ret StatefulEngineOptions
		return ret
	}).(StatefulEngineOptionsOutput)
}

// Property ruleOrder
func (o StatefulEngineOptionsPtrOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulEngineOptions) *string {
		if v == nil {
			return nil
		}
		return v.RuleOrder
	}).(pulumi.StringPtrOutput)
}

// Property streamExceptionPolicy
func (o StatefulEngineOptionsPtrOutput) StreamExceptionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulEngineOptions) *string {
		if v == nil {
			return nil
		}
		return v.StreamExceptionPolicy
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulEngineOptions
type StatefulEngineOptionsResponse struct {
	// Property ruleOrder
	RuleOrder *string `pulumi:"ruleOrder"`
	// Property streamExceptionPolicy
	StreamExceptionPolicy *string `pulumi:"streamExceptionPolicy"`
}

// Definition of StatefulEngineOptions
type StatefulEngineOptionsResponseOutput struct{ *pulumi.OutputState }

func (StatefulEngineOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulEngineOptionsResponse)(nil)).Elem()
}

func (o StatefulEngineOptionsResponseOutput) ToStatefulEngineOptionsResponseOutput() StatefulEngineOptionsResponseOutput {
	return o
}

func (o StatefulEngineOptionsResponseOutput) ToStatefulEngineOptionsResponseOutputWithContext(ctx context.Context) StatefulEngineOptionsResponseOutput {
	return o
}

// Property ruleOrder
func (o StatefulEngineOptionsResponseOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulEngineOptionsResponse) *string { return v.RuleOrder }).(pulumi.StringPtrOutput)
}

// Property streamExceptionPolicy
func (o StatefulEngineOptionsResponseOutput) StreamExceptionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulEngineOptionsResponse) *string { return v.StreamExceptionPolicy }).(pulumi.StringPtrOutput)
}

type StatefulEngineOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (StatefulEngineOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulEngineOptionsResponse)(nil)).Elem()
}

func (o StatefulEngineOptionsResponsePtrOutput) ToStatefulEngineOptionsResponsePtrOutput() StatefulEngineOptionsResponsePtrOutput {
	return o
}

func (o StatefulEngineOptionsResponsePtrOutput) ToStatefulEngineOptionsResponsePtrOutputWithContext(ctx context.Context) StatefulEngineOptionsResponsePtrOutput {
	return o
}

func (o StatefulEngineOptionsResponsePtrOutput) Elem() StatefulEngineOptionsResponseOutput {
	return o.ApplyT(func(v *StatefulEngineOptionsResponse) StatefulEngineOptionsResponse {
		if v != nil {
			return *v
		}
		var ret StatefulEngineOptionsResponse
		return ret
	}).(StatefulEngineOptionsResponseOutput)
}

// Property ruleOrder
func (o StatefulEngineOptionsResponsePtrOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulEngineOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuleOrder
	}).(pulumi.StringPtrOutput)
}

// Property streamExceptionPolicy
func (o StatefulEngineOptionsResponsePtrOutput) StreamExceptionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulEngineOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreamExceptionPolicy
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulRule
type StatefulRule struct {
	// Property action
	Action *string `pulumi:"action"`
	// Property header
	Header *Header `pulumi:"header"`
	// Property ruleOptions
	RuleOptions []RuleOption `pulumi:"ruleOptions"`
}

// StatefulRuleInput is an input type that accepts StatefulRuleArgs and StatefulRuleOutput values.
// You can construct a concrete instance of `StatefulRuleInput` via:
//
//	StatefulRuleArgs{...}
type StatefulRuleInput interface {
	pulumi.Input

	ToStatefulRuleOutput() StatefulRuleOutput
	ToStatefulRuleOutputWithContext(context.Context) StatefulRuleOutput
}

// Definition of StatefulRule
type StatefulRuleArgs struct {
	// Property action
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Property header
	Header HeaderPtrInput `pulumi:"header"`
	// Property ruleOptions
	RuleOptions RuleOptionArrayInput `pulumi:"ruleOptions"`
}

func (StatefulRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRule)(nil)).Elem()
}

func (i StatefulRuleArgs) ToStatefulRuleOutput() StatefulRuleOutput {
	return i.ToStatefulRuleOutputWithContext(context.Background())
}

func (i StatefulRuleArgs) ToStatefulRuleOutputWithContext(ctx context.Context) StatefulRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleOutput)
}

// StatefulRuleArrayInput is an input type that accepts StatefulRuleArray and StatefulRuleArrayOutput values.
// You can construct a concrete instance of `StatefulRuleArrayInput` via:
//
//	StatefulRuleArray{ StatefulRuleArgs{...} }
type StatefulRuleArrayInput interface {
	pulumi.Input

	ToStatefulRuleArrayOutput() StatefulRuleArrayOutput
	ToStatefulRuleArrayOutputWithContext(context.Context) StatefulRuleArrayOutput
}

type StatefulRuleArray []StatefulRuleInput

func (StatefulRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatefulRule)(nil)).Elem()
}

func (i StatefulRuleArray) ToStatefulRuleArrayOutput() StatefulRuleArrayOutput {
	return i.ToStatefulRuleArrayOutputWithContext(context.Background())
}

func (i StatefulRuleArray) ToStatefulRuleArrayOutputWithContext(ctx context.Context) StatefulRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleArrayOutput)
}

// Definition of StatefulRule
type StatefulRuleOutput struct{ *pulumi.OutputState }

func (StatefulRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRule)(nil)).Elem()
}

func (o StatefulRuleOutput) ToStatefulRuleOutput() StatefulRuleOutput {
	return o
}

func (o StatefulRuleOutput) ToStatefulRuleOutputWithContext(ctx context.Context) StatefulRuleOutput {
	return o
}

// Property action
func (o StatefulRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Property header
func (o StatefulRuleOutput) Header() HeaderPtrOutput {
	return o.ApplyT(func(v StatefulRule) *Header { return v.Header }).(HeaderPtrOutput)
}

// Property ruleOptions
func (o StatefulRuleOutput) RuleOptions() RuleOptionArrayOutput {
	return o.ApplyT(func(v StatefulRule) []RuleOption { return v.RuleOptions }).(RuleOptionArrayOutput)
}

type StatefulRuleArrayOutput struct{ *pulumi.OutputState }

func (StatefulRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatefulRule)(nil)).Elem()
}

func (o StatefulRuleArrayOutput) ToStatefulRuleArrayOutput() StatefulRuleArrayOutput {
	return o
}

func (o StatefulRuleArrayOutput) ToStatefulRuleArrayOutputWithContext(ctx context.Context) StatefulRuleArrayOutput {
	return o
}

func (o StatefulRuleArrayOutput) Index(i pulumi.IntInput) StatefulRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatefulRule {
		return vs[0].([]StatefulRule)[vs[1].(int)]
	}).(StatefulRuleOutput)
}

// Definition of StatefulRuleGroupOverride
type StatefulRuleGroupOverride struct {
	// Property action
	Action *string `pulumi:"action"`
}

// StatefulRuleGroupOverrideInput is an input type that accepts StatefulRuleGroupOverrideArgs and StatefulRuleGroupOverrideOutput values.
// You can construct a concrete instance of `StatefulRuleGroupOverrideInput` via:
//
//	StatefulRuleGroupOverrideArgs{...}
type StatefulRuleGroupOverrideInput interface {
	pulumi.Input

	ToStatefulRuleGroupOverrideOutput() StatefulRuleGroupOverrideOutput
	ToStatefulRuleGroupOverrideOutputWithContext(context.Context) StatefulRuleGroupOverrideOutput
}

// Definition of StatefulRuleGroupOverride
type StatefulRuleGroupOverrideArgs struct {
	// Property action
	Action pulumi.StringPtrInput `pulumi:"action"`
}

func (StatefulRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleGroupOverride)(nil)).Elem()
}

func (i StatefulRuleGroupOverrideArgs) ToStatefulRuleGroupOverrideOutput() StatefulRuleGroupOverrideOutput {
	return i.ToStatefulRuleGroupOverrideOutputWithContext(context.Background())
}

func (i StatefulRuleGroupOverrideArgs) ToStatefulRuleGroupOverrideOutputWithContext(ctx context.Context) StatefulRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleGroupOverrideOutput)
}

func (i StatefulRuleGroupOverrideArgs) ToStatefulRuleGroupOverridePtrOutput() StatefulRuleGroupOverridePtrOutput {
	return i.ToStatefulRuleGroupOverridePtrOutputWithContext(context.Background())
}

func (i StatefulRuleGroupOverrideArgs) ToStatefulRuleGroupOverridePtrOutputWithContext(ctx context.Context) StatefulRuleGroupOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleGroupOverrideOutput).ToStatefulRuleGroupOverridePtrOutputWithContext(ctx)
}

// StatefulRuleGroupOverridePtrInput is an input type that accepts StatefulRuleGroupOverrideArgs, StatefulRuleGroupOverridePtr and StatefulRuleGroupOverridePtrOutput values.
// You can construct a concrete instance of `StatefulRuleGroupOverridePtrInput` via:
//
//	        StatefulRuleGroupOverrideArgs{...}
//
//	or:
//
//	        nil
type StatefulRuleGroupOverridePtrInput interface {
	pulumi.Input

	ToStatefulRuleGroupOverridePtrOutput() StatefulRuleGroupOverridePtrOutput
	ToStatefulRuleGroupOverridePtrOutputWithContext(context.Context) StatefulRuleGroupOverridePtrOutput
}

type statefulRuleGroupOverridePtrType StatefulRuleGroupOverrideArgs

func StatefulRuleGroupOverridePtr(v *StatefulRuleGroupOverrideArgs) StatefulRuleGroupOverridePtrInput {
	return (*statefulRuleGroupOverridePtrType)(v)
}

func (*statefulRuleGroupOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulRuleGroupOverride)(nil)).Elem()
}

func (i *statefulRuleGroupOverridePtrType) ToStatefulRuleGroupOverridePtrOutput() StatefulRuleGroupOverridePtrOutput {
	return i.ToStatefulRuleGroupOverridePtrOutputWithContext(context.Background())
}

func (i *statefulRuleGroupOverridePtrType) ToStatefulRuleGroupOverridePtrOutputWithContext(ctx context.Context) StatefulRuleGroupOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleGroupOverridePtrOutput)
}

// Definition of StatefulRuleGroupOverride
type StatefulRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleGroupOverride)(nil)).Elem()
}

func (o StatefulRuleGroupOverrideOutput) ToStatefulRuleGroupOverrideOutput() StatefulRuleGroupOverrideOutput {
	return o
}

func (o StatefulRuleGroupOverrideOutput) ToStatefulRuleGroupOverrideOutputWithContext(ctx context.Context) StatefulRuleGroupOverrideOutput {
	return o
}

func (o StatefulRuleGroupOverrideOutput) ToStatefulRuleGroupOverridePtrOutput() StatefulRuleGroupOverridePtrOutput {
	return o.ToStatefulRuleGroupOverridePtrOutputWithContext(context.Background())
}

func (o StatefulRuleGroupOverrideOutput) ToStatefulRuleGroupOverridePtrOutputWithContext(ctx context.Context) StatefulRuleGroupOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulRuleGroupOverride) *StatefulRuleGroupOverride {
		return &v
	}).(StatefulRuleGroupOverridePtrOutput)
}

// Property action
func (o StatefulRuleGroupOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

type StatefulRuleGroupOverridePtrOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulRuleGroupOverride)(nil)).Elem()
}

func (o StatefulRuleGroupOverridePtrOutput) ToStatefulRuleGroupOverridePtrOutput() StatefulRuleGroupOverridePtrOutput {
	return o
}

func (o StatefulRuleGroupOverridePtrOutput) ToStatefulRuleGroupOverridePtrOutputWithContext(ctx context.Context) StatefulRuleGroupOverridePtrOutput {
	return o
}

func (o StatefulRuleGroupOverridePtrOutput) Elem() StatefulRuleGroupOverrideOutput {
	return o.ApplyT(func(v *StatefulRuleGroupOverride) StatefulRuleGroupOverride {
		if v != nil {
			return *v
		}
		var ret StatefulRuleGroupOverride
		return ret
	}).(StatefulRuleGroupOverrideOutput)
}

// Property action
func (o StatefulRuleGroupOverridePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulRuleGroupOverride) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulRuleGroupOverride
type StatefulRuleGroupOverrideResponse struct {
	// Property action
	Action *string `pulumi:"action"`
}

// Definition of StatefulRuleGroupOverride
type StatefulRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleGroupOverrideResponse)(nil)).Elem()
}

func (o StatefulRuleGroupOverrideResponseOutput) ToStatefulRuleGroupOverrideResponseOutput() StatefulRuleGroupOverrideResponseOutput {
	return o
}

func (o StatefulRuleGroupOverrideResponseOutput) ToStatefulRuleGroupOverrideResponseOutputWithContext(ctx context.Context) StatefulRuleGroupOverrideResponseOutput {
	return o
}

// Property action
func (o StatefulRuleGroupOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

type StatefulRuleGroupOverrideResponsePtrOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupOverrideResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulRuleGroupOverrideResponse)(nil)).Elem()
}

func (o StatefulRuleGroupOverrideResponsePtrOutput) ToStatefulRuleGroupOverrideResponsePtrOutput() StatefulRuleGroupOverrideResponsePtrOutput {
	return o
}

func (o StatefulRuleGroupOverrideResponsePtrOutput) ToStatefulRuleGroupOverrideResponsePtrOutputWithContext(ctx context.Context) StatefulRuleGroupOverrideResponsePtrOutput {
	return o
}

func (o StatefulRuleGroupOverrideResponsePtrOutput) Elem() StatefulRuleGroupOverrideResponseOutput {
	return o.ApplyT(func(v *StatefulRuleGroupOverrideResponse) StatefulRuleGroupOverrideResponse {
		if v != nil {
			return *v
		}
		var ret StatefulRuleGroupOverrideResponse
		return ret
	}).(StatefulRuleGroupOverrideResponseOutput)
}

// Property action
func (o StatefulRuleGroupOverrideResponsePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulRuleGroupOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulRuleGroupReference
type StatefulRuleGroupReference struct {
	// Property override
	Override *StatefulRuleGroupOverride `pulumi:"override"`
	// Property priority
	Priority *int `pulumi:"priority"`
	// A resource ARN.
	ResourceArn *string `pulumi:"resourceArn"`
}

// StatefulRuleGroupReferenceInput is an input type that accepts StatefulRuleGroupReferenceArgs and StatefulRuleGroupReferenceOutput values.
// You can construct a concrete instance of `StatefulRuleGroupReferenceInput` via:
//
//	StatefulRuleGroupReferenceArgs{...}
type StatefulRuleGroupReferenceInput interface {
	pulumi.Input

	ToStatefulRuleGroupReferenceOutput() StatefulRuleGroupReferenceOutput
	ToStatefulRuleGroupReferenceOutputWithContext(context.Context) StatefulRuleGroupReferenceOutput
}

// Definition of StatefulRuleGroupReference
type StatefulRuleGroupReferenceArgs struct {
	// Property override
	Override StatefulRuleGroupOverridePtrInput `pulumi:"override"`
	// Property priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// A resource ARN.
	ResourceArn pulumi.StringPtrInput `pulumi:"resourceArn"`
}

func (StatefulRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleGroupReference)(nil)).Elem()
}

func (i StatefulRuleGroupReferenceArgs) ToStatefulRuleGroupReferenceOutput() StatefulRuleGroupReferenceOutput {
	return i.ToStatefulRuleGroupReferenceOutputWithContext(context.Background())
}

func (i StatefulRuleGroupReferenceArgs) ToStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) StatefulRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleGroupReferenceOutput)
}

// StatefulRuleGroupReferenceArrayInput is an input type that accepts StatefulRuleGroupReferenceArray and StatefulRuleGroupReferenceArrayOutput values.
// You can construct a concrete instance of `StatefulRuleGroupReferenceArrayInput` via:
//
//	StatefulRuleGroupReferenceArray{ StatefulRuleGroupReferenceArgs{...} }
type StatefulRuleGroupReferenceArrayInput interface {
	pulumi.Input

	ToStatefulRuleGroupReferenceArrayOutput() StatefulRuleGroupReferenceArrayOutput
	ToStatefulRuleGroupReferenceArrayOutputWithContext(context.Context) StatefulRuleGroupReferenceArrayOutput
}

type StatefulRuleGroupReferenceArray []StatefulRuleGroupReferenceInput

func (StatefulRuleGroupReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatefulRuleGroupReference)(nil)).Elem()
}

func (i StatefulRuleGroupReferenceArray) ToStatefulRuleGroupReferenceArrayOutput() StatefulRuleGroupReferenceArrayOutput {
	return i.ToStatefulRuleGroupReferenceArrayOutputWithContext(context.Background())
}

func (i StatefulRuleGroupReferenceArray) ToStatefulRuleGroupReferenceArrayOutputWithContext(ctx context.Context) StatefulRuleGroupReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleGroupReferenceArrayOutput)
}

// Definition of StatefulRuleGroupReference
type StatefulRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleGroupReference)(nil)).Elem()
}

func (o StatefulRuleGroupReferenceOutput) ToStatefulRuleGroupReferenceOutput() StatefulRuleGroupReferenceOutput {
	return o
}

func (o StatefulRuleGroupReferenceOutput) ToStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) StatefulRuleGroupReferenceOutput {
	return o
}

// Property override
func (o StatefulRuleGroupReferenceOutput) Override() StatefulRuleGroupOverridePtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupReference) *StatefulRuleGroupOverride { return v.Override }).(StatefulRuleGroupOverridePtrOutput)
}

// Property priority
func (o StatefulRuleGroupReferenceOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupReference) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A resource ARN.
func (o StatefulRuleGroupReferenceOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupReference) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

type StatefulRuleGroupReferenceArrayOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatefulRuleGroupReference)(nil)).Elem()
}

func (o StatefulRuleGroupReferenceArrayOutput) ToStatefulRuleGroupReferenceArrayOutput() StatefulRuleGroupReferenceArrayOutput {
	return o
}

func (o StatefulRuleGroupReferenceArrayOutput) ToStatefulRuleGroupReferenceArrayOutputWithContext(ctx context.Context) StatefulRuleGroupReferenceArrayOutput {
	return o
}

func (o StatefulRuleGroupReferenceArrayOutput) Index(i pulumi.IntInput) StatefulRuleGroupReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatefulRuleGroupReference {
		return vs[0].([]StatefulRuleGroupReference)[vs[1].(int)]
	}).(StatefulRuleGroupReferenceOutput)
}

// Definition of StatefulRuleGroupReference
type StatefulRuleGroupReferenceResponse struct {
	// Property override
	Override *StatefulRuleGroupOverrideResponse `pulumi:"override"`
	// Property priority
	Priority *int `pulumi:"priority"`
	// A resource ARN.
	ResourceArn *string `pulumi:"resourceArn"`
}

// Definition of StatefulRuleGroupReference
type StatefulRuleGroupReferenceResponseOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleGroupReferenceResponse)(nil)).Elem()
}

func (o StatefulRuleGroupReferenceResponseOutput) ToStatefulRuleGroupReferenceResponseOutput() StatefulRuleGroupReferenceResponseOutput {
	return o
}

func (o StatefulRuleGroupReferenceResponseOutput) ToStatefulRuleGroupReferenceResponseOutputWithContext(ctx context.Context) StatefulRuleGroupReferenceResponseOutput {
	return o
}

// Property override
func (o StatefulRuleGroupReferenceResponseOutput) Override() StatefulRuleGroupOverrideResponsePtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupReferenceResponse) *StatefulRuleGroupOverrideResponse { return v.Override }).(StatefulRuleGroupOverrideResponsePtrOutput)
}

// Property priority
func (o StatefulRuleGroupReferenceResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupReferenceResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A resource ARN.
func (o StatefulRuleGroupReferenceResponseOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleGroupReferenceResponse) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

type StatefulRuleGroupReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (StatefulRuleGroupReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatefulRuleGroupReferenceResponse)(nil)).Elem()
}

func (o StatefulRuleGroupReferenceResponseArrayOutput) ToStatefulRuleGroupReferenceResponseArrayOutput() StatefulRuleGroupReferenceResponseArrayOutput {
	return o
}

func (o StatefulRuleGroupReferenceResponseArrayOutput) ToStatefulRuleGroupReferenceResponseArrayOutputWithContext(ctx context.Context) StatefulRuleGroupReferenceResponseArrayOutput {
	return o
}

func (o StatefulRuleGroupReferenceResponseArrayOutput) Index(i pulumi.IntInput) StatefulRuleGroupReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatefulRuleGroupReferenceResponse {
		return vs[0].([]StatefulRuleGroupReferenceResponse)[vs[1].(int)]
	}).(StatefulRuleGroupReferenceResponseOutput)
}

// Definition of StatefulRuleOptions
type StatefulRuleOptions struct {
	// Property ruleOrder
	RuleOrder *string `pulumi:"ruleOrder"`
}

// StatefulRuleOptionsInput is an input type that accepts StatefulRuleOptionsArgs and StatefulRuleOptionsOutput values.
// You can construct a concrete instance of `StatefulRuleOptionsInput` via:
//
//	StatefulRuleOptionsArgs{...}
type StatefulRuleOptionsInput interface {
	pulumi.Input

	ToStatefulRuleOptionsOutput() StatefulRuleOptionsOutput
	ToStatefulRuleOptionsOutputWithContext(context.Context) StatefulRuleOptionsOutput
}

// Definition of StatefulRuleOptions
type StatefulRuleOptionsArgs struct {
	// Property ruleOrder
	RuleOrder pulumi.StringPtrInput `pulumi:"ruleOrder"`
}

func (StatefulRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleOptions)(nil)).Elem()
}

func (i StatefulRuleOptionsArgs) ToStatefulRuleOptionsOutput() StatefulRuleOptionsOutput {
	return i.ToStatefulRuleOptionsOutputWithContext(context.Background())
}

func (i StatefulRuleOptionsArgs) ToStatefulRuleOptionsOutputWithContext(ctx context.Context) StatefulRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleOptionsOutput)
}

func (i StatefulRuleOptionsArgs) ToStatefulRuleOptionsPtrOutput() StatefulRuleOptionsPtrOutput {
	return i.ToStatefulRuleOptionsPtrOutputWithContext(context.Background())
}

func (i StatefulRuleOptionsArgs) ToStatefulRuleOptionsPtrOutputWithContext(ctx context.Context) StatefulRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleOptionsOutput).ToStatefulRuleOptionsPtrOutputWithContext(ctx)
}

// StatefulRuleOptionsPtrInput is an input type that accepts StatefulRuleOptionsArgs, StatefulRuleOptionsPtr and StatefulRuleOptionsPtrOutput values.
// You can construct a concrete instance of `StatefulRuleOptionsPtrInput` via:
//
//	        StatefulRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type StatefulRuleOptionsPtrInput interface {
	pulumi.Input

	ToStatefulRuleOptionsPtrOutput() StatefulRuleOptionsPtrOutput
	ToStatefulRuleOptionsPtrOutputWithContext(context.Context) StatefulRuleOptionsPtrOutput
}

type statefulRuleOptionsPtrType StatefulRuleOptionsArgs

func StatefulRuleOptionsPtr(v *StatefulRuleOptionsArgs) StatefulRuleOptionsPtrInput {
	return (*statefulRuleOptionsPtrType)(v)
}

func (*statefulRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulRuleOptions)(nil)).Elem()
}

func (i *statefulRuleOptionsPtrType) ToStatefulRuleOptionsPtrOutput() StatefulRuleOptionsPtrOutput {
	return i.ToStatefulRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *statefulRuleOptionsPtrType) ToStatefulRuleOptionsPtrOutputWithContext(ctx context.Context) StatefulRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulRuleOptionsPtrOutput)
}

// Definition of StatefulRuleOptions
type StatefulRuleOptionsOutput struct{ *pulumi.OutputState }

func (StatefulRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleOptions)(nil)).Elem()
}

func (o StatefulRuleOptionsOutput) ToStatefulRuleOptionsOutput() StatefulRuleOptionsOutput {
	return o
}

func (o StatefulRuleOptionsOutput) ToStatefulRuleOptionsOutputWithContext(ctx context.Context) StatefulRuleOptionsOutput {
	return o
}

func (o StatefulRuleOptionsOutput) ToStatefulRuleOptionsPtrOutput() StatefulRuleOptionsPtrOutput {
	return o.ToStatefulRuleOptionsPtrOutputWithContext(context.Background())
}

func (o StatefulRuleOptionsOutput) ToStatefulRuleOptionsPtrOutputWithContext(ctx context.Context) StatefulRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulRuleOptions) *StatefulRuleOptions {
		return &v
	}).(StatefulRuleOptionsPtrOutput)
}

// Property ruleOrder
func (o StatefulRuleOptionsOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleOptions) *string { return v.RuleOrder }).(pulumi.StringPtrOutput)
}

type StatefulRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (StatefulRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulRuleOptions)(nil)).Elem()
}

func (o StatefulRuleOptionsPtrOutput) ToStatefulRuleOptionsPtrOutput() StatefulRuleOptionsPtrOutput {
	return o
}

func (o StatefulRuleOptionsPtrOutput) ToStatefulRuleOptionsPtrOutputWithContext(ctx context.Context) StatefulRuleOptionsPtrOutput {
	return o
}

func (o StatefulRuleOptionsPtrOutput) Elem() StatefulRuleOptionsOutput {
	return o.ApplyT(func(v *StatefulRuleOptions) StatefulRuleOptions {
		if v != nil {
			return *v
		}
		var ret StatefulRuleOptions
		return ret
	}).(StatefulRuleOptionsOutput)
}

// Property ruleOrder
func (o StatefulRuleOptionsPtrOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.RuleOrder
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulRuleOptions
type StatefulRuleOptionsResponse struct {
	// Property ruleOrder
	RuleOrder *string `pulumi:"ruleOrder"`
}

// Definition of StatefulRuleOptions
type StatefulRuleOptionsResponseOutput struct{ *pulumi.OutputState }

func (StatefulRuleOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleOptionsResponse)(nil)).Elem()
}

func (o StatefulRuleOptionsResponseOutput) ToStatefulRuleOptionsResponseOutput() StatefulRuleOptionsResponseOutput {
	return o
}

func (o StatefulRuleOptionsResponseOutput) ToStatefulRuleOptionsResponseOutputWithContext(ctx context.Context) StatefulRuleOptionsResponseOutput {
	return o
}

// Property ruleOrder
func (o StatefulRuleOptionsResponseOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleOptionsResponse) *string { return v.RuleOrder }).(pulumi.StringPtrOutput)
}

type StatefulRuleOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (StatefulRuleOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulRuleOptionsResponse)(nil)).Elem()
}

func (o StatefulRuleOptionsResponsePtrOutput) ToStatefulRuleOptionsResponsePtrOutput() StatefulRuleOptionsResponsePtrOutput {
	return o
}

func (o StatefulRuleOptionsResponsePtrOutput) ToStatefulRuleOptionsResponsePtrOutputWithContext(ctx context.Context) StatefulRuleOptionsResponsePtrOutput {
	return o
}

func (o StatefulRuleOptionsResponsePtrOutput) Elem() StatefulRuleOptionsResponseOutput {
	return o.ApplyT(func(v *StatefulRuleOptionsResponse) StatefulRuleOptionsResponse {
		if v != nil {
			return *v
		}
		var ret StatefulRuleOptionsResponse
		return ret
	}).(StatefulRuleOptionsResponseOutput)
}

// Property ruleOrder
func (o StatefulRuleOptionsResponsePtrOutput) RuleOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatefulRuleOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuleOrder
	}).(pulumi.StringPtrOutput)
}

// Definition of StatefulRule
type StatefulRuleResponse struct {
	// Property action
	Action *string `pulumi:"action"`
	// Property header
	Header *HeaderResponse `pulumi:"header"`
	// Property ruleOptions
	RuleOptions []RuleOptionResponse `pulumi:"ruleOptions"`
}

// Definition of StatefulRule
type StatefulRuleResponseOutput struct{ *pulumi.OutputState }

func (StatefulRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulRuleResponse)(nil)).Elem()
}

func (o StatefulRuleResponseOutput) ToStatefulRuleResponseOutput() StatefulRuleResponseOutput {
	return o
}

func (o StatefulRuleResponseOutput) ToStatefulRuleResponseOutputWithContext(ctx context.Context) StatefulRuleResponseOutput {
	return o
}

// Property action
func (o StatefulRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Property header
func (o StatefulRuleResponseOutput) Header() HeaderResponsePtrOutput {
	return o.ApplyT(func(v StatefulRuleResponse) *HeaderResponse { return v.Header }).(HeaderResponsePtrOutput)
}

// Property ruleOptions
func (o StatefulRuleResponseOutput) RuleOptions() RuleOptionResponseArrayOutput {
	return o.ApplyT(func(v StatefulRuleResponse) []RuleOptionResponse { return v.RuleOptions }).(RuleOptionResponseArrayOutput)
}

type StatefulRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (StatefulRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatefulRuleResponse)(nil)).Elem()
}

func (o StatefulRuleResponseArrayOutput) ToStatefulRuleResponseArrayOutput() StatefulRuleResponseArrayOutput {
	return o
}

func (o StatefulRuleResponseArrayOutput) ToStatefulRuleResponseArrayOutputWithContext(ctx context.Context) StatefulRuleResponseArrayOutput {
	return o
}

func (o StatefulRuleResponseArrayOutput) Index(i pulumi.IntInput) StatefulRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatefulRuleResponse {
		return vs[0].([]StatefulRuleResponse)[vs[1].(int)]
	}).(StatefulRuleResponseOutput)
}

// Definition of StatelessRule
type StatelessRule struct {
	// Property priority
	Priority *int `pulumi:"priority"`
	// Property ruleDefinition
	RuleDefinition *RuleDefinition `pulumi:"ruleDefinition"`
}

// StatelessRuleInput is an input type that accepts StatelessRuleArgs and StatelessRuleOutput values.
// You can construct a concrete instance of `StatelessRuleInput` via:
//
//	StatelessRuleArgs{...}
type StatelessRuleInput interface {
	pulumi.Input

	ToStatelessRuleOutput() StatelessRuleOutput
	ToStatelessRuleOutputWithContext(context.Context) StatelessRuleOutput
}

// Definition of StatelessRule
type StatelessRuleArgs struct {
	// Property priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Property ruleDefinition
	RuleDefinition RuleDefinitionPtrInput `pulumi:"ruleDefinition"`
}

func (StatelessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRule)(nil)).Elem()
}

func (i StatelessRuleArgs) ToStatelessRuleOutput() StatelessRuleOutput {
	return i.ToStatelessRuleOutputWithContext(context.Background())
}

func (i StatelessRuleArgs) ToStatelessRuleOutputWithContext(ctx context.Context) StatelessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRuleOutput)
}

// StatelessRuleArrayInput is an input type that accepts StatelessRuleArray and StatelessRuleArrayOutput values.
// You can construct a concrete instance of `StatelessRuleArrayInput` via:
//
//	StatelessRuleArray{ StatelessRuleArgs{...} }
type StatelessRuleArrayInput interface {
	pulumi.Input

	ToStatelessRuleArrayOutput() StatelessRuleArrayOutput
	ToStatelessRuleArrayOutputWithContext(context.Context) StatelessRuleArrayOutput
}

type StatelessRuleArray []StatelessRuleInput

func (StatelessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatelessRule)(nil)).Elem()
}

func (i StatelessRuleArray) ToStatelessRuleArrayOutput() StatelessRuleArrayOutput {
	return i.ToStatelessRuleArrayOutputWithContext(context.Background())
}

func (i StatelessRuleArray) ToStatelessRuleArrayOutputWithContext(ctx context.Context) StatelessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRuleArrayOutput)
}

// Definition of StatelessRule
type StatelessRuleOutput struct{ *pulumi.OutputState }

func (StatelessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRule)(nil)).Elem()
}

func (o StatelessRuleOutput) ToStatelessRuleOutput() StatelessRuleOutput {
	return o
}

func (o StatelessRuleOutput) ToStatelessRuleOutputWithContext(ctx context.Context) StatelessRuleOutput {
	return o
}

// Property priority
func (o StatelessRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatelessRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Property ruleDefinition
func (o StatelessRuleOutput) RuleDefinition() RuleDefinitionPtrOutput {
	return o.ApplyT(func(v StatelessRule) *RuleDefinition { return v.RuleDefinition }).(RuleDefinitionPtrOutput)
}

type StatelessRuleArrayOutput struct{ *pulumi.OutputState }

func (StatelessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatelessRule)(nil)).Elem()
}

func (o StatelessRuleArrayOutput) ToStatelessRuleArrayOutput() StatelessRuleArrayOutput {
	return o
}

func (o StatelessRuleArrayOutput) ToStatelessRuleArrayOutputWithContext(ctx context.Context) StatelessRuleArrayOutput {
	return o
}

func (o StatelessRuleArrayOutput) Index(i pulumi.IntInput) StatelessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatelessRule {
		return vs[0].([]StatelessRule)[vs[1].(int)]
	}).(StatelessRuleOutput)
}

// Definition of StatelessRuleGroupReference
type StatelessRuleGroupReference struct {
	// Property priority
	Priority *int `pulumi:"priority"`
	// A resource ARN.
	ResourceArn *string `pulumi:"resourceArn"`
}

// StatelessRuleGroupReferenceInput is an input type that accepts StatelessRuleGroupReferenceArgs and StatelessRuleGroupReferenceOutput values.
// You can construct a concrete instance of `StatelessRuleGroupReferenceInput` via:
//
//	StatelessRuleGroupReferenceArgs{...}
type StatelessRuleGroupReferenceInput interface {
	pulumi.Input

	ToStatelessRuleGroupReferenceOutput() StatelessRuleGroupReferenceOutput
	ToStatelessRuleGroupReferenceOutputWithContext(context.Context) StatelessRuleGroupReferenceOutput
}

// Definition of StatelessRuleGroupReference
type StatelessRuleGroupReferenceArgs struct {
	// Property priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// A resource ARN.
	ResourceArn pulumi.StringPtrInput `pulumi:"resourceArn"`
}

func (StatelessRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRuleGroupReference)(nil)).Elem()
}

func (i StatelessRuleGroupReferenceArgs) ToStatelessRuleGroupReferenceOutput() StatelessRuleGroupReferenceOutput {
	return i.ToStatelessRuleGroupReferenceOutputWithContext(context.Background())
}

func (i StatelessRuleGroupReferenceArgs) ToStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) StatelessRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRuleGroupReferenceOutput)
}

// StatelessRuleGroupReferenceArrayInput is an input type that accepts StatelessRuleGroupReferenceArray and StatelessRuleGroupReferenceArrayOutput values.
// You can construct a concrete instance of `StatelessRuleGroupReferenceArrayInput` via:
//
//	StatelessRuleGroupReferenceArray{ StatelessRuleGroupReferenceArgs{...} }
type StatelessRuleGroupReferenceArrayInput interface {
	pulumi.Input

	ToStatelessRuleGroupReferenceArrayOutput() StatelessRuleGroupReferenceArrayOutput
	ToStatelessRuleGroupReferenceArrayOutputWithContext(context.Context) StatelessRuleGroupReferenceArrayOutput
}

type StatelessRuleGroupReferenceArray []StatelessRuleGroupReferenceInput

func (StatelessRuleGroupReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatelessRuleGroupReference)(nil)).Elem()
}

func (i StatelessRuleGroupReferenceArray) ToStatelessRuleGroupReferenceArrayOutput() StatelessRuleGroupReferenceArrayOutput {
	return i.ToStatelessRuleGroupReferenceArrayOutputWithContext(context.Background())
}

func (i StatelessRuleGroupReferenceArray) ToStatelessRuleGroupReferenceArrayOutputWithContext(ctx context.Context) StatelessRuleGroupReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRuleGroupReferenceArrayOutput)
}

// Definition of StatelessRuleGroupReference
type StatelessRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (StatelessRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRuleGroupReference)(nil)).Elem()
}

func (o StatelessRuleGroupReferenceOutput) ToStatelessRuleGroupReferenceOutput() StatelessRuleGroupReferenceOutput {
	return o
}

func (o StatelessRuleGroupReferenceOutput) ToStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) StatelessRuleGroupReferenceOutput {
	return o
}

// Property priority
func (o StatelessRuleGroupReferenceOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatelessRuleGroupReference) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A resource ARN.
func (o StatelessRuleGroupReferenceOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatelessRuleGroupReference) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

type StatelessRuleGroupReferenceArrayOutput struct{ *pulumi.OutputState }

func (StatelessRuleGroupReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatelessRuleGroupReference)(nil)).Elem()
}

func (o StatelessRuleGroupReferenceArrayOutput) ToStatelessRuleGroupReferenceArrayOutput() StatelessRuleGroupReferenceArrayOutput {
	return o
}

func (o StatelessRuleGroupReferenceArrayOutput) ToStatelessRuleGroupReferenceArrayOutputWithContext(ctx context.Context) StatelessRuleGroupReferenceArrayOutput {
	return o
}

func (o StatelessRuleGroupReferenceArrayOutput) Index(i pulumi.IntInput) StatelessRuleGroupReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatelessRuleGroupReference {
		return vs[0].([]StatelessRuleGroupReference)[vs[1].(int)]
	}).(StatelessRuleGroupReferenceOutput)
}

// Definition of StatelessRuleGroupReference
type StatelessRuleGroupReferenceResponse struct {
	// Property priority
	Priority *int `pulumi:"priority"`
	// A resource ARN.
	ResourceArn *string `pulumi:"resourceArn"`
}

// Definition of StatelessRuleGroupReference
type StatelessRuleGroupReferenceResponseOutput struct{ *pulumi.OutputState }

func (StatelessRuleGroupReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRuleGroupReferenceResponse)(nil)).Elem()
}

func (o StatelessRuleGroupReferenceResponseOutput) ToStatelessRuleGroupReferenceResponseOutput() StatelessRuleGroupReferenceResponseOutput {
	return o
}

func (o StatelessRuleGroupReferenceResponseOutput) ToStatelessRuleGroupReferenceResponseOutputWithContext(ctx context.Context) StatelessRuleGroupReferenceResponseOutput {
	return o
}

// Property priority
func (o StatelessRuleGroupReferenceResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatelessRuleGroupReferenceResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A resource ARN.
func (o StatelessRuleGroupReferenceResponseOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatelessRuleGroupReferenceResponse) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

type StatelessRuleGroupReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (StatelessRuleGroupReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatelessRuleGroupReferenceResponse)(nil)).Elem()
}

func (o StatelessRuleGroupReferenceResponseArrayOutput) ToStatelessRuleGroupReferenceResponseArrayOutput() StatelessRuleGroupReferenceResponseArrayOutput {
	return o
}

func (o StatelessRuleGroupReferenceResponseArrayOutput) ToStatelessRuleGroupReferenceResponseArrayOutputWithContext(ctx context.Context) StatelessRuleGroupReferenceResponseArrayOutput {
	return o
}

func (o StatelessRuleGroupReferenceResponseArrayOutput) Index(i pulumi.IntInput) StatelessRuleGroupReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatelessRuleGroupReferenceResponse {
		return vs[0].([]StatelessRuleGroupReferenceResponse)[vs[1].(int)]
	}).(StatelessRuleGroupReferenceResponseOutput)
}

// Definition of StatelessRule
type StatelessRuleResponse struct {
	// Property priority
	Priority *int `pulumi:"priority"`
	// Property ruleDefinition
	RuleDefinition *RuleDefinitionResponse `pulumi:"ruleDefinition"`
}

// Definition of StatelessRule
type StatelessRuleResponseOutput struct{ *pulumi.OutputState }

func (StatelessRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRuleResponse)(nil)).Elem()
}

func (o StatelessRuleResponseOutput) ToStatelessRuleResponseOutput() StatelessRuleResponseOutput {
	return o
}

func (o StatelessRuleResponseOutput) ToStatelessRuleResponseOutputWithContext(ctx context.Context) StatelessRuleResponseOutput {
	return o
}

// Property priority
func (o StatelessRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatelessRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Property ruleDefinition
func (o StatelessRuleResponseOutput) RuleDefinition() RuleDefinitionResponsePtrOutput {
	return o.ApplyT(func(v StatelessRuleResponse) *RuleDefinitionResponse { return v.RuleDefinition }).(RuleDefinitionResponsePtrOutput)
}

type StatelessRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (StatelessRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatelessRuleResponse)(nil)).Elem()
}

func (o StatelessRuleResponseArrayOutput) ToStatelessRuleResponseArrayOutput() StatelessRuleResponseArrayOutput {
	return o
}

func (o StatelessRuleResponseArrayOutput) ToStatelessRuleResponseArrayOutputWithContext(ctx context.Context) StatelessRuleResponseArrayOutput {
	return o
}

func (o StatelessRuleResponseArrayOutput) Index(i pulumi.IntInput) StatelessRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatelessRuleResponse {
		return vs[0].([]StatelessRuleResponse)[vs[1].(int)]
	}).(StatelessRuleResponseOutput)
}

// Definition of StatelessRulesAndCustomActions
type StatelessRulesAndCustomActions struct {
	// Property customActions
	CustomActions []CustomAction `pulumi:"customActions"`
	// Property statelessRules
	StatelessRules []StatelessRule `pulumi:"statelessRules"`
}

// StatelessRulesAndCustomActionsInput is an input type that accepts StatelessRulesAndCustomActionsArgs and StatelessRulesAndCustomActionsOutput values.
// You can construct a concrete instance of `StatelessRulesAndCustomActionsInput` via:
//
//	StatelessRulesAndCustomActionsArgs{...}
type StatelessRulesAndCustomActionsInput interface {
	pulumi.Input

	ToStatelessRulesAndCustomActionsOutput() StatelessRulesAndCustomActionsOutput
	ToStatelessRulesAndCustomActionsOutputWithContext(context.Context) StatelessRulesAndCustomActionsOutput
}

// Definition of StatelessRulesAndCustomActions
type StatelessRulesAndCustomActionsArgs struct {
	// Property customActions
	CustomActions CustomActionArrayInput `pulumi:"customActions"`
	// Property statelessRules
	StatelessRules StatelessRuleArrayInput `pulumi:"statelessRules"`
}

func (StatelessRulesAndCustomActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRulesAndCustomActions)(nil)).Elem()
}

func (i StatelessRulesAndCustomActionsArgs) ToStatelessRulesAndCustomActionsOutput() StatelessRulesAndCustomActionsOutput {
	return i.ToStatelessRulesAndCustomActionsOutputWithContext(context.Background())
}

func (i StatelessRulesAndCustomActionsArgs) ToStatelessRulesAndCustomActionsOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRulesAndCustomActionsOutput)
}

func (i StatelessRulesAndCustomActionsArgs) ToStatelessRulesAndCustomActionsPtrOutput() StatelessRulesAndCustomActionsPtrOutput {
	return i.ToStatelessRulesAndCustomActionsPtrOutputWithContext(context.Background())
}

func (i StatelessRulesAndCustomActionsArgs) ToStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRulesAndCustomActionsOutput).ToStatelessRulesAndCustomActionsPtrOutputWithContext(ctx)
}

// StatelessRulesAndCustomActionsPtrInput is an input type that accepts StatelessRulesAndCustomActionsArgs, StatelessRulesAndCustomActionsPtr and StatelessRulesAndCustomActionsPtrOutput values.
// You can construct a concrete instance of `StatelessRulesAndCustomActionsPtrInput` via:
//
//	        StatelessRulesAndCustomActionsArgs{...}
//
//	or:
//
//	        nil
type StatelessRulesAndCustomActionsPtrInput interface {
	pulumi.Input

	ToStatelessRulesAndCustomActionsPtrOutput() StatelessRulesAndCustomActionsPtrOutput
	ToStatelessRulesAndCustomActionsPtrOutputWithContext(context.Context) StatelessRulesAndCustomActionsPtrOutput
}

type statelessRulesAndCustomActionsPtrType StatelessRulesAndCustomActionsArgs

func StatelessRulesAndCustomActionsPtr(v *StatelessRulesAndCustomActionsArgs) StatelessRulesAndCustomActionsPtrInput {
	return (*statelessRulesAndCustomActionsPtrType)(v)
}

func (*statelessRulesAndCustomActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatelessRulesAndCustomActions)(nil)).Elem()
}

func (i *statelessRulesAndCustomActionsPtrType) ToStatelessRulesAndCustomActionsPtrOutput() StatelessRulesAndCustomActionsPtrOutput {
	return i.ToStatelessRulesAndCustomActionsPtrOutputWithContext(context.Background())
}

func (i *statelessRulesAndCustomActionsPtrType) ToStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessRulesAndCustomActionsPtrOutput)
}

// Definition of StatelessRulesAndCustomActions
type StatelessRulesAndCustomActionsOutput struct{ *pulumi.OutputState }

func (StatelessRulesAndCustomActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRulesAndCustomActions)(nil)).Elem()
}

func (o StatelessRulesAndCustomActionsOutput) ToStatelessRulesAndCustomActionsOutput() StatelessRulesAndCustomActionsOutput {
	return o
}

func (o StatelessRulesAndCustomActionsOutput) ToStatelessRulesAndCustomActionsOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsOutput {
	return o
}

func (o StatelessRulesAndCustomActionsOutput) ToStatelessRulesAndCustomActionsPtrOutput() StatelessRulesAndCustomActionsPtrOutput {
	return o.ToStatelessRulesAndCustomActionsPtrOutputWithContext(context.Background())
}

func (o StatelessRulesAndCustomActionsOutput) ToStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatelessRulesAndCustomActions) *StatelessRulesAndCustomActions {
		return &v
	}).(StatelessRulesAndCustomActionsPtrOutput)
}

// Property customActions
func (o StatelessRulesAndCustomActionsOutput) CustomActions() CustomActionArrayOutput {
	return o.ApplyT(func(v StatelessRulesAndCustomActions) []CustomAction { return v.CustomActions }).(CustomActionArrayOutput)
}

// Property statelessRules
func (o StatelessRulesAndCustomActionsOutput) StatelessRules() StatelessRuleArrayOutput {
	return o.ApplyT(func(v StatelessRulesAndCustomActions) []StatelessRule { return v.StatelessRules }).(StatelessRuleArrayOutput)
}

type StatelessRulesAndCustomActionsPtrOutput struct{ *pulumi.OutputState }

func (StatelessRulesAndCustomActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatelessRulesAndCustomActions)(nil)).Elem()
}

func (o StatelessRulesAndCustomActionsPtrOutput) ToStatelessRulesAndCustomActionsPtrOutput() StatelessRulesAndCustomActionsPtrOutput {
	return o
}

func (o StatelessRulesAndCustomActionsPtrOutput) ToStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsPtrOutput {
	return o
}

func (o StatelessRulesAndCustomActionsPtrOutput) Elem() StatelessRulesAndCustomActionsOutput {
	return o.ApplyT(func(v *StatelessRulesAndCustomActions) StatelessRulesAndCustomActions {
		if v != nil {
			return *v
		}
		var ret StatelessRulesAndCustomActions
		return ret
	}).(StatelessRulesAndCustomActionsOutput)
}

// Property customActions
func (o StatelessRulesAndCustomActionsPtrOutput) CustomActions() CustomActionArrayOutput {
	return o.ApplyT(func(v *StatelessRulesAndCustomActions) []CustomAction {
		if v == nil {
			return nil
		}
		return v.CustomActions
	}).(CustomActionArrayOutput)
}

// Property statelessRules
func (o StatelessRulesAndCustomActionsPtrOutput) StatelessRules() StatelessRuleArrayOutput {
	return o.ApplyT(func(v *StatelessRulesAndCustomActions) []StatelessRule {
		if v == nil {
			return nil
		}
		return v.StatelessRules
	}).(StatelessRuleArrayOutput)
}

// Definition of StatelessRulesAndCustomActions
type StatelessRulesAndCustomActionsResponse struct {
	// Property customActions
	CustomActions []CustomActionResponse `pulumi:"customActions"`
	// Property statelessRules
	StatelessRules []StatelessRuleResponse `pulumi:"statelessRules"`
}

// Definition of StatelessRulesAndCustomActions
type StatelessRulesAndCustomActionsResponseOutput struct{ *pulumi.OutputState }

func (StatelessRulesAndCustomActionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessRulesAndCustomActionsResponse)(nil)).Elem()
}

func (o StatelessRulesAndCustomActionsResponseOutput) ToStatelessRulesAndCustomActionsResponseOutput() StatelessRulesAndCustomActionsResponseOutput {
	return o
}

func (o StatelessRulesAndCustomActionsResponseOutput) ToStatelessRulesAndCustomActionsResponseOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsResponseOutput {
	return o
}

// Property customActions
func (o StatelessRulesAndCustomActionsResponseOutput) CustomActions() CustomActionResponseArrayOutput {
	return o.ApplyT(func(v StatelessRulesAndCustomActionsResponse) []CustomActionResponse { return v.CustomActions }).(CustomActionResponseArrayOutput)
}

// Property statelessRules
func (o StatelessRulesAndCustomActionsResponseOutput) StatelessRules() StatelessRuleResponseArrayOutput {
	return o.ApplyT(func(v StatelessRulesAndCustomActionsResponse) []StatelessRuleResponse { return v.StatelessRules }).(StatelessRuleResponseArrayOutput)
}

type StatelessRulesAndCustomActionsResponsePtrOutput struct{ *pulumi.OutputState }

func (StatelessRulesAndCustomActionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatelessRulesAndCustomActionsResponse)(nil)).Elem()
}

func (o StatelessRulesAndCustomActionsResponsePtrOutput) ToStatelessRulesAndCustomActionsResponsePtrOutput() StatelessRulesAndCustomActionsResponsePtrOutput {
	return o
}

func (o StatelessRulesAndCustomActionsResponsePtrOutput) ToStatelessRulesAndCustomActionsResponsePtrOutputWithContext(ctx context.Context) StatelessRulesAndCustomActionsResponsePtrOutput {
	return o
}

func (o StatelessRulesAndCustomActionsResponsePtrOutput) Elem() StatelessRulesAndCustomActionsResponseOutput {
	return o.ApplyT(func(v *StatelessRulesAndCustomActionsResponse) StatelessRulesAndCustomActionsResponse {
		if v != nil {
			return *v
		}
		var ret StatelessRulesAndCustomActionsResponse
		return ret
	}).(StatelessRulesAndCustomActionsResponseOutput)
}

// Property customActions
func (o StatelessRulesAndCustomActionsResponsePtrOutput) CustomActions() CustomActionResponseArrayOutput {
	return o.ApplyT(func(v *StatelessRulesAndCustomActionsResponse) []CustomActionResponse {
		if v == nil {
			return nil
		}
		return v.CustomActions
	}).(CustomActionResponseArrayOutput)
}

// Property statelessRules
func (o StatelessRulesAndCustomActionsResponsePtrOutput) StatelessRules() StatelessRuleResponseArrayOutput {
	return o.ApplyT(func(v *StatelessRulesAndCustomActionsResponse) []StatelessRuleResponse {
		if v == nil {
			return nil
		}
		return v.StatelessRules
	}).(StatelessRuleResponseArrayOutput)
}

// Definition of StatusCodes
type StatusCodes struct {
	// The items (status codes) for an origin group.
	Items []int `pulumi:"items"`
	// The number of status codes.
	Quantity *int `pulumi:"quantity"`
}

// StatusCodesInput is an input type that accepts StatusCodesArgs and StatusCodesOutput values.
// You can construct a concrete instance of `StatusCodesInput` via:
//
//	StatusCodesArgs{...}
type StatusCodesInput interface {
	pulumi.Input

	ToStatusCodesOutput() StatusCodesOutput
	ToStatusCodesOutputWithContext(context.Context) StatusCodesOutput
}

// Definition of StatusCodes
type StatusCodesArgs struct {
	// The items (status codes) for an origin group.
	Items pulumi.IntArrayInput `pulumi:"items"`
	// The number of status codes.
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
}

func (StatusCodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodes)(nil)).Elem()
}

func (i StatusCodesArgs) ToStatusCodesOutput() StatusCodesOutput {
	return i.ToStatusCodesOutputWithContext(context.Background())
}

func (i StatusCodesArgs) ToStatusCodesOutputWithContext(ctx context.Context) StatusCodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesOutput)
}

func (i StatusCodesArgs) ToStatusCodesPtrOutput() StatusCodesPtrOutput {
	return i.ToStatusCodesPtrOutputWithContext(context.Background())
}

func (i StatusCodesArgs) ToStatusCodesPtrOutputWithContext(ctx context.Context) StatusCodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesOutput).ToStatusCodesPtrOutputWithContext(ctx)
}

// StatusCodesPtrInput is an input type that accepts StatusCodesArgs, StatusCodesPtr and StatusCodesPtrOutput values.
// You can construct a concrete instance of `StatusCodesPtrInput` via:
//
//	        StatusCodesArgs{...}
//
//	or:
//
//	        nil
type StatusCodesPtrInput interface {
	pulumi.Input

	ToStatusCodesPtrOutput() StatusCodesPtrOutput
	ToStatusCodesPtrOutputWithContext(context.Context) StatusCodesPtrOutput
}

type statusCodesPtrType StatusCodesArgs

func StatusCodesPtr(v *StatusCodesArgs) StatusCodesPtrInput {
	return (*statusCodesPtrType)(v)
}

func (*statusCodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusCodes)(nil)).Elem()
}

func (i *statusCodesPtrType) ToStatusCodesPtrOutput() StatusCodesPtrOutput {
	return i.ToStatusCodesPtrOutputWithContext(context.Background())
}

func (i *statusCodesPtrType) ToStatusCodesPtrOutputWithContext(ctx context.Context) StatusCodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesPtrOutput)
}

// Definition of StatusCodes
type StatusCodesOutput struct{ *pulumi.OutputState }

func (StatusCodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodes)(nil)).Elem()
}

func (o StatusCodesOutput) ToStatusCodesOutput() StatusCodesOutput {
	return o
}

func (o StatusCodesOutput) ToStatusCodesOutputWithContext(ctx context.Context) StatusCodesOutput {
	return o
}

func (o StatusCodesOutput) ToStatusCodesPtrOutput() StatusCodesPtrOutput {
	return o.ToStatusCodesPtrOutputWithContext(context.Background())
}

func (o StatusCodesOutput) ToStatusCodesPtrOutputWithContext(ctx context.Context) StatusCodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusCodes) *StatusCodes {
		return &v
	}).(StatusCodesPtrOutput)
}

// The items (status codes) for an origin group.
func (o StatusCodesOutput) Items() pulumi.IntArrayOutput {
	return o.ApplyT(func(v StatusCodes) []int { return v.Items }).(pulumi.IntArrayOutput)
}

// The number of status codes.
func (o StatusCodesOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodes) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type StatusCodesPtrOutput struct{ *pulumi.OutputState }

func (StatusCodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusCodes)(nil)).Elem()
}

func (o StatusCodesPtrOutput) ToStatusCodesPtrOutput() StatusCodesPtrOutput {
	return o
}

func (o StatusCodesPtrOutput) ToStatusCodesPtrOutputWithContext(ctx context.Context) StatusCodesPtrOutput {
	return o
}

func (o StatusCodesPtrOutput) Elem() StatusCodesOutput {
	return o.ApplyT(func(v *StatusCodes) StatusCodes {
		if v != nil {
			return *v
		}
		var ret StatusCodes
		return ret
	}).(StatusCodesOutput)
}

// The items (status codes) for an origin group.
func (o StatusCodesPtrOutput) Items() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *StatusCodes) []int {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.IntArrayOutput)
}

// The number of status codes.
func (o StatusCodesPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StatusCodes) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Definition of StatusCodes
type StatusCodesResponse struct {
	// The items (status codes) for an origin group.
	Items []int `pulumi:"items"`
	// The number of status codes.
	Quantity *int `pulumi:"quantity"`
}

// Definition of StatusCodes
type StatusCodesResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesResponse)(nil)).Elem()
}

func (o StatusCodesResponseOutput) ToStatusCodesResponseOutput() StatusCodesResponseOutput {
	return o
}

func (o StatusCodesResponseOutput) ToStatusCodesResponseOutputWithContext(ctx context.Context) StatusCodesResponseOutput {
	return o
}

// The items (status codes) for an origin group.
func (o StatusCodesResponseOutput) Items() pulumi.IntArrayOutput {
	return o.ApplyT(func(v StatusCodesResponse) []int { return v.Items }).(pulumi.IntArrayOutput)
}

// The number of status codes.
func (o StatusCodesResponseOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesResponse) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type StatusCodesResponsePtrOutput struct{ *pulumi.OutputState }

func (StatusCodesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusCodesResponse)(nil)).Elem()
}

func (o StatusCodesResponsePtrOutput) ToStatusCodesResponsePtrOutput() StatusCodesResponsePtrOutput {
	return o
}

func (o StatusCodesResponsePtrOutput) ToStatusCodesResponsePtrOutputWithContext(ctx context.Context) StatusCodesResponsePtrOutput {
	return o
}

func (o StatusCodesResponsePtrOutput) Elem() StatusCodesResponseOutput {
	return o.ApplyT(func(v *StatusCodesResponse) StatusCodesResponse {
		if v != nil {
			return *v
		}
		var ret StatusCodesResponse
		return ret
	}).(StatusCodesResponseOutput)
}

// The items (status codes) for an origin group.
func (o StatusCodesResponsePtrOutput) Items() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *StatusCodesResponse) []int {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.IntArrayOutput)
}

// The number of status codes.
func (o StatusCodesResponsePtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StatusCodesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.IntPtrOutput)
}

// Definition of StatusNameEnumValue
type StatusNameEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// StatusNameEnumValueInput is an input type that accepts StatusNameEnumValueArgs and StatusNameEnumValueOutput values.
// You can construct a concrete instance of `StatusNameEnumValueInput` via:
//
//	StatusNameEnumValueArgs{...}
type StatusNameEnumValueInput interface {
	pulumi.Input

	ToStatusNameEnumValueOutput() StatusNameEnumValueOutput
	ToStatusNameEnumValueOutputWithContext(context.Context) StatusNameEnumValueOutput
}

// Definition of StatusNameEnumValue
type StatusNameEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StatusNameEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusNameEnumValue)(nil)).Elem()
}

func (i StatusNameEnumValueArgs) ToStatusNameEnumValueOutput() StatusNameEnumValueOutput {
	return i.ToStatusNameEnumValueOutputWithContext(context.Background())
}

func (i StatusNameEnumValueArgs) ToStatusNameEnumValueOutputWithContext(ctx context.Context) StatusNameEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusNameEnumValueOutput)
}

func (i StatusNameEnumValueArgs) ToStatusNameEnumValuePtrOutput() StatusNameEnumValuePtrOutput {
	return i.ToStatusNameEnumValuePtrOutputWithContext(context.Background())
}

func (i StatusNameEnumValueArgs) ToStatusNameEnumValuePtrOutputWithContext(ctx context.Context) StatusNameEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusNameEnumValueOutput).ToStatusNameEnumValuePtrOutputWithContext(ctx)
}

// StatusNameEnumValuePtrInput is an input type that accepts StatusNameEnumValueArgs, StatusNameEnumValuePtr and StatusNameEnumValuePtrOutput values.
// You can construct a concrete instance of `StatusNameEnumValuePtrInput` via:
//
//	        StatusNameEnumValueArgs{...}
//
//	or:
//
//	        nil
type StatusNameEnumValuePtrInput interface {
	pulumi.Input

	ToStatusNameEnumValuePtrOutput() StatusNameEnumValuePtrOutput
	ToStatusNameEnumValuePtrOutputWithContext(context.Context) StatusNameEnumValuePtrOutput
}

type statusNameEnumValuePtrType StatusNameEnumValueArgs

func StatusNameEnumValuePtr(v *StatusNameEnumValueArgs) StatusNameEnumValuePtrInput {
	return (*statusNameEnumValuePtrType)(v)
}

func (*statusNameEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusNameEnumValue)(nil)).Elem()
}

func (i *statusNameEnumValuePtrType) ToStatusNameEnumValuePtrOutput() StatusNameEnumValuePtrOutput {
	return i.ToStatusNameEnumValuePtrOutputWithContext(context.Background())
}

func (i *statusNameEnumValuePtrType) ToStatusNameEnumValuePtrOutputWithContext(ctx context.Context) StatusNameEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusNameEnumValuePtrOutput)
}

// Definition of StatusNameEnumValue
type StatusNameEnumValueOutput struct{ *pulumi.OutputState }

func (StatusNameEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusNameEnumValue)(nil)).Elem()
}

func (o StatusNameEnumValueOutput) ToStatusNameEnumValueOutput() StatusNameEnumValueOutput {
	return o
}

func (o StatusNameEnumValueOutput) ToStatusNameEnumValueOutputWithContext(ctx context.Context) StatusNameEnumValueOutput {
	return o
}

func (o StatusNameEnumValueOutput) ToStatusNameEnumValuePtrOutput() StatusNameEnumValuePtrOutput {
	return o.ToStatusNameEnumValuePtrOutputWithContext(context.Background())
}

func (o StatusNameEnumValueOutput) ToStatusNameEnumValuePtrOutputWithContext(ctx context.Context) StatusNameEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusNameEnumValue) *StatusNameEnumValue {
		return &v
	}).(StatusNameEnumValuePtrOutput)
}

// Property value
func (o StatusNameEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusNameEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StatusNameEnumValuePtrOutput struct{ *pulumi.OutputState }

func (StatusNameEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusNameEnumValue)(nil)).Elem()
}

func (o StatusNameEnumValuePtrOutput) ToStatusNameEnumValuePtrOutput() StatusNameEnumValuePtrOutput {
	return o
}

func (o StatusNameEnumValuePtrOutput) ToStatusNameEnumValuePtrOutputWithContext(ctx context.Context) StatusNameEnumValuePtrOutput {
	return o
}

func (o StatusNameEnumValuePtrOutput) Elem() StatusNameEnumValueOutput {
	return o.ApplyT(func(v *StatusNameEnumValue) StatusNameEnumValue {
		if v != nil {
			return *v
		}
		var ret StatusNameEnumValue
		return ret
	}).(StatusNameEnumValueOutput)
}

// Property value
func (o StatusNameEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusNameEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of StatusNameEnumValue
type StatusNameEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of StatusNameEnumValue
type StatusNameEnumValueResponseOutput struct{ *pulumi.OutputState }

func (StatusNameEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusNameEnumValueResponse)(nil)).Elem()
}

func (o StatusNameEnumValueResponseOutput) ToStatusNameEnumValueResponseOutput() StatusNameEnumValueResponseOutput {
	return o
}

func (o StatusNameEnumValueResponseOutput) ToStatusNameEnumValueResponseOutputWithContext(ctx context.Context) StatusNameEnumValueResponseOutput {
	return o
}

// Property value
func (o StatusNameEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusNameEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StatusNameEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (StatusNameEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusNameEnumValueResponse)(nil)).Elem()
}

func (o StatusNameEnumValueResponsePtrOutput) ToStatusNameEnumValueResponsePtrOutput() StatusNameEnumValueResponsePtrOutput {
	return o
}

func (o StatusNameEnumValueResponsePtrOutput) ToStatusNameEnumValueResponsePtrOutputWithContext(ctx context.Context) StatusNameEnumValueResponsePtrOutput {
	return o
}

func (o StatusNameEnumValueResponsePtrOutput) Elem() StatusNameEnumValueResponseOutput {
	return o.ApplyT(func(v *StatusNameEnumValueResponse) StatusNameEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret StatusNameEnumValueResponse
		return ret
	}).(StatusNameEnumValueResponseOutput)
}

// Property value
func (o StatusNameEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusNameEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of statusTypeEnumValue
type StatusTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// StatusTypeEnumValueInput is an input type that accepts StatusTypeEnumValueArgs and StatusTypeEnumValueOutput values.
// You can construct a concrete instance of `StatusTypeEnumValueInput` via:
//
//	StatusTypeEnumValueArgs{...}
type StatusTypeEnumValueInput interface {
	pulumi.Input

	ToStatusTypeEnumValueOutput() StatusTypeEnumValueOutput
	ToStatusTypeEnumValueOutputWithContext(context.Context) StatusTypeEnumValueOutput
}

// Definition of statusTypeEnumValue
type StatusTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StatusTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusTypeEnumValue)(nil)).Elem()
}

func (i StatusTypeEnumValueArgs) ToStatusTypeEnumValueOutput() StatusTypeEnumValueOutput {
	return i.ToStatusTypeEnumValueOutputWithContext(context.Background())
}

func (i StatusTypeEnumValueArgs) ToStatusTypeEnumValueOutputWithContext(ctx context.Context) StatusTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusTypeEnumValueOutput)
}

func (i StatusTypeEnumValueArgs) ToStatusTypeEnumValuePtrOutput() StatusTypeEnumValuePtrOutput {
	return i.ToStatusTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i StatusTypeEnumValueArgs) ToStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) StatusTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusTypeEnumValueOutput).ToStatusTypeEnumValuePtrOutputWithContext(ctx)
}

// StatusTypeEnumValuePtrInput is an input type that accepts StatusTypeEnumValueArgs, StatusTypeEnumValuePtr and StatusTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `StatusTypeEnumValuePtrInput` via:
//
//	        StatusTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type StatusTypeEnumValuePtrInput interface {
	pulumi.Input

	ToStatusTypeEnumValuePtrOutput() StatusTypeEnumValuePtrOutput
	ToStatusTypeEnumValuePtrOutputWithContext(context.Context) StatusTypeEnumValuePtrOutput
}

type statusTypeEnumValuePtrType StatusTypeEnumValueArgs

func StatusTypeEnumValuePtr(v *StatusTypeEnumValueArgs) StatusTypeEnumValuePtrInput {
	return (*statusTypeEnumValuePtrType)(v)
}

func (*statusTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusTypeEnumValue)(nil)).Elem()
}

func (i *statusTypeEnumValuePtrType) ToStatusTypeEnumValuePtrOutput() StatusTypeEnumValuePtrOutput {
	return i.ToStatusTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *statusTypeEnumValuePtrType) ToStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) StatusTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusTypeEnumValuePtrOutput)
}

// Definition of statusTypeEnumValue
type StatusTypeEnumValueOutput struct{ *pulumi.OutputState }

func (StatusTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusTypeEnumValue)(nil)).Elem()
}

func (o StatusTypeEnumValueOutput) ToStatusTypeEnumValueOutput() StatusTypeEnumValueOutput {
	return o
}

func (o StatusTypeEnumValueOutput) ToStatusTypeEnumValueOutputWithContext(ctx context.Context) StatusTypeEnumValueOutput {
	return o
}

func (o StatusTypeEnumValueOutput) ToStatusTypeEnumValuePtrOutput() StatusTypeEnumValuePtrOutput {
	return o.ToStatusTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o StatusTypeEnumValueOutput) ToStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) StatusTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusTypeEnumValue) *StatusTypeEnumValue {
		return &v
	}).(StatusTypeEnumValuePtrOutput)
}

// Property value
func (o StatusTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StatusTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (StatusTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusTypeEnumValue)(nil)).Elem()
}

func (o StatusTypeEnumValuePtrOutput) ToStatusTypeEnumValuePtrOutput() StatusTypeEnumValuePtrOutput {
	return o
}

func (o StatusTypeEnumValuePtrOutput) ToStatusTypeEnumValuePtrOutputWithContext(ctx context.Context) StatusTypeEnumValuePtrOutput {
	return o
}

func (o StatusTypeEnumValuePtrOutput) Elem() StatusTypeEnumValueOutput {
	return o.ApplyT(func(v *StatusTypeEnumValue) StatusTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret StatusTypeEnumValue
		return ret
	}).(StatusTypeEnumValueOutput)
}

// Property value
func (o StatusTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of statusTypeEnumValue
type StatusTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of statusTypeEnumValue
type StatusTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (StatusTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusTypeEnumValueResponse)(nil)).Elem()
}

func (o StatusTypeEnumValueResponseOutput) ToStatusTypeEnumValueResponseOutput() StatusTypeEnumValueResponseOutput {
	return o
}

func (o StatusTypeEnumValueResponseOutput) ToStatusTypeEnumValueResponseOutputWithContext(ctx context.Context) StatusTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o StatusTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StatusTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (StatusTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusTypeEnumValueResponse)(nil)).Elem()
}

func (o StatusTypeEnumValueResponsePtrOutput) ToStatusTypeEnumValueResponsePtrOutput() StatusTypeEnumValueResponsePtrOutput {
	return o
}

func (o StatusTypeEnumValueResponsePtrOutput) ToStatusTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) StatusTypeEnumValueResponsePtrOutput {
	return o
}

func (o StatusTypeEnumValueResponsePtrOutput) Elem() StatusTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *StatusTypeEnumValueResponse) StatusTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret StatusTypeEnumValueResponse
		return ret
	}).(StatusTypeEnumValueResponseOutput)
}

// Property value
func (o StatusTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of StorageClassAnalysis
type StorageClassAnalysis struct {
	// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
	DataExport *DataExport `pulumi:"dataExport"`
}

// StorageClassAnalysisInput is an input type that accepts StorageClassAnalysisArgs and StorageClassAnalysisOutput values.
// You can construct a concrete instance of `StorageClassAnalysisInput` via:
//
//	StorageClassAnalysisArgs{...}
type StorageClassAnalysisInput interface {
	pulumi.Input

	ToStorageClassAnalysisOutput() StorageClassAnalysisOutput
	ToStorageClassAnalysisOutputWithContext(context.Context) StorageClassAnalysisOutput
}

// Definition of StorageClassAnalysis
type StorageClassAnalysisArgs struct {
	// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
	DataExport DataExportPtrInput `pulumi:"dataExport"`
}

func (StorageClassAnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassAnalysis)(nil)).Elem()
}

func (i StorageClassAnalysisArgs) ToStorageClassAnalysisOutput() StorageClassAnalysisOutput {
	return i.ToStorageClassAnalysisOutputWithContext(context.Background())
}

func (i StorageClassAnalysisArgs) ToStorageClassAnalysisOutputWithContext(ctx context.Context) StorageClassAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClassAnalysisOutput)
}

func (i StorageClassAnalysisArgs) ToStorageClassAnalysisPtrOutput() StorageClassAnalysisPtrOutput {
	return i.ToStorageClassAnalysisPtrOutputWithContext(context.Background())
}

func (i StorageClassAnalysisArgs) ToStorageClassAnalysisPtrOutputWithContext(ctx context.Context) StorageClassAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClassAnalysisOutput).ToStorageClassAnalysisPtrOutputWithContext(ctx)
}

// StorageClassAnalysisPtrInput is an input type that accepts StorageClassAnalysisArgs, StorageClassAnalysisPtr and StorageClassAnalysisPtrOutput values.
// You can construct a concrete instance of `StorageClassAnalysisPtrInput` via:
//
//	        StorageClassAnalysisArgs{...}
//
//	or:
//
//	        nil
type StorageClassAnalysisPtrInput interface {
	pulumi.Input

	ToStorageClassAnalysisPtrOutput() StorageClassAnalysisPtrOutput
	ToStorageClassAnalysisPtrOutputWithContext(context.Context) StorageClassAnalysisPtrOutput
}

type storageClassAnalysisPtrType StorageClassAnalysisArgs

func StorageClassAnalysisPtr(v *StorageClassAnalysisArgs) StorageClassAnalysisPtrInput {
	return (*storageClassAnalysisPtrType)(v)
}

func (*storageClassAnalysisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClassAnalysis)(nil)).Elem()
}

func (i *storageClassAnalysisPtrType) ToStorageClassAnalysisPtrOutput() StorageClassAnalysisPtrOutput {
	return i.ToStorageClassAnalysisPtrOutputWithContext(context.Background())
}

func (i *storageClassAnalysisPtrType) ToStorageClassAnalysisPtrOutputWithContext(ctx context.Context) StorageClassAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClassAnalysisPtrOutput)
}

// Definition of StorageClassAnalysis
type StorageClassAnalysisOutput struct{ *pulumi.OutputState }

func (StorageClassAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassAnalysis)(nil)).Elem()
}

func (o StorageClassAnalysisOutput) ToStorageClassAnalysisOutput() StorageClassAnalysisOutput {
	return o
}

func (o StorageClassAnalysisOutput) ToStorageClassAnalysisOutputWithContext(ctx context.Context) StorageClassAnalysisOutput {
	return o
}

func (o StorageClassAnalysisOutput) ToStorageClassAnalysisPtrOutput() StorageClassAnalysisPtrOutput {
	return o.ToStorageClassAnalysisPtrOutputWithContext(context.Background())
}

func (o StorageClassAnalysisOutput) ToStorageClassAnalysisPtrOutputWithContext(ctx context.Context) StorageClassAnalysisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageClassAnalysis) *StorageClassAnalysis {
		return &v
	}).(StorageClassAnalysisPtrOutput)
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
func (o StorageClassAnalysisOutput) DataExport() DataExportPtrOutput {
	return o.ApplyT(func(v StorageClassAnalysis) *DataExport { return v.DataExport }).(DataExportPtrOutput)
}

type StorageClassAnalysisPtrOutput struct{ *pulumi.OutputState }

func (StorageClassAnalysisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClassAnalysis)(nil)).Elem()
}

func (o StorageClassAnalysisPtrOutput) ToStorageClassAnalysisPtrOutput() StorageClassAnalysisPtrOutput {
	return o
}

func (o StorageClassAnalysisPtrOutput) ToStorageClassAnalysisPtrOutputWithContext(ctx context.Context) StorageClassAnalysisPtrOutput {
	return o
}

func (o StorageClassAnalysisPtrOutput) Elem() StorageClassAnalysisOutput {
	return o.ApplyT(func(v *StorageClassAnalysis) StorageClassAnalysis {
		if v != nil {
			return *v
		}
		var ret StorageClassAnalysis
		return ret
	}).(StorageClassAnalysisOutput)
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
func (o StorageClassAnalysisPtrOutput) DataExport() DataExportPtrOutput {
	return o.ApplyT(func(v *StorageClassAnalysis) *DataExport {
		if v == nil {
			return nil
		}
		return v.DataExport
	}).(DataExportPtrOutput)
}

// Definition of StorageClassAnalysis
type StorageClassAnalysisResponse struct {
	// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
	DataExport *DataExportResponse `pulumi:"dataExport"`
}

// Definition of StorageClassAnalysis
type StorageClassAnalysisResponseOutput struct{ *pulumi.OutputState }

func (StorageClassAnalysisResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassAnalysisResponse)(nil)).Elem()
}

func (o StorageClassAnalysisResponseOutput) ToStorageClassAnalysisResponseOutput() StorageClassAnalysisResponseOutput {
	return o
}

func (o StorageClassAnalysisResponseOutput) ToStorageClassAnalysisResponseOutputWithContext(ctx context.Context) StorageClassAnalysisResponseOutput {
	return o
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
func (o StorageClassAnalysisResponseOutput) DataExport() DataExportResponsePtrOutput {
	return o.ApplyT(func(v StorageClassAnalysisResponse) *DataExportResponse { return v.DataExport }).(DataExportResponsePtrOutput)
}

type StorageClassAnalysisResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageClassAnalysisResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClassAnalysisResponse)(nil)).Elem()
}

func (o StorageClassAnalysisResponsePtrOutput) ToStorageClassAnalysisResponsePtrOutput() StorageClassAnalysisResponsePtrOutput {
	return o
}

func (o StorageClassAnalysisResponsePtrOutput) ToStorageClassAnalysisResponsePtrOutputWithContext(ctx context.Context) StorageClassAnalysisResponsePtrOutput {
	return o
}

func (o StorageClassAnalysisResponsePtrOutput) Elem() StorageClassAnalysisResponseOutput {
	return o.ApplyT(func(v *StorageClassAnalysisResponse) StorageClassAnalysisResponse {
		if v != nil {
			return *v
		}
		var ret StorageClassAnalysisResponse
		return ret
	}).(StorageClassAnalysisResponseOutput)
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported. Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
func (o StorageClassAnalysisResponsePtrOutput) DataExport() DataExportResponsePtrOutput {
	return o.ApplyT(func(v *StorageClassAnalysisResponse) *DataExportResponse {
		if v == nil {
			return nil
		}
		return v.DataExport
	}).(DataExportResponsePtrOutput)
}

// Definition of StorageTierEnumValue
type StorageTierEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// StorageTierEnumValueInput is an input type that accepts StorageTierEnumValueArgs and StorageTierEnumValueOutput values.
// You can construct a concrete instance of `StorageTierEnumValueInput` via:
//
//	StorageTierEnumValueArgs{...}
type StorageTierEnumValueInput interface {
	pulumi.Input

	ToStorageTierEnumValueOutput() StorageTierEnumValueOutput
	ToStorageTierEnumValueOutputWithContext(context.Context) StorageTierEnumValueOutput
}

// Definition of StorageTierEnumValue
type StorageTierEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StorageTierEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTierEnumValue)(nil)).Elem()
}

func (i StorageTierEnumValueArgs) ToStorageTierEnumValueOutput() StorageTierEnumValueOutput {
	return i.ToStorageTierEnumValueOutputWithContext(context.Background())
}

func (i StorageTierEnumValueArgs) ToStorageTierEnumValueOutputWithContext(ctx context.Context) StorageTierEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTierEnumValueOutput)
}

func (i StorageTierEnumValueArgs) ToStorageTierEnumValuePtrOutput() StorageTierEnumValuePtrOutput {
	return i.ToStorageTierEnumValuePtrOutputWithContext(context.Background())
}

func (i StorageTierEnumValueArgs) ToStorageTierEnumValuePtrOutputWithContext(ctx context.Context) StorageTierEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTierEnumValueOutput).ToStorageTierEnumValuePtrOutputWithContext(ctx)
}

// StorageTierEnumValuePtrInput is an input type that accepts StorageTierEnumValueArgs, StorageTierEnumValuePtr and StorageTierEnumValuePtrOutput values.
// You can construct a concrete instance of `StorageTierEnumValuePtrInput` via:
//
//	        StorageTierEnumValueArgs{...}
//
//	or:
//
//	        nil
type StorageTierEnumValuePtrInput interface {
	pulumi.Input

	ToStorageTierEnumValuePtrOutput() StorageTierEnumValuePtrOutput
	ToStorageTierEnumValuePtrOutputWithContext(context.Context) StorageTierEnumValuePtrOutput
}

type storageTierEnumValuePtrType StorageTierEnumValueArgs

func StorageTierEnumValuePtr(v *StorageTierEnumValueArgs) StorageTierEnumValuePtrInput {
	return (*storageTierEnumValuePtrType)(v)
}

func (*storageTierEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTierEnumValue)(nil)).Elem()
}

func (i *storageTierEnumValuePtrType) ToStorageTierEnumValuePtrOutput() StorageTierEnumValuePtrOutput {
	return i.ToStorageTierEnumValuePtrOutputWithContext(context.Background())
}

func (i *storageTierEnumValuePtrType) ToStorageTierEnumValuePtrOutputWithContext(ctx context.Context) StorageTierEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTierEnumValuePtrOutput)
}

// Definition of StorageTierEnumValue
type StorageTierEnumValueOutput struct{ *pulumi.OutputState }

func (StorageTierEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTierEnumValue)(nil)).Elem()
}

func (o StorageTierEnumValueOutput) ToStorageTierEnumValueOutput() StorageTierEnumValueOutput {
	return o
}

func (o StorageTierEnumValueOutput) ToStorageTierEnumValueOutputWithContext(ctx context.Context) StorageTierEnumValueOutput {
	return o
}

func (o StorageTierEnumValueOutput) ToStorageTierEnumValuePtrOutput() StorageTierEnumValuePtrOutput {
	return o.ToStorageTierEnumValuePtrOutputWithContext(context.Background())
}

func (o StorageTierEnumValueOutput) ToStorageTierEnumValuePtrOutputWithContext(ctx context.Context) StorageTierEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageTierEnumValue) *StorageTierEnumValue {
		return &v
	}).(StorageTierEnumValuePtrOutput)
}

// Property value
func (o StorageTierEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTierEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageTierEnumValuePtrOutput struct{ *pulumi.OutputState }

func (StorageTierEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTierEnumValue)(nil)).Elem()
}

func (o StorageTierEnumValuePtrOutput) ToStorageTierEnumValuePtrOutput() StorageTierEnumValuePtrOutput {
	return o
}

func (o StorageTierEnumValuePtrOutput) ToStorageTierEnumValuePtrOutputWithContext(ctx context.Context) StorageTierEnumValuePtrOutput {
	return o
}

func (o StorageTierEnumValuePtrOutput) Elem() StorageTierEnumValueOutput {
	return o.ApplyT(func(v *StorageTierEnumValue) StorageTierEnumValue {
		if v != nil {
			return *v
		}
		var ret StorageTierEnumValue
		return ret
	}).(StorageTierEnumValueOutput)
}

// Property value
func (o StorageTierEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTierEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of StorageTierEnumValue
type StorageTierEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of StorageTierEnumValue
type StorageTierEnumValueResponseOutput struct{ *pulumi.OutputState }

func (StorageTierEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTierEnumValueResponse)(nil)).Elem()
}

func (o StorageTierEnumValueResponseOutput) ToStorageTierEnumValueResponseOutput() StorageTierEnumValueResponseOutput {
	return o
}

func (o StorageTierEnumValueResponseOutput) ToStorageTierEnumValueResponseOutputWithContext(ctx context.Context) StorageTierEnumValueResponseOutput {
	return o
}

// Property value
func (o StorageTierEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTierEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageTierEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageTierEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTierEnumValueResponse)(nil)).Elem()
}

func (o StorageTierEnumValueResponsePtrOutput) ToStorageTierEnumValueResponsePtrOutput() StorageTierEnumValueResponsePtrOutput {
	return o
}

func (o StorageTierEnumValueResponsePtrOutput) ToStorageTierEnumValueResponsePtrOutputWithContext(ctx context.Context) StorageTierEnumValueResponsePtrOutput {
	return o
}

func (o StorageTierEnumValueResponsePtrOutput) Elem() StorageTierEnumValueResponseOutput {
	return o.ApplyT(func(v *StorageTierEnumValueResponse) StorageTierEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret StorageTierEnumValueResponse
		return ret
	}).(StorageTierEnumValueResponseOutput)
}

// Property value
func (o StorageTierEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTierEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of StreamSpecification
type StreamSpecification struct {
	// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
	ResourcePolicy *ResourcePolicy `pulumi:"resourcePolicy"`
	// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this table. Valid values for ``StreamViewType`` are:  +   ``KEYS_ONLY`` - Only the key attributes of the modified item are written to the stream.  +   ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream.  +   ``OLD_IMAGE`` - The entire item, as it appeared before it was modified, is written to the stream.  +   ``NEW_AND_OLD_IMAGES`` - Both the new and the old item images of the item are written to the stream.
	StreamViewType *string `pulumi:"streamViewType"`
}

// StreamSpecificationInput is an input type that accepts StreamSpecificationArgs and StreamSpecificationOutput values.
// You can construct a concrete instance of `StreamSpecificationInput` via:
//
//	StreamSpecificationArgs{...}
type StreamSpecificationInput interface {
	pulumi.Input

	ToStreamSpecificationOutput() StreamSpecificationOutput
	ToStreamSpecificationOutputWithContext(context.Context) StreamSpecificationOutput
}

// Definition of StreamSpecification
type StreamSpecificationArgs struct {
	// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
	ResourcePolicy ResourcePolicyPtrInput `pulumi:"resourcePolicy"`
	// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this table. Valid values for ``StreamViewType`` are:  +   ``KEYS_ONLY`` - Only the key attributes of the modified item are written to the stream.  +   ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream.  +   ``OLD_IMAGE`` - The entire item, as it appeared before it was modified, is written to the stream.  +   ``NEW_AND_OLD_IMAGES`` - Both the new and the old item images of the item are written to the stream.
	StreamViewType pulumi.StringPtrInput `pulumi:"streamViewType"`
}

func (StreamSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamSpecification)(nil)).Elem()
}

func (i StreamSpecificationArgs) ToStreamSpecificationOutput() StreamSpecificationOutput {
	return i.ToStreamSpecificationOutputWithContext(context.Background())
}

func (i StreamSpecificationArgs) ToStreamSpecificationOutputWithContext(ctx context.Context) StreamSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamSpecificationOutput)
}

func (i StreamSpecificationArgs) ToStreamSpecificationPtrOutput() StreamSpecificationPtrOutput {
	return i.ToStreamSpecificationPtrOutputWithContext(context.Background())
}

func (i StreamSpecificationArgs) ToStreamSpecificationPtrOutputWithContext(ctx context.Context) StreamSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamSpecificationOutput).ToStreamSpecificationPtrOutputWithContext(ctx)
}

// StreamSpecificationPtrInput is an input type that accepts StreamSpecificationArgs, StreamSpecificationPtr and StreamSpecificationPtrOutput values.
// You can construct a concrete instance of `StreamSpecificationPtrInput` via:
//
//	        StreamSpecificationArgs{...}
//
//	or:
//
//	        nil
type StreamSpecificationPtrInput interface {
	pulumi.Input

	ToStreamSpecificationPtrOutput() StreamSpecificationPtrOutput
	ToStreamSpecificationPtrOutputWithContext(context.Context) StreamSpecificationPtrOutput
}

type streamSpecificationPtrType StreamSpecificationArgs

func StreamSpecificationPtr(v *StreamSpecificationArgs) StreamSpecificationPtrInput {
	return (*streamSpecificationPtrType)(v)
}

func (*streamSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamSpecification)(nil)).Elem()
}

func (i *streamSpecificationPtrType) ToStreamSpecificationPtrOutput() StreamSpecificationPtrOutput {
	return i.ToStreamSpecificationPtrOutputWithContext(context.Background())
}

func (i *streamSpecificationPtrType) ToStreamSpecificationPtrOutputWithContext(ctx context.Context) StreamSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamSpecificationPtrOutput)
}

// Definition of StreamSpecification
type StreamSpecificationOutput struct{ *pulumi.OutputState }

func (StreamSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamSpecification)(nil)).Elem()
}

func (o StreamSpecificationOutput) ToStreamSpecificationOutput() StreamSpecificationOutput {
	return o
}

func (o StreamSpecificationOutput) ToStreamSpecificationOutputWithContext(ctx context.Context) StreamSpecificationOutput {
	return o
}

func (o StreamSpecificationOutput) ToStreamSpecificationPtrOutput() StreamSpecificationPtrOutput {
	return o.ToStreamSpecificationPtrOutputWithContext(context.Background())
}

func (o StreamSpecificationOutput) ToStreamSpecificationPtrOutputWithContext(ctx context.Context) StreamSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamSpecification) *StreamSpecification {
		return &v
	}).(StreamSpecificationPtrOutput)
}

// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
func (o StreamSpecificationOutput) ResourcePolicy() ResourcePolicyPtrOutput {
	return o.ApplyT(func(v StreamSpecification) *ResourcePolicy { return v.ResourcePolicy }).(ResourcePolicyPtrOutput)
}

// When an item in the table is modified, “StreamViewType“ determines what information is written to the stream for this table. Valid values for “StreamViewType“ are:  +   “KEYS_ONLY“ - Only the key attributes of the modified item are written to the stream.  +   “NEW_IMAGE“ - The entire item, as it appears after it was modified, is written to the stream.  +   “OLD_IMAGE“ - The entire item, as it appeared before it was modified, is written to the stream.  +   “NEW_AND_OLD_IMAGES“ - Both the new and the old item images of the item are written to the stream.
func (o StreamSpecificationOutput) StreamViewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamSpecification) *string { return v.StreamViewType }).(pulumi.StringPtrOutput)
}

type StreamSpecificationPtrOutput struct{ *pulumi.OutputState }

func (StreamSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamSpecification)(nil)).Elem()
}

func (o StreamSpecificationPtrOutput) ToStreamSpecificationPtrOutput() StreamSpecificationPtrOutput {
	return o
}

func (o StreamSpecificationPtrOutput) ToStreamSpecificationPtrOutputWithContext(ctx context.Context) StreamSpecificationPtrOutput {
	return o
}

func (o StreamSpecificationPtrOutput) Elem() StreamSpecificationOutput {
	return o.ApplyT(func(v *StreamSpecification) StreamSpecification {
		if v != nil {
			return *v
		}
		var ret StreamSpecification
		return ret
	}).(StreamSpecificationOutput)
}

// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
func (o StreamSpecificationPtrOutput) ResourcePolicy() ResourcePolicyPtrOutput {
	return o.ApplyT(func(v *StreamSpecification) *ResourcePolicy {
		if v == nil {
			return nil
		}
		return v.ResourcePolicy
	}).(ResourcePolicyPtrOutput)
}

// When an item in the table is modified, “StreamViewType“ determines what information is written to the stream for this table. Valid values for “StreamViewType“ are:  +   “KEYS_ONLY“ - Only the key attributes of the modified item are written to the stream.  +   “NEW_IMAGE“ - The entire item, as it appears after it was modified, is written to the stream.  +   “OLD_IMAGE“ - The entire item, as it appeared before it was modified, is written to the stream.  +   “NEW_AND_OLD_IMAGES“ - Both the new and the old item images of the item are written to the stream.
func (o StreamSpecificationPtrOutput) StreamViewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamSpecification) *string {
		if v == nil {
			return nil
		}
		return v.StreamViewType
	}).(pulumi.StringPtrOutput)
}

// Definition of StreamSpecification
type StreamSpecificationResponse struct {
	// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
	ResourcePolicy *ResourcePolicyResponse `pulumi:"resourcePolicy"`
	// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this table. Valid values for ``StreamViewType`` are:  +   ``KEYS_ONLY`` - Only the key attributes of the modified item are written to the stream.  +   ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream.  +   ``OLD_IMAGE`` - The entire item, as it appeared before it was modified, is written to the stream.  +   ``NEW_AND_OLD_IMAGES`` - Both the new and the old item images of the item are written to the stream.
	StreamViewType *string `pulumi:"streamViewType"`
}

// Definition of StreamSpecification
type StreamSpecificationResponseOutput struct{ *pulumi.OutputState }

func (StreamSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamSpecificationResponse)(nil)).Elem()
}

func (o StreamSpecificationResponseOutput) ToStreamSpecificationResponseOutput() StreamSpecificationResponseOutput {
	return o
}

func (o StreamSpecificationResponseOutput) ToStreamSpecificationResponseOutputWithContext(ctx context.Context) StreamSpecificationResponseOutput {
	return o
}

// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
func (o StreamSpecificationResponseOutput) ResourcePolicy() ResourcePolicyResponsePtrOutput {
	return o.ApplyT(func(v StreamSpecificationResponse) *ResourcePolicyResponse { return v.ResourcePolicy }).(ResourcePolicyResponsePtrOutput)
}

// When an item in the table is modified, “StreamViewType“ determines what information is written to the stream for this table. Valid values for “StreamViewType“ are:  +   “KEYS_ONLY“ - Only the key attributes of the modified item are written to the stream.  +   “NEW_IMAGE“ - The entire item, as it appears after it was modified, is written to the stream.  +   “OLD_IMAGE“ - The entire item, as it appeared before it was modified, is written to the stream.  +   “NEW_AND_OLD_IMAGES“ - Both the new and the old item images of the item are written to the stream.
func (o StreamSpecificationResponseOutput) StreamViewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamSpecificationResponse) *string { return v.StreamViewType }).(pulumi.StringPtrOutput)
}

type StreamSpecificationResponsePtrOutput struct{ *pulumi.OutputState }

func (StreamSpecificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamSpecificationResponse)(nil)).Elem()
}

func (o StreamSpecificationResponsePtrOutput) ToStreamSpecificationResponsePtrOutput() StreamSpecificationResponsePtrOutput {
	return o
}

func (o StreamSpecificationResponsePtrOutput) ToStreamSpecificationResponsePtrOutputWithContext(ctx context.Context) StreamSpecificationResponsePtrOutput {
	return o
}

func (o StreamSpecificationResponsePtrOutput) Elem() StreamSpecificationResponseOutput {
	return o.ApplyT(func(v *StreamSpecificationResponse) StreamSpecificationResponse {
		if v != nil {
			return *v
		}
		var ret StreamSpecificationResponse
		return ret
	}).(StreamSpecificationResponseOutput)
}

// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html). While defining resource-based policies in your CFNshort templates, the following considerations apply:  +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit.   +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.  +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template. For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template. Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.   For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
func (o StreamSpecificationResponsePtrOutput) ResourcePolicy() ResourcePolicyResponsePtrOutput {
	return o.ApplyT(func(v *StreamSpecificationResponse) *ResourcePolicyResponse {
		if v == nil {
			return nil
		}
		return v.ResourcePolicy
	}).(ResourcePolicyResponsePtrOutput)
}

// When an item in the table is modified, “StreamViewType“ determines what information is written to the stream for this table. Valid values for “StreamViewType“ are:  +   “KEYS_ONLY“ - Only the key attributes of the modified item are written to the stream.  +   “NEW_IMAGE“ - The entire item, as it appears after it was modified, is written to the stream.  +   “OLD_IMAGE“ - The entire item, as it appeared before it was modified, is written to the stream.  +   “NEW_AND_OLD_IMAGES“ - Both the new and the old item images of the item are written to the stream.
func (o StreamSpecificationResponsePtrOutput) StreamViewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamSpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreamViewType
	}).(pulumi.StringPtrOutput)
}

// Definition of Subnet
type Subnet struct {
	// <p>The Availability Zone of the subnet.</p>
	SubnetAvailabilityZone *AvailabilityZone `pulumi:"subnetAvailabilityZone"`
	// <p>The subnet identifier.</p>
	SubnetIdentifier *string `pulumi:"subnetIdentifier"`
	// <p>The status of the subnet.</p>
	SubnetStatus *string `pulumi:"subnetStatus"`
}

// SubnetInput is an input type that accepts SubnetArgs and SubnetOutput values.
// You can construct a concrete instance of `SubnetInput` via:
//
//	SubnetArgs{...}
type SubnetInput interface {
	pulumi.Input

	ToSubnetOutput() SubnetOutput
	ToSubnetOutputWithContext(context.Context) SubnetOutput
}

// Definition of Subnet
type SubnetArgs struct {
	// <p>The Availability Zone of the subnet.</p>
	SubnetAvailabilityZone AvailabilityZonePtrInput `pulumi:"subnetAvailabilityZone"`
	// <p>The subnet identifier.</p>
	SubnetIdentifier pulumi.StringPtrInput `pulumi:"subnetIdentifier"`
	// <p>The status of the subnet.</p>
	SubnetStatus pulumi.StringPtrInput `pulumi:"subnetStatus"`
}

func (SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (i SubnetArgs) ToSubnetOutput() SubnetOutput {
	return i.ToSubnetOutputWithContext(context.Background())
}

func (i SubnetArgs) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOutput)
}

// SubnetArrayInput is an input type that accepts SubnetArray and SubnetArrayOutput values.
// You can construct a concrete instance of `SubnetArrayInput` via:
//
//	SubnetArray{ SubnetArgs{...} }
type SubnetArrayInput interface {
	pulumi.Input

	ToSubnetArrayOutput() SubnetArrayOutput
	ToSubnetArrayOutputWithContext(context.Context) SubnetArrayOutput
}

type SubnetArray []SubnetInput

func (SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (i SubnetArray) ToSubnetArrayOutput() SubnetArrayOutput {
	return i.ToSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetArray) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetArrayOutput)
}

// Definition of Subnet
type SubnetOutput struct{ *pulumi.OutputState }

func (SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (o SubnetOutput) ToSubnetOutput() SubnetOutput {
	return o
}

func (o SubnetOutput) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return o
}

// <p>The Availability Zone of the subnet.</p>
func (o SubnetOutput) SubnetAvailabilityZone() AvailabilityZonePtrOutput {
	return o.ApplyT(func(v Subnet) *AvailabilityZone { return v.SubnetAvailabilityZone }).(AvailabilityZonePtrOutput)
}

// <p>The subnet identifier.</p>
func (o SubnetOutput) SubnetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.SubnetIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The status of the subnet.</p>
func (o SubnetOutput) SubnetStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.SubnetStatus }).(pulumi.StringPtrOutput)
}

type SubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (o SubnetArrayOutput) ToSubnetArrayOutput() SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) Index(i pulumi.IntInput) SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Subnet {
		return vs[0].([]Subnet)[vs[1].(int)]
	}).(SubnetOutput)
}

// Definition of SubnetMapping
type SubnetMapping struct {
	// [Network Load Balancers] The allocation ID of the Elastic IP address for an internet-facing load balancer.
	AllocationId *string `pulumi:"allocationId"`
	// [Network Load Balancers] The IPv6 address.
	IPv6Address *string `pulumi:"iPv6Address"`
	// A IPAddressType
	IpAddressType *string `pulumi:"ipAddressType"`
	// [Network Load Balancers] The private IPv4 address for an internal load balancer.
	PrivateIPv4Address *string `pulumi:"privateIPv4Address"`
	// A SubnetId.
	SubnetId *string `pulumi:"subnetId"`
}

// SubnetMappingInput is an input type that accepts SubnetMappingArgs and SubnetMappingOutput values.
// You can construct a concrete instance of `SubnetMappingInput` via:
//
//	SubnetMappingArgs{...}
type SubnetMappingInput interface {
	pulumi.Input

	ToSubnetMappingOutput() SubnetMappingOutput
	ToSubnetMappingOutputWithContext(context.Context) SubnetMappingOutput
}

// Definition of SubnetMapping
type SubnetMappingArgs struct {
	// [Network Load Balancers] The allocation ID of the Elastic IP address for an internet-facing load balancer.
	AllocationId pulumi.StringPtrInput `pulumi:"allocationId"`
	// [Network Load Balancers] The IPv6 address.
	IPv6Address pulumi.StringPtrInput `pulumi:"iPv6Address"`
	// A IPAddressType
	IpAddressType pulumi.StringPtrInput `pulumi:"ipAddressType"`
	// [Network Load Balancers] The private IPv4 address for an internal load balancer.
	PrivateIPv4Address pulumi.StringPtrInput `pulumi:"privateIPv4Address"`
	// A SubnetId.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (SubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetMapping)(nil)).Elem()
}

func (i SubnetMappingArgs) ToSubnetMappingOutput() SubnetMappingOutput {
	return i.ToSubnetMappingOutputWithContext(context.Background())
}

func (i SubnetMappingArgs) ToSubnetMappingOutputWithContext(ctx context.Context) SubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetMappingOutput)
}

// SubnetMappingArrayInput is an input type that accepts SubnetMappingArray and SubnetMappingArrayOutput values.
// You can construct a concrete instance of `SubnetMappingArrayInput` via:
//
//	SubnetMappingArray{ SubnetMappingArgs{...} }
type SubnetMappingArrayInput interface {
	pulumi.Input

	ToSubnetMappingArrayOutput() SubnetMappingArrayOutput
	ToSubnetMappingArrayOutputWithContext(context.Context) SubnetMappingArrayOutput
}

type SubnetMappingArray []SubnetMappingInput

func (SubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetMapping)(nil)).Elem()
}

func (i SubnetMappingArray) ToSubnetMappingArrayOutput() SubnetMappingArrayOutput {
	return i.ToSubnetMappingArrayOutputWithContext(context.Background())
}

func (i SubnetMappingArray) ToSubnetMappingArrayOutputWithContext(ctx context.Context) SubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetMappingArrayOutput)
}

// Definition of SubnetMapping
type SubnetMappingOutput struct{ *pulumi.OutputState }

func (SubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetMapping)(nil)).Elem()
}

func (o SubnetMappingOutput) ToSubnetMappingOutput() SubnetMappingOutput {
	return o
}

func (o SubnetMappingOutput) ToSubnetMappingOutputWithContext(ctx context.Context) SubnetMappingOutput {
	return o
}

// [Network Load Balancers] The allocation ID of the Elastic IP address for an internet-facing load balancer.
func (o SubnetMappingOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMapping) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

// [Network Load Balancers] The IPv6 address.
func (o SubnetMappingOutput) IPv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMapping) *string { return v.IPv6Address }).(pulumi.StringPtrOutput)
}

// A IPAddressType
func (o SubnetMappingOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMapping) *string { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

// [Network Load Balancers] The private IPv4 address for an internal load balancer.
func (o SubnetMappingOutput) PrivateIPv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMapping) *string { return v.PrivateIPv4Address }).(pulumi.StringPtrOutput)
}

// A SubnetId.
func (o SubnetMappingOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMapping) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type SubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (SubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetMapping)(nil)).Elem()
}

func (o SubnetMappingArrayOutput) ToSubnetMappingArrayOutput() SubnetMappingArrayOutput {
	return o
}

func (o SubnetMappingArrayOutput) ToSubnetMappingArrayOutputWithContext(ctx context.Context) SubnetMappingArrayOutput {
	return o
}

func (o SubnetMappingArrayOutput) Index(i pulumi.IntInput) SubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetMapping {
		return vs[0].([]SubnetMapping)[vs[1].(int)]
	}).(SubnetMappingOutput)
}

// Definition of SubnetMapping
type SubnetMappingResponse struct {
	// [Network Load Balancers] The allocation ID of the Elastic IP address for an internet-facing load balancer.
	AllocationId *string `pulumi:"allocationId"`
	// [Network Load Balancers] The IPv6 address.
	IPv6Address *string `pulumi:"iPv6Address"`
	// A IPAddressType
	IpAddressType *string `pulumi:"ipAddressType"`
	// [Network Load Balancers] The private IPv4 address for an internal load balancer.
	PrivateIPv4Address *string `pulumi:"privateIPv4Address"`
	// A SubnetId.
	SubnetId *string `pulumi:"subnetId"`
}

// Definition of SubnetMapping
type SubnetMappingResponseOutput struct{ *pulumi.OutputState }

func (SubnetMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetMappingResponse)(nil)).Elem()
}

func (o SubnetMappingResponseOutput) ToSubnetMappingResponseOutput() SubnetMappingResponseOutput {
	return o
}

func (o SubnetMappingResponseOutput) ToSubnetMappingResponseOutputWithContext(ctx context.Context) SubnetMappingResponseOutput {
	return o
}

// [Network Load Balancers] The allocation ID of the Elastic IP address for an internet-facing load balancer.
func (o SubnetMappingResponseOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMappingResponse) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

// [Network Load Balancers] The IPv6 address.
func (o SubnetMappingResponseOutput) IPv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMappingResponse) *string { return v.IPv6Address }).(pulumi.StringPtrOutput)
}

// A IPAddressType
func (o SubnetMappingResponseOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMappingResponse) *string { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

// [Network Load Balancers] The private IPv4 address for an internal load balancer.
func (o SubnetMappingResponseOutput) PrivateIPv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMappingResponse) *string { return v.PrivateIPv4Address }).(pulumi.StringPtrOutput)
}

// A SubnetId.
func (o SubnetMappingResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetMappingResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type SubnetMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetMappingResponse)(nil)).Elem()
}

func (o SubnetMappingResponseArrayOutput) ToSubnetMappingResponseArrayOutput() SubnetMappingResponseArrayOutput {
	return o
}

func (o SubnetMappingResponseArrayOutput) ToSubnetMappingResponseArrayOutputWithContext(ctx context.Context) SubnetMappingResponseArrayOutput {
	return o
}

func (o SubnetMappingResponseArrayOutput) Index(i pulumi.IntInput) SubnetMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetMappingResponse {
		return vs[0].([]SubnetMappingResponse)[vs[1].(int)]
	}).(SubnetMappingResponseOutput)
}

// Definition of Subnet
type SubnetResponse struct {
	// <p>The Availability Zone of the subnet.</p>
	SubnetAvailabilityZone *AvailabilityZoneResponse `pulumi:"subnetAvailabilityZone"`
	// <p>The subnet identifier.</p>
	SubnetIdentifier *string `pulumi:"subnetIdentifier"`
	// <p>The status of the subnet.</p>
	SubnetStatus *string `pulumi:"subnetStatus"`
}

// Definition of Subnet
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// <p>The Availability Zone of the subnet.</p>
func (o SubnetResponseOutput) SubnetAvailabilityZone() AvailabilityZoneResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *AvailabilityZoneResponse { return v.SubnetAvailabilityZone }).(AvailabilityZoneResponsePtrOutput)
}

// <p>The subnet identifier.</p>
func (o SubnetResponseOutput) SubnetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.SubnetIdentifier }).(pulumi.StringPtrOutput)
}

// <p>The status of the subnet.</p>
func (o SubnetResponseOutput) SubnetStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.SubnetStatus }).(pulumi.StringPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Definition of Subscription
type Subscription struct {
	// The endpoint that receives notifications from the SNS topic. The endpoint value depends on the protocol that you specify. For more information, see the ``Endpoint`` parameter of the ``Subscribe`` action in the *API Reference*.
	Endpoint *string `pulumi:"endpoint"`
	// The subscription's protocol. For more information, see the ``Protocol`` parameter of the ``Subscribe`` action in the *API Reference*.
	Protocol *string `pulumi:"protocol"`
}

// SubscriptionInput is an input type that accepts SubscriptionArgs and SubscriptionOutput values.
// You can construct a concrete instance of `SubscriptionInput` via:
//
//	SubscriptionArgs{...}
type SubscriptionInput interface {
	pulumi.Input

	ToSubscriptionOutput() SubscriptionOutput
	ToSubscriptionOutputWithContext(context.Context) SubscriptionOutput
}

// Definition of Subscription
type SubscriptionArgs struct {
	// The endpoint that receives notifications from the SNS topic. The endpoint value depends on the protocol that you specify. For more information, see the ``Endpoint`` parameter of the ``Subscribe`` action in the *API Reference*.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The subscription's protocol. For more information, see the ``Protocol`` parameter of the ``Subscribe`` action in the *API Reference*.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (SubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subscription)(nil)).Elem()
}

func (i SubscriptionArgs) ToSubscriptionOutput() SubscriptionOutput {
	return i.ToSubscriptionOutputWithContext(context.Background())
}

func (i SubscriptionArgs) ToSubscriptionOutputWithContext(ctx context.Context) SubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionOutput)
}

// SubscriptionArrayInput is an input type that accepts SubscriptionArray and SubscriptionArrayOutput values.
// You can construct a concrete instance of `SubscriptionArrayInput` via:
//
//	SubscriptionArray{ SubscriptionArgs{...} }
type SubscriptionArrayInput interface {
	pulumi.Input

	ToSubscriptionArrayOutput() SubscriptionArrayOutput
	ToSubscriptionArrayOutputWithContext(context.Context) SubscriptionArrayOutput
}

type SubscriptionArray []SubscriptionInput

func (SubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subscription)(nil)).Elem()
}

func (i SubscriptionArray) ToSubscriptionArrayOutput() SubscriptionArrayOutput {
	return i.ToSubscriptionArrayOutputWithContext(context.Background())
}

func (i SubscriptionArray) ToSubscriptionArrayOutputWithContext(ctx context.Context) SubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionArrayOutput)
}

// Definition of Subscription
type SubscriptionOutput struct{ *pulumi.OutputState }

func (SubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subscription)(nil)).Elem()
}

func (o SubscriptionOutput) ToSubscriptionOutput() SubscriptionOutput {
	return o
}

func (o SubscriptionOutput) ToSubscriptionOutputWithContext(ctx context.Context) SubscriptionOutput {
	return o
}

// The endpoint that receives notifications from the SNS topic. The endpoint value depends on the protocol that you specify. For more information, see the “Endpoint“ parameter of the “Subscribe“ action in the *API Reference*.
func (o SubscriptionOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subscription) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The subscription's protocol. For more information, see the “Protocol“ parameter of the “Subscribe“ action in the *API Reference*.
func (o SubscriptionOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subscription) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type SubscriptionArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subscription)(nil)).Elem()
}

func (o SubscriptionArrayOutput) ToSubscriptionArrayOutput() SubscriptionArrayOutput {
	return o
}

func (o SubscriptionArrayOutput) ToSubscriptionArrayOutputWithContext(ctx context.Context) SubscriptionArrayOutput {
	return o
}

func (o SubscriptionArrayOutput) Index(i pulumi.IntInput) SubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Subscription {
		return vs[0].([]Subscription)[vs[1].(int)]
	}).(SubscriptionOutput)
}

// Definition of Subscription
type SubscriptionResponse struct {
	// The endpoint that receives notifications from the SNS topic. The endpoint value depends on the protocol that you specify. For more information, see the ``Endpoint`` parameter of the ``Subscribe`` action in the *API Reference*.
	Endpoint *string `pulumi:"endpoint"`
	// The subscription's protocol. For more information, see the ``Protocol`` parameter of the ``Subscribe`` action in the *API Reference*.
	Protocol *string `pulumi:"protocol"`
}

// Definition of Subscription
type SubscriptionResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionResponse)(nil)).Elem()
}

func (o SubscriptionResponseOutput) ToSubscriptionResponseOutput() SubscriptionResponseOutput {
	return o
}

func (o SubscriptionResponseOutput) ToSubscriptionResponseOutputWithContext(ctx context.Context) SubscriptionResponseOutput {
	return o
}

// The endpoint that receives notifications from the SNS topic. The endpoint value depends on the protocol that you specify. For more information, see the “Endpoint“ parameter of the “Subscribe“ action in the *API Reference*.
func (o SubscriptionResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The subscription's protocol. For more information, see the “Protocol“ parameter of the “Subscribe“ action in the *API Reference*.
func (o SubscriptionResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type SubscriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionResponse)(nil)).Elem()
}

func (o SubscriptionResponseArrayOutput) ToSubscriptionResponseArrayOutput() SubscriptionResponseArrayOutput {
	return o
}

func (o SubscriptionResponseArrayOutput) ToSubscriptionResponseArrayOutputWithContext(ctx context.Context) SubscriptionResponseArrayOutput {
	return o
}

func (o SubscriptionResponseArrayOutput) Index(i pulumi.IntInput) SubscriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionResponse {
		return vs[0].([]SubscriptionResponse)[vs[1].(int)]
	}).(SubscriptionResponseOutput)
}

// Definition of SummaryStatusEnumValue
type SummaryStatusEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// SummaryStatusEnumValueInput is an input type that accepts SummaryStatusEnumValueArgs and SummaryStatusEnumValueOutput values.
// You can construct a concrete instance of `SummaryStatusEnumValueInput` via:
//
//	SummaryStatusEnumValueArgs{...}
type SummaryStatusEnumValueInput interface {
	pulumi.Input

	ToSummaryStatusEnumValueOutput() SummaryStatusEnumValueOutput
	ToSummaryStatusEnumValueOutputWithContext(context.Context) SummaryStatusEnumValueOutput
}

// Definition of SummaryStatusEnumValue
type SummaryStatusEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SummaryStatusEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SummaryStatusEnumValue)(nil)).Elem()
}

func (i SummaryStatusEnumValueArgs) ToSummaryStatusEnumValueOutput() SummaryStatusEnumValueOutput {
	return i.ToSummaryStatusEnumValueOutputWithContext(context.Background())
}

func (i SummaryStatusEnumValueArgs) ToSummaryStatusEnumValueOutputWithContext(ctx context.Context) SummaryStatusEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SummaryStatusEnumValueOutput)
}

func (i SummaryStatusEnumValueArgs) ToSummaryStatusEnumValuePtrOutput() SummaryStatusEnumValuePtrOutput {
	return i.ToSummaryStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i SummaryStatusEnumValueArgs) ToSummaryStatusEnumValuePtrOutputWithContext(ctx context.Context) SummaryStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SummaryStatusEnumValueOutput).ToSummaryStatusEnumValuePtrOutputWithContext(ctx)
}

// SummaryStatusEnumValuePtrInput is an input type that accepts SummaryStatusEnumValueArgs, SummaryStatusEnumValuePtr and SummaryStatusEnumValuePtrOutput values.
// You can construct a concrete instance of `SummaryStatusEnumValuePtrInput` via:
//
//	        SummaryStatusEnumValueArgs{...}
//
//	or:
//
//	        nil
type SummaryStatusEnumValuePtrInput interface {
	pulumi.Input

	ToSummaryStatusEnumValuePtrOutput() SummaryStatusEnumValuePtrOutput
	ToSummaryStatusEnumValuePtrOutputWithContext(context.Context) SummaryStatusEnumValuePtrOutput
}

type summaryStatusEnumValuePtrType SummaryStatusEnumValueArgs

func SummaryStatusEnumValuePtr(v *SummaryStatusEnumValueArgs) SummaryStatusEnumValuePtrInput {
	return (*summaryStatusEnumValuePtrType)(v)
}

func (*summaryStatusEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SummaryStatusEnumValue)(nil)).Elem()
}

func (i *summaryStatusEnumValuePtrType) ToSummaryStatusEnumValuePtrOutput() SummaryStatusEnumValuePtrOutput {
	return i.ToSummaryStatusEnumValuePtrOutputWithContext(context.Background())
}

func (i *summaryStatusEnumValuePtrType) ToSummaryStatusEnumValuePtrOutputWithContext(ctx context.Context) SummaryStatusEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SummaryStatusEnumValuePtrOutput)
}

// Definition of SummaryStatusEnumValue
type SummaryStatusEnumValueOutput struct{ *pulumi.OutputState }

func (SummaryStatusEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SummaryStatusEnumValue)(nil)).Elem()
}

func (o SummaryStatusEnumValueOutput) ToSummaryStatusEnumValueOutput() SummaryStatusEnumValueOutput {
	return o
}

func (o SummaryStatusEnumValueOutput) ToSummaryStatusEnumValueOutputWithContext(ctx context.Context) SummaryStatusEnumValueOutput {
	return o
}

func (o SummaryStatusEnumValueOutput) ToSummaryStatusEnumValuePtrOutput() SummaryStatusEnumValuePtrOutput {
	return o.ToSummaryStatusEnumValuePtrOutputWithContext(context.Background())
}

func (o SummaryStatusEnumValueOutput) ToSummaryStatusEnumValuePtrOutputWithContext(ctx context.Context) SummaryStatusEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SummaryStatusEnumValue) *SummaryStatusEnumValue {
		return &v
	}).(SummaryStatusEnumValuePtrOutput)
}

// Property value
func (o SummaryStatusEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SummaryStatusEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SummaryStatusEnumValuePtrOutput struct{ *pulumi.OutputState }

func (SummaryStatusEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SummaryStatusEnumValue)(nil)).Elem()
}

func (o SummaryStatusEnumValuePtrOutput) ToSummaryStatusEnumValuePtrOutput() SummaryStatusEnumValuePtrOutput {
	return o
}

func (o SummaryStatusEnumValuePtrOutput) ToSummaryStatusEnumValuePtrOutputWithContext(ctx context.Context) SummaryStatusEnumValuePtrOutput {
	return o
}

func (o SummaryStatusEnumValuePtrOutput) Elem() SummaryStatusEnumValueOutput {
	return o.ApplyT(func(v *SummaryStatusEnumValue) SummaryStatusEnumValue {
		if v != nil {
			return *v
		}
		var ret SummaryStatusEnumValue
		return ret
	}).(SummaryStatusEnumValueOutput)
}

// Property value
func (o SummaryStatusEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SummaryStatusEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SummaryStatusEnumValue
type SummaryStatusEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of SummaryStatusEnumValue
type SummaryStatusEnumValueResponseOutput struct{ *pulumi.OutputState }

func (SummaryStatusEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SummaryStatusEnumValueResponse)(nil)).Elem()
}

func (o SummaryStatusEnumValueResponseOutput) ToSummaryStatusEnumValueResponseOutput() SummaryStatusEnumValueResponseOutput {
	return o
}

func (o SummaryStatusEnumValueResponseOutput) ToSummaryStatusEnumValueResponseOutputWithContext(ctx context.Context) SummaryStatusEnumValueResponseOutput {
	return o
}

// Property value
func (o SummaryStatusEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SummaryStatusEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SummaryStatusEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (SummaryStatusEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SummaryStatusEnumValueResponse)(nil)).Elem()
}

func (o SummaryStatusEnumValueResponsePtrOutput) ToSummaryStatusEnumValueResponsePtrOutput() SummaryStatusEnumValueResponsePtrOutput {
	return o
}

func (o SummaryStatusEnumValueResponsePtrOutput) ToSummaryStatusEnumValueResponsePtrOutputWithContext(ctx context.Context) SummaryStatusEnumValueResponsePtrOutput {
	return o
}

func (o SummaryStatusEnumValueResponsePtrOutput) Elem() SummaryStatusEnumValueResponseOutput {
	return o.ApplyT(func(v *SummaryStatusEnumValueResponse) SummaryStatusEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret SummaryStatusEnumValueResponse
		return ret
	}).(SummaryStatusEnumValueResponseOutput)
}

// Property value
func (o SummaryStatusEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SummaryStatusEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of SystemControl
type SystemControl struct {
	// The namespaced kernel parameter to set a ``value`` for.
	Namespace *string `pulumi:"namespace"`
	// The namespaced kernel parameter to set a ``value`` for. Valid IPC namespace values: ``'kernel.msgmax' | 'kernel.msgmnb' | 'kernel.msgmni' | 'kernel.sem' | 'kernel.shmall' | 'kernel.shmmax' | 'kernel.shmmni' | 'kernel.shm_rmid_forced'``, and ``Sysctls`` that start with ``'fs.mqueue.*'``  Valid network namespace values: ``Sysctls`` that start with ``'net.*'``  All of these values are supported by Fargate.
	Value *string `pulumi:"value"`
}

// SystemControlInput is an input type that accepts SystemControlArgs and SystemControlOutput values.
// You can construct a concrete instance of `SystemControlInput` via:
//
//	SystemControlArgs{...}
type SystemControlInput interface {
	pulumi.Input

	ToSystemControlOutput() SystemControlOutput
	ToSystemControlOutputWithContext(context.Context) SystemControlOutput
}

// Definition of SystemControl
type SystemControlArgs struct {
	// The namespaced kernel parameter to set a ``value`` for.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The namespaced kernel parameter to set a ``value`` for. Valid IPC namespace values: ``'kernel.msgmax' | 'kernel.msgmnb' | 'kernel.msgmni' | 'kernel.sem' | 'kernel.shmall' | 'kernel.shmmax' | 'kernel.shmmni' | 'kernel.shm_rmid_forced'``, and ``Sysctls`` that start with ``'fs.mqueue.*'``  Valid network namespace values: ``Sysctls`` that start with ``'net.*'``  All of these values are supported by Fargate.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemControl)(nil)).Elem()
}

func (i SystemControlArgs) ToSystemControlOutput() SystemControlOutput {
	return i.ToSystemControlOutputWithContext(context.Background())
}

func (i SystemControlArgs) ToSystemControlOutputWithContext(ctx context.Context) SystemControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemControlOutput)
}

// SystemControlArrayInput is an input type that accepts SystemControlArray and SystemControlArrayOutput values.
// You can construct a concrete instance of `SystemControlArrayInput` via:
//
//	SystemControlArray{ SystemControlArgs{...} }
type SystemControlArrayInput interface {
	pulumi.Input

	ToSystemControlArrayOutput() SystemControlArrayOutput
	ToSystemControlArrayOutputWithContext(context.Context) SystemControlArrayOutput
}

type SystemControlArray []SystemControlInput

func (SystemControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemControl)(nil)).Elem()
}

func (i SystemControlArray) ToSystemControlArrayOutput() SystemControlArrayOutput {
	return i.ToSystemControlArrayOutputWithContext(context.Background())
}

func (i SystemControlArray) ToSystemControlArrayOutputWithContext(ctx context.Context) SystemControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemControlArrayOutput)
}

// Definition of SystemControl
type SystemControlOutput struct{ *pulumi.OutputState }

func (SystemControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemControl)(nil)).Elem()
}

func (o SystemControlOutput) ToSystemControlOutput() SystemControlOutput {
	return o
}

func (o SystemControlOutput) ToSystemControlOutputWithContext(ctx context.Context) SystemControlOutput {
	return o
}

// The namespaced kernel parameter to set a “value“ for.
func (o SystemControlOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemControl) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The namespaced kernel parameter to set a “value“ for. Valid IPC namespace values: “'kernel.msgmax' | 'kernel.msgmnb' | 'kernel.msgmni' | 'kernel.sem' | 'kernel.shmall' | 'kernel.shmmax' | 'kernel.shmmni' | 'kernel.shm_rmid_forced'“, and “Sysctls“ that start with “'fs.mqueue.*'“  Valid network namespace values: “Sysctls“ that start with “'net.*'“  All of these values are supported by Fargate.
func (o SystemControlOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemControl) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemControlArrayOutput struct{ *pulumi.OutputState }

func (SystemControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemControl)(nil)).Elem()
}

func (o SystemControlArrayOutput) ToSystemControlArrayOutput() SystemControlArrayOutput {
	return o
}

func (o SystemControlArrayOutput) ToSystemControlArrayOutputWithContext(ctx context.Context) SystemControlArrayOutput {
	return o
}

func (o SystemControlArrayOutput) Index(i pulumi.IntInput) SystemControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemControl {
		return vs[0].([]SystemControl)[vs[1].(int)]
	}).(SystemControlOutput)
}

// Definition of SystemControl
type SystemControlResponse struct {
	// The namespaced kernel parameter to set a ``value`` for.
	Namespace *string `pulumi:"namespace"`
	// The namespaced kernel parameter to set a ``value`` for. Valid IPC namespace values: ``'kernel.msgmax' | 'kernel.msgmnb' | 'kernel.msgmni' | 'kernel.sem' | 'kernel.shmall' | 'kernel.shmmax' | 'kernel.shmmni' | 'kernel.shm_rmid_forced'``, and ``Sysctls`` that start with ``'fs.mqueue.*'``  Valid network namespace values: ``Sysctls`` that start with ``'net.*'``  All of these values are supported by Fargate.
	Value *string `pulumi:"value"`
}

// Definition of SystemControl
type SystemControlResponseOutput struct{ *pulumi.OutputState }

func (SystemControlResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemControlResponse)(nil)).Elem()
}

func (o SystemControlResponseOutput) ToSystemControlResponseOutput() SystemControlResponseOutput {
	return o
}

func (o SystemControlResponseOutput) ToSystemControlResponseOutputWithContext(ctx context.Context) SystemControlResponseOutput {
	return o
}

// The namespaced kernel parameter to set a “value“ for.
func (o SystemControlResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemControlResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The namespaced kernel parameter to set a “value“ for. Valid IPC namespace values: “'kernel.msgmax' | 'kernel.msgmnb' | 'kernel.msgmni' | 'kernel.sem' | 'kernel.shmall' | 'kernel.shmmax' | 'kernel.shmmni' | 'kernel.shm_rmid_forced'“, and “Sysctls“ that start with “'fs.mqueue.*'“  Valid network namespace values: “Sysctls“ that start with “'net.*'“  All of these values are supported by Fargate.
func (o SystemControlResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemControlResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemControlResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemControlResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemControlResponse)(nil)).Elem()
}

func (o SystemControlResponseArrayOutput) ToSystemControlResponseArrayOutput() SystemControlResponseArrayOutput {
	return o
}

func (o SystemControlResponseArrayOutput) ToSystemControlResponseArrayOutputWithContext(ctx context.Context) SystemControlResponseArrayOutput {
	return o
}

func (o SystemControlResponseArrayOutput) Index(i pulumi.IntInput) SystemControlResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemControlResponse {
		return vs[0].([]SystemControlResponse)[vs[1].(int)]
	}).(SystemControlResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Definition of TCPFlagField
type TCPFlagField struct {
	// Property flags
	Flags []string `pulumi:"flags"`
	// Property masks
	Masks []string `pulumi:"masks"`
}

// TCPFlagFieldInput is an input type that accepts TCPFlagFieldArgs and TCPFlagFieldOutput values.
// You can construct a concrete instance of `TCPFlagFieldInput` via:
//
//	TCPFlagFieldArgs{...}
type TCPFlagFieldInput interface {
	pulumi.Input

	ToTCPFlagFieldOutput() TCPFlagFieldOutput
	ToTCPFlagFieldOutputWithContext(context.Context) TCPFlagFieldOutput
}

// Definition of TCPFlagField
type TCPFlagFieldArgs struct {
	// Property flags
	Flags pulumi.StringArrayInput `pulumi:"flags"`
	// Property masks
	Masks pulumi.StringArrayInput `pulumi:"masks"`
}

func (TCPFlagFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPFlagField)(nil)).Elem()
}

func (i TCPFlagFieldArgs) ToTCPFlagFieldOutput() TCPFlagFieldOutput {
	return i.ToTCPFlagFieldOutputWithContext(context.Background())
}

func (i TCPFlagFieldArgs) ToTCPFlagFieldOutputWithContext(ctx context.Context) TCPFlagFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPFlagFieldOutput)
}

// TCPFlagFieldArrayInput is an input type that accepts TCPFlagFieldArray and TCPFlagFieldArrayOutput values.
// You can construct a concrete instance of `TCPFlagFieldArrayInput` via:
//
//	TCPFlagFieldArray{ TCPFlagFieldArgs{...} }
type TCPFlagFieldArrayInput interface {
	pulumi.Input

	ToTCPFlagFieldArrayOutput() TCPFlagFieldArrayOutput
	ToTCPFlagFieldArrayOutputWithContext(context.Context) TCPFlagFieldArrayOutput
}

type TCPFlagFieldArray []TCPFlagFieldInput

func (TCPFlagFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TCPFlagField)(nil)).Elem()
}

func (i TCPFlagFieldArray) ToTCPFlagFieldArrayOutput() TCPFlagFieldArrayOutput {
	return i.ToTCPFlagFieldArrayOutputWithContext(context.Background())
}

func (i TCPFlagFieldArray) ToTCPFlagFieldArrayOutputWithContext(ctx context.Context) TCPFlagFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPFlagFieldArrayOutput)
}

// Definition of TCPFlagField
type TCPFlagFieldOutput struct{ *pulumi.OutputState }

func (TCPFlagFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPFlagField)(nil)).Elem()
}

func (o TCPFlagFieldOutput) ToTCPFlagFieldOutput() TCPFlagFieldOutput {
	return o
}

func (o TCPFlagFieldOutput) ToTCPFlagFieldOutputWithContext(ctx context.Context) TCPFlagFieldOutput {
	return o
}

// Property flags
func (o TCPFlagFieldOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TCPFlagField) []string { return v.Flags }).(pulumi.StringArrayOutput)
}

// Property masks
func (o TCPFlagFieldOutput) Masks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TCPFlagField) []string { return v.Masks }).(pulumi.StringArrayOutput)
}

type TCPFlagFieldArrayOutput struct{ *pulumi.OutputState }

func (TCPFlagFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TCPFlagField)(nil)).Elem()
}

func (o TCPFlagFieldArrayOutput) ToTCPFlagFieldArrayOutput() TCPFlagFieldArrayOutput {
	return o
}

func (o TCPFlagFieldArrayOutput) ToTCPFlagFieldArrayOutputWithContext(ctx context.Context) TCPFlagFieldArrayOutput {
	return o
}

func (o TCPFlagFieldArrayOutput) Index(i pulumi.IntInput) TCPFlagFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TCPFlagField {
		return vs[0].([]TCPFlagField)[vs[1].(int)]
	}).(TCPFlagFieldOutput)
}

// Definition of TCPFlagField
type TCPFlagFieldResponse struct {
	// Property flags
	Flags []string `pulumi:"flags"`
	// Property masks
	Masks []string `pulumi:"masks"`
}

// Definition of TCPFlagField
type TCPFlagFieldResponseOutput struct{ *pulumi.OutputState }

func (TCPFlagFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPFlagFieldResponse)(nil)).Elem()
}

func (o TCPFlagFieldResponseOutput) ToTCPFlagFieldResponseOutput() TCPFlagFieldResponseOutput {
	return o
}

func (o TCPFlagFieldResponseOutput) ToTCPFlagFieldResponseOutputWithContext(ctx context.Context) TCPFlagFieldResponseOutput {
	return o
}

// Property flags
func (o TCPFlagFieldResponseOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TCPFlagFieldResponse) []string { return v.Flags }).(pulumi.StringArrayOutput)
}

// Property masks
func (o TCPFlagFieldResponseOutput) Masks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TCPFlagFieldResponse) []string { return v.Masks }).(pulumi.StringArrayOutput)
}

type TCPFlagFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (TCPFlagFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TCPFlagFieldResponse)(nil)).Elem()
}

func (o TCPFlagFieldResponseArrayOutput) ToTCPFlagFieldResponseArrayOutput() TCPFlagFieldResponseArrayOutput {
	return o
}

func (o TCPFlagFieldResponseArrayOutput) ToTCPFlagFieldResponseArrayOutputWithContext(ctx context.Context) TCPFlagFieldResponseArrayOutput {
	return o
}

func (o TCPFlagFieldResponseArrayOutput) Index(i pulumi.IntInput) TCPFlagFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TCPFlagFieldResponse {
		return vs[0].([]TCPFlagFieldResponse)[vs[1].(int)]
	}).(TCPFlagFieldResponseOutput)
}

// Definition of TLSSecurityPolicyEnumValue
type TLSSecurityPolicyEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// TLSSecurityPolicyEnumValueInput is an input type that accepts TLSSecurityPolicyEnumValueArgs and TLSSecurityPolicyEnumValueOutput values.
// You can construct a concrete instance of `TLSSecurityPolicyEnumValueInput` via:
//
//	TLSSecurityPolicyEnumValueArgs{...}
type TLSSecurityPolicyEnumValueInput interface {
	pulumi.Input

	ToTLSSecurityPolicyEnumValueOutput() TLSSecurityPolicyEnumValueOutput
	ToTLSSecurityPolicyEnumValueOutputWithContext(context.Context) TLSSecurityPolicyEnumValueOutput
}

// Definition of TLSSecurityPolicyEnumValue
type TLSSecurityPolicyEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TLSSecurityPolicyEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSSecurityPolicyEnumValue)(nil)).Elem()
}

func (i TLSSecurityPolicyEnumValueArgs) ToTLSSecurityPolicyEnumValueOutput() TLSSecurityPolicyEnumValueOutput {
	return i.ToTLSSecurityPolicyEnumValueOutputWithContext(context.Background())
}

func (i TLSSecurityPolicyEnumValueArgs) ToTLSSecurityPolicyEnumValueOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSSecurityPolicyEnumValueOutput)
}

func (i TLSSecurityPolicyEnumValueArgs) ToTLSSecurityPolicyEnumValuePtrOutput() TLSSecurityPolicyEnumValuePtrOutput {
	return i.ToTLSSecurityPolicyEnumValuePtrOutputWithContext(context.Background())
}

func (i TLSSecurityPolicyEnumValueArgs) ToTLSSecurityPolicyEnumValuePtrOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSSecurityPolicyEnumValueOutput).ToTLSSecurityPolicyEnumValuePtrOutputWithContext(ctx)
}

// TLSSecurityPolicyEnumValuePtrInput is an input type that accepts TLSSecurityPolicyEnumValueArgs, TLSSecurityPolicyEnumValuePtr and TLSSecurityPolicyEnumValuePtrOutput values.
// You can construct a concrete instance of `TLSSecurityPolicyEnumValuePtrInput` via:
//
//	        TLSSecurityPolicyEnumValueArgs{...}
//
//	or:
//
//	        nil
type TLSSecurityPolicyEnumValuePtrInput interface {
	pulumi.Input

	ToTLSSecurityPolicyEnumValuePtrOutput() TLSSecurityPolicyEnumValuePtrOutput
	ToTLSSecurityPolicyEnumValuePtrOutputWithContext(context.Context) TLSSecurityPolicyEnumValuePtrOutput
}

type tlssecurityPolicyEnumValuePtrType TLSSecurityPolicyEnumValueArgs

func TLSSecurityPolicyEnumValuePtr(v *TLSSecurityPolicyEnumValueArgs) TLSSecurityPolicyEnumValuePtrInput {
	return (*tlssecurityPolicyEnumValuePtrType)(v)
}

func (*tlssecurityPolicyEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSSecurityPolicyEnumValue)(nil)).Elem()
}

func (i *tlssecurityPolicyEnumValuePtrType) ToTLSSecurityPolicyEnumValuePtrOutput() TLSSecurityPolicyEnumValuePtrOutput {
	return i.ToTLSSecurityPolicyEnumValuePtrOutputWithContext(context.Background())
}

func (i *tlssecurityPolicyEnumValuePtrType) ToTLSSecurityPolicyEnumValuePtrOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSSecurityPolicyEnumValuePtrOutput)
}

// Definition of TLSSecurityPolicyEnumValue
type TLSSecurityPolicyEnumValueOutput struct{ *pulumi.OutputState }

func (TLSSecurityPolicyEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSSecurityPolicyEnumValue)(nil)).Elem()
}

func (o TLSSecurityPolicyEnumValueOutput) ToTLSSecurityPolicyEnumValueOutput() TLSSecurityPolicyEnumValueOutput {
	return o
}

func (o TLSSecurityPolicyEnumValueOutput) ToTLSSecurityPolicyEnumValueOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValueOutput {
	return o
}

func (o TLSSecurityPolicyEnumValueOutput) ToTLSSecurityPolicyEnumValuePtrOutput() TLSSecurityPolicyEnumValuePtrOutput {
	return o.ToTLSSecurityPolicyEnumValuePtrOutputWithContext(context.Background())
}

func (o TLSSecurityPolicyEnumValueOutput) ToTLSSecurityPolicyEnumValuePtrOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TLSSecurityPolicyEnumValue) *TLSSecurityPolicyEnumValue {
		return &v
	}).(TLSSecurityPolicyEnumValuePtrOutput)
}

// Property value
func (o TLSSecurityPolicyEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSSecurityPolicyEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TLSSecurityPolicyEnumValuePtrOutput struct{ *pulumi.OutputState }

func (TLSSecurityPolicyEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSSecurityPolicyEnumValue)(nil)).Elem()
}

func (o TLSSecurityPolicyEnumValuePtrOutput) ToTLSSecurityPolicyEnumValuePtrOutput() TLSSecurityPolicyEnumValuePtrOutput {
	return o
}

func (o TLSSecurityPolicyEnumValuePtrOutput) ToTLSSecurityPolicyEnumValuePtrOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValuePtrOutput {
	return o
}

func (o TLSSecurityPolicyEnumValuePtrOutput) Elem() TLSSecurityPolicyEnumValueOutput {
	return o.ApplyT(func(v *TLSSecurityPolicyEnumValue) TLSSecurityPolicyEnumValue {
		if v != nil {
			return *v
		}
		var ret TLSSecurityPolicyEnumValue
		return ret
	}).(TLSSecurityPolicyEnumValueOutput)
}

// Property value
func (o TLSSecurityPolicyEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSSecurityPolicyEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TLSSecurityPolicyEnumValue
type TLSSecurityPolicyEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TLSSecurityPolicyEnumValue
type TLSSecurityPolicyEnumValueResponseOutput struct{ *pulumi.OutputState }

func (TLSSecurityPolicyEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSSecurityPolicyEnumValueResponse)(nil)).Elem()
}

func (o TLSSecurityPolicyEnumValueResponseOutput) ToTLSSecurityPolicyEnumValueResponseOutput() TLSSecurityPolicyEnumValueResponseOutput {
	return o
}

func (o TLSSecurityPolicyEnumValueResponseOutput) ToTLSSecurityPolicyEnumValueResponseOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValueResponseOutput {
	return o
}

// Property value
func (o TLSSecurityPolicyEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSSecurityPolicyEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TLSSecurityPolicyEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (TLSSecurityPolicyEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSSecurityPolicyEnumValueResponse)(nil)).Elem()
}

func (o TLSSecurityPolicyEnumValueResponsePtrOutput) ToTLSSecurityPolicyEnumValueResponsePtrOutput() TLSSecurityPolicyEnumValueResponsePtrOutput {
	return o
}

func (o TLSSecurityPolicyEnumValueResponsePtrOutput) ToTLSSecurityPolicyEnumValueResponsePtrOutputWithContext(ctx context.Context) TLSSecurityPolicyEnumValueResponsePtrOutput {
	return o
}

func (o TLSSecurityPolicyEnumValueResponsePtrOutput) Elem() TLSSecurityPolicyEnumValueResponseOutput {
	return o.ApplyT(func(v *TLSSecurityPolicyEnumValueResponse) TLSSecurityPolicyEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret TLSSecurityPolicyEnumValueResponse
		return ret
	}).(TLSSecurityPolicyEnumValueResponseOutput)
}

// Property value
func (o TLSSecurityPolicyEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSSecurityPolicyEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Tag
type Tag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key *string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// TagInput is an input type that accepts TagArgs and TagOutput values.
// You can construct a concrete instance of `TagInput` via:
//
//	TagArgs{...}
type TagInput interface {
	pulumi.Input

	ToTagOutput() TagOutput
	ToTagOutputWithContext(context.Context) TagOutput
}

// Definition of Tag
type TagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Tag)(nil)).Elem()
}

func (i TagArgs) ToTagOutput() TagOutput {
	return i.ToTagOutputWithContext(context.Background())
}

func (i TagArgs) ToTagOutputWithContext(ctx context.Context) TagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagOutput)
}

// TagArrayInput is an input type that accepts TagArray and TagArrayOutput values.
// You can construct a concrete instance of `TagArrayInput` via:
//
//	TagArray{ TagArgs{...} }
type TagArrayInput interface {
	pulumi.Input

	ToTagArrayOutput() TagArrayOutput
	ToTagArrayOutputWithContext(context.Context) TagArrayOutput
}

type TagArray []TagInput

func (TagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tag)(nil)).Elem()
}

func (i TagArray) ToTagArrayOutput() TagArrayOutput {
	return i.ToTagArrayOutputWithContext(context.Background())
}

func (i TagArray) ToTagArrayOutputWithContext(ctx context.Context) TagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagArrayOutput)
}

// Definition of Tag
type TagOutput struct{ *pulumi.OutputState }

func (TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tag)(nil)).Elem()
}

func (o TagOutput) ToTagOutput() TagOutput {
	return o
}

func (o TagOutput) ToTagOutputWithContext(ctx context.Context) TagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagArrayOutput struct{ *pulumi.OutputState }

func (TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tag)(nil)).Elem()
}

func (o TagArrayOutput) ToTagArrayOutput() TagArrayOutput {
	return o
}

func (o TagArrayOutput) ToTagArrayOutputWithContext(ctx context.Context) TagArrayOutput {
	return o
}

func (o TagArrayOutput) Index(i pulumi.IntInput) TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tag {
		return vs[0].([]Tag)[vs[1].(int)]
	}).(TagOutput)
}

// Definition of TagCriterionForJob
type TagCriterionForJob struct {
	// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
	Comparator *JobComparatorEnumValue `pulumi:"comparator"`
	// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
	TagValues []TagCriterionPairForJob `pulumi:"tagValues"`
}

// TagCriterionForJobInput is an input type that accepts TagCriterionForJobArgs and TagCriterionForJobOutput values.
// You can construct a concrete instance of `TagCriterionForJobInput` via:
//
//	TagCriterionForJobArgs{...}
type TagCriterionForJobInput interface {
	pulumi.Input

	ToTagCriterionForJobOutput() TagCriterionForJobOutput
	ToTagCriterionForJobOutputWithContext(context.Context) TagCriterionForJobOutput
}

// Definition of TagCriterionForJob
type TagCriterionForJobArgs struct {
	// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
	Comparator JobComparatorEnumValuePtrInput `pulumi:"comparator"`
	// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
	TagValues TagCriterionPairForJobArrayInput `pulumi:"tagValues"`
}

func (TagCriterionForJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCriterionForJob)(nil)).Elem()
}

func (i TagCriterionForJobArgs) ToTagCriterionForJobOutput() TagCriterionForJobOutput {
	return i.ToTagCriterionForJobOutputWithContext(context.Background())
}

func (i TagCriterionForJobArgs) ToTagCriterionForJobOutputWithContext(ctx context.Context) TagCriterionForJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCriterionForJobOutput)
}

func (i TagCriterionForJobArgs) ToTagCriterionForJobPtrOutput() TagCriterionForJobPtrOutput {
	return i.ToTagCriterionForJobPtrOutputWithContext(context.Background())
}

func (i TagCriterionForJobArgs) ToTagCriterionForJobPtrOutputWithContext(ctx context.Context) TagCriterionForJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCriterionForJobOutput).ToTagCriterionForJobPtrOutputWithContext(ctx)
}

// TagCriterionForJobPtrInput is an input type that accepts TagCriterionForJobArgs, TagCriterionForJobPtr and TagCriterionForJobPtrOutput values.
// You can construct a concrete instance of `TagCriterionForJobPtrInput` via:
//
//	        TagCriterionForJobArgs{...}
//
//	or:
//
//	        nil
type TagCriterionForJobPtrInput interface {
	pulumi.Input

	ToTagCriterionForJobPtrOutput() TagCriterionForJobPtrOutput
	ToTagCriterionForJobPtrOutputWithContext(context.Context) TagCriterionForJobPtrOutput
}

type tagCriterionForJobPtrType TagCriterionForJobArgs

func TagCriterionForJobPtr(v *TagCriterionForJobArgs) TagCriterionForJobPtrInput {
	return (*tagCriterionForJobPtrType)(v)
}

func (*tagCriterionForJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagCriterionForJob)(nil)).Elem()
}

func (i *tagCriterionForJobPtrType) ToTagCriterionForJobPtrOutput() TagCriterionForJobPtrOutput {
	return i.ToTagCriterionForJobPtrOutputWithContext(context.Background())
}

func (i *tagCriterionForJobPtrType) ToTagCriterionForJobPtrOutputWithContext(ctx context.Context) TagCriterionForJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCriterionForJobPtrOutput)
}

// Definition of TagCriterionForJob
type TagCriterionForJobOutput struct{ *pulumi.OutputState }

func (TagCriterionForJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCriterionForJob)(nil)).Elem()
}

func (o TagCriterionForJobOutput) ToTagCriterionForJobOutput() TagCriterionForJobOutput {
	return o
}

func (o TagCriterionForJobOutput) ToTagCriterionForJobOutputWithContext(ctx context.Context) TagCriterionForJobOutput {
	return o
}

func (o TagCriterionForJobOutput) ToTagCriterionForJobPtrOutput() TagCriterionForJobPtrOutput {
	return o.ToTagCriterionForJobPtrOutputWithContext(context.Background())
}

func (o TagCriterionForJobOutput) ToTagCriterionForJobPtrOutputWithContext(ctx context.Context) TagCriterionForJobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagCriterionForJob) *TagCriterionForJob {
		return &v
	}).(TagCriterionForJobPtrOutput)
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o TagCriterionForJobOutput) Comparator() JobComparatorEnumValuePtrOutput {
	return o.ApplyT(func(v TagCriterionForJob) *JobComparatorEnumValue { return v.Comparator }).(JobComparatorEnumValuePtrOutput)
}

// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
func (o TagCriterionForJobOutput) TagValues() TagCriterionPairForJobArrayOutput {
	return o.ApplyT(func(v TagCriterionForJob) []TagCriterionPairForJob { return v.TagValues }).(TagCriterionPairForJobArrayOutput)
}

type TagCriterionForJobPtrOutput struct{ *pulumi.OutputState }

func (TagCriterionForJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagCriterionForJob)(nil)).Elem()
}

func (o TagCriterionForJobPtrOutput) ToTagCriterionForJobPtrOutput() TagCriterionForJobPtrOutput {
	return o
}

func (o TagCriterionForJobPtrOutput) ToTagCriterionForJobPtrOutputWithContext(ctx context.Context) TagCriterionForJobPtrOutput {
	return o
}

func (o TagCriterionForJobPtrOutput) Elem() TagCriterionForJobOutput {
	return o.ApplyT(func(v *TagCriterionForJob) TagCriterionForJob {
		if v != nil {
			return *v
		}
		var ret TagCriterionForJob
		return ret
	}).(TagCriterionForJobOutput)
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o TagCriterionForJobPtrOutput) Comparator() JobComparatorEnumValuePtrOutput {
	return o.ApplyT(func(v *TagCriterionForJob) *JobComparatorEnumValue {
		if v == nil {
			return nil
		}
		return v.Comparator
	}).(JobComparatorEnumValuePtrOutput)
}

// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
func (o TagCriterionForJobPtrOutput) TagValues() TagCriterionPairForJobArrayOutput {
	return o.ApplyT(func(v *TagCriterionForJob) []TagCriterionPairForJob {
		if v == nil {
			return nil
		}
		return v.TagValues
	}).(TagCriterionPairForJobArrayOutput)
}

// Definition of TagCriterionForJob
type TagCriterionForJobResponse struct {
	// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
	Comparator *JobComparatorEnumValueResponse `pulumi:"comparator"`
	// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
	TagValues []TagCriterionPairForJobResponse `pulumi:"tagValues"`
}

// Definition of TagCriterionForJob
type TagCriterionForJobResponseOutput struct{ *pulumi.OutputState }

func (TagCriterionForJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCriterionForJobResponse)(nil)).Elem()
}

func (o TagCriterionForJobResponseOutput) ToTagCriterionForJobResponseOutput() TagCriterionForJobResponseOutput {
	return o
}

func (o TagCriterionForJobResponseOutput) ToTagCriterionForJobResponseOutputWithContext(ctx context.Context) TagCriterionForJobResponseOutput {
	return o
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o TagCriterionForJobResponseOutput) Comparator() JobComparatorEnumValueResponsePtrOutput {
	return o.ApplyT(func(v TagCriterionForJobResponse) *JobComparatorEnumValueResponse { return v.Comparator }).(JobComparatorEnumValueResponsePtrOutput)
}

// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
func (o TagCriterionForJobResponseOutput) TagValues() TagCriterionPairForJobResponseArrayOutput {
	return o.ApplyT(func(v TagCriterionForJobResponse) []TagCriterionPairForJobResponse { return v.TagValues }).(TagCriterionPairForJobResponseArrayOutput)
}

type TagCriterionForJobResponsePtrOutput struct{ *pulumi.OutputState }

func (TagCriterionForJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagCriterionForJobResponse)(nil)).Elem()
}

func (o TagCriterionForJobResponsePtrOutput) ToTagCriterionForJobResponsePtrOutput() TagCriterionForJobResponsePtrOutput {
	return o
}

func (o TagCriterionForJobResponsePtrOutput) ToTagCriterionForJobResponsePtrOutputWithContext(ctx context.Context) TagCriterionForJobResponsePtrOutput {
	return o
}

func (o TagCriterionForJobResponsePtrOutput) Elem() TagCriterionForJobResponseOutput {
	return o.ApplyT(func(v *TagCriterionForJobResponse) TagCriterionForJobResponse {
		if v != nil {
			return *v
		}
		var ret TagCriterionForJobResponse
		return ret
	}).(TagCriterionForJobResponseOutput)
}

// <p>The operator to use in the condition. Valid values are EQ (equals) and NE (not equals).</p>
func (o TagCriterionForJobResponsePtrOutput) Comparator() JobComparatorEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *TagCriterionForJobResponse) *JobComparatorEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Comparator
	}).(JobComparatorEnumValueResponsePtrOutput)
}

// <p>The tag keys, tag values, or tag key and value pairs to use in the condition.</p>
func (o TagCriterionForJobResponsePtrOutput) TagValues() TagCriterionPairForJobResponseArrayOutput {
	return o.ApplyT(func(v *TagCriterionForJobResponse) []TagCriterionPairForJobResponse {
		if v == nil {
			return nil
		}
		return v.TagValues
	}).(TagCriterionPairForJobResponseArrayOutput)
}

// Definition of TagCriterionPairForJob
type TagCriterionPairForJob struct {
	// <p>The value for the tag key to use in the condition.</p>
	Key *string `pulumi:"key"`
	// <p>The tag value to use in the condition.</p>
	Value *string `pulumi:"value"`
}

// TagCriterionPairForJobInput is an input type that accepts TagCriterionPairForJobArgs and TagCriterionPairForJobOutput values.
// You can construct a concrete instance of `TagCriterionPairForJobInput` via:
//
//	TagCriterionPairForJobArgs{...}
type TagCriterionPairForJobInput interface {
	pulumi.Input

	ToTagCriterionPairForJobOutput() TagCriterionPairForJobOutput
	ToTagCriterionPairForJobOutputWithContext(context.Context) TagCriterionPairForJobOutput
}

// Definition of TagCriterionPairForJob
type TagCriterionPairForJobArgs struct {
	// <p>The value for the tag key to use in the condition.</p>
	Key pulumi.StringPtrInput `pulumi:"key"`
	// <p>The tag value to use in the condition.</p>
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagCriterionPairForJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCriterionPairForJob)(nil)).Elem()
}

func (i TagCriterionPairForJobArgs) ToTagCriterionPairForJobOutput() TagCriterionPairForJobOutput {
	return i.ToTagCriterionPairForJobOutputWithContext(context.Background())
}

func (i TagCriterionPairForJobArgs) ToTagCriterionPairForJobOutputWithContext(ctx context.Context) TagCriterionPairForJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCriterionPairForJobOutput)
}

// TagCriterionPairForJobArrayInput is an input type that accepts TagCriterionPairForJobArray and TagCriterionPairForJobArrayOutput values.
// You can construct a concrete instance of `TagCriterionPairForJobArrayInput` via:
//
//	TagCriterionPairForJobArray{ TagCriterionPairForJobArgs{...} }
type TagCriterionPairForJobArrayInput interface {
	pulumi.Input

	ToTagCriterionPairForJobArrayOutput() TagCriterionPairForJobArrayOutput
	ToTagCriterionPairForJobArrayOutputWithContext(context.Context) TagCriterionPairForJobArrayOutput
}

type TagCriterionPairForJobArray []TagCriterionPairForJobInput

func (TagCriterionPairForJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagCriterionPairForJob)(nil)).Elem()
}

func (i TagCriterionPairForJobArray) ToTagCriterionPairForJobArrayOutput() TagCriterionPairForJobArrayOutput {
	return i.ToTagCriterionPairForJobArrayOutputWithContext(context.Background())
}

func (i TagCriterionPairForJobArray) ToTagCriterionPairForJobArrayOutputWithContext(ctx context.Context) TagCriterionPairForJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCriterionPairForJobArrayOutput)
}

// Definition of TagCriterionPairForJob
type TagCriterionPairForJobOutput struct{ *pulumi.OutputState }

func (TagCriterionPairForJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCriterionPairForJob)(nil)).Elem()
}

func (o TagCriterionPairForJobOutput) ToTagCriterionPairForJobOutput() TagCriterionPairForJobOutput {
	return o
}

func (o TagCriterionPairForJobOutput) ToTagCriterionPairForJobOutputWithContext(ctx context.Context) TagCriterionPairForJobOutput {
	return o
}

// <p>The value for the tag key to use in the condition.</p>
func (o TagCriterionPairForJobOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagCriterionPairForJob) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// <p>The tag value to use in the condition.</p>
func (o TagCriterionPairForJobOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagCriterionPairForJob) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagCriterionPairForJobArrayOutput struct{ *pulumi.OutputState }

func (TagCriterionPairForJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagCriterionPairForJob)(nil)).Elem()
}

func (o TagCriterionPairForJobArrayOutput) ToTagCriterionPairForJobArrayOutput() TagCriterionPairForJobArrayOutput {
	return o
}

func (o TagCriterionPairForJobArrayOutput) ToTagCriterionPairForJobArrayOutputWithContext(ctx context.Context) TagCriterionPairForJobArrayOutput {
	return o
}

func (o TagCriterionPairForJobArrayOutput) Index(i pulumi.IntInput) TagCriterionPairForJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagCriterionPairForJob {
		return vs[0].([]TagCriterionPairForJob)[vs[1].(int)]
	}).(TagCriterionPairForJobOutput)
}

// Definition of TagCriterionPairForJob
type TagCriterionPairForJobResponse struct {
	// <p>The value for the tag key to use in the condition.</p>
	Key *string `pulumi:"key"`
	// <p>The tag value to use in the condition.</p>
	Value *string `pulumi:"value"`
}

// Definition of TagCriterionPairForJob
type TagCriterionPairForJobResponseOutput struct{ *pulumi.OutputState }

func (TagCriterionPairForJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCriterionPairForJobResponse)(nil)).Elem()
}

func (o TagCriterionPairForJobResponseOutput) ToTagCriterionPairForJobResponseOutput() TagCriterionPairForJobResponseOutput {
	return o
}

func (o TagCriterionPairForJobResponseOutput) ToTagCriterionPairForJobResponseOutputWithContext(ctx context.Context) TagCriterionPairForJobResponseOutput {
	return o
}

// <p>The value for the tag key to use in the condition.</p>
func (o TagCriterionPairForJobResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagCriterionPairForJobResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// <p>The tag value to use in the condition.</p>
func (o TagCriterionPairForJobResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagCriterionPairForJobResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagCriterionPairForJobResponseArrayOutput struct{ *pulumi.OutputState }

func (TagCriterionPairForJobResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagCriterionPairForJobResponse)(nil)).Elem()
}

func (o TagCriterionPairForJobResponseArrayOutput) ToTagCriterionPairForJobResponseArrayOutput() TagCriterionPairForJobResponseArrayOutput {
	return o
}

func (o TagCriterionPairForJobResponseArrayOutput) ToTagCriterionPairForJobResponseArrayOutputWithContext(ctx context.Context) TagCriterionPairForJobResponseArrayOutput {
	return o
}

func (o TagCriterionPairForJobResponseArrayOutput) Index(i pulumi.IntInput) TagCriterionPairForJobResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagCriterionPairForJobResponse {
		return vs[0].([]TagCriterionPairForJobResponse)[vs[1].(int)]
	}).(TagCriterionPairForJobResponseOutput)
}

// Definition of TagFilter
type TagFilter struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// TagFilterInput is an input type that accepts TagFilterArgs and TagFilterOutput values.
// You can construct a concrete instance of `TagFilterInput` via:
//
//	TagFilterArgs{...}
type TagFilterInput interface {
	pulumi.Input

	ToTagFilterOutput() TagFilterOutput
	ToTagFilterOutputWithContext(context.Context) TagFilterOutput
}

// Definition of TagFilter
type TagFilterArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagFilter)(nil)).Elem()
}

func (i TagFilterArgs) ToTagFilterOutput() TagFilterOutput {
	return i.ToTagFilterOutputWithContext(context.Background())
}

func (i TagFilterArgs) ToTagFilterOutputWithContext(ctx context.Context) TagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFilterOutput)
}

func (i TagFilterArgs) ToTagFilterPtrOutput() TagFilterPtrOutput {
	return i.ToTagFilterPtrOutputWithContext(context.Background())
}

func (i TagFilterArgs) ToTagFilterPtrOutputWithContext(ctx context.Context) TagFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFilterOutput).ToTagFilterPtrOutputWithContext(ctx)
}

// TagFilterPtrInput is an input type that accepts TagFilterArgs, TagFilterPtr and TagFilterPtrOutput values.
// You can construct a concrete instance of `TagFilterPtrInput` via:
//
//	        TagFilterArgs{...}
//
//	or:
//
//	        nil
type TagFilterPtrInput interface {
	pulumi.Input

	ToTagFilterPtrOutput() TagFilterPtrOutput
	ToTagFilterPtrOutputWithContext(context.Context) TagFilterPtrOutput
}

type tagFilterPtrType TagFilterArgs

func TagFilterPtr(v *TagFilterArgs) TagFilterPtrInput {
	return (*tagFilterPtrType)(v)
}

func (*tagFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagFilter)(nil)).Elem()
}

func (i *tagFilterPtrType) ToTagFilterPtrOutput() TagFilterPtrOutput {
	return i.ToTagFilterPtrOutputWithContext(context.Background())
}

func (i *tagFilterPtrType) ToTagFilterPtrOutputWithContext(ctx context.Context) TagFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFilterPtrOutput)
}

// TagFilterArrayInput is an input type that accepts TagFilterArray and TagFilterArrayOutput values.
// You can construct a concrete instance of `TagFilterArrayInput` via:
//
//	TagFilterArray{ TagFilterArgs{...} }
type TagFilterArrayInput interface {
	pulumi.Input

	ToTagFilterArrayOutput() TagFilterArrayOutput
	ToTagFilterArrayOutputWithContext(context.Context) TagFilterArrayOutput
}

type TagFilterArray []TagFilterInput

func (TagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagFilter)(nil)).Elem()
}

func (i TagFilterArray) ToTagFilterArrayOutput() TagFilterArrayOutput {
	return i.ToTagFilterArrayOutputWithContext(context.Background())
}

func (i TagFilterArray) ToTagFilterArrayOutputWithContext(ctx context.Context) TagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFilterArrayOutput)
}

// Definition of TagFilter
type TagFilterOutput struct{ *pulumi.OutputState }

func (TagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagFilter)(nil)).Elem()
}

func (o TagFilterOutput) ToTagFilterOutput() TagFilterOutput {
	return o
}

func (o TagFilterOutput) ToTagFilterOutputWithContext(ctx context.Context) TagFilterOutput {
	return o
}

func (o TagFilterOutput) ToTagFilterPtrOutput() TagFilterPtrOutput {
	return o.ToTagFilterPtrOutputWithContext(context.Background())
}

func (o TagFilterOutput) ToTagFilterPtrOutputWithContext(ctx context.Context) TagFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagFilter) *TagFilter {
		return &v
	}).(TagFilterPtrOutput)
}

// The tag key.
func (o TagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o TagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagFilterPtrOutput struct{ *pulumi.OutputState }

func (TagFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagFilter)(nil)).Elem()
}

func (o TagFilterPtrOutput) ToTagFilterPtrOutput() TagFilterPtrOutput {
	return o
}

func (o TagFilterPtrOutput) ToTagFilterPtrOutputWithContext(ctx context.Context) TagFilterPtrOutput {
	return o
}

func (o TagFilterPtrOutput) Elem() TagFilterOutput {
	return o.ApplyT(func(v *TagFilter) TagFilter {
		if v != nil {
			return *v
		}
		var ret TagFilter
		return ret
	}).(TagFilterOutput)
}

// The tag key.
func (o TagFilterPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagFilter) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The tag value.
func (o TagFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagFilter) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TagFilterArrayOutput struct{ *pulumi.OutputState }

func (TagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagFilter)(nil)).Elem()
}

func (o TagFilterArrayOutput) ToTagFilterArrayOutput() TagFilterArrayOutput {
	return o
}

func (o TagFilterArrayOutput) ToTagFilterArrayOutputWithContext(ctx context.Context) TagFilterArrayOutput {
	return o
}

func (o TagFilterArrayOutput) Index(i pulumi.IntInput) TagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagFilter {
		return vs[0].([]TagFilter)[vs[1].(int)]
	}).(TagFilterOutput)
}

// Definition of TagFilter
type TagFilterResponse struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// Definition of TagFilter
type TagFilterResponseOutput struct{ *pulumi.OutputState }

func (TagFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagFilterResponse)(nil)).Elem()
}

func (o TagFilterResponseOutput) ToTagFilterResponseOutput() TagFilterResponseOutput {
	return o
}

func (o TagFilterResponseOutput) ToTagFilterResponseOutputWithContext(ctx context.Context) TagFilterResponseOutput {
	return o
}

// The tag key.
func (o TagFilterResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagFilterResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o TagFilterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagFilterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (TagFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagFilterResponse)(nil)).Elem()
}

func (o TagFilterResponsePtrOutput) ToTagFilterResponsePtrOutput() TagFilterResponsePtrOutput {
	return o
}

func (o TagFilterResponsePtrOutput) ToTagFilterResponsePtrOutputWithContext(ctx context.Context) TagFilterResponsePtrOutput {
	return o
}

func (o TagFilterResponsePtrOutput) Elem() TagFilterResponseOutput {
	return o.ApplyT(func(v *TagFilterResponse) TagFilterResponse {
		if v != nil {
			return *v
		}
		var ret TagFilterResponse
		return ret
	}).(TagFilterResponseOutput)
}

// The tag key.
func (o TagFilterResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The tag value.
func (o TagFilterResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TagFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (TagFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagFilterResponse)(nil)).Elem()
}

func (o TagFilterResponseArrayOutput) ToTagFilterResponseArrayOutput() TagFilterResponseArrayOutput {
	return o
}

func (o TagFilterResponseArrayOutput) ToTagFilterResponseArrayOutputWithContext(ctx context.Context) TagFilterResponseArrayOutput {
	return o
}

func (o TagFilterResponseArrayOutput) Index(i pulumi.IntInput) TagFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagFilterResponse {
		return vs[0].([]TagFilterResponse)[vs[1].(int)]
	}).(TagFilterResponseOutput)
}

// Definition of TagItem
type TagItem struct {
	// Property key
	Key *string `pulumi:"key"`
	// Property value
	Value *string `pulumi:"value"`
}

// TagItemInput is an input type that accepts TagItemArgs and TagItemOutput values.
// You can construct a concrete instance of `TagItemInput` via:
//
//	TagItemArgs{...}
type TagItemInput interface {
	pulumi.Input

	ToTagItemOutput() TagItemOutput
	ToTagItemOutputWithContext(context.Context) TagItemOutput
}

// Definition of TagItem
type TagItemArgs struct {
	// Property key
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagItem)(nil)).Elem()
}

func (i TagItemArgs) ToTagItemOutput() TagItemOutput {
	return i.ToTagItemOutputWithContext(context.Background())
}

func (i TagItemArgs) ToTagItemOutputWithContext(ctx context.Context) TagItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagItemOutput)
}

// TagItemArrayInput is an input type that accepts TagItemArray and TagItemArrayOutput values.
// You can construct a concrete instance of `TagItemArrayInput` via:
//
//	TagItemArray{ TagItemArgs{...} }
type TagItemArrayInput interface {
	pulumi.Input

	ToTagItemArrayOutput() TagItemArrayOutput
	ToTagItemArrayOutputWithContext(context.Context) TagItemArrayOutput
}

type TagItemArray []TagItemInput

func (TagItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagItem)(nil)).Elem()
}

func (i TagItemArray) ToTagItemArrayOutput() TagItemArrayOutput {
	return i.ToTagItemArrayOutputWithContext(context.Background())
}

func (i TagItemArray) ToTagItemArrayOutputWithContext(ctx context.Context) TagItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagItemArrayOutput)
}

// Definition of TagItem
type TagItemOutput struct{ *pulumi.OutputState }

func (TagItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagItem)(nil)).Elem()
}

func (o TagItemOutput) ToTagItemOutput() TagItemOutput {
	return o
}

func (o TagItemOutput) ToTagItemOutputWithContext(ctx context.Context) TagItemOutput {
	return o
}

// Property key
func (o TagItemOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagItem) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Property value
func (o TagItemOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagItem) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagItemArrayOutput struct{ *pulumi.OutputState }

func (TagItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagItem)(nil)).Elem()
}

func (o TagItemArrayOutput) ToTagItemArrayOutput() TagItemArrayOutput {
	return o
}

func (o TagItemArrayOutput) ToTagItemArrayOutputWithContext(ctx context.Context) TagItemArrayOutput {
	return o
}

func (o TagItemArrayOutput) Index(i pulumi.IntInput) TagItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagItem {
		return vs[0].([]TagItem)[vs[1].(int)]
	}).(TagItemOutput)
}

// Definition of TagItem
type TagItemResponse struct {
	// Property key
	Key *string `pulumi:"key"`
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TagItem
type TagItemResponseOutput struct{ *pulumi.OutputState }

func (TagItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagItemResponse)(nil)).Elem()
}

func (o TagItemResponseOutput) ToTagItemResponseOutput() TagItemResponseOutput {
	return o
}

func (o TagItemResponseOutput) ToTagItemResponseOutputWithContext(ctx context.Context) TagItemResponseOutput {
	return o
}

// Property key
func (o TagItemResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagItemResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Property value
func (o TagItemResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagItemResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagItemResponseArrayOutput struct{ *pulumi.OutputState }

func (TagItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagItemResponse)(nil)).Elem()
}

func (o TagItemResponseArrayOutput) ToTagItemResponseArrayOutput() TagItemResponseArrayOutput {
	return o
}

func (o TagItemResponseArrayOutput) ToTagItemResponseArrayOutputWithContext(ctx context.Context) TagItemResponseArrayOutput {
	return o
}

func (o TagItemResponseArrayOutput) Index(i pulumi.IntInput) TagItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagItemResponse {
		return vs[0].([]TagItemResponse)[vs[1].(int)]
	}).(TagItemResponseOutput)
}

// Definition of TagProperty
type TagProperty struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// Set to ``true`` if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group. Set to ``false`` if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.
	PropagateAtLaunch *bool `pulumi:"propagateAtLaunch"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// TagPropertyInput is an input type that accepts TagPropertyArgs and TagPropertyOutput values.
// You can construct a concrete instance of `TagPropertyInput` via:
//
//	TagPropertyArgs{...}
type TagPropertyInput interface {
	pulumi.Input

	ToTagPropertyOutput() TagPropertyOutput
	ToTagPropertyOutputWithContext(context.Context) TagPropertyOutput
}

// Definition of TagProperty
type TagPropertyArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Set to ``true`` if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group. Set to ``false`` if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.
	PropagateAtLaunch pulumi.BoolPtrInput `pulumi:"propagateAtLaunch"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagProperty)(nil)).Elem()
}

func (i TagPropertyArgs) ToTagPropertyOutput() TagPropertyOutput {
	return i.ToTagPropertyOutputWithContext(context.Background())
}

func (i TagPropertyArgs) ToTagPropertyOutputWithContext(ctx context.Context) TagPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyOutput)
}

// TagPropertyArrayInput is an input type that accepts TagPropertyArray and TagPropertyArrayOutput values.
// You can construct a concrete instance of `TagPropertyArrayInput` via:
//
//	TagPropertyArray{ TagPropertyArgs{...} }
type TagPropertyArrayInput interface {
	pulumi.Input

	ToTagPropertyArrayOutput() TagPropertyArrayOutput
	ToTagPropertyArrayOutputWithContext(context.Context) TagPropertyArrayOutput
}

type TagPropertyArray []TagPropertyInput

func (TagPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagProperty)(nil)).Elem()
}

func (i TagPropertyArray) ToTagPropertyArrayOutput() TagPropertyArrayOutput {
	return i.ToTagPropertyArrayOutputWithContext(context.Background())
}

func (i TagPropertyArray) ToTagPropertyArrayOutputWithContext(ctx context.Context) TagPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyArrayOutput)
}

// Definition of TagProperty
type TagPropertyOutput struct{ *pulumi.OutputState }

func (TagPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagProperty)(nil)).Elem()
}

func (o TagPropertyOutput) ToTagPropertyOutput() TagPropertyOutput {
	return o
}

func (o TagPropertyOutput) ToTagPropertyOutputWithContext(ctx context.Context) TagPropertyOutput {
	return o
}

// The tag key.
func (o TagPropertyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagProperty) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Set to “true“ if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group. Set to “false“ if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.
func (o TagPropertyOutput) PropagateAtLaunch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TagProperty) *bool { return v.PropagateAtLaunch }).(pulumi.BoolPtrOutput)
}

// The tag value.
func (o TagPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagPropertyArrayOutput struct{ *pulumi.OutputState }

func (TagPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagProperty)(nil)).Elem()
}

func (o TagPropertyArrayOutput) ToTagPropertyArrayOutput() TagPropertyArrayOutput {
	return o
}

func (o TagPropertyArrayOutput) ToTagPropertyArrayOutputWithContext(ctx context.Context) TagPropertyArrayOutput {
	return o
}

func (o TagPropertyArrayOutput) Index(i pulumi.IntInput) TagPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagProperty {
		return vs[0].([]TagProperty)[vs[1].(int)]
	}).(TagPropertyOutput)
}

// Definition of TagProperty
type TagPropertyResponse struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// Set to ``true`` if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group. Set to ``false`` if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.
	PropagateAtLaunch *bool `pulumi:"propagateAtLaunch"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// Definition of TagProperty
type TagPropertyResponseOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutput() TagPropertyResponseOutput {
	return o
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutputWithContext(ctx context.Context) TagPropertyResponseOutput {
	return o
}

// The tag key.
func (o TagPropertyResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagPropertyResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Set to “true“ if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group. Set to “false“ if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.
func (o TagPropertyResponseOutput) PropagateAtLaunch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TagPropertyResponse) *bool { return v.PropagateAtLaunch }).(pulumi.BoolPtrOutput)
}

// The tag value.
func (o TagPropertyResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagPropertyResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutputWithContext(ctx context.Context) TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) Index(i pulumi.IntInput) TagPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagPropertyResponse {
		return vs[0].([]TagPropertyResponse)[vs[1].(int)]
	}).(TagPropertyResponseOutput)
}

// Definition of Tag
type TagResponse struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key *string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// Definition of Tag
type TagResponseOutput struct{ *pulumi.OutputState }

func (TagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagResponse)(nil)).Elem()
}

func (o TagResponseOutput) ToTagResponseOutput() TagResponseOutput {
	return o
}

func (o TagResponseOutput) ToTagResponseOutputWithContext(ctx context.Context) TagResponseOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TagResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TagResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagResponseArrayOutput struct{ *pulumi.OutputState }

func (TagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagResponse)(nil)).Elem()
}

func (o TagResponseArrayOutput) ToTagResponseArrayOutput() TagResponseArrayOutput {
	return o
}

func (o TagResponseArrayOutput) ToTagResponseArrayOutputWithContext(ctx context.Context) TagResponseArrayOutput {
	return o
}

func (o TagResponseArrayOutput) Index(i pulumi.IntInput) TagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagResponse {
		return vs[0].([]TagResponse)[vs[1].(int)]
	}).(TagResponseOutput)
}

// Definition of Taint
type Taint struct {
	// Property effect
	Effect *string `pulumi:"effect"`
	// Property key
	Key *string `pulumi:"key"`
	// Property value
	Value *string `pulumi:"value"`
}

// TaintInput is an input type that accepts TaintArgs and TaintOutput values.
// You can construct a concrete instance of `TaintInput` via:
//
//	TaintArgs{...}
type TaintInput interface {
	pulumi.Input

	ToTaintOutput() TaintOutput
	ToTaintOutputWithContext(context.Context) TaintOutput
}

// Definition of Taint
type TaintArgs struct {
	// Property effect
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Property key
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Taint)(nil)).Elem()
}

func (i TaintArgs) ToTaintOutput() TaintOutput {
	return i.ToTaintOutputWithContext(context.Background())
}

func (i TaintArgs) ToTaintOutputWithContext(ctx context.Context) TaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaintOutput)
}

// TaintArrayInput is an input type that accepts TaintArray and TaintArrayOutput values.
// You can construct a concrete instance of `TaintArrayInput` via:
//
//	TaintArray{ TaintArgs{...} }
type TaintArrayInput interface {
	pulumi.Input

	ToTaintArrayOutput() TaintArrayOutput
	ToTaintArrayOutputWithContext(context.Context) TaintArrayOutput
}

type TaintArray []TaintInput

func (TaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Taint)(nil)).Elem()
}

func (i TaintArray) ToTaintArrayOutput() TaintArrayOutput {
	return i.ToTaintArrayOutputWithContext(context.Background())
}

func (i TaintArray) ToTaintArrayOutputWithContext(ctx context.Context) TaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaintArrayOutput)
}

// Definition of Taint
type TaintOutput struct{ *pulumi.OutputState }

func (TaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Taint)(nil)).Elem()
}

func (o TaintOutput) ToTaintOutput() TaintOutput {
	return o
}

func (o TaintOutput) ToTaintOutputWithContext(ctx context.Context) TaintOutput {
	return o
}

// Property effect
func (o TaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Taint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Property key
func (o TaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Taint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Property value
func (o TaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Taint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TaintArrayOutput struct{ *pulumi.OutputState }

func (TaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Taint)(nil)).Elem()
}

func (o TaintArrayOutput) ToTaintArrayOutput() TaintArrayOutput {
	return o
}

func (o TaintArrayOutput) ToTaintArrayOutputWithContext(ctx context.Context) TaintArrayOutput {
	return o
}

func (o TaintArrayOutput) Index(i pulumi.IntInput) TaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Taint {
		return vs[0].([]Taint)[vs[1].(int)]
	}).(TaintOutput)
}

// Definition of Taint
type TaintResponse struct {
	// Property effect
	Effect *string `pulumi:"effect"`
	// Property key
	Key *string `pulumi:"key"`
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of Taint
type TaintResponseOutput struct{ *pulumi.OutputState }

func (TaintResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaintResponse)(nil)).Elem()
}

func (o TaintResponseOutput) ToTaintResponseOutput() TaintResponseOutput {
	return o
}

func (o TaintResponseOutput) ToTaintResponseOutputWithContext(ctx context.Context) TaintResponseOutput {
	return o
}

// Property effect
func (o TaintResponseOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaintResponse) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Property key
func (o TaintResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaintResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Property value
func (o TaintResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaintResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TaintResponseArrayOutput struct{ *pulumi.OutputState }

func (TaintResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaintResponse)(nil)).Elem()
}

func (o TaintResponseArrayOutput) ToTaintResponseArrayOutput() TaintResponseArrayOutput {
	return o
}

func (o TaintResponseArrayOutput) ToTaintResponseArrayOutputWithContext(ctx context.Context) TaintResponseArrayOutput {
	return o
}

func (o TaintResponseArrayOutput) Index(i pulumi.IntInput) TaintResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaintResponse {
		return vs[0].([]TaintResponse)[vs[1].(int)]
	}).(TaintResponseOutput)
}

// Definition of TargetDescription
type TargetDescription struct {
	// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
	Id *string `pulumi:"id"`
	// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
	Port *int `pulumi:"port"`
}

// TargetDescriptionInput is an input type that accepts TargetDescriptionArgs and TargetDescriptionOutput values.
// You can construct a concrete instance of `TargetDescriptionInput` via:
//
//	TargetDescriptionArgs{...}
type TargetDescriptionInput interface {
	pulumi.Input

	ToTargetDescriptionOutput() TargetDescriptionOutput
	ToTargetDescriptionOutputWithContext(context.Context) TargetDescriptionOutput
}

// Definition of TargetDescription
type TargetDescriptionArgs struct {
	// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
	Id pulumi.StringPtrInput `pulumi:"id"`
	// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (TargetDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetDescription)(nil)).Elem()
}

func (i TargetDescriptionArgs) ToTargetDescriptionOutput() TargetDescriptionOutput {
	return i.ToTargetDescriptionOutputWithContext(context.Background())
}

func (i TargetDescriptionArgs) ToTargetDescriptionOutputWithContext(ctx context.Context) TargetDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDescriptionOutput)
}

func (i TargetDescriptionArgs) ToTargetDescriptionPtrOutput() TargetDescriptionPtrOutput {
	return i.ToTargetDescriptionPtrOutputWithContext(context.Background())
}

func (i TargetDescriptionArgs) ToTargetDescriptionPtrOutputWithContext(ctx context.Context) TargetDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDescriptionOutput).ToTargetDescriptionPtrOutputWithContext(ctx)
}

// TargetDescriptionPtrInput is an input type that accepts TargetDescriptionArgs, TargetDescriptionPtr and TargetDescriptionPtrOutput values.
// You can construct a concrete instance of `TargetDescriptionPtrInput` via:
//
//	        TargetDescriptionArgs{...}
//
//	or:
//
//	        nil
type TargetDescriptionPtrInput interface {
	pulumi.Input

	ToTargetDescriptionPtrOutput() TargetDescriptionPtrOutput
	ToTargetDescriptionPtrOutputWithContext(context.Context) TargetDescriptionPtrOutput
}

type targetDescriptionPtrType TargetDescriptionArgs

func TargetDescriptionPtr(v *TargetDescriptionArgs) TargetDescriptionPtrInput {
	return (*targetDescriptionPtrType)(v)
}

func (*targetDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetDescription)(nil)).Elem()
}

func (i *targetDescriptionPtrType) ToTargetDescriptionPtrOutput() TargetDescriptionPtrOutput {
	return i.ToTargetDescriptionPtrOutputWithContext(context.Background())
}

func (i *targetDescriptionPtrType) ToTargetDescriptionPtrOutputWithContext(ctx context.Context) TargetDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDescriptionPtrOutput)
}

// TargetDescriptionArrayInput is an input type that accepts TargetDescriptionArray and TargetDescriptionArrayOutput values.
// You can construct a concrete instance of `TargetDescriptionArrayInput` via:
//
//	TargetDescriptionArray{ TargetDescriptionArgs{...} }
type TargetDescriptionArrayInput interface {
	pulumi.Input

	ToTargetDescriptionArrayOutput() TargetDescriptionArrayOutput
	ToTargetDescriptionArrayOutputWithContext(context.Context) TargetDescriptionArrayOutput
}

type TargetDescriptionArray []TargetDescriptionInput

func (TargetDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetDescription)(nil)).Elem()
}

func (i TargetDescriptionArray) ToTargetDescriptionArrayOutput() TargetDescriptionArrayOutput {
	return i.ToTargetDescriptionArrayOutputWithContext(context.Background())
}

func (i TargetDescriptionArray) ToTargetDescriptionArrayOutputWithContext(ctx context.Context) TargetDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDescriptionArrayOutput)
}

// Definition of TargetDescription
type TargetDescriptionOutput struct{ *pulumi.OutputState }

func (TargetDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetDescription)(nil)).Elem()
}

func (o TargetDescriptionOutput) ToTargetDescriptionOutput() TargetDescriptionOutput {
	return o
}

func (o TargetDescriptionOutput) ToTargetDescriptionOutputWithContext(ctx context.Context) TargetDescriptionOutput {
	return o
}

func (o TargetDescriptionOutput) ToTargetDescriptionPtrOutput() TargetDescriptionPtrOutput {
	return o.ToTargetDescriptionPtrOutputWithContext(context.Background())
}

func (o TargetDescriptionOutput) ToTargetDescriptionPtrOutputWithContext(ctx context.Context) TargetDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetDescription) *TargetDescription {
		return &v
	}).(TargetDescriptionPtrOutput)
}

// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
func (o TargetDescriptionOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetDescription) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
func (o TargetDescriptionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetDescription) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
func (o TargetDescriptionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetDescription) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type TargetDescriptionPtrOutput struct{ *pulumi.OutputState }

func (TargetDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetDescription)(nil)).Elem()
}

func (o TargetDescriptionPtrOutput) ToTargetDescriptionPtrOutput() TargetDescriptionPtrOutput {
	return o
}

func (o TargetDescriptionPtrOutput) ToTargetDescriptionPtrOutputWithContext(ctx context.Context) TargetDescriptionPtrOutput {
	return o
}

func (o TargetDescriptionPtrOutput) Elem() TargetDescriptionOutput {
	return o.ApplyT(func(v *TargetDescription) TargetDescription {
		if v != nil {
			return *v
		}
		var ret TargetDescription
		return ret
	}).(TargetDescriptionOutput)
}

// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
func (o TargetDescriptionPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetDescription) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
func (o TargetDescriptionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetDescription) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
func (o TargetDescriptionPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetDescription) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type TargetDescriptionArrayOutput struct{ *pulumi.OutputState }

func (TargetDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetDescription)(nil)).Elem()
}

func (o TargetDescriptionArrayOutput) ToTargetDescriptionArrayOutput() TargetDescriptionArrayOutput {
	return o
}

func (o TargetDescriptionArrayOutput) ToTargetDescriptionArrayOutputWithContext(ctx context.Context) TargetDescriptionArrayOutput {
	return o
}

func (o TargetDescriptionArrayOutput) Index(i pulumi.IntInput) TargetDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetDescription {
		return vs[0].([]TargetDescription)[vs[1].(int)]
	}).(TargetDescriptionOutput)
}

// Definition of TargetDescription
type TargetDescriptionResponse struct {
	// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
	Id *string `pulumi:"id"`
	// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
	Port *int `pulumi:"port"`
}

// Definition of TargetDescription
type TargetDescriptionResponseOutput struct{ *pulumi.OutputState }

func (TargetDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetDescriptionResponse)(nil)).Elem()
}

func (o TargetDescriptionResponseOutput) ToTargetDescriptionResponseOutput() TargetDescriptionResponseOutput {
	return o
}

func (o TargetDescriptionResponseOutput) ToTargetDescriptionResponseOutputWithContext(ctx context.Context) TargetDescriptionResponseOutput {
	return o
}

// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
func (o TargetDescriptionResponseOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetDescriptionResponse) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
func (o TargetDescriptionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetDescriptionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
func (o TargetDescriptionResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetDescriptionResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type TargetDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetDescriptionResponse)(nil)).Elem()
}

func (o TargetDescriptionResponsePtrOutput) ToTargetDescriptionResponsePtrOutput() TargetDescriptionResponsePtrOutput {
	return o
}

func (o TargetDescriptionResponsePtrOutput) ToTargetDescriptionResponsePtrOutputWithContext(ctx context.Context) TargetDescriptionResponsePtrOutput {
	return o
}

func (o TargetDescriptionResponsePtrOutput) Elem() TargetDescriptionResponseOutput {
	return o.ApplyT(func(v *TargetDescriptionResponse) TargetDescriptionResponse {
		if v != nil {
			return *v
		}
		var ret TargetDescriptionResponse
		return ret
	}).(TargetDescriptionResponseOutput)
}

// <p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>For Application Load Balancer target groups, the specified Availability Zone value is only applicable when cross-zone load balancing is off. Otherwise the parameter is ignored and treated as <code>all</code>.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code> or <code>alb</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>For Application Load Balancer target groups with cross-zone load balancing off, if the target type is <code>ip</code> and the IP address is outside of the VPC for the target group, this should be an Availability Zone inside the VPC for the target group.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>
func (o TargetDescriptionResponsePtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// <p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function. If the target type is <code>alb</code>, specify the ARN of the Application Load Balancer target. </p>
func (o TargetDescriptionResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// <p>The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is <code>alb</code>, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. This parameter is not used if the target is a Lambda function.</p>
func (o TargetDescriptionResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type TargetDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetDescriptionResponse)(nil)).Elem()
}

func (o TargetDescriptionResponseArrayOutput) ToTargetDescriptionResponseArrayOutput() TargetDescriptionResponseArrayOutput {
	return o
}

func (o TargetDescriptionResponseArrayOutput) ToTargetDescriptionResponseArrayOutputWithContext(ctx context.Context) TargetDescriptionResponseArrayOutput {
	return o
}

func (o TargetDescriptionResponseArrayOutput) Index(i pulumi.IntInput) TargetDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetDescriptionResponse {
		return vs[0].([]TargetDescriptionResponse)[vs[1].(int)]
	}).(TargetDescriptionResponseOutput)
}

// Definition of TargetGroupAttribute
type TargetGroupAttribute struct {
	// The value of the attribute.
	Key *string `pulumi:"key"`
	// The name of the attribute.
	Value *string `pulumi:"value"`
}

// TargetGroupAttributeInput is an input type that accepts TargetGroupAttributeArgs and TargetGroupAttributeOutput values.
// You can construct a concrete instance of `TargetGroupAttributeInput` via:
//
//	TargetGroupAttributeArgs{...}
type TargetGroupAttributeInput interface {
	pulumi.Input

	ToTargetGroupAttributeOutput() TargetGroupAttributeOutput
	ToTargetGroupAttributeOutputWithContext(context.Context) TargetGroupAttributeOutput
}

// Definition of TargetGroupAttribute
type TargetGroupAttributeArgs struct {
	// The value of the attribute.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the attribute.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetGroupAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttribute)(nil)).Elem()
}

func (i TargetGroupAttributeArgs) ToTargetGroupAttributeOutput() TargetGroupAttributeOutput {
	return i.ToTargetGroupAttributeOutputWithContext(context.Background())
}

func (i TargetGroupAttributeArgs) ToTargetGroupAttributeOutputWithContext(ctx context.Context) TargetGroupAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttributeOutput)
}

// TargetGroupAttributeArrayInput is an input type that accepts TargetGroupAttributeArray and TargetGroupAttributeArrayOutput values.
// You can construct a concrete instance of `TargetGroupAttributeArrayInput` via:
//
//	TargetGroupAttributeArray{ TargetGroupAttributeArgs{...} }
type TargetGroupAttributeArrayInput interface {
	pulumi.Input

	ToTargetGroupAttributeArrayOutput() TargetGroupAttributeArrayOutput
	ToTargetGroupAttributeArrayOutputWithContext(context.Context) TargetGroupAttributeArrayOutput
}

type TargetGroupAttributeArray []TargetGroupAttributeInput

func (TargetGroupAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttribute)(nil)).Elem()
}

func (i TargetGroupAttributeArray) ToTargetGroupAttributeArrayOutput() TargetGroupAttributeArrayOutput {
	return i.ToTargetGroupAttributeArrayOutputWithContext(context.Background())
}

func (i TargetGroupAttributeArray) ToTargetGroupAttributeArrayOutputWithContext(ctx context.Context) TargetGroupAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttributeArrayOutput)
}

// Definition of TargetGroupAttribute
type TargetGroupAttributeOutput struct{ *pulumi.OutputState }

func (TargetGroupAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttribute)(nil)).Elem()
}

func (o TargetGroupAttributeOutput) ToTargetGroupAttributeOutput() TargetGroupAttributeOutput {
	return o
}

func (o TargetGroupAttributeOutput) ToTargetGroupAttributeOutputWithContext(ctx context.Context) TargetGroupAttributeOutput {
	return o
}

// The value of the attribute.
func (o TargetGroupAttributeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupAttribute) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the attribute.
func (o TargetGroupAttributeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupAttribute) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetGroupAttributeArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttribute)(nil)).Elem()
}

func (o TargetGroupAttributeArrayOutput) ToTargetGroupAttributeArrayOutput() TargetGroupAttributeArrayOutput {
	return o
}

func (o TargetGroupAttributeArrayOutput) ToTargetGroupAttributeArrayOutputWithContext(ctx context.Context) TargetGroupAttributeArrayOutput {
	return o
}

func (o TargetGroupAttributeArrayOutput) Index(i pulumi.IntInput) TargetGroupAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupAttribute {
		return vs[0].([]TargetGroupAttribute)[vs[1].(int)]
	}).(TargetGroupAttributeOutput)
}

// Definition of TargetGroupAttribute
type TargetGroupAttributeResponse struct {
	// The value of the attribute.
	Key *string `pulumi:"key"`
	// The name of the attribute.
	Value *string `pulumi:"value"`
}

// Definition of TargetGroupAttribute
type TargetGroupAttributeResponseOutput struct{ *pulumi.OutputState }

func (TargetGroupAttributeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttributeResponse)(nil)).Elem()
}

func (o TargetGroupAttributeResponseOutput) ToTargetGroupAttributeResponseOutput() TargetGroupAttributeResponseOutput {
	return o
}

func (o TargetGroupAttributeResponseOutput) ToTargetGroupAttributeResponseOutputWithContext(ctx context.Context) TargetGroupAttributeResponseOutput {
	return o
}

// The value of the attribute.
func (o TargetGroupAttributeResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupAttributeResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the attribute.
func (o TargetGroupAttributeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupAttributeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetGroupAttributeResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupAttributeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttributeResponse)(nil)).Elem()
}

func (o TargetGroupAttributeResponseArrayOutput) ToTargetGroupAttributeResponseArrayOutput() TargetGroupAttributeResponseArrayOutput {
	return o
}

func (o TargetGroupAttributeResponseArrayOutput) ToTargetGroupAttributeResponseArrayOutputWithContext(ctx context.Context) TargetGroupAttributeResponseArrayOutput {
	return o
}

func (o TargetGroupAttributeResponseArrayOutput) Index(i pulumi.IntInput) TargetGroupAttributeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupAttributeResponse {
		return vs[0].([]TargetGroupAttributeResponse)[vs[1].(int)]
	}).(TargetGroupAttributeResponseOutput)
}

// Definition of TargetGroupStickinessConfig
type TargetGroupStickinessConfigResponse struct {
	// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
	DurationSeconds *int `pulumi:"durationSeconds"`
	// Indicates whether target group stickiness is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// Definition of TargetGroupStickinessConfig
type TargetGroupStickinessConfigResponseOutput struct{ *pulumi.OutputState }

func (TargetGroupStickinessConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupStickinessConfigResponse)(nil)).Elem()
}

func (o TargetGroupStickinessConfigResponseOutput) ToTargetGroupStickinessConfigResponseOutput() TargetGroupStickinessConfigResponseOutput {
	return o
}

func (o TargetGroupStickinessConfigResponseOutput) ToTargetGroupStickinessConfigResponseOutputWithContext(ctx context.Context) TargetGroupStickinessConfigResponseOutput {
	return o
}

// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
func (o TargetGroupStickinessConfigResponseOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupStickinessConfigResponse) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

// Indicates whether target group stickiness is enabled.
func (o TargetGroupStickinessConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupStickinessConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type TargetGroupStickinessConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetGroupStickinessConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupStickinessConfigResponse)(nil)).Elem()
}

func (o TargetGroupStickinessConfigResponsePtrOutput) ToTargetGroupStickinessConfigResponsePtrOutput() TargetGroupStickinessConfigResponsePtrOutput {
	return o
}

func (o TargetGroupStickinessConfigResponsePtrOutput) ToTargetGroupStickinessConfigResponsePtrOutputWithContext(ctx context.Context) TargetGroupStickinessConfigResponsePtrOutput {
	return o
}

func (o TargetGroupStickinessConfigResponsePtrOutput) Elem() TargetGroupStickinessConfigResponseOutput {
	return o.ApplyT(func(v *TargetGroupStickinessConfigResponse) TargetGroupStickinessConfigResponse {
		if v != nil {
			return *v
		}
		var ret TargetGroupStickinessConfigResponse
		return ret
	}).(TargetGroupStickinessConfigResponseOutput)
}

// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
func (o TargetGroupStickinessConfigResponsePtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupStickinessConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

// Indicates whether target group stickiness is enabled.
func (o TargetGroupStickinessConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupStickinessConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of TargetGroupTuple
type TargetGroupTupleResponse struct {
	// The Amazon Resource Name (ARN) of the target group.
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	// The weight. The range is 0 to 999.
	Weight *int `pulumi:"weight"`
}

// Definition of TargetGroupTuple
type TargetGroupTupleResponseOutput struct{ *pulumi.OutputState }

func (TargetGroupTupleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTupleResponse)(nil)).Elem()
}

func (o TargetGroupTupleResponseOutput) ToTargetGroupTupleResponseOutput() TargetGroupTupleResponseOutput {
	return o
}

func (o TargetGroupTupleResponseOutput) ToTargetGroupTupleResponseOutputWithContext(ctx context.Context) TargetGroupTupleResponseOutput {
	return o
}

// The Amazon Resource Name (ARN) of the target group.
func (o TargetGroupTupleResponseOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupTupleResponse) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

// The weight. The range is 0 to 999.
func (o TargetGroupTupleResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupTupleResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type TargetGroupTupleResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTupleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTupleResponse)(nil)).Elem()
}

func (o TargetGroupTupleResponseArrayOutput) ToTargetGroupTupleResponseArrayOutput() TargetGroupTupleResponseArrayOutput {
	return o
}

func (o TargetGroupTupleResponseArrayOutput) ToTargetGroupTupleResponseArrayOutputWithContext(ctx context.Context) TargetGroupTupleResponseArrayOutput {
	return o
}

func (o TargetGroupTupleResponseArrayOutput) Index(i pulumi.IntInput) TargetGroupTupleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTupleResponse {
		return vs[0].([]TargetGroupTupleResponse)[vs[1].(int)]
	}).(TargetGroupTupleResponseOutput)
}

// Definition of TargetHealth
type TargetHealth struct {
	// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
	Description *string `pulumi:"description"`
	// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
	Reason *TargetHealthReasonEnumEnumValue `pulumi:"reason"`
	// <p>The state of the target.</p>
	State *TargetHealthStateEnumEnumValue `pulumi:"state"`
}

// TargetHealthInput is an input type that accepts TargetHealthArgs and TargetHealthOutput values.
// You can construct a concrete instance of `TargetHealthInput` via:
//
//	TargetHealthArgs{...}
type TargetHealthInput interface {
	pulumi.Input

	ToTargetHealthOutput() TargetHealthOutput
	ToTargetHealthOutputWithContext(context.Context) TargetHealthOutput
}

// Definition of TargetHealth
type TargetHealthArgs struct {
	// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
	Reason TargetHealthReasonEnumEnumValuePtrInput `pulumi:"reason"`
	// <p>The state of the target.</p>
	State TargetHealthStateEnumEnumValuePtrInput `pulumi:"state"`
}

func (TargetHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealth)(nil)).Elem()
}

func (i TargetHealthArgs) ToTargetHealthOutput() TargetHealthOutput {
	return i.ToTargetHealthOutputWithContext(context.Background())
}

func (i TargetHealthArgs) ToTargetHealthOutputWithContext(ctx context.Context) TargetHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthOutput)
}

func (i TargetHealthArgs) ToTargetHealthPtrOutput() TargetHealthPtrOutput {
	return i.ToTargetHealthPtrOutputWithContext(context.Background())
}

func (i TargetHealthArgs) ToTargetHealthPtrOutputWithContext(ctx context.Context) TargetHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthOutput).ToTargetHealthPtrOutputWithContext(ctx)
}

// TargetHealthPtrInput is an input type that accepts TargetHealthArgs, TargetHealthPtr and TargetHealthPtrOutput values.
// You can construct a concrete instance of `TargetHealthPtrInput` via:
//
//	        TargetHealthArgs{...}
//
//	or:
//
//	        nil
type TargetHealthPtrInput interface {
	pulumi.Input

	ToTargetHealthPtrOutput() TargetHealthPtrOutput
	ToTargetHealthPtrOutputWithContext(context.Context) TargetHealthPtrOutput
}

type targetHealthPtrType TargetHealthArgs

func TargetHealthPtr(v *TargetHealthArgs) TargetHealthPtrInput {
	return (*targetHealthPtrType)(v)
}

func (*targetHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealth)(nil)).Elem()
}

func (i *targetHealthPtrType) ToTargetHealthPtrOutput() TargetHealthPtrOutput {
	return i.ToTargetHealthPtrOutputWithContext(context.Background())
}

func (i *targetHealthPtrType) ToTargetHealthPtrOutputWithContext(ctx context.Context) TargetHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthPtrOutput)
}

// Definition of TargetHealth
type TargetHealthOutput struct{ *pulumi.OutputState }

func (TargetHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealth)(nil)).Elem()
}

func (o TargetHealthOutput) ToTargetHealthOutput() TargetHealthOutput {
	return o
}

func (o TargetHealthOutput) ToTargetHealthOutputWithContext(ctx context.Context) TargetHealthOutput {
	return o
}

func (o TargetHealthOutput) ToTargetHealthPtrOutput() TargetHealthPtrOutput {
	return o.ToTargetHealthPtrOutputWithContext(context.Background())
}

func (o TargetHealthOutput) ToTargetHealthPtrOutputWithContext(ctx context.Context) TargetHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetHealth) *TargetHealth {
		return &v
	}).(TargetHealthPtrOutput)
}

// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
func (o TargetHealthOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetHealth) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
func (o TargetHealthOutput) Reason() TargetHealthReasonEnumEnumValuePtrOutput {
	return o.ApplyT(func(v TargetHealth) *TargetHealthReasonEnumEnumValue { return v.Reason }).(TargetHealthReasonEnumEnumValuePtrOutput)
}

// <p>The state of the target.</p>
func (o TargetHealthOutput) State() TargetHealthStateEnumEnumValuePtrOutput {
	return o.ApplyT(func(v TargetHealth) *TargetHealthStateEnumEnumValue { return v.State }).(TargetHealthStateEnumEnumValuePtrOutput)
}

type TargetHealthPtrOutput struct{ *pulumi.OutputState }

func (TargetHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealth)(nil)).Elem()
}

func (o TargetHealthPtrOutput) ToTargetHealthPtrOutput() TargetHealthPtrOutput {
	return o
}

func (o TargetHealthPtrOutput) ToTargetHealthPtrOutputWithContext(ctx context.Context) TargetHealthPtrOutput {
	return o
}

func (o TargetHealthPtrOutput) Elem() TargetHealthOutput {
	return o.ApplyT(func(v *TargetHealth) TargetHealth {
		if v != nil {
			return *v
		}
		var ret TargetHealth
		return ret
	}).(TargetHealthOutput)
}

// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
func (o TargetHealthPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetHealth) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
func (o TargetHealthPtrOutput) Reason() TargetHealthReasonEnumEnumValuePtrOutput {
	return o.ApplyT(func(v *TargetHealth) *TargetHealthReasonEnumEnumValue {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(TargetHealthReasonEnumEnumValuePtrOutput)
}

// <p>The state of the target.</p>
func (o TargetHealthPtrOutput) State() TargetHealthStateEnumEnumValuePtrOutput {
	return o.ApplyT(func(v *TargetHealth) *TargetHealthStateEnumEnumValue {
		if v == nil {
			return nil
		}
		return v.State
	}).(TargetHealthStateEnumEnumValuePtrOutput)
}

// Definition of TargetHealthReasonEnumEnumValue
type TargetHealthReasonEnumEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// TargetHealthReasonEnumEnumValueInput is an input type that accepts TargetHealthReasonEnumEnumValueArgs and TargetHealthReasonEnumEnumValueOutput values.
// You can construct a concrete instance of `TargetHealthReasonEnumEnumValueInput` via:
//
//	TargetHealthReasonEnumEnumValueArgs{...}
type TargetHealthReasonEnumEnumValueInput interface {
	pulumi.Input

	ToTargetHealthReasonEnumEnumValueOutput() TargetHealthReasonEnumEnumValueOutput
	ToTargetHealthReasonEnumEnumValueOutputWithContext(context.Context) TargetHealthReasonEnumEnumValueOutput
}

// Definition of TargetHealthReasonEnumEnumValue
type TargetHealthReasonEnumEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetHealthReasonEnumEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthReasonEnumEnumValue)(nil)).Elem()
}

func (i TargetHealthReasonEnumEnumValueArgs) ToTargetHealthReasonEnumEnumValueOutput() TargetHealthReasonEnumEnumValueOutput {
	return i.ToTargetHealthReasonEnumEnumValueOutputWithContext(context.Background())
}

func (i TargetHealthReasonEnumEnumValueArgs) ToTargetHealthReasonEnumEnumValueOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthReasonEnumEnumValueOutput)
}

func (i TargetHealthReasonEnumEnumValueArgs) ToTargetHealthReasonEnumEnumValuePtrOutput() TargetHealthReasonEnumEnumValuePtrOutput {
	return i.ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(context.Background())
}

func (i TargetHealthReasonEnumEnumValueArgs) ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthReasonEnumEnumValueOutput).ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(ctx)
}

// TargetHealthReasonEnumEnumValuePtrInput is an input type that accepts TargetHealthReasonEnumEnumValueArgs, TargetHealthReasonEnumEnumValuePtr and TargetHealthReasonEnumEnumValuePtrOutput values.
// You can construct a concrete instance of `TargetHealthReasonEnumEnumValuePtrInput` via:
//
//	        TargetHealthReasonEnumEnumValueArgs{...}
//
//	or:
//
//	        nil
type TargetHealthReasonEnumEnumValuePtrInput interface {
	pulumi.Input

	ToTargetHealthReasonEnumEnumValuePtrOutput() TargetHealthReasonEnumEnumValuePtrOutput
	ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(context.Context) TargetHealthReasonEnumEnumValuePtrOutput
}

type targetHealthReasonEnumEnumValuePtrType TargetHealthReasonEnumEnumValueArgs

func TargetHealthReasonEnumEnumValuePtr(v *TargetHealthReasonEnumEnumValueArgs) TargetHealthReasonEnumEnumValuePtrInput {
	return (*targetHealthReasonEnumEnumValuePtrType)(v)
}

func (*targetHealthReasonEnumEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthReasonEnumEnumValue)(nil)).Elem()
}

func (i *targetHealthReasonEnumEnumValuePtrType) ToTargetHealthReasonEnumEnumValuePtrOutput() TargetHealthReasonEnumEnumValuePtrOutput {
	return i.ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(context.Background())
}

func (i *targetHealthReasonEnumEnumValuePtrType) ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthReasonEnumEnumValuePtrOutput)
}

// Definition of TargetHealthReasonEnumEnumValue
type TargetHealthReasonEnumEnumValueOutput struct{ *pulumi.OutputState }

func (TargetHealthReasonEnumEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthReasonEnumEnumValue)(nil)).Elem()
}

func (o TargetHealthReasonEnumEnumValueOutput) ToTargetHealthReasonEnumEnumValueOutput() TargetHealthReasonEnumEnumValueOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValueOutput) ToTargetHealthReasonEnumEnumValueOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValueOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValueOutput) ToTargetHealthReasonEnumEnumValuePtrOutput() TargetHealthReasonEnumEnumValuePtrOutput {
	return o.ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(context.Background())
}

func (o TargetHealthReasonEnumEnumValueOutput) ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetHealthReasonEnumEnumValue) *TargetHealthReasonEnumEnumValue {
		return &v
	}).(TargetHealthReasonEnumEnumValuePtrOutput)
}

// Property value
func (o TargetHealthReasonEnumEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetHealthReasonEnumEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetHealthReasonEnumEnumValuePtrOutput struct{ *pulumi.OutputState }

func (TargetHealthReasonEnumEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthReasonEnumEnumValue)(nil)).Elem()
}

func (o TargetHealthReasonEnumEnumValuePtrOutput) ToTargetHealthReasonEnumEnumValuePtrOutput() TargetHealthReasonEnumEnumValuePtrOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValuePtrOutput) ToTargetHealthReasonEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValuePtrOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValuePtrOutput) Elem() TargetHealthReasonEnumEnumValueOutput {
	return o.ApplyT(func(v *TargetHealthReasonEnumEnumValue) TargetHealthReasonEnumEnumValue {
		if v != nil {
			return *v
		}
		var ret TargetHealthReasonEnumEnumValue
		return ret
	}).(TargetHealthReasonEnumEnumValueOutput)
}

// Property value
func (o TargetHealthReasonEnumEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetHealthReasonEnumEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TargetHealthReasonEnumEnumValue
type TargetHealthReasonEnumEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TargetHealthReasonEnumEnumValue
type TargetHealthReasonEnumEnumValueResponseOutput struct{ *pulumi.OutputState }

func (TargetHealthReasonEnumEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthReasonEnumEnumValueResponse)(nil)).Elem()
}

func (o TargetHealthReasonEnumEnumValueResponseOutput) ToTargetHealthReasonEnumEnumValueResponseOutput() TargetHealthReasonEnumEnumValueResponseOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValueResponseOutput) ToTargetHealthReasonEnumEnumValueResponseOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValueResponseOutput {
	return o
}

// Property value
func (o TargetHealthReasonEnumEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetHealthReasonEnumEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetHealthReasonEnumEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetHealthReasonEnumEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthReasonEnumEnumValueResponse)(nil)).Elem()
}

func (o TargetHealthReasonEnumEnumValueResponsePtrOutput) ToTargetHealthReasonEnumEnumValueResponsePtrOutput() TargetHealthReasonEnumEnumValueResponsePtrOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValueResponsePtrOutput) ToTargetHealthReasonEnumEnumValueResponsePtrOutputWithContext(ctx context.Context) TargetHealthReasonEnumEnumValueResponsePtrOutput {
	return o
}

func (o TargetHealthReasonEnumEnumValueResponsePtrOutput) Elem() TargetHealthReasonEnumEnumValueResponseOutput {
	return o.ApplyT(func(v *TargetHealthReasonEnumEnumValueResponse) TargetHealthReasonEnumEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret TargetHealthReasonEnumEnumValueResponse
		return ret
	}).(TargetHealthReasonEnumEnumValueResponseOutput)
}

// Property value
func (o TargetHealthReasonEnumEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetHealthReasonEnumEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TargetHealth
type TargetHealthResponse struct {
	// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
	Description *string `pulumi:"description"`
	// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
	Reason *TargetHealthReasonEnumEnumValueResponse `pulumi:"reason"`
	// <p>The state of the target.</p>
	State *TargetHealthStateEnumEnumValueResponse `pulumi:"state"`
}

// Definition of TargetHealth
type TargetHealthResponseOutput struct{ *pulumi.OutputState }

func (TargetHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthResponse)(nil)).Elem()
}

func (o TargetHealthResponseOutput) ToTargetHealthResponseOutput() TargetHealthResponseOutput {
	return o
}

func (o TargetHealthResponseOutput) ToTargetHealthResponseOutputWithContext(ctx context.Context) TargetHealthResponseOutput {
	return o
}

// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
func (o TargetHealthResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetHealthResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
func (o TargetHealthResponseOutput) Reason() TargetHealthReasonEnumEnumValueResponsePtrOutput {
	return o.ApplyT(func(v TargetHealthResponse) *TargetHealthReasonEnumEnumValueResponse { return v.Reason }).(TargetHealthReasonEnumEnumValueResponsePtrOutput)
}

// <p>The state of the target.</p>
func (o TargetHealthResponseOutput) State() TargetHealthStateEnumEnumValueResponsePtrOutput {
	return o.ApplyT(func(v TargetHealthResponse) *TargetHealthStateEnumEnumValueResponse { return v.State }).(TargetHealthStateEnumEnumValueResponsePtrOutput)
}

type TargetHealthResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetHealthResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthResponse)(nil)).Elem()
}

func (o TargetHealthResponsePtrOutput) ToTargetHealthResponsePtrOutput() TargetHealthResponsePtrOutput {
	return o
}

func (o TargetHealthResponsePtrOutput) ToTargetHealthResponsePtrOutputWithContext(ctx context.Context) TargetHealthResponsePtrOutput {
	return o
}

func (o TargetHealthResponsePtrOutput) Elem() TargetHealthResponseOutput {
	return o.ApplyT(func(v *TargetHealthResponse) TargetHealthResponse {
		if v != nil {
			return *v
		}
		var ret TargetHealthResponse
		return ret
	}).(TargetHealthResponseOutput)
}

// <p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>
func (o TargetHealthResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetHealthResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// <p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out. Applies only to Application Load Balancers and Gateway Load Balancers.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error. Applies only to Application Load Balancers.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group. Applies only to Application Load Balancers.</p> </li> <li> <p> <code>Elb.InternalError</code> - Target health is unavailable due to an internal error. Applies only to Network Load Balancers.</p> </li> </ul>
func (o TargetHealthResponsePtrOutput) Reason() TargetHealthReasonEnumEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *TargetHealthResponse) *TargetHealthReasonEnumEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(TargetHealthReasonEnumEnumValueResponsePtrOutput)
}

// <p>The state of the target.</p>
func (o TargetHealthResponsePtrOutput) State() TargetHealthStateEnumEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *TargetHealthResponse) *TargetHealthStateEnumEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.State
	}).(TargetHealthStateEnumEnumValueResponsePtrOutput)
}

// Definition of TargetHealthStateEnumEnumValue
type TargetHealthStateEnumEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// TargetHealthStateEnumEnumValueInput is an input type that accepts TargetHealthStateEnumEnumValueArgs and TargetHealthStateEnumEnumValueOutput values.
// You can construct a concrete instance of `TargetHealthStateEnumEnumValueInput` via:
//
//	TargetHealthStateEnumEnumValueArgs{...}
type TargetHealthStateEnumEnumValueInput interface {
	pulumi.Input

	ToTargetHealthStateEnumEnumValueOutput() TargetHealthStateEnumEnumValueOutput
	ToTargetHealthStateEnumEnumValueOutputWithContext(context.Context) TargetHealthStateEnumEnumValueOutput
}

// Definition of TargetHealthStateEnumEnumValue
type TargetHealthStateEnumEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetHealthStateEnumEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthStateEnumEnumValue)(nil)).Elem()
}

func (i TargetHealthStateEnumEnumValueArgs) ToTargetHealthStateEnumEnumValueOutput() TargetHealthStateEnumEnumValueOutput {
	return i.ToTargetHealthStateEnumEnumValueOutputWithContext(context.Background())
}

func (i TargetHealthStateEnumEnumValueArgs) ToTargetHealthStateEnumEnumValueOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthStateEnumEnumValueOutput)
}

func (i TargetHealthStateEnumEnumValueArgs) ToTargetHealthStateEnumEnumValuePtrOutput() TargetHealthStateEnumEnumValuePtrOutput {
	return i.ToTargetHealthStateEnumEnumValuePtrOutputWithContext(context.Background())
}

func (i TargetHealthStateEnumEnumValueArgs) ToTargetHealthStateEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthStateEnumEnumValueOutput).ToTargetHealthStateEnumEnumValuePtrOutputWithContext(ctx)
}

// TargetHealthStateEnumEnumValuePtrInput is an input type that accepts TargetHealthStateEnumEnumValueArgs, TargetHealthStateEnumEnumValuePtr and TargetHealthStateEnumEnumValuePtrOutput values.
// You can construct a concrete instance of `TargetHealthStateEnumEnumValuePtrInput` via:
//
//	        TargetHealthStateEnumEnumValueArgs{...}
//
//	or:
//
//	        nil
type TargetHealthStateEnumEnumValuePtrInput interface {
	pulumi.Input

	ToTargetHealthStateEnumEnumValuePtrOutput() TargetHealthStateEnumEnumValuePtrOutput
	ToTargetHealthStateEnumEnumValuePtrOutputWithContext(context.Context) TargetHealthStateEnumEnumValuePtrOutput
}

type targetHealthStateEnumEnumValuePtrType TargetHealthStateEnumEnumValueArgs

func TargetHealthStateEnumEnumValuePtr(v *TargetHealthStateEnumEnumValueArgs) TargetHealthStateEnumEnumValuePtrInput {
	return (*targetHealthStateEnumEnumValuePtrType)(v)
}

func (*targetHealthStateEnumEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthStateEnumEnumValue)(nil)).Elem()
}

func (i *targetHealthStateEnumEnumValuePtrType) ToTargetHealthStateEnumEnumValuePtrOutput() TargetHealthStateEnumEnumValuePtrOutput {
	return i.ToTargetHealthStateEnumEnumValuePtrOutputWithContext(context.Background())
}

func (i *targetHealthStateEnumEnumValuePtrType) ToTargetHealthStateEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetHealthStateEnumEnumValuePtrOutput)
}

// Definition of TargetHealthStateEnumEnumValue
type TargetHealthStateEnumEnumValueOutput struct{ *pulumi.OutputState }

func (TargetHealthStateEnumEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthStateEnumEnumValue)(nil)).Elem()
}

func (o TargetHealthStateEnumEnumValueOutput) ToTargetHealthStateEnumEnumValueOutput() TargetHealthStateEnumEnumValueOutput {
	return o
}

func (o TargetHealthStateEnumEnumValueOutput) ToTargetHealthStateEnumEnumValueOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValueOutput {
	return o
}

func (o TargetHealthStateEnumEnumValueOutput) ToTargetHealthStateEnumEnumValuePtrOutput() TargetHealthStateEnumEnumValuePtrOutput {
	return o.ToTargetHealthStateEnumEnumValuePtrOutputWithContext(context.Background())
}

func (o TargetHealthStateEnumEnumValueOutput) ToTargetHealthStateEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetHealthStateEnumEnumValue) *TargetHealthStateEnumEnumValue {
		return &v
	}).(TargetHealthStateEnumEnumValuePtrOutput)
}

// Property value
func (o TargetHealthStateEnumEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetHealthStateEnumEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetHealthStateEnumEnumValuePtrOutput struct{ *pulumi.OutputState }

func (TargetHealthStateEnumEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthStateEnumEnumValue)(nil)).Elem()
}

func (o TargetHealthStateEnumEnumValuePtrOutput) ToTargetHealthStateEnumEnumValuePtrOutput() TargetHealthStateEnumEnumValuePtrOutput {
	return o
}

func (o TargetHealthStateEnumEnumValuePtrOutput) ToTargetHealthStateEnumEnumValuePtrOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValuePtrOutput {
	return o
}

func (o TargetHealthStateEnumEnumValuePtrOutput) Elem() TargetHealthStateEnumEnumValueOutput {
	return o.ApplyT(func(v *TargetHealthStateEnumEnumValue) TargetHealthStateEnumEnumValue {
		if v != nil {
			return *v
		}
		var ret TargetHealthStateEnumEnumValue
		return ret
	}).(TargetHealthStateEnumEnumValueOutput)
}

// Property value
func (o TargetHealthStateEnumEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetHealthStateEnumEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TargetHealthStateEnumEnumValue
type TargetHealthStateEnumEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TargetHealthStateEnumEnumValue
type TargetHealthStateEnumEnumValueResponseOutput struct{ *pulumi.OutputState }

func (TargetHealthStateEnumEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHealthStateEnumEnumValueResponse)(nil)).Elem()
}

func (o TargetHealthStateEnumEnumValueResponseOutput) ToTargetHealthStateEnumEnumValueResponseOutput() TargetHealthStateEnumEnumValueResponseOutput {
	return o
}

func (o TargetHealthStateEnumEnumValueResponseOutput) ToTargetHealthStateEnumEnumValueResponseOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValueResponseOutput {
	return o
}

// Property value
func (o TargetHealthStateEnumEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetHealthStateEnumEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetHealthStateEnumEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetHealthStateEnumEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHealthStateEnumEnumValueResponse)(nil)).Elem()
}

func (o TargetHealthStateEnumEnumValueResponsePtrOutput) ToTargetHealthStateEnumEnumValueResponsePtrOutput() TargetHealthStateEnumEnumValueResponsePtrOutput {
	return o
}

func (o TargetHealthStateEnumEnumValueResponsePtrOutput) ToTargetHealthStateEnumEnumValueResponsePtrOutputWithContext(ctx context.Context) TargetHealthStateEnumEnumValueResponsePtrOutput {
	return o
}

func (o TargetHealthStateEnumEnumValueResponsePtrOutput) Elem() TargetHealthStateEnumEnumValueResponseOutput {
	return o.ApplyT(func(v *TargetHealthStateEnumEnumValueResponse) TargetHealthStateEnumEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret TargetHealthStateEnumEnumValueResponse
		return ret
	}).(TargetHealthStateEnumEnumValueResponseOutput)
}

// Property value
func (o TargetHealthStateEnumEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetHealthStateEnumEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TargetObjectKeyFormat
type TargetObjectKeyFormat struct {
	// Amazon S3 keys for log objects are partitioned in the following format:  ``[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]``  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
	PartitionedPrefix *PartitionedPrefix `pulumi:"partitionedPrefix"`
	// This format defaults the prefix to the given log file prefix for delivering server access log file.
	SimplePrefix interface{} `pulumi:"simplePrefix"`
}

// TargetObjectKeyFormatInput is an input type that accepts TargetObjectKeyFormatArgs and TargetObjectKeyFormatOutput values.
// You can construct a concrete instance of `TargetObjectKeyFormatInput` via:
//
//	TargetObjectKeyFormatArgs{...}
type TargetObjectKeyFormatInput interface {
	pulumi.Input

	ToTargetObjectKeyFormatOutput() TargetObjectKeyFormatOutput
	ToTargetObjectKeyFormatOutputWithContext(context.Context) TargetObjectKeyFormatOutput
}

// Definition of TargetObjectKeyFormat
type TargetObjectKeyFormatArgs struct {
	// Amazon S3 keys for log objects are partitioned in the following format:  ``[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]``  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
	PartitionedPrefix PartitionedPrefixPtrInput `pulumi:"partitionedPrefix"`
	// This format defaults the prefix to the given log file prefix for delivering server access log file.
	SimplePrefix pulumi.Input `pulumi:"simplePrefix"`
}

func (TargetObjectKeyFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetObjectKeyFormat)(nil)).Elem()
}

func (i TargetObjectKeyFormatArgs) ToTargetObjectKeyFormatOutput() TargetObjectKeyFormatOutput {
	return i.ToTargetObjectKeyFormatOutputWithContext(context.Background())
}

func (i TargetObjectKeyFormatArgs) ToTargetObjectKeyFormatOutputWithContext(ctx context.Context) TargetObjectKeyFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetObjectKeyFormatOutput)
}

func (i TargetObjectKeyFormatArgs) ToTargetObjectKeyFormatPtrOutput() TargetObjectKeyFormatPtrOutput {
	return i.ToTargetObjectKeyFormatPtrOutputWithContext(context.Background())
}

func (i TargetObjectKeyFormatArgs) ToTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) TargetObjectKeyFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetObjectKeyFormatOutput).ToTargetObjectKeyFormatPtrOutputWithContext(ctx)
}

// TargetObjectKeyFormatPtrInput is an input type that accepts TargetObjectKeyFormatArgs, TargetObjectKeyFormatPtr and TargetObjectKeyFormatPtrOutput values.
// You can construct a concrete instance of `TargetObjectKeyFormatPtrInput` via:
//
//	        TargetObjectKeyFormatArgs{...}
//
//	or:
//
//	        nil
type TargetObjectKeyFormatPtrInput interface {
	pulumi.Input

	ToTargetObjectKeyFormatPtrOutput() TargetObjectKeyFormatPtrOutput
	ToTargetObjectKeyFormatPtrOutputWithContext(context.Context) TargetObjectKeyFormatPtrOutput
}

type targetObjectKeyFormatPtrType TargetObjectKeyFormatArgs

func TargetObjectKeyFormatPtr(v *TargetObjectKeyFormatArgs) TargetObjectKeyFormatPtrInput {
	return (*targetObjectKeyFormatPtrType)(v)
}

func (*targetObjectKeyFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetObjectKeyFormat)(nil)).Elem()
}

func (i *targetObjectKeyFormatPtrType) ToTargetObjectKeyFormatPtrOutput() TargetObjectKeyFormatPtrOutput {
	return i.ToTargetObjectKeyFormatPtrOutputWithContext(context.Background())
}

func (i *targetObjectKeyFormatPtrType) ToTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) TargetObjectKeyFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetObjectKeyFormatPtrOutput)
}

// Definition of TargetObjectKeyFormat
type TargetObjectKeyFormatOutput struct{ *pulumi.OutputState }

func (TargetObjectKeyFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetObjectKeyFormat)(nil)).Elem()
}

func (o TargetObjectKeyFormatOutput) ToTargetObjectKeyFormatOutput() TargetObjectKeyFormatOutput {
	return o
}

func (o TargetObjectKeyFormatOutput) ToTargetObjectKeyFormatOutputWithContext(ctx context.Context) TargetObjectKeyFormatOutput {
	return o
}

func (o TargetObjectKeyFormatOutput) ToTargetObjectKeyFormatPtrOutput() TargetObjectKeyFormatPtrOutput {
	return o.ToTargetObjectKeyFormatPtrOutputWithContext(context.Background())
}

func (o TargetObjectKeyFormatOutput) ToTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) TargetObjectKeyFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetObjectKeyFormat) *TargetObjectKeyFormat {
		return &v
	}).(TargetObjectKeyFormatPtrOutput)
}

// Amazon S3 keys for log objects are partitioned in the following format:  “[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]“  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
func (o TargetObjectKeyFormatOutput) PartitionedPrefix() PartitionedPrefixPtrOutput {
	return o.ApplyT(func(v TargetObjectKeyFormat) *PartitionedPrefix { return v.PartitionedPrefix }).(PartitionedPrefixPtrOutput)
}

// This format defaults the prefix to the given log file prefix for delivering server access log file.
func (o TargetObjectKeyFormatOutput) SimplePrefix() pulumi.AnyOutput {
	return o.ApplyT(func(v TargetObjectKeyFormat) interface{} { return v.SimplePrefix }).(pulumi.AnyOutput)
}

type TargetObjectKeyFormatPtrOutput struct{ *pulumi.OutputState }

func (TargetObjectKeyFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetObjectKeyFormat)(nil)).Elem()
}

func (o TargetObjectKeyFormatPtrOutput) ToTargetObjectKeyFormatPtrOutput() TargetObjectKeyFormatPtrOutput {
	return o
}

func (o TargetObjectKeyFormatPtrOutput) ToTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) TargetObjectKeyFormatPtrOutput {
	return o
}

func (o TargetObjectKeyFormatPtrOutput) Elem() TargetObjectKeyFormatOutput {
	return o.ApplyT(func(v *TargetObjectKeyFormat) TargetObjectKeyFormat {
		if v != nil {
			return *v
		}
		var ret TargetObjectKeyFormat
		return ret
	}).(TargetObjectKeyFormatOutput)
}

// Amazon S3 keys for log objects are partitioned in the following format:  “[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]“  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
func (o TargetObjectKeyFormatPtrOutput) PartitionedPrefix() PartitionedPrefixPtrOutput {
	return o.ApplyT(func(v *TargetObjectKeyFormat) *PartitionedPrefix {
		if v == nil {
			return nil
		}
		return v.PartitionedPrefix
	}).(PartitionedPrefixPtrOutput)
}

// This format defaults the prefix to the given log file prefix for delivering server access log file.
func (o TargetObjectKeyFormatPtrOutput) SimplePrefix() pulumi.AnyOutput {
	return o.ApplyT(func(v *TargetObjectKeyFormat) interface{} {
		if v == nil {
			return nil
		}
		return v.SimplePrefix
	}).(pulumi.AnyOutput)
}

// Definition of TargetObjectKeyFormat
type TargetObjectKeyFormatResponse struct {
	// Amazon S3 keys for log objects are partitioned in the following format:  ``[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]``  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
	PartitionedPrefix *PartitionedPrefixResponse `pulumi:"partitionedPrefix"`
	// This format defaults the prefix to the given log file prefix for delivering server access log file.
	SimplePrefix interface{} `pulumi:"simplePrefix"`
}

// Definition of TargetObjectKeyFormat
type TargetObjectKeyFormatResponseOutput struct{ *pulumi.OutputState }

func (TargetObjectKeyFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetObjectKeyFormatResponse)(nil)).Elem()
}

func (o TargetObjectKeyFormatResponseOutput) ToTargetObjectKeyFormatResponseOutput() TargetObjectKeyFormatResponseOutput {
	return o
}

func (o TargetObjectKeyFormatResponseOutput) ToTargetObjectKeyFormatResponseOutputWithContext(ctx context.Context) TargetObjectKeyFormatResponseOutput {
	return o
}

// Amazon S3 keys for log objects are partitioned in the following format:  “[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]“  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
func (o TargetObjectKeyFormatResponseOutput) PartitionedPrefix() PartitionedPrefixResponsePtrOutput {
	return o.ApplyT(func(v TargetObjectKeyFormatResponse) *PartitionedPrefixResponse { return v.PartitionedPrefix }).(PartitionedPrefixResponsePtrOutput)
}

// This format defaults the prefix to the given log file prefix for delivering server access log file.
func (o TargetObjectKeyFormatResponseOutput) SimplePrefix() pulumi.AnyOutput {
	return o.ApplyT(func(v TargetObjectKeyFormatResponse) interface{} { return v.SimplePrefix }).(pulumi.AnyOutput)
}

type TargetObjectKeyFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetObjectKeyFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetObjectKeyFormatResponse)(nil)).Elem()
}

func (o TargetObjectKeyFormatResponsePtrOutput) ToTargetObjectKeyFormatResponsePtrOutput() TargetObjectKeyFormatResponsePtrOutput {
	return o
}

func (o TargetObjectKeyFormatResponsePtrOutput) ToTargetObjectKeyFormatResponsePtrOutputWithContext(ctx context.Context) TargetObjectKeyFormatResponsePtrOutput {
	return o
}

func (o TargetObjectKeyFormatResponsePtrOutput) Elem() TargetObjectKeyFormatResponseOutput {
	return o.ApplyT(func(v *TargetObjectKeyFormatResponse) TargetObjectKeyFormatResponse {
		if v != nil {
			return *v
		}
		var ret TargetObjectKeyFormatResponse
		return ret
	}).(TargetObjectKeyFormatResponseOutput)
}

// Amazon S3 keys for log objects are partitioned in the following format:  “[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]“  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
func (o TargetObjectKeyFormatResponsePtrOutput) PartitionedPrefix() PartitionedPrefixResponsePtrOutput {
	return o.ApplyT(func(v *TargetObjectKeyFormatResponse) *PartitionedPrefixResponse {
		if v == nil {
			return nil
		}
		return v.PartitionedPrefix
	}).(PartitionedPrefixResponsePtrOutput)
}

// This format defaults the prefix to the given log file prefix for delivering server access log file.
func (o TargetObjectKeyFormatResponsePtrOutput) SimplePrefix() pulumi.AnyOutput {
	return o.ApplyT(func(v *TargetObjectKeyFormatResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.SimplePrefix
	}).(pulumi.AnyOutput)
}

// Definition of TaskDefinitionPlacementConstraint
type TaskDefinitionPlacementConstraint struct {
	// A cluster query language expression to apply to the constraint. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
	Expression *string `pulumi:"expression"`
	// The type of constraint. The ``MemberOf`` constraint restricts selection to be from a group of valid candidates.
	Type *string `pulumi:"type"`
}

// TaskDefinitionPlacementConstraintInput is an input type that accepts TaskDefinitionPlacementConstraintArgs and TaskDefinitionPlacementConstraintOutput values.
// You can construct a concrete instance of `TaskDefinitionPlacementConstraintInput` via:
//
//	TaskDefinitionPlacementConstraintArgs{...}
type TaskDefinitionPlacementConstraintInput interface {
	pulumi.Input

	ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput
	ToTaskDefinitionPlacementConstraintOutputWithContext(context.Context) TaskDefinitionPlacementConstraintOutput
}

// Definition of TaskDefinitionPlacementConstraint
type TaskDefinitionPlacementConstraintArgs struct {
	// A cluster query language expression to apply to the constraint. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// The type of constraint. The ``MemberOf`` constraint restricts selection to be from a group of valid candidates.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TaskDefinitionPlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (i TaskDefinitionPlacementConstraintArgs) ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput {
	return i.ToTaskDefinitionPlacementConstraintOutputWithContext(context.Background())
}

func (i TaskDefinitionPlacementConstraintArgs) ToTaskDefinitionPlacementConstraintOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPlacementConstraintOutput)
}

// TaskDefinitionPlacementConstraintArrayInput is an input type that accepts TaskDefinitionPlacementConstraintArray and TaskDefinitionPlacementConstraintArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionPlacementConstraintArrayInput` via:
//
//	TaskDefinitionPlacementConstraintArray{ TaskDefinitionPlacementConstraintArgs{...} }
type TaskDefinitionPlacementConstraintArrayInput interface {
	pulumi.Input

	ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput
	ToTaskDefinitionPlacementConstraintArrayOutputWithContext(context.Context) TaskDefinitionPlacementConstraintArrayOutput
}

type TaskDefinitionPlacementConstraintArray []TaskDefinitionPlacementConstraintInput

func (TaskDefinitionPlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (i TaskDefinitionPlacementConstraintArray) ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput {
	return i.ToTaskDefinitionPlacementConstraintArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionPlacementConstraintArray) ToTaskDefinitionPlacementConstraintArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPlacementConstraintArrayOutput)
}

// Definition of TaskDefinitionPlacementConstraint
type TaskDefinitionPlacementConstraintOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintOutput) ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintOutput) ToTaskDefinitionPlacementConstraintOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintOutput {
	return o
}

// A cluster query language expression to apply to the constraint. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o TaskDefinitionPlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// The type of constraint. The “MemberOf“ constraint restricts selection to be from a group of valid candidates.
func (o TaskDefinitionPlacementConstraintOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TaskDefinitionPlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintArrayOutput) ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintArrayOutput) ToTaskDefinitionPlacementConstraintArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintArrayOutput) Index(i pulumi.IntInput) TaskDefinitionPlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionPlacementConstraint {
		return vs[0].([]TaskDefinitionPlacementConstraint)[vs[1].(int)]
	}).(TaskDefinitionPlacementConstraintOutput)
}

// Definition of TaskDefinitionPlacementConstraint
type TaskDefinitionPlacementConstraintResponse struct {
	// A cluster query language expression to apply to the constraint. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
	Expression *string `pulumi:"expression"`
	// The type of constraint. The ``MemberOf`` constraint restricts selection to be from a group of valid candidates.
	Type *string `pulumi:"type"`
}

// Definition of TaskDefinitionPlacementConstraint
type TaskDefinitionPlacementConstraintResponseOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraintResponse)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintResponseOutput) ToTaskDefinitionPlacementConstraintResponseOutput() TaskDefinitionPlacementConstraintResponseOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintResponseOutput) ToTaskDefinitionPlacementConstraintResponseOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintResponseOutput {
	return o
}

// A cluster query language expression to apply to the constraint. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o TaskDefinitionPlacementConstraintResponseOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraintResponse) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// The type of constraint. The “MemberOf“ constraint restricts selection to be from a group of valid candidates.
func (o TaskDefinitionPlacementConstraintResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraintResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TaskDefinitionPlacementConstraintResponseArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraintResponse)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintResponseArrayOutput) ToTaskDefinitionPlacementConstraintResponseArrayOutput() TaskDefinitionPlacementConstraintResponseArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintResponseArrayOutput) ToTaskDefinitionPlacementConstraintResponseArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintResponseArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintResponseArrayOutput) Index(i pulumi.IntInput) TaskDefinitionPlacementConstraintResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionPlacementConstraintResponse {
		return vs[0].([]TaskDefinitionPlacementConstraintResponse)[vs[1].(int)]
	}).(TaskDefinitionPlacementConstraintResponseOutput)
}

// Definition of TenancyEnumValue
type TenancyEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// TenancyEnumValueInput is an input type that accepts TenancyEnumValueArgs and TenancyEnumValueOutput values.
// You can construct a concrete instance of `TenancyEnumValueInput` via:
//
//	TenancyEnumValueArgs{...}
type TenancyEnumValueInput interface {
	pulumi.Input

	ToTenancyEnumValueOutput() TenancyEnumValueOutput
	ToTenancyEnumValueOutputWithContext(context.Context) TenancyEnumValueOutput
}

// Definition of TenancyEnumValue
type TenancyEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TenancyEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenancyEnumValue)(nil)).Elem()
}

func (i TenancyEnumValueArgs) ToTenancyEnumValueOutput() TenancyEnumValueOutput {
	return i.ToTenancyEnumValueOutputWithContext(context.Background())
}

func (i TenancyEnumValueArgs) ToTenancyEnumValueOutputWithContext(ctx context.Context) TenancyEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenancyEnumValueOutput)
}

func (i TenancyEnumValueArgs) ToTenancyEnumValuePtrOutput() TenancyEnumValuePtrOutput {
	return i.ToTenancyEnumValuePtrOutputWithContext(context.Background())
}

func (i TenancyEnumValueArgs) ToTenancyEnumValuePtrOutputWithContext(ctx context.Context) TenancyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenancyEnumValueOutput).ToTenancyEnumValuePtrOutputWithContext(ctx)
}

// TenancyEnumValuePtrInput is an input type that accepts TenancyEnumValueArgs, TenancyEnumValuePtr and TenancyEnumValuePtrOutput values.
// You can construct a concrete instance of `TenancyEnumValuePtrInput` via:
//
//	        TenancyEnumValueArgs{...}
//
//	or:
//
//	        nil
type TenancyEnumValuePtrInput interface {
	pulumi.Input

	ToTenancyEnumValuePtrOutput() TenancyEnumValuePtrOutput
	ToTenancyEnumValuePtrOutputWithContext(context.Context) TenancyEnumValuePtrOutput
}

type tenancyEnumValuePtrType TenancyEnumValueArgs

func TenancyEnumValuePtr(v *TenancyEnumValueArgs) TenancyEnumValuePtrInput {
	return (*tenancyEnumValuePtrType)(v)
}

func (*tenancyEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenancyEnumValue)(nil)).Elem()
}

func (i *tenancyEnumValuePtrType) ToTenancyEnumValuePtrOutput() TenancyEnumValuePtrOutput {
	return i.ToTenancyEnumValuePtrOutputWithContext(context.Background())
}

func (i *tenancyEnumValuePtrType) ToTenancyEnumValuePtrOutputWithContext(ctx context.Context) TenancyEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenancyEnumValuePtrOutput)
}

// Definition of TenancyEnumValue
type TenancyEnumValueOutput struct{ *pulumi.OutputState }

func (TenancyEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenancyEnumValue)(nil)).Elem()
}

func (o TenancyEnumValueOutput) ToTenancyEnumValueOutput() TenancyEnumValueOutput {
	return o
}

func (o TenancyEnumValueOutput) ToTenancyEnumValueOutputWithContext(ctx context.Context) TenancyEnumValueOutput {
	return o
}

func (o TenancyEnumValueOutput) ToTenancyEnumValuePtrOutput() TenancyEnumValuePtrOutput {
	return o.ToTenancyEnumValuePtrOutputWithContext(context.Background())
}

func (o TenancyEnumValueOutput) ToTenancyEnumValuePtrOutputWithContext(ctx context.Context) TenancyEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenancyEnumValue) *TenancyEnumValue {
		return &v
	}).(TenancyEnumValuePtrOutput)
}

// Property value
func (o TenancyEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenancyEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TenancyEnumValuePtrOutput struct{ *pulumi.OutputState }

func (TenancyEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenancyEnumValue)(nil)).Elem()
}

func (o TenancyEnumValuePtrOutput) ToTenancyEnumValuePtrOutput() TenancyEnumValuePtrOutput {
	return o
}

func (o TenancyEnumValuePtrOutput) ToTenancyEnumValuePtrOutputWithContext(ctx context.Context) TenancyEnumValuePtrOutput {
	return o
}

func (o TenancyEnumValuePtrOutput) Elem() TenancyEnumValueOutput {
	return o.ApplyT(func(v *TenancyEnumValue) TenancyEnumValue {
		if v != nil {
			return *v
		}
		var ret TenancyEnumValue
		return ret
	}).(TenancyEnumValueOutput)
}

// Property value
func (o TenancyEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenancyEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TenancyEnumValue
type TenancyEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TenancyEnumValue
type TenancyEnumValueResponseOutput struct{ *pulumi.OutputState }

func (TenancyEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenancyEnumValueResponse)(nil)).Elem()
}

func (o TenancyEnumValueResponseOutput) ToTenancyEnumValueResponseOutput() TenancyEnumValueResponseOutput {
	return o
}

func (o TenancyEnumValueResponseOutput) ToTenancyEnumValueResponseOutputWithContext(ctx context.Context) TenancyEnumValueResponseOutput {
	return o
}

// Property value
func (o TenancyEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenancyEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TenancyEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (TenancyEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenancyEnumValueResponse)(nil)).Elem()
}

func (o TenancyEnumValueResponsePtrOutput) ToTenancyEnumValueResponsePtrOutput() TenancyEnumValueResponsePtrOutput {
	return o
}

func (o TenancyEnumValueResponsePtrOutput) ToTenancyEnumValueResponsePtrOutputWithContext(ctx context.Context) TenancyEnumValueResponsePtrOutput {
	return o
}

func (o TenancyEnumValueResponsePtrOutput) Elem() TenancyEnumValueResponseOutput {
	return o.ApplyT(func(v *TenancyEnumValueResponse) TenancyEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret TenancyEnumValueResponse
		return ret
	}).(TenancyEnumValueResponseOutput)
}

// Property value
func (o TenancyEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenancyEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Tier
type TierResponse struct {
	// The name of this environment tier.
	Name *string `pulumi:"name"`
	// The type of this environment tier.
	Type *string `pulumi:"type"`
	// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
	Version *string `pulumi:"version"`
}

// Definition of Tier
type TierResponseOutput struct{ *pulumi.OutputState }

func (TierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TierResponse)(nil)).Elem()
}

func (o TierResponseOutput) ToTierResponseOutput() TierResponseOutput {
	return o
}

func (o TierResponseOutput) ToTierResponseOutputWithContext(ctx context.Context) TierResponseOutput {
	return o
}

// The name of this environment tier.
func (o TierResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TierResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of this environment tier.
func (o TierResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TierResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
func (o TierResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TierResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type TierResponsePtrOutput struct{ *pulumi.OutputState }

func (TierResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TierResponse)(nil)).Elem()
}

func (o TierResponsePtrOutput) ToTierResponsePtrOutput() TierResponsePtrOutput {
	return o
}

func (o TierResponsePtrOutput) ToTierResponsePtrOutputWithContext(ctx context.Context) TierResponsePtrOutput {
	return o
}

func (o TierResponsePtrOutput) Elem() TierResponseOutput {
	return o.ApplyT(func(v *TierResponse) TierResponse {
		if v != nil {
			return *v
		}
		var ret TierResponse
		return ret
	}).(TierResponseOutput)
}

// The name of this environment tier.
func (o TierResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TierResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of this environment tier.
func (o TierResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TierResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
func (o TierResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TierResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Definition of Tiering
type Tiering struct {
	// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
	AccessTier *string `pulumi:"accessTier"`
	// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
	Days *int `pulumi:"days"`
}

// TieringInput is an input type that accepts TieringArgs and TieringOutput values.
// You can construct a concrete instance of `TieringInput` via:
//
//	TieringArgs{...}
type TieringInput interface {
	pulumi.Input

	ToTieringOutput() TieringOutput
	ToTieringOutputWithContext(context.Context) TieringOutput
}

// Definition of Tiering
type TieringArgs struct {
	// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
	AccessTier pulumi.StringPtrInput `pulumi:"accessTier"`
	// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (TieringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Tiering)(nil)).Elem()
}

func (i TieringArgs) ToTieringOutput() TieringOutput {
	return i.ToTieringOutputWithContext(context.Background())
}

func (i TieringArgs) ToTieringOutputWithContext(ctx context.Context) TieringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TieringOutput)
}

// TieringArrayInput is an input type that accepts TieringArray and TieringArrayOutput values.
// You can construct a concrete instance of `TieringArrayInput` via:
//
//	TieringArray{ TieringArgs{...} }
type TieringArrayInput interface {
	pulumi.Input

	ToTieringArrayOutput() TieringArrayOutput
	ToTieringArrayOutputWithContext(context.Context) TieringArrayOutput
}

type TieringArray []TieringInput

func (TieringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tiering)(nil)).Elem()
}

func (i TieringArray) ToTieringArrayOutput() TieringArrayOutput {
	return i.ToTieringArrayOutputWithContext(context.Background())
}

func (i TieringArray) ToTieringArrayOutputWithContext(ctx context.Context) TieringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TieringArrayOutput)
}

// Definition of Tiering
type TieringOutput struct{ *pulumi.OutputState }

func (TieringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tiering)(nil)).Elem()
}

func (o TieringOutput) ToTieringOutput() TieringOutput {
	return o
}

func (o TieringOutput) ToTieringOutputWithContext(ctx context.Context) TieringOutput {
	return o
}

// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
func (o TieringOutput) AccessTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tiering) *string { return v.AccessTier }).(pulumi.StringPtrOutput)
}

// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
func (o TieringOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Tiering) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type TieringArrayOutput struct{ *pulumi.OutputState }

func (TieringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tiering)(nil)).Elem()
}

func (o TieringArrayOutput) ToTieringArrayOutput() TieringArrayOutput {
	return o
}

func (o TieringArrayOutput) ToTieringArrayOutputWithContext(ctx context.Context) TieringArrayOutput {
	return o
}

func (o TieringArrayOutput) Index(i pulumi.IntInput) TieringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tiering {
		return vs[0].([]Tiering)[vs[1].(int)]
	}).(TieringOutput)
}

// Definition of Tiering
type TieringResponse struct {
	// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
	AccessTier *string `pulumi:"accessTier"`
	// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
	Days *int `pulumi:"days"`
}

// Definition of Tiering
type TieringResponseOutput struct{ *pulumi.OutputState }

func (TieringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringResponse)(nil)).Elem()
}

func (o TieringResponseOutput) ToTieringResponseOutput() TieringResponseOutput {
	return o
}

func (o TieringResponseOutput) ToTieringResponseOutputWithContext(ctx context.Context) TieringResponseOutput {
	return o
}

// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
func (o TieringResponseOutput) AccessTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringResponse) *string { return v.AccessTier }).(pulumi.StringPtrOutput)
}

// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
func (o TieringResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TieringResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type TieringResponseArrayOutput struct{ *pulumi.OutputState }

func (TieringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TieringResponse)(nil)).Elem()
}

func (o TieringResponseArrayOutput) ToTieringResponseArrayOutput() TieringResponseArrayOutput {
	return o
}

func (o TieringResponseArrayOutput) ToTieringResponseArrayOutputWithContext(ctx context.Context) TieringResponseArrayOutput {
	return o
}

func (o TieringResponseArrayOutput) Index(i pulumi.IntInput) TieringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TieringResponse {
		return vs[0].([]TieringResponse)[vs[1].(int)]
	}).(TieringResponseOutput)
}

// Definition of TimeToLiveSpecification
type TimeToLiveSpecification struct {
	// The name of the TTL attribute used to store the expiration time for items in the table.   +  The ``AttributeName`` property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
	AttributeName *string `pulumi:"attributeName"`
	// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
	Enabled *bool `pulumi:"enabled"`
}

// TimeToLiveSpecificationInput is an input type that accepts TimeToLiveSpecificationArgs and TimeToLiveSpecificationOutput values.
// You can construct a concrete instance of `TimeToLiveSpecificationInput` via:
//
//	TimeToLiveSpecificationArgs{...}
type TimeToLiveSpecificationInput interface {
	pulumi.Input

	ToTimeToLiveSpecificationOutput() TimeToLiveSpecificationOutput
	ToTimeToLiveSpecificationOutputWithContext(context.Context) TimeToLiveSpecificationOutput
}

// Definition of TimeToLiveSpecification
type TimeToLiveSpecificationArgs struct {
	// The name of the TTL attribute used to store the expiration time for items in the table.   +  The ``AttributeName`` property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
	AttributeName pulumi.StringPtrInput `pulumi:"attributeName"`
	// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (TimeToLiveSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeToLiveSpecification)(nil)).Elem()
}

func (i TimeToLiveSpecificationArgs) ToTimeToLiveSpecificationOutput() TimeToLiveSpecificationOutput {
	return i.ToTimeToLiveSpecificationOutputWithContext(context.Background())
}

func (i TimeToLiveSpecificationArgs) ToTimeToLiveSpecificationOutputWithContext(ctx context.Context) TimeToLiveSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeToLiveSpecificationOutput)
}

func (i TimeToLiveSpecificationArgs) ToTimeToLiveSpecificationPtrOutput() TimeToLiveSpecificationPtrOutput {
	return i.ToTimeToLiveSpecificationPtrOutputWithContext(context.Background())
}

func (i TimeToLiveSpecificationArgs) ToTimeToLiveSpecificationPtrOutputWithContext(ctx context.Context) TimeToLiveSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeToLiveSpecificationOutput).ToTimeToLiveSpecificationPtrOutputWithContext(ctx)
}

// TimeToLiveSpecificationPtrInput is an input type that accepts TimeToLiveSpecificationArgs, TimeToLiveSpecificationPtr and TimeToLiveSpecificationPtrOutput values.
// You can construct a concrete instance of `TimeToLiveSpecificationPtrInput` via:
//
//	        TimeToLiveSpecificationArgs{...}
//
//	or:
//
//	        nil
type TimeToLiveSpecificationPtrInput interface {
	pulumi.Input

	ToTimeToLiveSpecificationPtrOutput() TimeToLiveSpecificationPtrOutput
	ToTimeToLiveSpecificationPtrOutputWithContext(context.Context) TimeToLiveSpecificationPtrOutput
}

type timeToLiveSpecificationPtrType TimeToLiveSpecificationArgs

func TimeToLiveSpecificationPtr(v *TimeToLiveSpecificationArgs) TimeToLiveSpecificationPtrInput {
	return (*timeToLiveSpecificationPtrType)(v)
}

func (*timeToLiveSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeToLiveSpecification)(nil)).Elem()
}

func (i *timeToLiveSpecificationPtrType) ToTimeToLiveSpecificationPtrOutput() TimeToLiveSpecificationPtrOutput {
	return i.ToTimeToLiveSpecificationPtrOutputWithContext(context.Background())
}

func (i *timeToLiveSpecificationPtrType) ToTimeToLiveSpecificationPtrOutputWithContext(ctx context.Context) TimeToLiveSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeToLiveSpecificationPtrOutput)
}

// Definition of TimeToLiveSpecification
type TimeToLiveSpecificationOutput struct{ *pulumi.OutputState }

func (TimeToLiveSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeToLiveSpecification)(nil)).Elem()
}

func (o TimeToLiveSpecificationOutput) ToTimeToLiveSpecificationOutput() TimeToLiveSpecificationOutput {
	return o
}

func (o TimeToLiveSpecificationOutput) ToTimeToLiveSpecificationOutputWithContext(ctx context.Context) TimeToLiveSpecificationOutput {
	return o
}

func (o TimeToLiveSpecificationOutput) ToTimeToLiveSpecificationPtrOutput() TimeToLiveSpecificationPtrOutput {
	return o.ToTimeToLiveSpecificationPtrOutputWithContext(context.Background())
}

func (o TimeToLiveSpecificationOutput) ToTimeToLiveSpecificationPtrOutputWithContext(ctx context.Context) TimeToLiveSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeToLiveSpecification) *TimeToLiveSpecification {
		return &v
	}).(TimeToLiveSpecificationPtrOutput)
}

// The name of the TTL attribute used to store the expiration time for items in the table.   +  The “AttributeName“ property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
func (o TimeToLiveSpecificationOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeToLiveSpecification) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
func (o TimeToLiveSpecificationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TimeToLiveSpecification) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type TimeToLiveSpecificationPtrOutput struct{ *pulumi.OutputState }

func (TimeToLiveSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeToLiveSpecification)(nil)).Elem()
}

func (o TimeToLiveSpecificationPtrOutput) ToTimeToLiveSpecificationPtrOutput() TimeToLiveSpecificationPtrOutput {
	return o
}

func (o TimeToLiveSpecificationPtrOutput) ToTimeToLiveSpecificationPtrOutputWithContext(ctx context.Context) TimeToLiveSpecificationPtrOutput {
	return o
}

func (o TimeToLiveSpecificationPtrOutput) Elem() TimeToLiveSpecificationOutput {
	return o.ApplyT(func(v *TimeToLiveSpecification) TimeToLiveSpecification {
		if v != nil {
			return *v
		}
		var ret TimeToLiveSpecification
		return ret
	}).(TimeToLiveSpecificationOutput)
}

// The name of the TTL attribute used to store the expiration time for items in the table.   +  The “AttributeName“ property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
func (o TimeToLiveSpecificationPtrOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeToLiveSpecification) *string {
		if v == nil {
			return nil
		}
		return v.AttributeName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
func (o TimeToLiveSpecificationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TimeToLiveSpecification) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of TimeToLiveSpecification
type TimeToLiveSpecificationResponse struct {
	// The name of the TTL attribute used to store the expiration time for items in the table.   +  The ``AttributeName`` property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
	AttributeName *string `pulumi:"attributeName"`
	// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
	Enabled *bool `pulumi:"enabled"`
}

// Definition of TimeToLiveSpecification
type TimeToLiveSpecificationResponseOutput struct{ *pulumi.OutputState }

func (TimeToLiveSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeToLiveSpecificationResponse)(nil)).Elem()
}

func (o TimeToLiveSpecificationResponseOutput) ToTimeToLiveSpecificationResponseOutput() TimeToLiveSpecificationResponseOutput {
	return o
}

func (o TimeToLiveSpecificationResponseOutput) ToTimeToLiveSpecificationResponseOutputWithContext(ctx context.Context) TimeToLiveSpecificationResponseOutput {
	return o
}

// The name of the TTL attribute used to store the expiration time for items in the table.   +  The “AttributeName“ property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
func (o TimeToLiveSpecificationResponseOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeToLiveSpecificationResponse) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
func (o TimeToLiveSpecificationResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TimeToLiveSpecificationResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type TimeToLiveSpecificationResponsePtrOutput struct{ *pulumi.OutputState }

func (TimeToLiveSpecificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeToLiveSpecificationResponse)(nil)).Elem()
}

func (o TimeToLiveSpecificationResponsePtrOutput) ToTimeToLiveSpecificationResponsePtrOutput() TimeToLiveSpecificationResponsePtrOutput {
	return o
}

func (o TimeToLiveSpecificationResponsePtrOutput) ToTimeToLiveSpecificationResponsePtrOutputWithContext(ctx context.Context) TimeToLiveSpecificationResponsePtrOutput {
	return o
}

func (o TimeToLiveSpecificationResponsePtrOutput) Elem() TimeToLiveSpecificationResponseOutput {
	return o.ApplyT(func(v *TimeToLiveSpecificationResponse) TimeToLiveSpecificationResponse {
		if v != nil {
			return *v
		}
		var ret TimeToLiveSpecificationResponse
		return ret
	}).(TimeToLiveSpecificationResponseOutput)
}

// The name of the TTL attribute used to store the expiration time for items in the table.   +  The “AttributeName“ property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
func (o TimeToLiveSpecificationResponsePtrOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeToLiveSpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AttributeName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
func (o TimeToLiveSpecificationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TimeToLiveSpecificationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Definition of TimeoutConfiguration
type TimeoutConfiguration struct {
	// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``. The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1 hour.
	IdleTimeoutSeconds *int `pulumi:"idleTimeoutSeconds"`
	// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``. Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
	PerRequestTimeoutSeconds *int `pulumi:"perRequestTimeoutSeconds"`
}

// TimeoutConfigurationInput is an input type that accepts TimeoutConfigurationArgs and TimeoutConfigurationOutput values.
// You can construct a concrete instance of `TimeoutConfigurationInput` via:
//
//	TimeoutConfigurationArgs{...}
type TimeoutConfigurationInput interface {
	pulumi.Input

	ToTimeoutConfigurationOutput() TimeoutConfigurationOutput
	ToTimeoutConfigurationOutputWithContext(context.Context) TimeoutConfigurationOutput
}

// Definition of TimeoutConfiguration
type TimeoutConfigurationArgs struct {
	// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``. The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1 hour.
	IdleTimeoutSeconds pulumi.IntPtrInput `pulumi:"idleTimeoutSeconds"`
	// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``. Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
	PerRequestTimeoutSeconds pulumi.IntPtrInput `pulumi:"perRequestTimeoutSeconds"`
}

func (TimeoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeoutConfiguration)(nil)).Elem()
}

func (i TimeoutConfigurationArgs) ToTimeoutConfigurationOutput() TimeoutConfigurationOutput {
	return i.ToTimeoutConfigurationOutputWithContext(context.Background())
}

func (i TimeoutConfigurationArgs) ToTimeoutConfigurationOutputWithContext(ctx context.Context) TimeoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutConfigurationOutput)
}

func (i TimeoutConfigurationArgs) ToTimeoutConfigurationPtrOutput() TimeoutConfigurationPtrOutput {
	return i.ToTimeoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TimeoutConfigurationArgs) ToTimeoutConfigurationPtrOutputWithContext(ctx context.Context) TimeoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutConfigurationOutput).ToTimeoutConfigurationPtrOutputWithContext(ctx)
}

// TimeoutConfigurationPtrInput is an input type that accepts TimeoutConfigurationArgs, TimeoutConfigurationPtr and TimeoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TimeoutConfigurationPtrInput` via:
//
//	        TimeoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TimeoutConfigurationPtrInput interface {
	pulumi.Input

	ToTimeoutConfigurationPtrOutput() TimeoutConfigurationPtrOutput
	ToTimeoutConfigurationPtrOutputWithContext(context.Context) TimeoutConfigurationPtrOutput
}

type timeoutConfigurationPtrType TimeoutConfigurationArgs

func TimeoutConfigurationPtr(v *TimeoutConfigurationArgs) TimeoutConfigurationPtrInput {
	return (*timeoutConfigurationPtrType)(v)
}

func (*timeoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeoutConfiguration)(nil)).Elem()
}

func (i *timeoutConfigurationPtrType) ToTimeoutConfigurationPtrOutput() TimeoutConfigurationPtrOutput {
	return i.ToTimeoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *timeoutConfigurationPtrType) ToTimeoutConfigurationPtrOutputWithContext(ctx context.Context) TimeoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutConfigurationPtrOutput)
}

// Definition of TimeoutConfiguration
type TimeoutConfigurationOutput struct{ *pulumi.OutputState }

func (TimeoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeoutConfiguration)(nil)).Elem()
}

func (o TimeoutConfigurationOutput) ToTimeoutConfigurationOutput() TimeoutConfigurationOutput {
	return o
}

func (o TimeoutConfigurationOutput) ToTimeoutConfigurationOutputWithContext(ctx context.Context) TimeoutConfigurationOutput {
	return o
}

func (o TimeoutConfigurationOutput) ToTimeoutConfigurationPtrOutput() TimeoutConfigurationPtrOutput {
	return o.ToTimeoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TimeoutConfigurationOutput) ToTimeoutConfigurationPtrOutputWithContext(ctx context.Context) TimeoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeoutConfiguration) *TimeoutConfiguration {
		return &v
	}).(TimeoutConfigurationPtrOutput)
}

// The amount of time in seconds a connection will stay active while idle. A value of “0“ can be set to disable “idleTimeout“. The “idleTimeout“ default for “HTTP“/“HTTP2“/“GRPC“ is 5 minutes. The “idleTimeout“ default for “TCP“ is 1 hour.
func (o TimeoutConfigurationOutput) IdleTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeoutConfiguration) *int { return v.IdleTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The amount of time waiting for the upstream to respond with a complete response per request. A value of “0“ can be set to disable “perRequestTimeout“. “perRequestTimeout“ can only be set if Service Connect “appProtocol“ isn't “TCP“. Only “idleTimeout“ is allowed for “TCP“ “appProtocol“.
func (o TimeoutConfigurationOutput) PerRequestTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeoutConfiguration) *int { return v.PerRequestTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type TimeoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TimeoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeoutConfiguration)(nil)).Elem()
}

func (o TimeoutConfigurationPtrOutput) ToTimeoutConfigurationPtrOutput() TimeoutConfigurationPtrOutput {
	return o
}

func (o TimeoutConfigurationPtrOutput) ToTimeoutConfigurationPtrOutputWithContext(ctx context.Context) TimeoutConfigurationPtrOutput {
	return o
}

func (o TimeoutConfigurationPtrOutput) Elem() TimeoutConfigurationOutput {
	return o.ApplyT(func(v *TimeoutConfiguration) TimeoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TimeoutConfiguration
		return ret
	}).(TimeoutConfigurationOutput)
}

// The amount of time in seconds a connection will stay active while idle. A value of “0“ can be set to disable “idleTimeout“. The “idleTimeout“ default for “HTTP“/“HTTP2“/“GRPC“ is 5 minutes. The “idleTimeout“ default for “TCP“ is 1 hour.
func (o TimeoutConfigurationPtrOutput) IdleTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeoutConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The amount of time waiting for the upstream to respond with a complete response per request. A value of “0“ can be set to disable “perRequestTimeout“. “perRequestTimeout“ can only be set if Service Connect “appProtocol“ isn't “TCP“. Only “idleTimeout“ is allowed for “TCP“ “appProtocol“.
func (o TimeoutConfigurationPtrOutput) PerRequestTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeoutConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.PerRequestTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Definition of TimeoutConfiguration
type TimeoutConfigurationResponse struct {
	// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``. The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1 hour.
	IdleTimeoutSeconds *int `pulumi:"idleTimeoutSeconds"`
	// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``. Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
	PerRequestTimeoutSeconds *int `pulumi:"perRequestTimeoutSeconds"`
}

// Definition of TimeoutConfiguration
type TimeoutConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TimeoutConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeoutConfigurationResponse)(nil)).Elem()
}

func (o TimeoutConfigurationResponseOutput) ToTimeoutConfigurationResponseOutput() TimeoutConfigurationResponseOutput {
	return o
}

func (o TimeoutConfigurationResponseOutput) ToTimeoutConfigurationResponseOutputWithContext(ctx context.Context) TimeoutConfigurationResponseOutput {
	return o
}

// The amount of time in seconds a connection will stay active while idle. A value of “0“ can be set to disable “idleTimeout“. The “idleTimeout“ default for “HTTP“/“HTTP2“/“GRPC“ is 5 minutes. The “idleTimeout“ default for “TCP“ is 1 hour.
func (o TimeoutConfigurationResponseOutput) IdleTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeoutConfigurationResponse) *int { return v.IdleTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The amount of time waiting for the upstream to respond with a complete response per request. A value of “0“ can be set to disable “perRequestTimeout“. “perRequestTimeout“ can only be set if Service Connect “appProtocol“ isn't “TCP“. Only “idleTimeout“ is allowed for “TCP“ “appProtocol“.
func (o TimeoutConfigurationResponseOutput) PerRequestTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeoutConfigurationResponse) *int { return v.PerRequestTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type TimeoutConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (TimeoutConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeoutConfigurationResponse)(nil)).Elem()
}

func (o TimeoutConfigurationResponsePtrOutput) ToTimeoutConfigurationResponsePtrOutput() TimeoutConfigurationResponsePtrOutput {
	return o
}

func (o TimeoutConfigurationResponsePtrOutput) ToTimeoutConfigurationResponsePtrOutputWithContext(ctx context.Context) TimeoutConfigurationResponsePtrOutput {
	return o
}

func (o TimeoutConfigurationResponsePtrOutput) Elem() TimeoutConfigurationResponseOutput {
	return o.ApplyT(func(v *TimeoutConfigurationResponse) TimeoutConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret TimeoutConfigurationResponse
		return ret
	}).(TimeoutConfigurationResponseOutput)
}

// The amount of time in seconds a connection will stay active while idle. A value of “0“ can be set to disable “idleTimeout“. The “idleTimeout“ default for “HTTP“/“HTTP2“/“GRPC“ is 5 minutes. The “idleTimeout“ default for “TCP“ is 1 hour.
func (o TimeoutConfigurationResponsePtrOutput) IdleTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeoutConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The amount of time waiting for the upstream to respond with a complete response per request. A value of “0“ can be set to disable “perRequestTimeout“. “perRequestTimeout“ can only be set if Service Connect “appProtocol“ isn't “TCP“. Only “idleTimeout“ is allowed for “TCP“ “appProtocol“.
func (o TimeoutConfigurationResponsePtrOutput) PerRequestTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeoutConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.PerRequestTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Definition of Tmpfs
type Tmpfs struct {
	// The absolute file path where the tmpfs volume is to be mounted.
	ContainerPath *string `pulumi:"containerPath"`
	// The list of tmpfs volume mount options.
	MountOptions []string `pulumi:"mountOptions"`
	// The maximum size (in MiB) of the tmpfs volume.
	Size *int `pulumi:"size"`
}

// TmpfsInput is an input type that accepts TmpfsArgs and TmpfsOutput values.
// You can construct a concrete instance of `TmpfsInput` via:
//
//	TmpfsArgs{...}
type TmpfsInput interface {
	pulumi.Input

	ToTmpfsOutput() TmpfsOutput
	ToTmpfsOutputWithContext(context.Context) TmpfsOutput
}

// Definition of Tmpfs
type TmpfsArgs struct {
	// The absolute file path where the tmpfs volume is to be mounted.
	ContainerPath pulumi.StringPtrInput `pulumi:"containerPath"`
	// The list of tmpfs volume mount options.
	MountOptions pulumi.StringArrayInput `pulumi:"mountOptions"`
	// The maximum size (in MiB) of the tmpfs volume.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (TmpfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Tmpfs)(nil)).Elem()
}

func (i TmpfsArgs) ToTmpfsOutput() TmpfsOutput {
	return i.ToTmpfsOutputWithContext(context.Background())
}

func (i TmpfsArgs) ToTmpfsOutputWithContext(ctx context.Context) TmpfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpfsOutput)
}

// TmpfsArrayInput is an input type that accepts TmpfsArray and TmpfsArrayOutput values.
// You can construct a concrete instance of `TmpfsArrayInput` via:
//
//	TmpfsArray{ TmpfsArgs{...} }
type TmpfsArrayInput interface {
	pulumi.Input

	ToTmpfsArrayOutput() TmpfsArrayOutput
	ToTmpfsArrayOutputWithContext(context.Context) TmpfsArrayOutput
}

type TmpfsArray []TmpfsInput

func (TmpfsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tmpfs)(nil)).Elem()
}

func (i TmpfsArray) ToTmpfsArrayOutput() TmpfsArrayOutput {
	return i.ToTmpfsArrayOutputWithContext(context.Background())
}

func (i TmpfsArray) ToTmpfsArrayOutputWithContext(ctx context.Context) TmpfsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpfsArrayOutput)
}

// Definition of Tmpfs
type TmpfsOutput struct{ *pulumi.OutputState }

func (TmpfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tmpfs)(nil)).Elem()
}

func (o TmpfsOutput) ToTmpfsOutput() TmpfsOutput {
	return o
}

func (o TmpfsOutput) ToTmpfsOutputWithContext(ctx context.Context) TmpfsOutput {
	return o
}

// The absolute file path where the tmpfs volume is to be mounted.
func (o TmpfsOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tmpfs) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

// The list of tmpfs volume mount options.
func (o TmpfsOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Tmpfs) []string { return v.MountOptions }).(pulumi.StringArrayOutput)
}

// The maximum size (in MiB) of the tmpfs volume.
func (o TmpfsOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Tmpfs) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type TmpfsArrayOutput struct{ *pulumi.OutputState }

func (TmpfsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tmpfs)(nil)).Elem()
}

func (o TmpfsArrayOutput) ToTmpfsArrayOutput() TmpfsArrayOutput {
	return o
}

func (o TmpfsArrayOutput) ToTmpfsArrayOutputWithContext(ctx context.Context) TmpfsArrayOutput {
	return o
}

func (o TmpfsArrayOutput) Index(i pulumi.IntInput) TmpfsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tmpfs {
		return vs[0].([]Tmpfs)[vs[1].(int)]
	}).(TmpfsOutput)
}

// Definition of Tmpfs
type TmpfsResponse struct {
	// The absolute file path where the tmpfs volume is to be mounted.
	ContainerPath *string `pulumi:"containerPath"`
	// The list of tmpfs volume mount options.
	MountOptions []string `pulumi:"mountOptions"`
	// The maximum size (in MiB) of the tmpfs volume.
	Size *int `pulumi:"size"`
}

// Definition of Tmpfs
type TmpfsResponseOutput struct{ *pulumi.OutputState }

func (TmpfsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TmpfsResponse)(nil)).Elem()
}

func (o TmpfsResponseOutput) ToTmpfsResponseOutput() TmpfsResponseOutput {
	return o
}

func (o TmpfsResponseOutput) ToTmpfsResponseOutputWithContext(ctx context.Context) TmpfsResponseOutput {
	return o
}

// The absolute file path where the tmpfs volume is to be mounted.
func (o TmpfsResponseOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TmpfsResponse) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

// The list of tmpfs volume mount options.
func (o TmpfsResponseOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TmpfsResponse) []string { return v.MountOptions }).(pulumi.StringArrayOutput)
}

// The maximum size (in MiB) of the tmpfs volume.
func (o TmpfsResponseOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TmpfsResponse) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type TmpfsResponseArrayOutput struct{ *pulumi.OutputState }

func (TmpfsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TmpfsResponse)(nil)).Elem()
}

func (o TmpfsResponseArrayOutput) ToTmpfsResponseArrayOutput() TmpfsResponseArrayOutput {
	return o
}

func (o TmpfsResponseArrayOutput) ToTmpfsResponseArrayOutputWithContext(ctx context.Context) TmpfsResponseArrayOutput {
	return o
}

func (o TmpfsResponseArrayOutput) Index(i pulumi.IntInput) TmpfsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TmpfsResponse {
		return vs[0].([]TmpfsResponse)[vs[1].(int)]
	}).(TmpfsResponseOutput)
}

// Definition of TopicConfiguration
type TopicConfiguration struct {
	// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event *string `pulumi:"event"`
	// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter *NotificationFilter `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
	Topic *string `pulumi:"topic"`
}

// TopicConfigurationInput is an input type that accepts TopicConfigurationArgs and TopicConfigurationOutput values.
// You can construct a concrete instance of `TopicConfigurationInput` via:
//
//	TopicConfigurationArgs{...}
type TopicConfigurationInput interface {
	pulumi.Input

	ToTopicConfigurationOutput() TopicConfigurationOutput
	ToTopicConfigurationOutputWithContext(context.Context) TopicConfigurationOutput
}

// Definition of TopicConfiguration
type TopicConfigurationArgs struct {
	// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event pulumi.StringPtrInput `pulumi:"event"`
	// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter NotificationFilterPtrInput `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
}

func (TopicConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicConfiguration)(nil)).Elem()
}

func (i TopicConfigurationArgs) ToTopicConfigurationOutput() TopicConfigurationOutput {
	return i.ToTopicConfigurationOutputWithContext(context.Background())
}

func (i TopicConfigurationArgs) ToTopicConfigurationOutputWithContext(ctx context.Context) TopicConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicConfigurationOutput)
}

// TopicConfigurationArrayInput is an input type that accepts TopicConfigurationArray and TopicConfigurationArrayOutput values.
// You can construct a concrete instance of `TopicConfigurationArrayInput` via:
//
//	TopicConfigurationArray{ TopicConfigurationArgs{...} }
type TopicConfigurationArrayInput interface {
	pulumi.Input

	ToTopicConfigurationArrayOutput() TopicConfigurationArrayOutput
	ToTopicConfigurationArrayOutputWithContext(context.Context) TopicConfigurationArrayOutput
}

type TopicConfigurationArray []TopicConfigurationInput

func (TopicConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicConfiguration)(nil)).Elem()
}

func (i TopicConfigurationArray) ToTopicConfigurationArrayOutput() TopicConfigurationArrayOutput {
	return i.ToTopicConfigurationArrayOutputWithContext(context.Background())
}

func (i TopicConfigurationArray) ToTopicConfigurationArrayOutputWithContext(ctx context.Context) TopicConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicConfigurationArrayOutput)
}

// Definition of TopicConfiguration
type TopicConfigurationOutput struct{ *pulumi.OutputState }

func (TopicConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicConfiguration)(nil)).Elem()
}

func (o TopicConfigurationOutput) ToTopicConfigurationOutput() TopicConfigurationOutput {
	return o
}

func (o TopicConfigurationOutput) ToTopicConfigurationOutputWithContext(ctx context.Context) TopicConfigurationOutput {
	return o
}

// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o TopicConfigurationOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicConfiguration) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a “.jpg“ extension are added to the bucket. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
func (o TopicConfigurationOutput) Filter() NotificationFilterPtrOutput {
	return o.ApplyT(func(v TopicConfiguration) *NotificationFilter { return v.Filter }).(NotificationFilterPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
func (o TopicConfigurationOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicConfiguration) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

type TopicConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TopicConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicConfiguration)(nil)).Elem()
}

func (o TopicConfigurationArrayOutput) ToTopicConfigurationArrayOutput() TopicConfigurationArrayOutput {
	return o
}

func (o TopicConfigurationArrayOutput) ToTopicConfigurationArrayOutputWithContext(ctx context.Context) TopicConfigurationArrayOutput {
	return o
}

func (o TopicConfigurationArrayOutput) Index(i pulumi.IntInput) TopicConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicConfiguration {
		return vs[0].([]TopicConfiguration)[vs[1].(int)]
	}).(TopicConfigurationOutput)
}

// Definition of TopicConfiguration
type TopicConfigurationResponse struct {
	// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event *string `pulumi:"event"`
	// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter *NotificationFilterResponse `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
	Topic *string `pulumi:"topic"`
}

// Definition of TopicConfiguration
type TopicConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TopicConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicConfigurationResponse)(nil)).Elem()
}

func (o TopicConfigurationResponseOutput) ToTopicConfigurationResponseOutput() TopicConfigurationResponseOutput {
	return o
}

func (o TopicConfigurationResponseOutput) ToTopicConfigurationResponseOutputWithContext(ctx context.Context) TopicConfigurationResponseOutput {
	return o
}

// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o TopicConfigurationResponseOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicConfigurationResponse) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a “.jpg“ extension are added to the bucket. Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
func (o TopicConfigurationResponseOutput) Filter() NotificationFilterResponsePtrOutput {
	return o.ApplyT(func(v TopicConfigurationResponse) *NotificationFilterResponse { return v.Filter }).(NotificationFilterResponsePtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
func (o TopicConfigurationResponseOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicConfigurationResponse) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

type TopicConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (TopicConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicConfigurationResponse)(nil)).Elem()
}

func (o TopicConfigurationResponseArrayOutput) ToTopicConfigurationResponseArrayOutput() TopicConfigurationResponseArrayOutput {
	return o
}

func (o TopicConfigurationResponseArrayOutput) ToTopicConfigurationResponseArrayOutputWithContext(ctx context.Context) TopicConfigurationResponseArrayOutput {
	return o
}

func (o TopicConfigurationResponseArrayOutput) Index(i pulumi.IntInput) TopicConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicConfigurationResponse {
		return vs[0].([]TopicConfigurationResponse)[vs[1].(int)]
	}).(TopicConfigurationResponseOutput)
}

// Definition of TotalLocalStorageGBRequest
type TotalLocalStorageGBRequest struct {
	// The storage maximum in GB.
	Max *int `pulumi:"max"`
	// The storage minimum in GB.
	Min *int `pulumi:"min"`
}

// TotalLocalStorageGBRequestInput is an input type that accepts TotalLocalStorageGBRequestArgs and TotalLocalStorageGBRequestOutput values.
// You can construct a concrete instance of `TotalLocalStorageGBRequestInput` via:
//
//	TotalLocalStorageGBRequestArgs{...}
type TotalLocalStorageGBRequestInput interface {
	pulumi.Input

	ToTotalLocalStorageGBRequestOutput() TotalLocalStorageGBRequestOutput
	ToTotalLocalStorageGBRequestOutputWithContext(context.Context) TotalLocalStorageGBRequestOutput
}

// Definition of TotalLocalStorageGBRequest
type TotalLocalStorageGBRequestArgs struct {
	// The storage maximum in GB.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The storage minimum in GB.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (TotalLocalStorageGBRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TotalLocalStorageGBRequest)(nil)).Elem()
}

func (i TotalLocalStorageGBRequestArgs) ToTotalLocalStorageGBRequestOutput() TotalLocalStorageGBRequestOutput {
	return i.ToTotalLocalStorageGBRequestOutputWithContext(context.Background())
}

func (i TotalLocalStorageGBRequestArgs) ToTotalLocalStorageGBRequestOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TotalLocalStorageGBRequestOutput)
}

func (i TotalLocalStorageGBRequestArgs) ToTotalLocalStorageGBRequestPtrOutput() TotalLocalStorageGBRequestPtrOutput {
	return i.ToTotalLocalStorageGBRequestPtrOutputWithContext(context.Background())
}

func (i TotalLocalStorageGBRequestArgs) ToTotalLocalStorageGBRequestPtrOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TotalLocalStorageGBRequestOutput).ToTotalLocalStorageGBRequestPtrOutputWithContext(ctx)
}

// TotalLocalStorageGBRequestPtrInput is an input type that accepts TotalLocalStorageGBRequestArgs, TotalLocalStorageGBRequestPtr and TotalLocalStorageGBRequestPtrOutput values.
// You can construct a concrete instance of `TotalLocalStorageGBRequestPtrInput` via:
//
//	        TotalLocalStorageGBRequestArgs{...}
//
//	or:
//
//	        nil
type TotalLocalStorageGBRequestPtrInput interface {
	pulumi.Input

	ToTotalLocalStorageGBRequestPtrOutput() TotalLocalStorageGBRequestPtrOutput
	ToTotalLocalStorageGBRequestPtrOutputWithContext(context.Context) TotalLocalStorageGBRequestPtrOutput
}

type totalLocalStorageGBRequestPtrType TotalLocalStorageGBRequestArgs

func TotalLocalStorageGBRequestPtr(v *TotalLocalStorageGBRequestArgs) TotalLocalStorageGBRequestPtrInput {
	return (*totalLocalStorageGBRequestPtrType)(v)
}

func (*totalLocalStorageGBRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TotalLocalStorageGBRequest)(nil)).Elem()
}

func (i *totalLocalStorageGBRequestPtrType) ToTotalLocalStorageGBRequestPtrOutput() TotalLocalStorageGBRequestPtrOutput {
	return i.ToTotalLocalStorageGBRequestPtrOutputWithContext(context.Background())
}

func (i *totalLocalStorageGBRequestPtrType) ToTotalLocalStorageGBRequestPtrOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TotalLocalStorageGBRequestPtrOutput)
}

// Definition of TotalLocalStorageGBRequest
type TotalLocalStorageGBRequestOutput struct{ *pulumi.OutputState }

func (TotalLocalStorageGBRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TotalLocalStorageGBRequest)(nil)).Elem()
}

func (o TotalLocalStorageGBRequestOutput) ToTotalLocalStorageGBRequestOutput() TotalLocalStorageGBRequestOutput {
	return o
}

func (o TotalLocalStorageGBRequestOutput) ToTotalLocalStorageGBRequestOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestOutput {
	return o
}

func (o TotalLocalStorageGBRequestOutput) ToTotalLocalStorageGBRequestPtrOutput() TotalLocalStorageGBRequestPtrOutput {
	return o.ToTotalLocalStorageGBRequestPtrOutputWithContext(context.Background())
}

func (o TotalLocalStorageGBRequestOutput) ToTotalLocalStorageGBRequestPtrOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TotalLocalStorageGBRequest) *TotalLocalStorageGBRequest {
		return &v
	}).(TotalLocalStorageGBRequestPtrOutput)
}

// The storage maximum in GB.
func (o TotalLocalStorageGBRequestOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TotalLocalStorageGBRequest) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The storage minimum in GB.
func (o TotalLocalStorageGBRequestOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TotalLocalStorageGBRequest) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type TotalLocalStorageGBRequestPtrOutput struct{ *pulumi.OutputState }

func (TotalLocalStorageGBRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TotalLocalStorageGBRequest)(nil)).Elem()
}

func (o TotalLocalStorageGBRequestPtrOutput) ToTotalLocalStorageGBRequestPtrOutput() TotalLocalStorageGBRequestPtrOutput {
	return o
}

func (o TotalLocalStorageGBRequestPtrOutput) ToTotalLocalStorageGBRequestPtrOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestPtrOutput {
	return o
}

func (o TotalLocalStorageGBRequestPtrOutput) Elem() TotalLocalStorageGBRequestOutput {
	return o.ApplyT(func(v *TotalLocalStorageGBRequest) TotalLocalStorageGBRequest {
		if v != nil {
			return *v
		}
		var ret TotalLocalStorageGBRequest
		return ret
	}).(TotalLocalStorageGBRequestOutput)
}

// The storage maximum in GB.
func (o TotalLocalStorageGBRequestPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TotalLocalStorageGBRequest) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The storage minimum in GB.
func (o TotalLocalStorageGBRequestPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TotalLocalStorageGBRequest) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of TotalLocalStorageGBRequest
type TotalLocalStorageGBRequestResponse struct {
	// The storage maximum in GB.
	Max *int `pulumi:"max"`
	// The storage minimum in GB.
	Min *int `pulumi:"min"`
}

// Definition of TotalLocalStorageGBRequest
type TotalLocalStorageGBRequestResponseOutput struct{ *pulumi.OutputState }

func (TotalLocalStorageGBRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TotalLocalStorageGBRequestResponse)(nil)).Elem()
}

func (o TotalLocalStorageGBRequestResponseOutput) ToTotalLocalStorageGBRequestResponseOutput() TotalLocalStorageGBRequestResponseOutput {
	return o
}

func (o TotalLocalStorageGBRequestResponseOutput) ToTotalLocalStorageGBRequestResponseOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestResponseOutput {
	return o
}

// The storage maximum in GB.
func (o TotalLocalStorageGBRequestResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TotalLocalStorageGBRequestResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The storage minimum in GB.
func (o TotalLocalStorageGBRequestResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TotalLocalStorageGBRequestResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type TotalLocalStorageGBRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (TotalLocalStorageGBRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TotalLocalStorageGBRequestResponse)(nil)).Elem()
}

func (o TotalLocalStorageGBRequestResponsePtrOutput) ToTotalLocalStorageGBRequestResponsePtrOutput() TotalLocalStorageGBRequestResponsePtrOutput {
	return o
}

func (o TotalLocalStorageGBRequestResponsePtrOutput) ToTotalLocalStorageGBRequestResponsePtrOutputWithContext(ctx context.Context) TotalLocalStorageGBRequestResponsePtrOutput {
	return o
}

func (o TotalLocalStorageGBRequestResponsePtrOutput) Elem() TotalLocalStorageGBRequestResponseOutput {
	return o.ApplyT(func(v *TotalLocalStorageGBRequestResponse) TotalLocalStorageGBRequestResponse {
		if v != nil {
			return *v
		}
		var ret TotalLocalStorageGBRequestResponse
		return ret
	}).(TotalLocalStorageGBRequestResponseOutput)
}

// The storage maximum in GB.
func (o TotalLocalStorageGBRequestResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TotalLocalStorageGBRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The storage minimum in GB.
func (o TotalLocalStorageGBRequestResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TotalLocalStorageGBRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of TpmSupportValuesEnumValue
type TpmSupportValuesEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// TpmSupportValuesEnumValueInput is an input type that accepts TpmSupportValuesEnumValueArgs and TpmSupportValuesEnumValueOutput values.
// You can construct a concrete instance of `TpmSupportValuesEnumValueInput` via:
//
//	TpmSupportValuesEnumValueArgs{...}
type TpmSupportValuesEnumValueInput interface {
	pulumi.Input

	ToTpmSupportValuesEnumValueOutput() TpmSupportValuesEnumValueOutput
	ToTpmSupportValuesEnumValueOutputWithContext(context.Context) TpmSupportValuesEnumValueOutput
}

// Definition of TpmSupportValuesEnumValue
type TpmSupportValuesEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TpmSupportValuesEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TpmSupportValuesEnumValue)(nil)).Elem()
}

func (i TpmSupportValuesEnumValueArgs) ToTpmSupportValuesEnumValueOutput() TpmSupportValuesEnumValueOutput {
	return i.ToTpmSupportValuesEnumValueOutputWithContext(context.Background())
}

func (i TpmSupportValuesEnumValueArgs) ToTpmSupportValuesEnumValueOutputWithContext(ctx context.Context) TpmSupportValuesEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TpmSupportValuesEnumValueOutput)
}

func (i TpmSupportValuesEnumValueArgs) ToTpmSupportValuesEnumValuePtrOutput() TpmSupportValuesEnumValuePtrOutput {
	return i.ToTpmSupportValuesEnumValuePtrOutputWithContext(context.Background())
}

func (i TpmSupportValuesEnumValueArgs) ToTpmSupportValuesEnumValuePtrOutputWithContext(ctx context.Context) TpmSupportValuesEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TpmSupportValuesEnumValueOutput).ToTpmSupportValuesEnumValuePtrOutputWithContext(ctx)
}

// TpmSupportValuesEnumValuePtrInput is an input type that accepts TpmSupportValuesEnumValueArgs, TpmSupportValuesEnumValuePtr and TpmSupportValuesEnumValuePtrOutput values.
// You can construct a concrete instance of `TpmSupportValuesEnumValuePtrInput` via:
//
//	        TpmSupportValuesEnumValueArgs{...}
//
//	or:
//
//	        nil
type TpmSupportValuesEnumValuePtrInput interface {
	pulumi.Input

	ToTpmSupportValuesEnumValuePtrOutput() TpmSupportValuesEnumValuePtrOutput
	ToTpmSupportValuesEnumValuePtrOutputWithContext(context.Context) TpmSupportValuesEnumValuePtrOutput
}

type tpmSupportValuesEnumValuePtrType TpmSupportValuesEnumValueArgs

func TpmSupportValuesEnumValuePtr(v *TpmSupportValuesEnumValueArgs) TpmSupportValuesEnumValuePtrInput {
	return (*tpmSupportValuesEnumValuePtrType)(v)
}

func (*tpmSupportValuesEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TpmSupportValuesEnumValue)(nil)).Elem()
}

func (i *tpmSupportValuesEnumValuePtrType) ToTpmSupportValuesEnumValuePtrOutput() TpmSupportValuesEnumValuePtrOutput {
	return i.ToTpmSupportValuesEnumValuePtrOutputWithContext(context.Background())
}

func (i *tpmSupportValuesEnumValuePtrType) ToTpmSupportValuesEnumValuePtrOutputWithContext(ctx context.Context) TpmSupportValuesEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TpmSupportValuesEnumValuePtrOutput)
}

// Definition of TpmSupportValuesEnumValue
type TpmSupportValuesEnumValueOutput struct{ *pulumi.OutputState }

func (TpmSupportValuesEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TpmSupportValuesEnumValue)(nil)).Elem()
}

func (o TpmSupportValuesEnumValueOutput) ToTpmSupportValuesEnumValueOutput() TpmSupportValuesEnumValueOutput {
	return o
}

func (o TpmSupportValuesEnumValueOutput) ToTpmSupportValuesEnumValueOutputWithContext(ctx context.Context) TpmSupportValuesEnumValueOutput {
	return o
}

func (o TpmSupportValuesEnumValueOutput) ToTpmSupportValuesEnumValuePtrOutput() TpmSupportValuesEnumValuePtrOutput {
	return o.ToTpmSupportValuesEnumValuePtrOutputWithContext(context.Background())
}

func (o TpmSupportValuesEnumValueOutput) ToTpmSupportValuesEnumValuePtrOutputWithContext(ctx context.Context) TpmSupportValuesEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TpmSupportValuesEnumValue) *TpmSupportValuesEnumValue {
		return &v
	}).(TpmSupportValuesEnumValuePtrOutput)
}

// Property value
func (o TpmSupportValuesEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TpmSupportValuesEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TpmSupportValuesEnumValuePtrOutput struct{ *pulumi.OutputState }

func (TpmSupportValuesEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TpmSupportValuesEnumValue)(nil)).Elem()
}

func (o TpmSupportValuesEnumValuePtrOutput) ToTpmSupportValuesEnumValuePtrOutput() TpmSupportValuesEnumValuePtrOutput {
	return o
}

func (o TpmSupportValuesEnumValuePtrOutput) ToTpmSupportValuesEnumValuePtrOutputWithContext(ctx context.Context) TpmSupportValuesEnumValuePtrOutput {
	return o
}

func (o TpmSupportValuesEnumValuePtrOutput) Elem() TpmSupportValuesEnumValueOutput {
	return o.ApplyT(func(v *TpmSupportValuesEnumValue) TpmSupportValuesEnumValue {
		if v != nil {
			return *v
		}
		var ret TpmSupportValuesEnumValue
		return ret
	}).(TpmSupportValuesEnumValueOutput)
}

// Property value
func (o TpmSupportValuesEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TpmSupportValuesEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TpmSupportValuesEnumValue
type TpmSupportValuesEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TpmSupportValuesEnumValue
type TpmSupportValuesEnumValueResponseOutput struct{ *pulumi.OutputState }

func (TpmSupportValuesEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TpmSupportValuesEnumValueResponse)(nil)).Elem()
}

func (o TpmSupportValuesEnumValueResponseOutput) ToTpmSupportValuesEnumValueResponseOutput() TpmSupportValuesEnumValueResponseOutput {
	return o
}

func (o TpmSupportValuesEnumValueResponseOutput) ToTpmSupportValuesEnumValueResponseOutputWithContext(ctx context.Context) TpmSupportValuesEnumValueResponseOutput {
	return o
}

// Property value
func (o TpmSupportValuesEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TpmSupportValuesEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TpmSupportValuesEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (TpmSupportValuesEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TpmSupportValuesEnumValueResponse)(nil)).Elem()
}

func (o TpmSupportValuesEnumValueResponsePtrOutput) ToTpmSupportValuesEnumValueResponsePtrOutput() TpmSupportValuesEnumValueResponsePtrOutput {
	return o
}

func (o TpmSupportValuesEnumValueResponsePtrOutput) ToTpmSupportValuesEnumValueResponsePtrOutputWithContext(ctx context.Context) TpmSupportValuesEnumValueResponsePtrOutput {
	return o
}

func (o TpmSupportValuesEnumValueResponsePtrOutput) Elem() TpmSupportValuesEnumValueResponseOutput {
	return o.ApplyT(func(v *TpmSupportValuesEnumValueResponse) TpmSupportValuesEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret TpmSupportValuesEnumValueResponse
		return ret
	}).(TpmSupportValuesEnumValueResponseOutput)
}

// Property value
func (o TpmSupportValuesEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TpmSupportValuesEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TracingConfig
type TracingConfig struct {
	// The tracing mode.
	Mode *string `pulumi:"mode"`
}

// TracingConfigInput is an input type that accepts TracingConfigArgs and TracingConfigOutput values.
// You can construct a concrete instance of `TracingConfigInput` via:
//
//	TracingConfigArgs{...}
type TracingConfigInput interface {
	pulumi.Input

	ToTracingConfigOutput() TracingConfigOutput
	ToTracingConfigOutputWithContext(context.Context) TracingConfigOutput
}

// Definition of TracingConfig
type TracingConfigArgs struct {
	// The tracing mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TracingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingConfig)(nil)).Elem()
}

func (i TracingConfigArgs) ToTracingConfigOutput() TracingConfigOutput {
	return i.ToTracingConfigOutputWithContext(context.Background())
}

func (i TracingConfigArgs) ToTracingConfigOutputWithContext(ctx context.Context) TracingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingConfigOutput)
}

func (i TracingConfigArgs) ToTracingConfigPtrOutput() TracingConfigPtrOutput {
	return i.ToTracingConfigPtrOutputWithContext(context.Background())
}

func (i TracingConfigArgs) ToTracingConfigPtrOutputWithContext(ctx context.Context) TracingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingConfigOutput).ToTracingConfigPtrOutputWithContext(ctx)
}

// TracingConfigPtrInput is an input type that accepts TracingConfigArgs, TracingConfigPtr and TracingConfigPtrOutput values.
// You can construct a concrete instance of `TracingConfigPtrInput` via:
//
//	        TracingConfigArgs{...}
//
//	or:
//
//	        nil
type TracingConfigPtrInput interface {
	pulumi.Input

	ToTracingConfigPtrOutput() TracingConfigPtrOutput
	ToTracingConfigPtrOutputWithContext(context.Context) TracingConfigPtrOutput
}

type tracingConfigPtrType TracingConfigArgs

func TracingConfigPtr(v *TracingConfigArgs) TracingConfigPtrInput {
	return (*tracingConfigPtrType)(v)
}

func (*tracingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingConfig)(nil)).Elem()
}

func (i *tracingConfigPtrType) ToTracingConfigPtrOutput() TracingConfigPtrOutput {
	return i.ToTracingConfigPtrOutputWithContext(context.Background())
}

func (i *tracingConfigPtrType) ToTracingConfigPtrOutputWithContext(ctx context.Context) TracingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingConfigPtrOutput)
}

// Definition of TracingConfig
type TracingConfigOutput struct{ *pulumi.OutputState }

func (TracingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingConfig)(nil)).Elem()
}

func (o TracingConfigOutput) ToTracingConfigOutput() TracingConfigOutput {
	return o
}

func (o TracingConfigOutput) ToTracingConfigOutputWithContext(ctx context.Context) TracingConfigOutput {
	return o
}

func (o TracingConfigOutput) ToTracingConfigPtrOutput() TracingConfigPtrOutput {
	return o.ToTracingConfigPtrOutputWithContext(context.Background())
}

func (o TracingConfigOutput) ToTracingConfigPtrOutputWithContext(ctx context.Context) TracingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TracingConfig) *TracingConfig {
		return &v
	}).(TracingConfigPtrOutput)
}

// The tracing mode.
func (o TracingConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TracingConfigPtrOutput struct{ *pulumi.OutputState }

func (TracingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingConfig)(nil)).Elem()
}

func (o TracingConfigPtrOutput) ToTracingConfigPtrOutput() TracingConfigPtrOutput {
	return o
}

func (o TracingConfigPtrOutput) ToTracingConfigPtrOutputWithContext(ctx context.Context) TracingConfigPtrOutput {
	return o
}

func (o TracingConfigPtrOutput) Elem() TracingConfigOutput {
	return o.ApplyT(func(v *TracingConfig) TracingConfig {
		if v != nil {
			return *v
		}
		var ret TracingConfig
		return ret
	}).(TracingConfigOutput)
}

// The tracing mode.
func (o TracingConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Definition of TracingConfig
type TracingConfigResponse struct {
	// The tracing mode.
	Mode *string `pulumi:"mode"`
}

// Definition of TracingConfig
type TracingConfigResponseOutput struct{ *pulumi.OutputState }

func (TracingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingConfigResponse)(nil)).Elem()
}

func (o TracingConfigResponseOutput) ToTracingConfigResponseOutput() TracingConfigResponseOutput {
	return o
}

func (o TracingConfigResponseOutput) ToTracingConfigResponseOutputWithContext(ctx context.Context) TracingConfigResponseOutput {
	return o
}

// The tracing mode.
func (o TracingConfigResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingConfigResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TracingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (TracingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingConfigResponse)(nil)).Elem()
}

func (o TracingConfigResponsePtrOutput) ToTracingConfigResponsePtrOutput() TracingConfigResponsePtrOutput {
	return o
}

func (o TracingConfigResponsePtrOutput) ToTracingConfigResponsePtrOutputWithContext(ctx context.Context) TracingConfigResponsePtrOutput {
	return o
}

func (o TracingConfigResponsePtrOutput) Elem() TracingConfigResponseOutput {
	return o.ApplyT(func(v *TracingConfigResponse) TracingConfigResponse {
		if v != nil {
			return *v
		}
		var ret TracingConfigResponse
		return ret
	}).(TracingConfigResponseOutput)
}

// The tracing mode.
func (o TracingConfigResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Definition of Transition
type Transition struct {
	// The storage class to which you want the object to transition.
	StorageClass *string `pulumi:"storageClass"`
	// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
	TransitionDate *string `pulumi:"transitionDate"`
	// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
	TransitionInDays *int `pulumi:"transitionInDays"`
}

// TransitionInput is an input type that accepts TransitionArgs and TransitionOutput values.
// You can construct a concrete instance of `TransitionInput` via:
//
//	TransitionArgs{...}
type TransitionInput interface {
	pulumi.Input

	ToTransitionOutput() TransitionOutput
	ToTransitionOutputWithContext(context.Context) TransitionOutput
}

// Definition of Transition
type TransitionArgs struct {
	// The storage class to which you want the object to transition.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
	TransitionDate pulumi.StringPtrInput `pulumi:"transitionDate"`
	// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
	TransitionInDays pulumi.IntPtrInput `pulumi:"transitionInDays"`
}

func (TransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Transition)(nil)).Elem()
}

func (i TransitionArgs) ToTransitionOutput() TransitionOutput {
	return i.ToTransitionOutputWithContext(context.Background())
}

func (i TransitionArgs) ToTransitionOutputWithContext(ctx context.Context) TransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitionOutput)
}

func (i TransitionArgs) ToTransitionPtrOutput() TransitionPtrOutput {
	return i.ToTransitionPtrOutputWithContext(context.Background())
}

func (i TransitionArgs) ToTransitionPtrOutputWithContext(ctx context.Context) TransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitionOutput).ToTransitionPtrOutputWithContext(ctx)
}

// TransitionPtrInput is an input type that accepts TransitionArgs, TransitionPtr and TransitionPtrOutput values.
// You can construct a concrete instance of `TransitionPtrInput` via:
//
//	        TransitionArgs{...}
//
//	or:
//
//	        nil
type TransitionPtrInput interface {
	pulumi.Input

	ToTransitionPtrOutput() TransitionPtrOutput
	ToTransitionPtrOutputWithContext(context.Context) TransitionPtrOutput
}

type transitionPtrType TransitionArgs

func TransitionPtr(v *TransitionArgs) TransitionPtrInput {
	return (*transitionPtrType)(v)
}

func (*transitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Transition)(nil)).Elem()
}

func (i *transitionPtrType) ToTransitionPtrOutput() TransitionPtrOutput {
	return i.ToTransitionPtrOutputWithContext(context.Background())
}

func (i *transitionPtrType) ToTransitionPtrOutputWithContext(ctx context.Context) TransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitionPtrOutput)
}

// TransitionArrayInput is an input type that accepts TransitionArray and TransitionArrayOutput values.
// You can construct a concrete instance of `TransitionArrayInput` via:
//
//	TransitionArray{ TransitionArgs{...} }
type TransitionArrayInput interface {
	pulumi.Input

	ToTransitionArrayOutput() TransitionArrayOutput
	ToTransitionArrayOutputWithContext(context.Context) TransitionArrayOutput
}

type TransitionArray []TransitionInput

func (TransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Transition)(nil)).Elem()
}

func (i TransitionArray) ToTransitionArrayOutput() TransitionArrayOutput {
	return i.ToTransitionArrayOutputWithContext(context.Background())
}

func (i TransitionArray) ToTransitionArrayOutputWithContext(ctx context.Context) TransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitionArrayOutput)
}

// Definition of Transition
type TransitionOutput struct{ *pulumi.OutputState }

func (TransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Transition)(nil)).Elem()
}

func (o TransitionOutput) ToTransitionOutput() TransitionOutput {
	return o
}

func (o TransitionOutput) ToTransitionOutputWithContext(ctx context.Context) TransitionOutput {
	return o
}

func (o TransitionOutput) ToTransitionPtrOutput() TransitionPtrOutput {
	return o.ToTransitionPtrOutputWithContext(context.Background())
}

func (o TransitionOutput) ToTransitionPtrOutputWithContext(ctx context.Context) TransitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Transition) *Transition {
		return &v
	}).(TransitionPtrOutput)
}

// The storage class to which you want the object to transition.
func (o TransitionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Transition) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
func (o TransitionOutput) TransitionDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Transition) *string { return v.TransitionDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
func (o TransitionOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Transition) *int { return v.TransitionInDays }).(pulumi.IntPtrOutput)
}

type TransitionPtrOutput struct{ *pulumi.OutputState }

func (TransitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Transition)(nil)).Elem()
}

func (o TransitionPtrOutput) ToTransitionPtrOutput() TransitionPtrOutput {
	return o
}

func (o TransitionPtrOutput) ToTransitionPtrOutputWithContext(ctx context.Context) TransitionPtrOutput {
	return o
}

func (o TransitionPtrOutput) Elem() TransitionOutput {
	return o.ApplyT(func(v *Transition) Transition {
		if v != nil {
			return *v
		}
		var ret Transition
		return ret
	}).(TransitionOutput)
}

// The storage class to which you want the object to transition.
func (o TransitionPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Transition) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
func (o TransitionPtrOutput) TransitionDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Transition) *string {
		if v == nil {
			return nil
		}
		return v.TransitionDate
	}).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
func (o TransitionPtrOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Transition) *int {
		if v == nil {
			return nil
		}
		return v.TransitionInDays
	}).(pulumi.IntPtrOutput)
}

type TransitionArrayOutput struct{ *pulumi.OutputState }

func (TransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Transition)(nil)).Elem()
}

func (o TransitionArrayOutput) ToTransitionArrayOutput() TransitionArrayOutput {
	return o
}

func (o TransitionArrayOutput) ToTransitionArrayOutputWithContext(ctx context.Context) TransitionArrayOutput {
	return o
}

func (o TransitionArrayOutput) Index(i pulumi.IntInput) TransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Transition {
		return vs[0].([]Transition)[vs[1].(int)]
	}).(TransitionOutput)
}

// Definition of Transition
type TransitionResponse struct {
	// The storage class to which you want the object to transition.
	StorageClass *string `pulumi:"storageClass"`
	// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
	TransitionDate *string `pulumi:"transitionDate"`
	// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
	TransitionInDays *int `pulumi:"transitionInDays"`
}

// Definition of Transition
type TransitionResponseOutput struct{ *pulumi.OutputState }

func (TransitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitionResponse)(nil)).Elem()
}

func (o TransitionResponseOutput) ToTransitionResponseOutput() TransitionResponseOutput {
	return o
}

func (o TransitionResponseOutput) ToTransitionResponseOutputWithContext(ctx context.Context) TransitionResponseOutput {
	return o
}

// The storage class to which you want the object to transition.
func (o TransitionResponseOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitionResponse) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
func (o TransitionResponseOutput) TransitionDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitionResponse) *string { return v.TransitionDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
func (o TransitionResponseOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransitionResponse) *int { return v.TransitionInDays }).(pulumi.IntPtrOutput)
}

type TransitionResponsePtrOutput struct{ *pulumi.OutputState }

func (TransitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitionResponse)(nil)).Elem()
}

func (o TransitionResponsePtrOutput) ToTransitionResponsePtrOutput() TransitionResponsePtrOutput {
	return o
}

func (o TransitionResponsePtrOutput) ToTransitionResponsePtrOutputWithContext(ctx context.Context) TransitionResponsePtrOutput {
	return o
}

func (o TransitionResponsePtrOutput) Elem() TransitionResponseOutput {
	return o.ApplyT(func(v *TransitionResponse) TransitionResponse {
		if v != nil {
			return *v
		}
		var ret TransitionResponse
		return ret
	}).(TransitionResponseOutput)
}

// The storage class to which you want the object to transition.
func (o TransitionResponsePtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC. The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
func (o TransitionResponsePtrOutput) TransitionDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransitionDate
	}).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
func (o TransitionResponsePtrOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransitionResponse) *int {
		if v == nil {
			return nil
		}
		return v.TransitionInDays
	}).(pulumi.IntPtrOutput)
}

type TransitionResponseArrayOutput struct{ *pulumi.OutputState }

func (TransitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitionResponse)(nil)).Elem()
}

func (o TransitionResponseArrayOutput) ToTransitionResponseArrayOutput() TransitionResponseArrayOutput {
	return o
}

func (o TransitionResponseArrayOutput) ToTransitionResponseArrayOutputWithContext(ctx context.Context) TransitionResponseArrayOutput {
	return o
}

func (o TransitionResponseArrayOutput) Index(i pulumi.IntInput) TransitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitionResponse {
		return vs[0].([]TransitionResponse)[vs[1].(int)]
	}).(TransitionResponseOutput)
}

// Definition of TypeEnumValue
type TypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// TypeEnumValueInput is an input type that accepts TypeEnumValueArgs and TypeEnumValueOutput values.
// You can construct a concrete instance of `TypeEnumValueInput` via:
//
//	TypeEnumValueArgs{...}
type TypeEnumValueInput interface {
	pulumi.Input

	ToTypeEnumValueOutput() TypeEnumValueOutput
	ToTypeEnumValueOutputWithContext(context.Context) TypeEnumValueOutput
}

// Definition of TypeEnumValue
type TypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeEnumValue)(nil)).Elem()
}

func (i TypeEnumValueArgs) ToTypeEnumValueOutput() TypeEnumValueOutput {
	return i.ToTypeEnumValueOutputWithContext(context.Background())
}

func (i TypeEnumValueArgs) ToTypeEnumValueOutputWithContext(ctx context.Context) TypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeEnumValueOutput)
}

func (i TypeEnumValueArgs) ToTypeEnumValuePtrOutput() TypeEnumValuePtrOutput {
	return i.ToTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i TypeEnumValueArgs) ToTypeEnumValuePtrOutputWithContext(ctx context.Context) TypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeEnumValueOutput).ToTypeEnumValuePtrOutputWithContext(ctx)
}

// TypeEnumValuePtrInput is an input type that accepts TypeEnumValueArgs, TypeEnumValuePtr and TypeEnumValuePtrOutput values.
// You can construct a concrete instance of `TypeEnumValuePtrInput` via:
//
//	        TypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type TypeEnumValuePtrInput interface {
	pulumi.Input

	ToTypeEnumValuePtrOutput() TypeEnumValuePtrOutput
	ToTypeEnumValuePtrOutputWithContext(context.Context) TypeEnumValuePtrOutput
}

type typeEnumValuePtrType TypeEnumValueArgs

func TypeEnumValuePtr(v *TypeEnumValueArgs) TypeEnumValuePtrInput {
	return (*typeEnumValuePtrType)(v)
}

func (*typeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeEnumValue)(nil)).Elem()
}

func (i *typeEnumValuePtrType) ToTypeEnumValuePtrOutput() TypeEnumValuePtrOutput {
	return i.ToTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *typeEnumValuePtrType) ToTypeEnumValuePtrOutputWithContext(ctx context.Context) TypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeEnumValuePtrOutput)
}

// Definition of TypeEnumValue
type TypeEnumValueOutput struct{ *pulumi.OutputState }

func (TypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeEnumValue)(nil)).Elem()
}

func (o TypeEnumValueOutput) ToTypeEnumValueOutput() TypeEnumValueOutput {
	return o
}

func (o TypeEnumValueOutput) ToTypeEnumValueOutputWithContext(ctx context.Context) TypeEnumValueOutput {
	return o
}

func (o TypeEnumValueOutput) ToTypeEnumValuePtrOutput() TypeEnumValuePtrOutput {
	return o.ToTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o TypeEnumValueOutput) ToTypeEnumValuePtrOutputWithContext(ctx context.Context) TypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TypeEnumValue) *TypeEnumValue {
		return &v
	}).(TypeEnumValuePtrOutput)
}

// Property value
func (o TypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (TypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeEnumValue)(nil)).Elem()
}

func (o TypeEnumValuePtrOutput) ToTypeEnumValuePtrOutput() TypeEnumValuePtrOutput {
	return o
}

func (o TypeEnumValuePtrOutput) ToTypeEnumValuePtrOutputWithContext(ctx context.Context) TypeEnumValuePtrOutput {
	return o
}

func (o TypeEnumValuePtrOutput) Elem() TypeEnumValueOutput {
	return o.ApplyT(func(v *TypeEnumValue) TypeEnumValue {
		if v != nil {
			return *v
		}
		var ret TypeEnumValue
		return ret
	}).(TypeEnumValueOutput)
}

// Property value
func (o TypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of TypeEnumValue
type TypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of TypeEnumValue
type TypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (TypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeEnumValueResponse)(nil)).Elem()
}

func (o TypeEnumValueResponseOutput) ToTypeEnumValueResponseOutput() TypeEnumValueResponseOutput {
	return o
}

func (o TypeEnumValueResponseOutput) ToTypeEnumValueResponseOutputWithContext(ctx context.Context) TypeEnumValueResponseOutput {
	return o
}

// Property value
func (o TypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (TypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeEnumValueResponse)(nil)).Elem()
}

func (o TypeEnumValueResponsePtrOutput) ToTypeEnumValueResponsePtrOutput() TypeEnumValueResponsePtrOutput {
	return o
}

func (o TypeEnumValueResponsePtrOutput) ToTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) TypeEnumValueResponsePtrOutput {
	return o
}

func (o TypeEnumValueResponsePtrOutput) Elem() TypeEnumValueResponseOutput {
	return o.ApplyT(func(v *TypeEnumValueResponse) TypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret TypeEnumValueResponse
		return ret
	}).(TypeEnumValueResponseOutput)
}

// Property value
func (o TypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Ulimit
type Ulimit struct {
	// The hard limit for the ``ulimit`` type.
	HardLimit *int `pulumi:"hardLimit"`
	// The ``type`` of the ``ulimit``.
	Name *string `pulumi:"name"`
	// The soft limit for the ``ulimit`` type.
	SoftLimit *int `pulumi:"softLimit"`
}

// UlimitInput is an input type that accepts UlimitArgs and UlimitOutput values.
// You can construct a concrete instance of `UlimitInput` via:
//
//	UlimitArgs{...}
type UlimitInput interface {
	pulumi.Input

	ToUlimitOutput() UlimitOutput
	ToUlimitOutputWithContext(context.Context) UlimitOutput
}

// Definition of Ulimit
type UlimitArgs struct {
	// The hard limit for the ``ulimit`` type.
	HardLimit pulumi.IntPtrInput `pulumi:"hardLimit"`
	// The ``type`` of the ``ulimit``.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The soft limit for the ``ulimit`` type.
	SoftLimit pulumi.IntPtrInput `pulumi:"softLimit"`
}

func (UlimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ulimit)(nil)).Elem()
}

func (i UlimitArgs) ToUlimitOutput() UlimitOutput {
	return i.ToUlimitOutputWithContext(context.Background())
}

func (i UlimitArgs) ToUlimitOutputWithContext(ctx context.Context) UlimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UlimitOutput)
}

// UlimitArrayInput is an input type that accepts UlimitArray and UlimitArrayOutput values.
// You can construct a concrete instance of `UlimitArrayInput` via:
//
//	UlimitArray{ UlimitArgs{...} }
type UlimitArrayInput interface {
	pulumi.Input

	ToUlimitArrayOutput() UlimitArrayOutput
	ToUlimitArrayOutputWithContext(context.Context) UlimitArrayOutput
}

type UlimitArray []UlimitInput

func (UlimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ulimit)(nil)).Elem()
}

func (i UlimitArray) ToUlimitArrayOutput() UlimitArrayOutput {
	return i.ToUlimitArrayOutputWithContext(context.Background())
}

func (i UlimitArray) ToUlimitArrayOutputWithContext(ctx context.Context) UlimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UlimitArrayOutput)
}

// Definition of Ulimit
type UlimitOutput struct{ *pulumi.OutputState }

func (UlimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ulimit)(nil)).Elem()
}

func (o UlimitOutput) ToUlimitOutput() UlimitOutput {
	return o
}

func (o UlimitOutput) ToUlimitOutputWithContext(ctx context.Context) UlimitOutput {
	return o
}

// The hard limit for the “ulimit“ type.
func (o UlimitOutput) HardLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ulimit) *int { return v.HardLimit }).(pulumi.IntPtrOutput)
}

// The “type“ of the “ulimit“.
func (o UlimitOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ulimit) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The soft limit for the “ulimit“ type.
func (o UlimitOutput) SoftLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ulimit) *int { return v.SoftLimit }).(pulumi.IntPtrOutput)
}

type UlimitArrayOutput struct{ *pulumi.OutputState }

func (UlimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ulimit)(nil)).Elem()
}

func (o UlimitArrayOutput) ToUlimitArrayOutput() UlimitArrayOutput {
	return o
}

func (o UlimitArrayOutput) ToUlimitArrayOutputWithContext(ctx context.Context) UlimitArrayOutput {
	return o
}

func (o UlimitArrayOutput) Index(i pulumi.IntInput) UlimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ulimit {
		return vs[0].([]Ulimit)[vs[1].(int)]
	}).(UlimitOutput)
}

// Definition of Ulimit
type UlimitResponse struct {
	// The hard limit for the ``ulimit`` type.
	HardLimit *int `pulumi:"hardLimit"`
	// The ``type`` of the ``ulimit``.
	Name *string `pulumi:"name"`
	// The soft limit for the ``ulimit`` type.
	SoftLimit *int `pulumi:"softLimit"`
}

// Definition of Ulimit
type UlimitResponseOutput struct{ *pulumi.OutputState }

func (UlimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UlimitResponse)(nil)).Elem()
}

func (o UlimitResponseOutput) ToUlimitResponseOutput() UlimitResponseOutput {
	return o
}

func (o UlimitResponseOutput) ToUlimitResponseOutputWithContext(ctx context.Context) UlimitResponseOutput {
	return o
}

// The hard limit for the “ulimit“ type.
func (o UlimitResponseOutput) HardLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UlimitResponse) *int { return v.HardLimit }).(pulumi.IntPtrOutput)
}

// The “type“ of the “ulimit“.
func (o UlimitResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UlimitResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The soft limit for the “ulimit“ type.
func (o UlimitResponseOutput) SoftLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UlimitResponse) *int { return v.SoftLimit }).(pulumi.IntPtrOutput)
}

type UlimitResponseArrayOutput struct{ *pulumi.OutputState }

func (UlimitResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UlimitResponse)(nil)).Elem()
}

func (o UlimitResponseArrayOutput) ToUlimitResponseArrayOutput() UlimitResponseArrayOutput {
	return o
}

func (o UlimitResponseArrayOutput) ToUlimitResponseArrayOutputWithContext(ctx context.Context) UlimitResponseArrayOutput {
	return o
}

func (o UlimitResponseArrayOutput) Index(i pulumi.IntInput) UlimitResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UlimitResponse {
		return vs[0].([]UlimitResponse)[vs[1].(int)]
	}).(UlimitResponseOutput)
}

// Definition of UnusedAccessConfiguration
type UnusedAccessConfiguration struct {
	// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
	UnusedAccessAge *int `pulumi:"unusedAccessAge"`
}

// UnusedAccessConfigurationInput is an input type that accepts UnusedAccessConfigurationArgs and UnusedAccessConfigurationOutput values.
// You can construct a concrete instance of `UnusedAccessConfigurationInput` via:
//
//	UnusedAccessConfigurationArgs{...}
type UnusedAccessConfigurationInput interface {
	pulumi.Input

	ToUnusedAccessConfigurationOutput() UnusedAccessConfigurationOutput
	ToUnusedAccessConfigurationOutputWithContext(context.Context) UnusedAccessConfigurationOutput
}

// Definition of UnusedAccessConfiguration
type UnusedAccessConfigurationArgs struct {
	// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
	UnusedAccessAge pulumi.IntPtrInput `pulumi:"unusedAccessAge"`
}

func (UnusedAccessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnusedAccessConfiguration)(nil)).Elem()
}

func (i UnusedAccessConfigurationArgs) ToUnusedAccessConfigurationOutput() UnusedAccessConfigurationOutput {
	return i.ToUnusedAccessConfigurationOutputWithContext(context.Background())
}

func (i UnusedAccessConfigurationArgs) ToUnusedAccessConfigurationOutputWithContext(ctx context.Context) UnusedAccessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnusedAccessConfigurationOutput)
}

func (i UnusedAccessConfigurationArgs) ToUnusedAccessConfigurationPtrOutput() UnusedAccessConfigurationPtrOutput {
	return i.ToUnusedAccessConfigurationPtrOutputWithContext(context.Background())
}

func (i UnusedAccessConfigurationArgs) ToUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) UnusedAccessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnusedAccessConfigurationOutput).ToUnusedAccessConfigurationPtrOutputWithContext(ctx)
}

// UnusedAccessConfigurationPtrInput is an input type that accepts UnusedAccessConfigurationArgs, UnusedAccessConfigurationPtr and UnusedAccessConfigurationPtrOutput values.
// You can construct a concrete instance of `UnusedAccessConfigurationPtrInput` via:
//
//	        UnusedAccessConfigurationArgs{...}
//
//	or:
//
//	        nil
type UnusedAccessConfigurationPtrInput interface {
	pulumi.Input

	ToUnusedAccessConfigurationPtrOutput() UnusedAccessConfigurationPtrOutput
	ToUnusedAccessConfigurationPtrOutputWithContext(context.Context) UnusedAccessConfigurationPtrOutput
}

type unusedAccessConfigurationPtrType UnusedAccessConfigurationArgs

func UnusedAccessConfigurationPtr(v *UnusedAccessConfigurationArgs) UnusedAccessConfigurationPtrInput {
	return (*unusedAccessConfigurationPtrType)(v)
}

func (*unusedAccessConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UnusedAccessConfiguration)(nil)).Elem()
}

func (i *unusedAccessConfigurationPtrType) ToUnusedAccessConfigurationPtrOutput() UnusedAccessConfigurationPtrOutput {
	return i.ToUnusedAccessConfigurationPtrOutputWithContext(context.Background())
}

func (i *unusedAccessConfigurationPtrType) ToUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) UnusedAccessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnusedAccessConfigurationPtrOutput)
}

// Definition of UnusedAccessConfiguration
type UnusedAccessConfigurationOutput struct{ *pulumi.OutputState }

func (UnusedAccessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnusedAccessConfiguration)(nil)).Elem()
}

func (o UnusedAccessConfigurationOutput) ToUnusedAccessConfigurationOutput() UnusedAccessConfigurationOutput {
	return o
}

func (o UnusedAccessConfigurationOutput) ToUnusedAccessConfigurationOutputWithContext(ctx context.Context) UnusedAccessConfigurationOutput {
	return o
}

func (o UnusedAccessConfigurationOutput) ToUnusedAccessConfigurationPtrOutput() UnusedAccessConfigurationPtrOutput {
	return o.ToUnusedAccessConfigurationPtrOutputWithContext(context.Background())
}

func (o UnusedAccessConfigurationOutput) ToUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) UnusedAccessConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UnusedAccessConfiguration) *UnusedAccessConfiguration {
		return &v
	}).(UnusedAccessConfigurationPtrOutput)
}

// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
func (o UnusedAccessConfigurationOutput) UnusedAccessAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UnusedAccessConfiguration) *int { return v.UnusedAccessAge }).(pulumi.IntPtrOutput)
}

type UnusedAccessConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UnusedAccessConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnusedAccessConfiguration)(nil)).Elem()
}

func (o UnusedAccessConfigurationPtrOutput) ToUnusedAccessConfigurationPtrOutput() UnusedAccessConfigurationPtrOutput {
	return o
}

func (o UnusedAccessConfigurationPtrOutput) ToUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) UnusedAccessConfigurationPtrOutput {
	return o
}

func (o UnusedAccessConfigurationPtrOutput) Elem() UnusedAccessConfigurationOutput {
	return o.ApplyT(func(v *UnusedAccessConfiguration) UnusedAccessConfiguration {
		if v != nil {
			return *v
		}
		var ret UnusedAccessConfiguration
		return ret
	}).(UnusedAccessConfigurationOutput)
}

// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
func (o UnusedAccessConfigurationPtrOutput) UnusedAccessAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UnusedAccessConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.UnusedAccessAge
	}).(pulumi.IntPtrOutput)
}

// Definition of UnusedAccessConfiguration
type UnusedAccessConfigurationResponse struct {
	// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
	UnusedAccessAge *int `pulumi:"unusedAccessAge"`
}

// Definition of UnusedAccessConfiguration
type UnusedAccessConfigurationResponseOutput struct{ *pulumi.OutputState }

func (UnusedAccessConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnusedAccessConfigurationResponse)(nil)).Elem()
}

func (o UnusedAccessConfigurationResponseOutput) ToUnusedAccessConfigurationResponseOutput() UnusedAccessConfigurationResponseOutput {
	return o
}

func (o UnusedAccessConfigurationResponseOutput) ToUnusedAccessConfigurationResponseOutputWithContext(ctx context.Context) UnusedAccessConfigurationResponseOutput {
	return o
}

// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
func (o UnusedAccessConfigurationResponseOutput) UnusedAccessAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UnusedAccessConfigurationResponse) *int { return v.UnusedAccessAge }).(pulumi.IntPtrOutput)
}

type UnusedAccessConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (UnusedAccessConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnusedAccessConfigurationResponse)(nil)).Elem()
}

func (o UnusedAccessConfigurationResponsePtrOutput) ToUnusedAccessConfigurationResponsePtrOutput() UnusedAccessConfigurationResponsePtrOutput {
	return o
}

func (o UnusedAccessConfigurationResponsePtrOutput) ToUnusedAccessConfigurationResponsePtrOutputWithContext(ctx context.Context) UnusedAccessConfigurationResponsePtrOutput {
	return o
}

func (o UnusedAccessConfigurationResponsePtrOutput) Elem() UnusedAccessConfigurationResponseOutput {
	return o.ApplyT(func(v *UnusedAccessConfigurationResponse) UnusedAccessConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret UnusedAccessConfigurationResponse
		return ret
	}).(UnusedAccessConfigurationResponseOutput)
}

// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 180 days.
func (o UnusedAccessConfigurationResponsePtrOutput) UnusedAccessAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UnusedAccessConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.UnusedAccessAge
	}).(pulumi.IntPtrOutput)
}

// Definition of UpdateConfig
type UpdateConfig struct {
	// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
	MaxUnavailablePercentage *int `pulumi:"maxUnavailablePercentage"`
}

// UpdateConfigInput is an input type that accepts UpdateConfigArgs and UpdateConfigOutput values.
// You can construct a concrete instance of `UpdateConfigInput` via:
//
//	UpdateConfigArgs{...}
type UpdateConfigInput interface {
	pulumi.Input

	ToUpdateConfigOutput() UpdateConfigOutput
	ToUpdateConfigOutputWithContext(context.Context) UpdateConfigOutput
}

// Definition of UpdateConfig
type UpdateConfigArgs struct {
	// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
	// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
	MaxUnavailablePercentage pulumi.IntPtrInput `pulumi:"maxUnavailablePercentage"`
}

func (UpdateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateConfig)(nil)).Elem()
}

func (i UpdateConfigArgs) ToUpdateConfigOutput() UpdateConfigOutput {
	return i.ToUpdateConfigOutputWithContext(context.Background())
}

func (i UpdateConfigArgs) ToUpdateConfigOutputWithContext(ctx context.Context) UpdateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateConfigOutput)
}

func (i UpdateConfigArgs) ToUpdateConfigPtrOutput() UpdateConfigPtrOutput {
	return i.ToUpdateConfigPtrOutputWithContext(context.Background())
}

func (i UpdateConfigArgs) ToUpdateConfigPtrOutputWithContext(ctx context.Context) UpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateConfigOutput).ToUpdateConfigPtrOutputWithContext(ctx)
}

// UpdateConfigPtrInput is an input type that accepts UpdateConfigArgs, UpdateConfigPtr and UpdateConfigPtrOutput values.
// You can construct a concrete instance of `UpdateConfigPtrInput` via:
//
//	        UpdateConfigArgs{...}
//
//	or:
//
//	        nil
type UpdateConfigPtrInput interface {
	pulumi.Input

	ToUpdateConfigPtrOutput() UpdateConfigPtrOutput
	ToUpdateConfigPtrOutputWithContext(context.Context) UpdateConfigPtrOutput
}

type updateConfigPtrType UpdateConfigArgs

func UpdateConfigPtr(v *UpdateConfigArgs) UpdateConfigPtrInput {
	return (*updateConfigPtrType)(v)
}

func (*updateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateConfig)(nil)).Elem()
}

func (i *updateConfigPtrType) ToUpdateConfigPtrOutput() UpdateConfigPtrOutput {
	return i.ToUpdateConfigPtrOutputWithContext(context.Background())
}

func (i *updateConfigPtrType) ToUpdateConfigPtrOutputWithContext(ctx context.Context) UpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateConfigPtrOutput)
}

// Definition of UpdateConfig
type UpdateConfigOutput struct{ *pulumi.OutputState }

func (UpdateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateConfig)(nil)).Elem()
}

func (o UpdateConfigOutput) ToUpdateConfigOutput() UpdateConfigOutput {
	return o
}

func (o UpdateConfigOutput) ToUpdateConfigOutputWithContext(ctx context.Context) UpdateConfigOutput {
	return o
}

func (o UpdateConfigOutput) ToUpdateConfigPtrOutput() UpdateConfigPtrOutput {
	return o.ToUpdateConfigPtrOutputWithContext(context.Background())
}

func (o UpdateConfigOutput) ToUpdateConfigPtrOutputWithContext(ctx context.Context) UpdateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateConfig) *UpdateConfig {
		return &v
	}).(UpdateConfigPtrOutput)
}

// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
func (o UpdateConfigOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpdateConfig) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
func (o UpdateConfigOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpdateConfig) *int { return v.MaxUnavailablePercentage }).(pulumi.IntPtrOutput)
}

type UpdateConfigPtrOutput struct{ *pulumi.OutputState }

func (UpdateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateConfig)(nil)).Elem()
}

func (o UpdateConfigPtrOutput) ToUpdateConfigPtrOutput() UpdateConfigPtrOutput {
	return o
}

func (o UpdateConfigPtrOutput) ToUpdateConfigPtrOutputWithContext(ctx context.Context) UpdateConfigPtrOutput {
	return o
}

func (o UpdateConfigPtrOutput) Elem() UpdateConfigOutput {
	return o.ApplyT(func(v *UpdateConfig) UpdateConfig {
		if v != nil {
			return *v
		}
		var ret UpdateConfig
		return ret
	}).(UpdateConfigOutput)
}

// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
func (o UpdateConfigPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
func (o UpdateConfigPtrOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailablePercentage
	}).(pulumi.IntPtrOutput)
}

// Definition of UpdateConfig
type UpdateConfigResponse struct {
	// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
	MaxUnavailablePercentage *int `pulumi:"maxUnavailablePercentage"`
}

// Definition of UpdateConfig
type UpdateConfigResponseOutput struct{ *pulumi.OutputState }

func (UpdateConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateConfigResponse)(nil)).Elem()
}

func (o UpdateConfigResponseOutput) ToUpdateConfigResponseOutput() UpdateConfigResponseOutput {
	return o
}

func (o UpdateConfigResponseOutput) ToUpdateConfigResponseOutputWithContext(ctx context.Context) UpdateConfigResponseOutput {
	return o
}

// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
func (o UpdateConfigResponseOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpdateConfigResponse) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
func (o UpdateConfigResponseOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpdateConfigResponse) *int { return v.MaxUnavailablePercentage }).(pulumi.IntPtrOutput)
}

type UpdateConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (UpdateConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateConfigResponse)(nil)).Elem()
}

func (o UpdateConfigResponsePtrOutput) ToUpdateConfigResponsePtrOutput() UpdateConfigResponsePtrOutput {
	return o
}

func (o UpdateConfigResponsePtrOutput) ToUpdateConfigResponsePtrOutputWithContext(ctx context.Context) UpdateConfigResponsePtrOutput {
	return o
}

func (o UpdateConfigResponsePtrOutput) Elem() UpdateConfigResponseOutput {
	return o.ApplyT(func(v *UpdateConfigResponse) UpdateConfigResponse {
		if v != nil {
			return *v
		}
		var ret UpdateConfigResponse
		return ret
	}).(UpdateConfigResponseOutput)
}

// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
func (o UpdateConfigResponsePtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
func (o UpdateConfigResponsePtrOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailablePercentage
	}).(pulumi.IntPtrOutput)
}

// Definition of UserIdGroupPair
type UserIdGroupPair struct {
	// <p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
	Description *string `pulumi:"description"`
	// <p>The ID of the security group.</p>
	GroupId *string `pulumi:"groupId"`
	// <p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>
	GroupName *string `pulumi:"groupName"`
	// <p>The status of a VPC peering connection, if applicable.</p>
	PeeringStatus *string `pulumi:"peeringStatus"`
	// <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>
	UserId *string `pulumi:"userId"`
	// <p>The ID of the VPC for the referenced security group, if applicable.</p>
	VpcId *string `pulumi:"vpcId"`
	// <p>The ID of the VPC peering connection, if applicable.</p>
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

// UserIdGroupPairInput is an input type that accepts UserIdGroupPairArgs and UserIdGroupPairOutput values.
// You can construct a concrete instance of `UserIdGroupPairInput` via:
//
//	UserIdGroupPairArgs{...}
type UserIdGroupPairInput interface {
	pulumi.Input

	ToUserIdGroupPairOutput() UserIdGroupPairOutput
	ToUserIdGroupPairOutputWithContext(context.Context) UserIdGroupPairOutput
}

// Definition of UserIdGroupPair
type UserIdGroupPairArgs struct {
	// <p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
	Description pulumi.StringPtrInput `pulumi:"description"`
	// <p>The ID of the security group.</p>
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// <p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// <p>The status of a VPC peering connection, if applicable.</p>
	PeeringStatus pulumi.StringPtrInput `pulumi:"peeringStatus"`
	// <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// <p>The ID of the VPC for the referenced security group, if applicable.</p>
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// <p>The ID of the VPC peering connection, if applicable.</p>
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (UserIdGroupPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdGroupPair)(nil)).Elem()
}

func (i UserIdGroupPairArgs) ToUserIdGroupPairOutput() UserIdGroupPairOutput {
	return i.ToUserIdGroupPairOutputWithContext(context.Background())
}

func (i UserIdGroupPairArgs) ToUserIdGroupPairOutputWithContext(ctx context.Context) UserIdGroupPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdGroupPairOutput)
}

// UserIdGroupPairArrayInput is an input type that accepts UserIdGroupPairArray and UserIdGroupPairArrayOutput values.
// You can construct a concrete instance of `UserIdGroupPairArrayInput` via:
//
//	UserIdGroupPairArray{ UserIdGroupPairArgs{...} }
type UserIdGroupPairArrayInput interface {
	pulumi.Input

	ToUserIdGroupPairArrayOutput() UserIdGroupPairArrayOutput
	ToUserIdGroupPairArrayOutputWithContext(context.Context) UserIdGroupPairArrayOutput
}

type UserIdGroupPairArray []UserIdGroupPairInput

func (UserIdGroupPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdGroupPair)(nil)).Elem()
}

func (i UserIdGroupPairArray) ToUserIdGroupPairArrayOutput() UserIdGroupPairArrayOutput {
	return i.ToUserIdGroupPairArrayOutputWithContext(context.Background())
}

func (i UserIdGroupPairArray) ToUserIdGroupPairArrayOutputWithContext(ctx context.Context) UserIdGroupPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdGroupPairArrayOutput)
}

// Definition of UserIdGroupPair
type UserIdGroupPairOutput struct{ *pulumi.OutputState }

func (UserIdGroupPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdGroupPair)(nil)).Elem()
}

func (o UserIdGroupPairOutput) ToUserIdGroupPairOutput() UserIdGroupPairOutput {
	return o
}

func (o UserIdGroupPairOutput) ToUserIdGroupPairOutputWithContext(ctx context.Context) UserIdGroupPairOutput {
	return o
}

// <p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
func (o UserIdGroupPairOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The ID of the security group.</p>
func (o UserIdGroupPairOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// <p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>
func (o UserIdGroupPairOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// <p>The status of a VPC peering connection, if applicable.</p>
func (o UserIdGroupPairOutput) PeeringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.PeeringStatus }).(pulumi.StringPtrOutput)
}

// <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>
func (o UserIdGroupPairOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// <p>The ID of the VPC for the referenced security group, if applicable.</p>
func (o UserIdGroupPairOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// <p>The ID of the VPC peering connection, if applicable.</p>
func (o UserIdGroupPairOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPair) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type UserIdGroupPairArrayOutput struct{ *pulumi.OutputState }

func (UserIdGroupPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdGroupPair)(nil)).Elem()
}

func (o UserIdGroupPairArrayOutput) ToUserIdGroupPairArrayOutput() UserIdGroupPairArrayOutput {
	return o
}

func (o UserIdGroupPairArrayOutput) ToUserIdGroupPairArrayOutputWithContext(ctx context.Context) UserIdGroupPairArrayOutput {
	return o
}

func (o UserIdGroupPairArrayOutput) Index(i pulumi.IntInput) UserIdGroupPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserIdGroupPair {
		return vs[0].([]UserIdGroupPair)[vs[1].(int)]
	}).(UserIdGroupPairOutput)
}

// Definition of UserIdGroupPair
type UserIdGroupPairResponse struct {
	// <p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
	Description *string `pulumi:"description"`
	// <p>The ID of the security group.</p>
	GroupId *string `pulumi:"groupId"`
	// <p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>
	GroupName *string `pulumi:"groupName"`
	// <p>The status of a VPC peering connection, if applicable.</p>
	PeeringStatus *string `pulumi:"peeringStatus"`
	// <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>
	UserId *string `pulumi:"userId"`
	// <p>The ID of the VPC for the referenced security group, if applicable.</p>
	VpcId *string `pulumi:"vpcId"`
	// <p>The ID of the VPC peering connection, if applicable.</p>
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

// Definition of UserIdGroupPair
type UserIdGroupPairResponseOutput struct{ *pulumi.OutputState }

func (UserIdGroupPairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdGroupPairResponse)(nil)).Elem()
}

func (o UserIdGroupPairResponseOutput) ToUserIdGroupPairResponseOutput() UserIdGroupPairResponseOutput {
	return o
}

func (o UserIdGroupPairResponseOutput) ToUserIdGroupPairResponseOutputWithContext(ctx context.Context) UserIdGroupPairResponseOutput {
	return o
}

// <p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
func (o UserIdGroupPairResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The ID of the security group.</p>
func (o UserIdGroupPairResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// <p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>
func (o UserIdGroupPairResponseOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// <p>The status of a VPC peering connection, if applicable.</p>
func (o UserIdGroupPairResponseOutput) PeeringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.PeeringStatus }).(pulumi.StringPtrOutput)
}

// <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>
func (o UserIdGroupPairResponseOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// <p>The ID of the VPC for the referenced security group, if applicable.</p>
func (o UserIdGroupPairResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// <p>The ID of the VPC peering connection, if applicable.</p>
func (o UserIdGroupPairResponseOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdGroupPairResponse) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type UserIdGroupPairResponseArrayOutput struct{ *pulumi.OutputState }

func (UserIdGroupPairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdGroupPairResponse)(nil)).Elem()
}

func (o UserIdGroupPairResponseArrayOutput) ToUserIdGroupPairResponseArrayOutput() UserIdGroupPairResponseArrayOutput {
	return o
}

func (o UserIdGroupPairResponseArrayOutput) ToUserIdGroupPairResponseArrayOutputWithContext(ctx context.Context) UserIdGroupPairResponseArrayOutput {
	return o
}

func (o UserIdGroupPairResponseArrayOutput) Index(i pulumi.IntInput) UserIdGroupPairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserIdGroupPairResponse {
		return vs[0].([]UserIdGroupPairResponse)[vs[1].(int)]
	}).(UserIdGroupPairResponseOutput)
}

// Definition of UserPausedDetails
type UserPausedDetails struct {
	// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
	JobExpiresAt *string `pulumi:"jobExpiresAt"`
	// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
	JobImminentExpirationHealthEventArn *string `pulumi:"jobImminentExpirationHealthEventArn"`
	// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
	JobPausedAt *string `pulumi:"jobPausedAt"`
}

// UserPausedDetailsInput is an input type that accepts UserPausedDetailsArgs and UserPausedDetailsOutput values.
// You can construct a concrete instance of `UserPausedDetailsInput` via:
//
//	UserPausedDetailsArgs{...}
type UserPausedDetailsInput interface {
	pulumi.Input

	ToUserPausedDetailsOutput() UserPausedDetailsOutput
	ToUserPausedDetailsOutputWithContext(context.Context) UserPausedDetailsOutput
}

// Definition of UserPausedDetails
type UserPausedDetailsArgs struct {
	// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
	JobExpiresAt pulumi.StringPtrInput `pulumi:"jobExpiresAt"`
	// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
	JobImminentExpirationHealthEventArn pulumi.StringPtrInput `pulumi:"jobImminentExpirationHealthEventArn"`
	// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
	JobPausedAt pulumi.StringPtrInput `pulumi:"jobPausedAt"`
}

func (UserPausedDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPausedDetails)(nil)).Elem()
}

func (i UserPausedDetailsArgs) ToUserPausedDetailsOutput() UserPausedDetailsOutput {
	return i.ToUserPausedDetailsOutputWithContext(context.Background())
}

func (i UserPausedDetailsArgs) ToUserPausedDetailsOutputWithContext(ctx context.Context) UserPausedDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPausedDetailsOutput)
}

func (i UserPausedDetailsArgs) ToUserPausedDetailsPtrOutput() UserPausedDetailsPtrOutput {
	return i.ToUserPausedDetailsPtrOutputWithContext(context.Background())
}

func (i UserPausedDetailsArgs) ToUserPausedDetailsPtrOutputWithContext(ctx context.Context) UserPausedDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPausedDetailsOutput).ToUserPausedDetailsPtrOutputWithContext(ctx)
}

// UserPausedDetailsPtrInput is an input type that accepts UserPausedDetailsArgs, UserPausedDetailsPtr and UserPausedDetailsPtrOutput values.
// You can construct a concrete instance of `UserPausedDetailsPtrInput` via:
//
//	        UserPausedDetailsArgs{...}
//
//	or:
//
//	        nil
type UserPausedDetailsPtrInput interface {
	pulumi.Input

	ToUserPausedDetailsPtrOutput() UserPausedDetailsPtrOutput
	ToUserPausedDetailsPtrOutputWithContext(context.Context) UserPausedDetailsPtrOutput
}

type userPausedDetailsPtrType UserPausedDetailsArgs

func UserPausedDetailsPtr(v *UserPausedDetailsArgs) UserPausedDetailsPtrInput {
	return (*userPausedDetailsPtrType)(v)
}

func (*userPausedDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPausedDetails)(nil)).Elem()
}

func (i *userPausedDetailsPtrType) ToUserPausedDetailsPtrOutput() UserPausedDetailsPtrOutput {
	return i.ToUserPausedDetailsPtrOutputWithContext(context.Background())
}

func (i *userPausedDetailsPtrType) ToUserPausedDetailsPtrOutputWithContext(ctx context.Context) UserPausedDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPausedDetailsPtrOutput)
}

// Definition of UserPausedDetails
type UserPausedDetailsOutput struct{ *pulumi.OutputState }

func (UserPausedDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPausedDetails)(nil)).Elem()
}

func (o UserPausedDetailsOutput) ToUserPausedDetailsOutput() UserPausedDetailsOutput {
	return o
}

func (o UserPausedDetailsOutput) ToUserPausedDetailsOutputWithContext(ctx context.Context) UserPausedDetailsOutput {
	return o
}

func (o UserPausedDetailsOutput) ToUserPausedDetailsPtrOutput() UserPausedDetailsPtrOutput {
	return o.ToUserPausedDetailsPtrOutputWithContext(context.Background())
}

func (o UserPausedDetailsOutput) ToUserPausedDetailsPtrOutputWithContext(ctx context.Context) UserPausedDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPausedDetails) *UserPausedDetails {
		return &v
	}).(UserPausedDetailsPtrOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
func (o UserPausedDetailsOutput) JobExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPausedDetails) *string { return v.JobExpiresAt }).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
func (o UserPausedDetailsOutput) JobImminentExpirationHealthEventArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPausedDetails) *string { return v.JobImminentExpirationHealthEventArn }).(pulumi.StringPtrOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
func (o UserPausedDetailsOutput) JobPausedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPausedDetails) *string { return v.JobPausedAt }).(pulumi.StringPtrOutput)
}

type UserPausedDetailsPtrOutput struct{ *pulumi.OutputState }

func (UserPausedDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPausedDetails)(nil)).Elem()
}

func (o UserPausedDetailsPtrOutput) ToUserPausedDetailsPtrOutput() UserPausedDetailsPtrOutput {
	return o
}

func (o UserPausedDetailsPtrOutput) ToUserPausedDetailsPtrOutputWithContext(ctx context.Context) UserPausedDetailsPtrOutput {
	return o
}

func (o UserPausedDetailsPtrOutput) Elem() UserPausedDetailsOutput {
	return o.ApplyT(func(v *UserPausedDetails) UserPausedDetails {
		if v != nil {
			return *v
		}
		var ret UserPausedDetails
		return ret
	}).(UserPausedDetailsOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
func (o UserPausedDetailsPtrOutput) JobExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPausedDetails) *string {
		if v == nil {
			return nil
		}
		return v.JobExpiresAt
	}).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
func (o UserPausedDetailsPtrOutput) JobImminentExpirationHealthEventArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPausedDetails) *string {
		if v == nil {
			return nil
		}
		return v.JobImminentExpirationHealthEventArn
	}).(pulumi.StringPtrOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
func (o UserPausedDetailsPtrOutput) JobPausedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPausedDetails) *string {
		if v == nil {
			return nil
		}
		return v.JobPausedAt
	}).(pulumi.StringPtrOutput)
}

// Definition of UserPausedDetails
type UserPausedDetailsResponse struct {
	// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
	JobExpiresAt *string `pulumi:"jobExpiresAt"`
	// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
	JobImminentExpirationHealthEventArn *string `pulumi:"jobImminentExpirationHealthEventArn"`
	// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
	JobPausedAt *string `pulumi:"jobPausedAt"`
}

// Definition of UserPausedDetails
type UserPausedDetailsResponseOutput struct{ *pulumi.OutputState }

func (UserPausedDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPausedDetailsResponse)(nil)).Elem()
}

func (o UserPausedDetailsResponseOutput) ToUserPausedDetailsResponseOutput() UserPausedDetailsResponseOutput {
	return o
}

func (o UserPausedDetailsResponseOutput) ToUserPausedDetailsResponseOutputWithContext(ctx context.Context) UserPausedDetailsResponseOutput {
	return o
}

// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
func (o UserPausedDetailsResponseOutput) JobExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPausedDetailsResponse) *string { return v.JobExpiresAt }).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
func (o UserPausedDetailsResponseOutput) JobImminentExpirationHealthEventArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPausedDetailsResponse) *string { return v.JobImminentExpirationHealthEventArn }).(pulumi.StringPtrOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
func (o UserPausedDetailsResponseOutput) JobPausedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPausedDetailsResponse) *string { return v.JobPausedAt }).(pulumi.StringPtrOutput)
}

type UserPausedDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserPausedDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPausedDetailsResponse)(nil)).Elem()
}

func (o UserPausedDetailsResponsePtrOutput) ToUserPausedDetailsResponsePtrOutput() UserPausedDetailsResponsePtrOutput {
	return o
}

func (o UserPausedDetailsResponsePtrOutput) ToUserPausedDetailsResponsePtrOutputWithContext(ctx context.Context) UserPausedDetailsResponsePtrOutput {
	return o
}

func (o UserPausedDetailsResponsePtrOutput) Elem() UserPausedDetailsResponseOutput {
	return o.ApplyT(func(v *UserPausedDetailsResponse) UserPausedDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UserPausedDetailsResponse
		return ret
	}).(UserPausedDetailsResponseOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when the job or job run will expire and be cancelled if you don't resume it first.</p>
func (o UserPausedDetailsResponsePtrOutput) JobExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPausedDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobExpiresAt
	}).(pulumi.StringPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the Health event that Amazon Macie sent to notify you of the job or job run's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days.</p>
func (o UserPausedDetailsResponsePtrOutput) JobImminentExpirationHealthEventArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPausedDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobImminentExpirationHealthEventArn
	}).(pulumi.StringPtrOutput)
}

// <p>The date and time, in UTC and extended ISO 8601 format, when you paused the job.</p>
func (o UserPausedDetailsResponsePtrOutput) JobPausedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPausedDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobPausedAt
	}).(pulumi.StringPtrOutput)
}

// Definition of UserPoolConfig
type UserPoolConfig struct {
	// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// <p>The Amazon Web Services Region in which the user pool was created.</p>
	AwsRegion *string `pulumi:"awsRegion"`
	// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
	DefaultAction *DefaultActionEnumValue `pulumi:"defaultAction"`
	// <p>The user pool ID.</p>
	UserPoolId *string `pulumi:"userPoolId"`
}

// UserPoolConfigInput is an input type that accepts UserPoolConfigArgs and UserPoolConfigOutput values.
// You can construct a concrete instance of `UserPoolConfigInput` via:
//
//	UserPoolConfigArgs{...}
type UserPoolConfigInput interface {
	pulumi.Input

	ToUserPoolConfigOutput() UserPoolConfigOutput
	ToUserPoolConfigOutputWithContext(context.Context) UserPoolConfigOutput
}

// Definition of UserPoolConfig
type UserPoolConfigArgs struct {
	// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// <p>The Amazon Web Services Region in which the user pool was created.</p>
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
	DefaultAction DefaultActionEnumValuePtrInput `pulumi:"defaultAction"`
	// <p>The user pool ID.</p>
	UserPoolId pulumi.StringPtrInput `pulumi:"userPoolId"`
}

func (UserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolConfig)(nil)).Elem()
}

func (i UserPoolConfigArgs) ToUserPoolConfigOutput() UserPoolConfigOutput {
	return i.ToUserPoolConfigOutputWithContext(context.Background())
}

func (i UserPoolConfigArgs) ToUserPoolConfigOutputWithContext(ctx context.Context) UserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolConfigOutput)
}

func (i UserPoolConfigArgs) ToUserPoolConfigPtrOutput() UserPoolConfigPtrOutput {
	return i.ToUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolConfigArgs) ToUserPoolConfigPtrOutputWithContext(ctx context.Context) UserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolConfigOutput).ToUserPoolConfigPtrOutputWithContext(ctx)
}

// UserPoolConfigPtrInput is an input type that accepts UserPoolConfigArgs, UserPoolConfigPtr and UserPoolConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolConfigPtrInput` via:
//
//	        UserPoolConfigArgs{...}
//
//	or:
//
//	        nil
type UserPoolConfigPtrInput interface {
	pulumi.Input

	ToUserPoolConfigPtrOutput() UserPoolConfigPtrOutput
	ToUserPoolConfigPtrOutputWithContext(context.Context) UserPoolConfigPtrOutput
}

type userPoolConfigPtrType UserPoolConfigArgs

func UserPoolConfigPtr(v *UserPoolConfigArgs) UserPoolConfigPtrInput {
	return (*userPoolConfigPtrType)(v)
}

func (*userPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolConfig)(nil)).Elem()
}

func (i *userPoolConfigPtrType) ToUserPoolConfigPtrOutput() UserPoolConfigPtrOutput {
	return i.ToUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolConfigPtrType) ToUserPoolConfigPtrOutputWithContext(ctx context.Context) UserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolConfigPtrOutput)
}

// Definition of UserPoolConfig
type UserPoolConfigOutput struct{ *pulumi.OutputState }

func (UserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolConfig)(nil)).Elem()
}

func (o UserPoolConfigOutput) ToUserPoolConfigOutput() UserPoolConfigOutput {
	return o
}

func (o UserPoolConfigOutput) ToUserPoolConfigOutputWithContext(ctx context.Context) UserPoolConfigOutput {
	return o
}

func (o UserPoolConfigOutput) ToUserPoolConfigPtrOutput() UserPoolConfigPtrOutput {
	return o.ToUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolConfigOutput) ToUserPoolConfigPtrOutputWithContext(ctx context.Context) UserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolConfig) *UserPoolConfig {
		return &v
	}).(UserPoolConfigPtrOutput)
}

// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
func (o UserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// <p>The Amazon Web Services Region in which the user pool was created.</p>
func (o UserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
func (o UserPoolConfigOutput) DefaultAction() DefaultActionEnumValuePtrOutput {
	return o.ApplyT(func(v UserPoolConfig) *DefaultActionEnumValue { return v.DefaultAction }).(DefaultActionEnumValuePtrOutput)
}

// <p>The user pool ID.</p>
func (o UserPoolConfigOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolConfig) *string { return v.UserPoolId }).(pulumi.StringPtrOutput)
}

type UserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolConfig)(nil)).Elem()
}

func (o UserPoolConfigPtrOutput) ToUserPoolConfigPtrOutput() UserPoolConfigPtrOutput {
	return o
}

func (o UserPoolConfigPtrOutput) ToUserPoolConfigPtrOutputWithContext(ctx context.Context) UserPoolConfigPtrOutput {
	return o
}

func (o UserPoolConfigPtrOutput) Elem() UserPoolConfigOutput {
	return o.ApplyT(func(v *UserPoolConfig) UserPoolConfig {
		if v != nil {
			return *v
		}
		var ret UserPoolConfig
		return ret
	}).(UserPoolConfigOutput)
}

// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
func (o UserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// <p>The Amazon Web Services Region in which the user pool was created.</p>
func (o UserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
func (o UserPoolConfigPtrOutput) DefaultAction() DefaultActionEnumValuePtrOutput {
	return o.ApplyT(func(v *UserPoolConfig) *DefaultActionEnumValue {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(DefaultActionEnumValuePtrOutput)
}

// <p>The user pool ID.</p>
func (o UserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

// Definition of UserPoolConfig
type UserPoolConfigResponse struct {
	// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// <p>The Amazon Web Services Region in which the user pool was created.</p>
	AwsRegion *string `pulumi:"awsRegion"`
	// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
	DefaultAction *DefaultActionEnumValueResponse `pulumi:"defaultAction"`
	// <p>The user pool ID.</p>
	UserPoolId *string `pulumi:"userPoolId"`
}

// Definition of UserPoolConfig
type UserPoolConfigResponseOutput struct{ *pulumi.OutputState }

func (UserPoolConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolConfigResponse)(nil)).Elem()
}

func (o UserPoolConfigResponseOutput) ToUserPoolConfigResponseOutput() UserPoolConfigResponseOutput {
	return o
}

func (o UserPoolConfigResponseOutput) ToUserPoolConfigResponseOutputWithContext(ctx context.Context) UserPoolConfigResponseOutput {
	return o
}

// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
func (o UserPoolConfigResponseOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolConfigResponse) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// <p>The Amazon Web Services Region in which the user pool was created.</p>
func (o UserPoolConfigResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolConfigResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
func (o UserPoolConfigResponseOutput) DefaultAction() DefaultActionEnumValueResponsePtrOutput {
	return o.ApplyT(func(v UserPoolConfigResponse) *DefaultActionEnumValueResponse { return v.DefaultAction }).(DefaultActionEnumValueResponsePtrOutput)
}

// <p>The user pool ID.</p>
func (o UserPoolConfigResponseOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolConfigResponse) *string { return v.UserPoolId }).(pulumi.StringPtrOutput)
}

type UserPoolConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (UserPoolConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolConfigResponse)(nil)).Elem()
}

func (o UserPoolConfigResponsePtrOutput) ToUserPoolConfigResponsePtrOutput() UserPoolConfigResponsePtrOutput {
	return o
}

func (o UserPoolConfigResponsePtrOutput) ToUserPoolConfigResponsePtrOutputWithContext(ctx context.Context) UserPoolConfigResponsePtrOutput {
	return o
}

func (o UserPoolConfigResponsePtrOutput) Elem() UserPoolConfigResponseOutput {
	return o.ApplyT(func(v *UserPoolConfigResponse) UserPoolConfigResponse {
		if v != nil {
			return *v
		}
		var ret UserPoolConfigResponse
		return ret
	}).(UserPoolConfigResponseOutput)
}

// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>
func (o UserPoolConfigResponsePtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// <p>The Amazon Web Services Region in which the user pool was created.</p>
func (o UserPoolConfigResponsePtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// <p>The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.</p>
func (o UserPoolConfigResponsePtrOutput) DefaultAction() DefaultActionEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *UserPoolConfigResponse) *DefaultActionEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(DefaultActionEnumValueResponsePtrOutput)
}

// <p>The user pool ID.</p>
func (o UserPoolConfigResponsePtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

// Definition of VCpuCountRequest
type VCpuCountRequest struct {
	// The maximum number of vCPUs.
	Max *int `pulumi:"max"`
	// The minimum number of vCPUs.
	Min *int `pulumi:"min"`
}

// VCpuCountRequestInput is an input type that accepts VCpuCountRequestArgs and VCpuCountRequestOutput values.
// You can construct a concrete instance of `VCpuCountRequestInput` via:
//
//	VCpuCountRequestArgs{...}
type VCpuCountRequestInput interface {
	pulumi.Input

	ToVCpuCountRequestOutput() VCpuCountRequestOutput
	ToVCpuCountRequestOutputWithContext(context.Context) VCpuCountRequestOutput
}

// Definition of VCpuCountRequest
type VCpuCountRequestArgs struct {
	// The maximum number of vCPUs.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimum number of vCPUs.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (VCpuCountRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VCpuCountRequest)(nil)).Elem()
}

func (i VCpuCountRequestArgs) ToVCpuCountRequestOutput() VCpuCountRequestOutput {
	return i.ToVCpuCountRequestOutputWithContext(context.Background())
}

func (i VCpuCountRequestArgs) ToVCpuCountRequestOutputWithContext(ctx context.Context) VCpuCountRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VCpuCountRequestOutput)
}

func (i VCpuCountRequestArgs) ToVCpuCountRequestPtrOutput() VCpuCountRequestPtrOutput {
	return i.ToVCpuCountRequestPtrOutputWithContext(context.Background())
}

func (i VCpuCountRequestArgs) ToVCpuCountRequestPtrOutputWithContext(ctx context.Context) VCpuCountRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VCpuCountRequestOutput).ToVCpuCountRequestPtrOutputWithContext(ctx)
}

// VCpuCountRequestPtrInput is an input type that accepts VCpuCountRequestArgs, VCpuCountRequestPtr and VCpuCountRequestPtrOutput values.
// You can construct a concrete instance of `VCpuCountRequestPtrInput` via:
//
//	        VCpuCountRequestArgs{...}
//
//	or:
//
//	        nil
type VCpuCountRequestPtrInput interface {
	pulumi.Input

	ToVCpuCountRequestPtrOutput() VCpuCountRequestPtrOutput
	ToVCpuCountRequestPtrOutputWithContext(context.Context) VCpuCountRequestPtrOutput
}

type vcpuCountRequestPtrType VCpuCountRequestArgs

func VCpuCountRequestPtr(v *VCpuCountRequestArgs) VCpuCountRequestPtrInput {
	return (*vcpuCountRequestPtrType)(v)
}

func (*vcpuCountRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VCpuCountRequest)(nil)).Elem()
}

func (i *vcpuCountRequestPtrType) ToVCpuCountRequestPtrOutput() VCpuCountRequestPtrOutput {
	return i.ToVCpuCountRequestPtrOutputWithContext(context.Background())
}

func (i *vcpuCountRequestPtrType) ToVCpuCountRequestPtrOutputWithContext(ctx context.Context) VCpuCountRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VCpuCountRequestPtrOutput)
}

// Definition of VCpuCountRequest
type VCpuCountRequestOutput struct{ *pulumi.OutputState }

func (VCpuCountRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VCpuCountRequest)(nil)).Elem()
}

func (o VCpuCountRequestOutput) ToVCpuCountRequestOutput() VCpuCountRequestOutput {
	return o
}

func (o VCpuCountRequestOutput) ToVCpuCountRequestOutputWithContext(ctx context.Context) VCpuCountRequestOutput {
	return o
}

func (o VCpuCountRequestOutput) ToVCpuCountRequestPtrOutput() VCpuCountRequestPtrOutput {
	return o.ToVCpuCountRequestPtrOutputWithContext(context.Background())
}

func (o VCpuCountRequestOutput) ToVCpuCountRequestPtrOutputWithContext(ctx context.Context) VCpuCountRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VCpuCountRequest) *VCpuCountRequest {
		return &v
	}).(VCpuCountRequestPtrOutput)
}

// The maximum number of vCPUs.
func (o VCpuCountRequestOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VCpuCountRequest) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of vCPUs.
func (o VCpuCountRequestOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VCpuCountRequest) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type VCpuCountRequestPtrOutput struct{ *pulumi.OutputState }

func (VCpuCountRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VCpuCountRequest)(nil)).Elem()
}

func (o VCpuCountRequestPtrOutput) ToVCpuCountRequestPtrOutput() VCpuCountRequestPtrOutput {
	return o
}

func (o VCpuCountRequestPtrOutput) ToVCpuCountRequestPtrOutputWithContext(ctx context.Context) VCpuCountRequestPtrOutput {
	return o
}

func (o VCpuCountRequestPtrOutput) Elem() VCpuCountRequestOutput {
	return o.ApplyT(func(v *VCpuCountRequest) VCpuCountRequest {
		if v != nil {
			return *v
		}
		var ret VCpuCountRequest
		return ret
	}).(VCpuCountRequestOutput)
}

// The maximum number of vCPUs.
func (o VCpuCountRequestPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VCpuCountRequest) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of vCPUs.
func (o VCpuCountRequestPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VCpuCountRequest) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of VCpuCountRequest
type VCpuCountRequestResponse struct {
	// The maximum number of vCPUs.
	Max *int `pulumi:"max"`
	// The minimum number of vCPUs.
	Min *int `pulumi:"min"`
}

// Definition of VCpuCountRequest
type VCpuCountRequestResponseOutput struct{ *pulumi.OutputState }

func (VCpuCountRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VCpuCountRequestResponse)(nil)).Elem()
}

func (o VCpuCountRequestResponseOutput) ToVCpuCountRequestResponseOutput() VCpuCountRequestResponseOutput {
	return o
}

func (o VCpuCountRequestResponseOutput) ToVCpuCountRequestResponseOutputWithContext(ctx context.Context) VCpuCountRequestResponseOutput {
	return o
}

// The maximum number of vCPUs.
func (o VCpuCountRequestResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VCpuCountRequestResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of vCPUs.
func (o VCpuCountRequestResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VCpuCountRequestResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type VCpuCountRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (VCpuCountRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VCpuCountRequestResponse)(nil)).Elem()
}

func (o VCpuCountRequestResponsePtrOutput) ToVCpuCountRequestResponsePtrOutput() VCpuCountRequestResponsePtrOutput {
	return o
}

func (o VCpuCountRequestResponsePtrOutput) ToVCpuCountRequestResponsePtrOutputWithContext(ctx context.Context) VCpuCountRequestResponsePtrOutput {
	return o
}

func (o VCpuCountRequestResponsePtrOutput) Elem() VCpuCountRequestResponseOutput {
	return o.ApplyT(func(v *VCpuCountRequestResponse) VCpuCountRequestResponse {
		if v != nil {
			return *v
		}
		var ret VCpuCountRequestResponse
		return ret
	}).(VCpuCountRequestResponseOutput)
}

// The maximum number of vCPUs.
func (o VCpuCountRequestResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VCpuCountRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of vCPUs.
func (o VCpuCountRequestResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VCpuCountRequestResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Definition of VPC
type VPC struct {
	// *Private hosted zones only:* The ID of an Amazon VPC.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcId *string `pulumi:"vpcId"`
	// *Private hosted zones only:* The region that an Amazon VPC was created in.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcRegion *string `pulumi:"vpcRegion"`
}

// VPCInput is an input type that accepts VPCArgs and VPCOutput values.
// You can construct a concrete instance of `VPCInput` via:
//
//	VPCArgs{...}
type VPCInput interface {
	pulumi.Input

	ToVPCOutput() VPCOutput
	ToVPCOutputWithContext(context.Context) VPCOutput
}

// Definition of VPC
type VPCArgs struct {
	// *Private hosted zones only:* The ID of an Amazon VPC.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// *Private hosted zones only:* The region that an Amazon VPC was created in.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcRegion pulumi.StringPtrInput `pulumi:"vpcRegion"`
}

func (VPCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPC)(nil)).Elem()
}

func (i VPCArgs) ToVPCOutput() VPCOutput {
	return i.ToVPCOutputWithContext(context.Background())
}

func (i VPCArgs) ToVPCOutputWithContext(ctx context.Context) VPCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCOutput)
}

// VPCArrayInput is an input type that accepts VPCArray and VPCArrayOutput values.
// You can construct a concrete instance of `VPCArrayInput` via:
//
//	VPCArray{ VPCArgs{...} }
type VPCArrayInput interface {
	pulumi.Input

	ToVPCArrayOutput() VPCArrayOutput
	ToVPCArrayOutputWithContext(context.Context) VPCArrayOutput
}

type VPCArray []VPCInput

func (VPCArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPC)(nil)).Elem()
}

func (i VPCArray) ToVPCArrayOutput() VPCArrayOutput {
	return i.ToVPCArrayOutputWithContext(context.Background())
}

func (i VPCArray) ToVPCArrayOutputWithContext(ctx context.Context) VPCArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCArrayOutput)
}

// Definition of VPC
type VPCOutput struct{ *pulumi.OutputState }

func (VPCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPC)(nil)).Elem()
}

func (o VPCOutput) ToVPCOutput() VPCOutput {
	return o
}

func (o VPCOutput) ToVPCOutputWithContext(ctx context.Context) VPCOutput {
	return o
}

// *Private hosted zones only:* The ID of an Amazon VPC.  For public hosted zones, omit “VPCs“, “VPCId“, and “VPCRegion“.
func (o VPCOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPC) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// *Private hosted zones only:* The region that an Amazon VPC was created in.  For public hosted zones, omit “VPCs“, “VPCId“, and “VPCRegion“.
func (o VPCOutput) VpcRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPC) *string { return v.VpcRegion }).(pulumi.StringPtrOutput)
}

type VPCArrayOutput struct{ *pulumi.OutputState }

func (VPCArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPC)(nil)).Elem()
}

func (o VPCArrayOutput) ToVPCArrayOutput() VPCArrayOutput {
	return o
}

func (o VPCArrayOutput) ToVPCArrayOutputWithContext(ctx context.Context) VPCArrayOutput {
	return o
}

func (o VPCArrayOutput) Index(i pulumi.IntInput) VPCOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VPC {
		return vs[0].([]VPC)[vs[1].(int)]
	}).(VPCOutput)
}

// Definition of VPCDerivedInfo
type VPCDerivedInfo struct {
	// <p>The list of Availability Zones associated with the VPC subnets.</p>
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
	SubnetIds []string `pulumi:"subnetIds"`
	// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
	VpcId *string `pulumi:"vpcId"`
}

// VPCDerivedInfoInput is an input type that accepts VPCDerivedInfoArgs and VPCDerivedInfoOutput values.
// You can construct a concrete instance of `VPCDerivedInfoInput` via:
//
//	VPCDerivedInfoArgs{...}
type VPCDerivedInfoInput interface {
	pulumi.Input

	ToVPCDerivedInfoOutput() VPCDerivedInfoOutput
	ToVPCDerivedInfoOutputWithContext(context.Context) VPCDerivedInfoOutput
}

// Definition of VPCDerivedInfo
type VPCDerivedInfoArgs struct {
	// <p>The list of Availability Zones associated with the VPC subnets.</p>
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (VPCDerivedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCDerivedInfo)(nil)).Elem()
}

func (i VPCDerivedInfoArgs) ToVPCDerivedInfoOutput() VPCDerivedInfoOutput {
	return i.ToVPCDerivedInfoOutputWithContext(context.Background())
}

func (i VPCDerivedInfoArgs) ToVPCDerivedInfoOutputWithContext(ctx context.Context) VPCDerivedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCDerivedInfoOutput)
}

func (i VPCDerivedInfoArgs) ToVPCDerivedInfoPtrOutput() VPCDerivedInfoPtrOutput {
	return i.ToVPCDerivedInfoPtrOutputWithContext(context.Background())
}

func (i VPCDerivedInfoArgs) ToVPCDerivedInfoPtrOutputWithContext(ctx context.Context) VPCDerivedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCDerivedInfoOutput).ToVPCDerivedInfoPtrOutputWithContext(ctx)
}

// VPCDerivedInfoPtrInput is an input type that accepts VPCDerivedInfoArgs, VPCDerivedInfoPtr and VPCDerivedInfoPtrOutput values.
// You can construct a concrete instance of `VPCDerivedInfoPtrInput` via:
//
//	        VPCDerivedInfoArgs{...}
//
//	or:
//
//	        nil
type VPCDerivedInfoPtrInput interface {
	pulumi.Input

	ToVPCDerivedInfoPtrOutput() VPCDerivedInfoPtrOutput
	ToVPCDerivedInfoPtrOutputWithContext(context.Context) VPCDerivedInfoPtrOutput
}

type vpcderivedInfoPtrType VPCDerivedInfoArgs

func VPCDerivedInfoPtr(v *VPCDerivedInfoArgs) VPCDerivedInfoPtrInput {
	return (*vpcderivedInfoPtrType)(v)
}

func (*vpcderivedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCDerivedInfo)(nil)).Elem()
}

func (i *vpcderivedInfoPtrType) ToVPCDerivedInfoPtrOutput() VPCDerivedInfoPtrOutput {
	return i.ToVPCDerivedInfoPtrOutputWithContext(context.Background())
}

func (i *vpcderivedInfoPtrType) ToVPCDerivedInfoPtrOutputWithContext(ctx context.Context) VPCDerivedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCDerivedInfoPtrOutput)
}

// Definition of VPCDerivedInfo
type VPCDerivedInfoOutput struct{ *pulumi.OutputState }

func (VPCDerivedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCDerivedInfo)(nil)).Elem()
}

func (o VPCDerivedInfoOutput) ToVPCDerivedInfoOutput() VPCDerivedInfoOutput {
	return o
}

func (o VPCDerivedInfoOutput) ToVPCDerivedInfoOutputWithContext(ctx context.Context) VPCDerivedInfoOutput {
	return o
}

func (o VPCDerivedInfoOutput) ToVPCDerivedInfoPtrOutput() VPCDerivedInfoPtrOutput {
	return o.ToVPCDerivedInfoPtrOutputWithContext(context.Background())
}

func (o VPCDerivedInfoOutput) ToVPCDerivedInfoPtrOutputWithContext(ctx context.Context) VPCDerivedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VPCDerivedInfo) *VPCDerivedInfo {
		return &v
	}).(VPCDerivedInfoPtrOutput)
}

// <p>The list of Availability Zones associated with the VPC subnets.</p>
func (o VPCDerivedInfoOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPCDerivedInfo) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPCDerivedInfo) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPCDerivedInfo) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
func (o VPCDerivedInfoOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPCDerivedInfo) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VPCDerivedInfoPtrOutput struct{ *pulumi.OutputState }

func (VPCDerivedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCDerivedInfo)(nil)).Elem()
}

func (o VPCDerivedInfoPtrOutput) ToVPCDerivedInfoPtrOutput() VPCDerivedInfoPtrOutput {
	return o
}

func (o VPCDerivedInfoPtrOutput) ToVPCDerivedInfoPtrOutputWithContext(ctx context.Context) VPCDerivedInfoPtrOutput {
	return o
}

func (o VPCDerivedInfoPtrOutput) Elem() VPCDerivedInfoOutput {
	return o.ApplyT(func(v *VPCDerivedInfo) VPCDerivedInfo {
		if v != nil {
			return *v
		}
		var ret VPCDerivedInfo
		return ret
	}).(VPCDerivedInfoOutput)
}

// <p>The list of Availability Zones associated with the VPC subnets.</p>
func (o VPCDerivedInfoPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPCDerivedInfo) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPCDerivedInfo) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPCDerivedInfo) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
func (o VPCDerivedInfoPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPCDerivedInfo) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VPCDerivedInfo
type VPCDerivedInfoResponse struct {
	// <p>The list of Availability Zones associated with the VPC subnets.</p>
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
	SubnetIds []string `pulumi:"subnetIds"`
	// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
	VpcId *string `pulumi:"vpcId"`
}

// Definition of VPCDerivedInfo
type VPCDerivedInfoResponseOutput struct{ *pulumi.OutputState }

func (VPCDerivedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCDerivedInfoResponse)(nil)).Elem()
}

func (o VPCDerivedInfoResponseOutput) ToVPCDerivedInfoResponseOutput() VPCDerivedInfoResponseOutput {
	return o
}

func (o VPCDerivedInfoResponseOutput) ToVPCDerivedInfoResponseOutputWithContext(ctx context.Context) VPCDerivedInfoResponseOutput {
	return o
}

// <p>The list of Availability Zones associated with the VPC subnets.</p>
func (o VPCDerivedInfoResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPCDerivedInfoResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoResponseOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPCDerivedInfoResponse) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoResponseOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPCDerivedInfoResponse) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
func (o VPCDerivedInfoResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPCDerivedInfoResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VPCDerivedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (VPCDerivedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCDerivedInfoResponse)(nil)).Elem()
}

func (o VPCDerivedInfoResponsePtrOutput) ToVPCDerivedInfoResponsePtrOutput() VPCDerivedInfoResponsePtrOutput {
	return o
}

func (o VPCDerivedInfoResponsePtrOutput) ToVPCDerivedInfoResponsePtrOutputWithContext(ctx context.Context) VPCDerivedInfoResponsePtrOutput {
	return o
}

func (o VPCDerivedInfoResponsePtrOutput) Elem() VPCDerivedInfoResponseOutput {
	return o.ApplyT(func(v *VPCDerivedInfoResponse) VPCDerivedInfoResponse {
		if v != nil {
			return *v
		}
		var ret VPCDerivedInfoResponse
		return ret
	}).(VPCDerivedInfoResponseOutput)
}

// <p>The list of Availability Zones associated with the VPC subnets.</p>
func (o VPCDerivedInfoResponsePtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPCDerivedInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoResponsePtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPCDerivedInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// <p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>
func (o VPCDerivedInfoResponsePtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPCDerivedInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
func (o VPCDerivedInfoResponsePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPCDerivedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VPC
type VPCResponse struct {
	// *Private hosted zones only:* The ID of an Amazon VPC.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcId *string `pulumi:"vpcId"`
	// *Private hosted zones only:* The region that an Amazon VPC was created in.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcRegion *string `pulumi:"vpcRegion"`
}

// Definition of VPC
type VPCResponseOutput struct{ *pulumi.OutputState }

func (VPCResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCResponse)(nil)).Elem()
}

func (o VPCResponseOutput) ToVPCResponseOutput() VPCResponseOutput {
	return o
}

func (o VPCResponseOutput) ToVPCResponseOutputWithContext(ctx context.Context) VPCResponseOutput {
	return o
}

// *Private hosted zones only:* The ID of an Amazon VPC.  For public hosted zones, omit “VPCs“, “VPCId“, and “VPCRegion“.
func (o VPCResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPCResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// *Private hosted zones only:* The region that an Amazon VPC was created in.  For public hosted zones, omit “VPCs“, “VPCId“, and “VPCRegion“.
func (o VPCResponseOutput) VpcRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPCResponse) *string { return v.VpcRegion }).(pulumi.StringPtrOutput)
}

type VPCResponseArrayOutput struct{ *pulumi.OutputState }

func (VPCResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCResponse)(nil)).Elem()
}

func (o VPCResponseArrayOutput) ToVPCResponseArrayOutput() VPCResponseArrayOutput {
	return o
}

func (o VPCResponseArrayOutput) ToVPCResponseArrayOutputWithContext(ctx context.Context) VPCResponseArrayOutput {
	return o
}

func (o VPCResponseArrayOutput) Index(i pulumi.IntInput) VPCResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VPCResponse {
		return vs[0].([]VPCResponse)[vs[1].(int)]
	}).(VPCResponseOutput)
}

// Definition of VersioningConfiguration
type VersioningConfiguration struct {
	// The versioning state of the bucket.
	Status *string `pulumi:"status"`
}

// Defaults sets the appropriate defaults for VersioningConfiguration
func (val *VersioningConfiguration) Defaults() *VersioningConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Status == nil {
		status_ := "Suspended"
		tmp.Status = &status_
	}
	return &tmp
}

// VersioningConfigurationInput is an input type that accepts VersioningConfigurationArgs and VersioningConfigurationOutput values.
// You can construct a concrete instance of `VersioningConfigurationInput` via:
//
//	VersioningConfigurationArgs{...}
type VersioningConfigurationInput interface {
	pulumi.Input

	ToVersioningConfigurationOutput() VersioningConfigurationOutput
	ToVersioningConfigurationOutputWithContext(context.Context) VersioningConfigurationOutput
}

// Definition of VersioningConfiguration
type VersioningConfigurationArgs struct {
	// The versioning state of the bucket.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

// Defaults sets the appropriate defaults for VersioningConfigurationArgs
func (val *VersioningConfigurationArgs) Defaults() *VersioningConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Status == nil {
		tmp.Status = pulumi.StringPtr("Suspended")
	}
	return &tmp
}
func (VersioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VersioningConfiguration)(nil)).Elem()
}

func (i VersioningConfigurationArgs) ToVersioningConfigurationOutput() VersioningConfigurationOutput {
	return i.ToVersioningConfigurationOutputWithContext(context.Background())
}

func (i VersioningConfigurationArgs) ToVersioningConfigurationOutputWithContext(ctx context.Context) VersioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VersioningConfigurationOutput)
}

func (i VersioningConfigurationArgs) ToVersioningConfigurationPtrOutput() VersioningConfigurationPtrOutput {
	return i.ToVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i VersioningConfigurationArgs) ToVersioningConfigurationPtrOutputWithContext(ctx context.Context) VersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VersioningConfigurationOutput).ToVersioningConfigurationPtrOutputWithContext(ctx)
}

// VersioningConfigurationPtrInput is an input type that accepts VersioningConfigurationArgs, VersioningConfigurationPtr and VersioningConfigurationPtrOutput values.
// You can construct a concrete instance of `VersioningConfigurationPtrInput` via:
//
//	        VersioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type VersioningConfigurationPtrInput interface {
	pulumi.Input

	ToVersioningConfigurationPtrOutput() VersioningConfigurationPtrOutput
	ToVersioningConfigurationPtrOutputWithContext(context.Context) VersioningConfigurationPtrOutput
}

type versioningConfigurationPtrType VersioningConfigurationArgs

func VersioningConfigurationPtr(v *VersioningConfigurationArgs) VersioningConfigurationPtrInput {
	return (*versioningConfigurationPtrType)(v)
}

func (*versioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VersioningConfiguration)(nil)).Elem()
}

func (i *versioningConfigurationPtrType) ToVersioningConfigurationPtrOutput() VersioningConfigurationPtrOutput {
	return i.ToVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *versioningConfigurationPtrType) ToVersioningConfigurationPtrOutputWithContext(ctx context.Context) VersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VersioningConfigurationPtrOutput)
}

// Definition of VersioningConfiguration
type VersioningConfigurationOutput struct{ *pulumi.OutputState }

func (VersioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersioningConfiguration)(nil)).Elem()
}

func (o VersioningConfigurationOutput) ToVersioningConfigurationOutput() VersioningConfigurationOutput {
	return o
}

func (o VersioningConfigurationOutput) ToVersioningConfigurationOutputWithContext(ctx context.Context) VersioningConfigurationOutput {
	return o
}

func (o VersioningConfigurationOutput) ToVersioningConfigurationPtrOutput() VersioningConfigurationPtrOutput {
	return o.ToVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (o VersioningConfigurationOutput) ToVersioningConfigurationPtrOutputWithContext(ctx context.Context) VersioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VersioningConfiguration) *VersioningConfiguration {
		return &v
	}).(VersioningConfigurationPtrOutput)
}

// The versioning state of the bucket.
func (o VersioningConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersioningConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VersioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VersioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersioningConfiguration)(nil)).Elem()
}

func (o VersioningConfigurationPtrOutput) ToVersioningConfigurationPtrOutput() VersioningConfigurationPtrOutput {
	return o
}

func (o VersioningConfigurationPtrOutput) ToVersioningConfigurationPtrOutputWithContext(ctx context.Context) VersioningConfigurationPtrOutput {
	return o
}

func (o VersioningConfigurationPtrOutput) Elem() VersioningConfigurationOutput {
	return o.ApplyT(func(v *VersioningConfiguration) VersioningConfiguration {
		if v != nil {
			return *v
		}
		var ret VersioningConfiguration
		return ret
	}).(VersioningConfigurationOutput)
}

// The versioning state of the bucket.
func (o VersioningConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersioningConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of VersioningConfiguration
type VersioningConfigurationResponse struct {
	// The versioning state of the bucket.
	Status *string `pulumi:"status"`
}

// Defaults sets the appropriate defaults for VersioningConfigurationResponse
func (val *VersioningConfigurationResponse) Defaults() *VersioningConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Status == nil {
		status_ := "Suspended"
		tmp.Status = &status_
	}
	return &tmp
}

// Definition of VersioningConfiguration
type VersioningConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VersioningConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersioningConfigurationResponse)(nil)).Elem()
}

func (o VersioningConfigurationResponseOutput) ToVersioningConfigurationResponseOutput() VersioningConfigurationResponseOutput {
	return o
}

func (o VersioningConfigurationResponseOutput) ToVersioningConfigurationResponseOutputWithContext(ctx context.Context) VersioningConfigurationResponseOutput {
	return o
}

// The versioning state of the bucket.
func (o VersioningConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersioningConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VersioningConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VersioningConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersioningConfigurationResponse)(nil)).Elem()
}

func (o VersioningConfigurationResponsePtrOutput) ToVersioningConfigurationResponsePtrOutput() VersioningConfigurationResponsePtrOutput {
	return o
}

func (o VersioningConfigurationResponsePtrOutput) ToVersioningConfigurationResponsePtrOutputWithContext(ctx context.Context) VersioningConfigurationResponsePtrOutput {
	return o
}

func (o VersioningConfigurationResponsePtrOutput) Elem() VersioningConfigurationResponseOutput {
	return o.ApplyT(func(v *VersioningConfigurationResponse) VersioningConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VersioningConfigurationResponse
		return ret
	}).(VersioningConfigurationResponseOutput)
}

// The versioning state of the bucket.
func (o VersioningConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersioningConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Definition of ViewerCertificate
type ViewerCertificate struct {
	// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	AcmCertificateArn *string `pulumi:"acmCertificateArn"`
	// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)   +   ``MinimumProtocolVersion``   +   ``SslSupportMethod``
	CloudFrontDefaultCertificate *bool `pulumi:"cloudFrontDefaultCertificate"`
	// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	IamCertificateId *string `pulumi:"iamCertificateId"`
	// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically sets the security policy to ``TLSv1`` regardless of the value that you set here.
	MinimumProtocolVersion *string `pulumi:"minimumProtocolVersion"`
	// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
	SslSupportMethod *string `pulumi:"sslSupportMethod"`
}

// ViewerCertificateInput is an input type that accepts ViewerCertificateArgs and ViewerCertificateOutput values.
// You can construct a concrete instance of `ViewerCertificateInput` via:
//
//	ViewerCertificateArgs{...}
type ViewerCertificateInput interface {
	pulumi.Input

	ToViewerCertificateOutput() ViewerCertificateOutput
	ToViewerCertificateOutputWithContext(context.Context) ViewerCertificateOutput
}

// Definition of ViewerCertificate
type ViewerCertificateArgs struct {
	// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	AcmCertificateArn pulumi.StringPtrInput `pulumi:"acmCertificateArn"`
	// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)   +   ``MinimumProtocolVersion``   +   ``SslSupportMethod``
	CloudFrontDefaultCertificate pulumi.BoolPtrInput `pulumi:"cloudFrontDefaultCertificate"`
	// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	IamCertificateId pulumi.StringPtrInput `pulumi:"iamCertificateId"`
	// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically sets the security policy to ``TLSv1`` regardless of the value that you set here.
	MinimumProtocolVersion pulumi.StringPtrInput `pulumi:"minimumProtocolVersion"`
	// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
	SslSupportMethod pulumi.StringPtrInput `pulumi:"sslSupportMethod"`
}

func (ViewerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewerCertificate)(nil)).Elem()
}

func (i ViewerCertificateArgs) ToViewerCertificateOutput() ViewerCertificateOutput {
	return i.ToViewerCertificateOutputWithContext(context.Background())
}

func (i ViewerCertificateArgs) ToViewerCertificateOutputWithContext(ctx context.Context) ViewerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViewerCertificateOutput)
}

func (i ViewerCertificateArgs) ToViewerCertificatePtrOutput() ViewerCertificatePtrOutput {
	return i.ToViewerCertificatePtrOutputWithContext(context.Background())
}

func (i ViewerCertificateArgs) ToViewerCertificatePtrOutputWithContext(ctx context.Context) ViewerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViewerCertificateOutput).ToViewerCertificatePtrOutputWithContext(ctx)
}

// ViewerCertificatePtrInput is an input type that accepts ViewerCertificateArgs, ViewerCertificatePtr and ViewerCertificatePtrOutput values.
// You can construct a concrete instance of `ViewerCertificatePtrInput` via:
//
//	        ViewerCertificateArgs{...}
//
//	or:
//
//	        nil
type ViewerCertificatePtrInput interface {
	pulumi.Input

	ToViewerCertificatePtrOutput() ViewerCertificatePtrOutput
	ToViewerCertificatePtrOutputWithContext(context.Context) ViewerCertificatePtrOutput
}

type viewerCertificatePtrType ViewerCertificateArgs

func ViewerCertificatePtr(v *ViewerCertificateArgs) ViewerCertificatePtrInput {
	return (*viewerCertificatePtrType)(v)
}

func (*viewerCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ViewerCertificate)(nil)).Elem()
}

func (i *viewerCertificatePtrType) ToViewerCertificatePtrOutput() ViewerCertificatePtrOutput {
	return i.ToViewerCertificatePtrOutputWithContext(context.Background())
}

func (i *viewerCertificatePtrType) ToViewerCertificatePtrOutputWithContext(ctx context.Context) ViewerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViewerCertificatePtrOutput)
}

// Definition of ViewerCertificate
type ViewerCertificateOutput struct{ *pulumi.OutputState }

func (ViewerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewerCertificate)(nil)).Elem()
}

func (o ViewerCertificateOutput) ToViewerCertificateOutput() ViewerCertificateOutput {
	return o
}

func (o ViewerCertificateOutput) ToViewerCertificateOutputWithContext(ctx context.Context) ViewerCertificateOutput {
	return o
}

func (o ViewerCertificateOutput) ToViewerCertificatePtrOutput() ViewerCertificatePtrOutput {
	return o.ToViewerCertificatePtrOutputWithContext(context.Background())
}

func (o ViewerCertificateOutput) ToViewerCertificatePtrOutputWithContext(ctx context.Context) ViewerCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ViewerCertificate) *ViewerCertificate {
		return &v
	}).(ViewerCertificatePtrOutput)
}

// In CloudFormation, this field name is “AcmCertificateArn“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (“us-east-1“). If you specify an ACM certificate ARN, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificateOutput) AcmCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificate) *string { return v.AcmCertificateArn }).(pulumi.StringPtrOutput)
}

// If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, set this field to “true“. If the distribution uses “Aliases“ (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   “AcmCertificateArn“ or “IamCertificateId“ (specify a value for one, not both)   +   “MinimumProtocolVersion“   +   “SslSupportMethod“
func (o ViewerCertificateOutput) CloudFrontDefaultCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ViewerCertificate) *bool { return v.CloudFrontDefaultCertificate }).(pulumi.BoolPtrOutput)
}

// In CloudFormation, this field name is “IamCertificateId“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificateOutput) IamCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificate) *string { return v.IamCertificateId }).(pulumi.StringPtrOutput)
}

// If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set “SSLSupportMethod“ to “sni-only“), you must specify “TLSv1“ or higher. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.) If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“ (you set “CloudFrontDefaultCertificate“ to “true“), CloudFront automatically sets the security policy to “TLSv1“ regardless of the value that you set here.
func (o ViewerCertificateOutput) MinimumProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificate) *string { return v.MinimumProtocolVersion }).(pulumi.StringPtrOutput)
}

// In CloudFormation, this field name is “SslSupportMethod“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   “sni-only“ – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   “vip“ – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   “static-ip“ - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, don't set a value for this field.
func (o ViewerCertificateOutput) SslSupportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificate) *string { return v.SslSupportMethod }).(pulumi.StringPtrOutput)
}

type ViewerCertificatePtrOutput struct{ *pulumi.OutputState }

func (ViewerCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ViewerCertificate)(nil)).Elem()
}

func (o ViewerCertificatePtrOutput) ToViewerCertificatePtrOutput() ViewerCertificatePtrOutput {
	return o
}

func (o ViewerCertificatePtrOutput) ToViewerCertificatePtrOutputWithContext(ctx context.Context) ViewerCertificatePtrOutput {
	return o
}

func (o ViewerCertificatePtrOutput) Elem() ViewerCertificateOutput {
	return o.ApplyT(func(v *ViewerCertificate) ViewerCertificate {
		if v != nil {
			return *v
		}
		var ret ViewerCertificate
		return ret
	}).(ViewerCertificateOutput)
}

// In CloudFormation, this field name is “AcmCertificateArn“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (“us-east-1“). If you specify an ACM certificate ARN, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificatePtrOutput) AcmCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.AcmCertificateArn
	}).(pulumi.StringPtrOutput)
}

// If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, set this field to “true“. If the distribution uses “Aliases“ (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   “AcmCertificateArn“ or “IamCertificateId“ (specify a value for one, not both)   +   “MinimumProtocolVersion“   +   “SslSupportMethod“
func (o ViewerCertificatePtrOutput) CloudFrontDefaultCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ViewerCertificate) *bool {
		if v == nil {
			return nil
		}
		return v.CloudFrontDefaultCertificate
	}).(pulumi.BoolPtrOutput)
}

// In CloudFormation, this field name is “IamCertificateId“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificatePtrOutput) IamCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.IamCertificateId
	}).(pulumi.StringPtrOutput)
}

// If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set “SSLSupportMethod“ to “sni-only“), you must specify “TLSv1“ or higher. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.) If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“ (you set “CloudFrontDefaultCertificate“ to “true“), CloudFront automatically sets the security policy to “TLSv1“ regardless of the value that you set here.
func (o ViewerCertificatePtrOutput) MinimumProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.MinimumProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// In CloudFormation, this field name is “SslSupportMethod“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   “sni-only“ – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   “vip“ – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   “static-ip“ - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, don't set a value for this field.
func (o ViewerCertificatePtrOutput) SslSupportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SslSupportMethod
	}).(pulumi.StringPtrOutput)
}

// Definition of ViewerCertificate
type ViewerCertificateResponse struct {
	// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	AcmCertificateArn *string `pulumi:"acmCertificateArn"`
	// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)   +   ``MinimumProtocolVersion``   +   ``SslSupportMethod``
	CloudFrontDefaultCertificate *bool `pulumi:"cloudFrontDefaultCertificate"`
	// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	IamCertificateId *string `pulumi:"iamCertificateId"`
	// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically sets the security policy to ``TLSv1`` regardless of the value that you set here.
	MinimumProtocolVersion *string `pulumi:"minimumProtocolVersion"`
	// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
	SslSupportMethod *string `pulumi:"sslSupportMethod"`
}

// Definition of ViewerCertificate
type ViewerCertificateResponseOutput struct{ *pulumi.OutputState }

func (ViewerCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewerCertificateResponse)(nil)).Elem()
}

func (o ViewerCertificateResponseOutput) ToViewerCertificateResponseOutput() ViewerCertificateResponseOutput {
	return o
}

func (o ViewerCertificateResponseOutput) ToViewerCertificateResponseOutputWithContext(ctx context.Context) ViewerCertificateResponseOutput {
	return o
}

// In CloudFormation, this field name is “AcmCertificateArn“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (“us-east-1“). If you specify an ACM certificate ARN, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificateResponseOutput) AcmCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificateResponse) *string { return v.AcmCertificateArn }).(pulumi.StringPtrOutput)
}

// If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, set this field to “true“. If the distribution uses “Aliases“ (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   “AcmCertificateArn“ or “IamCertificateId“ (specify a value for one, not both)   +   “MinimumProtocolVersion“   +   “SslSupportMethod“
func (o ViewerCertificateResponseOutput) CloudFrontDefaultCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ViewerCertificateResponse) *bool { return v.CloudFrontDefaultCertificate }).(pulumi.BoolPtrOutput)
}

// In CloudFormation, this field name is “IamCertificateId“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificateResponseOutput) IamCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificateResponse) *string { return v.IamCertificateId }).(pulumi.StringPtrOutput)
}

// If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set “SSLSupportMethod“ to “sni-only“), you must specify “TLSv1“ or higher. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.) If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“ (you set “CloudFrontDefaultCertificate“ to “true“), CloudFront automatically sets the security policy to “TLSv1“ regardless of the value that you set here.
func (o ViewerCertificateResponseOutput) MinimumProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificateResponse) *string { return v.MinimumProtocolVersion }).(pulumi.StringPtrOutput)
}

// In CloudFormation, this field name is “SslSupportMethod“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   “sni-only“ – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   “vip“ – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   “static-ip“ - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, don't set a value for this field.
func (o ViewerCertificateResponseOutput) SslSupportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ViewerCertificateResponse) *string { return v.SslSupportMethod }).(pulumi.StringPtrOutput)
}

type ViewerCertificateResponsePtrOutput struct{ *pulumi.OutputState }

func (ViewerCertificateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ViewerCertificateResponse)(nil)).Elem()
}

func (o ViewerCertificateResponsePtrOutput) ToViewerCertificateResponsePtrOutput() ViewerCertificateResponsePtrOutput {
	return o
}

func (o ViewerCertificateResponsePtrOutput) ToViewerCertificateResponsePtrOutputWithContext(ctx context.Context) ViewerCertificateResponsePtrOutput {
	return o
}

func (o ViewerCertificateResponsePtrOutput) Elem() ViewerCertificateResponseOutput {
	return o.ApplyT(func(v *ViewerCertificateResponse) ViewerCertificateResponse {
		if v != nil {
			return *v
		}
		var ret ViewerCertificateResponse
		return ret
	}).(ViewerCertificateResponseOutput)
}

// In CloudFormation, this field name is “AcmCertificateArn“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (“us-east-1“). If you specify an ACM certificate ARN, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificateResponsePtrOutput) AcmCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcmCertificateArn
	}).(pulumi.StringPtrOutput)
}

// If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, set this field to “true“. If the distribution uses “Aliases“ (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   “AcmCertificateArn“ or “IamCertificateId“ (specify a value for one, not both)   +   “MinimumProtocolVersion“   +   “SslSupportMethod“
func (o ViewerCertificateResponsePtrOutput) CloudFrontDefaultCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ViewerCertificateResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloudFrontDefaultCertificate
	}).(pulumi.BoolPtrOutput)
}

// In CloudFormation, this field name is “IamCertificateId“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for “MinimumProtocolVersion“ and “SSLSupportMethod“. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.)
func (o ViewerCertificateResponsePtrOutput) IamCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.IamCertificateId
	}).(pulumi.StringPtrOutput)
}

// If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set “SSLSupportMethod“ to “sni-only“), you must specify “TLSv1“ or higher. (In CloudFormation, the field name is “SslSupportMethod“. Note the different capitalization.) If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“ (you set “CloudFrontDefaultCertificate“ to “true“), CloudFront automatically sets the security policy to “TLSv1“ regardless of the value that you set here.
func (o ViewerCertificateResponsePtrOutput) MinimumProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinimumProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// In CloudFormation, this field name is “SslSupportMethod“. Note the different capitalization.  If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   “sni-only“ – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   “vip“ – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   “static-ip“ - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, don't set a value for this field.
func (o ViewerCertificateResponsePtrOutput) SslSupportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ViewerCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.SslSupportMethod
	}).(pulumi.StringPtrOutput)
}

// Definition of VirtualizationTypeEnumValue
type VirtualizationTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// VirtualizationTypeEnumValueInput is an input type that accepts VirtualizationTypeEnumValueArgs and VirtualizationTypeEnumValueOutput values.
// You can construct a concrete instance of `VirtualizationTypeEnumValueInput` via:
//
//	VirtualizationTypeEnumValueArgs{...}
type VirtualizationTypeEnumValueInput interface {
	pulumi.Input

	ToVirtualizationTypeEnumValueOutput() VirtualizationTypeEnumValueOutput
	ToVirtualizationTypeEnumValueOutputWithContext(context.Context) VirtualizationTypeEnumValueOutput
}

// Definition of VirtualizationTypeEnumValue
type VirtualizationTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VirtualizationTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualizationTypeEnumValue)(nil)).Elem()
}

func (i VirtualizationTypeEnumValueArgs) ToVirtualizationTypeEnumValueOutput() VirtualizationTypeEnumValueOutput {
	return i.ToVirtualizationTypeEnumValueOutputWithContext(context.Background())
}

func (i VirtualizationTypeEnumValueArgs) ToVirtualizationTypeEnumValueOutputWithContext(ctx context.Context) VirtualizationTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualizationTypeEnumValueOutput)
}

func (i VirtualizationTypeEnumValueArgs) ToVirtualizationTypeEnumValuePtrOutput() VirtualizationTypeEnumValuePtrOutput {
	return i.ToVirtualizationTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i VirtualizationTypeEnumValueArgs) ToVirtualizationTypeEnumValuePtrOutputWithContext(ctx context.Context) VirtualizationTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualizationTypeEnumValueOutput).ToVirtualizationTypeEnumValuePtrOutputWithContext(ctx)
}

// VirtualizationTypeEnumValuePtrInput is an input type that accepts VirtualizationTypeEnumValueArgs, VirtualizationTypeEnumValuePtr and VirtualizationTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `VirtualizationTypeEnumValuePtrInput` via:
//
//	        VirtualizationTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type VirtualizationTypeEnumValuePtrInput interface {
	pulumi.Input

	ToVirtualizationTypeEnumValuePtrOutput() VirtualizationTypeEnumValuePtrOutput
	ToVirtualizationTypeEnumValuePtrOutputWithContext(context.Context) VirtualizationTypeEnumValuePtrOutput
}

type virtualizationTypeEnumValuePtrType VirtualizationTypeEnumValueArgs

func VirtualizationTypeEnumValuePtr(v *VirtualizationTypeEnumValueArgs) VirtualizationTypeEnumValuePtrInput {
	return (*virtualizationTypeEnumValuePtrType)(v)
}

func (*virtualizationTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualizationTypeEnumValue)(nil)).Elem()
}

func (i *virtualizationTypeEnumValuePtrType) ToVirtualizationTypeEnumValuePtrOutput() VirtualizationTypeEnumValuePtrOutput {
	return i.ToVirtualizationTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *virtualizationTypeEnumValuePtrType) ToVirtualizationTypeEnumValuePtrOutputWithContext(ctx context.Context) VirtualizationTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualizationTypeEnumValuePtrOutput)
}

// Definition of VirtualizationTypeEnumValue
type VirtualizationTypeEnumValueOutput struct{ *pulumi.OutputState }

func (VirtualizationTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualizationTypeEnumValue)(nil)).Elem()
}

func (o VirtualizationTypeEnumValueOutput) ToVirtualizationTypeEnumValueOutput() VirtualizationTypeEnumValueOutput {
	return o
}

func (o VirtualizationTypeEnumValueOutput) ToVirtualizationTypeEnumValueOutputWithContext(ctx context.Context) VirtualizationTypeEnumValueOutput {
	return o
}

func (o VirtualizationTypeEnumValueOutput) ToVirtualizationTypeEnumValuePtrOutput() VirtualizationTypeEnumValuePtrOutput {
	return o.ToVirtualizationTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o VirtualizationTypeEnumValueOutput) ToVirtualizationTypeEnumValuePtrOutputWithContext(ctx context.Context) VirtualizationTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualizationTypeEnumValue) *VirtualizationTypeEnumValue {
		return &v
	}).(VirtualizationTypeEnumValuePtrOutput)
}

// Property value
func (o VirtualizationTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualizationTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VirtualizationTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (VirtualizationTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualizationTypeEnumValue)(nil)).Elem()
}

func (o VirtualizationTypeEnumValuePtrOutput) ToVirtualizationTypeEnumValuePtrOutput() VirtualizationTypeEnumValuePtrOutput {
	return o
}

func (o VirtualizationTypeEnumValuePtrOutput) ToVirtualizationTypeEnumValuePtrOutputWithContext(ctx context.Context) VirtualizationTypeEnumValuePtrOutput {
	return o
}

func (o VirtualizationTypeEnumValuePtrOutput) Elem() VirtualizationTypeEnumValueOutput {
	return o.ApplyT(func(v *VirtualizationTypeEnumValue) VirtualizationTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret VirtualizationTypeEnumValue
		return ret
	}).(VirtualizationTypeEnumValueOutput)
}

// Property value
func (o VirtualizationTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualizationTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of VirtualizationTypeEnumValue
type VirtualizationTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of VirtualizationTypeEnumValue
type VirtualizationTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (VirtualizationTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualizationTypeEnumValueResponse)(nil)).Elem()
}

func (o VirtualizationTypeEnumValueResponseOutput) ToVirtualizationTypeEnumValueResponseOutput() VirtualizationTypeEnumValueResponseOutput {
	return o
}

func (o VirtualizationTypeEnumValueResponseOutput) ToVirtualizationTypeEnumValueResponseOutputWithContext(ctx context.Context) VirtualizationTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o VirtualizationTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualizationTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VirtualizationTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualizationTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualizationTypeEnumValueResponse)(nil)).Elem()
}

func (o VirtualizationTypeEnumValueResponsePtrOutput) ToVirtualizationTypeEnumValueResponsePtrOutput() VirtualizationTypeEnumValueResponsePtrOutput {
	return o
}

func (o VirtualizationTypeEnumValueResponsePtrOutput) ToVirtualizationTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) VirtualizationTypeEnumValueResponsePtrOutput {
	return o
}

func (o VirtualizationTypeEnumValueResponsePtrOutput) Elem() VirtualizationTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *VirtualizationTypeEnumValueResponse) VirtualizationTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret VirtualizationTypeEnumValueResponse
		return ret
	}).(VirtualizationTypeEnumValueResponseOutput)
}

// Property value
func (o VirtualizationTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualizationTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Volume
type Volume struct {
	// Indicates whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration. To configure a volume at launch time, use this task definition revision and specify a ``volumeConfigurations`` object when calling the ``CreateService``, ``UpdateService``, ``RunTask`` or ``StartTask`` APIs.
	ConfiguredAtLaunch *bool `pulumi:"configuredAtLaunch"`
	// This parameter is specified when you use Docker volumes. Windows containers only support the use of the ``local`` driver. To use bind mounts, specify the ``host`` parameter instead.  Docker volumes aren't supported by tasks run on FARGATElong. The ``DockerVolumeConfiguration`` property specifies a Docker volume configuration and is used when you use Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the ``local`` driver. To use bind mounts, specify a ``host`` instead.
	DockerVolumeConfiguration *DockerVolumeConfiguration `pulumi:"dockerVolumeConfiguration"`
	// This parameter is specified when you use an Amazon Elastic File System file system for task storage. This parameter is specified when you're using an Amazon Elastic File System file system for task storage. For more information, see [Amazon EFS volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
	EfsVolumeConfiguration *EFSVolumeConfiguration `pulumi:"efsVolumeConfiguration"`
	// This parameter is specified when you use Amazon FSx for Windows File Server file system for task storage. This parameter is specified when you're using [Amazon FSx for Windows File Server](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. For more information and the input format, see [Amazon FSx for Windows File Server volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
	FSxWindowsFileServerVolumeConfiguration *FSxWindowsFileServerVolumeConfiguration `pulumi:"fSxWindowsFileServerVolumeConfiguration"`
	// This parameter is specified when you use bind mount host volumes. The contents of the ``host`` parameter determine whether your bind mount host volume persists on the host container instance and where it's stored. If the ``host`` parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running. Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount directories on a different drive, and mount point can't be across drives. For example, you can mount ``C:\my\path:C:\my\path`` and ``D:\:D:\``, but not ``D:\my\path:C:\my\path`` or ``D:\:C:\my\path``. The ``HostVolumeProperties`` property specifies details on a container instance bind mount host volume.
	Host *HostVolumeProperties `pulumi:"host"`
	// The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. When using a volume configured at launch, the ``name`` is required and must also be specified as the volume name in the ``ServiceVolumeConfiguration`` or ``TaskVolumeConfiguration`` parameter when creating your service or standalone task. For all other types of volumes, this name is referenced in the ``sourceVolume`` parameter of the ``mountPoints`` object in the container definition. When a volume is using the ``efsVolumeConfiguration``, the name is required.
	Name *string `pulumi:"name"`
}

// VolumeInput is an input type that accepts VolumeArgs and VolumeOutput values.
// You can construct a concrete instance of `VolumeInput` via:
//
//	VolumeArgs{...}
type VolumeInput interface {
	pulumi.Input

	ToVolumeOutput() VolumeOutput
	ToVolumeOutputWithContext(context.Context) VolumeOutput
}

// Definition of Volume
type VolumeArgs struct {
	// Indicates whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration. To configure a volume at launch time, use this task definition revision and specify a ``volumeConfigurations`` object when calling the ``CreateService``, ``UpdateService``, ``RunTask`` or ``StartTask`` APIs.
	ConfiguredAtLaunch pulumi.BoolPtrInput `pulumi:"configuredAtLaunch"`
	// This parameter is specified when you use Docker volumes. Windows containers only support the use of the ``local`` driver. To use bind mounts, specify the ``host`` parameter instead.  Docker volumes aren't supported by tasks run on FARGATElong. The ``DockerVolumeConfiguration`` property specifies a Docker volume configuration and is used when you use Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the ``local`` driver. To use bind mounts, specify a ``host`` instead.
	DockerVolumeConfiguration DockerVolumeConfigurationPtrInput `pulumi:"dockerVolumeConfiguration"`
	// This parameter is specified when you use an Amazon Elastic File System file system for task storage. This parameter is specified when you're using an Amazon Elastic File System file system for task storage. For more information, see [Amazon EFS volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
	EfsVolumeConfiguration EFSVolumeConfigurationPtrInput `pulumi:"efsVolumeConfiguration"`
	// This parameter is specified when you use Amazon FSx for Windows File Server file system for task storage. This parameter is specified when you're using [Amazon FSx for Windows File Server](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. For more information and the input format, see [Amazon FSx for Windows File Server volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
	FSxWindowsFileServerVolumeConfiguration FSxWindowsFileServerVolumeConfigurationPtrInput `pulumi:"fSxWindowsFileServerVolumeConfiguration"`
	// This parameter is specified when you use bind mount host volumes. The contents of the ``host`` parameter determine whether your bind mount host volume persists on the host container instance and where it's stored. If the ``host`` parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running. Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount directories on a different drive, and mount point can't be across drives. For example, you can mount ``C:\my\path:C:\my\path`` and ``D:\:D:\``, but not ``D:\my\path:C:\my\path`` or ``D:\:C:\my\path``. The ``HostVolumeProperties`` property specifies details on a container instance bind mount host volume.
	Host HostVolumePropertiesPtrInput `pulumi:"host"`
	// The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. When using a volume configured at launch, the ``name`` is required and must also be specified as the volume name in the ``ServiceVolumeConfiguration`` or ``TaskVolumeConfiguration`` parameter when creating your service or standalone task. For all other types of volumes, this name is referenced in the ``sourceVolume`` parameter of the ``mountPoints`` object in the container definition. When a volume is using the ``efsVolumeConfiguration``, the name is required.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Volume)(nil)).Elem()
}

func (i VolumeArgs) ToVolumeOutput() VolumeOutput {
	return i.ToVolumeOutputWithContext(context.Background())
}

func (i VolumeArgs) ToVolumeOutputWithContext(ctx context.Context) VolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeOutput)
}

// VolumeArrayInput is an input type that accepts VolumeArray and VolumeArrayOutput values.
// You can construct a concrete instance of `VolumeArrayInput` via:
//
//	VolumeArray{ VolumeArgs{...} }
type VolumeArrayInput interface {
	pulumi.Input

	ToVolumeArrayOutput() VolumeArrayOutput
	ToVolumeArrayOutputWithContext(context.Context) VolumeArrayOutput
}

type VolumeArray []VolumeInput

func (VolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Volume)(nil)).Elem()
}

func (i VolumeArray) ToVolumeArrayOutput() VolumeArrayOutput {
	return i.ToVolumeArrayOutputWithContext(context.Background())
}

func (i VolumeArray) ToVolumeArrayOutputWithContext(ctx context.Context) VolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeArrayOutput)
}

// Definition of Volume
type VolumeOutput struct{ *pulumi.OutputState }

func (VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Volume)(nil)).Elem()
}

func (o VolumeOutput) ToVolumeOutput() VolumeOutput {
	return o
}

func (o VolumeOutput) ToVolumeOutputWithContext(ctx context.Context) VolumeOutput {
	return o
}

// Indicates whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration. To configure a volume at launch time, use this task definition revision and specify a “volumeConfigurations“ object when calling the “CreateService“, “UpdateService“, “RunTask“ or “StartTask“ APIs.
func (o VolumeOutput) ConfiguredAtLaunch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Volume) *bool { return v.ConfiguredAtLaunch }).(pulumi.BoolPtrOutput)
}

// This parameter is specified when you use Docker volumes. Windows containers only support the use of the “local“ driver. To use bind mounts, specify the “host“ parameter instead.  Docker volumes aren't supported by tasks run on FARGATElong. The “DockerVolumeConfiguration“ property specifies a Docker volume configuration and is used when you use Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the “local“ driver. To use bind mounts, specify a “host“ instead.
func (o VolumeOutput) DockerVolumeConfiguration() DockerVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v Volume) *DockerVolumeConfiguration { return v.DockerVolumeConfiguration }).(DockerVolumeConfigurationPtrOutput)
}

// This parameter is specified when you use an Amazon Elastic File System file system for task storage. This parameter is specified when you're using an Amazon Elastic File System file system for task storage. For more information, see [Amazon EFS volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o VolumeOutput) EfsVolumeConfiguration() EFSVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v Volume) *EFSVolumeConfiguration { return v.EfsVolumeConfiguration }).(EFSVolumeConfigurationPtrOutput)
}

// This parameter is specified when you use Amazon FSx for Windows File Server file system for task storage. This parameter is specified when you're using [Amazon FSx for Windows File Server](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. For more information and the input format, see [Amazon FSx for Windows File Server volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o VolumeOutput) FSxWindowsFileServerVolumeConfiguration() FSxWindowsFileServerVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v Volume) *FSxWindowsFileServerVolumeConfiguration {
		return v.FSxWindowsFileServerVolumeConfiguration
	}).(FSxWindowsFileServerVolumeConfigurationPtrOutput)
}

// This parameter is specified when you use bind mount host volumes. The contents of the “host“ parameter determine whether your bind mount host volume persists on the host container instance and where it's stored. If the “host“ parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running. Windows containers can mount whole directories on the same drive as “$env:ProgramData“. Windows containers can't mount directories on a different drive, and mount point can't be across drives. For example, you can mount “C:\my\path:C:\my\path“ and “D:\:D:\“, but not “D:\my\path:C:\my\path“ or “D:\:C:\my\path“. The “HostVolumeProperties“ property specifies details on a container instance bind mount host volume.
func (o VolumeOutput) Host() HostVolumePropertiesPtrOutput {
	return o.ApplyT(func(v Volume) *HostVolumeProperties { return v.Host }).(HostVolumePropertiesPtrOutput)
}

// The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. When using a volume configured at launch, the “name“ is required and must also be specified as the volume name in the “ServiceVolumeConfiguration“ or “TaskVolumeConfiguration“ parameter when creating your service or standalone task. For all other types of volumes, this name is referenced in the “sourceVolume“ parameter of the “mountPoints“ object in the container definition. When a volume is using the “efsVolumeConfiguration“, the name is required.
func (o VolumeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Volume) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VolumeArrayOutput struct{ *pulumi.OutputState }

func (VolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Volume)(nil)).Elem()
}

func (o VolumeArrayOutput) ToVolumeArrayOutput() VolumeArrayOutput {
	return o
}

func (o VolumeArrayOutput) ToVolumeArrayOutputWithContext(ctx context.Context) VolumeArrayOutput {
	return o
}

func (o VolumeArrayOutput) Index(i pulumi.IntInput) VolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Volume {
		return vs[0].([]Volume)[vs[1].(int)]
	}).(VolumeOutput)
}

// Definition of VolumeFrom
type VolumeFrom struct {
	// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.
	ReadOnly *bool `pulumi:"readOnly"`
	// The name of another container within the same task definition to mount volumes from.
	SourceContainer *string `pulumi:"sourceContainer"`
}

// VolumeFromInput is an input type that accepts VolumeFromArgs and VolumeFromOutput values.
// You can construct a concrete instance of `VolumeFromInput` via:
//
//	VolumeFromArgs{...}
type VolumeFromInput interface {
	pulumi.Input

	ToVolumeFromOutput() VolumeFromOutput
	ToVolumeFromOutputWithContext(context.Context) VolumeFromOutput
}

// Definition of VolumeFrom
type VolumeFromArgs struct {
	// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The name of another container within the same task definition to mount volumes from.
	SourceContainer pulumi.StringPtrInput `pulumi:"sourceContainer"`
}

func (VolumeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFrom)(nil)).Elem()
}

func (i VolumeFromArgs) ToVolumeFromOutput() VolumeFromOutput {
	return i.ToVolumeFromOutputWithContext(context.Background())
}

func (i VolumeFromArgs) ToVolumeFromOutputWithContext(ctx context.Context) VolumeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeFromOutput)
}

// VolumeFromArrayInput is an input type that accepts VolumeFromArray and VolumeFromArrayOutput values.
// You can construct a concrete instance of `VolumeFromArrayInput` via:
//
//	VolumeFromArray{ VolumeFromArgs{...} }
type VolumeFromArrayInput interface {
	pulumi.Input

	ToVolumeFromArrayOutput() VolumeFromArrayOutput
	ToVolumeFromArrayOutputWithContext(context.Context) VolumeFromArrayOutput
}

type VolumeFromArray []VolumeFromInput

func (VolumeFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFrom)(nil)).Elem()
}

func (i VolumeFromArray) ToVolumeFromArrayOutput() VolumeFromArrayOutput {
	return i.ToVolumeFromArrayOutputWithContext(context.Background())
}

func (i VolumeFromArray) ToVolumeFromArrayOutputWithContext(ctx context.Context) VolumeFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeFromArrayOutput)
}

// Definition of VolumeFrom
type VolumeFromOutput struct{ *pulumi.OutputState }

func (VolumeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFrom)(nil)).Elem()
}

func (o VolumeFromOutput) ToVolumeFromOutput() VolumeFromOutput {
	return o
}

func (o VolumeFromOutput) ToVolumeFromOutputWithContext(ctx context.Context) VolumeFromOutput {
	return o
}

// If this value is “true“, the container has read-only access to the volume. If this value is “false“, then the container can write to the volume. The default value is “false“.
func (o VolumeFromOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeFrom) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The name of another container within the same task definition to mount volumes from.
func (o VolumeFromOutput) SourceContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFrom) *string { return v.SourceContainer }).(pulumi.StringPtrOutput)
}

type VolumeFromArrayOutput struct{ *pulumi.OutputState }

func (VolumeFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFrom)(nil)).Elem()
}

func (o VolumeFromArrayOutput) ToVolumeFromArrayOutput() VolumeFromArrayOutput {
	return o
}

func (o VolumeFromArrayOutput) ToVolumeFromArrayOutputWithContext(ctx context.Context) VolumeFromArrayOutput {
	return o
}

func (o VolumeFromArrayOutput) Index(i pulumi.IntInput) VolumeFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeFrom {
		return vs[0].([]VolumeFrom)[vs[1].(int)]
	}).(VolumeFromOutput)
}

// Definition of VolumeFrom
type VolumeFromResponse struct {
	// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.
	ReadOnly *bool `pulumi:"readOnly"`
	// The name of another container within the same task definition to mount volumes from.
	SourceContainer *string `pulumi:"sourceContainer"`
}

// Definition of VolumeFrom
type VolumeFromResponseOutput struct{ *pulumi.OutputState }

func (VolumeFromResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFromResponse)(nil)).Elem()
}

func (o VolumeFromResponseOutput) ToVolumeFromResponseOutput() VolumeFromResponseOutput {
	return o
}

func (o VolumeFromResponseOutput) ToVolumeFromResponseOutputWithContext(ctx context.Context) VolumeFromResponseOutput {
	return o
}

// If this value is “true“, the container has read-only access to the volume. If this value is “false“, then the container can write to the volume. The default value is “false“.
func (o VolumeFromResponseOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeFromResponse) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The name of another container within the same task definition to mount volumes from.
func (o VolumeFromResponseOutput) SourceContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFromResponse) *string { return v.SourceContainer }).(pulumi.StringPtrOutput)
}

type VolumeFromResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeFromResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFromResponse)(nil)).Elem()
}

func (o VolumeFromResponseArrayOutput) ToVolumeFromResponseArrayOutput() VolumeFromResponseArrayOutput {
	return o
}

func (o VolumeFromResponseArrayOutput) ToVolumeFromResponseArrayOutputWithContext(ctx context.Context) VolumeFromResponseArrayOutput {
	return o
}

func (o VolumeFromResponseArrayOutput) Index(i pulumi.IntInput) VolumeFromResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeFromResponse {
		return vs[0].([]VolumeFromResponse)[vs[1].(int)]
	}).(VolumeFromResponseOutput)
}

// Definition of Volume
type VolumeResponse struct {
	// Indicates whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration. To configure a volume at launch time, use this task definition revision and specify a ``volumeConfigurations`` object when calling the ``CreateService``, ``UpdateService``, ``RunTask`` or ``StartTask`` APIs.
	ConfiguredAtLaunch *bool `pulumi:"configuredAtLaunch"`
	// This parameter is specified when you use Docker volumes. Windows containers only support the use of the ``local`` driver. To use bind mounts, specify the ``host`` parameter instead.  Docker volumes aren't supported by tasks run on FARGATElong. The ``DockerVolumeConfiguration`` property specifies a Docker volume configuration and is used when you use Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the ``local`` driver. To use bind mounts, specify a ``host`` instead.
	DockerVolumeConfiguration *DockerVolumeConfigurationResponse `pulumi:"dockerVolumeConfiguration"`
	// This parameter is specified when you use an Amazon Elastic File System file system for task storage. This parameter is specified when you're using an Amazon Elastic File System file system for task storage. For more information, see [Amazon EFS volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
	EfsVolumeConfiguration *EFSVolumeConfigurationResponse `pulumi:"efsVolumeConfiguration"`
	// This parameter is specified when you use Amazon FSx for Windows File Server file system for task storage. This parameter is specified when you're using [Amazon FSx for Windows File Server](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. For more information and the input format, see [Amazon FSx for Windows File Server volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
	FSxWindowsFileServerVolumeConfiguration *FSxWindowsFileServerVolumeConfigurationResponse `pulumi:"fSxWindowsFileServerVolumeConfiguration"`
	// This parameter is specified when you use bind mount host volumes. The contents of the ``host`` parameter determine whether your bind mount host volume persists on the host container instance and where it's stored. If the ``host`` parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running. Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount directories on a different drive, and mount point can't be across drives. For example, you can mount ``C:\my\path:C:\my\path`` and ``D:\:D:\``, but not ``D:\my\path:C:\my\path`` or ``D:\:C:\my\path``. The ``HostVolumeProperties`` property specifies details on a container instance bind mount host volume.
	Host *HostVolumePropertiesResponse `pulumi:"host"`
	// The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. When using a volume configured at launch, the ``name`` is required and must also be specified as the volume name in the ``ServiceVolumeConfiguration`` or ``TaskVolumeConfiguration`` parameter when creating your service or standalone task. For all other types of volumes, this name is referenced in the ``sourceVolume`` parameter of the ``mountPoints`` object in the container definition. When a volume is using the ``efsVolumeConfiguration``, the name is required.
	Name *string `pulumi:"name"`
}

// Definition of Volume
type VolumeResponseOutput struct{ *pulumi.OutputState }

func (VolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeResponse)(nil)).Elem()
}

func (o VolumeResponseOutput) ToVolumeResponseOutput() VolumeResponseOutput {
	return o
}

func (o VolumeResponseOutput) ToVolumeResponseOutputWithContext(ctx context.Context) VolumeResponseOutput {
	return o
}

// Indicates whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration. To configure a volume at launch time, use this task definition revision and specify a “volumeConfigurations“ object when calling the “CreateService“, “UpdateService“, “RunTask“ or “StartTask“ APIs.
func (o VolumeResponseOutput) ConfiguredAtLaunch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeResponse) *bool { return v.ConfiguredAtLaunch }).(pulumi.BoolPtrOutput)
}

// This parameter is specified when you use Docker volumes. Windows containers only support the use of the “local“ driver. To use bind mounts, specify the “host“ parameter instead.  Docker volumes aren't supported by tasks run on FARGATElong. The “DockerVolumeConfiguration“ property specifies a Docker volume configuration and is used when you use Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the “local“ driver. To use bind mounts, specify a “host“ instead.
func (o VolumeResponseOutput) DockerVolumeConfiguration() DockerVolumeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VolumeResponse) *DockerVolumeConfigurationResponse { return v.DockerVolumeConfiguration }).(DockerVolumeConfigurationResponsePtrOutput)
}

// This parameter is specified when you use an Amazon Elastic File System file system for task storage. This parameter is specified when you're using an Amazon Elastic File System file system for task storage. For more information, see [Amazon EFS volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o VolumeResponseOutput) EfsVolumeConfiguration() EFSVolumeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VolumeResponse) *EFSVolumeConfigurationResponse { return v.EfsVolumeConfiguration }).(EFSVolumeConfigurationResponsePtrOutput)
}

// This parameter is specified when you use Amazon FSx for Windows File Server file system for task storage. This parameter is specified when you're using [Amazon FSx for Windows File Server](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. For more information and the input format, see [Amazon FSx for Windows File Server volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the *Amazon Elastic Container Service Developer Guide*.
func (o VolumeResponseOutput) FSxWindowsFileServerVolumeConfiguration() FSxWindowsFileServerVolumeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VolumeResponse) *FSxWindowsFileServerVolumeConfigurationResponse {
		return v.FSxWindowsFileServerVolumeConfiguration
	}).(FSxWindowsFileServerVolumeConfigurationResponsePtrOutput)
}

// This parameter is specified when you use bind mount host volumes. The contents of the “host“ parameter determine whether your bind mount host volume persists on the host container instance and where it's stored. If the “host“ parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running. Windows containers can mount whole directories on the same drive as “$env:ProgramData“. Windows containers can't mount directories on a different drive, and mount point can't be across drives. For example, you can mount “C:\my\path:C:\my\path“ and “D:\:D:\“, but not “D:\my\path:C:\my\path“ or “D:\:C:\my\path“. The “HostVolumeProperties“ property specifies details on a container instance bind mount host volume.
func (o VolumeResponseOutput) Host() HostVolumePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VolumeResponse) *HostVolumePropertiesResponse { return v.Host }).(HostVolumePropertiesResponsePtrOutput)
}

// The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. When using a volume configured at launch, the “name“ is required and must also be specified as the volume name in the “ServiceVolumeConfiguration“ or “TaskVolumeConfiguration“ parameter when creating your service or standalone task. For all other types of volumes, this name is referenced in the “sourceVolume“ parameter of the “mountPoints“ object in the container definition. When a volume is using the “efsVolumeConfiguration“, the name is required.
func (o VolumeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VolumeResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeResponse)(nil)).Elem()
}

func (o VolumeResponseArrayOutput) ToVolumeResponseArrayOutput() VolumeResponseArrayOutput {
	return o
}

func (o VolumeResponseArrayOutput) ToVolumeResponseArrayOutputWithContext(ctx context.Context) VolumeResponseArrayOutput {
	return o
}

func (o VolumeResponseArrayOutput) Index(i pulumi.IntInput) VolumeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeResponse {
		return vs[0].([]VolumeResponse)[vs[1].(int)]
	}).(VolumeResponseOutput)
}

// Definition of VolumeTypeEnumValue
type VolumeTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// VolumeTypeEnumValueInput is an input type that accepts VolumeTypeEnumValueArgs and VolumeTypeEnumValueOutput values.
// You can construct a concrete instance of `VolumeTypeEnumValueInput` via:
//
//	VolumeTypeEnumValueArgs{...}
type VolumeTypeEnumValueInput interface {
	pulumi.Input

	ToVolumeTypeEnumValueOutput() VolumeTypeEnumValueOutput
	ToVolumeTypeEnumValueOutputWithContext(context.Context) VolumeTypeEnumValueOutput
}

// Definition of VolumeTypeEnumValue
type VolumeTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VolumeTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTypeEnumValue)(nil)).Elem()
}

func (i VolumeTypeEnumValueArgs) ToVolumeTypeEnumValueOutput() VolumeTypeEnumValueOutput {
	return i.ToVolumeTypeEnumValueOutputWithContext(context.Background())
}

func (i VolumeTypeEnumValueArgs) ToVolumeTypeEnumValueOutputWithContext(ctx context.Context) VolumeTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTypeEnumValueOutput)
}

func (i VolumeTypeEnumValueArgs) ToVolumeTypeEnumValuePtrOutput() VolumeTypeEnumValuePtrOutput {
	return i.ToVolumeTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i VolumeTypeEnumValueArgs) ToVolumeTypeEnumValuePtrOutputWithContext(ctx context.Context) VolumeTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTypeEnumValueOutput).ToVolumeTypeEnumValuePtrOutputWithContext(ctx)
}

// VolumeTypeEnumValuePtrInput is an input type that accepts VolumeTypeEnumValueArgs, VolumeTypeEnumValuePtr and VolumeTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `VolumeTypeEnumValuePtrInput` via:
//
//	        VolumeTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type VolumeTypeEnumValuePtrInput interface {
	pulumi.Input

	ToVolumeTypeEnumValuePtrOutput() VolumeTypeEnumValuePtrOutput
	ToVolumeTypeEnumValuePtrOutputWithContext(context.Context) VolumeTypeEnumValuePtrOutput
}

type volumeTypeEnumValuePtrType VolumeTypeEnumValueArgs

func VolumeTypeEnumValuePtr(v *VolumeTypeEnumValueArgs) VolumeTypeEnumValuePtrInput {
	return (*volumeTypeEnumValuePtrType)(v)
}

func (*volumeTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeTypeEnumValue)(nil)).Elem()
}

func (i *volumeTypeEnumValuePtrType) ToVolumeTypeEnumValuePtrOutput() VolumeTypeEnumValuePtrOutput {
	return i.ToVolumeTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *volumeTypeEnumValuePtrType) ToVolumeTypeEnumValuePtrOutputWithContext(ctx context.Context) VolumeTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeTypeEnumValuePtrOutput)
}

// Definition of VolumeTypeEnumValue
type VolumeTypeEnumValueOutput struct{ *pulumi.OutputState }

func (VolumeTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTypeEnumValue)(nil)).Elem()
}

func (o VolumeTypeEnumValueOutput) ToVolumeTypeEnumValueOutput() VolumeTypeEnumValueOutput {
	return o
}

func (o VolumeTypeEnumValueOutput) ToVolumeTypeEnumValueOutputWithContext(ctx context.Context) VolumeTypeEnumValueOutput {
	return o
}

func (o VolumeTypeEnumValueOutput) ToVolumeTypeEnumValuePtrOutput() VolumeTypeEnumValuePtrOutput {
	return o.ToVolumeTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o VolumeTypeEnumValueOutput) ToVolumeTypeEnumValuePtrOutputWithContext(ctx context.Context) VolumeTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeTypeEnumValue) *VolumeTypeEnumValue {
		return &v
	}).(VolumeTypeEnumValuePtrOutput)
}

// Property value
func (o VolumeTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VolumeTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (VolumeTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeTypeEnumValue)(nil)).Elem()
}

func (o VolumeTypeEnumValuePtrOutput) ToVolumeTypeEnumValuePtrOutput() VolumeTypeEnumValuePtrOutput {
	return o
}

func (o VolumeTypeEnumValuePtrOutput) ToVolumeTypeEnumValuePtrOutputWithContext(ctx context.Context) VolumeTypeEnumValuePtrOutput {
	return o
}

func (o VolumeTypeEnumValuePtrOutput) Elem() VolumeTypeEnumValueOutput {
	return o.ApplyT(func(v *VolumeTypeEnumValue) VolumeTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret VolumeTypeEnumValue
		return ret
	}).(VolumeTypeEnumValueOutput)
}

// Property value
func (o VolumeTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of VolumeTypeEnumValue
type VolumeTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of VolumeTypeEnumValue
type VolumeTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (VolumeTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeTypeEnumValueResponse)(nil)).Elem()
}

func (o VolumeTypeEnumValueResponseOutput) ToVolumeTypeEnumValueResponseOutput() VolumeTypeEnumValueResponseOutput {
	return o
}

func (o VolumeTypeEnumValueResponseOutput) ToVolumeTypeEnumValueResponseOutputWithContext(ctx context.Context) VolumeTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o VolumeTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VolumeTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeTypeEnumValueResponse)(nil)).Elem()
}

func (o VolumeTypeEnumValueResponsePtrOutput) ToVolumeTypeEnumValueResponsePtrOutput() VolumeTypeEnumValueResponsePtrOutput {
	return o
}

func (o VolumeTypeEnumValueResponsePtrOutput) ToVolumeTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) VolumeTypeEnumValueResponsePtrOutput {
	return o
}

func (o VolumeTypeEnumValueResponsePtrOutput) Elem() VolumeTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *VolumeTypeEnumValueResponse) VolumeTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret VolumeTypeEnumValueResponse
		return ret
	}).(VolumeTypeEnumValueResponseOutput)
}

// Property value
func (o VolumeTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of VpcConfig
type VpcConfig struct {
	// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
	Ipv6AllowedForDualStack *bool `pulumi:"ipv6AllowedForDualStack"`
	// A list of VPC security group IDs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of VPC subnet IDs.
	SubnetIds []string `pulumi:"subnetIds"`
	// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
	Subnets []string `pulumi:"subnets"`
	// <p>The ID of the Amazon VPC.</p>
	VpcId *string `pulumi:"vpcId"`
}

// VpcConfigInput is an input type that accepts VpcConfigArgs and VpcConfigOutput values.
// You can construct a concrete instance of `VpcConfigInput` via:
//
//	VpcConfigArgs{...}
type VpcConfigInput interface {
	pulumi.Input

	ToVpcConfigOutput() VpcConfigOutput
	ToVpcConfigOutputWithContext(context.Context) VpcConfigOutput
}

// Definition of VpcConfig
type VpcConfigArgs struct {
	// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
	Ipv6AllowedForDualStack pulumi.BoolPtrInput `pulumi:"ipv6AllowedForDualStack"`
	// A list of VPC security group IDs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of VPC subnet IDs.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
	// <p>The ID of the Amazon VPC.</p>
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (VpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfig)(nil)).Elem()
}

func (i VpcConfigArgs) ToVpcConfigOutput() VpcConfigOutput {
	return i.ToVpcConfigOutputWithContext(context.Background())
}

func (i VpcConfigArgs) ToVpcConfigOutputWithContext(ctx context.Context) VpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigOutput)
}

func (i VpcConfigArgs) ToVpcConfigPtrOutput() VpcConfigPtrOutput {
	return i.ToVpcConfigPtrOutputWithContext(context.Background())
}

func (i VpcConfigArgs) ToVpcConfigPtrOutputWithContext(ctx context.Context) VpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigOutput).ToVpcConfigPtrOutputWithContext(ctx)
}

// VpcConfigPtrInput is an input type that accepts VpcConfigArgs, VpcConfigPtr and VpcConfigPtrOutput values.
// You can construct a concrete instance of `VpcConfigPtrInput` via:
//
//	        VpcConfigArgs{...}
//
//	or:
//
//	        nil
type VpcConfigPtrInput interface {
	pulumi.Input

	ToVpcConfigPtrOutput() VpcConfigPtrOutput
	ToVpcConfigPtrOutputWithContext(context.Context) VpcConfigPtrOutput
}

type vpcConfigPtrType VpcConfigArgs

func VpcConfigPtr(v *VpcConfigArgs) VpcConfigPtrInput {
	return (*vpcConfigPtrType)(v)
}

func (*vpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfig)(nil)).Elem()
}

func (i *vpcConfigPtrType) ToVpcConfigPtrOutput() VpcConfigPtrOutput {
	return i.ToVpcConfigPtrOutputWithContext(context.Background())
}

func (i *vpcConfigPtrType) ToVpcConfigPtrOutputWithContext(ctx context.Context) VpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigPtrOutput)
}

// Definition of VpcConfig
type VpcConfigOutput struct{ *pulumi.OutputState }

func (VpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfig)(nil)).Elem()
}

func (o VpcConfigOutput) ToVpcConfigOutput() VpcConfigOutput {
	return o
}

func (o VpcConfigOutput) ToVpcConfigOutputWithContext(ctx context.Context) VpcConfigOutput {
	return o
}

func (o VpcConfigOutput) ToVpcConfigPtrOutput() VpcConfigPtrOutput {
	return o.ToVpcConfigPtrOutputWithContext(context.Background())
}

func (o VpcConfigOutput) ToVpcConfigPtrOutputWithContext(ctx context.Context) VpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcConfig) *VpcConfig {
		return &v
	}).(VpcConfigPtrOutput)
}

// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
func (o VpcConfigOutput) Ipv6AllowedForDualStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcConfig) *bool { return v.Ipv6AllowedForDualStack }).(pulumi.BoolPtrOutput)
}

// A list of VPC security group IDs.
func (o VpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of VPC subnet IDs.
func (o VpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
func (o VpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

// <p>The ID of the Amazon VPC.</p>
func (o VpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcConfigPtrOutput struct{ *pulumi.OutputState }

func (VpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfig)(nil)).Elem()
}

func (o VpcConfigPtrOutput) ToVpcConfigPtrOutput() VpcConfigPtrOutput {
	return o
}

func (o VpcConfigPtrOutput) ToVpcConfigPtrOutputWithContext(ctx context.Context) VpcConfigPtrOutput {
	return o
}

func (o VpcConfigPtrOutput) Elem() VpcConfigOutput {
	return o.ApplyT(func(v *VpcConfig) VpcConfig {
		if v != nil {
			return *v
		}
		var ret VpcConfig
		return ret
	}).(VpcConfigOutput)
}

// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
func (o VpcConfigPtrOutput) Ipv6AllowedForDualStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv6AllowedForDualStack
	}).(pulumi.BoolPtrOutput)
}

// A list of VPC security group IDs.
func (o VpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of VPC subnet IDs.
func (o VpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
func (o VpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// <p>The ID of the Amazon VPC.</p>
func (o VpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VpcConfig
type VpcConfigResponse struct {
	// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
	ClusterSecurityGroupId *string `pulumi:"clusterSecurityGroupId"`
	// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
	EndpointPrivateAccess *bool `pulumi:"endpointPrivateAccess"`
	// <p>Whether the public API server endpoint is enabled.</p>
	EndpointPublicAccess *bool `pulumi:"endpointPublicAccess"`
	// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
	Ipv6AllowedForDualStack *bool `pulumi:"ipv6AllowedForDualStack"`
	// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// A list of VPC security group IDs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of VPC subnet IDs.
	SubnetIds []string `pulumi:"subnetIds"`
	// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
	Subnets []string `pulumi:"subnets"`
	// <p>The VPC associated with your cluster.</p>
	VpcId *string `pulumi:"vpcId"`
}

// VpcConfigResponseInput is an input type that accepts VpcConfigResponseArgs and VpcConfigResponseOutput values.
// You can construct a concrete instance of `VpcConfigResponseInput` via:
//
//	VpcConfigResponseArgs{...}
type VpcConfigResponseInput interface {
	pulumi.Input

	ToVpcConfigResponseOutput() VpcConfigResponseOutput
	ToVpcConfigResponseOutputWithContext(context.Context) VpcConfigResponseOutput
}

// Definition of VpcConfig
type VpcConfigResponseArgs struct {
	// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
	ClusterSecurityGroupId pulumi.StringPtrInput `pulumi:"clusterSecurityGroupId"`
	// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
	EndpointPrivateAccess pulumi.BoolPtrInput `pulumi:"endpointPrivateAccess"`
	// <p>Whether the public API server endpoint is enabled.</p>
	EndpointPublicAccess pulumi.BoolPtrInput `pulumi:"endpointPublicAccess"`
	// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
	Ipv6AllowedForDualStack pulumi.BoolPtrInput `pulumi:"ipv6AllowedForDualStack"`
	// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
	PublicAccessCidrs pulumi.StringArrayInput `pulumi:"publicAccessCidrs"`
	// A list of VPC security group IDs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of VPC subnet IDs.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
	// <p>The VPC associated with your cluster.</p>
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (VpcConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfigResponse)(nil)).Elem()
}

func (i VpcConfigResponseArgs) ToVpcConfigResponseOutput() VpcConfigResponseOutput {
	return i.ToVpcConfigResponseOutputWithContext(context.Background())
}

func (i VpcConfigResponseArgs) ToVpcConfigResponseOutputWithContext(ctx context.Context) VpcConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigResponseOutput)
}

func (i VpcConfigResponseArgs) ToVpcConfigResponsePtrOutput() VpcConfigResponsePtrOutput {
	return i.ToVpcConfigResponsePtrOutputWithContext(context.Background())
}

func (i VpcConfigResponseArgs) ToVpcConfigResponsePtrOutputWithContext(ctx context.Context) VpcConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigResponseOutput).ToVpcConfigResponsePtrOutputWithContext(ctx)
}

// VpcConfigResponsePtrInput is an input type that accepts VpcConfigResponseArgs, VpcConfigResponsePtr and VpcConfigResponsePtrOutput values.
// You can construct a concrete instance of `VpcConfigResponsePtrInput` via:
//
//	        VpcConfigResponseArgs{...}
//
//	or:
//
//	        nil
type VpcConfigResponsePtrInput interface {
	pulumi.Input

	ToVpcConfigResponsePtrOutput() VpcConfigResponsePtrOutput
	ToVpcConfigResponsePtrOutputWithContext(context.Context) VpcConfigResponsePtrOutput
}

type vpcConfigResponsePtrType VpcConfigResponseArgs

func VpcConfigResponsePtr(v *VpcConfigResponseArgs) VpcConfigResponsePtrInput {
	return (*vpcConfigResponsePtrType)(v)
}

func (*vpcConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfigResponse)(nil)).Elem()
}

func (i *vpcConfigResponsePtrType) ToVpcConfigResponsePtrOutput() VpcConfigResponsePtrOutput {
	return i.ToVpcConfigResponsePtrOutputWithContext(context.Background())
}

func (i *vpcConfigResponsePtrType) ToVpcConfigResponsePtrOutputWithContext(ctx context.Context) VpcConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigResponsePtrOutput)
}

// Definition of VpcConfig
type VpcConfigResponseOutput struct{ *pulumi.OutputState }

func (VpcConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfigResponse)(nil)).Elem()
}

func (o VpcConfigResponseOutput) ToVpcConfigResponseOutput() VpcConfigResponseOutput {
	return o
}

func (o VpcConfigResponseOutput) ToVpcConfigResponseOutputWithContext(ctx context.Context) VpcConfigResponseOutput {
	return o
}

func (o VpcConfigResponseOutput) ToVpcConfigResponsePtrOutput() VpcConfigResponsePtrOutput {
	return o.ToVpcConfigResponsePtrOutputWithContext(context.Background())
}

func (o VpcConfigResponseOutput) ToVpcConfigResponsePtrOutputWithContext(ctx context.Context) VpcConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcConfigResponse) *VpcConfigResponse {
		return &v
	}).(VpcConfigResponsePtrOutput)
}

// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
func (o VpcConfigResponseOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfigResponse) *string { return v.ClusterSecurityGroupId }).(pulumi.StringPtrOutput)
}

// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
func (o VpcConfigResponseOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcConfigResponse) *bool { return v.EndpointPrivateAccess }).(pulumi.BoolPtrOutput)
}

// <p>Whether the public API server endpoint is enabled.</p>
func (o VpcConfigResponseOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcConfigResponse) *bool { return v.EndpointPublicAccess }).(pulumi.BoolPtrOutput)
}

// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
func (o VpcConfigResponseOutput) Ipv6AllowedForDualStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcConfigResponse) *bool { return v.Ipv6AllowedForDualStack }).(pulumi.BoolPtrOutput)
}

// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
func (o VpcConfigResponseOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponse) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// A list of VPC security group IDs.
func (o VpcConfigResponseOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponse) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of VPC subnet IDs.
func (o VpcConfigResponseOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponse) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
func (o VpcConfigResponseOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponse) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

// <p>The VPC associated with your cluster.</p>
func (o VpcConfigResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfigResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (VpcConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfigResponse)(nil)).Elem()
}

func (o VpcConfigResponsePtrOutput) ToVpcConfigResponsePtrOutput() VpcConfigResponsePtrOutput {
	return o
}

func (o VpcConfigResponsePtrOutput) ToVpcConfigResponsePtrOutputWithContext(ctx context.Context) VpcConfigResponsePtrOutput {
	return o
}

func (o VpcConfigResponsePtrOutput) Elem() VpcConfigResponseOutput {
	return o.ApplyT(func(v *VpcConfigResponse) VpcConfigResponse {
		if v != nil {
			return *v
		}
		var ret VpcConfigResponse
		return ret
	}).(VpcConfigResponseOutput)
}

// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
func (o VpcConfigResponsePtrOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSecurityGroupId
	}).(pulumi.StringPtrOutput)
}

// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
func (o VpcConfigResponsePtrOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPrivateAccess
	}).(pulumi.BoolPtrOutput)
}

// <p>Whether the public API server endpoint is enabled.</p>
func (o VpcConfigResponsePtrOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
func (o VpcConfigResponsePtrOutput) Ipv6AllowedForDualStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv6AllowedForDualStack
	}).(pulumi.BoolPtrOutput)
}

// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
func (o VpcConfigResponsePtrOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.PublicAccessCidrs
	}).(pulumi.StringArrayOutput)
}

// A list of VPC security group IDs.
func (o VpcConfigResponsePtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of VPC subnet IDs.
func (o VpcConfigResponsePtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// <p>A list of one or more subnet IDs in your Amazon VPC.</p>
func (o VpcConfigResponsePtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// <p>The VPC associated with your cluster.</p>
func (o VpcConfigResponsePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VpcConfigResponse
type VpcConfigResponseResponse struct {
	// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
	ClusterSecurityGroupId *string `pulumi:"clusterSecurityGroupId"`
	// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
	EndpointPrivateAccess *bool `pulumi:"endpointPrivateAccess"`
	// <p>Whether the public API server endpoint is enabled.</p>
	EndpointPublicAccess *bool `pulumi:"endpointPublicAccess"`
	// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// <p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.</p>
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// <p>The subnets associated with your cluster.</p>
	SubnetIds []string `pulumi:"subnetIds"`
	// <p>The VPC associated with your cluster.</p>
	VpcId *string `pulumi:"vpcId"`
}

// Definition of VpcConfigResponse
type VpcConfigResponseResponseOutput struct{ *pulumi.OutputState }

func (VpcConfigResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfigResponseResponse)(nil)).Elem()
}

func (o VpcConfigResponseResponseOutput) ToVpcConfigResponseResponseOutput() VpcConfigResponseResponseOutput {
	return o
}

func (o VpcConfigResponseResponseOutput) ToVpcConfigResponseResponseOutputWithContext(ctx context.Context) VpcConfigResponseResponseOutput {
	return o
}

// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
func (o VpcConfigResponseResponseOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) *string { return v.ClusterSecurityGroupId }).(pulumi.StringPtrOutput)
}

// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
func (o VpcConfigResponseResponseOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) *bool { return v.EndpointPrivateAccess }).(pulumi.BoolPtrOutput)
}

// <p>Whether the public API server endpoint is enabled.</p>
func (o VpcConfigResponseResponseOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) *bool { return v.EndpointPublicAccess }).(pulumi.BoolPtrOutput)
}

// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
func (o VpcConfigResponseResponseOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// <p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.</p>
func (o VpcConfigResponseResponseOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// <p>The subnets associated with your cluster.</p>
func (o VpcConfigResponseResponseOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// <p>The VPC associated with your cluster.</p>
func (o VpcConfigResponseResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfigResponseResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcConfigResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (VpcConfigResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfigResponseResponse)(nil)).Elem()
}

func (o VpcConfigResponseResponsePtrOutput) ToVpcConfigResponseResponsePtrOutput() VpcConfigResponseResponsePtrOutput {
	return o
}

func (o VpcConfigResponseResponsePtrOutput) ToVpcConfigResponseResponsePtrOutputWithContext(ctx context.Context) VpcConfigResponseResponsePtrOutput {
	return o
}

func (o VpcConfigResponseResponsePtrOutput) Elem() VpcConfigResponseResponseOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) VpcConfigResponseResponse {
		if v != nil {
			return *v
		}
		var ret VpcConfigResponseResponse
		return ret
	}).(VpcConfigResponseResponseOutput)
}

// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>
func (o VpcConfigResponseResponsePtrOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSecurityGroupId
	}).(pulumi.StringPtrOutput)
}

// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
func (o VpcConfigResponseResponsePtrOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPrivateAccess
	}).(pulumi.BoolPtrOutput)
}

// <p>Whether the public API server endpoint is enabled.</p>
func (o VpcConfigResponseResponsePtrOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
func (o VpcConfigResponseResponsePtrOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.PublicAccessCidrs
	}).(pulumi.StringArrayOutput)
}

// <p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.</p>
func (o VpcConfigResponseResponsePtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// <p>The subnets associated with your cluster.</p>
func (o VpcConfigResponseResponsePtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// <p>The VPC associated with your cluster.</p>
func (o VpcConfigResponseResponsePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfigResponseResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VpcConfiguration
type VpcConfiguration struct {
	// If this field is specified, this access point will only allow connections from the specified VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

// VpcConfigurationInput is an input type that accepts VpcConfigurationArgs and VpcConfigurationOutput values.
// You can construct a concrete instance of `VpcConfigurationInput` via:
//
//	VpcConfigurationArgs{...}
type VpcConfigurationInput interface {
	pulumi.Input

	ToVpcConfigurationOutput() VpcConfigurationOutput
	ToVpcConfigurationOutputWithContext(context.Context) VpcConfigurationOutput
}

// Definition of VpcConfiguration
type VpcConfigurationArgs struct {
	// If this field is specified, this access point will only allow connections from the specified VPC ID.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (VpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfiguration)(nil)).Elem()
}

func (i VpcConfigurationArgs) ToVpcConfigurationOutput() VpcConfigurationOutput {
	return i.ToVpcConfigurationOutputWithContext(context.Background())
}

func (i VpcConfigurationArgs) ToVpcConfigurationOutputWithContext(ctx context.Context) VpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigurationOutput)
}

func (i VpcConfigurationArgs) ToVpcConfigurationPtrOutput() VpcConfigurationPtrOutput {
	return i.ToVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i VpcConfigurationArgs) ToVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigurationOutput).ToVpcConfigurationPtrOutputWithContext(ctx)
}

// VpcConfigurationPtrInput is an input type that accepts VpcConfigurationArgs, VpcConfigurationPtr and VpcConfigurationPtrOutput values.
// You can construct a concrete instance of `VpcConfigurationPtrInput` via:
//
//	        VpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type VpcConfigurationPtrInput interface {
	pulumi.Input

	ToVpcConfigurationPtrOutput() VpcConfigurationPtrOutput
	ToVpcConfigurationPtrOutputWithContext(context.Context) VpcConfigurationPtrOutput
}

type vpcConfigurationPtrType VpcConfigurationArgs

func VpcConfigurationPtr(v *VpcConfigurationArgs) VpcConfigurationPtrInput {
	return (*vpcConfigurationPtrType)(v)
}

func (*vpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfiguration)(nil)).Elem()
}

func (i *vpcConfigurationPtrType) ToVpcConfigurationPtrOutput() VpcConfigurationPtrOutput {
	return i.ToVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpcConfigurationPtrType) ToVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConfigurationPtrOutput)
}

// Definition of VpcConfiguration
type VpcConfigurationOutput struct{ *pulumi.OutputState }

func (VpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfiguration)(nil)).Elem()
}

func (o VpcConfigurationOutput) ToVpcConfigurationOutput() VpcConfigurationOutput {
	return o
}

func (o VpcConfigurationOutput) ToVpcConfigurationOutputWithContext(ctx context.Context) VpcConfigurationOutput {
	return o
}

func (o VpcConfigurationOutput) ToVpcConfigurationPtrOutput() VpcConfigurationPtrOutput {
	return o.ToVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o VpcConfigurationOutput) ToVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcConfiguration) *VpcConfiguration {
		return &v
	}).(VpcConfigurationPtrOutput)
}

// If this field is specified, this access point will only allow connections from the specified VPC ID.
func (o VpcConfigurationOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfiguration) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfiguration)(nil)).Elem()
}

func (o VpcConfigurationPtrOutput) ToVpcConfigurationPtrOutput() VpcConfigurationPtrOutput {
	return o
}

func (o VpcConfigurationPtrOutput) ToVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcConfigurationPtrOutput {
	return o
}

func (o VpcConfigurationPtrOutput) Elem() VpcConfigurationOutput {
	return o.ApplyT(func(v *VpcConfiguration) VpcConfiguration {
		if v != nil {
			return *v
		}
		var ret VpcConfiguration
		return ret
	}).(VpcConfigurationOutput)
}

// If this field is specified, this access point will only allow connections from the specified VPC ID.
func (o VpcConfigurationPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VpcConfiguration
type VpcConfigurationResponse struct {
	// If this field is specified, this access point will only allow connections from the specified VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

// Definition of VpcConfiguration
type VpcConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpcConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConfigurationResponse)(nil)).Elem()
}

func (o VpcConfigurationResponseOutput) ToVpcConfigurationResponseOutput() VpcConfigurationResponseOutput {
	return o
}

func (o VpcConfigurationResponseOutput) ToVpcConfigurationResponseOutputWithContext(ctx context.Context) VpcConfigurationResponseOutput {
	return o
}

// If this field is specified, this access point will only allow connections from the specified VPC ID.
func (o VpcConfigurationResponseOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcConfigurationResponse) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpcConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConfigurationResponse)(nil)).Elem()
}

func (o VpcConfigurationResponsePtrOutput) ToVpcConfigurationResponsePtrOutput() VpcConfigurationResponsePtrOutput {
	return o
}

func (o VpcConfigurationResponsePtrOutput) ToVpcConfigurationResponsePtrOutputWithContext(ctx context.Context) VpcConfigurationResponsePtrOutput {
	return o
}

func (o VpcConfigurationResponsePtrOutput) Elem() VpcConfigurationResponseOutput {
	return o.ApplyT(func(v *VpcConfigurationResponse) VpcConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VpcConfigurationResponse
		return ret
	}).(VpcConfigurationResponseOutput)
}

// If this field is specified, this access point will only allow connections from the specified VPC ID.
func (o VpcConfigurationResponsePtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Definition of VpcSecurityGroupMembership
type VpcSecurityGroupMembership struct {
	// <p>The status of the VPC security group.</p>
	Status *string `pulumi:"status"`
	// <p>The VPC security group ID.</p>
	VpcSecurityGroupId *string `pulumi:"vpcSecurityGroupId"`
}

// VpcSecurityGroupMembershipInput is an input type that accepts VpcSecurityGroupMembershipArgs and VpcSecurityGroupMembershipOutput values.
// You can construct a concrete instance of `VpcSecurityGroupMembershipInput` via:
//
//	VpcSecurityGroupMembershipArgs{...}
type VpcSecurityGroupMembershipInput interface {
	pulumi.Input

	ToVpcSecurityGroupMembershipOutput() VpcSecurityGroupMembershipOutput
	ToVpcSecurityGroupMembershipOutputWithContext(context.Context) VpcSecurityGroupMembershipOutput
}

// Definition of VpcSecurityGroupMembership
type VpcSecurityGroupMembershipArgs struct {
	// <p>The status of the VPC security group.</p>
	Status pulumi.StringPtrInput `pulumi:"status"`
	// <p>The VPC security group ID.</p>
	VpcSecurityGroupId pulumi.StringPtrInput `pulumi:"vpcSecurityGroupId"`
}

func (VpcSecurityGroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupMembership)(nil)).Elem()
}

func (i VpcSecurityGroupMembershipArgs) ToVpcSecurityGroupMembershipOutput() VpcSecurityGroupMembershipOutput {
	return i.ToVpcSecurityGroupMembershipOutputWithContext(context.Background())
}

func (i VpcSecurityGroupMembershipArgs) ToVpcSecurityGroupMembershipOutputWithContext(ctx context.Context) VpcSecurityGroupMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupMembershipOutput)
}

// VpcSecurityGroupMembershipArrayInput is an input type that accepts VpcSecurityGroupMembershipArray and VpcSecurityGroupMembershipArrayOutput values.
// You can construct a concrete instance of `VpcSecurityGroupMembershipArrayInput` via:
//
//	VpcSecurityGroupMembershipArray{ VpcSecurityGroupMembershipArgs{...} }
type VpcSecurityGroupMembershipArrayInput interface {
	pulumi.Input

	ToVpcSecurityGroupMembershipArrayOutput() VpcSecurityGroupMembershipArrayOutput
	ToVpcSecurityGroupMembershipArrayOutputWithContext(context.Context) VpcSecurityGroupMembershipArrayOutput
}

type VpcSecurityGroupMembershipArray []VpcSecurityGroupMembershipInput

func (VpcSecurityGroupMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupMembership)(nil)).Elem()
}

func (i VpcSecurityGroupMembershipArray) ToVpcSecurityGroupMembershipArrayOutput() VpcSecurityGroupMembershipArrayOutput {
	return i.ToVpcSecurityGroupMembershipArrayOutputWithContext(context.Background())
}

func (i VpcSecurityGroupMembershipArray) ToVpcSecurityGroupMembershipArrayOutputWithContext(ctx context.Context) VpcSecurityGroupMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupMembershipArrayOutput)
}

// Definition of VpcSecurityGroupMembership
type VpcSecurityGroupMembershipOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupMembership)(nil)).Elem()
}

func (o VpcSecurityGroupMembershipOutput) ToVpcSecurityGroupMembershipOutput() VpcSecurityGroupMembershipOutput {
	return o
}

func (o VpcSecurityGroupMembershipOutput) ToVpcSecurityGroupMembershipOutputWithContext(ctx context.Context) VpcSecurityGroupMembershipOutput {
	return o
}

// <p>The status of the VPC security group.</p>
func (o VpcSecurityGroupMembershipOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupMembership) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// <p>The VPC security group ID.</p>
func (o VpcSecurityGroupMembershipOutput) VpcSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupMembership) *string { return v.VpcSecurityGroupId }).(pulumi.StringPtrOutput)
}

type VpcSecurityGroupMembershipArrayOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupMembership)(nil)).Elem()
}

func (o VpcSecurityGroupMembershipArrayOutput) ToVpcSecurityGroupMembershipArrayOutput() VpcSecurityGroupMembershipArrayOutput {
	return o
}

func (o VpcSecurityGroupMembershipArrayOutput) ToVpcSecurityGroupMembershipArrayOutputWithContext(ctx context.Context) VpcSecurityGroupMembershipArrayOutput {
	return o
}

func (o VpcSecurityGroupMembershipArrayOutput) Index(i pulumi.IntInput) VpcSecurityGroupMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcSecurityGroupMembership {
		return vs[0].([]VpcSecurityGroupMembership)[vs[1].(int)]
	}).(VpcSecurityGroupMembershipOutput)
}

// Definition of VpcSecurityGroupMembership
type VpcSecurityGroupMembershipResponse struct {
	// <p>The status of the VPC security group.</p>
	Status *string `pulumi:"status"`
	// <p>The VPC security group ID.</p>
	VpcSecurityGroupId *string `pulumi:"vpcSecurityGroupId"`
}

// Definition of VpcSecurityGroupMembership
type VpcSecurityGroupMembershipResponseOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupMembershipResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroupMembershipResponse)(nil)).Elem()
}

func (o VpcSecurityGroupMembershipResponseOutput) ToVpcSecurityGroupMembershipResponseOutput() VpcSecurityGroupMembershipResponseOutput {
	return o
}

func (o VpcSecurityGroupMembershipResponseOutput) ToVpcSecurityGroupMembershipResponseOutputWithContext(ctx context.Context) VpcSecurityGroupMembershipResponseOutput {
	return o
}

// <p>The status of the VPC security group.</p>
func (o VpcSecurityGroupMembershipResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupMembershipResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// <p>The VPC security group ID.</p>
func (o VpcSecurityGroupMembershipResponseOutput) VpcSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcSecurityGroupMembershipResponse) *string { return v.VpcSecurityGroupId }).(pulumi.StringPtrOutput)
}

type VpcSecurityGroupMembershipResponseArrayOutput struct{ *pulumi.OutputState }

func (VpcSecurityGroupMembershipResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcSecurityGroupMembershipResponse)(nil)).Elem()
}

func (o VpcSecurityGroupMembershipResponseArrayOutput) ToVpcSecurityGroupMembershipResponseArrayOutput() VpcSecurityGroupMembershipResponseArrayOutput {
	return o
}

func (o VpcSecurityGroupMembershipResponseArrayOutput) ToVpcSecurityGroupMembershipResponseArrayOutputWithContext(ctx context.Context) VpcSecurityGroupMembershipResponseArrayOutput {
	return o
}

func (o VpcSecurityGroupMembershipResponseArrayOutput) Index(i pulumi.IntInput) VpcSecurityGroupMembershipResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcSecurityGroupMembershipResponse {
		return vs[0].([]VpcSecurityGroupMembershipResponse)[vs[1].(int)]
	}).(VpcSecurityGroupMembershipResponseOutput)
}

// Definition of WafWebACLSummary
type WafWebACLSummaryProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsWafWebACLSummaryProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// WafWebACLSummaryPropertiesInput is an input type that accepts WafWebACLSummaryPropertiesArgs and WafWebACLSummaryPropertiesOutput values.
// You can construct a concrete instance of `WafWebACLSummaryPropertiesInput` via:
//
//	WafWebACLSummaryPropertiesArgs{...}
type WafWebACLSummaryPropertiesInput interface {
	pulumi.Input

	ToWafWebACLSummaryPropertiesOutput() WafWebACLSummaryPropertiesOutput
	ToWafWebACLSummaryPropertiesOutputWithContext(context.Context) WafWebACLSummaryPropertiesOutput
}

// Definition of WafWebACLSummary
type WafWebACLSummaryPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsWafWebACLSummaryPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (WafWebACLSummaryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafWebACLSummaryProperties)(nil)).Elem()
}

func (i WafWebACLSummaryPropertiesArgs) ToWafWebACLSummaryPropertiesOutput() WafWebACLSummaryPropertiesOutput {
	return i.ToWafWebACLSummaryPropertiesOutputWithContext(context.Background())
}

func (i WafWebACLSummaryPropertiesArgs) ToWafWebACLSummaryPropertiesOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafWebACLSummaryPropertiesOutput)
}

func (i WafWebACLSummaryPropertiesArgs) ToWafWebACLSummaryPropertiesPtrOutput() WafWebACLSummaryPropertiesPtrOutput {
	return i.ToWafWebACLSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i WafWebACLSummaryPropertiesArgs) ToWafWebACLSummaryPropertiesPtrOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafWebACLSummaryPropertiesOutput).ToWafWebACLSummaryPropertiesPtrOutputWithContext(ctx)
}

// WafWebACLSummaryPropertiesPtrInput is an input type that accepts WafWebACLSummaryPropertiesArgs, WafWebACLSummaryPropertiesPtr and WafWebACLSummaryPropertiesPtrOutput values.
// You can construct a concrete instance of `WafWebACLSummaryPropertiesPtrInput` via:
//
//	        WafWebACLSummaryPropertiesArgs{...}
//
//	or:
//
//	        nil
type WafWebACLSummaryPropertiesPtrInput interface {
	pulumi.Input

	ToWafWebACLSummaryPropertiesPtrOutput() WafWebACLSummaryPropertiesPtrOutput
	ToWafWebACLSummaryPropertiesPtrOutputWithContext(context.Context) WafWebACLSummaryPropertiesPtrOutput
}

type wafWebACLSummaryPropertiesPtrType WafWebACLSummaryPropertiesArgs

func WafWebACLSummaryPropertiesPtr(v *WafWebACLSummaryPropertiesArgs) WafWebACLSummaryPropertiesPtrInput {
	return (*wafWebACLSummaryPropertiesPtrType)(v)
}

func (*wafWebACLSummaryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafWebACLSummaryProperties)(nil)).Elem()
}

func (i *wafWebACLSummaryPropertiesPtrType) ToWafWebACLSummaryPropertiesPtrOutput() WafWebACLSummaryPropertiesPtrOutput {
	return i.ToWafWebACLSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (i *wafWebACLSummaryPropertiesPtrType) ToWafWebACLSummaryPropertiesPtrOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafWebACLSummaryPropertiesPtrOutput)
}

// Definition of WafWebACLSummary
type WafWebACLSummaryPropertiesOutput struct{ *pulumi.OutputState }

func (WafWebACLSummaryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafWebACLSummaryProperties)(nil)).Elem()
}

func (o WafWebACLSummaryPropertiesOutput) ToWafWebACLSummaryPropertiesOutput() WafWebACLSummaryPropertiesOutput {
	return o
}

func (o WafWebACLSummaryPropertiesOutput) ToWafWebACLSummaryPropertiesOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesOutput {
	return o
}

func (o WafWebACLSummaryPropertiesOutput) ToWafWebACLSummaryPropertiesPtrOutput() WafWebACLSummaryPropertiesPtrOutput {
	return o.ToWafWebACLSummaryPropertiesPtrOutputWithContext(context.Background())
}

func (o WafWebACLSummaryPropertiesOutput) ToWafWebACLSummaryPropertiesPtrOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WafWebACLSummaryProperties) *WafWebACLSummaryProperties {
		return &v
	}).(WafWebACLSummaryPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o WafWebACLSummaryPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o WafWebACLSummaryPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o WafWebACLSummaryPropertiesOutput) AwsProperties() AwsWafWebACLSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *AwsWafWebACLSummaryProperties { return v.AwsProperties }).(AwsWafWebACLSummaryPropertiesPtrOutput)
}

// AWS Region
func (o WafWebACLSummaryPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o WafWebACLSummaryPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o WafWebACLSummaryPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o WafWebACLSummaryPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o WafWebACLSummaryPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type WafWebACLSummaryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WafWebACLSummaryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafWebACLSummaryProperties)(nil)).Elem()
}

func (o WafWebACLSummaryPropertiesPtrOutput) ToWafWebACLSummaryPropertiesPtrOutput() WafWebACLSummaryPropertiesPtrOutput {
	return o
}

func (o WafWebACLSummaryPropertiesPtrOutput) ToWafWebACLSummaryPropertiesPtrOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesPtrOutput {
	return o
}

func (o WafWebACLSummaryPropertiesPtrOutput) Elem() WafWebACLSummaryPropertiesOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) WafWebACLSummaryProperties {
		if v != nil {
			return *v
		}
		var ret WafWebACLSummaryProperties
		return ret
	}).(WafWebACLSummaryPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o WafWebACLSummaryPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o WafWebACLSummaryPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o WafWebACLSummaryPropertiesPtrOutput) AwsProperties() AwsWafWebACLSummaryPropertiesPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *AwsWafWebACLSummaryProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsWafWebACLSummaryPropertiesPtrOutput)
}

// AWS Region
func (o WafWebACLSummaryPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o WafWebACLSummaryPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o WafWebACLSummaryPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o WafWebACLSummaryPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o WafWebACLSummaryPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafWebACLSummaryProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of WafWebACLSummary
type WafWebACLSummaryPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsWafWebACLSummaryPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of WafWebACLSummary
type WafWebACLSummaryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WafWebACLSummaryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafWebACLSummaryPropertiesResponse)(nil)).Elem()
}

func (o WafWebACLSummaryPropertiesResponseOutput) ToWafWebACLSummaryPropertiesResponseOutput() WafWebACLSummaryPropertiesResponseOutput {
	return o
}

func (o WafWebACLSummaryPropertiesResponseOutput) ToWafWebACLSummaryPropertiesResponseOutputWithContext(ctx context.Context) WafWebACLSummaryPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o WafWebACLSummaryPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o WafWebACLSummaryPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o WafWebACLSummaryPropertiesResponseOutput) AwsProperties() AwsWafWebACLSummaryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *AwsWafWebACLSummaryPropertiesResponse {
		return v.AwsProperties
	}).(AwsWafWebACLSummaryPropertiesResponsePtrOutput)
}

// AWS Region
func (o WafWebACLSummaryPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o WafWebACLSummaryPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o WafWebACLSummaryPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o WafWebACLSummaryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o WafWebACLSummaryPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o WafWebACLSummaryPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafWebACLSummaryPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of Wafv2LoggingConfiguration
type Wafv2LoggingConfigurationProperties struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsWafv2LoggingConfigurationProperties `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Wafv2LoggingConfigurationPropertiesInput is an input type that accepts Wafv2LoggingConfigurationPropertiesArgs and Wafv2LoggingConfigurationPropertiesOutput values.
// You can construct a concrete instance of `Wafv2LoggingConfigurationPropertiesInput` via:
//
//	Wafv2LoggingConfigurationPropertiesArgs{...}
type Wafv2LoggingConfigurationPropertiesInput interface {
	pulumi.Input

	ToWafv2LoggingConfigurationPropertiesOutput() Wafv2LoggingConfigurationPropertiesOutput
	ToWafv2LoggingConfigurationPropertiesOutputWithContext(context.Context) Wafv2LoggingConfigurationPropertiesOutput
}

// Definition of Wafv2LoggingConfiguration
type Wafv2LoggingConfigurationPropertiesArgs struct {
	// Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties AwsWafv2LoggingConfigurationPropertiesPtrInput `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema pulumi.StringPtrInput `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags pulumi.StringMapInput `pulumi:"awsTags"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId pulumi.StringPtrInput `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName pulumi.StringPtrInput `pulumi:"publicCloudResourceName"`
}

func (Wafv2LoggingConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Wafv2LoggingConfigurationProperties)(nil)).Elem()
}

func (i Wafv2LoggingConfigurationPropertiesArgs) ToWafv2LoggingConfigurationPropertiesOutput() Wafv2LoggingConfigurationPropertiesOutput {
	return i.ToWafv2LoggingConfigurationPropertiesOutputWithContext(context.Background())
}

func (i Wafv2LoggingConfigurationPropertiesArgs) ToWafv2LoggingConfigurationPropertiesOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wafv2LoggingConfigurationPropertiesOutput)
}

func (i Wafv2LoggingConfigurationPropertiesArgs) ToWafv2LoggingConfigurationPropertiesPtrOutput() Wafv2LoggingConfigurationPropertiesPtrOutput {
	return i.ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i Wafv2LoggingConfigurationPropertiesArgs) ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wafv2LoggingConfigurationPropertiesOutput).ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(ctx)
}

// Wafv2LoggingConfigurationPropertiesPtrInput is an input type that accepts Wafv2LoggingConfigurationPropertiesArgs, Wafv2LoggingConfigurationPropertiesPtr and Wafv2LoggingConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `Wafv2LoggingConfigurationPropertiesPtrInput` via:
//
//	        Wafv2LoggingConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type Wafv2LoggingConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToWafv2LoggingConfigurationPropertiesPtrOutput() Wafv2LoggingConfigurationPropertiesPtrOutput
	ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(context.Context) Wafv2LoggingConfigurationPropertiesPtrOutput
}

type wafv2LoggingConfigurationPropertiesPtrType Wafv2LoggingConfigurationPropertiesArgs

func Wafv2LoggingConfigurationPropertiesPtr(v *Wafv2LoggingConfigurationPropertiesArgs) Wafv2LoggingConfigurationPropertiesPtrInput {
	return (*wafv2LoggingConfigurationPropertiesPtrType)(v)
}

func (*wafv2LoggingConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Wafv2LoggingConfigurationProperties)(nil)).Elem()
}

func (i *wafv2LoggingConfigurationPropertiesPtrType) ToWafv2LoggingConfigurationPropertiesPtrOutput() Wafv2LoggingConfigurationPropertiesPtrOutput {
	return i.ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *wafv2LoggingConfigurationPropertiesPtrType) ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Wafv2LoggingConfigurationPropertiesPtrOutput)
}

// Definition of Wafv2LoggingConfiguration
type Wafv2LoggingConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (Wafv2LoggingConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wafv2LoggingConfigurationProperties)(nil)).Elem()
}

func (o Wafv2LoggingConfigurationPropertiesOutput) ToWafv2LoggingConfigurationPropertiesOutput() Wafv2LoggingConfigurationPropertiesOutput {
	return o
}

func (o Wafv2LoggingConfigurationPropertiesOutput) ToWafv2LoggingConfigurationPropertiesOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesOutput {
	return o
}

func (o Wafv2LoggingConfigurationPropertiesOutput) ToWafv2LoggingConfigurationPropertiesPtrOutput() Wafv2LoggingConfigurationPropertiesPtrOutput {
	return o.ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o Wafv2LoggingConfigurationPropertiesOutput) ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Wafv2LoggingConfigurationProperties) *Wafv2LoggingConfigurationProperties {
		return &v
	}).(Wafv2LoggingConfigurationPropertiesPtrOutput)
}

// Amazon Resource Name (ARN)
func (o Wafv2LoggingConfigurationPropertiesOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Wafv2LoggingConfigurationPropertiesOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Wafv2LoggingConfigurationPropertiesOutput) AwsProperties() AwsWafv2LoggingConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *AwsWafv2LoggingConfigurationProperties {
		return v.AwsProperties
	}).(AwsWafv2LoggingConfigurationPropertiesPtrOutput)
}

// AWS Region
func (o Wafv2LoggingConfigurationPropertiesOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Wafv2LoggingConfigurationPropertiesOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Wafv2LoggingConfigurationPropertiesOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Wafv2LoggingConfigurationPropertiesOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Wafv2LoggingConfigurationPropertiesOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationProperties) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

type Wafv2LoggingConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (Wafv2LoggingConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Wafv2LoggingConfigurationProperties)(nil)).Elem()
}

func (o Wafv2LoggingConfigurationPropertiesPtrOutput) ToWafv2LoggingConfigurationPropertiesPtrOutput() Wafv2LoggingConfigurationPropertiesPtrOutput {
	return o
}

func (o Wafv2LoggingConfigurationPropertiesPtrOutput) ToWafv2LoggingConfigurationPropertiesPtrOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesPtrOutput {
	return o
}

func (o Wafv2LoggingConfigurationPropertiesPtrOutput) Elem() Wafv2LoggingConfigurationPropertiesOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) Wafv2LoggingConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret Wafv2LoggingConfigurationProperties
		return ret
	}).(Wafv2LoggingConfigurationPropertiesOutput)
}

// Amazon Resource Name (ARN)
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) AwsProperties() AwsWafv2LoggingConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *AwsWafv2LoggingConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.AwsProperties
	}).(AwsWafv2LoggingConfigurationPropertiesPtrOutput)
}

// AWS Region
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AwsSourceSchema
	}).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(pulumi.StringMapOutput)
}

// Public Cloud Connectors Resource ID
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudConnectorsResourceId
	}).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Wafv2LoggingConfigurationPropertiesPtrOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Wafv2LoggingConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicCloudResourceName
	}).(pulumi.StringPtrOutput)
}

// Definition of Wafv2LoggingConfiguration
type Wafv2LoggingConfigurationPropertiesResponse struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS Properties
	AwsProperties *AwsWafv2LoggingConfigurationPropertiesResponse `pulumi:"awsProperties"`
	// AWS Region
	AwsRegion *string `pulumi:"awsRegion"`
	// AWS Source Schema
	AwsSourceSchema *string `pulumi:"awsSourceSchema"`
	// AWS Tags
	AwsTags map[string]string `pulumi:"awsTags"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Cloud Connectors Resource ID
	PublicCloudConnectorsResourceId *string `pulumi:"publicCloudConnectorsResourceId"`
	// Public Cloud Resource Name
	PublicCloudResourceName *string `pulumi:"publicCloudResourceName"`
}

// Definition of Wafv2LoggingConfiguration
type Wafv2LoggingConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (Wafv2LoggingConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Wafv2LoggingConfigurationPropertiesResponse)(nil)).Elem()
}

func (o Wafv2LoggingConfigurationPropertiesResponseOutput) ToWafv2LoggingConfigurationPropertiesResponseOutput() Wafv2LoggingConfigurationPropertiesResponseOutput {
	return o
}

func (o Wafv2LoggingConfigurationPropertiesResponseOutput) ToWafv2LoggingConfigurationPropertiesResponseOutputWithContext(ctx context.Context) Wafv2LoggingConfigurationPropertiesResponseOutput {
	return o
}

// Amazon Resource Name (ARN)
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AWS Account ID
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// AWS Properties
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) AwsProperties() AwsWafv2LoggingConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *AwsWafv2LoggingConfigurationPropertiesResponse {
		return v.AwsProperties
	}).(AwsWafv2LoggingConfigurationPropertiesResponsePtrOutput)
}

// AWS Region
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// AWS Source Schema
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) AwsSourceSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *string { return v.AwsSourceSchema }).(pulumi.StringPtrOutput)
}

// AWS Tags
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) AwsTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) map[string]string { return v.AwsTags }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Cloud Connectors Resource ID
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) PublicCloudConnectorsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *string { return v.PublicCloudConnectorsResourceId }).(pulumi.StringPtrOutput)
}

// Public Cloud Resource Name
func (o Wafv2LoggingConfigurationPropertiesResponseOutput) PublicCloudResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Wafv2LoggingConfigurationPropertiesResponse) *string { return v.PublicCloudResourceName }).(pulumi.StringPtrOutput)
}

// Definition of Webhook
type Webhook struct {
	// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
	BranchFilter *string `pulumi:"branchFilter"`
	// <p>Specifies the type of build this webhook will trigger.</p>
	BuildType *WebhookBuildTypeEnumValue `pulumi:"buildType"`
	// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
	FilterGroups []FilterGroup `pulumi:"filterGroups"`
	// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
	LastModifiedSecret *string `pulumi:"lastModifiedSecret"`
	// <p>The CodeBuild endpoint where webhook events are sent.</p>
	PayloadUrl *string `pulumi:"payloadUrl"`
	// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
	Secret *string `pulumi:"secret"`
	// <p>The URL to the webhook.</p>
	Url *string `pulumi:"url"`
}

// WebhookInput is an input type that accepts WebhookArgs and WebhookOutput values.
// You can construct a concrete instance of `WebhookInput` via:
//
//	WebhookArgs{...}
type WebhookInput interface {
	pulumi.Input

	ToWebhookOutput() WebhookOutput
	ToWebhookOutputWithContext(context.Context) WebhookOutput
}

// Definition of Webhook
type WebhookArgs struct {
	// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
	BranchFilter pulumi.StringPtrInput `pulumi:"branchFilter"`
	// <p>Specifies the type of build this webhook will trigger.</p>
	BuildType WebhookBuildTypeEnumValuePtrInput `pulumi:"buildType"`
	// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
	FilterGroups FilterGroupArrayInput `pulumi:"filterGroups"`
	// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
	LastModifiedSecret pulumi.StringPtrInput `pulumi:"lastModifiedSecret"`
	// <p>The CodeBuild endpoint where webhook events are sent.</p>
	PayloadUrl pulumi.StringPtrInput `pulumi:"payloadUrl"`
	// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// <p>The URL to the webhook.</p>
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Webhook)(nil)).Elem()
}

func (i WebhookArgs) ToWebhookOutput() WebhookOutput {
	return i.ToWebhookOutputWithContext(context.Background())
}

func (i WebhookArgs) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput)
}

func (i WebhookArgs) ToWebhookPtrOutput() WebhookPtrOutput {
	return i.ToWebhookPtrOutputWithContext(context.Background())
}

func (i WebhookArgs) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput).ToWebhookPtrOutputWithContext(ctx)
}

// WebhookPtrInput is an input type that accepts WebhookArgs, WebhookPtr and WebhookPtrOutput values.
// You can construct a concrete instance of `WebhookPtrInput` via:
//
//	        WebhookArgs{...}
//
//	or:
//
//	        nil
type WebhookPtrInput interface {
	pulumi.Input

	ToWebhookPtrOutput() WebhookPtrOutput
	ToWebhookPtrOutputWithContext(context.Context) WebhookPtrOutput
}

type webhookPtrType WebhookArgs

func WebhookPtr(v *WebhookArgs) WebhookPtrInput {
	return (*webhookPtrType)(v)
}

func (*webhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (i *webhookPtrType) ToWebhookPtrOutput() WebhookPtrOutput {
	return i.ToWebhookPtrOutputWithContext(context.Background())
}

func (i *webhookPtrType) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPtrOutput)
}

// Definition of Webhook
type WebhookOutput struct{ *pulumi.OutputState }

func (WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Webhook)(nil)).Elem()
}

func (o WebhookOutput) ToWebhookOutput() WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookPtrOutput() WebhookPtrOutput {
	return o.ToWebhookPtrOutputWithContext(context.Background())
}

func (o WebhookOutput) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Webhook) *Webhook {
		return &v
	}).(WebhookPtrOutput)
}

// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
func (o WebhookOutput) BranchFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.BranchFilter }).(pulumi.StringPtrOutput)
}

// <p>Specifies the type of build this webhook will trigger.</p>
func (o WebhookOutput) BuildType() WebhookBuildTypeEnumValuePtrOutput {
	return o.ApplyT(func(v Webhook) *WebhookBuildTypeEnumValue { return v.BuildType }).(WebhookBuildTypeEnumValuePtrOutput)
}

// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
func (o WebhookOutput) FilterGroups() FilterGroupArrayOutput {
	return o.ApplyT(func(v Webhook) []FilterGroup { return v.FilterGroups }).(FilterGroupArrayOutput)
}

// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
func (o WebhookOutput) LastModifiedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.LastModifiedSecret }).(pulumi.StringPtrOutput)
}

// <p>The CodeBuild endpoint where webhook events are sent.</p>
func (o WebhookOutput) PayloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.PayloadUrl }).(pulumi.StringPtrOutput)
}

// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
func (o WebhookOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// <p>The URL to the webhook.</p>
func (o WebhookOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WebhookPtrOutput struct{ *pulumi.OutputState }

func (WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (o WebhookPtrOutput) ToWebhookPtrOutput() WebhookPtrOutput {
	return o
}

func (o WebhookPtrOutput) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return o
}

func (o WebhookPtrOutput) Elem() WebhookOutput {
	return o.ApplyT(func(v *Webhook) Webhook {
		if v != nil {
			return *v
		}
		var ret Webhook
		return ret
	}).(WebhookOutput)
}

// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
func (o WebhookPtrOutput) BranchFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.BranchFilter
	}).(pulumi.StringPtrOutput)
}

// <p>Specifies the type of build this webhook will trigger.</p>
func (o WebhookPtrOutput) BuildType() WebhookBuildTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *Webhook) *WebhookBuildTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.BuildType
	}).(WebhookBuildTypeEnumValuePtrOutput)
}

// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
func (o WebhookPtrOutput) FilterGroups() FilterGroupArrayOutput {
	return o.ApplyT(func(v *Webhook) []FilterGroup {
		if v == nil {
			return nil
		}
		return v.FilterGroups
	}).(FilterGroupArrayOutput)
}

// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
func (o WebhookPtrOutput) LastModifiedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedSecret
	}).(pulumi.StringPtrOutput)
}

// <p>The CodeBuild endpoint where webhook events are sent.</p>
func (o WebhookPtrOutput) PayloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.PayloadUrl
	}).(pulumi.StringPtrOutput)
}

// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
func (o WebhookPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// <p>The URL to the webhook.</p>
func (o WebhookPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Definition of WebhookBuildTypeEnumValue
type WebhookBuildTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// WebhookBuildTypeEnumValueInput is an input type that accepts WebhookBuildTypeEnumValueArgs and WebhookBuildTypeEnumValueOutput values.
// You can construct a concrete instance of `WebhookBuildTypeEnumValueInput` via:
//
//	WebhookBuildTypeEnumValueArgs{...}
type WebhookBuildTypeEnumValueInput interface {
	pulumi.Input

	ToWebhookBuildTypeEnumValueOutput() WebhookBuildTypeEnumValueOutput
	ToWebhookBuildTypeEnumValueOutputWithContext(context.Context) WebhookBuildTypeEnumValueOutput
}

// Definition of WebhookBuildTypeEnumValue
type WebhookBuildTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebhookBuildTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookBuildTypeEnumValue)(nil)).Elem()
}

func (i WebhookBuildTypeEnumValueArgs) ToWebhookBuildTypeEnumValueOutput() WebhookBuildTypeEnumValueOutput {
	return i.ToWebhookBuildTypeEnumValueOutputWithContext(context.Background())
}

func (i WebhookBuildTypeEnumValueArgs) ToWebhookBuildTypeEnumValueOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookBuildTypeEnumValueOutput)
}

func (i WebhookBuildTypeEnumValueArgs) ToWebhookBuildTypeEnumValuePtrOutput() WebhookBuildTypeEnumValuePtrOutput {
	return i.ToWebhookBuildTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i WebhookBuildTypeEnumValueArgs) ToWebhookBuildTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookBuildTypeEnumValueOutput).ToWebhookBuildTypeEnumValuePtrOutputWithContext(ctx)
}

// WebhookBuildTypeEnumValuePtrInput is an input type that accepts WebhookBuildTypeEnumValueArgs, WebhookBuildTypeEnumValuePtr and WebhookBuildTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `WebhookBuildTypeEnumValuePtrInput` via:
//
//	        WebhookBuildTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type WebhookBuildTypeEnumValuePtrInput interface {
	pulumi.Input

	ToWebhookBuildTypeEnumValuePtrOutput() WebhookBuildTypeEnumValuePtrOutput
	ToWebhookBuildTypeEnumValuePtrOutputWithContext(context.Context) WebhookBuildTypeEnumValuePtrOutput
}

type webhookBuildTypeEnumValuePtrType WebhookBuildTypeEnumValueArgs

func WebhookBuildTypeEnumValuePtr(v *WebhookBuildTypeEnumValueArgs) WebhookBuildTypeEnumValuePtrInput {
	return (*webhookBuildTypeEnumValuePtrType)(v)
}

func (*webhookBuildTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookBuildTypeEnumValue)(nil)).Elem()
}

func (i *webhookBuildTypeEnumValuePtrType) ToWebhookBuildTypeEnumValuePtrOutput() WebhookBuildTypeEnumValuePtrOutput {
	return i.ToWebhookBuildTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *webhookBuildTypeEnumValuePtrType) ToWebhookBuildTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookBuildTypeEnumValuePtrOutput)
}

// Definition of WebhookBuildTypeEnumValue
type WebhookBuildTypeEnumValueOutput struct{ *pulumi.OutputState }

func (WebhookBuildTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookBuildTypeEnumValue)(nil)).Elem()
}

func (o WebhookBuildTypeEnumValueOutput) ToWebhookBuildTypeEnumValueOutput() WebhookBuildTypeEnumValueOutput {
	return o
}

func (o WebhookBuildTypeEnumValueOutput) ToWebhookBuildTypeEnumValueOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValueOutput {
	return o
}

func (o WebhookBuildTypeEnumValueOutput) ToWebhookBuildTypeEnumValuePtrOutput() WebhookBuildTypeEnumValuePtrOutput {
	return o.ToWebhookBuildTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o WebhookBuildTypeEnumValueOutput) ToWebhookBuildTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookBuildTypeEnumValue) *WebhookBuildTypeEnumValue {
		return &v
	}).(WebhookBuildTypeEnumValuePtrOutput)
}

// Property value
func (o WebhookBuildTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookBuildTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookBuildTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (WebhookBuildTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookBuildTypeEnumValue)(nil)).Elem()
}

func (o WebhookBuildTypeEnumValuePtrOutput) ToWebhookBuildTypeEnumValuePtrOutput() WebhookBuildTypeEnumValuePtrOutput {
	return o
}

func (o WebhookBuildTypeEnumValuePtrOutput) ToWebhookBuildTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValuePtrOutput {
	return o
}

func (o WebhookBuildTypeEnumValuePtrOutput) Elem() WebhookBuildTypeEnumValueOutput {
	return o.ApplyT(func(v *WebhookBuildTypeEnumValue) WebhookBuildTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret WebhookBuildTypeEnumValue
		return ret
	}).(WebhookBuildTypeEnumValueOutput)
}

// Property value
func (o WebhookBuildTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookBuildTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of WebhookBuildTypeEnumValue
type WebhookBuildTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of WebhookBuildTypeEnumValue
type WebhookBuildTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (WebhookBuildTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookBuildTypeEnumValueResponse)(nil)).Elem()
}

func (o WebhookBuildTypeEnumValueResponseOutput) ToWebhookBuildTypeEnumValueResponseOutput() WebhookBuildTypeEnumValueResponseOutput {
	return o
}

func (o WebhookBuildTypeEnumValueResponseOutput) ToWebhookBuildTypeEnumValueResponseOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o WebhookBuildTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookBuildTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookBuildTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (WebhookBuildTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookBuildTypeEnumValueResponse)(nil)).Elem()
}

func (o WebhookBuildTypeEnumValueResponsePtrOutput) ToWebhookBuildTypeEnumValueResponsePtrOutput() WebhookBuildTypeEnumValueResponsePtrOutput {
	return o
}

func (o WebhookBuildTypeEnumValueResponsePtrOutput) ToWebhookBuildTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) WebhookBuildTypeEnumValueResponsePtrOutput {
	return o
}

func (o WebhookBuildTypeEnumValueResponsePtrOutput) Elem() WebhookBuildTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *WebhookBuildTypeEnumValueResponse) WebhookBuildTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret WebhookBuildTypeEnumValueResponse
		return ret
	}).(WebhookBuildTypeEnumValueResponseOutput)
}

// Property value
func (o WebhookBuildTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookBuildTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of WebhookFilter
type WebhookFilter struct {
	// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
	ExcludeMatchedPattern *bool `pulumi:"excludeMatchedPattern"`
	// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
	Pattern *string `pulumi:"pattern"`
	// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
	Type *WebhookFilterTypeEnumValue `pulumi:"type"`
}

// WebhookFilterInput is an input type that accepts WebhookFilterArgs and WebhookFilterOutput values.
// You can construct a concrete instance of `WebhookFilterInput` via:
//
//	WebhookFilterArgs{...}
type WebhookFilterInput interface {
	pulumi.Input

	ToWebhookFilterOutput() WebhookFilterOutput
	ToWebhookFilterOutputWithContext(context.Context) WebhookFilterOutput
}

// Definition of WebhookFilter
type WebhookFilterArgs struct {
	// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
	ExcludeMatchedPattern pulumi.BoolPtrInput `pulumi:"excludeMatchedPattern"`
	// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
	Type WebhookFilterTypeEnumValuePtrInput `pulumi:"type"`
}

func (WebhookFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilter)(nil)).Elem()
}

func (i WebhookFilterArgs) ToWebhookFilterOutput() WebhookFilterOutput {
	return i.ToWebhookFilterOutputWithContext(context.Background())
}

func (i WebhookFilterArgs) ToWebhookFilterOutputWithContext(ctx context.Context) WebhookFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterOutput)
}

func (i WebhookFilterArgs) ToWebhookFilterPtrOutput() WebhookFilterPtrOutput {
	return i.ToWebhookFilterPtrOutputWithContext(context.Background())
}

func (i WebhookFilterArgs) ToWebhookFilterPtrOutputWithContext(ctx context.Context) WebhookFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterOutput).ToWebhookFilterPtrOutputWithContext(ctx)
}

// WebhookFilterPtrInput is an input type that accepts WebhookFilterArgs, WebhookFilterPtr and WebhookFilterPtrOutput values.
// You can construct a concrete instance of `WebhookFilterPtrInput` via:
//
//	        WebhookFilterArgs{...}
//
//	or:
//
//	        nil
type WebhookFilterPtrInput interface {
	pulumi.Input

	ToWebhookFilterPtrOutput() WebhookFilterPtrOutput
	ToWebhookFilterPtrOutputWithContext(context.Context) WebhookFilterPtrOutput
}

type webhookFilterPtrType WebhookFilterArgs

func WebhookFilterPtr(v *WebhookFilterArgs) WebhookFilterPtrInput {
	return (*webhookFilterPtrType)(v)
}

func (*webhookFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilter)(nil)).Elem()
}

func (i *webhookFilterPtrType) ToWebhookFilterPtrOutput() WebhookFilterPtrOutput {
	return i.ToWebhookFilterPtrOutputWithContext(context.Background())
}

func (i *webhookFilterPtrType) ToWebhookFilterPtrOutputWithContext(ctx context.Context) WebhookFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterPtrOutput)
}

// Definition of WebhookFilter
type WebhookFilterOutput struct{ *pulumi.OutputState }

func (WebhookFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilter)(nil)).Elem()
}

func (o WebhookFilterOutput) ToWebhookFilterOutput() WebhookFilterOutput {
	return o
}

func (o WebhookFilterOutput) ToWebhookFilterOutputWithContext(ctx context.Context) WebhookFilterOutput {
	return o
}

func (o WebhookFilterOutput) ToWebhookFilterPtrOutput() WebhookFilterPtrOutput {
	return o.ToWebhookFilterPtrOutputWithContext(context.Background())
}

func (o WebhookFilterOutput) ToWebhookFilterPtrOutputWithContext(ctx context.Context) WebhookFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookFilter) *WebhookFilter {
		return &v
	}).(WebhookFilterPtrOutput)
}

// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
func (o WebhookFilterOutput) ExcludeMatchedPattern() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebhookFilter) *bool { return v.ExcludeMatchedPattern }).(pulumi.BoolPtrOutput)
}

// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
func (o WebhookFilterOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookFilter) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
func (o WebhookFilterOutput) Type() WebhookFilterTypeEnumValuePtrOutput {
	return o.ApplyT(func(v WebhookFilter) *WebhookFilterTypeEnumValue { return v.Type }).(WebhookFilterTypeEnumValuePtrOutput)
}

type WebhookFilterPtrOutput struct{ *pulumi.OutputState }

func (WebhookFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilter)(nil)).Elem()
}

func (o WebhookFilterPtrOutput) ToWebhookFilterPtrOutput() WebhookFilterPtrOutput {
	return o
}

func (o WebhookFilterPtrOutput) ToWebhookFilterPtrOutputWithContext(ctx context.Context) WebhookFilterPtrOutput {
	return o
}

func (o WebhookFilterPtrOutput) Elem() WebhookFilterOutput {
	return o.ApplyT(func(v *WebhookFilter) WebhookFilter {
		if v != nil {
			return *v
		}
		var ret WebhookFilter
		return ret
	}).(WebhookFilterOutput)
}

// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
func (o WebhookFilterPtrOutput) ExcludeMatchedPattern() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookFilter) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeMatchedPattern
	}).(pulumi.BoolPtrOutput)
}

// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
func (o WebhookFilterPtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookFilter) *string {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(pulumi.StringPtrOutput)
}

// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
func (o WebhookFilterPtrOutput) Type() WebhookFilterTypeEnumValuePtrOutput {
	return o.ApplyT(func(v *WebhookFilter) *WebhookFilterTypeEnumValue {
		if v == nil {
			return nil
		}
		return v.Type
	}).(WebhookFilterTypeEnumValuePtrOutput)
}

// Definition of WebhookFilter
type WebhookFilterResponse struct {
	// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
	ExcludeMatchedPattern *bool `pulumi:"excludeMatchedPattern"`
	// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
	Pattern *string `pulumi:"pattern"`
	// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
	Type *WebhookFilterTypeEnumValueResponse `pulumi:"type"`
}

// Definition of WebhookFilter
type WebhookFilterResponseOutput struct{ *pulumi.OutputState }

func (WebhookFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterResponse)(nil)).Elem()
}

func (o WebhookFilterResponseOutput) ToWebhookFilterResponseOutput() WebhookFilterResponseOutput {
	return o
}

func (o WebhookFilterResponseOutput) ToWebhookFilterResponseOutputWithContext(ctx context.Context) WebhookFilterResponseOutput {
	return o
}

// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
func (o WebhookFilterResponseOutput) ExcludeMatchedPattern() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebhookFilterResponse) *bool { return v.ExcludeMatchedPattern }).(pulumi.BoolPtrOutput)
}

// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
func (o WebhookFilterResponseOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookFilterResponse) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
func (o WebhookFilterResponseOutput) Type() WebhookFilterTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v WebhookFilterResponse) *WebhookFilterTypeEnumValueResponse { return v.Type }).(WebhookFilterTypeEnumValueResponsePtrOutput)
}

type WebhookFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (WebhookFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilterResponse)(nil)).Elem()
}

func (o WebhookFilterResponsePtrOutput) ToWebhookFilterResponsePtrOutput() WebhookFilterResponsePtrOutput {
	return o
}

func (o WebhookFilterResponsePtrOutput) ToWebhookFilterResponsePtrOutputWithContext(ctx context.Context) WebhookFilterResponsePtrOutput {
	return o
}

func (o WebhookFilterResponsePtrOutput) Elem() WebhookFilterResponseOutput {
	return o.ApplyT(func(v *WebhookFilterResponse) WebhookFilterResponse {
		if v != nil {
			return *v
		}
		var ret WebhookFilterResponse
		return ret
	}).(WebhookFilterResponseOutput)
}

// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>
func (o WebhookFilterResponsePtrOutput) ExcludeMatchedPattern() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookFilterResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeMatchedPattern
	}).(pulumi.BoolPtrOutput)
}

// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
func (o WebhookFilterResponsePtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(pulumi.StringPtrOutput)
}

// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>, <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>, <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>, <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>, <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code> works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code> work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>. </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>. </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>. </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p> A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p> <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p> <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p> <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li> <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p> <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
func (o WebhookFilterResponsePtrOutput) Type() WebhookFilterTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *WebhookFilterResponse) *WebhookFilterTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.Type
	}).(WebhookFilterTypeEnumValueResponsePtrOutput)
}

// Definition of WebhookFilterTypeEnumValue
type WebhookFilterTypeEnumValue struct {
	// Property value
	Value *string `pulumi:"value"`
}

// WebhookFilterTypeEnumValueInput is an input type that accepts WebhookFilterTypeEnumValueArgs and WebhookFilterTypeEnumValueOutput values.
// You can construct a concrete instance of `WebhookFilterTypeEnumValueInput` via:
//
//	WebhookFilterTypeEnumValueArgs{...}
type WebhookFilterTypeEnumValueInput interface {
	pulumi.Input

	ToWebhookFilterTypeEnumValueOutput() WebhookFilterTypeEnumValueOutput
	ToWebhookFilterTypeEnumValueOutputWithContext(context.Context) WebhookFilterTypeEnumValueOutput
}

// Definition of WebhookFilterTypeEnumValue
type WebhookFilterTypeEnumValueArgs struct {
	// Property value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebhookFilterTypeEnumValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterTypeEnumValue)(nil)).Elem()
}

func (i WebhookFilterTypeEnumValueArgs) ToWebhookFilterTypeEnumValueOutput() WebhookFilterTypeEnumValueOutput {
	return i.ToWebhookFilterTypeEnumValueOutputWithContext(context.Background())
}

func (i WebhookFilterTypeEnumValueArgs) ToWebhookFilterTypeEnumValueOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterTypeEnumValueOutput)
}

func (i WebhookFilterTypeEnumValueArgs) ToWebhookFilterTypeEnumValuePtrOutput() WebhookFilterTypeEnumValuePtrOutput {
	return i.ToWebhookFilterTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i WebhookFilterTypeEnumValueArgs) ToWebhookFilterTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterTypeEnumValueOutput).ToWebhookFilterTypeEnumValuePtrOutputWithContext(ctx)
}

// WebhookFilterTypeEnumValuePtrInput is an input type that accepts WebhookFilterTypeEnumValueArgs, WebhookFilterTypeEnumValuePtr and WebhookFilterTypeEnumValuePtrOutput values.
// You can construct a concrete instance of `WebhookFilterTypeEnumValuePtrInput` via:
//
//	        WebhookFilterTypeEnumValueArgs{...}
//
//	or:
//
//	        nil
type WebhookFilterTypeEnumValuePtrInput interface {
	pulumi.Input

	ToWebhookFilterTypeEnumValuePtrOutput() WebhookFilterTypeEnumValuePtrOutput
	ToWebhookFilterTypeEnumValuePtrOutputWithContext(context.Context) WebhookFilterTypeEnumValuePtrOutput
}

type webhookFilterTypeEnumValuePtrType WebhookFilterTypeEnumValueArgs

func WebhookFilterTypeEnumValuePtr(v *WebhookFilterTypeEnumValueArgs) WebhookFilterTypeEnumValuePtrInput {
	return (*webhookFilterTypeEnumValuePtrType)(v)
}

func (*webhookFilterTypeEnumValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilterTypeEnumValue)(nil)).Elem()
}

func (i *webhookFilterTypeEnumValuePtrType) ToWebhookFilterTypeEnumValuePtrOutput() WebhookFilterTypeEnumValuePtrOutput {
	return i.ToWebhookFilterTypeEnumValuePtrOutputWithContext(context.Background())
}

func (i *webhookFilterTypeEnumValuePtrType) ToWebhookFilterTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterTypeEnumValuePtrOutput)
}

// Definition of WebhookFilterTypeEnumValue
type WebhookFilterTypeEnumValueOutput struct{ *pulumi.OutputState }

func (WebhookFilterTypeEnumValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterTypeEnumValue)(nil)).Elem()
}

func (o WebhookFilterTypeEnumValueOutput) ToWebhookFilterTypeEnumValueOutput() WebhookFilterTypeEnumValueOutput {
	return o
}

func (o WebhookFilterTypeEnumValueOutput) ToWebhookFilterTypeEnumValueOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValueOutput {
	return o
}

func (o WebhookFilterTypeEnumValueOutput) ToWebhookFilterTypeEnumValuePtrOutput() WebhookFilterTypeEnumValuePtrOutput {
	return o.ToWebhookFilterTypeEnumValuePtrOutputWithContext(context.Background())
}

func (o WebhookFilterTypeEnumValueOutput) ToWebhookFilterTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookFilterTypeEnumValue) *WebhookFilterTypeEnumValue {
		return &v
	}).(WebhookFilterTypeEnumValuePtrOutput)
}

// Property value
func (o WebhookFilterTypeEnumValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookFilterTypeEnumValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookFilterTypeEnumValuePtrOutput struct{ *pulumi.OutputState }

func (WebhookFilterTypeEnumValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilterTypeEnumValue)(nil)).Elem()
}

func (o WebhookFilterTypeEnumValuePtrOutput) ToWebhookFilterTypeEnumValuePtrOutput() WebhookFilterTypeEnumValuePtrOutput {
	return o
}

func (o WebhookFilterTypeEnumValuePtrOutput) ToWebhookFilterTypeEnumValuePtrOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValuePtrOutput {
	return o
}

func (o WebhookFilterTypeEnumValuePtrOutput) Elem() WebhookFilterTypeEnumValueOutput {
	return o.ApplyT(func(v *WebhookFilterTypeEnumValue) WebhookFilterTypeEnumValue {
		if v != nil {
			return *v
		}
		var ret WebhookFilterTypeEnumValue
		return ret
	}).(WebhookFilterTypeEnumValueOutput)
}

// Property value
func (o WebhookFilterTypeEnumValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookFilterTypeEnumValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of WebhookFilterTypeEnumValue
type WebhookFilterTypeEnumValueResponse struct {
	// Property value
	Value *string `pulumi:"value"`
}

// Definition of WebhookFilterTypeEnumValue
type WebhookFilterTypeEnumValueResponseOutput struct{ *pulumi.OutputState }

func (WebhookFilterTypeEnumValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterTypeEnumValueResponse)(nil)).Elem()
}

func (o WebhookFilterTypeEnumValueResponseOutput) ToWebhookFilterTypeEnumValueResponseOutput() WebhookFilterTypeEnumValueResponseOutput {
	return o
}

func (o WebhookFilterTypeEnumValueResponseOutput) ToWebhookFilterTypeEnumValueResponseOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValueResponseOutput {
	return o
}

// Property value
func (o WebhookFilterTypeEnumValueResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookFilterTypeEnumValueResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookFilterTypeEnumValueResponsePtrOutput struct{ *pulumi.OutputState }

func (WebhookFilterTypeEnumValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookFilterTypeEnumValueResponse)(nil)).Elem()
}

func (o WebhookFilterTypeEnumValueResponsePtrOutput) ToWebhookFilterTypeEnumValueResponsePtrOutput() WebhookFilterTypeEnumValueResponsePtrOutput {
	return o
}

func (o WebhookFilterTypeEnumValueResponsePtrOutput) ToWebhookFilterTypeEnumValueResponsePtrOutputWithContext(ctx context.Context) WebhookFilterTypeEnumValueResponsePtrOutput {
	return o
}

func (o WebhookFilterTypeEnumValueResponsePtrOutput) Elem() WebhookFilterTypeEnumValueResponseOutput {
	return o.ApplyT(func(v *WebhookFilterTypeEnumValueResponse) WebhookFilterTypeEnumValueResponse {
		if v != nil {
			return *v
		}
		var ret WebhookFilterTypeEnumValueResponse
		return ret
	}).(WebhookFilterTypeEnumValueResponseOutput)
}

// Property value
func (o WebhookFilterTypeEnumValueResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookFilterTypeEnumValueResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Definition of Webhook
type WebhookResponse struct {
	// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
	BranchFilter *string `pulumi:"branchFilter"`
	// <p>Specifies the type of build this webhook will trigger.</p>
	BuildType *WebhookBuildTypeEnumValueResponse `pulumi:"buildType"`
	// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
	FilterGroups []FilterGroupResponse `pulumi:"filterGroups"`
	// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
	LastModifiedSecret *string `pulumi:"lastModifiedSecret"`
	// <p>The CodeBuild endpoint where webhook events are sent.</p>
	PayloadUrl *string `pulumi:"payloadUrl"`
	// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
	Secret *string `pulumi:"secret"`
	// <p>The URL to the webhook.</p>
	Url *string `pulumi:"url"`
}

// Definition of Webhook
type WebhookResponseOutput struct{ *pulumi.OutputState }

func (WebhookResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookResponse)(nil)).Elem()
}

func (o WebhookResponseOutput) ToWebhookResponseOutput() WebhookResponseOutput {
	return o
}

func (o WebhookResponseOutput) ToWebhookResponseOutputWithContext(ctx context.Context) WebhookResponseOutput {
	return o
}

// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
func (o WebhookResponseOutput) BranchFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.BranchFilter }).(pulumi.StringPtrOutput)
}

// <p>Specifies the type of build this webhook will trigger.</p>
func (o WebhookResponseOutput) BuildType() WebhookBuildTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v WebhookResponse) *WebhookBuildTypeEnumValueResponse { return v.BuildType }).(WebhookBuildTypeEnumValueResponsePtrOutput)
}

// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
func (o WebhookResponseOutput) FilterGroups() FilterGroupResponseArrayOutput {
	return o.ApplyT(func(v WebhookResponse) []FilterGroupResponse { return v.FilterGroups }).(FilterGroupResponseArrayOutput)
}

// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
func (o WebhookResponseOutput) LastModifiedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.LastModifiedSecret }).(pulumi.StringPtrOutput)
}

// <p>The CodeBuild endpoint where webhook events are sent.</p>
func (o WebhookResponseOutput) PayloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.PayloadUrl }).(pulumi.StringPtrOutput)
}

// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
func (o WebhookResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// <p>The URL to the webhook.</p>
func (o WebhookResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WebhookResponsePtrOutput struct{ *pulumi.OutputState }

func (WebhookResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookResponse)(nil)).Elem()
}

func (o WebhookResponsePtrOutput) ToWebhookResponsePtrOutput() WebhookResponsePtrOutput {
	return o
}

func (o WebhookResponsePtrOutput) ToWebhookResponsePtrOutputWithContext(ctx context.Context) WebhookResponsePtrOutput {
	return o
}

func (o WebhookResponsePtrOutput) Elem() WebhookResponseOutput {
	return o.ApplyT(func(v *WebhookResponse) WebhookResponse {
		if v != nil {
			return *v
		}
		var ret WebhookResponse
		return ret
	}).(WebhookResponseOutput)
}

// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>
func (o WebhookResponsePtrOutput) BranchFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.BranchFilter
	}).(pulumi.StringPtrOutput)
}

// <p>Specifies the type of build this webhook will trigger.</p>
func (o WebhookResponsePtrOutput) BuildType() WebhookBuildTypeEnumValueResponsePtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *WebhookBuildTypeEnumValueResponse {
		if v == nil {
			return nil
		}
		return v.BuildType
	}).(WebhookBuildTypeEnumValueResponsePtrOutput)
}

// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>
func (o WebhookResponsePtrOutput) FilterGroups() FilterGroupResponseArrayOutput {
	return o.ApplyT(func(v *WebhookResponse) []FilterGroupResponse {
		if v == nil {
			return nil
		}
		return v.FilterGroups
	}).(FilterGroupResponseArrayOutput)
}

// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
func (o WebhookResponsePtrOutput) LastModifiedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedSecret
	}).(pulumi.StringPtrOutput)
}

// <p>The CodeBuild endpoint where webhook events are sent.</p>
func (o WebhookResponsePtrOutput) PayloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.PayloadUrl
	}).(pulumi.StringPtrOutput)
}

// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>
func (o WebhookResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// <p>The URL to the webhook.</p>
func (o WebhookResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Definition of WebsiteConfiguration
type WebsiteConfiguration struct {
	// The name of the error document for the website.
	ErrorDocument *string `pulumi:"errorDocument"`
	// The name of the index document for the website.
	IndexDocument *string `pulumi:"indexDocument"`
	// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
	RedirectAllRequestsTo *RedirectAllRequestsTo `pulumi:"redirectAllRequestsTo"`
	// Rules that define when a redirect is applied and the redirect behavior.
	RoutingRules []RoutingRule `pulumi:"routingRules"`
}

// WebsiteConfigurationInput is an input type that accepts WebsiteConfigurationArgs and WebsiteConfigurationOutput values.
// You can construct a concrete instance of `WebsiteConfigurationInput` via:
//
//	WebsiteConfigurationArgs{...}
type WebsiteConfigurationInput interface {
	pulumi.Input

	ToWebsiteConfigurationOutput() WebsiteConfigurationOutput
	ToWebsiteConfigurationOutputWithContext(context.Context) WebsiteConfigurationOutput
}

// Definition of WebsiteConfiguration
type WebsiteConfigurationArgs struct {
	// The name of the error document for the website.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// The name of the index document for the website.
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
	// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
	RedirectAllRequestsTo RedirectAllRequestsToPtrInput `pulumi:"redirectAllRequestsTo"`
	// Rules that define when a redirect is applied and the redirect behavior.
	RoutingRules RoutingRuleArrayInput `pulumi:"routingRules"`
}

func (WebsiteConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteConfiguration)(nil)).Elem()
}

func (i WebsiteConfigurationArgs) ToWebsiteConfigurationOutput() WebsiteConfigurationOutput {
	return i.ToWebsiteConfigurationOutputWithContext(context.Background())
}

func (i WebsiteConfigurationArgs) ToWebsiteConfigurationOutputWithContext(ctx context.Context) WebsiteConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteConfigurationOutput)
}

func (i WebsiteConfigurationArgs) ToWebsiteConfigurationPtrOutput() WebsiteConfigurationPtrOutput {
	return i.ToWebsiteConfigurationPtrOutputWithContext(context.Background())
}

func (i WebsiteConfigurationArgs) ToWebsiteConfigurationPtrOutputWithContext(ctx context.Context) WebsiteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteConfigurationOutput).ToWebsiteConfigurationPtrOutputWithContext(ctx)
}

// WebsiteConfigurationPtrInput is an input type that accepts WebsiteConfigurationArgs, WebsiteConfigurationPtr and WebsiteConfigurationPtrOutput values.
// You can construct a concrete instance of `WebsiteConfigurationPtrInput` via:
//
//	        WebsiteConfigurationArgs{...}
//
//	or:
//
//	        nil
type WebsiteConfigurationPtrInput interface {
	pulumi.Input

	ToWebsiteConfigurationPtrOutput() WebsiteConfigurationPtrOutput
	ToWebsiteConfigurationPtrOutputWithContext(context.Context) WebsiteConfigurationPtrOutput
}

type websiteConfigurationPtrType WebsiteConfigurationArgs

func WebsiteConfigurationPtr(v *WebsiteConfigurationArgs) WebsiteConfigurationPtrInput {
	return (*websiteConfigurationPtrType)(v)
}

func (*websiteConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteConfiguration)(nil)).Elem()
}

func (i *websiteConfigurationPtrType) ToWebsiteConfigurationPtrOutput() WebsiteConfigurationPtrOutput {
	return i.ToWebsiteConfigurationPtrOutputWithContext(context.Background())
}

func (i *websiteConfigurationPtrType) ToWebsiteConfigurationPtrOutputWithContext(ctx context.Context) WebsiteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebsiteConfigurationPtrOutput)
}

// Definition of WebsiteConfiguration
type WebsiteConfigurationOutput struct{ *pulumi.OutputState }

func (WebsiteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteConfiguration)(nil)).Elem()
}

func (o WebsiteConfigurationOutput) ToWebsiteConfigurationOutput() WebsiteConfigurationOutput {
	return o
}

func (o WebsiteConfigurationOutput) ToWebsiteConfigurationOutputWithContext(ctx context.Context) WebsiteConfigurationOutput {
	return o
}

func (o WebsiteConfigurationOutput) ToWebsiteConfigurationPtrOutput() WebsiteConfigurationPtrOutput {
	return o.ToWebsiteConfigurationPtrOutputWithContext(context.Background())
}

func (o WebsiteConfigurationOutput) ToWebsiteConfigurationPtrOutputWithContext(ctx context.Context) WebsiteConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebsiteConfiguration) *WebsiteConfiguration {
		return &v
	}).(WebsiteConfigurationPtrOutput)
}

// The name of the error document for the website.
func (o WebsiteConfigurationOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebsiteConfiguration) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// The name of the index document for the website.
func (o WebsiteConfigurationOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebsiteConfiguration) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
func (o WebsiteConfigurationOutput) RedirectAllRequestsTo() RedirectAllRequestsToPtrOutput {
	return o.ApplyT(func(v WebsiteConfiguration) *RedirectAllRequestsTo { return v.RedirectAllRequestsTo }).(RedirectAllRequestsToPtrOutput)
}

// Rules that define when a redirect is applied and the redirect behavior.
func (o WebsiteConfigurationOutput) RoutingRules() RoutingRuleArrayOutput {
	return o.ApplyT(func(v WebsiteConfiguration) []RoutingRule { return v.RoutingRules }).(RoutingRuleArrayOutput)
}

type WebsiteConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebsiteConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteConfiguration)(nil)).Elem()
}

func (o WebsiteConfigurationPtrOutput) ToWebsiteConfigurationPtrOutput() WebsiteConfigurationPtrOutput {
	return o
}

func (o WebsiteConfigurationPtrOutput) ToWebsiteConfigurationPtrOutputWithContext(ctx context.Context) WebsiteConfigurationPtrOutput {
	return o
}

func (o WebsiteConfigurationPtrOutput) Elem() WebsiteConfigurationOutput {
	return o.ApplyT(func(v *WebsiteConfiguration) WebsiteConfiguration {
		if v != nil {
			return *v
		}
		var ret WebsiteConfiguration
		return ret
	}).(WebsiteConfigurationOutput)
}

// The name of the error document for the website.
func (o WebsiteConfigurationPtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

// The name of the index document for the website.
func (o WebsiteConfigurationPtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
func (o WebsiteConfigurationPtrOutput) RedirectAllRequestsTo() RedirectAllRequestsToPtrOutput {
	return o.ApplyT(func(v *WebsiteConfiguration) *RedirectAllRequestsTo {
		if v == nil {
			return nil
		}
		return v.RedirectAllRequestsTo
	}).(RedirectAllRequestsToPtrOutput)
}

// Rules that define when a redirect is applied and the redirect behavior.
func (o WebsiteConfigurationPtrOutput) RoutingRules() RoutingRuleArrayOutput {
	return o.ApplyT(func(v *WebsiteConfiguration) []RoutingRule {
		if v == nil {
			return nil
		}
		return v.RoutingRules
	}).(RoutingRuleArrayOutput)
}

// Definition of WebsiteConfiguration
type WebsiteConfigurationResponse struct {
	// The name of the error document for the website.
	ErrorDocument *string `pulumi:"errorDocument"`
	// The name of the index document for the website.
	IndexDocument *string `pulumi:"indexDocument"`
	// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
	RedirectAllRequestsTo *RedirectAllRequestsToResponse `pulumi:"redirectAllRequestsTo"`
	// Rules that define when a redirect is applied and the redirect behavior.
	RoutingRules []RoutingRuleResponse `pulumi:"routingRules"`
}

// Definition of WebsiteConfiguration
type WebsiteConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WebsiteConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebsiteConfigurationResponse)(nil)).Elem()
}

func (o WebsiteConfigurationResponseOutput) ToWebsiteConfigurationResponseOutput() WebsiteConfigurationResponseOutput {
	return o
}

func (o WebsiteConfigurationResponseOutput) ToWebsiteConfigurationResponseOutputWithContext(ctx context.Context) WebsiteConfigurationResponseOutput {
	return o
}

// The name of the error document for the website.
func (o WebsiteConfigurationResponseOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebsiteConfigurationResponse) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// The name of the index document for the website.
func (o WebsiteConfigurationResponseOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebsiteConfigurationResponse) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
func (o WebsiteConfigurationResponseOutput) RedirectAllRequestsTo() RedirectAllRequestsToResponsePtrOutput {
	return o.ApplyT(func(v WebsiteConfigurationResponse) *RedirectAllRequestsToResponse { return v.RedirectAllRequestsTo }).(RedirectAllRequestsToResponsePtrOutput)
}

// Rules that define when a redirect is applied and the redirect behavior.
func (o WebsiteConfigurationResponseOutput) RoutingRules() RoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v WebsiteConfigurationResponse) []RoutingRuleResponse { return v.RoutingRules }).(RoutingRuleResponseArrayOutput)
}

type WebsiteConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WebsiteConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebsiteConfigurationResponse)(nil)).Elem()
}

func (o WebsiteConfigurationResponsePtrOutput) ToWebsiteConfigurationResponsePtrOutput() WebsiteConfigurationResponsePtrOutput {
	return o
}

func (o WebsiteConfigurationResponsePtrOutput) ToWebsiteConfigurationResponsePtrOutputWithContext(ctx context.Context) WebsiteConfigurationResponsePtrOutput {
	return o
}

func (o WebsiteConfigurationResponsePtrOutput) Elem() WebsiteConfigurationResponseOutput {
	return o.ApplyT(func(v *WebsiteConfigurationResponse) WebsiteConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret WebsiteConfigurationResponse
		return ret
	}).(WebsiteConfigurationResponseOutput)
}

// The name of the error document for the website.
func (o WebsiteConfigurationResponsePtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

// The name of the index document for the website.
func (o WebsiteConfigurationResponsePtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebsiteConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

// The redirect behavior for every request to this bucket's website endpoint.  If you specify this property, you can't specify any other property. Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
func (o WebsiteConfigurationResponsePtrOutput) RedirectAllRequestsTo() RedirectAllRequestsToResponsePtrOutput {
	return o.ApplyT(func(v *WebsiteConfigurationResponse) *RedirectAllRequestsToResponse {
		if v == nil {
			return nil
		}
		return v.RedirectAllRequestsTo
	}).(RedirectAllRequestsToResponsePtrOutput)
}

// Rules that define when a redirect is applied and the redirect behavior.
func (o WebsiteConfigurationResponsePtrOutput) RoutingRules() RoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v *WebsiteConfigurationResponse) []RoutingRuleResponse {
		if v == nil {
			return nil
		}
		return v.RoutingRules
	}).(RoutingRuleResponseArrayOutput)
}

// Definition of WindowStartTime
type WindowStartTime struct {
	// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
	Hours *float64 `pulumi:"hours"`
	// <p>The start minute of the window, in UTC.</p>
	Minutes *float64 `pulumi:"minutes"`
}

// WindowStartTimeInput is an input type that accepts WindowStartTimeArgs and WindowStartTimeOutput values.
// You can construct a concrete instance of `WindowStartTimeInput` via:
//
//	WindowStartTimeArgs{...}
type WindowStartTimeInput interface {
	pulumi.Input

	ToWindowStartTimeOutput() WindowStartTimeOutput
	ToWindowStartTimeOutputWithContext(context.Context) WindowStartTimeOutput
}

// Definition of WindowStartTime
type WindowStartTimeArgs struct {
	// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
	Hours pulumi.Float64PtrInput `pulumi:"hours"`
	// <p>The start minute of the window, in UTC.</p>
	Minutes pulumi.Float64PtrInput `pulumi:"minutes"`
}

func (WindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowStartTime)(nil)).Elem()
}

func (i WindowStartTimeArgs) ToWindowStartTimeOutput() WindowStartTimeOutput {
	return i.ToWindowStartTimeOutputWithContext(context.Background())
}

func (i WindowStartTimeArgs) ToWindowStartTimeOutputWithContext(ctx context.Context) WindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowStartTimeOutput)
}

func (i WindowStartTimeArgs) ToWindowStartTimePtrOutput() WindowStartTimePtrOutput {
	return i.ToWindowStartTimePtrOutputWithContext(context.Background())
}

func (i WindowStartTimeArgs) ToWindowStartTimePtrOutputWithContext(ctx context.Context) WindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowStartTimeOutput).ToWindowStartTimePtrOutputWithContext(ctx)
}

// WindowStartTimePtrInput is an input type that accepts WindowStartTimeArgs, WindowStartTimePtr and WindowStartTimePtrOutput values.
// You can construct a concrete instance of `WindowStartTimePtrInput` via:
//
//	        WindowStartTimeArgs{...}
//
//	or:
//
//	        nil
type WindowStartTimePtrInput interface {
	pulumi.Input

	ToWindowStartTimePtrOutput() WindowStartTimePtrOutput
	ToWindowStartTimePtrOutputWithContext(context.Context) WindowStartTimePtrOutput
}

type windowStartTimePtrType WindowStartTimeArgs

func WindowStartTimePtr(v *WindowStartTimeArgs) WindowStartTimePtrInput {
	return (*windowStartTimePtrType)(v)
}

func (*windowStartTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowStartTime)(nil)).Elem()
}

func (i *windowStartTimePtrType) ToWindowStartTimePtrOutput() WindowStartTimePtrOutput {
	return i.ToWindowStartTimePtrOutputWithContext(context.Background())
}

func (i *windowStartTimePtrType) ToWindowStartTimePtrOutputWithContext(ctx context.Context) WindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowStartTimePtrOutput)
}

// Definition of WindowStartTime
type WindowStartTimeOutput struct{ *pulumi.OutputState }

func (WindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowStartTime)(nil)).Elem()
}

func (o WindowStartTimeOutput) ToWindowStartTimeOutput() WindowStartTimeOutput {
	return o
}

func (o WindowStartTimeOutput) ToWindowStartTimeOutputWithContext(ctx context.Context) WindowStartTimeOutput {
	return o
}

func (o WindowStartTimeOutput) ToWindowStartTimePtrOutput() WindowStartTimePtrOutput {
	return o.ToWindowStartTimePtrOutputWithContext(context.Background())
}

func (o WindowStartTimeOutput) ToWindowStartTimePtrOutputWithContext(ctx context.Context) WindowStartTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowStartTime) *WindowStartTime {
		return &v
	}).(WindowStartTimePtrOutput)
}

// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
func (o WindowStartTimeOutput) Hours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WindowStartTime) *float64 { return v.Hours }).(pulumi.Float64PtrOutput)
}

// <p>The start minute of the window, in UTC.</p>
func (o WindowStartTimeOutput) Minutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WindowStartTime) *float64 { return v.Minutes }).(pulumi.Float64PtrOutput)
}

type WindowStartTimePtrOutput struct{ *pulumi.OutputState }

func (WindowStartTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowStartTime)(nil)).Elem()
}

func (o WindowStartTimePtrOutput) ToWindowStartTimePtrOutput() WindowStartTimePtrOutput {
	return o
}

func (o WindowStartTimePtrOutput) ToWindowStartTimePtrOutputWithContext(ctx context.Context) WindowStartTimePtrOutput {
	return o
}

func (o WindowStartTimePtrOutput) Elem() WindowStartTimeOutput {
	return o.ApplyT(func(v *WindowStartTime) WindowStartTime {
		if v != nil {
			return *v
		}
		var ret WindowStartTime
		return ret
	}).(WindowStartTimeOutput)
}

// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
func (o WindowStartTimePtrOutput) Hours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WindowStartTime) *float64 {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.Float64PtrOutput)
}

// <p>The start minute of the window, in UTC.</p>
func (o WindowStartTimePtrOutput) Minutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WindowStartTime) *float64 {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.Float64PtrOutput)
}

// Definition of WindowStartTime
type WindowStartTimeResponse struct {
	// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
	Hours *float64 `pulumi:"hours"`
	// <p>The start minute of the window, in UTC.</p>
	Minutes *float64 `pulumi:"minutes"`
}

// Definition of WindowStartTime
type WindowStartTimeResponseOutput struct{ *pulumi.OutputState }

func (WindowStartTimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowStartTimeResponse)(nil)).Elem()
}

func (o WindowStartTimeResponseOutput) ToWindowStartTimeResponseOutput() WindowStartTimeResponseOutput {
	return o
}

func (o WindowStartTimeResponseOutput) ToWindowStartTimeResponseOutputWithContext(ctx context.Context) WindowStartTimeResponseOutput {
	return o
}

// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
func (o WindowStartTimeResponseOutput) Hours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WindowStartTimeResponse) *float64 { return v.Hours }).(pulumi.Float64PtrOutput)
}

// <p>The start minute of the window, in UTC.</p>
func (o WindowStartTimeResponseOutput) Minutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WindowStartTimeResponse) *float64 { return v.Minutes }).(pulumi.Float64PtrOutput)
}

type WindowStartTimeResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowStartTimeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowStartTimeResponse)(nil)).Elem()
}

func (o WindowStartTimeResponsePtrOutput) ToWindowStartTimeResponsePtrOutput() WindowStartTimeResponsePtrOutput {
	return o
}

func (o WindowStartTimeResponsePtrOutput) ToWindowStartTimeResponsePtrOutputWithContext(ctx context.Context) WindowStartTimeResponsePtrOutput {
	return o
}

func (o WindowStartTimeResponsePtrOutput) Elem() WindowStartTimeResponseOutput {
	return o.ApplyT(func(v *WindowStartTimeResponse) WindowStartTimeResponse {
		if v != nil {
			return *v
		}
		var ret WindowStartTimeResponse
		return ret
	}).(WindowStartTimeResponseOutput)
}

// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>
func (o WindowStartTimeResponsePtrOutput) Hours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WindowStartTimeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.Float64PtrOutput)
}

// <p>The start minute of the window, in UTC.</p>
func (o WindowStartTimeResponsePtrOutput) Minutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WindowStartTimeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.Float64PtrOutput)
}

// Definition of ZoneAwarenessConfig
type ZoneAwarenessConfig struct {
	// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
	AvailabilityZoneCount *int `pulumi:"availabilityZoneCount"`
}

// ZoneAwarenessConfigInput is an input type that accepts ZoneAwarenessConfigArgs and ZoneAwarenessConfigOutput values.
// You can construct a concrete instance of `ZoneAwarenessConfigInput` via:
//
//	ZoneAwarenessConfigArgs{...}
type ZoneAwarenessConfigInput interface {
	pulumi.Input

	ToZoneAwarenessConfigOutput() ZoneAwarenessConfigOutput
	ToZoneAwarenessConfigOutputWithContext(context.Context) ZoneAwarenessConfigOutput
}

// Definition of ZoneAwarenessConfig
type ZoneAwarenessConfigArgs struct {
	// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
	AvailabilityZoneCount pulumi.IntPtrInput `pulumi:"availabilityZoneCount"`
}

func (ZoneAwarenessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAwarenessConfig)(nil)).Elem()
}

func (i ZoneAwarenessConfigArgs) ToZoneAwarenessConfigOutput() ZoneAwarenessConfigOutput {
	return i.ToZoneAwarenessConfigOutputWithContext(context.Background())
}

func (i ZoneAwarenessConfigArgs) ToZoneAwarenessConfigOutputWithContext(ctx context.Context) ZoneAwarenessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAwarenessConfigOutput)
}

func (i ZoneAwarenessConfigArgs) ToZoneAwarenessConfigPtrOutput() ZoneAwarenessConfigPtrOutput {
	return i.ToZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i ZoneAwarenessConfigArgs) ToZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) ZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAwarenessConfigOutput).ToZoneAwarenessConfigPtrOutputWithContext(ctx)
}

// ZoneAwarenessConfigPtrInput is an input type that accepts ZoneAwarenessConfigArgs, ZoneAwarenessConfigPtr and ZoneAwarenessConfigPtrOutput values.
// You can construct a concrete instance of `ZoneAwarenessConfigPtrInput` via:
//
//	        ZoneAwarenessConfigArgs{...}
//
//	or:
//
//	        nil
type ZoneAwarenessConfigPtrInput interface {
	pulumi.Input

	ToZoneAwarenessConfigPtrOutput() ZoneAwarenessConfigPtrOutput
	ToZoneAwarenessConfigPtrOutputWithContext(context.Context) ZoneAwarenessConfigPtrOutput
}

type zoneAwarenessConfigPtrType ZoneAwarenessConfigArgs

func ZoneAwarenessConfigPtr(v *ZoneAwarenessConfigArgs) ZoneAwarenessConfigPtrInput {
	return (*zoneAwarenessConfigPtrType)(v)
}

func (*zoneAwarenessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneAwarenessConfig)(nil)).Elem()
}

func (i *zoneAwarenessConfigPtrType) ToZoneAwarenessConfigPtrOutput() ZoneAwarenessConfigPtrOutput {
	return i.ToZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i *zoneAwarenessConfigPtrType) ToZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) ZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAwarenessConfigPtrOutput)
}

// Definition of ZoneAwarenessConfig
type ZoneAwarenessConfigOutput struct{ *pulumi.OutputState }

func (ZoneAwarenessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAwarenessConfig)(nil)).Elem()
}

func (o ZoneAwarenessConfigOutput) ToZoneAwarenessConfigOutput() ZoneAwarenessConfigOutput {
	return o
}

func (o ZoneAwarenessConfigOutput) ToZoneAwarenessConfigOutputWithContext(ctx context.Context) ZoneAwarenessConfigOutput {
	return o
}

func (o ZoneAwarenessConfigOutput) ToZoneAwarenessConfigPtrOutput() ZoneAwarenessConfigPtrOutput {
	return o.ToZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (o ZoneAwarenessConfigOutput) ToZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) ZoneAwarenessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneAwarenessConfig) *ZoneAwarenessConfig {
		return &v
	}).(ZoneAwarenessConfigPtrOutput)
}

// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
func (o ZoneAwarenessConfigOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneAwarenessConfig) *int { return v.AvailabilityZoneCount }).(pulumi.IntPtrOutput)
}

type ZoneAwarenessConfigPtrOutput struct{ *pulumi.OutputState }

func (ZoneAwarenessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneAwarenessConfig)(nil)).Elem()
}

func (o ZoneAwarenessConfigPtrOutput) ToZoneAwarenessConfigPtrOutput() ZoneAwarenessConfigPtrOutput {
	return o
}

func (o ZoneAwarenessConfigPtrOutput) ToZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) ZoneAwarenessConfigPtrOutput {
	return o
}

func (o ZoneAwarenessConfigPtrOutput) Elem() ZoneAwarenessConfigOutput {
	return o.ApplyT(func(v *ZoneAwarenessConfig) ZoneAwarenessConfig {
		if v != nil {
			return *v
		}
		var ret ZoneAwarenessConfig
		return ret
	}).(ZoneAwarenessConfigOutput)
}

// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
func (o ZoneAwarenessConfigPtrOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneAwarenessConfig) *int {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneCount
	}).(pulumi.IntPtrOutput)
}

// Definition of ZoneAwarenessConfig
type ZoneAwarenessConfigResponse struct {
	// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
	AvailabilityZoneCount *int `pulumi:"availabilityZoneCount"`
}

// Definition of ZoneAwarenessConfig
type ZoneAwarenessConfigResponseOutput struct{ *pulumi.OutputState }

func (ZoneAwarenessConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAwarenessConfigResponse)(nil)).Elem()
}

func (o ZoneAwarenessConfigResponseOutput) ToZoneAwarenessConfigResponseOutput() ZoneAwarenessConfigResponseOutput {
	return o
}

func (o ZoneAwarenessConfigResponseOutput) ToZoneAwarenessConfigResponseOutputWithContext(ctx context.Context) ZoneAwarenessConfigResponseOutput {
	return o
}

// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
func (o ZoneAwarenessConfigResponseOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneAwarenessConfigResponse) *int { return v.AvailabilityZoneCount }).(pulumi.IntPtrOutput)
}

type ZoneAwarenessConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ZoneAwarenessConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneAwarenessConfigResponse)(nil)).Elem()
}

func (o ZoneAwarenessConfigResponsePtrOutput) ToZoneAwarenessConfigResponsePtrOutput() ZoneAwarenessConfigResponsePtrOutput {
	return o
}

func (o ZoneAwarenessConfigResponsePtrOutput) ToZoneAwarenessConfigResponsePtrOutputWithContext(ctx context.Context) ZoneAwarenessConfigResponsePtrOutput {
	return o
}

func (o ZoneAwarenessConfigResponsePtrOutput) Elem() ZoneAwarenessConfigResponseOutput {
	return o.ApplyT(func(v *ZoneAwarenessConfigResponse) ZoneAwarenessConfigResponse {
		if v != nil {
			return *v
		}
		var ret ZoneAwarenessConfigResponse
		return ret
	}).(ZoneAwarenessConfigResponseOutput)
}

// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>
func (o ZoneAwarenessConfigResponsePtrOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneAwarenessConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneCount
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(SsmParameterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SsmResourceComplianceSummaryItemPropertiesOutput{})
	pulumi.RegisterOutputType(SsmResourceComplianceSummaryItemPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SsmResourceComplianceSummaryItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StackInstancesOutput{})
	pulumi.RegisterOutputType(StackInstancesArrayOutput{})
	pulumi.RegisterOutputType(StackInstancesResponseOutput{})
	pulumi.RegisterOutputType(StackInstancesResponseArrayOutput{})
	pulumi.RegisterOutputType(StateOutput{})
	pulumi.RegisterOutputType(StatePtrOutput{})
	pulumi.RegisterOutputType(StateReasonOutput{})
	pulumi.RegisterOutputType(StateReasonPtrOutput{})
	pulumi.RegisterOutputType(StateReasonResponseOutput{})
	pulumi.RegisterOutputType(StateReasonResponsePtrOutput{})
	pulumi.RegisterOutputType(StateResponseOutput{})
	pulumi.RegisterOutputType(StateResponsePtrOutput{})
	pulumi.RegisterOutputType(StatefulEngineOptionsOutput{})
	pulumi.RegisterOutputType(StatefulEngineOptionsPtrOutput{})
	pulumi.RegisterOutputType(StatefulEngineOptionsResponseOutput{})
	pulumi.RegisterOutputType(StatefulEngineOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(StatefulRuleOutput{})
	pulumi.RegisterOutputType(StatefulRuleArrayOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupOverridePtrOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupOverrideResponsePtrOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupReferenceArrayOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupReferenceResponseOutput{})
	pulumi.RegisterOutputType(StatefulRuleGroupReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(StatefulRuleOptionsOutput{})
	pulumi.RegisterOutputType(StatefulRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(StatefulRuleOptionsResponseOutput{})
	pulumi.RegisterOutputType(StatefulRuleOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(StatefulRuleResponseOutput{})
	pulumi.RegisterOutputType(StatefulRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(StatelessRuleOutput{})
	pulumi.RegisterOutputType(StatelessRuleArrayOutput{})
	pulumi.RegisterOutputType(StatelessRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(StatelessRuleGroupReferenceArrayOutput{})
	pulumi.RegisterOutputType(StatelessRuleGroupReferenceResponseOutput{})
	pulumi.RegisterOutputType(StatelessRuleGroupReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(StatelessRuleResponseOutput{})
	pulumi.RegisterOutputType(StatelessRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(StatelessRulesAndCustomActionsOutput{})
	pulumi.RegisterOutputType(StatelessRulesAndCustomActionsPtrOutput{})
	pulumi.RegisterOutputType(StatelessRulesAndCustomActionsResponseOutput{})
	pulumi.RegisterOutputType(StatelessRulesAndCustomActionsResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusCodesOutput{})
	pulumi.RegisterOutputType(StatusCodesPtrOutput{})
	pulumi.RegisterOutputType(StatusCodesResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusNameEnumValueOutput{})
	pulumi.RegisterOutputType(StatusNameEnumValuePtrOutput{})
	pulumi.RegisterOutputType(StatusNameEnumValueResponseOutput{})
	pulumi.RegisterOutputType(StatusNameEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusTypeEnumValueOutput{})
	pulumi.RegisterOutputType(StatusTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(StatusTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(StatusTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageClassAnalysisOutput{})
	pulumi.RegisterOutputType(StorageClassAnalysisPtrOutput{})
	pulumi.RegisterOutputType(StorageClassAnalysisResponseOutput{})
	pulumi.RegisterOutputType(StorageClassAnalysisResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageTierEnumValueOutput{})
	pulumi.RegisterOutputType(StorageTierEnumValuePtrOutput{})
	pulumi.RegisterOutputType(StorageTierEnumValueResponseOutput{})
	pulumi.RegisterOutputType(StorageTierEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(StreamSpecificationOutput{})
	pulumi.RegisterOutputType(StreamSpecificationPtrOutput{})
	pulumi.RegisterOutputType(StreamSpecificationResponseOutput{})
	pulumi.RegisterOutputType(StreamSpecificationResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetOutput{})
	pulumi.RegisterOutputType(SubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetMappingOutput{})
	pulumi.RegisterOutputType(SubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(SubnetMappingResponseOutput{})
	pulumi.RegisterOutputType(SubnetMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionOutput{})
	pulumi.RegisterOutputType(SubscriptionArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(SummaryStatusEnumValueOutput{})
	pulumi.RegisterOutputType(SummaryStatusEnumValuePtrOutput{})
	pulumi.RegisterOutputType(SummaryStatusEnumValueResponseOutput{})
	pulumi.RegisterOutputType(SummaryStatusEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemControlOutput{})
	pulumi.RegisterOutputType(SystemControlArrayOutput{})
	pulumi.RegisterOutputType(SystemControlResponseOutput{})
	pulumi.RegisterOutputType(SystemControlResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TCPFlagFieldOutput{})
	pulumi.RegisterOutputType(TCPFlagFieldArrayOutput{})
	pulumi.RegisterOutputType(TCPFlagFieldResponseOutput{})
	pulumi.RegisterOutputType(TCPFlagFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(TLSSecurityPolicyEnumValueOutput{})
	pulumi.RegisterOutputType(TLSSecurityPolicyEnumValuePtrOutput{})
	pulumi.RegisterOutputType(TLSSecurityPolicyEnumValueResponseOutput{})
	pulumi.RegisterOutputType(TLSSecurityPolicyEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(TagOutput{})
	pulumi.RegisterOutputType(TagArrayOutput{})
	pulumi.RegisterOutputType(TagCriterionForJobOutput{})
	pulumi.RegisterOutputType(TagCriterionForJobPtrOutput{})
	pulumi.RegisterOutputType(TagCriterionForJobResponseOutput{})
	pulumi.RegisterOutputType(TagCriterionForJobResponsePtrOutput{})
	pulumi.RegisterOutputType(TagCriterionPairForJobOutput{})
	pulumi.RegisterOutputType(TagCriterionPairForJobArrayOutput{})
	pulumi.RegisterOutputType(TagCriterionPairForJobResponseOutput{})
	pulumi.RegisterOutputType(TagCriterionPairForJobResponseArrayOutput{})
	pulumi.RegisterOutputType(TagFilterOutput{})
	pulumi.RegisterOutputType(TagFilterPtrOutput{})
	pulumi.RegisterOutputType(TagFilterArrayOutput{})
	pulumi.RegisterOutputType(TagFilterResponseOutput{})
	pulumi.RegisterOutputType(TagFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(TagFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(TagItemOutput{})
	pulumi.RegisterOutputType(TagItemArrayOutput{})
	pulumi.RegisterOutputType(TagItemResponseOutput{})
	pulumi.RegisterOutputType(TagItemResponseArrayOutput{})
	pulumi.RegisterOutputType(TagPropertyOutput{})
	pulumi.RegisterOutputType(TagPropertyArrayOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(TagResponseOutput{})
	pulumi.RegisterOutputType(TagResponseArrayOutput{})
	pulumi.RegisterOutputType(TaintOutput{})
	pulumi.RegisterOutputType(TaintArrayOutput{})
	pulumi.RegisterOutputType(TaintResponseOutput{})
	pulumi.RegisterOutputType(TaintResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetDescriptionOutput{})
	pulumi.RegisterOutputType(TargetDescriptionPtrOutput{})
	pulumi.RegisterOutputType(TargetDescriptionArrayOutput{})
	pulumi.RegisterOutputType(TargetDescriptionResponseOutput{})
	pulumi.RegisterOutputType(TargetDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupAttributeOutput{})
	pulumi.RegisterOutputType(TargetGroupAttributeArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupAttributeResponseOutput{})
	pulumi.RegisterOutputType(TargetGroupAttributeResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupStickinessConfigResponseOutput{})
	pulumi.RegisterOutputType(TargetGroupStickinessConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetGroupTupleResponseOutput{})
	pulumi.RegisterOutputType(TargetGroupTupleResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetHealthOutput{})
	pulumi.RegisterOutputType(TargetHealthPtrOutput{})
	pulumi.RegisterOutputType(TargetHealthReasonEnumEnumValueOutput{})
	pulumi.RegisterOutputType(TargetHealthReasonEnumEnumValuePtrOutput{})
	pulumi.RegisterOutputType(TargetHealthReasonEnumEnumValueResponseOutput{})
	pulumi.RegisterOutputType(TargetHealthReasonEnumEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetHealthResponseOutput{})
	pulumi.RegisterOutputType(TargetHealthResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetHealthStateEnumEnumValueOutput{})
	pulumi.RegisterOutputType(TargetHealthStateEnumEnumValuePtrOutput{})
	pulumi.RegisterOutputType(TargetHealthStateEnumEnumValueResponseOutput{})
	pulumi.RegisterOutputType(TargetHealthStateEnumEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetObjectKeyFormatOutput{})
	pulumi.RegisterOutputType(TargetObjectKeyFormatPtrOutput{})
	pulumi.RegisterOutputType(TargetObjectKeyFormatResponseOutput{})
	pulumi.RegisterOutputType(TargetObjectKeyFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintResponseOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintResponseArrayOutput{})
	pulumi.RegisterOutputType(TenancyEnumValueOutput{})
	pulumi.RegisterOutputType(TenancyEnumValuePtrOutput{})
	pulumi.RegisterOutputType(TenancyEnumValueResponseOutput{})
	pulumi.RegisterOutputType(TenancyEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(TierResponseOutput{})
	pulumi.RegisterOutputType(TierResponsePtrOutput{})
	pulumi.RegisterOutputType(TieringOutput{})
	pulumi.RegisterOutputType(TieringArrayOutput{})
	pulumi.RegisterOutputType(TieringResponseOutput{})
	pulumi.RegisterOutputType(TieringResponseArrayOutput{})
	pulumi.RegisterOutputType(TimeToLiveSpecificationOutput{})
	pulumi.RegisterOutputType(TimeToLiveSpecificationPtrOutput{})
	pulumi.RegisterOutputType(TimeToLiveSpecificationResponseOutput{})
	pulumi.RegisterOutputType(TimeToLiveSpecificationResponsePtrOutput{})
	pulumi.RegisterOutputType(TimeoutConfigurationOutput{})
	pulumi.RegisterOutputType(TimeoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TimeoutConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TimeoutConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(TmpfsOutput{})
	pulumi.RegisterOutputType(TmpfsArrayOutput{})
	pulumi.RegisterOutputType(TmpfsResponseOutput{})
	pulumi.RegisterOutputType(TmpfsResponseArrayOutput{})
	pulumi.RegisterOutputType(TopicConfigurationOutput{})
	pulumi.RegisterOutputType(TopicConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TopicConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TopicConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(TotalLocalStorageGBRequestOutput{})
	pulumi.RegisterOutputType(TotalLocalStorageGBRequestPtrOutput{})
	pulumi.RegisterOutputType(TotalLocalStorageGBRequestResponseOutput{})
	pulumi.RegisterOutputType(TotalLocalStorageGBRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(TpmSupportValuesEnumValueOutput{})
	pulumi.RegisterOutputType(TpmSupportValuesEnumValuePtrOutput{})
	pulumi.RegisterOutputType(TpmSupportValuesEnumValueResponseOutput{})
	pulumi.RegisterOutputType(TpmSupportValuesEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(TracingConfigOutput{})
	pulumi.RegisterOutputType(TracingConfigPtrOutput{})
	pulumi.RegisterOutputType(TracingConfigResponseOutput{})
	pulumi.RegisterOutputType(TracingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(TransitionOutput{})
	pulumi.RegisterOutputType(TransitionPtrOutput{})
	pulumi.RegisterOutputType(TransitionArrayOutput{})
	pulumi.RegisterOutputType(TransitionResponseOutput{})
	pulumi.RegisterOutputType(TransitionResponsePtrOutput{})
	pulumi.RegisterOutputType(TransitionResponseArrayOutput{})
	pulumi.RegisterOutputType(TypeEnumValueOutput{})
	pulumi.RegisterOutputType(TypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(TypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(TypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(UlimitOutput{})
	pulumi.RegisterOutputType(UlimitArrayOutput{})
	pulumi.RegisterOutputType(UlimitResponseOutput{})
	pulumi.RegisterOutputType(UlimitResponseArrayOutput{})
	pulumi.RegisterOutputType(UnusedAccessConfigurationOutput{})
	pulumi.RegisterOutputType(UnusedAccessConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UnusedAccessConfigurationResponseOutput{})
	pulumi.RegisterOutputType(UnusedAccessConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(UpdateConfigOutput{})
	pulumi.RegisterOutputType(UpdateConfigPtrOutput{})
	pulumi.RegisterOutputType(UpdateConfigResponseOutput{})
	pulumi.RegisterOutputType(UpdateConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdGroupPairOutput{})
	pulumi.RegisterOutputType(UserIdGroupPairArrayOutput{})
	pulumi.RegisterOutputType(UserIdGroupPairResponseOutput{})
	pulumi.RegisterOutputType(UserIdGroupPairResponseArrayOutput{})
	pulumi.RegisterOutputType(UserPausedDetailsOutput{})
	pulumi.RegisterOutputType(UserPausedDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserPausedDetailsResponseOutput{})
	pulumi.RegisterOutputType(UserPausedDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserPoolConfigOutput{})
	pulumi.RegisterOutputType(UserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolConfigResponseOutput{})
	pulumi.RegisterOutputType(UserPoolConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(VCpuCountRequestOutput{})
	pulumi.RegisterOutputType(VCpuCountRequestPtrOutput{})
	pulumi.RegisterOutputType(VCpuCountRequestResponseOutput{})
	pulumi.RegisterOutputType(VCpuCountRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(VPCOutput{})
	pulumi.RegisterOutputType(VPCArrayOutput{})
	pulumi.RegisterOutputType(VPCDerivedInfoOutput{})
	pulumi.RegisterOutputType(VPCDerivedInfoPtrOutput{})
	pulumi.RegisterOutputType(VPCDerivedInfoResponseOutput{})
	pulumi.RegisterOutputType(VPCDerivedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(VPCResponseOutput{})
	pulumi.RegisterOutputType(VPCResponseArrayOutput{})
	pulumi.RegisterOutputType(VersioningConfigurationOutput{})
	pulumi.RegisterOutputType(VersioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VersioningConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VersioningConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ViewerCertificateOutput{})
	pulumi.RegisterOutputType(ViewerCertificatePtrOutput{})
	pulumi.RegisterOutputType(ViewerCertificateResponseOutput{})
	pulumi.RegisterOutputType(ViewerCertificateResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualizationTypeEnumValueOutput{})
	pulumi.RegisterOutputType(VirtualizationTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(VirtualizationTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(VirtualizationTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeOutput{})
	pulumi.RegisterOutputType(VolumeArrayOutput{})
	pulumi.RegisterOutputType(VolumeFromOutput{})
	pulumi.RegisterOutputType(VolumeFromArrayOutput{})
	pulumi.RegisterOutputType(VolumeFromResponseOutput{})
	pulumi.RegisterOutputType(VolumeFromResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumeResponseOutput{})
	pulumi.RegisterOutputType(VolumeResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumeTypeEnumValueOutput{})
	pulumi.RegisterOutputType(VolumeTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(VolumeTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(VolumeTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(VpcConfigOutput{})
	pulumi.RegisterOutputType(VpcConfigPtrOutput{})
	pulumi.RegisterOutputType(VpcConfigResponseOutput{})
	pulumi.RegisterOutputType(VpcConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(VpcConfigResponseResponseOutput{})
	pulumi.RegisterOutputType(VpcConfigResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(VpcConfigurationOutput{})
	pulumi.RegisterOutputType(VpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpcConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpcConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupMembershipOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupMembershipArrayOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupMembershipResponseOutput{})
	pulumi.RegisterOutputType(VpcSecurityGroupMembershipResponseArrayOutput{})
	pulumi.RegisterOutputType(WafWebACLSummaryPropertiesOutput{})
	pulumi.RegisterOutputType(WafWebACLSummaryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WafWebACLSummaryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(Wafv2LoggingConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(Wafv2LoggingConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(Wafv2LoggingConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WebhookOutput{})
	pulumi.RegisterOutputType(WebhookPtrOutput{})
	pulumi.RegisterOutputType(WebhookBuildTypeEnumValueOutput{})
	pulumi.RegisterOutputType(WebhookBuildTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(WebhookBuildTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(WebhookBuildTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterOutput{})
	pulumi.RegisterOutputType(WebhookFilterPtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterResponseOutput{})
	pulumi.RegisterOutputType(WebhookFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterTypeEnumValueOutput{})
	pulumi.RegisterOutputType(WebhookFilterTypeEnumValuePtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterTypeEnumValueResponseOutput{})
	pulumi.RegisterOutputType(WebhookFilterTypeEnumValueResponsePtrOutput{})
	pulumi.RegisterOutputType(WebhookResponseOutput{})
	pulumi.RegisterOutputType(WebhookResponsePtrOutput{})
	pulumi.RegisterOutputType(WebsiteConfigurationOutput{})
	pulumi.RegisterOutputType(WebsiteConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebsiteConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WebsiteConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(WindowStartTimeOutput{})
	pulumi.RegisterOutputType(WindowStartTimePtrOutput{})
	pulumi.RegisterOutputType(WindowStartTimeResponseOutput{})
	pulumi.RegisterOutputType(WindowStartTimeResponsePtrOutput{})
	pulumi.RegisterOutputType(ZoneAwarenessConfigOutput{})
	pulumi.RegisterOutputType(ZoneAwarenessConfigPtrOutput{})
	pulumi.RegisterOutputType(ZoneAwarenessConfigResponseOutput{})
	pulumi.RegisterOutputType(ZoneAwarenessConfigResponsePtrOutput{})
}
