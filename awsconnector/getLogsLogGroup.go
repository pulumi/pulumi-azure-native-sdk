// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a LogsLogGroup
// Azure REST API version: 2024-12-01.
func LookupLogsLogGroup(ctx *pulumi.Context, args *LookupLogsLogGroupArgs, opts ...pulumi.InvokeOption) (*LookupLogsLogGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupLogsLogGroupResult
	err := ctx.Invoke("azure-native:awsconnector:getLogsLogGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupLogsLogGroupArgs struct {
	// Name of LogsLogGroup
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Microsoft.AwsConnector resource
type LookupLogsLogGroupResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties LogsLogGroupPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupLogsLogGroupResult
func (val *LookupLogsLogGroupResult) Defaults() *LookupLogsLogGroupResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}

func LookupLogsLogGroupOutput(ctx *pulumi.Context, args LookupLogsLogGroupOutputArgs, opts ...pulumi.InvokeOption) LookupLogsLogGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLogsLogGroupResultOutput, error) {
			args := v.(LookupLogsLogGroupArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupLogsLogGroupResult
			secret, err := ctx.InvokePackageRaw("azure-native:awsconnector:getLogsLogGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupLogsLogGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupLogsLogGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupLogsLogGroupResultOutput), nil
			}
			return output, nil
		}).(LookupLogsLogGroupResultOutput)
}

type LookupLogsLogGroupOutputArgs struct {
	// Name of LogsLogGroup
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLogsLogGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogsLogGroupArgs)(nil)).Elem()
}

// A Microsoft.AwsConnector resource
type LookupLogsLogGroupResultOutput struct{ *pulumi.OutputState }

func (LookupLogsLogGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogsLogGroupResult)(nil)).Elem()
}

func (o LookupLogsLogGroupResultOutput) ToLookupLogsLogGroupResultOutput() LookupLogsLogGroupResultOutput {
	return o
}

func (o LookupLogsLogGroupResultOutput) ToLookupLogsLogGroupResultOutputWithContext(ctx context.Context) LookupLogsLogGroupResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupLogsLogGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupLogsLogGroupResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLogsLogGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupLogsLogGroupResultOutput) Properties() LogsLogGroupPropertiesResponseOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) LogsLogGroupPropertiesResponse { return v.Properties }).(LogsLogGroupPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupLogsLogGroupResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupLogsLogGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLogsLogGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogsLogGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogsLogGroupResultOutput{})
}
