// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a S3Bucket
// Azure REST API version: 2024-12-01.
func LookupS3Bucket(ctx *pulumi.Context, args *LookupS3BucketArgs, opts ...pulumi.InvokeOption) (*LookupS3BucketResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupS3BucketResult
	err := ctx.Invoke("azure-native:awsconnector:getS3Bucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupS3BucketArgs struct {
	// Name of S3Bucket
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Microsoft.AwsConnector resource
type LookupS3BucketResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties S3BucketPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupS3BucketResult
func (val *LookupS3BucketResult) Defaults() *LookupS3BucketResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}

func LookupS3BucketOutput(ctx *pulumi.Context, args LookupS3BucketOutputArgs, opts ...pulumi.InvokeOption) LookupS3BucketResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupS3BucketResultOutput, error) {
			args := v.(LookupS3BucketArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupS3BucketResult
			secret, err := ctx.InvokePackageRaw("azure-native:awsconnector:getS3Bucket", args, &rv, "", opts...)
			if err != nil {
				return LookupS3BucketResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupS3BucketResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupS3BucketResultOutput), nil
			}
			return output, nil
		}).(LookupS3BucketResultOutput)
}

type LookupS3BucketOutputArgs struct {
	// Name of S3Bucket
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupS3BucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupS3BucketArgs)(nil)).Elem()
}

// A Microsoft.AwsConnector resource
type LookupS3BucketResultOutput struct{ *pulumi.OutputState }

func (LookupS3BucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupS3BucketResult)(nil)).Elem()
}

func (o LookupS3BucketResultOutput) ToLookupS3BucketResultOutput() LookupS3BucketResultOutput {
	return o
}

func (o LookupS3BucketResultOutput) ToLookupS3BucketResultOutputWithContext(ctx context.Context) LookupS3BucketResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupS3BucketResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupS3BucketResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupS3BucketResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupS3BucketResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupS3BucketResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupS3BucketResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupS3BucketResultOutput) Properties() S3BucketPropertiesResponseOutput {
	return o.ApplyT(func(v LookupS3BucketResult) S3BucketPropertiesResponse { return v.Properties }).(S3BucketPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupS3BucketResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupS3BucketResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupS3BucketResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupS3BucketResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupS3BucketResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupS3BucketResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupS3BucketResultOutput{})
}
