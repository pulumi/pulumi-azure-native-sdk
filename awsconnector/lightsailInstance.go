// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsconnector

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Microsoft.AwsConnector resource
//
// Uses Azure REST API version 2024-12-01.
type LightsailInstance struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties LightsailInstancePropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLightsailInstance registers a new resource with the given unique name, arguments, and options.
func NewLightsailInstance(ctx *pulumi.Context,
	name string, args *LightsailInstanceArgs, opts ...pulumi.ResourceOption) (*LightsailInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:awsconnector/v20241201:LightsailInstance"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource LightsailInstance
	err := ctx.RegisterResource("azure-native:awsconnector:LightsailInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLightsailInstance gets an existing LightsailInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLightsailInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LightsailInstanceState, opts ...pulumi.ResourceOption) (*LightsailInstance, error) {
	var resource LightsailInstance
	err := ctx.ReadResource("azure-native:awsconnector:LightsailInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LightsailInstance resources.
type lightsailInstanceState struct {
}

type LightsailInstanceState struct {
}

func (LightsailInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*lightsailInstanceState)(nil)).Elem()
}

type lightsailInstanceArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of LightsailInstance
	Name *string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties *LightsailInstanceProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LightsailInstance resource.
type LightsailInstanceArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of LightsailInstance
	Name pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties LightsailInstancePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (LightsailInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lightsailInstanceArgs)(nil)).Elem()
}

type LightsailInstanceInput interface {
	pulumi.Input

	ToLightsailInstanceOutput() LightsailInstanceOutput
	ToLightsailInstanceOutputWithContext(ctx context.Context) LightsailInstanceOutput
}

func (*LightsailInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**LightsailInstance)(nil)).Elem()
}

func (i *LightsailInstance) ToLightsailInstanceOutput() LightsailInstanceOutput {
	return i.ToLightsailInstanceOutputWithContext(context.Background())
}

func (i *LightsailInstance) ToLightsailInstanceOutputWithContext(ctx context.Context) LightsailInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LightsailInstanceOutput)
}

type LightsailInstanceOutput struct{ *pulumi.OutputState }

func (LightsailInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LightsailInstance)(nil)).Elem()
}

func (o LightsailInstanceOutput) ToLightsailInstanceOutput() LightsailInstanceOutput {
	return o
}

func (o LightsailInstanceOutput) ToLightsailInstanceOutputWithContext(ctx context.Context) LightsailInstanceOutput {
	return o
}

// The geo-location where the resource lives
func (o LightsailInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LightsailInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LightsailInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LightsailInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LightsailInstanceOutput) Properties() LightsailInstancePropertiesResponseOutput {
	return o.ApplyT(func(v *LightsailInstance) LightsailInstancePropertiesResponseOutput { return v.Properties }).(LightsailInstancePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LightsailInstanceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *LightsailInstance) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LightsailInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LightsailInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LightsailInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *LightsailInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LightsailInstanceOutput{})
}
