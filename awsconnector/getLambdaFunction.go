// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a LambdaFunction
// Azure REST API version: 2024-12-01.
func LookupLambdaFunction(ctx *pulumi.Context, args *LookupLambdaFunctionArgs, opts ...pulumi.InvokeOption) (*LookupLambdaFunctionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupLambdaFunctionResult
	err := ctx.Invoke("azure-native:awsconnector:getLambdaFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLambdaFunctionArgs struct {
	// Name of LambdaFunction
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Microsoft.AwsConnector resource
type LookupLambdaFunctionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties LambdaFunctionPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupLambdaFunctionOutput(ctx *pulumi.Context, args LookupLambdaFunctionOutputArgs, opts ...pulumi.InvokeOption) LookupLambdaFunctionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLambdaFunctionResultOutput, error) {
			args := v.(LookupLambdaFunctionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:awsconnector:getLambdaFunction", args, LookupLambdaFunctionResultOutput{}, options).(LookupLambdaFunctionResultOutput), nil
		}).(LookupLambdaFunctionResultOutput)
}

type LookupLambdaFunctionOutputArgs struct {
	// Name of LambdaFunction
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLambdaFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLambdaFunctionArgs)(nil)).Elem()
}

// A Microsoft.AwsConnector resource
type LookupLambdaFunctionResultOutput struct{ *pulumi.OutputState }

func (LookupLambdaFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLambdaFunctionResult)(nil)).Elem()
}

func (o LookupLambdaFunctionResultOutput) ToLookupLambdaFunctionResultOutput() LookupLambdaFunctionResultOutput {
	return o
}

func (o LookupLambdaFunctionResultOutput) ToLookupLambdaFunctionResultOutputWithContext(ctx context.Context) LookupLambdaFunctionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupLambdaFunctionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupLambdaFunctionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupLambdaFunctionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLambdaFunctionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupLambdaFunctionResultOutput) Properties() LambdaFunctionPropertiesResponseOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) LambdaFunctionPropertiesResponse { return v.Properties }).(LambdaFunctionPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupLambdaFunctionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupLambdaFunctionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLambdaFunctionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLambdaFunctionResultOutput{})
}
