// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsconnector

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Microsoft.AwsConnector resource
// Azure REST API version: 2024-12-01.
type ConfigServiceConfigurationRecorder struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties ConfigServiceConfigurationRecorderPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewConfigServiceConfigurationRecorder registers a new resource with the given unique name, arguments, and options.
func NewConfigServiceConfigurationRecorder(ctx *pulumi.Context,
	name string, args *ConfigServiceConfigurationRecorderArgs, opts ...pulumi.ResourceOption) (*ConfigServiceConfigurationRecorder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:awsconnector/v20241201:ConfigServiceConfigurationRecorder"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ConfigServiceConfigurationRecorder
	err := ctx.RegisterResource("azure-native:awsconnector:ConfigServiceConfigurationRecorder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigServiceConfigurationRecorder gets an existing ConfigServiceConfigurationRecorder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigServiceConfigurationRecorder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigServiceConfigurationRecorderState, opts ...pulumi.ResourceOption) (*ConfigServiceConfigurationRecorder, error) {
	var resource ConfigServiceConfigurationRecorder
	err := ctx.ReadResource("azure-native:awsconnector:ConfigServiceConfigurationRecorder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigServiceConfigurationRecorder resources.
type configServiceConfigurationRecorderState struct {
}

type ConfigServiceConfigurationRecorderState struct {
}

func (ConfigServiceConfigurationRecorderState) ElementType() reflect.Type {
	return reflect.TypeOf((*configServiceConfigurationRecorderState)(nil)).Elem()
}

type configServiceConfigurationRecorderArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of ConfigServiceConfigurationRecorder
	Name *string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties *ConfigServiceConfigurationRecorderProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ConfigServiceConfigurationRecorder resource.
type ConfigServiceConfigurationRecorderArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of ConfigServiceConfigurationRecorder
	Name pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties ConfigServiceConfigurationRecorderPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ConfigServiceConfigurationRecorderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configServiceConfigurationRecorderArgs)(nil)).Elem()
}

type ConfigServiceConfigurationRecorderInput interface {
	pulumi.Input

	ToConfigServiceConfigurationRecorderOutput() ConfigServiceConfigurationRecorderOutput
	ToConfigServiceConfigurationRecorderOutputWithContext(ctx context.Context) ConfigServiceConfigurationRecorderOutput
}

func (*ConfigServiceConfigurationRecorder) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServiceConfigurationRecorder)(nil)).Elem()
}

func (i *ConfigServiceConfigurationRecorder) ToConfigServiceConfigurationRecorderOutput() ConfigServiceConfigurationRecorderOutput {
	return i.ToConfigServiceConfigurationRecorderOutputWithContext(context.Background())
}

func (i *ConfigServiceConfigurationRecorder) ToConfigServiceConfigurationRecorderOutputWithContext(ctx context.Context) ConfigServiceConfigurationRecorderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigServiceConfigurationRecorderOutput)
}

type ConfigServiceConfigurationRecorderOutput struct{ *pulumi.OutputState }

func (ConfigServiceConfigurationRecorderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigServiceConfigurationRecorder)(nil)).Elem()
}

func (o ConfigServiceConfigurationRecorderOutput) ToConfigServiceConfigurationRecorderOutput() ConfigServiceConfigurationRecorderOutput {
	return o
}

func (o ConfigServiceConfigurationRecorderOutput) ToConfigServiceConfigurationRecorderOutputWithContext(ctx context.Context) ConfigServiceConfigurationRecorderOutput {
	return o
}

// The geo-location where the resource lives
func (o ConfigServiceConfigurationRecorderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigServiceConfigurationRecorder) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ConfigServiceConfigurationRecorderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigServiceConfigurationRecorder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o ConfigServiceConfigurationRecorderOutput) Properties() ConfigServiceConfigurationRecorderPropertiesResponseOutput {
	return o.ApplyT(func(v *ConfigServiceConfigurationRecorder) ConfigServiceConfigurationRecorderPropertiesResponseOutput {
		return v.Properties
	}).(ConfigServiceConfigurationRecorderPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ConfigServiceConfigurationRecorderOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ConfigServiceConfigurationRecorder) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ConfigServiceConfigurationRecorderOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigServiceConfigurationRecorder) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ConfigServiceConfigurationRecorderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigServiceConfigurationRecorder) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigServiceConfigurationRecorderOutput{})
}
