// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package subscription

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Subscription Response for Changed Target Directory.
// Azure REST API version: 2024-08-01-preview.
type SubscriptionTarDirectory struct {
	pulumi.CustomResourceState

	// Subscription Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Subscription Changed Target Directory response properties.
	Properties TargetDirectoryResultPropertiesResponseOutput `pulumi:"properties"`
	// Resource type, Microsoft.Subscription/changeTenantRequest.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSubscriptionTarDirectory registers a new resource with the given unique name, arguments, and options.
func NewSubscriptionTarDirectory(ctx *pulumi.Context,
	name string, args *SubscriptionTarDirectoryArgs, opts ...pulumi.ResourceOption) (*SubscriptionTarDirectory, error) {
	if args == nil {
		args = &SubscriptionTarDirectoryArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:subscription/v20240801preview:SubscriptionTarDirectory"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SubscriptionTarDirectory
	err := ctx.RegisterResource("azure-native:subscription:SubscriptionTarDirectory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscriptionTarDirectory gets an existing SubscriptionTarDirectory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscriptionTarDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionTarDirectoryState, opts ...pulumi.ResourceOption) (*SubscriptionTarDirectory, error) {
	var resource SubscriptionTarDirectory
	err := ctx.ReadResource("azure-native:subscription:SubscriptionTarDirectory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubscriptionTarDirectory resources.
type subscriptionTarDirectoryState struct {
}

type SubscriptionTarDirectoryState struct {
}

func (SubscriptionTarDirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionTarDirectoryState)(nil)).Elem()
}

type subscriptionTarDirectoryArgs struct {
	// Target Directory request properties.
	Properties *TargetDirectoryRequestProperties `pulumi:"properties"`
	// Subscription Id.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a SubscriptionTarDirectory resource.
type SubscriptionTarDirectoryArgs struct {
	// Target Directory request properties.
	Properties TargetDirectoryRequestPropertiesPtrInput
	// Subscription Id.
	SubscriptionId pulumi.StringPtrInput
}

func (SubscriptionTarDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionTarDirectoryArgs)(nil)).Elem()
}

type SubscriptionTarDirectoryInput interface {
	pulumi.Input

	ToSubscriptionTarDirectoryOutput() SubscriptionTarDirectoryOutput
	ToSubscriptionTarDirectoryOutputWithContext(ctx context.Context) SubscriptionTarDirectoryOutput
}

func (*SubscriptionTarDirectory) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionTarDirectory)(nil)).Elem()
}

func (i *SubscriptionTarDirectory) ToSubscriptionTarDirectoryOutput() SubscriptionTarDirectoryOutput {
	return i.ToSubscriptionTarDirectoryOutputWithContext(context.Background())
}

func (i *SubscriptionTarDirectory) ToSubscriptionTarDirectoryOutputWithContext(ctx context.Context) SubscriptionTarDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionTarDirectoryOutput)
}

type SubscriptionTarDirectoryOutput struct{ *pulumi.OutputState }

func (SubscriptionTarDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionTarDirectory)(nil)).Elem()
}

func (o SubscriptionTarDirectoryOutput) ToSubscriptionTarDirectoryOutput() SubscriptionTarDirectoryOutput {
	return o
}

func (o SubscriptionTarDirectoryOutput) ToSubscriptionTarDirectoryOutputWithContext(ctx context.Context) SubscriptionTarDirectoryOutput {
	return o
}

// Subscription Name.
func (o SubscriptionTarDirectoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionTarDirectory) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Subscription Changed Target Directory response properties.
func (o SubscriptionTarDirectoryOutput) Properties() TargetDirectoryResultPropertiesResponseOutput {
	return o.ApplyT(func(v *SubscriptionTarDirectory) TargetDirectoryResultPropertiesResponseOutput { return v.Properties }).(TargetDirectoryResultPropertiesResponseOutput)
}

// Resource type, Microsoft.Subscription/changeTenantRequest.
func (o SubscriptionTarDirectoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionTarDirectory) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SubscriptionTarDirectoryOutput{})
}
