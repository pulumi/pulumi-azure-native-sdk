// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the ingress gateway endpoint credentials
// Azure REST API version: 2023-03-15.
func ListEndpointIngressGatewayCredentials(ctx *pulumi.Context, args *ListEndpointIngressGatewayCredentialsArgs, opts ...pulumi.InvokeOption) (*ListEndpointIngressGatewayCredentialsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListEndpointIngressGatewayCredentialsResult
	err := ctx.Invoke("azure-native:hybridconnectivity:listEndpointIngressGatewayCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEndpointIngressGatewayCredentialsArgs struct {
	// The endpoint name.
	EndpointName string `pulumi:"endpointName"`
	// The is how long the endpoint access token is valid (in seconds).
	Expiresin *int `pulumi:"expiresin"`
	// The fully qualified Azure Resource manager identifier of the resource to be connected.
	ResourceUri string `pulumi:"resourceUri"`
	// The name of the service.
	ServiceName *string `pulumi:"serviceName"`
}

// The ingress gateway access credentials
type ListEndpointIngressGatewayCredentialsResult struct {
	// Access key for hybrid connection.
	AccessKey string `pulumi:"accessKey"`
	// The expiration of access key in unix time.
	ExpiresOn *float64 `pulumi:"expiresOn"`
	// The ingress hostname.
	Hostname string `pulumi:"hostname"`
	// Azure Relay hybrid connection name for the resource.
	HybridConnectionName string `pulumi:"hybridConnectionName"`
	// The namespace name.
	NamespaceName string `pulumi:"namespaceName"`
	// The suffix domain name of relay namespace.
	NamespaceNameSuffix string `pulumi:"namespaceNameSuffix"`
	// The arc ingress gateway server app id.
	ServerId string `pulumi:"serverId"`
	// The token to access the enabled service.
	ServiceConfigurationToken *string `pulumi:"serviceConfigurationToken"`
	// The target resource home tenant id.
	TenantId string `pulumi:"tenantId"`
}

func ListEndpointIngressGatewayCredentialsOutput(ctx *pulumi.Context, args ListEndpointIngressGatewayCredentialsOutputArgs, opts ...pulumi.InvokeOption) ListEndpointIngressGatewayCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListEndpointIngressGatewayCredentialsResult, error) {
			args := v.(ListEndpointIngressGatewayCredentialsArgs)
			r, err := ListEndpointIngressGatewayCredentials(ctx, &args, opts...)
			var s ListEndpointIngressGatewayCredentialsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListEndpointIngressGatewayCredentialsResultOutput)
}

type ListEndpointIngressGatewayCredentialsOutputArgs struct {
	// The endpoint name.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// The is how long the endpoint access token is valid (in seconds).
	Expiresin pulumi.IntPtrInput `pulumi:"expiresin"`
	// The fully qualified Azure Resource manager identifier of the resource to be connected.
	ResourceUri pulumi.StringInput `pulumi:"resourceUri"`
	// The name of the service.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (ListEndpointIngressGatewayCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEndpointIngressGatewayCredentialsArgs)(nil)).Elem()
}

// The ingress gateway access credentials
type ListEndpointIngressGatewayCredentialsResultOutput struct{ *pulumi.OutputState }

func (ListEndpointIngressGatewayCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEndpointIngressGatewayCredentialsResult)(nil)).Elem()
}

func (o ListEndpointIngressGatewayCredentialsResultOutput) ToListEndpointIngressGatewayCredentialsResultOutput() ListEndpointIngressGatewayCredentialsResultOutput {
	return o
}

func (o ListEndpointIngressGatewayCredentialsResultOutput) ToListEndpointIngressGatewayCredentialsResultOutputWithContext(ctx context.Context) ListEndpointIngressGatewayCredentialsResultOutput {
	return o
}

func (o ListEndpointIngressGatewayCredentialsResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListEndpointIngressGatewayCredentialsResult] {
	return pulumix.Output[ListEndpointIngressGatewayCredentialsResult]{
		OutputState: o.OutputState,
	}
}

// Access key for hybrid connection.
func (o ListEndpointIngressGatewayCredentialsResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The expiration of access key in unix time.
func (o ListEndpointIngressGatewayCredentialsResultOutput) ExpiresOn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) *float64 { return v.ExpiresOn }).(pulumi.Float64PtrOutput)
}

// The ingress hostname.
func (o ListEndpointIngressGatewayCredentialsResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// Azure Relay hybrid connection name for the resource.
func (o ListEndpointIngressGatewayCredentialsResultOutput) HybridConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.HybridConnectionName }).(pulumi.StringOutput)
}

// The namespace name.
func (o ListEndpointIngressGatewayCredentialsResultOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The suffix domain name of relay namespace.
func (o ListEndpointIngressGatewayCredentialsResultOutput) NamespaceNameSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.NamespaceNameSuffix }).(pulumi.StringOutput)
}

// The arc ingress gateway server app id.
func (o ListEndpointIngressGatewayCredentialsResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.ServerId }).(pulumi.StringOutput)
}

// The token to access the enabled service.
func (o ListEndpointIngressGatewayCredentialsResultOutput) ServiceConfigurationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) *string { return v.ServiceConfigurationToken }).(pulumi.StringPtrOutput)
}

// The target resource home tenant id.
func (o ListEndpointIngressGatewayCredentialsResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointIngressGatewayCredentialsResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEndpointIngressGatewayCredentialsResultOutput{})
}
