// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a SolutionConfiguration
//
// Uses Azure REST API version 2024-12-01.
func LookupSolutionConfiguration(ctx *pulumi.Context, args *LookupSolutionConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupSolutionConfigurationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSolutionConfigurationResult
	err := ctx.Invoke("azure-native:hybridconnectivity:getSolutionConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSolutionConfigurationArgs struct {
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
	// Represent Solution Configuration Resource.
	SolutionConfiguration string `pulumi:"solutionConfiguration"`
}

// Solution Configuration
type LookupSolutionConfigurationResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The last time resources were inventoried
	LastSyncTime string `pulumi:"lastSyncTime"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Solution settings
	SolutionSettings map[string]string `pulumi:"solutionSettings"`
	// The type of the solution
	SolutionType string `pulumi:"solutionType"`
	// The status of solution configurations
	Status string `pulumi:"status"`
	// The detailed message of status details
	StatusDetails string `pulumi:"statusDetails"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSolutionConfigurationOutput(ctx *pulumi.Context, args LookupSolutionConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupSolutionConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSolutionConfigurationResultOutput, error) {
			args := v.(LookupSolutionConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:hybridconnectivity:getSolutionConfiguration", args, LookupSolutionConfigurationResultOutput{}, options).(LookupSolutionConfigurationResultOutput), nil
		}).(LookupSolutionConfigurationResultOutput)
}

type LookupSolutionConfigurationOutputArgs struct {
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput `pulumi:"resourceUri"`
	// Represent Solution Configuration Resource.
	SolutionConfiguration pulumi.StringInput `pulumi:"solutionConfiguration"`
}

func (LookupSolutionConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionConfigurationArgs)(nil)).Elem()
}

// Solution Configuration
type LookupSolutionConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupSolutionConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionConfigurationResult)(nil)).Elem()
}

func (o LookupSolutionConfigurationResultOutput) ToLookupSolutionConfigurationResultOutput() LookupSolutionConfigurationResultOutput {
	return o
}

func (o LookupSolutionConfigurationResultOutput) ToLookupSolutionConfigurationResultOutputWithContext(ctx context.Context) LookupSolutionConfigurationResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupSolutionConfigurationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSolutionConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The last time resources were inventoried
func (o LookupSolutionConfigurationResultOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSolutionConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource provisioning state.
func (o LookupSolutionConfigurationResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Solution settings
func (o LookupSolutionConfigurationResultOutput) SolutionSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) map[string]string { return v.SolutionSettings }).(pulumi.StringMapOutput)
}

// The type of the solution
func (o LookupSolutionConfigurationResultOutput) SolutionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.SolutionType }).(pulumi.StringOutput)
}

// The status of solution configurations
func (o LookupSolutionConfigurationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.Status }).(pulumi.StringOutput)
}

// The detailed message of status details
func (o LookupSolutionConfigurationResultOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.StatusDetails }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSolutionConfigurationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSolutionConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSolutionConfigurationResultOutput{})
}
