// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretsynccontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the properties of a SecretSync instance.
//
// Uses Azure REST API version 2024-08-21-preview.
func LookupSecretSync(ctx *pulumi.Context, args *LookupSecretSyncArgs, opts ...pulumi.InvokeOption) (*LookupSecretSyncResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSecretSyncResult
	err := ctx.Invoke("azure-native:secretsynccontroller:getSecretSync", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecretSyncArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the SecretSync
	SecretSyncName string `pulumi:"secretSyncName"`
}

// The SecretSync resource.
type LookupSecretSyncResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The complex type of the extended location.
	ExtendedLocation *AzureResourceManagerCommonTypesExtendedLocationResponse `pulumi:"extendedLocation"`
	// ForceSynchronization can be used to force the secret synchronization. The secret synchronization is triggered by changing the value in this field. This field is not used to resolve synchronization conflicts.
	ForceSynchronization *string `pulumi:"forceSynchronization"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Type specifies the type of the Kubernetes secret object, e.g. "Opaque" or"kubernetes.io/tls". The controller must have permission to create secrets of the specified type.
	KubernetesSecretType string `pulumi:"kubernetesSecretType"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// An array of SecretObjectData that maps secret data from the external secret provider to the Kubernetes secret. Each entry specifies the source secret in the external provider and the corresponding key in the Kubernetes secret.
	ObjectSecretMapping []KubernetesSecretObjectMappingResponse `pulumi:"objectSecretMapping"`
	// Provisioning state of the SecretSync instance.
	ProvisioningState string `pulumi:"provisioningState"`
	// SecretProviderClassName specifies the name of the SecretProviderClass resource, which contains the information needed to access the cloud provider secret store.
	SecretProviderClassName string `pulumi:"secretProviderClassName"`
	// ServiceAccountName specifies the name of the service account used to access the cloud provider secret store. The audience field in the service account token must be passed as parameter in the controller configuration. The audience is used when requesting a token from the API server for the service account; the supported audiences are defined by each provider.
	ServiceAccountName string `pulumi:"serviceAccountName"`
	// SecretSyncStatus defines the observed state of the secret synchronization process.
	Status SecretSyncStatusResponse `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSecretSyncOutput(ctx *pulumi.Context, args LookupSecretSyncOutputArgs, opts ...pulumi.InvokeOption) LookupSecretSyncResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecretSyncResultOutput, error) {
			args := v.(LookupSecretSyncArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:secretsynccontroller:getSecretSync", args, LookupSecretSyncResultOutput{}, options).(LookupSecretSyncResultOutput), nil
		}).(LookupSecretSyncResultOutput)
}

type LookupSecretSyncOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the SecretSync
	SecretSyncName pulumi.StringInput `pulumi:"secretSyncName"`
}

func (LookupSecretSyncOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretSyncArgs)(nil)).Elem()
}

// The SecretSync resource.
type LookupSecretSyncResultOutput struct{ *pulumi.OutputState }

func (LookupSecretSyncResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretSyncResult)(nil)).Elem()
}

func (o LookupSecretSyncResultOutput) ToLookupSecretSyncResultOutput() LookupSecretSyncResultOutput {
	return o
}

func (o LookupSecretSyncResultOutput) ToLookupSecretSyncResultOutputWithContext(ctx context.Context) LookupSecretSyncResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupSecretSyncResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The complex type of the extended location.
func (o LookupSecretSyncResultOutput) ExtendedLocation() AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) *AzureResourceManagerCommonTypesExtendedLocationResponse {
		return v.ExtendedLocation
	}).(AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput)
}

// ForceSynchronization can be used to force the secret synchronization. The secret synchronization is triggered by changing the value in this field. This field is not used to resolve synchronization conflicts.
func (o LookupSecretSyncResultOutput) ForceSynchronization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) *string { return v.ForceSynchronization }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSecretSyncResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.Id }).(pulumi.StringOutput)
}

// Type specifies the type of the Kubernetes secret object, e.g. "Opaque" or"kubernetes.io/tls". The controller must have permission to create secrets of the specified type.
func (o LookupSecretSyncResultOutput) KubernetesSecretType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.KubernetesSecretType }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSecretSyncResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSecretSyncResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.Name }).(pulumi.StringOutput)
}

// An array of SecretObjectData that maps secret data from the external secret provider to the Kubernetes secret. Each entry specifies the source secret in the external provider and the corresponding key in the Kubernetes secret.
func (o LookupSecretSyncResultOutput) ObjectSecretMapping() KubernetesSecretObjectMappingResponseArrayOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) []KubernetesSecretObjectMappingResponse { return v.ObjectSecretMapping }).(KubernetesSecretObjectMappingResponseArrayOutput)
}

// Provisioning state of the SecretSync instance.
func (o LookupSecretSyncResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SecretProviderClassName specifies the name of the SecretProviderClass resource, which contains the information needed to access the cloud provider secret store.
func (o LookupSecretSyncResultOutput) SecretProviderClassName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.SecretProviderClassName }).(pulumi.StringOutput)
}

// ServiceAccountName specifies the name of the service account used to access the cloud provider secret store. The audience field in the service account token must be passed as parameter in the controller configuration. The audience is used when requesting a token from the API server for the service account; the supported audiences are defined by each provider.
func (o LookupSecretSyncResultOutput) ServiceAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.ServiceAccountName }).(pulumi.StringOutput)
}

// SecretSyncStatus defines the observed state of the secret synchronization process.
func (o LookupSecretSyncResultOutput) Status() SecretSyncStatusResponseOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) SecretSyncStatusResponse { return v.Status }).(SecretSyncStatusResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSecretSyncResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSecretSyncResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSecretSyncResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretSyncResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecretSyncResultOutput{})
}
