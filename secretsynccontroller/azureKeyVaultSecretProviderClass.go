// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretsynccontroller

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AzureKeyVaultSecretProviderClass resource.
//
// Uses Azure REST API version 2024-08-21-preview. In version 2.x of the Azure Native provider, it used API version 2024-08-21-preview.
type AzureKeyVaultSecretProviderClass struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The user assigned managed identity client ID that should be used to access the Azure Key Vault.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The complex type of the extended location.
	ExtendedLocation AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// The name of the Azure Key Vault to sync secrets from.
	KeyvaultName pulumi.StringOutput `pulumi:"keyvaultName"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Objects defines the desired state of synced K8s secret objects
	Objects pulumi.StringPtrOutput `pulumi:"objects"`
	// Provisioning state of the AzureKeyVaultSecretProviderClass instance.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAzureKeyVaultSecretProviderClass registers a new resource with the given unique name, arguments, and options.
func NewAzureKeyVaultSecretProviderClass(ctx *pulumi.Context,
	name string, args *AzureKeyVaultSecretProviderClassArgs, opts ...pulumi.ResourceOption) (*AzureKeyVaultSecretProviderClass, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.KeyvaultName == nil {
		return nil, errors.New("invalid value for required argument 'KeyvaultName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:secretsynccontroller/v20240821preview:AzureKeyVaultSecretProviderClass"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AzureKeyVaultSecretProviderClass
	err := ctx.RegisterResource("azure-native:secretsynccontroller:AzureKeyVaultSecretProviderClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureKeyVaultSecretProviderClass gets an existing AzureKeyVaultSecretProviderClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureKeyVaultSecretProviderClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureKeyVaultSecretProviderClassState, opts ...pulumi.ResourceOption) (*AzureKeyVaultSecretProviderClass, error) {
	var resource AzureKeyVaultSecretProviderClass
	err := ctx.ReadResource("azure-native:secretsynccontroller:AzureKeyVaultSecretProviderClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureKeyVaultSecretProviderClass resources.
type azureKeyVaultSecretProviderClassState struct {
}

type AzureKeyVaultSecretProviderClassState struct {
}

func (AzureKeyVaultSecretProviderClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureKeyVaultSecretProviderClassState)(nil)).Elem()
}

type azureKeyVaultSecretProviderClassArgs struct {
	// The name of the AzureKeyVaultSecretProviderClass
	AzureKeyVaultSecretProviderClassName *string `pulumi:"azureKeyVaultSecretProviderClassName"`
	// The user assigned managed identity client ID that should be used to access the Azure Key Vault.
	ClientId string `pulumi:"clientId"`
	// The complex type of the extended location.
	ExtendedLocation *AzureResourceManagerCommonTypesExtendedLocation `pulumi:"extendedLocation"`
	// The name of the Azure Key Vault to sync secrets from.
	KeyvaultName string `pulumi:"keyvaultName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Objects defines the desired state of synced K8s secret objects
	Objects *string `pulumi:"objects"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AzureKeyVaultSecretProviderClass resource.
type AzureKeyVaultSecretProviderClassArgs struct {
	// The name of the AzureKeyVaultSecretProviderClass
	AzureKeyVaultSecretProviderClassName pulumi.StringPtrInput
	// The user assigned managed identity client ID that should be used to access the Azure Key Vault.
	ClientId pulumi.StringInput
	// The complex type of the extended location.
	ExtendedLocation AzureResourceManagerCommonTypesExtendedLocationPtrInput
	// The name of the Azure Key Vault to sync secrets from.
	KeyvaultName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Objects defines the desired state of synced K8s secret objects
	Objects pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.
	TenantId pulumi.StringInput
}

func (AzureKeyVaultSecretProviderClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureKeyVaultSecretProviderClassArgs)(nil)).Elem()
}

type AzureKeyVaultSecretProviderClassInput interface {
	pulumi.Input

	ToAzureKeyVaultSecretProviderClassOutput() AzureKeyVaultSecretProviderClassOutput
	ToAzureKeyVaultSecretProviderClassOutputWithContext(ctx context.Context) AzureKeyVaultSecretProviderClassOutput
}

func (*AzureKeyVaultSecretProviderClass) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSecretProviderClass)(nil)).Elem()
}

func (i *AzureKeyVaultSecretProviderClass) ToAzureKeyVaultSecretProviderClassOutput() AzureKeyVaultSecretProviderClassOutput {
	return i.ToAzureKeyVaultSecretProviderClassOutputWithContext(context.Background())
}

func (i *AzureKeyVaultSecretProviderClass) ToAzureKeyVaultSecretProviderClassOutputWithContext(ctx context.Context) AzureKeyVaultSecretProviderClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultSecretProviderClassOutput)
}

type AzureKeyVaultSecretProviderClassOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultSecretProviderClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultSecretProviderClass)(nil)).Elem()
}

func (o AzureKeyVaultSecretProviderClassOutput) ToAzureKeyVaultSecretProviderClassOutput() AzureKeyVaultSecretProviderClassOutput {
	return o
}

func (o AzureKeyVaultSecretProviderClassOutput) ToAzureKeyVaultSecretProviderClassOutputWithContext(ctx context.Context) AzureKeyVaultSecretProviderClassOutput {
	return o
}

// The Azure API version of the resource.
func (o AzureKeyVaultSecretProviderClassOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The user assigned managed identity client ID that should be used to access the Azure Key Vault.
func (o AzureKeyVaultSecretProviderClassOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The complex type of the extended location.
func (o AzureKeyVaultSecretProviderClassOutput) ExtendedLocation() AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
		return v.ExtendedLocation
	}).(AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput)
}

// The name of the Azure Key Vault to sync secrets from.
func (o AzureKeyVaultSecretProviderClassOutput) KeyvaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.KeyvaultName }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o AzureKeyVaultSecretProviderClassOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o AzureKeyVaultSecretProviderClassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Objects defines the desired state of synced K8s secret objects
func (o AzureKeyVaultSecretProviderClassOutput) Objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringPtrOutput { return v.Objects }).(pulumi.StringPtrOutput)
}

// Provisioning state of the AzureKeyVaultSecretProviderClass instance.
func (o AzureKeyVaultSecretProviderClassOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AzureKeyVaultSecretProviderClassOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AzureKeyVaultSecretProviderClassOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.
func (o AzureKeyVaultSecretProviderClassOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AzureKeyVaultSecretProviderClassOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureKeyVaultSecretProviderClass) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureKeyVaultSecretProviderClassOutput{})
}
