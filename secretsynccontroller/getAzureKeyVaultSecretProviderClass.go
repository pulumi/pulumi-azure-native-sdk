// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretsynccontroller

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the properties of an AzureKeyVaultSecretProviderClass instance.
//
// Uses Azure REST API version 2024-08-21-preview.
func LookupAzureKeyVaultSecretProviderClass(ctx *pulumi.Context, args *LookupAzureKeyVaultSecretProviderClassArgs, opts ...pulumi.InvokeOption) (*LookupAzureKeyVaultSecretProviderClassResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAzureKeyVaultSecretProviderClassResult
	err := ctx.Invoke("azure-native:secretsynccontroller:getAzureKeyVaultSecretProviderClass", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAzureKeyVaultSecretProviderClassArgs struct {
	// The name of the AzureKeyVaultSecretProviderClass
	AzureKeyVaultSecretProviderClassName string `pulumi:"azureKeyVaultSecretProviderClassName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The AzureKeyVaultSecretProviderClass resource.
type LookupAzureKeyVaultSecretProviderClassResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The user assigned managed identity client ID that should be used to access the Azure Key Vault.
	ClientId string `pulumi:"clientId"`
	// The complex type of the extended location.
	ExtendedLocation *AzureResourceManagerCommonTypesExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the Azure Key Vault to sync secrets from.
	KeyvaultName string `pulumi:"keyvaultName"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Objects defines the desired state of synced K8s secret objects
	Objects *string `pulumi:"objects"`
	// Provisioning state of the AzureKeyVaultSecretProviderClass instance.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.
	TenantId string `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAzureKeyVaultSecretProviderClassOutput(ctx *pulumi.Context, args LookupAzureKeyVaultSecretProviderClassOutputArgs, opts ...pulumi.InvokeOption) LookupAzureKeyVaultSecretProviderClassResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAzureKeyVaultSecretProviderClassResultOutput, error) {
			args := v.(LookupAzureKeyVaultSecretProviderClassArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:secretsynccontroller:getAzureKeyVaultSecretProviderClass", args, LookupAzureKeyVaultSecretProviderClassResultOutput{}, options).(LookupAzureKeyVaultSecretProviderClassResultOutput), nil
		}).(LookupAzureKeyVaultSecretProviderClassResultOutput)
}

type LookupAzureKeyVaultSecretProviderClassOutputArgs struct {
	// The name of the AzureKeyVaultSecretProviderClass
	AzureKeyVaultSecretProviderClassName pulumi.StringInput `pulumi:"azureKeyVaultSecretProviderClassName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAzureKeyVaultSecretProviderClassOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureKeyVaultSecretProviderClassArgs)(nil)).Elem()
}

// The AzureKeyVaultSecretProviderClass resource.
type LookupAzureKeyVaultSecretProviderClassResultOutput struct{ *pulumi.OutputState }

func (LookupAzureKeyVaultSecretProviderClassResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureKeyVaultSecretProviderClassResult)(nil)).Elem()
}

func (o LookupAzureKeyVaultSecretProviderClassResultOutput) ToLookupAzureKeyVaultSecretProviderClassResultOutput() LookupAzureKeyVaultSecretProviderClassResultOutput {
	return o
}

func (o LookupAzureKeyVaultSecretProviderClassResultOutput) ToLookupAzureKeyVaultSecretProviderClassResultOutputWithContext(ctx context.Context) LookupAzureKeyVaultSecretProviderClassResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The user assigned managed identity client ID that should be used to access the Azure Key Vault.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// The complex type of the extended location.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) ExtendedLocation() AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) *AzureResourceManagerCommonTypesExtendedLocationResponse {
		return v.ExtendedLocation
	}).(AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Azure Key Vault to sync secrets from.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) KeyvaultName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.KeyvaultName }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.Name }).(pulumi.StringOutput)
}

// Objects defines the desired state of synced K8s secret objects
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) Objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) *string { return v.Objects }).(pulumi.StringPtrOutput)
}

// Provisioning state of the AzureKeyVaultSecretProviderClass instance.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAzureKeyVaultSecretProviderClassResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureKeyVaultSecretProviderClassResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureKeyVaultSecretProviderClassResultOutput{})
}
