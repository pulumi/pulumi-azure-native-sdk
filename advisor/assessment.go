// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package advisor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Advisor assessment result data structure.
//
// Uses Azure REST API version 2023-09-01-preview. In version 2.x of the Azure Native provider, it used API version 2023-09-01-preview.
type Assessment struct {
	pulumi.CustomResourceState

	// Assessment Id.
	AssessmentId pulumi.StringOutput `pulumi:"assessmentId"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Assessment Type Description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Assessment Type Locale.
	Locale pulumi.StringPtrOutput `pulumi:"locale"`
	// Assessment Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Assessment Score.
	Score pulumi.IntOutput `pulumi:"score"`
	// Assessment State.
	State pulumi.StringOutput `pulumi:"state"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource Type
	Type pulumi.StringOutput `pulumi:"type"`
	// Assessment Type Id.
	TypeId pulumi.StringPtrOutput `pulumi:"typeId"`
	// Assessment Type Version.
	TypeVersion pulumi.StringOutput `pulumi:"typeVersion"`
	// Workload Id.
	WorkloadId pulumi.StringPtrOutput `pulumi:"workloadId"`
	// Workload Name.
	WorkloadName pulumi.StringOutput `pulumi:"workloadName"`
}

// NewAssessment registers a new resource with the given unique name, arguments, and options.
func NewAssessment(ctx *pulumi.Context,
	name string, args *AssessmentArgs, opts ...pulumi.ResourceOption) (*Assessment, error) {
	if args == nil {
		args = &AssessmentArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:advisor/v20230901preview:Assessment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Assessment
	err := ctx.RegisterResource("azure-native:advisor:Assessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessment gets an existing Assessment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentState, opts ...pulumi.ResourceOption) (*Assessment, error) {
	var resource Assessment
	err := ctx.ReadResource("azure-native:advisor:Assessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Assessment resources.
type assessmentState struct {
}

type AssessmentState struct {
}

func (AssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentState)(nil)).Elem()
}

type assessmentArgs struct {
	// Advisor assessment name.
	AssessmentName *string `pulumi:"assessmentName"`
	// Assessment Type Locale.
	Locale *string `pulumi:"locale"`
	// Assessment Type Id.
	TypeId *string `pulumi:"typeId"`
	// Workload Id.
	WorkloadId *string `pulumi:"workloadId"`
}

// The set of arguments for constructing a Assessment resource.
type AssessmentArgs struct {
	// Advisor assessment name.
	AssessmentName pulumi.StringPtrInput
	// Assessment Type Locale.
	Locale pulumi.StringPtrInput
	// Assessment Type Id.
	TypeId pulumi.StringPtrInput
	// Workload Id.
	WorkloadId pulumi.StringPtrInput
}

func (AssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentArgs)(nil)).Elem()
}

type AssessmentInput interface {
	pulumi.Input

	ToAssessmentOutput() AssessmentOutput
	ToAssessmentOutputWithContext(ctx context.Context) AssessmentOutput
}

func (*Assessment) ElementType() reflect.Type {
	return reflect.TypeOf((**Assessment)(nil)).Elem()
}

func (i *Assessment) ToAssessmentOutput() AssessmentOutput {
	return i.ToAssessmentOutputWithContext(context.Background())
}

func (i *Assessment) ToAssessmentOutputWithContext(ctx context.Context) AssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentOutput)
}

type AssessmentOutput struct{ *pulumi.OutputState }

func (AssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Assessment)(nil)).Elem()
}

func (o AssessmentOutput) ToAssessmentOutput() AssessmentOutput {
	return o
}

func (o AssessmentOutput) ToAssessmentOutputWithContext(ctx context.Context) AssessmentOutput {
	return o
}

// Assessment Id.
func (o AssessmentOutput) AssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AssessmentId }).(pulumi.StringOutput)
}

// The Azure API version of the resource.
func (o AssessmentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Assessment Type Description.
func (o AssessmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Assessment Type Locale.
func (o AssessmentOutput) Locale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringPtrOutput { return v.Locale }).(pulumi.StringPtrOutput)
}

// Assessment Name
func (o AssessmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Assessment Score.
func (o AssessmentOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v *Assessment) pulumi.IntOutput { return v.Score }).(pulumi.IntOutput)
}

// Assessment State.
func (o AssessmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o AssessmentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Assessment) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource Type
func (o AssessmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Assessment Type Id.
func (o AssessmentOutput) TypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringPtrOutput { return v.TypeId }).(pulumi.StringPtrOutput)
}

// Assessment Type Version.
func (o AssessmentOutput) TypeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.TypeVersion }).(pulumi.StringOutput)
}

// Workload Id.
func (o AssessmentOutput) WorkloadId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringPtrOutput { return v.WorkloadId }).(pulumi.StringPtrOutput)
}

// Workload Name.
func (o AssessmentOutput) WorkloadName() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.WorkloadName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentOutput{})
}
