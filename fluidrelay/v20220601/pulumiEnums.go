// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Values can be SystemAssigned or UserAssigned
type CmkIdentityType string

const (
	CmkIdentityTypeSystemAssigned = CmkIdentityType("SystemAssigned")
	CmkIdentityTypeUserAssigned   = CmkIdentityType("UserAssigned")
)

func (CmkIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkIdentityType)(nil)).Elem()
}

func (e CmkIdentityType) ToCmkIdentityTypeOutput() CmkIdentityTypeOutput {
	return pulumi.ToOutput(e).(CmkIdentityTypeOutput)
}

func (e CmkIdentityType) ToCmkIdentityTypeOutputWithContext(ctx context.Context) CmkIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CmkIdentityTypeOutput)
}

func (e CmkIdentityType) ToCmkIdentityTypePtrOutput() CmkIdentityTypePtrOutput {
	return e.ToCmkIdentityTypePtrOutputWithContext(context.Background())
}

func (e CmkIdentityType) ToCmkIdentityTypePtrOutputWithContext(ctx context.Context) CmkIdentityTypePtrOutput {
	return CmkIdentityType(e).ToCmkIdentityTypeOutputWithContext(ctx).ToCmkIdentityTypePtrOutputWithContext(ctx)
}

func (e CmkIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CmkIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CmkIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CmkIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CmkIdentityTypeOutput struct{ *pulumi.OutputState }

func (CmkIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkIdentityType)(nil)).Elem()
}

func (o CmkIdentityTypeOutput) ToCmkIdentityTypeOutput() CmkIdentityTypeOutput {
	return o
}

func (o CmkIdentityTypeOutput) ToCmkIdentityTypeOutputWithContext(ctx context.Context) CmkIdentityTypeOutput {
	return o
}

func (o CmkIdentityTypeOutput) ToCmkIdentityTypePtrOutput() CmkIdentityTypePtrOutput {
	return o.ToCmkIdentityTypePtrOutputWithContext(context.Background())
}

func (o CmkIdentityTypeOutput) ToCmkIdentityTypePtrOutputWithContext(ctx context.Context) CmkIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkIdentityType) *CmkIdentityType {
		return &v
	}).(CmkIdentityTypePtrOutput)
}

func (o CmkIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CmkIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CmkIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CmkIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CmkIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CmkIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CmkIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (CmkIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkIdentityType)(nil)).Elem()
}

func (o CmkIdentityTypePtrOutput) ToCmkIdentityTypePtrOutput() CmkIdentityTypePtrOutput {
	return o
}

func (o CmkIdentityTypePtrOutput) ToCmkIdentityTypePtrOutputWithContext(ctx context.Context) CmkIdentityTypePtrOutput {
	return o
}

func (o CmkIdentityTypePtrOutput) Elem() CmkIdentityTypeOutput {
	return o.ApplyT(func(v *CmkIdentityType) CmkIdentityType {
		if v != nil {
			return *v
		}
		var ret CmkIdentityType
		return ret
	}).(CmkIdentityTypeOutput)
}

func (o CmkIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CmkIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CmkIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CmkIdentityTypeInput is an input type that accepts values of the CmkIdentityType enum
// A concrete instance of `CmkIdentityTypeInput` can be one of the following:
//
//	CmkIdentityTypeSystemAssigned
//	CmkIdentityTypeUserAssigned
type CmkIdentityTypeInput interface {
	pulumi.Input

	ToCmkIdentityTypeOutput() CmkIdentityTypeOutput
	ToCmkIdentityTypeOutputWithContext(context.Context) CmkIdentityTypeOutput
}

var cmkIdentityTypePtrType = reflect.TypeOf((**CmkIdentityType)(nil)).Elem()

type CmkIdentityTypePtrInput interface {
	pulumi.Input

	ToCmkIdentityTypePtrOutput() CmkIdentityTypePtrOutput
	ToCmkIdentityTypePtrOutputWithContext(context.Context) CmkIdentityTypePtrOutput
}

type cmkIdentityTypePtr string

func CmkIdentityTypePtr(v string) CmkIdentityTypePtrInput {
	return (*cmkIdentityTypePtr)(&v)
}

func (*cmkIdentityTypePtr) ElementType() reflect.Type {
	return cmkIdentityTypePtrType
}

func (in *cmkIdentityTypePtr) ToCmkIdentityTypePtrOutput() CmkIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(CmkIdentityTypePtrOutput)
}

func (in *cmkIdentityTypePtr) ToCmkIdentityTypePtrOutputWithContext(ctx context.Context) CmkIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CmkIdentityTypePtrOutput)
}

func (in *cmkIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CmkIdentityType] {
	return pulumix.Output[*CmkIdentityType]{
		OutputState: in.ToCmkIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Provision states for FluidRelay RP
type ProvisioningState string

const (
	ProvisioningStateSucceeded = ProvisioningState("Succeeded")
	ProvisioningStateFailed    = ProvisioningState("Failed")
	ProvisioningStateCanceled  = ProvisioningState("Canceled")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (e ProvisioningState) ToProvisioningStateOutput() ProvisioningStateOutput {
	return pulumi.ToOutput(e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return e.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return ProvisioningState(e).ToProvisioningStateOutputWithContext(ctx).ToProvisioningStatePtrOutputWithContext(ctx)
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProvisioningStateOutput struct{ *pulumi.OutputState }

func (ProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStateOutput) ToProvisioningStateOutput() ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningState) *ProvisioningState {
		return &v
	}).(ProvisioningStatePtrOutput)
}

func (o ProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) Elem() ProvisioningStateOutput {
	return o.ApplyT(func(v *ProvisioningState) ProvisioningState {
		if v != nil {
			return *v
		}
		var ret ProvisioningState
		return ret
	}).(ProvisioningStateOutput)
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProvisioningStateInput is an input type that accepts values of the ProvisioningState enum
// A concrete instance of `ProvisioningStateInput` can be one of the following:
//
//	ProvisioningStateSucceeded
//	ProvisioningStateFailed
//	ProvisioningStateCanceled
type ProvisioningStateInput interface {
	pulumi.Input

	ToProvisioningStateOutput() ProvisioningStateOutput
	ToProvisioningStateOutputWithContext(context.Context) ProvisioningStateOutput
}

var provisioningStatePtrType = reflect.TypeOf((**ProvisioningState)(nil)).Elem()

type ProvisioningStatePtrInput interface {
	pulumi.Input

	ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput
	ToProvisioningStatePtrOutputWithContext(context.Context) ProvisioningStatePtrOutput
}

type provisioningStatePtr string

func ProvisioningStatePtr(v string) ProvisioningStatePtrInput {
	return (*provisioningStatePtr)(&v)
}

func (*provisioningStatePtr) ElementType() reflect.Type {
	return provisioningStatePtrType
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ProvisioningState] {
	return pulumix.Output[*ProvisioningState]{
		OutputState: in.ToProvisioningStatePtrOutputWithContext(ctx).OutputState,
	}
}

// The identity type.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned               = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeUserAssigned                 = ResourceIdentityType("UserAssigned")
	ResourceIdentityType_SystemAssigned_UserAssigned = ResourceIdentityType("SystemAssigned, UserAssigned")
	ResourceIdentityTypeNone                         = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
//	ResourceIdentityTypeUserAssigned
//	ResourceIdentityType_SystemAssigned_UserAssigned
//	ResourceIdentityTypeNone
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceIdentityType] {
	return pulumix.Output[*ResourceIdentityType]{
		OutputState: in.ToResourceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Sku of the storage associated with the resource
type StorageSKU string

const (
	StorageSKUStandard = StorageSKU("standard")
	StorageSKUBasic    = StorageSKU("basic")
)

func (StorageSKU) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSKU)(nil)).Elem()
}

func (e StorageSKU) ToStorageSKUOutput() StorageSKUOutput {
	return pulumi.ToOutput(e).(StorageSKUOutput)
}

func (e StorageSKU) ToStorageSKUOutputWithContext(ctx context.Context) StorageSKUOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageSKUOutput)
}

func (e StorageSKU) ToStorageSKUPtrOutput() StorageSKUPtrOutput {
	return e.ToStorageSKUPtrOutputWithContext(context.Background())
}

func (e StorageSKU) ToStorageSKUPtrOutputWithContext(ctx context.Context) StorageSKUPtrOutput {
	return StorageSKU(e).ToStorageSKUOutputWithContext(ctx).ToStorageSKUPtrOutputWithContext(ctx)
}

func (e StorageSKU) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSKU) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSKU) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageSKU) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageSKUOutput struct{ *pulumi.OutputState }

func (StorageSKUOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSKU)(nil)).Elem()
}

func (o StorageSKUOutput) ToStorageSKUOutput() StorageSKUOutput {
	return o
}

func (o StorageSKUOutput) ToStorageSKUOutputWithContext(ctx context.Context) StorageSKUOutput {
	return o
}

func (o StorageSKUOutput) ToStorageSKUPtrOutput() StorageSKUPtrOutput {
	return o.ToStorageSKUPtrOutputWithContext(context.Background())
}

func (o StorageSKUOutput) ToStorageSKUPtrOutputWithContext(ctx context.Context) StorageSKUPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageSKU) *StorageSKU {
		return &v
	}).(StorageSKUPtrOutput)
}

func (o StorageSKUOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageSKUOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSKU) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageSKUOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSKUOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSKU) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageSKUPtrOutput struct{ *pulumi.OutputState }

func (StorageSKUPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSKU)(nil)).Elem()
}

func (o StorageSKUPtrOutput) ToStorageSKUPtrOutput() StorageSKUPtrOutput {
	return o
}

func (o StorageSKUPtrOutput) ToStorageSKUPtrOutputWithContext(ctx context.Context) StorageSKUPtrOutput {
	return o
}

func (o StorageSKUPtrOutput) Elem() StorageSKUOutput {
	return o.ApplyT(func(v *StorageSKU) StorageSKU {
		if v != nil {
			return *v
		}
		var ret StorageSKU
		return ret
	}).(StorageSKUOutput)
}

func (o StorageSKUPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSKUPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageSKU) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageSKUInput is an input type that accepts values of the StorageSKU enum
// A concrete instance of `StorageSKUInput` can be one of the following:
//
//	StorageSKUStandard
//	StorageSKUBasic
type StorageSKUInput interface {
	pulumi.Input

	ToStorageSKUOutput() StorageSKUOutput
	ToStorageSKUOutputWithContext(context.Context) StorageSKUOutput
}

var storageSKUPtrType = reflect.TypeOf((**StorageSKU)(nil)).Elem()

type StorageSKUPtrInput interface {
	pulumi.Input

	ToStorageSKUPtrOutput() StorageSKUPtrOutput
	ToStorageSKUPtrOutputWithContext(context.Context) StorageSKUPtrOutput
}

type storageSKUPtr string

func StorageSKUPtr(v string) StorageSKUPtrInput {
	return (*storageSKUPtr)(&v)
}

func (*storageSKUPtr) ElementType() reflect.Type {
	return storageSKUPtrType
}

func (in *storageSKUPtr) ToStorageSKUPtrOutput() StorageSKUPtrOutput {
	return pulumi.ToOutput(in).(StorageSKUPtrOutput)
}

func (in *storageSKUPtr) ToStorageSKUPtrOutputWithContext(ctx context.Context) StorageSKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageSKUPtrOutput)
}

func (in *storageSKUPtr) ToOutput(ctx context.Context) pulumix.Output[*StorageSKU] {
	return pulumix.Output[*StorageSKU]{
		OutputState: in.ToStorageSKUPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(CmkIdentityTypeOutput{})
	pulumi.RegisterOutputType(CmkIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ProvisioningStateOutput{})
	pulumi.RegisterOutputType(ProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(StorageSKUOutput{})
	pulumi.RegisterOutputType(StorageSKUPtrOutput{})
}
