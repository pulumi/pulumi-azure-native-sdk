// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagetasks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The else block of storage task operation
type ElseCondition struct {
	// List of operations to execute in the else block
	Operations []StorageTaskOperation `pulumi:"operations"`
}

// ElseConditionInput is an input type that accepts ElseConditionArgs and ElseConditionOutput values.
// You can construct a concrete instance of `ElseConditionInput` via:
//
//	ElseConditionArgs{...}
type ElseConditionInput interface {
	pulumi.Input

	ToElseConditionOutput() ElseConditionOutput
	ToElseConditionOutputWithContext(context.Context) ElseConditionOutput
}

// The else block of storage task operation
type ElseConditionArgs struct {
	// List of operations to execute in the else block
	Operations StorageTaskOperationArrayInput `pulumi:"operations"`
}

func (ElseConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElseCondition)(nil)).Elem()
}

func (i ElseConditionArgs) ToElseConditionOutput() ElseConditionOutput {
	return i.ToElseConditionOutputWithContext(context.Background())
}

func (i ElseConditionArgs) ToElseConditionOutputWithContext(ctx context.Context) ElseConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElseConditionOutput)
}

func (i ElseConditionArgs) ToElseConditionPtrOutput() ElseConditionPtrOutput {
	return i.ToElseConditionPtrOutputWithContext(context.Background())
}

func (i ElseConditionArgs) ToElseConditionPtrOutputWithContext(ctx context.Context) ElseConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElseConditionOutput).ToElseConditionPtrOutputWithContext(ctx)
}

// ElseConditionPtrInput is an input type that accepts ElseConditionArgs, ElseConditionPtr and ElseConditionPtrOutput values.
// You can construct a concrete instance of `ElseConditionPtrInput` via:
//
//	        ElseConditionArgs{...}
//
//	or:
//
//	        nil
type ElseConditionPtrInput interface {
	pulumi.Input

	ToElseConditionPtrOutput() ElseConditionPtrOutput
	ToElseConditionPtrOutputWithContext(context.Context) ElseConditionPtrOutput
}

type elseConditionPtrType ElseConditionArgs

func ElseConditionPtr(v *ElseConditionArgs) ElseConditionPtrInput {
	return (*elseConditionPtrType)(v)
}

func (*elseConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElseCondition)(nil)).Elem()
}

func (i *elseConditionPtrType) ToElseConditionPtrOutput() ElseConditionPtrOutput {
	return i.ToElseConditionPtrOutputWithContext(context.Background())
}

func (i *elseConditionPtrType) ToElseConditionPtrOutputWithContext(ctx context.Context) ElseConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElseConditionPtrOutput)
}

// The else block of storage task operation
type ElseConditionOutput struct{ *pulumi.OutputState }

func (ElseConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElseCondition)(nil)).Elem()
}

func (o ElseConditionOutput) ToElseConditionOutput() ElseConditionOutput {
	return o
}

func (o ElseConditionOutput) ToElseConditionOutputWithContext(ctx context.Context) ElseConditionOutput {
	return o
}

func (o ElseConditionOutput) ToElseConditionPtrOutput() ElseConditionPtrOutput {
	return o.ToElseConditionPtrOutputWithContext(context.Background())
}

func (o ElseConditionOutput) ToElseConditionPtrOutputWithContext(ctx context.Context) ElseConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElseCondition) *ElseCondition {
		return &v
	}).(ElseConditionPtrOutput)
}

// List of operations to execute in the else block
func (o ElseConditionOutput) Operations() StorageTaskOperationArrayOutput {
	return o.ApplyT(func(v ElseCondition) []StorageTaskOperation { return v.Operations }).(StorageTaskOperationArrayOutput)
}

type ElseConditionPtrOutput struct{ *pulumi.OutputState }

func (ElseConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElseCondition)(nil)).Elem()
}

func (o ElseConditionPtrOutput) ToElseConditionPtrOutput() ElseConditionPtrOutput {
	return o
}

func (o ElseConditionPtrOutput) ToElseConditionPtrOutputWithContext(ctx context.Context) ElseConditionPtrOutput {
	return o
}

func (o ElseConditionPtrOutput) Elem() ElseConditionOutput {
	return o.ApplyT(func(v *ElseCondition) ElseCondition {
		if v != nil {
			return *v
		}
		var ret ElseCondition
		return ret
	}).(ElseConditionOutput)
}

// List of operations to execute in the else block
func (o ElseConditionPtrOutput) Operations() StorageTaskOperationArrayOutput {
	return o.ApplyT(func(v *ElseCondition) []StorageTaskOperation {
		if v == nil {
			return nil
		}
		return v.Operations
	}).(StorageTaskOperationArrayOutput)
}

// The else block of storage task operation
type ElseConditionResponse struct {
	// List of operations to execute in the else block
	Operations []StorageTaskOperationResponse `pulumi:"operations"`
}

// The else block of storage task operation
type ElseConditionResponseOutput struct{ *pulumi.OutputState }

func (ElseConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElseConditionResponse)(nil)).Elem()
}

func (o ElseConditionResponseOutput) ToElseConditionResponseOutput() ElseConditionResponseOutput {
	return o
}

func (o ElseConditionResponseOutput) ToElseConditionResponseOutputWithContext(ctx context.Context) ElseConditionResponseOutput {
	return o
}

// List of operations to execute in the else block
func (o ElseConditionResponseOutput) Operations() StorageTaskOperationResponseArrayOutput {
	return o.ApplyT(func(v ElseConditionResponse) []StorageTaskOperationResponse { return v.Operations }).(StorageTaskOperationResponseArrayOutput)
}

type ElseConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (ElseConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElseConditionResponse)(nil)).Elem()
}

func (o ElseConditionResponsePtrOutput) ToElseConditionResponsePtrOutput() ElseConditionResponsePtrOutput {
	return o
}

func (o ElseConditionResponsePtrOutput) ToElseConditionResponsePtrOutputWithContext(ctx context.Context) ElseConditionResponsePtrOutput {
	return o
}

func (o ElseConditionResponsePtrOutput) Elem() ElseConditionResponseOutput {
	return o.ApplyT(func(v *ElseConditionResponse) ElseConditionResponse {
		if v != nil {
			return *v
		}
		var ret ElseConditionResponse
		return ret
	}).(ElseConditionResponseOutput)
}

// List of operations to execute in the else block
func (o ElseConditionResponsePtrOutput) Operations() StorageTaskOperationResponseArrayOutput {
	return o.ApplyT(func(v *ElseConditionResponse) []StorageTaskOperationResponse {
		if v == nil {
			return nil
		}
		return v.Operations
	}).(StorageTaskOperationResponseArrayOutput)
}

// The if block of storage task operation
type IfCondition struct {
	// The condition predicate which is composed of object properties, eg: blob and container properties.
	Condition string `pulumi:"condition"`
	// List of operations to execute when the condition predicate satisfies.
	Operations []StorageTaskOperation `pulumi:"operations"`
}

// IfConditionInput is an input type that accepts IfConditionArgs and IfConditionOutput values.
// You can construct a concrete instance of `IfConditionInput` via:
//
//	IfConditionArgs{...}
type IfConditionInput interface {
	pulumi.Input

	ToIfConditionOutput() IfConditionOutput
	ToIfConditionOutputWithContext(context.Context) IfConditionOutput
}

// The if block of storage task operation
type IfConditionArgs struct {
	// The condition predicate which is composed of object properties, eg: blob and container properties.
	Condition pulumi.StringInput `pulumi:"condition"`
	// List of operations to execute when the condition predicate satisfies.
	Operations StorageTaskOperationArrayInput `pulumi:"operations"`
}

func (IfConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IfCondition)(nil)).Elem()
}

func (i IfConditionArgs) ToIfConditionOutput() IfConditionOutput {
	return i.ToIfConditionOutputWithContext(context.Background())
}

func (i IfConditionArgs) ToIfConditionOutputWithContext(ctx context.Context) IfConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IfConditionOutput)
}

// The if block of storage task operation
type IfConditionOutput struct{ *pulumi.OutputState }

func (IfConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IfCondition)(nil)).Elem()
}

func (o IfConditionOutput) ToIfConditionOutput() IfConditionOutput {
	return o
}

func (o IfConditionOutput) ToIfConditionOutputWithContext(ctx context.Context) IfConditionOutput {
	return o
}

// The condition predicate which is composed of object properties, eg: blob and container properties.
func (o IfConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v IfCondition) string { return v.Condition }).(pulumi.StringOutput)
}

// List of operations to execute when the condition predicate satisfies.
func (o IfConditionOutput) Operations() StorageTaskOperationArrayOutput {
	return o.ApplyT(func(v IfCondition) []StorageTaskOperation { return v.Operations }).(StorageTaskOperationArrayOutput)
}

// The if block of storage task operation
type IfConditionResponse struct {
	// The condition predicate which is composed of object properties, eg: blob and container properties.
	Condition string `pulumi:"condition"`
	// List of operations to execute when the condition predicate satisfies.
	Operations []StorageTaskOperationResponse `pulumi:"operations"`
}

// The if block of storage task operation
type IfConditionResponseOutput struct{ *pulumi.OutputState }

func (IfConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IfConditionResponse)(nil)).Elem()
}

func (o IfConditionResponseOutput) ToIfConditionResponseOutput() IfConditionResponseOutput {
	return o
}

func (o IfConditionResponseOutput) ToIfConditionResponseOutputWithContext(ctx context.Context) IfConditionResponseOutput {
	return o
}

// The condition predicate which is composed of object properties, eg: blob and container properties.
func (o IfConditionResponseOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v IfConditionResponse) string { return v.Condition }).(pulumi.StringOutput)
}

// List of operations to execute when the condition predicate satisfies.
func (o IfConditionResponseOutput) Operations() StorageTaskOperationResponseArrayOutput {
	return o.ApplyT(func(v IfConditionResponse) []StorageTaskOperationResponse { return v.Operations }).(StorageTaskOperationResponseArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// The storage task action represents conditional statements and operations to be performed on target objects.
type StorageTaskAction struct {
	// The else block of storage task operation
	Else *ElseCondition `pulumi:"else"`
	// The if block of storage task operation
	If IfCondition `pulumi:"if"`
}

// StorageTaskActionInput is an input type that accepts StorageTaskActionArgs and StorageTaskActionOutput values.
// You can construct a concrete instance of `StorageTaskActionInput` via:
//
//	StorageTaskActionArgs{...}
type StorageTaskActionInput interface {
	pulumi.Input

	ToStorageTaskActionOutput() StorageTaskActionOutput
	ToStorageTaskActionOutputWithContext(context.Context) StorageTaskActionOutput
}

// The storage task action represents conditional statements and operations to be performed on target objects.
type StorageTaskActionArgs struct {
	// The else block of storage task operation
	Else ElseConditionPtrInput `pulumi:"else"`
	// The if block of storage task operation
	If IfConditionInput `pulumi:"if"`
}

func (StorageTaskActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTaskAction)(nil)).Elem()
}

func (i StorageTaskActionArgs) ToStorageTaskActionOutput() StorageTaskActionOutput {
	return i.ToStorageTaskActionOutputWithContext(context.Background())
}

func (i StorageTaskActionArgs) ToStorageTaskActionOutputWithContext(ctx context.Context) StorageTaskActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTaskActionOutput)
}

// The storage task action represents conditional statements and operations to be performed on target objects.
type StorageTaskActionOutput struct{ *pulumi.OutputState }

func (StorageTaskActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTaskAction)(nil)).Elem()
}

func (o StorageTaskActionOutput) ToStorageTaskActionOutput() StorageTaskActionOutput {
	return o
}

func (o StorageTaskActionOutput) ToStorageTaskActionOutputWithContext(ctx context.Context) StorageTaskActionOutput {
	return o
}

// The else block of storage task operation
func (o StorageTaskActionOutput) Else() ElseConditionPtrOutput {
	return o.ApplyT(func(v StorageTaskAction) *ElseCondition { return v.Else }).(ElseConditionPtrOutput)
}

// The if block of storage task operation
func (o StorageTaskActionOutput) If() IfConditionOutput {
	return o.ApplyT(func(v StorageTaskAction) IfCondition { return v.If }).(IfConditionOutput)
}

// The storage task action represents conditional statements and operations to be performed on target objects.
type StorageTaskActionResponse struct {
	// The else block of storage task operation
	Else *ElseConditionResponse `pulumi:"else"`
	// The if block of storage task operation
	If IfConditionResponse `pulumi:"if"`
}

// The storage task action represents conditional statements and operations to be performed on target objects.
type StorageTaskActionResponseOutput struct{ *pulumi.OutputState }

func (StorageTaskActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTaskActionResponse)(nil)).Elem()
}

func (o StorageTaskActionResponseOutput) ToStorageTaskActionResponseOutput() StorageTaskActionResponseOutput {
	return o
}

func (o StorageTaskActionResponseOutput) ToStorageTaskActionResponseOutputWithContext(ctx context.Context) StorageTaskActionResponseOutput {
	return o
}

// The else block of storage task operation
func (o StorageTaskActionResponseOutput) Else() ElseConditionResponsePtrOutput {
	return o.ApplyT(func(v StorageTaskActionResponse) *ElseConditionResponse { return v.Else }).(ElseConditionResponsePtrOutput)
}

// The if block of storage task operation
func (o StorageTaskActionResponseOutput) If() IfConditionResponseOutput {
	return o.ApplyT(func(v StorageTaskActionResponse) IfConditionResponse { return v.If }).(IfConditionResponseOutput)
}

// Represents an operation to be performed on the object
type StorageTaskOperation struct {
	// The operation to be performed on the object.
	Name string `pulumi:"name"`
	// Action to be taken when the operation fails for a object.
	OnFailure *OnFailure `pulumi:"onFailure"`
	// Action to be taken when the operation is successful for a object.
	OnSuccess *OnSuccess `pulumi:"onSuccess"`
	// Key-value parameters for the operation.
	Parameters map[string]string `pulumi:"parameters"`
}

// StorageTaskOperationInput is an input type that accepts StorageTaskOperationArgs and StorageTaskOperationOutput values.
// You can construct a concrete instance of `StorageTaskOperationInput` via:
//
//	StorageTaskOperationArgs{...}
type StorageTaskOperationInput interface {
	pulumi.Input

	ToStorageTaskOperationOutput() StorageTaskOperationOutput
	ToStorageTaskOperationOutputWithContext(context.Context) StorageTaskOperationOutput
}

// Represents an operation to be performed on the object
type StorageTaskOperationArgs struct {
	// The operation to be performed on the object.
	Name pulumi.StringInput `pulumi:"name"`
	// Action to be taken when the operation fails for a object.
	OnFailure OnFailurePtrInput `pulumi:"onFailure"`
	// Action to be taken when the operation is successful for a object.
	OnSuccess OnSuccessPtrInput `pulumi:"onSuccess"`
	// Key-value parameters for the operation.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (StorageTaskOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTaskOperation)(nil)).Elem()
}

func (i StorageTaskOperationArgs) ToStorageTaskOperationOutput() StorageTaskOperationOutput {
	return i.ToStorageTaskOperationOutputWithContext(context.Background())
}

func (i StorageTaskOperationArgs) ToStorageTaskOperationOutputWithContext(ctx context.Context) StorageTaskOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTaskOperationOutput)
}

// StorageTaskOperationArrayInput is an input type that accepts StorageTaskOperationArray and StorageTaskOperationArrayOutput values.
// You can construct a concrete instance of `StorageTaskOperationArrayInput` via:
//
//	StorageTaskOperationArray{ StorageTaskOperationArgs{...} }
type StorageTaskOperationArrayInput interface {
	pulumi.Input

	ToStorageTaskOperationArrayOutput() StorageTaskOperationArrayOutput
	ToStorageTaskOperationArrayOutputWithContext(context.Context) StorageTaskOperationArrayOutput
}

type StorageTaskOperationArray []StorageTaskOperationInput

func (StorageTaskOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageTaskOperation)(nil)).Elem()
}

func (i StorageTaskOperationArray) ToStorageTaskOperationArrayOutput() StorageTaskOperationArrayOutput {
	return i.ToStorageTaskOperationArrayOutputWithContext(context.Background())
}

func (i StorageTaskOperationArray) ToStorageTaskOperationArrayOutputWithContext(ctx context.Context) StorageTaskOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTaskOperationArrayOutput)
}

// Represents an operation to be performed on the object
type StorageTaskOperationOutput struct{ *pulumi.OutputState }

func (StorageTaskOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTaskOperation)(nil)).Elem()
}

func (o StorageTaskOperationOutput) ToStorageTaskOperationOutput() StorageTaskOperationOutput {
	return o
}

func (o StorageTaskOperationOutput) ToStorageTaskOperationOutputWithContext(ctx context.Context) StorageTaskOperationOutput {
	return o
}

// The operation to be performed on the object.
func (o StorageTaskOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageTaskOperation) string { return v.Name }).(pulumi.StringOutput)
}

// Action to be taken when the operation fails for a object.
func (o StorageTaskOperationOutput) OnFailure() OnFailurePtrOutput {
	return o.ApplyT(func(v StorageTaskOperation) *OnFailure { return v.OnFailure }).(OnFailurePtrOutput)
}

// Action to be taken when the operation is successful for a object.
func (o StorageTaskOperationOutput) OnSuccess() OnSuccessPtrOutput {
	return o.ApplyT(func(v StorageTaskOperation) *OnSuccess { return v.OnSuccess }).(OnSuccessPtrOutput)
}

// Key-value parameters for the operation.
func (o StorageTaskOperationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v StorageTaskOperation) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type StorageTaskOperationArrayOutput struct{ *pulumi.OutputState }

func (StorageTaskOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageTaskOperation)(nil)).Elem()
}

func (o StorageTaskOperationArrayOutput) ToStorageTaskOperationArrayOutput() StorageTaskOperationArrayOutput {
	return o
}

func (o StorageTaskOperationArrayOutput) ToStorageTaskOperationArrayOutputWithContext(ctx context.Context) StorageTaskOperationArrayOutput {
	return o
}

func (o StorageTaskOperationArrayOutput) Index(i pulumi.IntInput) StorageTaskOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageTaskOperation {
		return vs[0].([]StorageTaskOperation)[vs[1].(int)]
	}).(StorageTaskOperationOutput)
}

// Represents an operation to be performed on the object
type StorageTaskOperationResponse struct {
	// The operation to be performed on the object.
	Name string `pulumi:"name"`
	// Action to be taken when the operation fails for a object.
	OnFailure *string `pulumi:"onFailure"`
	// Action to be taken when the operation is successful for a object.
	OnSuccess *string `pulumi:"onSuccess"`
	// Key-value parameters for the operation.
	Parameters map[string]string `pulumi:"parameters"`
}

// Represents an operation to be performed on the object
type StorageTaskOperationResponseOutput struct{ *pulumi.OutputState }

func (StorageTaskOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTaskOperationResponse)(nil)).Elem()
}

func (o StorageTaskOperationResponseOutput) ToStorageTaskOperationResponseOutput() StorageTaskOperationResponseOutput {
	return o
}

func (o StorageTaskOperationResponseOutput) ToStorageTaskOperationResponseOutputWithContext(ctx context.Context) StorageTaskOperationResponseOutput {
	return o
}

// The operation to be performed on the object.
func (o StorageTaskOperationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageTaskOperationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Action to be taken when the operation fails for a object.
func (o StorageTaskOperationResponseOutput) OnFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTaskOperationResponse) *string { return v.OnFailure }).(pulumi.StringPtrOutput)
}

// Action to be taken when the operation is successful for a object.
func (o StorageTaskOperationResponseOutput) OnSuccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTaskOperationResponse) *string { return v.OnSuccess }).(pulumi.StringPtrOutput)
}

// Key-value parameters for the operation.
func (o StorageTaskOperationResponseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v StorageTaskOperationResponse) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type StorageTaskOperationResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageTaskOperationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageTaskOperationResponse)(nil)).Elem()
}

func (o StorageTaskOperationResponseArrayOutput) ToStorageTaskOperationResponseArrayOutput() StorageTaskOperationResponseArrayOutput {
	return o
}

func (o StorageTaskOperationResponseArrayOutput) ToStorageTaskOperationResponseArrayOutputWithContext(ctx context.Context) StorageTaskOperationResponseArrayOutput {
	return o
}

func (o StorageTaskOperationResponseArrayOutput) Index(i pulumi.IntInput) StorageTaskOperationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageTaskOperationResponse {
		return vs[0].([]StorageTaskOperationResponse)[vs[1].(int)]
	}).(StorageTaskOperationResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ElseConditionOutput{})
	pulumi.RegisterOutputType(ElseConditionPtrOutput{})
	pulumi.RegisterOutputType(ElseConditionResponseOutput{})
	pulumi.RegisterOutputType(ElseConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(IfConditionOutput{})
	pulumi.RegisterOutputType(IfConditionResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageTaskActionOutput{})
	pulumi.RegisterOutputType(StorageTaskActionResponseOutput{})
	pulumi.RegisterOutputType(StorageTaskOperationOutput{})
	pulumi.RegisterOutputType(StorageTaskOperationArrayOutput{})
	pulumi.RegisterOutputType(StorageTaskOperationResponseOutput{})
	pulumi.RegisterOutputType(StorageTaskOperationResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
