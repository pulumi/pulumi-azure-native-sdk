// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the storage task properties
func LookupStorageTask(ctx *pulumi.Context, args *LookupStorageTaskArgs, opts ...pulumi.InvokeOption) (*LookupStorageTaskResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageTaskResult
	err := ctx.Invoke("azure-native:storagetasks/v20230101:getStorageTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStorageTaskArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.
	StorageTaskName string `pulumi:"storageTaskName"`
}

// Represents Storage Task.
type LookupStorageTaskResult struct {
	// The storage task action that is executed
	Action StorageTaskActionResponse `pulumi:"action"`
	// The creation date and time of the storage task in UTC.
	CreationTimeInUtc string `pulumi:"creationTimeInUtc"`
	// Text that describes the purpose of the storage task
	Description string `pulumi:"description"`
	// Storage Task is enabled when set to true and disabled when set to false
	Enabled bool `pulumi:"enabled"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed service identity of the resource.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Represents the provisioning state of the storage task.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Storage task version.
	TaskVersion float64 `pulumi:"taskVersion"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupStorageTaskOutput(ctx *pulumi.Context, args LookupStorageTaskOutputArgs, opts ...pulumi.InvokeOption) LookupStorageTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageTaskResult, error) {
			args := v.(LookupStorageTaskArgs)
			r, err := LookupStorageTask(ctx, &args, opts...)
			var s LookupStorageTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageTaskResultOutput)
}

type LookupStorageTaskOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.
	StorageTaskName pulumi.StringInput `pulumi:"storageTaskName"`
}

func (LookupStorageTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageTaskArgs)(nil)).Elem()
}

// Represents Storage Task.
type LookupStorageTaskResultOutput struct{ *pulumi.OutputState }

func (LookupStorageTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageTaskResult)(nil)).Elem()
}

func (o LookupStorageTaskResultOutput) ToLookupStorageTaskResultOutput() LookupStorageTaskResultOutput {
	return o
}

func (o LookupStorageTaskResultOutput) ToLookupStorageTaskResultOutputWithContext(ctx context.Context) LookupStorageTaskResultOutput {
	return o
}

// The storage task action that is executed
func (o LookupStorageTaskResultOutput) Action() StorageTaskActionResponseOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) StorageTaskActionResponse { return v.Action }).(StorageTaskActionResponseOutput)
}

// The creation date and time of the storage task in UTC.
func (o LookupStorageTaskResultOutput) CreationTimeInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.CreationTimeInUtc }).(pulumi.StringOutput)
}

// Text that describes the purpose of the storage task
func (o LookupStorageTaskResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.Description }).(pulumi.StringOutput)
}

// Storage Task is enabled when set to true and disabled when set to false
func (o LookupStorageTaskResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupStorageTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed service identity of the resource.
func (o LookupStorageTaskResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupStorageTaskResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupStorageTaskResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.Name }).(pulumi.StringOutput)
}

// Represents the provisioning state of the storage task.
func (o LookupStorageTaskResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupStorageTaskResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupStorageTaskResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Storage task version.
func (o LookupStorageTaskResultOutput) TaskVersion() pulumi.Float64Output {
	return o.ApplyT(func(v LookupStorageTaskResult) float64 { return v.TaskVersion }).(pulumi.Float64Output)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupStorageTaskResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageTaskResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageTaskResultOutput{})
}
