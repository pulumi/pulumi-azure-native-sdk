// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package integrationspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Space
// Azure REST API version: 2023-11-14-preview.
func LookupSpace(ctx *pulumi.Context, args *LookupSpaceArgs, opts ...pulumi.InvokeOption) (*LookupSpaceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSpaceResult
	err := ctx.Invoke("azure-native:integrationspaces:getSpace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSpaceArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the space
	SpaceName string `pulumi:"spaceName"`
}

// An integration space.
type LookupSpaceResult struct {
	// The description of the resource.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSpaceOutput(ctx *pulumi.Context, args LookupSpaceOutputArgs, opts ...pulumi.InvokeOption) LookupSpaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSpaceResult, error) {
			args := v.(LookupSpaceArgs)
			r, err := LookupSpace(ctx, &args, opts...)
			var s LookupSpaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSpaceResultOutput)
}

type LookupSpaceOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the space
	SpaceName pulumi.StringInput `pulumi:"spaceName"`
}

func (LookupSpaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpaceArgs)(nil)).Elem()
}

// An integration space.
type LookupSpaceResultOutput struct{ *pulumi.OutputState }

func (LookupSpaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpaceResult)(nil)).Elem()
}

func (o LookupSpaceResultOutput) ToLookupSpaceResultOutput() LookupSpaceResultOutput {
	return o
}

func (o LookupSpaceResultOutput) ToLookupSpaceResultOutputWithContext(ctx context.Context) LookupSpaceResultOutput {
	return o
}

// The description of the resource.
func (o LookupSpaceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSpaceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSpaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSpaceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSpaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupSpaceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSpaceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSpaceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSpaceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSpaceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSpaceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpaceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpaceResultOutput{})
}
