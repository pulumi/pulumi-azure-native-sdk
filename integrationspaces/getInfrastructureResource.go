// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package integrationspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get a InfrastructureResource
// Azure REST API version: 2023-11-14-preview.
func LookupInfrastructureResource(ctx *pulumi.Context, args *LookupInfrastructureResourceArgs, opts ...pulumi.InvokeOption) (*LookupInfrastructureResourceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupInfrastructureResourceResult
	err := ctx.Invoke("azure-native:integrationspaces:getInfrastructureResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInfrastructureResourceArgs struct {
	// The name of the infrastructure resource in the space.
	InfrastructureResourceName string `pulumi:"infrastructureResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the space
	SpaceName string `pulumi:"spaceName"`
}

// An infrastructure resource under Space.
type LookupInfrastructureResourceResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// The id of the infrastructure resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of the infrastructure resource.
	ResourceType string `pulumi:"resourceType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupInfrastructureResourceOutput(ctx *pulumi.Context, args LookupInfrastructureResourceOutputArgs, opts ...pulumi.InvokeOption) LookupInfrastructureResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInfrastructureResourceResult, error) {
			args := v.(LookupInfrastructureResourceArgs)
			r, err := LookupInfrastructureResource(ctx, &args, opts...)
			var s LookupInfrastructureResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInfrastructureResourceResultOutput)
}

type LookupInfrastructureResourceOutputArgs struct {
	// The name of the infrastructure resource in the space.
	InfrastructureResourceName pulumi.StringInput `pulumi:"infrastructureResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the space
	SpaceName pulumi.StringInput `pulumi:"spaceName"`
}

func (LookupInfrastructureResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfrastructureResourceArgs)(nil)).Elem()
}

// An infrastructure resource under Space.
type LookupInfrastructureResourceResultOutput struct{ *pulumi.OutputState }

func (LookupInfrastructureResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfrastructureResourceResult)(nil)).Elem()
}

func (o LookupInfrastructureResourceResultOutput) ToLookupInfrastructureResourceResultOutput() LookupInfrastructureResourceResultOutput {
	return o
}

func (o LookupInfrastructureResourceResultOutput) ToLookupInfrastructureResourceResultOutputWithContext(ctx context.Context) LookupInfrastructureResourceResultOutput {
	return o
}

func (o LookupInfrastructureResourceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupInfrastructureResourceResult] {
	return pulumix.Output[LookupInfrastructureResourceResult]{
		OutputState: o.OutputState,
	}
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupInfrastructureResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupInfrastructureResourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupInfrastructureResourceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The id of the infrastructure resource.
func (o LookupInfrastructureResourceResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of the infrastructure resource.
func (o LookupInfrastructureResourceResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupInfrastructureResourceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupInfrastructureResourceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResourceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInfrastructureResourceResultOutput{})
}
