// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231114preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A business process under application.
type BusinessProcess struct {
	pulumi.CustomResourceState

	// The business process mapping.
	BusinessProcessMapping BusinessProcessMappingItemResponseMapOutput `pulumi:"businessProcessMapping"`
	// The business process stages.
	BusinessProcessStages BusinessProcessStageResponseMapOutput `pulumi:"businessProcessStages"`
	// The description of the business process.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The business process identifier.
	Identifier BusinessProcessIdentifierResponsePtrOutput `pulumi:"identifier"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The table name of the business process.
	TableName pulumi.StringPtrOutput `pulumi:"tableName"`
	// The tracking data store reference name.
	TrackingDataStoreReferenceName pulumi.StringPtrOutput `pulumi:"trackingDataStoreReferenceName"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the business process.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewBusinessProcess registers a new resource with the given unique name, arguments, and options.
func NewBusinessProcess(ctx *pulumi.Context,
	name string, args *BusinessProcessArgs, opts ...pulumi.ResourceOption) (*BusinessProcess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationName == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SpaceName == nil {
		return nil, errors.New("invalid value for required argument 'SpaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:integrationspaces:BusinessProcess"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource BusinessProcess
	err := ctx.RegisterResource("azure-native:integrationspaces/v20231114preview:BusinessProcess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBusinessProcess gets an existing BusinessProcess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBusinessProcess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BusinessProcessState, opts ...pulumi.ResourceOption) (*BusinessProcess, error) {
	var resource BusinessProcess
	err := ctx.ReadResource("azure-native:integrationspaces/v20231114preview:BusinessProcess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BusinessProcess resources.
type businessProcessState struct {
}

type BusinessProcessState struct {
}

func (BusinessProcessState) ElementType() reflect.Type {
	return reflect.TypeOf((*businessProcessState)(nil)).Elem()
}

type businessProcessArgs struct {
	// The name of the Application
	ApplicationName string `pulumi:"applicationName"`
	// The business process mapping.
	BusinessProcessMapping map[string]BusinessProcessMappingItem `pulumi:"businessProcessMapping"`
	// The name of the business process
	BusinessProcessName *string `pulumi:"businessProcessName"`
	// The business process stages.
	BusinessProcessStages map[string]BusinessProcessStage `pulumi:"businessProcessStages"`
	// The description of the business process.
	Description *string `pulumi:"description"`
	// The business process identifier.
	Identifier *BusinessProcessIdentifier `pulumi:"identifier"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the space
	SpaceName string `pulumi:"spaceName"`
	// The table name of the business process.
	TableName *string `pulumi:"tableName"`
	// The tracking data store reference name.
	TrackingDataStoreReferenceName *string `pulumi:"trackingDataStoreReferenceName"`
}

// The set of arguments for constructing a BusinessProcess resource.
type BusinessProcessArgs struct {
	// The name of the Application
	ApplicationName pulumi.StringInput
	// The business process mapping.
	BusinessProcessMapping BusinessProcessMappingItemMapInput
	// The name of the business process
	BusinessProcessName pulumi.StringPtrInput
	// The business process stages.
	BusinessProcessStages BusinessProcessStageMapInput
	// The description of the business process.
	Description pulumi.StringPtrInput
	// The business process identifier.
	Identifier BusinessProcessIdentifierPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the space
	SpaceName pulumi.StringInput
	// The table name of the business process.
	TableName pulumi.StringPtrInput
	// The tracking data store reference name.
	TrackingDataStoreReferenceName pulumi.StringPtrInput
}

func (BusinessProcessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*businessProcessArgs)(nil)).Elem()
}

type BusinessProcessInput interface {
	pulumi.Input

	ToBusinessProcessOutput() BusinessProcessOutput
	ToBusinessProcessOutputWithContext(ctx context.Context) BusinessProcessOutput
}

func (*BusinessProcess) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessProcess)(nil)).Elem()
}

func (i *BusinessProcess) ToBusinessProcessOutput() BusinessProcessOutput {
	return i.ToBusinessProcessOutputWithContext(context.Background())
}

func (i *BusinessProcess) ToBusinessProcessOutputWithContext(ctx context.Context) BusinessProcessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessProcessOutput)
}

type BusinessProcessOutput struct{ *pulumi.OutputState }

func (BusinessProcessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessProcess)(nil)).Elem()
}

func (o BusinessProcessOutput) ToBusinessProcessOutput() BusinessProcessOutput {
	return o
}

func (o BusinessProcessOutput) ToBusinessProcessOutputWithContext(ctx context.Context) BusinessProcessOutput {
	return o
}

// The business process mapping.
func (o BusinessProcessOutput) BusinessProcessMapping() BusinessProcessMappingItemResponseMapOutput {
	return o.ApplyT(func(v *BusinessProcess) BusinessProcessMappingItemResponseMapOutput { return v.BusinessProcessMapping }).(BusinessProcessMappingItemResponseMapOutput)
}

// The business process stages.
func (o BusinessProcessOutput) BusinessProcessStages() BusinessProcessStageResponseMapOutput {
	return o.ApplyT(func(v *BusinessProcess) BusinessProcessStageResponseMapOutput { return v.BusinessProcessStages }).(BusinessProcessStageResponseMapOutput)
}

// The description of the business process.
func (o BusinessProcessOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The business process identifier.
func (o BusinessProcessOutput) Identifier() BusinessProcessIdentifierResponsePtrOutput {
	return o.ApplyT(func(v *BusinessProcess) BusinessProcessIdentifierResponsePtrOutput { return v.Identifier }).(BusinessProcessIdentifierResponsePtrOutput)
}

// The name of the resource
func (o BusinessProcessOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o BusinessProcessOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o BusinessProcessOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *BusinessProcess) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The table name of the business process.
func (o BusinessProcessOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringPtrOutput { return v.TableName }).(pulumi.StringPtrOutput)
}

// The tracking data store reference name.
func (o BusinessProcessOutput) TrackingDataStoreReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringPtrOutput { return v.TrackingDataStoreReferenceName }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o BusinessProcessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the business process.
func (o BusinessProcessOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessProcess) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BusinessProcessOutput{})
}
