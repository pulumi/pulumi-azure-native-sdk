// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231114preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An infrastructure resource under Space.
type InfrastructureResource struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The id of the infrastructure resource.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The type of the infrastructure resource.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewInfrastructureResource registers a new resource with the given unique name, arguments, and options.
func NewInfrastructureResource(ctx *pulumi.Context,
	name string, args *InfrastructureResourceArgs, opts ...pulumi.ResourceOption) (*InfrastructureResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	if args.SpaceName == nil {
		return nil, errors.New("invalid value for required argument 'SpaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:integrationspaces:InfrastructureResource"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource InfrastructureResource
	err := ctx.RegisterResource("azure-native:integrationspaces/v20231114preview:InfrastructureResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfrastructureResource gets an existing InfrastructureResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfrastructureResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfrastructureResourceState, opts ...pulumi.ResourceOption) (*InfrastructureResource, error) {
	var resource InfrastructureResource
	err := ctx.ReadResource("azure-native:integrationspaces/v20231114preview:InfrastructureResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfrastructureResource resources.
type infrastructureResourceState struct {
}

type InfrastructureResourceState struct {
}

func (InfrastructureResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureResourceState)(nil)).Elem()
}

type infrastructureResourceArgs struct {
	// The name of the infrastructure resource in the space.
	InfrastructureResourceName *string `pulumi:"infrastructureResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The id of the infrastructure resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of the infrastructure resource.
	ResourceType string `pulumi:"resourceType"`
	// The name of the space
	SpaceName string `pulumi:"spaceName"`
}

// The set of arguments for constructing a InfrastructureResource resource.
type InfrastructureResourceArgs struct {
	// The name of the infrastructure resource in the space.
	InfrastructureResourceName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The id of the infrastructure resource.
	ResourceId pulumi.StringInput
	// The type of the infrastructure resource.
	ResourceType pulumi.StringInput
	// The name of the space
	SpaceName pulumi.StringInput
}

func (InfrastructureResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureResourceArgs)(nil)).Elem()
}

type InfrastructureResourceInput interface {
	pulumi.Input

	ToInfrastructureResourceOutput() InfrastructureResourceOutput
	ToInfrastructureResourceOutputWithContext(ctx context.Context) InfrastructureResourceOutput
}

func (*InfrastructureResource) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureResource)(nil)).Elem()
}

func (i *InfrastructureResource) ToInfrastructureResourceOutput() InfrastructureResourceOutput {
	return i.ToInfrastructureResourceOutputWithContext(context.Background())
}

func (i *InfrastructureResource) ToInfrastructureResourceOutputWithContext(ctx context.Context) InfrastructureResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureResourceOutput)
}

type InfrastructureResourceOutput struct{ *pulumi.OutputState }

func (InfrastructureResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureResource)(nil)).Elem()
}

func (o InfrastructureResourceOutput) ToInfrastructureResourceOutput() InfrastructureResourceOutput {
	return o
}

func (o InfrastructureResourceOutput) ToInfrastructureResourceOutputWithContext(ctx context.Context) InfrastructureResourceOutput {
	return o
}

// The name of the resource
func (o InfrastructureResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureResource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o InfrastructureResourceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureResource) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The id of the infrastructure resource.
func (o InfrastructureResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureResource) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of the infrastructure resource.
func (o InfrastructureResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureResource) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o InfrastructureResourceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *InfrastructureResource) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o InfrastructureResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *InfrastructureResource) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(InfrastructureResourceOutput{})
}
