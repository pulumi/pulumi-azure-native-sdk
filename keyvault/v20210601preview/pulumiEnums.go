// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A message indicating if changes on the service provider require any updates on the consumer.
type ActionsRequired string

const (
	ActionsRequiredNone = ActionsRequired("None")
)

// The create mode to indicate whether the resource is being created or is being recovered from a deleted resource.
type CreateMode string

const (
	// Recover the managed HSM pool from a soft-deleted resource.
	CreateModeRecover = CreateMode("recover")
	// Create a new managed HSM pool. This is the default option.
	CreateModeDefault = CreateMode("default")
)

func (CreateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateMode)(nil)).Elem()
}

func (e CreateMode) ToCreateModeOutput() CreateModeOutput {
	return pulumi.ToOutput(e).(CreateModeOutput)
}

func (e CreateMode) ToCreateModeOutputWithContext(ctx context.Context) CreateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CreateModeOutput)
}

func (e CreateMode) ToCreateModePtrOutput() CreateModePtrOutput {
	return e.ToCreateModePtrOutputWithContext(context.Background())
}

func (e CreateMode) ToCreateModePtrOutputWithContext(ctx context.Context) CreateModePtrOutput {
	return CreateMode(e).ToCreateModeOutputWithContext(ctx).ToCreateModePtrOutputWithContext(ctx)
}

func (e CreateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CreateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CreateModeOutput struct{ *pulumi.OutputState }

func (CreateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateMode)(nil)).Elem()
}

func (o CreateModeOutput) ToCreateModeOutput() CreateModeOutput {
	return o
}

func (o CreateModeOutput) ToCreateModeOutputWithContext(ctx context.Context) CreateModeOutput {
	return o
}

func (o CreateModeOutput) ToCreateModePtrOutput() CreateModePtrOutput {
	return o.ToCreateModePtrOutputWithContext(context.Background())
}

func (o CreateModeOutput) ToCreateModePtrOutputWithContext(ctx context.Context) CreateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreateMode) *CreateMode {
		return &v
	}).(CreateModePtrOutput)
}

func (o CreateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CreateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CreateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CreateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CreateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CreateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CreateModePtrOutput struct{ *pulumi.OutputState }

func (CreateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateMode)(nil)).Elem()
}

func (o CreateModePtrOutput) ToCreateModePtrOutput() CreateModePtrOutput {
	return o
}

func (o CreateModePtrOutput) ToCreateModePtrOutputWithContext(ctx context.Context) CreateModePtrOutput {
	return o
}

func (o CreateModePtrOutput) Elem() CreateModeOutput {
	return o.ApplyT(func(v *CreateMode) CreateMode {
		if v != nil {
			return *v
		}
		var ret CreateMode
		return ret
	}).(CreateModeOutput)
}

func (o CreateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CreateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CreateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CreateModeInput is an input type that accepts CreateModeArgs and CreateModeOutput values.
// You can construct a concrete instance of `CreateModeInput` via:
//
//	CreateModeArgs{...}
type CreateModeInput interface {
	pulumi.Input

	ToCreateModeOutput() CreateModeOutput
	ToCreateModeOutputWithContext(context.Context) CreateModeOutput
}

var createModePtrType = reflect.TypeOf((**CreateMode)(nil)).Elem()

type CreateModePtrInput interface {
	pulumi.Input

	ToCreateModePtrOutput() CreateModePtrOutput
	ToCreateModePtrOutputWithContext(context.Context) CreateModePtrOutput
}

type createModePtr string

func CreateModePtr(v string) CreateModePtrInput {
	return (*createModePtr)(&v)
}

func (*createModePtr) ElementType() reflect.Type {
	return createModePtrType
}

func (in *createModePtr) ToCreateModePtrOutput() CreateModePtrOutput {
	return pulumi.ToOutput(in).(CreateModePtrOutput)
}

func (in *createModePtr) ToCreateModePtrOutputWithContext(ctx context.Context) CreateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CreateModePtrOutput)
}

// SKU Family of the managed HSM Pool
type ManagedHsmSkuFamily string

const (
	ManagedHsmSkuFamilyB = ManagedHsmSkuFamily("B")
)

// SKU of the managed HSM Pool
type ManagedHsmSkuName string

const (
	ManagedHsmSkuName_Standard_B1 = ManagedHsmSkuName("Standard_B1")
	ManagedHsmSkuName_Custom_B32  = ManagedHsmSkuName("Custom_B32")
	ManagedHsmSkuName_Custom_B6   = ManagedHsmSkuName("Custom_B6")
)

func (ManagedHsmSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedHsmSkuName)(nil)).Elem()
}

func (e ManagedHsmSkuName) ToManagedHsmSkuNameOutput() ManagedHsmSkuNameOutput {
	return pulumi.ToOutput(e).(ManagedHsmSkuNameOutput)
}

func (e ManagedHsmSkuName) ToManagedHsmSkuNameOutputWithContext(ctx context.Context) ManagedHsmSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedHsmSkuNameOutput)
}

func (e ManagedHsmSkuName) ToManagedHsmSkuNamePtrOutput() ManagedHsmSkuNamePtrOutput {
	return e.ToManagedHsmSkuNamePtrOutputWithContext(context.Background())
}

func (e ManagedHsmSkuName) ToManagedHsmSkuNamePtrOutputWithContext(ctx context.Context) ManagedHsmSkuNamePtrOutput {
	return ManagedHsmSkuName(e).ToManagedHsmSkuNameOutputWithContext(ctx).ToManagedHsmSkuNamePtrOutputWithContext(ctx)
}

func (e ManagedHsmSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedHsmSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedHsmSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedHsmSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedHsmSkuNameOutput struct{ *pulumi.OutputState }

func (ManagedHsmSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedHsmSkuName)(nil)).Elem()
}

func (o ManagedHsmSkuNameOutput) ToManagedHsmSkuNameOutput() ManagedHsmSkuNameOutput {
	return o
}

func (o ManagedHsmSkuNameOutput) ToManagedHsmSkuNameOutputWithContext(ctx context.Context) ManagedHsmSkuNameOutput {
	return o
}

func (o ManagedHsmSkuNameOutput) ToManagedHsmSkuNamePtrOutput() ManagedHsmSkuNamePtrOutput {
	return o.ToManagedHsmSkuNamePtrOutputWithContext(context.Background())
}

func (o ManagedHsmSkuNameOutput) ToManagedHsmSkuNamePtrOutputWithContext(ctx context.Context) ManagedHsmSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedHsmSkuName) *ManagedHsmSkuName {
		return &v
	}).(ManagedHsmSkuNamePtrOutput)
}

func (o ManagedHsmSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedHsmSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedHsmSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedHsmSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedHsmSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedHsmSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedHsmSkuNamePtrOutput struct{ *pulumi.OutputState }

func (ManagedHsmSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHsmSkuName)(nil)).Elem()
}

func (o ManagedHsmSkuNamePtrOutput) ToManagedHsmSkuNamePtrOutput() ManagedHsmSkuNamePtrOutput {
	return o
}

func (o ManagedHsmSkuNamePtrOutput) ToManagedHsmSkuNamePtrOutputWithContext(ctx context.Context) ManagedHsmSkuNamePtrOutput {
	return o
}

func (o ManagedHsmSkuNamePtrOutput) Elem() ManagedHsmSkuNameOutput {
	return o.ApplyT(func(v *ManagedHsmSkuName) ManagedHsmSkuName {
		if v != nil {
			return *v
		}
		var ret ManagedHsmSkuName
		return ret
	}).(ManagedHsmSkuNameOutput)
}

func (o ManagedHsmSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedHsmSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedHsmSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedHsmSkuNameInput is an input type that accepts ManagedHsmSkuNameArgs and ManagedHsmSkuNameOutput values.
// You can construct a concrete instance of `ManagedHsmSkuNameInput` via:
//
//	ManagedHsmSkuNameArgs{...}
type ManagedHsmSkuNameInput interface {
	pulumi.Input

	ToManagedHsmSkuNameOutput() ManagedHsmSkuNameOutput
	ToManagedHsmSkuNameOutputWithContext(context.Context) ManagedHsmSkuNameOutput
}

var managedHsmSkuNamePtrType = reflect.TypeOf((**ManagedHsmSkuName)(nil)).Elem()

type ManagedHsmSkuNamePtrInput interface {
	pulumi.Input

	ToManagedHsmSkuNamePtrOutput() ManagedHsmSkuNamePtrOutput
	ToManagedHsmSkuNamePtrOutputWithContext(context.Context) ManagedHsmSkuNamePtrOutput
}

type managedHsmSkuNamePtr string

func ManagedHsmSkuNamePtr(v string) ManagedHsmSkuNamePtrInput {
	return (*managedHsmSkuNamePtr)(&v)
}

func (*managedHsmSkuNamePtr) ElementType() reflect.Type {
	return managedHsmSkuNamePtrType
}

func (in *managedHsmSkuNamePtr) ToManagedHsmSkuNamePtrOutput() ManagedHsmSkuNamePtrOutput {
	return pulumi.ToOutput(in).(ManagedHsmSkuNamePtrOutput)
}

func (in *managedHsmSkuNamePtr) ToManagedHsmSkuNamePtrOutputWithContext(ctx context.Context) ManagedHsmSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedHsmSkuNamePtrOutput)
}

// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
type NetworkRuleAction string

const (
	NetworkRuleActionAllow = NetworkRuleAction("Allow")
	NetworkRuleActionDeny  = NetworkRuleAction("Deny")
)

// Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
type NetworkRuleBypassOptions string

const (
	NetworkRuleBypassOptionsAzureServices = NetworkRuleBypassOptions("AzureServices")
	NetworkRuleBypassOptionsNone          = NetworkRuleBypassOptions("None")
)

// Indicates whether the connection has been approved, rejected or removed by the key vault owner.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending      = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved     = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected     = PrivateEndpointServiceConnectionStatus("Rejected")
	PrivateEndpointServiceConnectionStatusDisconnected = PrivateEndpointServiceConnectionStatus("Disconnected")
)

// Control permission to the managed HSM from public networks.
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func init() {
	pulumi.RegisterOutputType(CreateModeOutput{})
	pulumi.RegisterOutputType(CreateModePtrOutput{})
	pulumi.RegisterOutputType(ManagedHsmSkuNameOutput{})
	pulumi.RegisterOutputType(ManagedHsmSkuNamePtrOutput{})
}
