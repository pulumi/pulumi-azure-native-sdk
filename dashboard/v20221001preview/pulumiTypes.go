// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// Integrations for Azure Monitor Workspace.
type AzureMonitorWorkspaceIntegration struct {
	// The resource Id of the connected Azure Monitor Workspace.
	AzureMonitorWorkspaceResourceId *string `pulumi:"azureMonitorWorkspaceResourceId"`
}

// AzureMonitorWorkspaceIntegrationInput is an input type that accepts AzureMonitorWorkspaceIntegrationArgs and AzureMonitorWorkspaceIntegrationOutput values.
// You can construct a concrete instance of `AzureMonitorWorkspaceIntegrationInput` via:
//
//	AzureMonitorWorkspaceIntegrationArgs{...}
type AzureMonitorWorkspaceIntegrationInput interface {
	pulumi.Input

	ToAzureMonitorWorkspaceIntegrationOutput() AzureMonitorWorkspaceIntegrationOutput
	ToAzureMonitorWorkspaceIntegrationOutputWithContext(context.Context) AzureMonitorWorkspaceIntegrationOutput
}

// Integrations for Azure Monitor Workspace.
type AzureMonitorWorkspaceIntegrationArgs struct {
	// The resource Id of the connected Azure Monitor Workspace.
	AzureMonitorWorkspaceResourceId pulumi.StringPtrInput `pulumi:"azureMonitorWorkspaceResourceId"`
}

func (AzureMonitorWorkspaceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorWorkspaceIntegration)(nil)).Elem()
}

func (i AzureMonitorWorkspaceIntegrationArgs) ToAzureMonitorWorkspaceIntegrationOutput() AzureMonitorWorkspaceIntegrationOutput {
	return i.ToAzureMonitorWorkspaceIntegrationOutputWithContext(context.Background())
}

func (i AzureMonitorWorkspaceIntegrationArgs) ToAzureMonitorWorkspaceIntegrationOutputWithContext(ctx context.Context) AzureMonitorWorkspaceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorWorkspaceIntegrationOutput)
}

func (i AzureMonitorWorkspaceIntegrationArgs) ToOutput(ctx context.Context) pulumix.Output[AzureMonitorWorkspaceIntegration] {
	return pulumix.Output[AzureMonitorWorkspaceIntegration]{
		OutputState: i.ToAzureMonitorWorkspaceIntegrationOutputWithContext(ctx).OutputState,
	}
}

// AzureMonitorWorkspaceIntegrationArrayInput is an input type that accepts AzureMonitorWorkspaceIntegrationArray and AzureMonitorWorkspaceIntegrationArrayOutput values.
// You can construct a concrete instance of `AzureMonitorWorkspaceIntegrationArrayInput` via:
//
//	AzureMonitorWorkspaceIntegrationArray{ AzureMonitorWorkspaceIntegrationArgs{...} }
type AzureMonitorWorkspaceIntegrationArrayInput interface {
	pulumi.Input

	ToAzureMonitorWorkspaceIntegrationArrayOutput() AzureMonitorWorkspaceIntegrationArrayOutput
	ToAzureMonitorWorkspaceIntegrationArrayOutputWithContext(context.Context) AzureMonitorWorkspaceIntegrationArrayOutput
}

type AzureMonitorWorkspaceIntegrationArray []AzureMonitorWorkspaceIntegrationInput

func (AzureMonitorWorkspaceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMonitorWorkspaceIntegration)(nil)).Elem()
}

func (i AzureMonitorWorkspaceIntegrationArray) ToAzureMonitorWorkspaceIntegrationArrayOutput() AzureMonitorWorkspaceIntegrationArrayOutput {
	return i.ToAzureMonitorWorkspaceIntegrationArrayOutputWithContext(context.Background())
}

func (i AzureMonitorWorkspaceIntegrationArray) ToAzureMonitorWorkspaceIntegrationArrayOutputWithContext(ctx context.Context) AzureMonitorWorkspaceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorWorkspaceIntegrationArrayOutput)
}

func (i AzureMonitorWorkspaceIntegrationArray) ToOutput(ctx context.Context) pulumix.Output[[]AzureMonitorWorkspaceIntegration] {
	return pulumix.Output[[]AzureMonitorWorkspaceIntegration]{
		OutputState: i.ToAzureMonitorWorkspaceIntegrationArrayOutputWithContext(ctx).OutputState,
	}
}

// Integrations for Azure Monitor Workspace.
type AzureMonitorWorkspaceIntegrationOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorWorkspaceIntegration)(nil)).Elem()
}

func (o AzureMonitorWorkspaceIntegrationOutput) ToAzureMonitorWorkspaceIntegrationOutput() AzureMonitorWorkspaceIntegrationOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationOutput) ToAzureMonitorWorkspaceIntegrationOutputWithContext(ctx context.Context) AzureMonitorWorkspaceIntegrationOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationOutput) ToOutput(ctx context.Context) pulumix.Output[AzureMonitorWorkspaceIntegration] {
	return pulumix.Output[AzureMonitorWorkspaceIntegration]{
		OutputState: o.OutputState,
	}
}

// The resource Id of the connected Azure Monitor Workspace.
func (o AzureMonitorWorkspaceIntegrationOutput) AzureMonitorWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceIntegration) *string { return v.AzureMonitorWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type AzureMonitorWorkspaceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMonitorWorkspaceIntegration)(nil)).Elem()
}

func (o AzureMonitorWorkspaceIntegrationArrayOutput) ToAzureMonitorWorkspaceIntegrationArrayOutput() AzureMonitorWorkspaceIntegrationArrayOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationArrayOutput) ToAzureMonitorWorkspaceIntegrationArrayOutputWithContext(ctx context.Context) AzureMonitorWorkspaceIntegrationArrayOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AzureMonitorWorkspaceIntegration] {
	return pulumix.Output[[]AzureMonitorWorkspaceIntegration]{
		OutputState: o.OutputState,
	}
}

func (o AzureMonitorWorkspaceIntegrationArrayOutput) Index(i pulumi.IntInput) AzureMonitorWorkspaceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMonitorWorkspaceIntegration {
		return vs[0].([]AzureMonitorWorkspaceIntegration)[vs[1].(int)]
	}).(AzureMonitorWorkspaceIntegrationOutput)
}

// Integrations for Azure Monitor Workspace.
type AzureMonitorWorkspaceIntegrationResponse struct {
	// The resource Id of the connected Azure Monitor Workspace.
	AzureMonitorWorkspaceResourceId *string `pulumi:"azureMonitorWorkspaceResourceId"`
}

// Integrations for Azure Monitor Workspace.
type AzureMonitorWorkspaceIntegrationResponseOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceIntegrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorWorkspaceIntegrationResponse)(nil)).Elem()
}

func (o AzureMonitorWorkspaceIntegrationResponseOutput) ToAzureMonitorWorkspaceIntegrationResponseOutput() AzureMonitorWorkspaceIntegrationResponseOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationResponseOutput) ToAzureMonitorWorkspaceIntegrationResponseOutputWithContext(ctx context.Context) AzureMonitorWorkspaceIntegrationResponseOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AzureMonitorWorkspaceIntegrationResponse] {
	return pulumix.Output[AzureMonitorWorkspaceIntegrationResponse]{
		OutputState: o.OutputState,
	}
}

// The resource Id of the connected Azure Monitor Workspace.
func (o AzureMonitorWorkspaceIntegrationResponseOutput) AzureMonitorWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceIntegrationResponse) *string { return v.AzureMonitorWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type AzureMonitorWorkspaceIntegrationResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceIntegrationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMonitorWorkspaceIntegrationResponse)(nil)).Elem()
}

func (o AzureMonitorWorkspaceIntegrationResponseArrayOutput) ToAzureMonitorWorkspaceIntegrationResponseArrayOutput() AzureMonitorWorkspaceIntegrationResponseArrayOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationResponseArrayOutput) ToAzureMonitorWorkspaceIntegrationResponseArrayOutputWithContext(ctx context.Context) AzureMonitorWorkspaceIntegrationResponseArrayOutput {
	return o
}

func (o AzureMonitorWorkspaceIntegrationResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AzureMonitorWorkspaceIntegrationResponse] {
	return pulumix.Output[[]AzureMonitorWorkspaceIntegrationResponse]{
		OutputState: o.OutputState,
	}
}

func (o AzureMonitorWorkspaceIntegrationResponseArrayOutput) Index(i pulumi.IntInput) AzureMonitorWorkspaceIntegrationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMonitorWorkspaceIntegrationResponse {
		return vs[0].([]AzureMonitorWorkspaceIntegrationResponse)[vs[1].(int)]
	}).(AzureMonitorWorkspaceIntegrationResponseOutput)
}

// Enterprise settings of a Grafana instance
type EnterpriseConfigurations struct {
	// The AutoRenew setting of the Enterprise subscription
	MarketplaceAutoRenew *string `pulumi:"marketplaceAutoRenew"`
	// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
	MarketplacePlanId *string `pulumi:"marketplacePlanId"`
}

// EnterpriseConfigurationsInput is an input type that accepts EnterpriseConfigurationsArgs and EnterpriseConfigurationsOutput values.
// You can construct a concrete instance of `EnterpriseConfigurationsInput` via:
//
//	EnterpriseConfigurationsArgs{...}
type EnterpriseConfigurationsInput interface {
	pulumi.Input

	ToEnterpriseConfigurationsOutput() EnterpriseConfigurationsOutput
	ToEnterpriseConfigurationsOutputWithContext(context.Context) EnterpriseConfigurationsOutput
}

// Enterprise settings of a Grafana instance
type EnterpriseConfigurationsArgs struct {
	// The AutoRenew setting of the Enterprise subscription
	MarketplaceAutoRenew pulumi.StringPtrInput `pulumi:"marketplaceAutoRenew"`
	// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
	MarketplacePlanId pulumi.StringPtrInput `pulumi:"marketplacePlanId"`
}

func (EnterpriseConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseConfigurations)(nil)).Elem()
}

func (i EnterpriseConfigurationsArgs) ToEnterpriseConfigurationsOutput() EnterpriseConfigurationsOutput {
	return i.ToEnterpriseConfigurationsOutputWithContext(context.Background())
}

func (i EnterpriseConfigurationsArgs) ToEnterpriseConfigurationsOutputWithContext(ctx context.Context) EnterpriseConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseConfigurationsOutput)
}

func (i EnterpriseConfigurationsArgs) ToOutput(ctx context.Context) pulumix.Output[EnterpriseConfigurations] {
	return pulumix.Output[EnterpriseConfigurations]{
		OutputState: i.ToEnterpriseConfigurationsOutputWithContext(ctx).OutputState,
	}
}

func (i EnterpriseConfigurationsArgs) ToEnterpriseConfigurationsPtrOutput() EnterpriseConfigurationsPtrOutput {
	return i.ToEnterpriseConfigurationsPtrOutputWithContext(context.Background())
}

func (i EnterpriseConfigurationsArgs) ToEnterpriseConfigurationsPtrOutputWithContext(ctx context.Context) EnterpriseConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseConfigurationsOutput).ToEnterpriseConfigurationsPtrOutputWithContext(ctx)
}

// EnterpriseConfigurationsPtrInput is an input type that accepts EnterpriseConfigurationsArgs, EnterpriseConfigurationsPtr and EnterpriseConfigurationsPtrOutput values.
// You can construct a concrete instance of `EnterpriseConfigurationsPtrInput` via:
//
//	        EnterpriseConfigurationsArgs{...}
//
//	or:
//
//	        nil
type EnterpriseConfigurationsPtrInput interface {
	pulumi.Input

	ToEnterpriseConfigurationsPtrOutput() EnterpriseConfigurationsPtrOutput
	ToEnterpriseConfigurationsPtrOutputWithContext(context.Context) EnterpriseConfigurationsPtrOutput
}

type enterpriseConfigurationsPtrType EnterpriseConfigurationsArgs

func EnterpriseConfigurationsPtr(v *EnterpriseConfigurationsArgs) EnterpriseConfigurationsPtrInput {
	return (*enterpriseConfigurationsPtrType)(v)
}

func (*enterpriseConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseConfigurations)(nil)).Elem()
}

func (i *enterpriseConfigurationsPtrType) ToEnterpriseConfigurationsPtrOutput() EnterpriseConfigurationsPtrOutput {
	return i.ToEnterpriseConfigurationsPtrOutputWithContext(context.Background())
}

func (i *enterpriseConfigurationsPtrType) ToEnterpriseConfigurationsPtrOutputWithContext(ctx context.Context) EnterpriseConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseConfigurationsPtrOutput)
}

func (i *enterpriseConfigurationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*EnterpriseConfigurations] {
	return pulumix.Output[*EnterpriseConfigurations]{
		OutputState: i.ToEnterpriseConfigurationsPtrOutputWithContext(ctx).OutputState,
	}
}

// Enterprise settings of a Grafana instance
type EnterpriseConfigurationsOutput struct{ *pulumi.OutputState }

func (EnterpriseConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseConfigurations)(nil)).Elem()
}

func (o EnterpriseConfigurationsOutput) ToEnterpriseConfigurationsOutput() EnterpriseConfigurationsOutput {
	return o
}

func (o EnterpriseConfigurationsOutput) ToEnterpriseConfigurationsOutputWithContext(ctx context.Context) EnterpriseConfigurationsOutput {
	return o
}

func (o EnterpriseConfigurationsOutput) ToEnterpriseConfigurationsPtrOutput() EnterpriseConfigurationsPtrOutput {
	return o.ToEnterpriseConfigurationsPtrOutputWithContext(context.Background())
}

func (o EnterpriseConfigurationsOutput) ToEnterpriseConfigurationsPtrOutputWithContext(ctx context.Context) EnterpriseConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseConfigurations) *EnterpriseConfigurations {
		return &v
	}).(EnterpriseConfigurationsPtrOutput)
}

func (o EnterpriseConfigurationsOutput) ToOutput(ctx context.Context) pulumix.Output[EnterpriseConfigurations] {
	return pulumix.Output[EnterpriseConfigurations]{
		OutputState: o.OutputState,
	}
}

// The AutoRenew setting of the Enterprise subscription
func (o EnterpriseConfigurationsOutput) MarketplaceAutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseConfigurations) *string { return v.MarketplaceAutoRenew }).(pulumi.StringPtrOutput)
}

// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
func (o EnterpriseConfigurationsOutput) MarketplacePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseConfigurations) *string { return v.MarketplacePlanId }).(pulumi.StringPtrOutput)
}

type EnterpriseConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (EnterpriseConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseConfigurations)(nil)).Elem()
}

func (o EnterpriseConfigurationsPtrOutput) ToEnterpriseConfigurationsPtrOutput() EnterpriseConfigurationsPtrOutput {
	return o
}

func (o EnterpriseConfigurationsPtrOutput) ToEnterpriseConfigurationsPtrOutputWithContext(ctx context.Context) EnterpriseConfigurationsPtrOutput {
	return o
}

func (o EnterpriseConfigurationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnterpriseConfigurations] {
	return pulumix.Output[*EnterpriseConfigurations]{
		OutputState: o.OutputState,
	}
}

func (o EnterpriseConfigurationsPtrOutput) Elem() EnterpriseConfigurationsOutput {
	return o.ApplyT(func(v *EnterpriseConfigurations) EnterpriseConfigurations {
		if v != nil {
			return *v
		}
		var ret EnterpriseConfigurations
		return ret
	}).(EnterpriseConfigurationsOutput)
}

// The AutoRenew setting of the Enterprise subscription
func (o EnterpriseConfigurationsPtrOutput) MarketplaceAutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseConfigurations) *string {
		if v == nil {
			return nil
		}
		return v.MarketplaceAutoRenew
	}).(pulumi.StringPtrOutput)
}

// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
func (o EnterpriseConfigurationsPtrOutput) MarketplacePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseConfigurations) *string {
		if v == nil {
			return nil
		}
		return v.MarketplacePlanId
	}).(pulumi.StringPtrOutput)
}

// Enterprise settings of a Grafana instance
type EnterpriseConfigurationsResponse struct {
	// The AutoRenew setting of the Enterprise subscription
	MarketplaceAutoRenew *string `pulumi:"marketplaceAutoRenew"`
	// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
	MarketplacePlanId *string `pulumi:"marketplacePlanId"`
}

// Enterprise settings of a Grafana instance
type EnterpriseConfigurationsResponseOutput struct{ *pulumi.OutputState }

func (EnterpriseConfigurationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseConfigurationsResponse)(nil)).Elem()
}

func (o EnterpriseConfigurationsResponseOutput) ToEnterpriseConfigurationsResponseOutput() EnterpriseConfigurationsResponseOutput {
	return o
}

func (o EnterpriseConfigurationsResponseOutput) ToEnterpriseConfigurationsResponseOutputWithContext(ctx context.Context) EnterpriseConfigurationsResponseOutput {
	return o
}

func (o EnterpriseConfigurationsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[EnterpriseConfigurationsResponse] {
	return pulumix.Output[EnterpriseConfigurationsResponse]{
		OutputState: o.OutputState,
	}
}

// The AutoRenew setting of the Enterprise subscription
func (o EnterpriseConfigurationsResponseOutput) MarketplaceAutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseConfigurationsResponse) *string { return v.MarketplaceAutoRenew }).(pulumi.StringPtrOutput)
}

// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
func (o EnterpriseConfigurationsResponseOutput) MarketplacePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseConfigurationsResponse) *string { return v.MarketplacePlanId }).(pulumi.StringPtrOutput)
}

type EnterpriseConfigurationsResponsePtrOutput struct{ *pulumi.OutputState }

func (EnterpriseConfigurationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseConfigurationsResponse)(nil)).Elem()
}

func (o EnterpriseConfigurationsResponsePtrOutput) ToEnterpriseConfigurationsResponsePtrOutput() EnterpriseConfigurationsResponsePtrOutput {
	return o
}

func (o EnterpriseConfigurationsResponsePtrOutput) ToEnterpriseConfigurationsResponsePtrOutputWithContext(ctx context.Context) EnterpriseConfigurationsResponsePtrOutput {
	return o
}

func (o EnterpriseConfigurationsResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnterpriseConfigurationsResponse] {
	return pulumix.Output[*EnterpriseConfigurationsResponse]{
		OutputState: o.OutputState,
	}
}

func (o EnterpriseConfigurationsResponsePtrOutput) Elem() EnterpriseConfigurationsResponseOutput {
	return o.ApplyT(func(v *EnterpriseConfigurationsResponse) EnterpriseConfigurationsResponse {
		if v != nil {
			return *v
		}
		var ret EnterpriseConfigurationsResponse
		return ret
	}).(EnterpriseConfigurationsResponseOutput)
}

// The AutoRenew setting of the Enterprise subscription
func (o EnterpriseConfigurationsResponsePtrOutput) MarketplaceAutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseConfigurationsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MarketplaceAutoRenew
	}).(pulumi.StringPtrOutput)
}

// The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
func (o EnterpriseConfigurationsResponsePtrOutput) MarketplacePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseConfigurationsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MarketplacePlanId
	}).(pulumi.StringPtrOutput)
}

// Server configurations of a Grafana instance
type GrafanaConfigurations struct {
	// Email server settings.
	// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
	Smtp *Smtp `pulumi:"smtp"`
}

// Defaults sets the appropriate defaults for GrafanaConfigurations
func (val *GrafanaConfigurations) Defaults() *GrafanaConfigurations {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Smtp = tmp.Smtp.Defaults()

	return &tmp
}

// GrafanaConfigurationsInput is an input type that accepts GrafanaConfigurationsArgs and GrafanaConfigurationsOutput values.
// You can construct a concrete instance of `GrafanaConfigurationsInput` via:
//
//	GrafanaConfigurationsArgs{...}
type GrafanaConfigurationsInput interface {
	pulumi.Input

	ToGrafanaConfigurationsOutput() GrafanaConfigurationsOutput
	ToGrafanaConfigurationsOutputWithContext(context.Context) GrafanaConfigurationsOutput
}

// Server configurations of a Grafana instance
type GrafanaConfigurationsArgs struct {
	// Email server settings.
	// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
	Smtp SmtpPtrInput `pulumi:"smtp"`
}

// Defaults sets the appropriate defaults for GrafanaConfigurationsArgs
func (val *GrafanaConfigurationsArgs) Defaults() *GrafanaConfigurationsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (GrafanaConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaConfigurations)(nil)).Elem()
}

func (i GrafanaConfigurationsArgs) ToGrafanaConfigurationsOutput() GrafanaConfigurationsOutput {
	return i.ToGrafanaConfigurationsOutputWithContext(context.Background())
}

func (i GrafanaConfigurationsArgs) ToGrafanaConfigurationsOutputWithContext(ctx context.Context) GrafanaConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaConfigurationsOutput)
}

func (i GrafanaConfigurationsArgs) ToOutput(ctx context.Context) pulumix.Output[GrafanaConfigurations] {
	return pulumix.Output[GrafanaConfigurations]{
		OutputState: i.ToGrafanaConfigurationsOutputWithContext(ctx).OutputState,
	}
}

func (i GrafanaConfigurationsArgs) ToGrafanaConfigurationsPtrOutput() GrafanaConfigurationsPtrOutput {
	return i.ToGrafanaConfigurationsPtrOutputWithContext(context.Background())
}

func (i GrafanaConfigurationsArgs) ToGrafanaConfigurationsPtrOutputWithContext(ctx context.Context) GrafanaConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaConfigurationsOutput).ToGrafanaConfigurationsPtrOutputWithContext(ctx)
}

// GrafanaConfigurationsPtrInput is an input type that accepts GrafanaConfigurationsArgs, GrafanaConfigurationsPtr and GrafanaConfigurationsPtrOutput values.
// You can construct a concrete instance of `GrafanaConfigurationsPtrInput` via:
//
//	        GrafanaConfigurationsArgs{...}
//
//	or:
//
//	        nil
type GrafanaConfigurationsPtrInput interface {
	pulumi.Input

	ToGrafanaConfigurationsPtrOutput() GrafanaConfigurationsPtrOutput
	ToGrafanaConfigurationsPtrOutputWithContext(context.Context) GrafanaConfigurationsPtrOutput
}

type grafanaConfigurationsPtrType GrafanaConfigurationsArgs

func GrafanaConfigurationsPtr(v *GrafanaConfigurationsArgs) GrafanaConfigurationsPtrInput {
	return (*grafanaConfigurationsPtrType)(v)
}

func (*grafanaConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaConfigurations)(nil)).Elem()
}

func (i *grafanaConfigurationsPtrType) ToGrafanaConfigurationsPtrOutput() GrafanaConfigurationsPtrOutput {
	return i.ToGrafanaConfigurationsPtrOutputWithContext(context.Background())
}

func (i *grafanaConfigurationsPtrType) ToGrafanaConfigurationsPtrOutputWithContext(ctx context.Context) GrafanaConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaConfigurationsPtrOutput)
}

func (i *grafanaConfigurationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GrafanaConfigurations] {
	return pulumix.Output[*GrafanaConfigurations]{
		OutputState: i.ToGrafanaConfigurationsPtrOutputWithContext(ctx).OutputState,
	}
}

// Server configurations of a Grafana instance
type GrafanaConfigurationsOutput struct{ *pulumi.OutputState }

func (GrafanaConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaConfigurations)(nil)).Elem()
}

func (o GrafanaConfigurationsOutput) ToGrafanaConfigurationsOutput() GrafanaConfigurationsOutput {
	return o
}

func (o GrafanaConfigurationsOutput) ToGrafanaConfigurationsOutputWithContext(ctx context.Context) GrafanaConfigurationsOutput {
	return o
}

func (o GrafanaConfigurationsOutput) ToGrafanaConfigurationsPtrOutput() GrafanaConfigurationsPtrOutput {
	return o.ToGrafanaConfigurationsPtrOutputWithContext(context.Background())
}

func (o GrafanaConfigurationsOutput) ToGrafanaConfigurationsPtrOutputWithContext(ctx context.Context) GrafanaConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrafanaConfigurations) *GrafanaConfigurations {
		return &v
	}).(GrafanaConfigurationsPtrOutput)
}

func (o GrafanaConfigurationsOutput) ToOutput(ctx context.Context) pulumix.Output[GrafanaConfigurations] {
	return pulumix.Output[GrafanaConfigurations]{
		OutputState: o.OutputState,
	}
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
func (o GrafanaConfigurationsOutput) Smtp() SmtpPtrOutput {
	return o.ApplyT(func(v GrafanaConfigurations) *Smtp { return v.Smtp }).(SmtpPtrOutput)
}

type GrafanaConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (GrafanaConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaConfigurations)(nil)).Elem()
}

func (o GrafanaConfigurationsPtrOutput) ToGrafanaConfigurationsPtrOutput() GrafanaConfigurationsPtrOutput {
	return o
}

func (o GrafanaConfigurationsPtrOutput) ToGrafanaConfigurationsPtrOutputWithContext(ctx context.Context) GrafanaConfigurationsPtrOutput {
	return o
}

func (o GrafanaConfigurationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GrafanaConfigurations] {
	return pulumix.Output[*GrafanaConfigurations]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaConfigurationsPtrOutput) Elem() GrafanaConfigurationsOutput {
	return o.ApplyT(func(v *GrafanaConfigurations) GrafanaConfigurations {
		if v != nil {
			return *v
		}
		var ret GrafanaConfigurations
		return ret
	}).(GrafanaConfigurationsOutput)
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
func (o GrafanaConfigurationsPtrOutput) Smtp() SmtpPtrOutput {
	return o.ApplyT(func(v *GrafanaConfigurations) *Smtp {
		if v == nil {
			return nil
		}
		return v.Smtp
	}).(SmtpPtrOutput)
}

// Server configurations of a Grafana instance
type GrafanaConfigurationsResponse struct {
	// Email server settings.
	// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
	Smtp *SmtpResponse `pulumi:"smtp"`
}

// Defaults sets the appropriate defaults for GrafanaConfigurationsResponse
func (val *GrafanaConfigurationsResponse) Defaults() *GrafanaConfigurationsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Smtp = tmp.Smtp.Defaults()

	return &tmp
}

// Server configurations of a Grafana instance
type GrafanaConfigurationsResponseOutput struct{ *pulumi.OutputState }

func (GrafanaConfigurationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaConfigurationsResponse)(nil)).Elem()
}

func (o GrafanaConfigurationsResponseOutput) ToGrafanaConfigurationsResponseOutput() GrafanaConfigurationsResponseOutput {
	return o
}

func (o GrafanaConfigurationsResponseOutput) ToGrafanaConfigurationsResponseOutputWithContext(ctx context.Context) GrafanaConfigurationsResponseOutput {
	return o
}

func (o GrafanaConfigurationsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[GrafanaConfigurationsResponse] {
	return pulumix.Output[GrafanaConfigurationsResponse]{
		OutputState: o.OutputState,
	}
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
func (o GrafanaConfigurationsResponseOutput) Smtp() SmtpResponsePtrOutput {
	return o.ApplyT(func(v GrafanaConfigurationsResponse) *SmtpResponse { return v.Smtp }).(SmtpResponsePtrOutput)
}

type GrafanaConfigurationsResponsePtrOutput struct{ *pulumi.OutputState }

func (GrafanaConfigurationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaConfigurationsResponse)(nil)).Elem()
}

func (o GrafanaConfigurationsResponsePtrOutput) ToGrafanaConfigurationsResponsePtrOutput() GrafanaConfigurationsResponsePtrOutput {
	return o
}

func (o GrafanaConfigurationsResponsePtrOutput) ToGrafanaConfigurationsResponsePtrOutputWithContext(ctx context.Context) GrafanaConfigurationsResponsePtrOutput {
	return o
}

func (o GrafanaConfigurationsResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GrafanaConfigurationsResponse] {
	return pulumix.Output[*GrafanaConfigurationsResponse]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaConfigurationsResponsePtrOutput) Elem() GrafanaConfigurationsResponseOutput {
	return o.ApplyT(func(v *GrafanaConfigurationsResponse) GrafanaConfigurationsResponse {
		if v != nil {
			return *v
		}
		var ret GrafanaConfigurationsResponse
		return ret
	}).(GrafanaConfigurationsResponseOutput)
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
func (o GrafanaConfigurationsResponsePtrOutput) Smtp() SmtpResponsePtrOutput {
	return o.ApplyT(func(v *GrafanaConfigurationsResponse) *SmtpResponse {
		if v == nil {
			return nil
		}
		return v.Smtp
	}).(SmtpResponsePtrOutput)
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
type GrafanaIntegrations struct {
	AzureMonitorWorkspaceIntegrations []AzureMonitorWorkspaceIntegration `pulumi:"azureMonitorWorkspaceIntegrations"`
}

// GrafanaIntegrationsInput is an input type that accepts GrafanaIntegrationsArgs and GrafanaIntegrationsOutput values.
// You can construct a concrete instance of `GrafanaIntegrationsInput` via:
//
//	GrafanaIntegrationsArgs{...}
type GrafanaIntegrationsInput interface {
	pulumi.Input

	ToGrafanaIntegrationsOutput() GrafanaIntegrationsOutput
	ToGrafanaIntegrationsOutputWithContext(context.Context) GrafanaIntegrationsOutput
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
type GrafanaIntegrationsArgs struct {
	AzureMonitorWorkspaceIntegrations AzureMonitorWorkspaceIntegrationArrayInput `pulumi:"azureMonitorWorkspaceIntegrations"`
}

func (GrafanaIntegrationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaIntegrations)(nil)).Elem()
}

func (i GrafanaIntegrationsArgs) ToGrafanaIntegrationsOutput() GrafanaIntegrationsOutput {
	return i.ToGrafanaIntegrationsOutputWithContext(context.Background())
}

func (i GrafanaIntegrationsArgs) ToGrafanaIntegrationsOutputWithContext(ctx context.Context) GrafanaIntegrationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaIntegrationsOutput)
}

func (i GrafanaIntegrationsArgs) ToOutput(ctx context.Context) pulumix.Output[GrafanaIntegrations] {
	return pulumix.Output[GrafanaIntegrations]{
		OutputState: i.ToGrafanaIntegrationsOutputWithContext(ctx).OutputState,
	}
}

func (i GrafanaIntegrationsArgs) ToGrafanaIntegrationsPtrOutput() GrafanaIntegrationsPtrOutput {
	return i.ToGrafanaIntegrationsPtrOutputWithContext(context.Background())
}

func (i GrafanaIntegrationsArgs) ToGrafanaIntegrationsPtrOutputWithContext(ctx context.Context) GrafanaIntegrationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaIntegrationsOutput).ToGrafanaIntegrationsPtrOutputWithContext(ctx)
}

// GrafanaIntegrationsPtrInput is an input type that accepts GrafanaIntegrationsArgs, GrafanaIntegrationsPtr and GrafanaIntegrationsPtrOutput values.
// You can construct a concrete instance of `GrafanaIntegrationsPtrInput` via:
//
//	        GrafanaIntegrationsArgs{...}
//
//	or:
//
//	        nil
type GrafanaIntegrationsPtrInput interface {
	pulumi.Input

	ToGrafanaIntegrationsPtrOutput() GrafanaIntegrationsPtrOutput
	ToGrafanaIntegrationsPtrOutputWithContext(context.Context) GrafanaIntegrationsPtrOutput
}

type grafanaIntegrationsPtrType GrafanaIntegrationsArgs

func GrafanaIntegrationsPtr(v *GrafanaIntegrationsArgs) GrafanaIntegrationsPtrInput {
	return (*grafanaIntegrationsPtrType)(v)
}

func (*grafanaIntegrationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaIntegrations)(nil)).Elem()
}

func (i *grafanaIntegrationsPtrType) ToGrafanaIntegrationsPtrOutput() GrafanaIntegrationsPtrOutput {
	return i.ToGrafanaIntegrationsPtrOutputWithContext(context.Background())
}

func (i *grafanaIntegrationsPtrType) ToGrafanaIntegrationsPtrOutputWithContext(ctx context.Context) GrafanaIntegrationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaIntegrationsPtrOutput)
}

func (i *grafanaIntegrationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GrafanaIntegrations] {
	return pulumix.Output[*GrafanaIntegrations]{
		OutputState: i.ToGrafanaIntegrationsPtrOutputWithContext(ctx).OutputState,
	}
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
type GrafanaIntegrationsOutput struct{ *pulumi.OutputState }

func (GrafanaIntegrationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaIntegrations)(nil)).Elem()
}

func (o GrafanaIntegrationsOutput) ToGrafanaIntegrationsOutput() GrafanaIntegrationsOutput {
	return o
}

func (o GrafanaIntegrationsOutput) ToGrafanaIntegrationsOutputWithContext(ctx context.Context) GrafanaIntegrationsOutput {
	return o
}

func (o GrafanaIntegrationsOutput) ToGrafanaIntegrationsPtrOutput() GrafanaIntegrationsPtrOutput {
	return o.ToGrafanaIntegrationsPtrOutputWithContext(context.Background())
}

func (o GrafanaIntegrationsOutput) ToGrafanaIntegrationsPtrOutputWithContext(ctx context.Context) GrafanaIntegrationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrafanaIntegrations) *GrafanaIntegrations {
		return &v
	}).(GrafanaIntegrationsPtrOutput)
}

func (o GrafanaIntegrationsOutput) ToOutput(ctx context.Context) pulumix.Output[GrafanaIntegrations] {
	return pulumix.Output[GrafanaIntegrations]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaIntegrationsOutput) AzureMonitorWorkspaceIntegrations() AzureMonitorWorkspaceIntegrationArrayOutput {
	return o.ApplyT(func(v GrafanaIntegrations) []AzureMonitorWorkspaceIntegration {
		return v.AzureMonitorWorkspaceIntegrations
	}).(AzureMonitorWorkspaceIntegrationArrayOutput)
}

type GrafanaIntegrationsPtrOutput struct{ *pulumi.OutputState }

func (GrafanaIntegrationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaIntegrations)(nil)).Elem()
}

func (o GrafanaIntegrationsPtrOutput) ToGrafanaIntegrationsPtrOutput() GrafanaIntegrationsPtrOutput {
	return o
}

func (o GrafanaIntegrationsPtrOutput) ToGrafanaIntegrationsPtrOutputWithContext(ctx context.Context) GrafanaIntegrationsPtrOutput {
	return o
}

func (o GrafanaIntegrationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GrafanaIntegrations] {
	return pulumix.Output[*GrafanaIntegrations]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaIntegrationsPtrOutput) Elem() GrafanaIntegrationsOutput {
	return o.ApplyT(func(v *GrafanaIntegrations) GrafanaIntegrations {
		if v != nil {
			return *v
		}
		var ret GrafanaIntegrations
		return ret
	}).(GrafanaIntegrationsOutput)
}

func (o GrafanaIntegrationsPtrOutput) AzureMonitorWorkspaceIntegrations() AzureMonitorWorkspaceIntegrationArrayOutput {
	return o.ApplyT(func(v *GrafanaIntegrations) []AzureMonitorWorkspaceIntegration {
		if v == nil {
			return nil
		}
		return v.AzureMonitorWorkspaceIntegrations
	}).(AzureMonitorWorkspaceIntegrationArrayOutput)
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
type GrafanaIntegrationsResponse struct {
	AzureMonitorWorkspaceIntegrations []AzureMonitorWorkspaceIntegrationResponse `pulumi:"azureMonitorWorkspaceIntegrations"`
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
type GrafanaIntegrationsResponseOutput struct{ *pulumi.OutputState }

func (GrafanaIntegrationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaIntegrationsResponse)(nil)).Elem()
}

func (o GrafanaIntegrationsResponseOutput) ToGrafanaIntegrationsResponseOutput() GrafanaIntegrationsResponseOutput {
	return o
}

func (o GrafanaIntegrationsResponseOutput) ToGrafanaIntegrationsResponseOutputWithContext(ctx context.Context) GrafanaIntegrationsResponseOutput {
	return o
}

func (o GrafanaIntegrationsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[GrafanaIntegrationsResponse] {
	return pulumix.Output[GrafanaIntegrationsResponse]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaIntegrationsResponseOutput) AzureMonitorWorkspaceIntegrations() AzureMonitorWorkspaceIntegrationResponseArrayOutput {
	return o.ApplyT(func(v GrafanaIntegrationsResponse) []AzureMonitorWorkspaceIntegrationResponse {
		return v.AzureMonitorWorkspaceIntegrations
	}).(AzureMonitorWorkspaceIntegrationResponseArrayOutput)
}

type GrafanaIntegrationsResponsePtrOutput struct{ *pulumi.OutputState }

func (GrafanaIntegrationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaIntegrationsResponse)(nil)).Elem()
}

func (o GrafanaIntegrationsResponsePtrOutput) ToGrafanaIntegrationsResponsePtrOutput() GrafanaIntegrationsResponsePtrOutput {
	return o
}

func (o GrafanaIntegrationsResponsePtrOutput) ToGrafanaIntegrationsResponsePtrOutputWithContext(ctx context.Context) GrafanaIntegrationsResponsePtrOutput {
	return o
}

func (o GrafanaIntegrationsResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GrafanaIntegrationsResponse] {
	return pulumix.Output[*GrafanaIntegrationsResponse]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaIntegrationsResponsePtrOutput) Elem() GrafanaIntegrationsResponseOutput {
	return o.ApplyT(func(v *GrafanaIntegrationsResponse) GrafanaIntegrationsResponse {
		if v != nil {
			return *v
		}
		var ret GrafanaIntegrationsResponse
		return ret
	}).(GrafanaIntegrationsResponseOutput)
}

func (o GrafanaIntegrationsResponsePtrOutput) AzureMonitorWorkspaceIntegrations() AzureMonitorWorkspaceIntegrationResponseArrayOutput {
	return o.ApplyT(func(v *GrafanaIntegrationsResponse) []AzureMonitorWorkspaceIntegrationResponse {
		if v == nil {
			return nil
		}
		return v.AzureMonitorWorkspaceIntegrations
	}).(AzureMonitorWorkspaceIntegrationResponseArrayOutput)
}

// Plugin of Grafana
type GrafanaPluginResponse struct {
	// Grafana plugin id
	PluginId string `pulumi:"pluginId"`
}

// Plugin of Grafana
type GrafanaPluginResponseOutput struct{ *pulumi.OutputState }

func (GrafanaPluginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaPluginResponse)(nil)).Elem()
}

func (o GrafanaPluginResponseOutput) ToGrafanaPluginResponseOutput() GrafanaPluginResponseOutput {
	return o
}

func (o GrafanaPluginResponseOutput) ToGrafanaPluginResponseOutputWithContext(ctx context.Context) GrafanaPluginResponseOutput {
	return o
}

func (o GrafanaPluginResponseOutput) ToOutput(ctx context.Context) pulumix.Output[GrafanaPluginResponse] {
	return pulumix.Output[GrafanaPluginResponse]{
		OutputState: o.OutputState,
	}
}

// Grafana plugin id
func (o GrafanaPluginResponseOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v GrafanaPluginResponse) string { return v.PluginId }).(pulumi.StringOutput)
}

type GrafanaPluginResponseMapOutput struct{ *pulumi.OutputState }

func (GrafanaPluginResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GrafanaPluginResponse)(nil)).Elem()
}

func (o GrafanaPluginResponseMapOutput) ToGrafanaPluginResponseMapOutput() GrafanaPluginResponseMapOutput {
	return o
}

func (o GrafanaPluginResponseMapOutput) ToGrafanaPluginResponseMapOutputWithContext(ctx context.Context) GrafanaPluginResponseMapOutput {
	return o
}

func (o GrafanaPluginResponseMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]GrafanaPluginResponse] {
	return pulumix.Output[map[string]GrafanaPluginResponse]{
		OutputState: o.OutputState,
	}
}

func (o GrafanaPluginResponseMapOutput) MapIndex(k pulumi.StringInput) GrafanaPluginResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GrafanaPluginResponse {
		return vs[0].(map[string]GrafanaPluginResponse)[vs[1].(string)]
	}).(GrafanaPluginResponseOutput)
}

// Properties specific to the grafana resource.
type ManagedGrafanaProperties struct {
	// The api key setting of the Grafana instance.
	ApiKey *string `pulumi:"apiKey"`
	// Scope for dns deterministic name hash calculation.
	AutoGeneratedDomainNameLabelScope *string `pulumi:"autoGeneratedDomainNameLabelScope"`
	// Whether a Grafana instance uses deterministic outbound IPs.
	DeterministicOutboundIP *string `pulumi:"deterministicOutboundIP"`
	// Enterprise settings of a Grafana instance
	EnterpriseConfigurations *EnterpriseConfigurations `pulumi:"enterpriseConfigurations"`
	// Server configurations of a Grafana instance
	GrafanaConfigurations *GrafanaConfigurations `pulumi:"grafanaConfigurations"`
	// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
	GrafanaIntegrations *GrafanaIntegrations `pulumi:"grafanaIntegrations"`
	// The major Grafana software version to target.
	GrafanaMajorVersion *string `pulumi:"grafanaMajorVersion"`
	// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
	GrafanaPlugins []string `pulumi:"grafanaPlugins"`
	// Indicate the state for enable or disable traffic over the public interface.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The zone redundancy setting of the Grafana instance.
	ZoneRedundancy *string `pulumi:"zoneRedundancy"`
}

// Defaults sets the appropriate defaults for ManagedGrafanaProperties
func (val *ManagedGrafanaProperties) Defaults() *ManagedGrafanaProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.GrafanaConfigurations = tmp.GrafanaConfigurations.Defaults()

	return &tmp
}

// ManagedGrafanaPropertiesInput is an input type that accepts ManagedGrafanaPropertiesArgs and ManagedGrafanaPropertiesOutput values.
// You can construct a concrete instance of `ManagedGrafanaPropertiesInput` via:
//
//	ManagedGrafanaPropertiesArgs{...}
type ManagedGrafanaPropertiesInput interface {
	pulumi.Input

	ToManagedGrafanaPropertiesOutput() ManagedGrafanaPropertiesOutput
	ToManagedGrafanaPropertiesOutputWithContext(context.Context) ManagedGrafanaPropertiesOutput
}

// Properties specific to the grafana resource.
type ManagedGrafanaPropertiesArgs struct {
	// The api key setting of the Grafana instance.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Scope for dns deterministic name hash calculation.
	AutoGeneratedDomainNameLabelScope pulumi.StringPtrInput `pulumi:"autoGeneratedDomainNameLabelScope"`
	// Whether a Grafana instance uses deterministic outbound IPs.
	DeterministicOutboundIP pulumi.StringPtrInput `pulumi:"deterministicOutboundIP"`
	// Enterprise settings of a Grafana instance
	EnterpriseConfigurations EnterpriseConfigurationsPtrInput `pulumi:"enterpriseConfigurations"`
	// Server configurations of a Grafana instance
	GrafanaConfigurations GrafanaConfigurationsPtrInput `pulumi:"grafanaConfigurations"`
	// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
	GrafanaIntegrations GrafanaIntegrationsPtrInput `pulumi:"grafanaIntegrations"`
	// The major Grafana software version to target.
	GrafanaMajorVersion pulumi.StringPtrInput `pulumi:"grafanaMajorVersion"`
	// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
	GrafanaPlugins pulumi.StringArrayInput `pulumi:"grafanaPlugins"`
	// Indicate the state for enable or disable traffic over the public interface.
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// The zone redundancy setting of the Grafana instance.
	ZoneRedundancy pulumi.StringPtrInput `pulumi:"zoneRedundancy"`
}

// Defaults sets the appropriate defaults for ManagedGrafanaPropertiesArgs
func (val *ManagedGrafanaPropertiesArgs) Defaults() *ManagedGrafanaPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ManagedGrafanaPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedGrafanaProperties)(nil)).Elem()
}

func (i ManagedGrafanaPropertiesArgs) ToManagedGrafanaPropertiesOutput() ManagedGrafanaPropertiesOutput {
	return i.ToManagedGrafanaPropertiesOutputWithContext(context.Background())
}

func (i ManagedGrafanaPropertiesArgs) ToManagedGrafanaPropertiesOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGrafanaPropertiesOutput)
}

func (i ManagedGrafanaPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedGrafanaProperties] {
	return pulumix.Output[ManagedGrafanaProperties]{
		OutputState: i.ToManagedGrafanaPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedGrafanaPropertiesArgs) ToManagedGrafanaPropertiesPtrOutput() ManagedGrafanaPropertiesPtrOutput {
	return i.ToManagedGrafanaPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedGrafanaPropertiesArgs) ToManagedGrafanaPropertiesPtrOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGrafanaPropertiesOutput).ToManagedGrafanaPropertiesPtrOutputWithContext(ctx)
}

// ManagedGrafanaPropertiesPtrInput is an input type that accepts ManagedGrafanaPropertiesArgs, ManagedGrafanaPropertiesPtr and ManagedGrafanaPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedGrafanaPropertiesPtrInput` via:
//
//	        ManagedGrafanaPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedGrafanaPropertiesPtrInput interface {
	pulumi.Input

	ToManagedGrafanaPropertiesPtrOutput() ManagedGrafanaPropertiesPtrOutput
	ToManagedGrafanaPropertiesPtrOutputWithContext(context.Context) ManagedGrafanaPropertiesPtrOutput
}

type managedGrafanaPropertiesPtrType ManagedGrafanaPropertiesArgs

func ManagedGrafanaPropertiesPtr(v *ManagedGrafanaPropertiesArgs) ManagedGrafanaPropertiesPtrInput {
	return (*managedGrafanaPropertiesPtrType)(v)
}

func (*managedGrafanaPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedGrafanaProperties)(nil)).Elem()
}

func (i *managedGrafanaPropertiesPtrType) ToManagedGrafanaPropertiesPtrOutput() ManagedGrafanaPropertiesPtrOutput {
	return i.ToManagedGrafanaPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedGrafanaPropertiesPtrType) ToManagedGrafanaPropertiesPtrOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGrafanaPropertiesPtrOutput)
}

func (i *managedGrafanaPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedGrafanaProperties] {
	return pulumix.Output[*ManagedGrafanaProperties]{
		OutputState: i.ToManagedGrafanaPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Properties specific to the grafana resource.
type ManagedGrafanaPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedGrafanaPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedGrafanaProperties)(nil)).Elem()
}

func (o ManagedGrafanaPropertiesOutput) ToManagedGrafanaPropertiesOutput() ManagedGrafanaPropertiesOutput {
	return o
}

func (o ManagedGrafanaPropertiesOutput) ToManagedGrafanaPropertiesOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesOutput {
	return o
}

func (o ManagedGrafanaPropertiesOutput) ToManagedGrafanaPropertiesPtrOutput() ManagedGrafanaPropertiesPtrOutput {
	return o.ToManagedGrafanaPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedGrafanaPropertiesOutput) ToManagedGrafanaPropertiesPtrOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedGrafanaProperties) *ManagedGrafanaProperties {
		return &v
	}).(ManagedGrafanaPropertiesPtrOutput)
}

func (o ManagedGrafanaPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedGrafanaProperties] {
	return pulumix.Output[ManagedGrafanaProperties]{
		OutputState: o.OutputState,
	}
}

// The api key setting of the Grafana instance.
func (o ManagedGrafanaPropertiesOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Scope for dns deterministic name hash calculation.
func (o ManagedGrafanaPropertiesOutput) AutoGeneratedDomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *string { return v.AutoGeneratedDomainNameLabelScope }).(pulumi.StringPtrOutput)
}

// Whether a Grafana instance uses deterministic outbound IPs.
func (o ManagedGrafanaPropertiesOutput) DeterministicOutboundIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *string { return v.DeterministicOutboundIP }).(pulumi.StringPtrOutput)
}

// Enterprise settings of a Grafana instance
func (o ManagedGrafanaPropertiesOutput) EnterpriseConfigurations() EnterpriseConfigurationsPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *EnterpriseConfigurations { return v.EnterpriseConfigurations }).(EnterpriseConfigurationsPtrOutput)
}

// Server configurations of a Grafana instance
func (o ManagedGrafanaPropertiesOutput) GrafanaConfigurations() GrafanaConfigurationsPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *GrafanaConfigurations { return v.GrafanaConfigurations }).(GrafanaConfigurationsPtrOutput)
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
func (o ManagedGrafanaPropertiesOutput) GrafanaIntegrations() GrafanaIntegrationsPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *GrafanaIntegrations { return v.GrafanaIntegrations }).(GrafanaIntegrationsPtrOutput)
}

// The major Grafana software version to target.
func (o ManagedGrafanaPropertiesOutput) GrafanaMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *string { return v.GrafanaMajorVersion }).(pulumi.StringPtrOutput)
}

// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
func (o ManagedGrafanaPropertiesOutput) GrafanaPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) []string { return v.GrafanaPlugins }).(pulumi.StringArrayOutput)
}

// Indicate the state for enable or disable traffic over the public interface.
func (o ManagedGrafanaPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The zone redundancy setting of the Grafana instance.
func (o ManagedGrafanaPropertiesOutput) ZoneRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaProperties) *string { return v.ZoneRedundancy }).(pulumi.StringPtrOutput)
}

type ManagedGrafanaPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedGrafanaPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedGrafanaProperties)(nil)).Elem()
}

func (o ManagedGrafanaPropertiesPtrOutput) ToManagedGrafanaPropertiesPtrOutput() ManagedGrafanaPropertiesPtrOutput {
	return o
}

func (o ManagedGrafanaPropertiesPtrOutput) ToManagedGrafanaPropertiesPtrOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesPtrOutput {
	return o
}

func (o ManagedGrafanaPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedGrafanaProperties] {
	return pulumix.Output[*ManagedGrafanaProperties]{
		OutputState: o.OutputState,
	}
}

func (o ManagedGrafanaPropertiesPtrOutput) Elem() ManagedGrafanaPropertiesOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) ManagedGrafanaProperties {
		if v != nil {
			return *v
		}
		var ret ManagedGrafanaProperties
		return ret
	}).(ManagedGrafanaPropertiesOutput)
}

// The api key setting of the Grafana instance.
func (o ManagedGrafanaPropertiesPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Scope for dns deterministic name hash calculation.
func (o ManagedGrafanaPropertiesPtrOutput) AutoGeneratedDomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *string {
		if v == nil {
			return nil
		}
		return v.AutoGeneratedDomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

// Whether a Grafana instance uses deterministic outbound IPs.
func (o ManagedGrafanaPropertiesPtrOutput) DeterministicOutboundIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeterministicOutboundIP
	}).(pulumi.StringPtrOutput)
}

// Enterprise settings of a Grafana instance
func (o ManagedGrafanaPropertiesPtrOutput) EnterpriseConfigurations() EnterpriseConfigurationsPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *EnterpriseConfigurations {
		if v == nil {
			return nil
		}
		return v.EnterpriseConfigurations
	}).(EnterpriseConfigurationsPtrOutput)
}

// Server configurations of a Grafana instance
func (o ManagedGrafanaPropertiesPtrOutput) GrafanaConfigurations() GrafanaConfigurationsPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *GrafanaConfigurations {
		if v == nil {
			return nil
		}
		return v.GrafanaConfigurations
	}).(GrafanaConfigurationsPtrOutput)
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
func (o ManagedGrafanaPropertiesPtrOutput) GrafanaIntegrations() GrafanaIntegrationsPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *GrafanaIntegrations {
		if v == nil {
			return nil
		}
		return v.GrafanaIntegrations
	}).(GrafanaIntegrationsPtrOutput)
}

// The major Grafana software version to target.
func (o ManagedGrafanaPropertiesPtrOutput) GrafanaMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *string {
		if v == nil {
			return nil
		}
		return v.GrafanaMajorVersion
	}).(pulumi.StringPtrOutput)
}

// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
func (o ManagedGrafanaPropertiesPtrOutput) GrafanaPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) []string {
		if v == nil {
			return nil
		}
		return v.GrafanaPlugins
	}).(pulumi.StringArrayOutput)
}

// Indicate the state for enable or disable traffic over the public interface.
func (o ManagedGrafanaPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// The zone redundancy setting of the Grafana instance.
func (o ManagedGrafanaPropertiesPtrOutput) ZoneRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGrafanaProperties) *string {
		if v == nil {
			return nil
		}
		return v.ZoneRedundancy
	}).(pulumi.StringPtrOutput)
}

// Properties specific to the grafana resource.
type ManagedGrafanaPropertiesResponse struct {
	// The api key setting of the Grafana instance.
	ApiKey *string `pulumi:"apiKey"`
	// Scope for dns deterministic name hash calculation.
	AutoGeneratedDomainNameLabelScope *string `pulumi:"autoGeneratedDomainNameLabelScope"`
	// Whether a Grafana instance uses deterministic outbound IPs.
	DeterministicOutboundIP *string `pulumi:"deterministicOutboundIP"`
	// The endpoint of the Grafana instance.
	Endpoint string `pulumi:"endpoint"`
	// Enterprise settings of a Grafana instance
	EnterpriseConfigurations *EnterpriseConfigurationsResponse `pulumi:"enterpriseConfigurations"`
	// Server configurations of a Grafana instance
	GrafanaConfigurations *GrafanaConfigurationsResponse `pulumi:"grafanaConfigurations"`
	// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
	GrafanaIntegrations *GrafanaIntegrationsResponse `pulumi:"grafanaIntegrations"`
	// The major Grafana software version to target.
	GrafanaMajorVersion *string `pulumi:"grafanaMajorVersion"`
	// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
	GrafanaPlugins map[string]GrafanaPluginResponse `pulumi:"grafanaPlugins"`
	// The Grafana software version.
	GrafanaVersion string `pulumi:"grafanaVersion"`
	// List of outbound IPs if deterministicOutboundIP is enabled.
	OutboundIPs []string `pulumi:"outboundIPs"`
	// The private endpoint connections of the Grafana instance.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Indicate the state for enable or disable traffic over the public interface.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The zone redundancy setting of the Grafana instance.
	ZoneRedundancy *string `pulumi:"zoneRedundancy"`
}

// Defaults sets the appropriate defaults for ManagedGrafanaPropertiesResponse
func (val *ManagedGrafanaPropertiesResponse) Defaults() *ManagedGrafanaPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.GrafanaConfigurations = tmp.GrafanaConfigurations.Defaults()

	return &tmp
}

// Properties specific to the grafana resource.
type ManagedGrafanaPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedGrafanaPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedGrafanaPropertiesResponse)(nil)).Elem()
}

func (o ManagedGrafanaPropertiesResponseOutput) ToManagedGrafanaPropertiesResponseOutput() ManagedGrafanaPropertiesResponseOutput {
	return o
}

func (o ManagedGrafanaPropertiesResponseOutput) ToManagedGrafanaPropertiesResponseOutputWithContext(ctx context.Context) ManagedGrafanaPropertiesResponseOutput {
	return o
}

func (o ManagedGrafanaPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedGrafanaPropertiesResponse] {
	return pulumix.Output[ManagedGrafanaPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// The api key setting of the Grafana instance.
func (o ManagedGrafanaPropertiesResponseOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Scope for dns deterministic name hash calculation.
func (o ManagedGrafanaPropertiesResponseOutput) AutoGeneratedDomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *string { return v.AutoGeneratedDomainNameLabelScope }).(pulumi.StringPtrOutput)
}

// Whether a Grafana instance uses deterministic outbound IPs.
func (o ManagedGrafanaPropertiesResponseOutput) DeterministicOutboundIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *string { return v.DeterministicOutboundIP }).(pulumi.StringPtrOutput)
}

// The endpoint of the Grafana instance.
func (o ManagedGrafanaPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Enterprise settings of a Grafana instance
func (o ManagedGrafanaPropertiesResponseOutput) EnterpriseConfigurations() EnterpriseConfigurationsResponsePtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *EnterpriseConfigurationsResponse {
		return v.EnterpriseConfigurations
	}).(EnterpriseConfigurationsResponsePtrOutput)
}

// Server configurations of a Grafana instance
func (o ManagedGrafanaPropertiesResponseOutput) GrafanaConfigurations() GrafanaConfigurationsResponsePtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *GrafanaConfigurationsResponse {
		return v.GrafanaConfigurations
	}).(GrafanaConfigurationsResponsePtrOutput)
}

// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
func (o ManagedGrafanaPropertiesResponseOutput) GrafanaIntegrations() GrafanaIntegrationsResponsePtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *GrafanaIntegrationsResponse { return v.GrafanaIntegrations }).(GrafanaIntegrationsResponsePtrOutput)
}

// The major Grafana software version to target.
func (o ManagedGrafanaPropertiesResponseOutput) GrafanaMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *string { return v.GrafanaMajorVersion }).(pulumi.StringPtrOutput)
}

// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
func (o ManagedGrafanaPropertiesResponseOutput) GrafanaPlugins() GrafanaPluginResponseMapOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) map[string]GrafanaPluginResponse { return v.GrafanaPlugins }).(GrafanaPluginResponseMapOutput)
}

// The Grafana software version.
func (o ManagedGrafanaPropertiesResponseOutput) GrafanaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) string { return v.GrafanaVersion }).(pulumi.StringOutput)
}

// List of outbound IPs if deterministicOutboundIP is enabled.
func (o ManagedGrafanaPropertiesResponseOutput) OutboundIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) []string { return v.OutboundIPs }).(pulumi.StringArrayOutput)
}

// The private endpoint connections of the Grafana instance.
func (o ManagedGrafanaPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the resource.
func (o ManagedGrafanaPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicate the state for enable or disable traffic over the public interface.
func (o ManagedGrafanaPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The zone redundancy setting of the Grafana instance.
func (o ManagedGrafanaPropertiesResponseOutput) ZoneRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedGrafanaPropertiesResponse) *string { return v.ZoneRedundancy }).(pulumi.StringPtrOutput)
}

// The state of managed private endpoint connection.
type ManagedPrivateEndpointConnectionStateResponse struct {
	// Gets or sets the reason for approval/rejection of the connection.
	Description string `pulumi:"description"`
	// The approval/rejection status of managed private endpoint connection.
	Status string `pulumi:"status"`
}

// The state of managed private endpoint connection.
type ManagedPrivateEndpointConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (ManagedPrivateEndpointConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedPrivateEndpointConnectionStateResponse)(nil)).Elem()
}

func (o ManagedPrivateEndpointConnectionStateResponseOutput) ToManagedPrivateEndpointConnectionStateResponseOutput() ManagedPrivateEndpointConnectionStateResponseOutput {
	return o
}

func (o ManagedPrivateEndpointConnectionStateResponseOutput) ToManagedPrivateEndpointConnectionStateResponseOutputWithContext(ctx context.Context) ManagedPrivateEndpointConnectionStateResponseOutput {
	return o
}

func (o ManagedPrivateEndpointConnectionStateResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedPrivateEndpointConnectionStateResponse] {
	return pulumix.Output[ManagedPrivateEndpointConnectionStateResponse]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the reason for approval/rejection of the connection.
func (o ManagedPrivateEndpointConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedPrivateEndpointConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The approval/rejection status of managed private endpoint connection.
func (o ManagedPrivateEndpointConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedPrivateEndpointConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedServiceIdentity] {
	return pulumix.Output[ManagedServiceIdentity]{
		OutputState: i.ToManagedServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

func (i *managedServiceIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentity] {
	return pulumix.Output[*ManagedServiceIdentity]{
		OutputState: i.ToManagedServiceIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

func (o ManagedServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedServiceIdentity] {
	return pulumix.Output[ManagedServiceIdentity]{
		OutputState: o.OutputState,
	}
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentity] {
	return pulumix.Output[*ManagedServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedServiceIdentityResponse] {
	return pulumix.Output[ManagedServiceIdentityResponse]{
		OutputState: o.OutputState,
	}
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentityResponse] {
	return pulumix.Output[*ManagedServiceIdentityResponse]{
		OutputState: o.OutputState,
	}
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// The private endpoint connection group ids.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToOutput(ctx context.Context) pulumix.Output[PrivateEndpointConnectionResponse] {
	return pulumix.Output[PrivateEndpointConnectionResponse]{
		OutputState: o.OutputState,
	}
}

// The private endpoint connection group ids.
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PrivateEndpointConnectionResponse] {
	return pulumix.Output[[]PrivateEndpointConnectionResponse]{
		OutputState: o.OutputState,
	}
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToOutput(ctx context.Context) pulumix.Output[PrivateEndpointResponse] {
	return pulumix.Output[PrivateEndpointResponse]{
		OutputState: o.OutputState,
	}
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PrivateEndpointResponse] {
	return pulumix.Output[*PrivateEndpointResponse]{
		OutputState: o.OutputState,
	}
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToOutput(ctx context.Context) pulumix.Output[PrivateLinkServiceConnectionState] {
	return pulumix.Output[PrivateLinkServiceConnectionState]{
		OutputState: i.ToPrivateLinkServiceConnectionStateOutputWithContext(ctx).OutputState,
	}
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToOutput(ctx context.Context) pulumix.Output[PrivateLinkServiceConnectionState] {
	return pulumix.Output[PrivateLinkServiceConnectionState]{
		OutputState: o.OutputState,
	}
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToOutput(ctx context.Context) pulumix.Output[PrivateLinkServiceConnectionStateResponse] {
	return pulumix.Output[PrivateLinkServiceConnectionStateResponse]{
		OutputState: o.OutputState,
	}
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ResourceSku struct {
	Name string `pulumi:"name"`
}

// ResourceSkuInput is an input type that accepts ResourceSkuArgs and ResourceSkuOutput values.
// You can construct a concrete instance of `ResourceSkuInput` via:
//
//	ResourceSkuArgs{...}
type ResourceSkuInput interface {
	pulumi.Input

	ToResourceSkuOutput() ResourceSkuOutput
	ToResourceSkuOutputWithContext(context.Context) ResourceSkuOutput
}

type ResourceSkuArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSku)(nil)).Elem()
}

func (i ResourceSkuArgs) ToResourceSkuOutput() ResourceSkuOutput {
	return i.ToResourceSkuOutputWithContext(context.Background())
}

func (i ResourceSkuArgs) ToResourceSkuOutputWithContext(ctx context.Context) ResourceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuOutput)
}

func (i ResourceSkuArgs) ToOutput(ctx context.Context) pulumix.Output[ResourceSku] {
	return pulumix.Output[ResourceSku]{
		OutputState: i.ToResourceSkuOutputWithContext(ctx).OutputState,
	}
}

func (i ResourceSkuArgs) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return i.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (i ResourceSkuArgs) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuOutput).ToResourceSkuPtrOutputWithContext(ctx)
}

// ResourceSkuPtrInput is an input type that accepts ResourceSkuArgs, ResourceSkuPtr and ResourceSkuPtrOutput values.
// You can construct a concrete instance of `ResourceSkuPtrInput` via:
//
//	        ResourceSkuArgs{...}
//
//	or:
//
//	        nil
type ResourceSkuPtrInput interface {
	pulumi.Input

	ToResourceSkuPtrOutput() ResourceSkuPtrOutput
	ToResourceSkuPtrOutputWithContext(context.Context) ResourceSkuPtrOutput
}

type resourceSkuPtrType ResourceSkuArgs

func ResourceSkuPtr(v *ResourceSkuArgs) ResourceSkuPtrInput {
	return (*resourceSkuPtrType)(v)
}

func (*resourceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSku)(nil)).Elem()
}

func (i *resourceSkuPtrType) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return i.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (i *resourceSkuPtrType) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuPtrOutput)
}

func (i *resourceSkuPtrType) ToOutput(ctx context.Context) pulumix.Output[*ResourceSku] {
	return pulumix.Output[*ResourceSku]{
		OutputState: i.ToResourceSkuPtrOutputWithContext(ctx).OutputState,
	}
}

type ResourceSkuOutput struct{ *pulumi.OutputState }

func (ResourceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSku)(nil)).Elem()
}

func (o ResourceSkuOutput) ToResourceSkuOutput() ResourceSkuOutput {
	return o
}

func (o ResourceSkuOutput) ToResourceSkuOutputWithContext(ctx context.Context) ResourceSkuOutput {
	return o
}

func (o ResourceSkuOutput) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return o.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (o ResourceSkuOutput) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSku) *ResourceSku {
		return &v
	}).(ResourceSkuPtrOutput)
}

func (o ResourceSkuOutput) ToOutput(ctx context.Context) pulumix.Output[ResourceSku] {
	return pulumix.Output[ResourceSku]{
		OutputState: o.OutputState,
	}
}

func (o ResourceSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSku) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceSkuPtrOutput struct{ *pulumi.OutputState }

func (ResourceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSku)(nil)).Elem()
}

func (o ResourceSkuPtrOutput) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return o
}

func (o ResourceSkuPtrOutput) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return o
}

func (o ResourceSkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ResourceSku] {
	return pulumix.Output[*ResourceSku]{
		OutputState: o.OutputState,
	}
}

func (o ResourceSkuPtrOutput) Elem() ResourceSkuOutput {
	return o.ApplyT(func(v *ResourceSku) ResourceSku {
		if v != nil {
			return *v
		}
		var ret ResourceSku
		return ret
	}).(ResourceSkuOutput)
}

func (o ResourceSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ResourceSkuResponse struct {
	Name string `pulumi:"name"`
}

type ResourceSkuResponseOutput struct{ *pulumi.OutputState }

func (ResourceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSkuResponse)(nil)).Elem()
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponseOutput() ResourceSkuResponseOutput {
	return o
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponseOutputWithContext(ctx context.Context) ResourceSkuResponseOutput {
	return o
}

func (o ResourceSkuResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ResourceSkuResponse] {
	return pulumix.Output[ResourceSkuResponse]{
		OutputState: o.OutputState,
	}
}

func (o ResourceSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSkuResponse)(nil)).Elem()
}

func (o ResourceSkuResponsePtrOutput) ToResourceSkuResponsePtrOutput() ResourceSkuResponsePtrOutput {
	return o
}

func (o ResourceSkuResponsePtrOutput) ToResourceSkuResponsePtrOutputWithContext(ctx context.Context) ResourceSkuResponsePtrOutput {
	return o
}

func (o ResourceSkuResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ResourceSkuResponse] {
	return pulumix.Output[*ResourceSkuResponse]{
		OutputState: o.OutputState,
	}
}

func (o ResourceSkuResponsePtrOutput) Elem() ResourceSkuResponseOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) ResourceSkuResponse {
		if v != nil {
			return *v
		}
		var ret ResourceSkuResponse
		return ret
	}).(ResourceSkuResponseOutput)
}

func (o ResourceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
type Smtp struct {
	// Enable this to allow Grafana to send email. Default is false
	Enabled *bool `pulumi:"enabled"`
	// Address used when sending out emails
	// https://pkg.go.dev/net/mail#Address
	FromAddress *string `pulumi:"fromAddress"`
	// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
	// https://pkg.go.dev/net/mail#Address
	FromName *string `pulumi:"fromName"`
	// SMTP server hostname with port, e.g. test.email.net:587
	Host *string `pulumi:"host"`
	// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
	Password *string `pulumi:"password"`
	// Verify SSL for SMTP server. Default is false
	// https://pkg.go.dev/crypto/tls#Config
	SkipVerify *bool `pulumi:"skipVerify"`
	// The StartTLSPolicy setting of the SMTP configuration
	// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
	StartTLSPolicy *string `pulumi:"startTLSPolicy"`
	// User of SMTP auth
	User *string `pulumi:"user"`
}

// Defaults sets the appropriate defaults for Smtp
func (val *Smtp) Defaults() *Smtp {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// SmtpInput is an input type that accepts SmtpArgs and SmtpOutput values.
// You can construct a concrete instance of `SmtpInput` via:
//
//	SmtpArgs{...}
type SmtpInput interface {
	pulumi.Input

	ToSmtpOutput() SmtpOutput
	ToSmtpOutputWithContext(context.Context) SmtpOutput
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
type SmtpArgs struct {
	// Enable this to allow Grafana to send email. Default is false
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Address used when sending out emails
	// https://pkg.go.dev/net/mail#Address
	FromAddress pulumi.StringPtrInput `pulumi:"fromAddress"`
	// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
	// https://pkg.go.dev/net/mail#Address
	FromName pulumi.StringPtrInput `pulumi:"fromName"`
	// SMTP server hostname with port, e.g. test.email.net:587
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Verify SSL for SMTP server. Default is false
	// https://pkg.go.dev/crypto/tls#Config
	SkipVerify pulumi.BoolPtrInput `pulumi:"skipVerify"`
	// The StartTLSPolicy setting of the SMTP configuration
	// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
	StartTLSPolicy pulumi.StringPtrInput `pulumi:"startTLSPolicy"`
	// User of SMTP auth
	User pulumi.StringPtrInput `pulumi:"user"`
}

// Defaults sets the appropriate defaults for SmtpArgs
func (val *SmtpArgs) Defaults() *SmtpArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enabled == nil {
		tmp.Enabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (SmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Smtp)(nil)).Elem()
}

func (i SmtpArgs) ToSmtpOutput() SmtpOutput {
	return i.ToSmtpOutputWithContext(context.Background())
}

func (i SmtpArgs) ToSmtpOutputWithContext(ctx context.Context) SmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmtpOutput)
}

func (i SmtpArgs) ToOutput(ctx context.Context) pulumix.Output[Smtp] {
	return pulumix.Output[Smtp]{
		OutputState: i.ToSmtpOutputWithContext(ctx).OutputState,
	}
}

func (i SmtpArgs) ToSmtpPtrOutput() SmtpPtrOutput {
	return i.ToSmtpPtrOutputWithContext(context.Background())
}

func (i SmtpArgs) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmtpOutput).ToSmtpPtrOutputWithContext(ctx)
}

// SmtpPtrInput is an input type that accepts SmtpArgs, SmtpPtr and SmtpPtrOutput values.
// You can construct a concrete instance of `SmtpPtrInput` via:
//
//	        SmtpArgs{...}
//
//	or:
//
//	        nil
type SmtpPtrInput interface {
	pulumi.Input

	ToSmtpPtrOutput() SmtpPtrOutput
	ToSmtpPtrOutputWithContext(context.Context) SmtpPtrOutput
}

type smtpPtrType SmtpArgs

func SmtpPtr(v *SmtpArgs) SmtpPtrInput {
	return (*smtpPtrType)(v)
}

func (*smtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Smtp)(nil)).Elem()
}

func (i *smtpPtrType) ToSmtpPtrOutput() SmtpPtrOutput {
	return i.ToSmtpPtrOutputWithContext(context.Background())
}

func (i *smtpPtrType) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmtpPtrOutput)
}

func (i *smtpPtrType) ToOutput(ctx context.Context) pulumix.Output[*Smtp] {
	return pulumix.Output[*Smtp]{
		OutputState: i.ToSmtpPtrOutputWithContext(ctx).OutputState,
	}
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
type SmtpOutput struct{ *pulumi.OutputState }

func (SmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Smtp)(nil)).Elem()
}

func (o SmtpOutput) ToSmtpOutput() SmtpOutput {
	return o
}

func (o SmtpOutput) ToSmtpOutputWithContext(ctx context.Context) SmtpOutput {
	return o
}

func (o SmtpOutput) ToSmtpPtrOutput() SmtpPtrOutput {
	return o.ToSmtpPtrOutputWithContext(context.Background())
}

func (o SmtpOutput) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Smtp) *Smtp {
		return &v
	}).(SmtpPtrOutput)
}

func (o SmtpOutput) ToOutput(ctx context.Context) pulumix.Output[Smtp] {
	return pulumix.Output[Smtp]{
		OutputState: o.OutputState,
	}
}

// Enable this to allow Grafana to send email. Default is false
func (o SmtpOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Smtp) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Address used when sending out emails
// https://pkg.go.dev/net/mail#Address
func (o SmtpOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.FromAddress }).(pulumi.StringPtrOutput)
}

// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
// https://pkg.go.dev/net/mail#Address
func (o SmtpOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.FromName }).(pulumi.StringPtrOutput)
}

// SMTP server hostname with port, e.g. test.email.net:587
func (o SmtpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
func (o SmtpOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Verify SSL for SMTP server. Default is false
// https://pkg.go.dev/crypto/tls#Config
func (o SmtpOutput) SkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Smtp) *bool { return v.SkipVerify }).(pulumi.BoolPtrOutput)
}

// The StartTLSPolicy setting of the SMTP configuration
// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
func (o SmtpOutput) StartTLSPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.StartTLSPolicy }).(pulumi.StringPtrOutput)
}

// User of SMTP auth
func (o SmtpOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SmtpPtrOutput struct{ *pulumi.OutputState }

func (SmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Smtp)(nil)).Elem()
}

func (o SmtpPtrOutput) ToSmtpPtrOutput() SmtpPtrOutput {
	return o
}

func (o SmtpPtrOutput) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return o
}

func (o SmtpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Smtp] {
	return pulumix.Output[*Smtp]{
		OutputState: o.OutputState,
	}
}

func (o SmtpPtrOutput) Elem() SmtpOutput {
	return o.ApplyT(func(v *Smtp) Smtp {
		if v != nil {
			return *v
		}
		var ret Smtp
		return ret
	}).(SmtpOutput)
}

// Enable this to allow Grafana to send email. Default is false
func (o SmtpPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Smtp) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Address used when sending out emails
// https://pkg.go.dev/net/mail#Address
func (o SmtpPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
// https://pkg.go.dev/net/mail#Address
func (o SmtpPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.FromName
	}).(pulumi.StringPtrOutput)
}

// SMTP server hostname with port, e.g. test.email.net:587
func (o SmtpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
func (o SmtpPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Verify SSL for SMTP server. Default is false
// https://pkg.go.dev/crypto/tls#Config
func (o SmtpPtrOutput) SkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Smtp) *bool {
		if v == nil {
			return nil
		}
		return v.SkipVerify
	}).(pulumi.BoolPtrOutput)
}

// The StartTLSPolicy setting of the SMTP configuration
// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
func (o SmtpPtrOutput) StartTLSPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.StartTLSPolicy
	}).(pulumi.StringPtrOutput)
}

// User of SMTP auth
func (o SmtpPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
type SmtpResponse struct {
	// Enable this to allow Grafana to send email. Default is false
	Enabled *bool `pulumi:"enabled"`
	// Address used when sending out emails
	// https://pkg.go.dev/net/mail#Address
	FromAddress *string `pulumi:"fromAddress"`
	// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
	// https://pkg.go.dev/net/mail#Address
	FromName *string `pulumi:"fromName"`
	// SMTP server hostname with port, e.g. test.email.net:587
	Host *string `pulumi:"host"`
	// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
	Password *string `pulumi:"password"`
	// Verify SSL for SMTP server. Default is false
	// https://pkg.go.dev/crypto/tls#Config
	SkipVerify *bool `pulumi:"skipVerify"`
	// The StartTLSPolicy setting of the SMTP configuration
	// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
	StartTLSPolicy *string `pulumi:"startTLSPolicy"`
	// User of SMTP auth
	User *string `pulumi:"user"`
}

// Defaults sets the appropriate defaults for SmtpResponse
func (val *SmtpResponse) Defaults() *SmtpResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// Email server settings.
// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
type SmtpResponseOutput struct{ *pulumi.OutputState }

func (SmtpResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmtpResponse)(nil)).Elem()
}

func (o SmtpResponseOutput) ToSmtpResponseOutput() SmtpResponseOutput {
	return o
}

func (o SmtpResponseOutput) ToSmtpResponseOutputWithContext(ctx context.Context) SmtpResponseOutput {
	return o
}

func (o SmtpResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SmtpResponse] {
	return pulumix.Output[SmtpResponse]{
		OutputState: o.OutputState,
	}
}

// Enable this to allow Grafana to send email. Default is false
func (o SmtpResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Address used when sending out emails
// https://pkg.go.dev/net/mail#Address
func (o SmtpResponseOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *string { return v.FromAddress }).(pulumi.StringPtrOutput)
}

// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
// https://pkg.go.dev/net/mail#Address
func (o SmtpResponseOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *string { return v.FromName }).(pulumi.StringPtrOutput)
}

// SMTP server hostname with port, e.g. test.email.net:587
func (o SmtpResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
func (o SmtpResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Verify SSL for SMTP server. Default is false
// https://pkg.go.dev/crypto/tls#Config
func (o SmtpResponseOutput) SkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *bool { return v.SkipVerify }).(pulumi.BoolPtrOutput)
}

// The StartTLSPolicy setting of the SMTP configuration
// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
func (o SmtpResponseOutput) StartTLSPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *string { return v.StartTLSPolicy }).(pulumi.StringPtrOutput)
}

// User of SMTP auth
func (o SmtpResponseOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmtpResponse) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SmtpResponsePtrOutput struct{ *pulumi.OutputState }

func (SmtpResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmtpResponse)(nil)).Elem()
}

func (o SmtpResponsePtrOutput) ToSmtpResponsePtrOutput() SmtpResponsePtrOutput {
	return o
}

func (o SmtpResponsePtrOutput) ToSmtpResponsePtrOutputWithContext(ctx context.Context) SmtpResponsePtrOutput {
	return o
}

func (o SmtpResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SmtpResponse] {
	return pulumix.Output[*SmtpResponse]{
		OutputState: o.OutputState,
	}
}

func (o SmtpResponsePtrOutput) Elem() SmtpResponseOutput {
	return o.ApplyT(func(v *SmtpResponse) SmtpResponse {
		if v != nil {
			return *v
		}
		var ret SmtpResponse
		return ret
	}).(SmtpResponseOutput)
}

// Enable this to allow Grafana to send email. Default is false
func (o SmtpResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Address used when sending out emails
// https://pkg.go.dev/net/mail#Address
func (o SmtpResponsePtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *string {
		if v == nil {
			return nil
		}
		return v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
// https://pkg.go.dev/net/mail#Address
func (o SmtpResponsePtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *string {
		if v == nil {
			return nil
		}
		return v.FromName
	}).(pulumi.StringPtrOutput)
}

// SMTP server hostname with port, e.g. test.email.net:587
func (o SmtpResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
func (o SmtpResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Verify SSL for SMTP server. Default is false
// https://pkg.go.dev/crypto/tls#Config
func (o SmtpResponsePtrOutput) SkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SkipVerify
	}).(pulumi.BoolPtrOutput)
}

// The StartTLSPolicy setting of the SMTP configuration
// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
func (o SmtpResponsePtrOutput) StartTLSPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTLSPolicy
	}).(pulumi.StringPtrOutput)
}

// User of SMTP auth
func (o SmtpResponsePtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmtpResponse) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDataResponse] {
	return pulumix.Output[SystemDataResponse]{
		OutputState: o.OutputState,
	}
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToOutput(ctx context.Context) pulumix.Output[UserAssignedIdentityResponse] {
	return pulumix.Output[UserAssignedIdentityResponse]{
		OutputState: o.OutputState,
	}
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]UserAssignedIdentityResponse] {
	return pulumix.Output[map[string]UserAssignedIdentityResponse]{
		OutputState: o.OutputState,
	}
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureMonitorWorkspaceIntegrationOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceIntegrationResponseOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceIntegrationResponseArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseConfigurationsOutput{})
	pulumi.RegisterOutputType(EnterpriseConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(EnterpriseConfigurationsResponseOutput{})
	pulumi.RegisterOutputType(EnterpriseConfigurationsResponsePtrOutput{})
	pulumi.RegisterOutputType(GrafanaConfigurationsOutput{})
	pulumi.RegisterOutputType(GrafanaConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(GrafanaConfigurationsResponseOutput{})
	pulumi.RegisterOutputType(GrafanaConfigurationsResponsePtrOutput{})
	pulumi.RegisterOutputType(GrafanaIntegrationsOutput{})
	pulumi.RegisterOutputType(GrafanaIntegrationsPtrOutput{})
	pulumi.RegisterOutputType(GrafanaIntegrationsResponseOutput{})
	pulumi.RegisterOutputType(GrafanaIntegrationsResponsePtrOutput{})
	pulumi.RegisterOutputType(GrafanaPluginResponseOutput{})
	pulumi.RegisterOutputType(GrafanaPluginResponseMapOutput{})
	pulumi.RegisterOutputType(ManagedGrafanaPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedGrafanaPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedGrafanaPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedPrivateEndpointConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(ResourceSkuOutput{})
	pulumi.RegisterOutputType(ResourceSkuPtrOutput{})
	pulumi.RegisterOutputType(ResourceSkuResponseOutput{})
	pulumi.RegisterOutputType(ResourceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SmtpOutput{})
	pulumi.RegisterOutputType(SmtpPtrOutput{})
	pulumi.RegisterOutputType(SmtpResponseOutput{})
	pulumi.RegisterOutputType(SmtpResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
