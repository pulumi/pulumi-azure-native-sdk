// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlvirtualmachine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets an availability group listener.
//
// Uses Azure REST API version 2023-10-01.
//
// Other available API versions: 2022-02-01, 2022-07-01-preview, 2022-08-01-preview, 2023-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native sqlvirtualmachine [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupAvailabilityGroupListener(ctx *pulumi.Context, args *LookupAvailabilityGroupListenerArgs, opts ...pulumi.InvokeOption) (*LookupAvailabilityGroupListenerResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAvailabilityGroupListenerResult
	err := ctx.Invoke("azure-native:sqlvirtualmachine:getAvailabilityGroupListener", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAvailabilityGroupListenerArgs struct {
	// Name of the availability group listener.
	AvailabilityGroupListenerName string `pulumi:"availabilityGroupListenerName"`
	// The child resources to include in the response.
	Expand *string `pulumi:"expand"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the SQL virtual machine group.
	SqlVirtualMachineGroupName string `pulumi:"sqlVirtualMachineGroupName"`
}

// A SQL Server availability group listener.
type LookupAvailabilityGroupListenerResult struct {
	// Availability Group configuration.
	AvailabilityGroupConfiguration *AgConfigurationResponse `pulumi:"availabilityGroupConfiguration"`
	// Name of the availability group.
	AvailabilityGroupName *string `pulumi:"availabilityGroupName"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Create a default availability group if it does not exist.
	CreateDefaultAvailabilityGroupIfNotExist *bool `pulumi:"createDefaultAvailabilityGroupIfNotExist"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// List of load balancer configurations for an availability group listener.
	LoadBalancerConfigurations []LoadBalancerConfigurationResponse `pulumi:"loadBalancerConfigurations"`
	// List of multi subnet IP configurations for an AG listener.
	MultiSubnetIpConfigurations []MultiSubnetIpConfigurationResponse `pulumi:"multiSubnetIpConfigurations"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Listener port.
	Port *int `pulumi:"port"`
	// Provisioning state to track the async operation status.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAvailabilityGroupListenerOutput(ctx *pulumi.Context, args LookupAvailabilityGroupListenerOutputArgs, opts ...pulumi.InvokeOption) LookupAvailabilityGroupListenerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAvailabilityGroupListenerResultOutput, error) {
			args := v.(LookupAvailabilityGroupListenerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:sqlvirtualmachine:getAvailabilityGroupListener", args, LookupAvailabilityGroupListenerResultOutput{}, options).(LookupAvailabilityGroupListenerResultOutput), nil
		}).(LookupAvailabilityGroupListenerResultOutput)
}

type LookupAvailabilityGroupListenerOutputArgs struct {
	// Name of the availability group listener.
	AvailabilityGroupListenerName pulumi.StringInput `pulumi:"availabilityGroupListenerName"`
	// The child resources to include in the response.
	Expand pulumi.StringPtrInput `pulumi:"expand"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the SQL virtual machine group.
	SqlVirtualMachineGroupName pulumi.StringInput `pulumi:"sqlVirtualMachineGroupName"`
}

func (LookupAvailabilityGroupListenerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAvailabilityGroupListenerArgs)(nil)).Elem()
}

// A SQL Server availability group listener.
type LookupAvailabilityGroupListenerResultOutput struct{ *pulumi.OutputState }

func (LookupAvailabilityGroupListenerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAvailabilityGroupListenerResult)(nil)).Elem()
}

func (o LookupAvailabilityGroupListenerResultOutput) ToLookupAvailabilityGroupListenerResultOutput() LookupAvailabilityGroupListenerResultOutput {
	return o
}

func (o LookupAvailabilityGroupListenerResultOutput) ToLookupAvailabilityGroupListenerResultOutputWithContext(ctx context.Context) LookupAvailabilityGroupListenerResultOutput {
	return o
}

// Availability Group configuration.
func (o LookupAvailabilityGroupListenerResultOutput) AvailabilityGroupConfiguration() AgConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) *AgConfigurationResponse {
		return v.AvailabilityGroupConfiguration
	}).(AgConfigurationResponsePtrOutput)
}

// Name of the availability group.
func (o LookupAvailabilityGroupListenerResultOutput) AvailabilityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) *string { return v.AvailabilityGroupName }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o LookupAvailabilityGroupListenerResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Create a default availability group if it does not exist.
func (o LookupAvailabilityGroupListenerResultOutput) CreateDefaultAvailabilityGroupIfNotExist() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) *bool { return v.CreateDefaultAvailabilityGroupIfNotExist }).(pulumi.BoolPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAvailabilityGroupListenerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of load balancer configurations for an availability group listener.
func (o LookupAvailabilityGroupListenerResultOutput) LoadBalancerConfigurations() LoadBalancerConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) []LoadBalancerConfigurationResponse {
		return v.LoadBalancerConfigurations
	}).(LoadBalancerConfigurationResponseArrayOutput)
}

// List of multi subnet IP configurations for an AG listener.
func (o LookupAvailabilityGroupListenerResultOutput) MultiSubnetIpConfigurations() MultiSubnetIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) []MultiSubnetIpConfigurationResponse {
		return v.MultiSubnetIpConfigurations
	}).(MultiSubnetIpConfigurationResponseArrayOutput)
}

// The name of the resource
func (o LookupAvailabilityGroupListenerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Listener port.
func (o LookupAvailabilityGroupListenerResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state to track the async operation status.
func (o LookupAvailabilityGroupListenerResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAvailabilityGroupListenerResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAvailabilityGroupListenerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAvailabilityGroupListenerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAvailabilityGroupListenerResultOutput{})
}
