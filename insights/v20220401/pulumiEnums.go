// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// The kind of workbook. Only valid value is shared.
type WorkbookSharedTypeKind string

const (
	WorkbookSharedTypeKindShared = WorkbookSharedTypeKind("shared")
)

func (WorkbookSharedTypeKind) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookSharedTypeKind)(nil)).Elem()
}

func (e WorkbookSharedTypeKind) ToWorkbookSharedTypeKindOutput() WorkbookSharedTypeKindOutput {
	return pulumi.ToOutput(e).(WorkbookSharedTypeKindOutput)
}

func (e WorkbookSharedTypeKind) ToWorkbookSharedTypeKindOutputWithContext(ctx context.Context) WorkbookSharedTypeKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkbookSharedTypeKindOutput)
}

func (e WorkbookSharedTypeKind) ToWorkbookSharedTypeKindPtrOutput() WorkbookSharedTypeKindPtrOutput {
	return e.ToWorkbookSharedTypeKindPtrOutputWithContext(context.Background())
}

func (e WorkbookSharedTypeKind) ToWorkbookSharedTypeKindPtrOutputWithContext(ctx context.Context) WorkbookSharedTypeKindPtrOutput {
	return WorkbookSharedTypeKind(e).ToWorkbookSharedTypeKindOutputWithContext(ctx).ToWorkbookSharedTypeKindPtrOutputWithContext(ctx)
}

func (e WorkbookSharedTypeKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkbookSharedTypeKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkbookSharedTypeKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkbookSharedTypeKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkbookSharedTypeKindOutput struct{ *pulumi.OutputState }

func (WorkbookSharedTypeKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookSharedTypeKind)(nil)).Elem()
}

func (o WorkbookSharedTypeKindOutput) ToWorkbookSharedTypeKindOutput() WorkbookSharedTypeKindOutput {
	return o
}

func (o WorkbookSharedTypeKindOutput) ToWorkbookSharedTypeKindOutputWithContext(ctx context.Context) WorkbookSharedTypeKindOutput {
	return o
}

func (o WorkbookSharedTypeKindOutput) ToWorkbookSharedTypeKindPtrOutput() WorkbookSharedTypeKindPtrOutput {
	return o.ToWorkbookSharedTypeKindPtrOutputWithContext(context.Background())
}

func (o WorkbookSharedTypeKindOutput) ToWorkbookSharedTypeKindPtrOutputWithContext(ctx context.Context) WorkbookSharedTypeKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkbookSharedTypeKind) *WorkbookSharedTypeKind {
		return &v
	}).(WorkbookSharedTypeKindPtrOutput)
}

func (o WorkbookSharedTypeKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkbookSharedTypeKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkbookSharedTypeKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkbookSharedTypeKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkbookSharedTypeKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkbookSharedTypeKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkbookSharedTypeKindPtrOutput struct{ *pulumi.OutputState }

func (WorkbookSharedTypeKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookSharedTypeKind)(nil)).Elem()
}

func (o WorkbookSharedTypeKindPtrOutput) ToWorkbookSharedTypeKindPtrOutput() WorkbookSharedTypeKindPtrOutput {
	return o
}

func (o WorkbookSharedTypeKindPtrOutput) ToWorkbookSharedTypeKindPtrOutputWithContext(ctx context.Context) WorkbookSharedTypeKindPtrOutput {
	return o
}

func (o WorkbookSharedTypeKindPtrOutput) Elem() WorkbookSharedTypeKindOutput {
	return o.ApplyT(func(v *WorkbookSharedTypeKind) WorkbookSharedTypeKind {
		if v != nil {
			return *v
		}
		var ret WorkbookSharedTypeKind
		return ret
	}).(WorkbookSharedTypeKindOutput)
}

func (o WorkbookSharedTypeKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkbookSharedTypeKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkbookSharedTypeKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkbookSharedTypeKindInput is an input type that accepts values of the WorkbookSharedTypeKind enum
// A concrete instance of `WorkbookSharedTypeKindInput` can be one of the following:
//
//	WorkbookSharedTypeKindShared
type WorkbookSharedTypeKindInput interface {
	pulumi.Input

	ToWorkbookSharedTypeKindOutput() WorkbookSharedTypeKindOutput
	ToWorkbookSharedTypeKindOutputWithContext(context.Context) WorkbookSharedTypeKindOutput
}

var workbookSharedTypeKindPtrType = reflect.TypeOf((**WorkbookSharedTypeKind)(nil)).Elem()

type WorkbookSharedTypeKindPtrInput interface {
	pulumi.Input

	ToWorkbookSharedTypeKindPtrOutput() WorkbookSharedTypeKindPtrOutput
	ToWorkbookSharedTypeKindPtrOutputWithContext(context.Context) WorkbookSharedTypeKindPtrOutput
}

type workbookSharedTypeKindPtr string

func WorkbookSharedTypeKindPtr(v string) WorkbookSharedTypeKindPtrInput {
	return (*workbookSharedTypeKindPtr)(&v)
}

func (*workbookSharedTypeKindPtr) ElementType() reflect.Type {
	return workbookSharedTypeKindPtrType
}

func (in *workbookSharedTypeKindPtr) ToWorkbookSharedTypeKindPtrOutput() WorkbookSharedTypeKindPtrOutput {
	return pulumi.ToOutput(in).(WorkbookSharedTypeKindPtrOutput)
}

func (in *workbookSharedTypeKindPtr) ToWorkbookSharedTypeKindPtrOutputWithContext(ctx context.Context) WorkbookSharedTypeKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkbookSharedTypeKindPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(WorkbookSharedTypeKindOutput{})
	pulumi.RegisterOutputType(WorkbookSharedTypeKindPtrOutput{})
}
