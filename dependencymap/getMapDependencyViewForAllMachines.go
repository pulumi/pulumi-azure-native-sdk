// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dependencymap

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get dependencies for all machines
//
// Uses Azure REST API version 2025-07-01-preview.
func GetMapDependencyViewForAllMachines(ctx *pulumi.Context, args *GetMapDependencyViewForAllMachinesArgs, opts ...pulumi.InvokeOption) (*GetMapDependencyViewForAllMachinesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetMapDependencyViewForAllMachinesResult
	err := ctx.Invoke("azure-native:dependencymap:getMapDependencyViewForAllMachines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetMapDependencyViewForAllMachinesArgs struct {
	// Filters for GetDependencyViewForAllMachines
	Filters *DependencyProcessFilter `pulumi:"filters"`
	// Maps resource name
	MapName string `pulumi:"mapName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Model representing the result of the export dependencies asynchronous operation.
type GetMapDependencyViewForAllMachinesResult struct {
	// The end time of the operation.
	EndTime *string `pulumi:"endTime"`
	// Contains error details if status is Failed/Canceled.
	Error *ErrorDetailResponse `pulumi:"error"`
	// The status URL of the asynchronous operation.
	Id *string `pulumi:"id"`
	// The resource name of the operation status. It must match the last segment of 'id' field.
	Name *string `pulumi:"name"`
	// Properties for export dependencies. These should only be set if the status is Succeeded.
	Properties GetDependencyViewForAllMachinesResultPropertiesResponse `pulumi:"properties"`
	// The start time of the operation.
	StartTime *string `pulumi:"startTime"`
	// The overall arm status of the operation. It has one of the terminal states - Succeeded/Failed/Canceled.
	Status string `pulumi:"status"`
}

func GetMapDependencyViewForAllMachinesOutput(ctx *pulumi.Context, args GetMapDependencyViewForAllMachinesOutputArgs, opts ...pulumi.InvokeOption) GetMapDependencyViewForAllMachinesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMapDependencyViewForAllMachinesResultOutput, error) {
			args := v.(GetMapDependencyViewForAllMachinesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:dependencymap:getMapDependencyViewForAllMachines", args, GetMapDependencyViewForAllMachinesResultOutput{}, options).(GetMapDependencyViewForAllMachinesResultOutput), nil
		}).(GetMapDependencyViewForAllMachinesResultOutput)
}

type GetMapDependencyViewForAllMachinesOutputArgs struct {
	// Filters for GetDependencyViewForAllMachines
	Filters DependencyProcessFilterPtrInput `pulumi:"filters"`
	// Maps resource name
	MapName pulumi.StringInput `pulumi:"mapName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetMapDependencyViewForAllMachinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapDependencyViewForAllMachinesArgs)(nil)).Elem()
}

// Model representing the result of the export dependencies asynchronous operation.
type GetMapDependencyViewForAllMachinesResultOutput struct{ *pulumi.OutputState }

func (GetMapDependencyViewForAllMachinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapDependencyViewForAllMachinesResult)(nil)).Elem()
}

func (o GetMapDependencyViewForAllMachinesResultOutput) ToGetMapDependencyViewForAllMachinesResultOutput() GetMapDependencyViewForAllMachinesResultOutput {
	return o
}

func (o GetMapDependencyViewForAllMachinesResultOutput) ToGetMapDependencyViewForAllMachinesResultOutputWithContext(ctx context.Context) GetMapDependencyViewForAllMachinesResultOutput {
	return o
}

// The end time of the operation.
func (o GetMapDependencyViewForAllMachinesResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Contains error details if status is Failed/Canceled.
func (o GetMapDependencyViewForAllMachinesResultOutput) Error() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) *ErrorDetailResponse { return v.Error }).(ErrorDetailResponsePtrOutput)
}

// The status URL of the asynchronous operation.
func (o GetMapDependencyViewForAllMachinesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The resource name of the operation status. It must match the last segment of 'id' field.
func (o GetMapDependencyViewForAllMachinesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties for export dependencies. These should only be set if the status is Succeeded.
func (o GetMapDependencyViewForAllMachinesResultOutput) Properties() GetDependencyViewForAllMachinesResultPropertiesResponseOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) GetDependencyViewForAllMachinesResultPropertiesResponse {
		return v.Properties
	}).(GetDependencyViewForAllMachinesResultPropertiesResponseOutput)
}

// The start time of the operation.
func (o GetMapDependencyViewForAllMachinesResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The overall arm status of the operation. It has one of the terminal states - Succeeded/Failed/Canceled.
func (o GetMapDependencyViewForAllMachinesResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMapDependencyViewForAllMachinesResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMapDependencyViewForAllMachinesResultOutput{})
}
