// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadtestservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a PlaywrightWorkspace
//
// Uses Azure REST API version 2025-07-01-preview.
func LookupPlaywrightWorkspace(ctx *pulumi.Context, args *LookupPlaywrightWorkspaceArgs, opts ...pulumi.InvokeOption) (*LookupPlaywrightWorkspaceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPlaywrightWorkspaceResult
	err := ctx.Invoke("azure-native:loadtestservice:getPlaywrightWorkspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupPlaywrightWorkspaceArgs struct {
	// The name of the PlaywrightWorkspace
	PlaywrightWorkspaceName string `pulumi:"playwrightWorkspaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Playwright workspace resource.
type LookupPlaywrightWorkspaceResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The workspace data plane URI.
	DataplaneUri string `pulumi:"dataplaneUri"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// When enabled, this feature allows the workspace to use local auth (through service access token) for executing operations.
	LocalAuth *string `pulumi:"localAuth"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last resource operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// This property sets the connection region for client workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially created.
	RegionalAffinity *string `pulumi:"regionalAffinity"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupPlaywrightWorkspaceResult
func (val *LookupPlaywrightWorkspaceResult) Defaults() *LookupPlaywrightWorkspaceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LocalAuth == nil {
		localAuth_ := "Disabled"
		tmp.LocalAuth = &localAuth_
	}
	if tmp.RegionalAffinity == nil {
		regionalAffinity_ := "Enabled"
		tmp.RegionalAffinity = &regionalAffinity_
	}
	return &tmp
}
func LookupPlaywrightWorkspaceOutput(ctx *pulumi.Context, args LookupPlaywrightWorkspaceOutputArgs, opts ...pulumi.InvokeOption) LookupPlaywrightWorkspaceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlaywrightWorkspaceResultOutput, error) {
			args := v.(LookupPlaywrightWorkspaceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:loadtestservice:getPlaywrightWorkspace", args, LookupPlaywrightWorkspaceResultOutput{}, options).(LookupPlaywrightWorkspaceResultOutput), nil
		}).(LookupPlaywrightWorkspaceResultOutput)
}

type LookupPlaywrightWorkspaceOutputArgs struct {
	// The name of the PlaywrightWorkspace
	PlaywrightWorkspaceName pulumi.StringInput `pulumi:"playwrightWorkspaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupPlaywrightWorkspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlaywrightWorkspaceArgs)(nil)).Elem()
}

// Playwright workspace resource.
type LookupPlaywrightWorkspaceResultOutput struct{ *pulumi.OutputState }

func (LookupPlaywrightWorkspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlaywrightWorkspaceResult)(nil)).Elem()
}

func (o LookupPlaywrightWorkspaceResultOutput) ToLookupPlaywrightWorkspaceResultOutput() LookupPlaywrightWorkspaceResultOutput {
	return o
}

func (o LookupPlaywrightWorkspaceResultOutput) ToLookupPlaywrightWorkspaceResultOutputWithContext(ctx context.Context) LookupPlaywrightWorkspaceResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupPlaywrightWorkspaceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The workspace data plane URI.
func (o LookupPlaywrightWorkspaceResultOutput) DataplaneUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.DataplaneUri }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupPlaywrightWorkspaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// When enabled, this feature allows the workspace to use local auth (through service access token) for executing operations.
func (o LookupPlaywrightWorkspaceResultOutput) LocalAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) *string { return v.LocalAuth }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o LookupPlaywrightWorkspaceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupPlaywrightWorkspaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last resource operation.
func (o LookupPlaywrightWorkspaceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// This property sets the connection region for client workers to cloud-hosted browsers. If enabled, workers connect to browsers in the closest Azure region, ensuring lower latency. If disabled, workers connect to browsers in the Azure region in which the workspace was initially created.
func (o LookupPlaywrightWorkspaceResultOutput) RegionalAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) *string { return v.RegionalAffinity }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupPlaywrightWorkspaceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupPlaywrightWorkspaceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPlaywrightWorkspaceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlaywrightWorkspaceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlaywrightWorkspaceResultOutput{})
}
