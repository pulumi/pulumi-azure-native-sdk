// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadtestservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Playwright workspace resource.
//
// Uses Azure REST API version 2025-07-01-preview.
//
// Other available API versions: 2025-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native loadtestservice [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type PlaywrightWorkspace struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The workspace data plane service API URI.
	DataplaneUri pulumi.StringOutput `pulumi:"dataplaneUri"`
	// Enables the workspace to use local authentication through service access tokens for operations.
	LocalAuth pulumi.StringPtrOutput `pulumi:"localAuth"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last resource operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Controls the connection region for client workers to cloud-hosted browsers. When enabled, workers connect to browsers in the closest Azure region for lower latency. When disabled, workers connect to browsers in the Azure region where the workspace was created.
	RegionalAffinity pulumi.StringPtrOutput `pulumi:"regionalAffinity"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The workspace ID in GUID format.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewPlaywrightWorkspace registers a new resource with the given unique name, arguments, and options.
func NewPlaywrightWorkspace(ctx *pulumi.Context,
	name string, args *PlaywrightWorkspaceArgs, opts ...pulumi.ResourceOption) (*PlaywrightWorkspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.LocalAuth == nil {
		args.LocalAuth = pulumi.StringPtr("Disabled")
	}
	if args.RegionalAffinity == nil {
		args.RegionalAffinity = pulumi.StringPtr("Enabled")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:loadtestservice/v20250701preview:PlaywrightWorkspace"),
		},
		{
			Type: pulumi.String("azure-native:loadtestservice/v20250901:PlaywrightWorkspace"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PlaywrightWorkspace
	err := ctx.RegisterResource("azure-native:loadtestservice:PlaywrightWorkspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlaywrightWorkspace gets an existing PlaywrightWorkspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlaywrightWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlaywrightWorkspaceState, opts ...pulumi.ResourceOption) (*PlaywrightWorkspace, error) {
	var resource PlaywrightWorkspace
	err := ctx.ReadResource("azure-native:loadtestservice:PlaywrightWorkspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlaywrightWorkspace resources.
type playwrightWorkspaceState struct {
}

type PlaywrightWorkspaceState struct {
}

func (PlaywrightWorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*playwrightWorkspaceState)(nil)).Elem()
}

type playwrightWorkspaceArgs struct {
	// Enables the workspace to use local authentication through service access tokens for operations.
	LocalAuth *string `pulumi:"localAuth"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the PlaywrightWorkspace
	PlaywrightWorkspaceName *string `pulumi:"playwrightWorkspaceName"`
	// Controls the connection region for client workers to cloud-hosted browsers. When enabled, workers connect to browsers in the closest Azure region for lower latency. When disabled, workers connect to browsers in the Azure region where the workspace was created.
	RegionalAffinity *string `pulumi:"regionalAffinity"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PlaywrightWorkspace resource.
type PlaywrightWorkspaceArgs struct {
	// Enables the workspace to use local authentication through service access tokens for operations.
	LocalAuth pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the PlaywrightWorkspace
	PlaywrightWorkspaceName pulumi.StringPtrInput
	// Controls the connection region for client workers to cloud-hosted browsers. When enabled, workers connect to browsers in the closest Azure region for lower latency. When disabled, workers connect to browsers in the Azure region where the workspace was created.
	RegionalAffinity pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (PlaywrightWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*playwrightWorkspaceArgs)(nil)).Elem()
}

type PlaywrightWorkspaceInput interface {
	pulumi.Input

	ToPlaywrightWorkspaceOutput() PlaywrightWorkspaceOutput
	ToPlaywrightWorkspaceOutputWithContext(ctx context.Context) PlaywrightWorkspaceOutput
}

func (*PlaywrightWorkspace) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaywrightWorkspace)(nil)).Elem()
}

func (i *PlaywrightWorkspace) ToPlaywrightWorkspaceOutput() PlaywrightWorkspaceOutput {
	return i.ToPlaywrightWorkspaceOutputWithContext(context.Background())
}

func (i *PlaywrightWorkspace) ToPlaywrightWorkspaceOutputWithContext(ctx context.Context) PlaywrightWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaywrightWorkspaceOutput)
}

type PlaywrightWorkspaceOutput struct{ *pulumi.OutputState }

func (PlaywrightWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaywrightWorkspace)(nil)).Elem()
}

func (o PlaywrightWorkspaceOutput) ToPlaywrightWorkspaceOutput() PlaywrightWorkspaceOutput {
	return o
}

func (o PlaywrightWorkspaceOutput) ToPlaywrightWorkspaceOutputWithContext(ctx context.Context) PlaywrightWorkspaceOutput {
	return o
}

// The Azure API version of the resource.
func (o PlaywrightWorkspaceOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The workspace data plane service API URI.
func (o PlaywrightWorkspaceOutput) DataplaneUri() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.DataplaneUri }).(pulumi.StringOutput)
}

// Enables the workspace to use local authentication through service access tokens for operations.
func (o PlaywrightWorkspaceOutput) LocalAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringPtrOutput { return v.LocalAuth }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o PlaywrightWorkspaceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o PlaywrightWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last resource operation.
func (o PlaywrightWorkspaceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Controls the connection region for client workers to cloud-hosted browsers. When enabled, workers connect to browsers in the closest Azure region for lower latency. When disabled, workers connect to browsers in the Azure region where the workspace was created.
func (o PlaywrightWorkspaceOutput) RegionalAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringPtrOutput { return v.RegionalAffinity }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PlaywrightWorkspaceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o PlaywrightWorkspaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PlaywrightWorkspaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The workspace ID in GUID format.
func (o PlaywrightWorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PlaywrightWorkspace) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PlaywrightWorkspaceOutput{})
}
