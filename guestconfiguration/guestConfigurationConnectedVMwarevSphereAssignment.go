// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guestconfiguration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Guest configuration assignment is an association between a machine and guest configuration.
//
// Uses Azure REST API version 2024-04-05. In version 2.x of the Azure Native provider, it used API version 2022-01-25.
//
// Other available API versions: 2022-01-25. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native guestconfiguration [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type GuestConfigurationConnectedVMwarevSphereAssignment struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Region where the VM is located.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The guest configuration assignment name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGuestConfigurationConnectedVMwarevSphereAssignment registers a new resource with the given unique name, arguments, and options.
func NewGuestConfigurationConnectedVMwarevSphereAssignment(ctx *pulumi.Context,
	name string, args *GuestConfigurationConnectedVMwarevSphereAssignmentArgs, opts ...pulumi.ResourceOption) (*GuestConfigurationConnectedVMwarevSphereAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VmName == nil {
		return nil, errors.New("invalid value for required argument 'VmName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:guestconfiguration/v20200625:GuestConfigurationConnectedVMwarevSphereAssignment"),
		},
		{
			Type: pulumi.String("azure-native:guestconfiguration/v20220125:GuestConfigurationConnectedVMwarevSphereAssignment"),
		},
		{
			Type: pulumi.String("azure-native:guestconfiguration/v20240405:GuestConfigurationConnectedVMwarevSphereAssignment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GuestConfigurationConnectedVMwarevSphereAssignment
	err := ctx.RegisterResource("azure-native:guestconfiguration:GuestConfigurationConnectedVMwarevSphereAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGuestConfigurationConnectedVMwarevSphereAssignment gets an existing GuestConfigurationConnectedVMwarevSphereAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGuestConfigurationConnectedVMwarevSphereAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GuestConfigurationConnectedVMwarevSphereAssignmentState, opts ...pulumi.ResourceOption) (*GuestConfigurationConnectedVMwarevSphereAssignment, error) {
	var resource GuestConfigurationConnectedVMwarevSphereAssignment
	err := ctx.ReadResource("azure-native:guestconfiguration:GuestConfigurationConnectedVMwarevSphereAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GuestConfigurationConnectedVMwarevSphereAssignment resources.
type guestConfigurationConnectedVMwarevSphereAssignmentState struct {
}

type GuestConfigurationConnectedVMwarevSphereAssignmentState struct {
}

func (GuestConfigurationConnectedVMwarevSphereAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*guestConfigurationConnectedVMwarevSphereAssignmentState)(nil)).Elem()
}

type guestConfigurationConnectedVMwarevSphereAssignmentArgs struct {
	// The guest configuration assignment name.
	GuestConfigurationAssignmentName *string `pulumi:"guestConfigurationAssignmentName"`
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// The guest configuration assignment name.
	Name string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual machine.
	VmName string `pulumi:"vmName"`
}

// The set of arguments for constructing a GuestConfigurationConnectedVMwarevSphereAssignment resource.
type GuestConfigurationConnectedVMwarevSphereAssignmentArgs struct {
	// The guest configuration assignment name.
	GuestConfigurationAssignmentName pulumi.StringPtrInput
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// The guest configuration assignment name.
	Name pulumi.StringInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the virtual machine.
	VmName pulumi.StringInput
}

func (GuestConfigurationConnectedVMwarevSphereAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*guestConfigurationConnectedVMwarevSphereAssignmentArgs)(nil)).Elem()
}

type GuestConfigurationConnectedVMwarevSphereAssignmentInput interface {
	pulumi.Input

	ToGuestConfigurationConnectedVMwarevSphereAssignmentOutput() GuestConfigurationConnectedVMwarevSphereAssignmentOutput
	ToGuestConfigurationConnectedVMwarevSphereAssignmentOutputWithContext(ctx context.Context) GuestConfigurationConnectedVMwarevSphereAssignmentOutput
}

func (*GuestConfigurationConnectedVMwarevSphereAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestConfigurationConnectedVMwarevSphereAssignment)(nil)).Elem()
}

func (i *GuestConfigurationConnectedVMwarevSphereAssignment) ToGuestConfigurationConnectedVMwarevSphereAssignmentOutput() GuestConfigurationConnectedVMwarevSphereAssignmentOutput {
	return i.ToGuestConfigurationConnectedVMwarevSphereAssignmentOutputWithContext(context.Background())
}

func (i *GuestConfigurationConnectedVMwarevSphereAssignment) ToGuestConfigurationConnectedVMwarevSphereAssignmentOutputWithContext(ctx context.Context) GuestConfigurationConnectedVMwarevSphereAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestConfigurationConnectedVMwarevSphereAssignmentOutput)
}

type GuestConfigurationConnectedVMwarevSphereAssignmentOutput struct{ *pulumi.OutputState }

func (GuestConfigurationConnectedVMwarevSphereAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestConfigurationConnectedVMwarevSphereAssignment)(nil)).Elem()
}

func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) ToGuestConfigurationConnectedVMwarevSphereAssignmentOutput() GuestConfigurationConnectedVMwarevSphereAssignmentOutput {
	return o
}

func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) ToGuestConfigurationConnectedVMwarevSphereAssignmentOutputWithContext(ctx context.Context) GuestConfigurationConnectedVMwarevSphereAssignmentOutput {
	return o
}

// The Azure API version of the resource.
func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *GuestConfigurationConnectedVMwarevSphereAssignment) pulumi.StringOutput {
		return v.AzureApiVersion
	}).(pulumi.StringOutput)
}

// Region where the VM is located.
func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestConfigurationConnectedVMwarevSphereAssignment) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The guest configuration assignment name.
func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GuestConfigurationConnectedVMwarevSphereAssignment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Guest configuration assignment.
func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) Properties() GuestConfigurationAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *GuestConfigurationConnectedVMwarevSphereAssignment) GuestConfigurationAssignmentPropertiesResponseOutput {
		return v.Properties
	}).(GuestConfigurationAssignmentPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *GuestConfigurationConnectedVMwarevSphereAssignment) SystemDataResponseOutput {
		return v.SystemData
	}).(SystemDataResponseOutput)
}

// The type of the resource.
func (o GuestConfigurationConnectedVMwarevSphereAssignmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *GuestConfigurationConnectedVMwarevSphereAssignment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GuestConfigurationConnectedVMwarevSphereAssignmentOutput{})
}
