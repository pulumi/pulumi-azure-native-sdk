// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guestconfiguration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Guest configuration assignment is an association between a machine and guest configuration.
// Azure REST API version: 2022-01-25.
type GuestConfigurationAssignmentsVMSS struct {
	pulumi.CustomResourceState

	// Region where the VM is located.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGuestConfigurationAssignmentsVMSS registers a new resource with the given unique name, arguments, and options.
func NewGuestConfigurationAssignmentsVMSS(ctx *pulumi.Context,
	name string, args *GuestConfigurationAssignmentsVMSSArgs, opts ...pulumi.ResourceOption) (*GuestConfigurationAssignmentsVMSS, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VmssName == nil {
		return nil, errors.New("invalid value for required argument 'VmssName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:guestconfiguration/v20220125:GuestConfigurationAssignmentsVMSS"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GuestConfigurationAssignmentsVMSS
	err := ctx.RegisterResource("azure-native:guestconfiguration:GuestConfigurationAssignmentsVMSS", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGuestConfigurationAssignmentsVMSS gets an existing GuestConfigurationAssignmentsVMSS resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGuestConfigurationAssignmentsVMSS(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GuestConfigurationAssignmentsVMSSState, opts ...pulumi.ResourceOption) (*GuestConfigurationAssignmentsVMSS, error) {
	var resource GuestConfigurationAssignmentsVMSS
	err := ctx.ReadResource("azure-native:guestconfiguration:GuestConfigurationAssignmentsVMSS", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GuestConfigurationAssignmentsVMSS resources.
type guestConfigurationAssignmentsVMSSState struct {
}

type GuestConfigurationAssignmentsVMSSState struct {
}

func (GuestConfigurationAssignmentsVMSSState) ElementType() reflect.Type {
	return reflect.TypeOf((*guestConfigurationAssignmentsVMSSState)(nil)).Elem()
}

type guestConfigurationAssignmentsVMSSArgs struct {
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual machine scale set.
	VmssName string `pulumi:"vmssName"`
}

// The set of arguments for constructing a GuestConfigurationAssignmentsVMSS resource.
type GuestConfigurationAssignmentsVMSSArgs struct {
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the virtual machine scale set.
	VmssName pulumi.StringInput
}

func (GuestConfigurationAssignmentsVMSSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*guestConfigurationAssignmentsVMSSArgs)(nil)).Elem()
}

type GuestConfigurationAssignmentsVMSSInput interface {
	pulumi.Input

	ToGuestConfigurationAssignmentsVMSSOutput() GuestConfigurationAssignmentsVMSSOutput
	ToGuestConfigurationAssignmentsVMSSOutputWithContext(ctx context.Context) GuestConfigurationAssignmentsVMSSOutput
}

func (*GuestConfigurationAssignmentsVMSS) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestConfigurationAssignmentsVMSS)(nil)).Elem()
}

func (i *GuestConfigurationAssignmentsVMSS) ToGuestConfigurationAssignmentsVMSSOutput() GuestConfigurationAssignmentsVMSSOutput {
	return i.ToGuestConfigurationAssignmentsVMSSOutputWithContext(context.Background())
}

func (i *GuestConfigurationAssignmentsVMSS) ToGuestConfigurationAssignmentsVMSSOutputWithContext(ctx context.Context) GuestConfigurationAssignmentsVMSSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestConfigurationAssignmentsVMSSOutput)
}

func (i *GuestConfigurationAssignmentsVMSS) ToOutput(ctx context.Context) pulumix.Output[*GuestConfigurationAssignmentsVMSS] {
	return pulumix.Output[*GuestConfigurationAssignmentsVMSS]{
		OutputState: i.ToGuestConfigurationAssignmentsVMSSOutputWithContext(ctx).OutputState,
	}
}

type GuestConfigurationAssignmentsVMSSOutput struct{ *pulumi.OutputState }

func (GuestConfigurationAssignmentsVMSSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestConfigurationAssignmentsVMSS)(nil)).Elem()
}

func (o GuestConfigurationAssignmentsVMSSOutput) ToGuestConfigurationAssignmentsVMSSOutput() GuestConfigurationAssignmentsVMSSOutput {
	return o
}

func (o GuestConfigurationAssignmentsVMSSOutput) ToGuestConfigurationAssignmentsVMSSOutputWithContext(ctx context.Context) GuestConfigurationAssignmentsVMSSOutput {
	return o
}

func (o GuestConfigurationAssignmentsVMSSOutput) ToOutput(ctx context.Context) pulumix.Output[*GuestConfigurationAssignmentsVMSS] {
	return pulumix.Output[*GuestConfigurationAssignmentsVMSS]{
		OutputState: o.OutputState,
	}
}

// Region where the VM is located.
func (o GuestConfigurationAssignmentsVMSSOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestConfigurationAssignmentsVMSS) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of the guest configuration assignment.
func (o GuestConfigurationAssignmentsVMSSOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestConfigurationAssignmentsVMSS) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the Guest configuration assignment.
func (o GuestConfigurationAssignmentsVMSSOutput) Properties() GuestConfigurationAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *GuestConfigurationAssignmentsVMSS) GuestConfigurationAssignmentPropertiesResponseOutput {
		return v.Properties
	}).(GuestConfigurationAssignmentPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GuestConfigurationAssignmentsVMSSOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *GuestConfigurationAssignmentsVMSS) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource.
func (o GuestConfigurationAssignmentsVMSSOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *GuestConfigurationAssignmentsVMSS) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GuestConfigurationAssignmentsVMSSOutput{})
}
