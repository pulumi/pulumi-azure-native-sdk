// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220915preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Document processor details
type DocumentProcessor struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Document processor properties.
	Properties DocumentProcessorPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDocumentProcessor registers a new resource with the given unique name, arguments, and options.
func NewDocumentProcessor(ctx *pulumi.Context,
	name string, args *DocumentProcessorArgs, opts ...pulumi.ResourceOption) (*DocumentProcessor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:syntex:DocumentProcessor"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DocumentProcessor
	err := ctx.RegisterResource("azure-native:syntex/v20220915preview:DocumentProcessor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocumentProcessor gets an existing DocumentProcessor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocumentProcessor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentProcessorState, opts ...pulumi.ResourceOption) (*DocumentProcessor, error) {
	var resource DocumentProcessor
	err := ctx.ReadResource("azure-native:syntex/v20220915preview:DocumentProcessor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DocumentProcessor resources.
type documentProcessorState struct {
}

type DocumentProcessorState struct {
}

func (DocumentProcessorState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentProcessorState)(nil)).Elem()
}

type documentProcessorArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of document processor resource.
	ProcessorName *string `pulumi:"processorName"`
	// Document processor properties.
	Properties *DocumentProcessorProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DocumentProcessor resource.
type DocumentProcessorArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of document processor resource.
	ProcessorName pulumi.StringPtrInput
	// Document processor properties.
	Properties DocumentProcessorPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (DocumentProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentProcessorArgs)(nil)).Elem()
}

type DocumentProcessorInput interface {
	pulumi.Input

	ToDocumentProcessorOutput() DocumentProcessorOutput
	ToDocumentProcessorOutputWithContext(ctx context.Context) DocumentProcessorOutput
}

func (*DocumentProcessor) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentProcessor)(nil)).Elem()
}

func (i *DocumentProcessor) ToDocumentProcessorOutput() DocumentProcessorOutput {
	return i.ToDocumentProcessorOutputWithContext(context.Background())
}

func (i *DocumentProcessor) ToDocumentProcessorOutputWithContext(ctx context.Context) DocumentProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentProcessorOutput)
}

type DocumentProcessorOutput struct{ *pulumi.OutputState }

func (DocumentProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentProcessor)(nil)).Elem()
}

func (o DocumentProcessorOutput) ToDocumentProcessorOutput() DocumentProcessorOutput {
	return o
}

func (o DocumentProcessorOutput) ToDocumentProcessorOutputWithContext(ctx context.Context) DocumentProcessorOutput {
	return o
}

// The geo-location where the resource lives
func (o DocumentProcessorOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentProcessor) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o DocumentProcessorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentProcessor) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Document processor properties.
func (o DocumentProcessorOutput) Properties() DocumentProcessorPropertiesResponseOutput {
	return o.ApplyT(func(v *DocumentProcessor) DocumentProcessorPropertiesResponseOutput { return v.Properties }).(DocumentProcessorPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DocumentProcessorOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DocumentProcessor) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DocumentProcessorOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DocumentProcessor) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DocumentProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentProcessor) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DocumentProcessorOutput{})
}
