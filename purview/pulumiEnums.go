// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package purview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Identity Type.
type CredentialsType string

const (
	CredentialsTypeNone           = CredentialsType("None")
	CredentialsTypeSystemAssigned = CredentialsType("SystemAssigned")
	CredentialsTypeUserAssigned   = CredentialsType("UserAssigned")
)

func (CredentialsType) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsType)(nil)).Elem()
}

func (e CredentialsType) ToCredentialsTypeOutput() CredentialsTypeOutput {
	return pulumi.ToOutput(e).(CredentialsTypeOutput)
}

func (e CredentialsType) ToCredentialsTypeOutputWithContext(ctx context.Context) CredentialsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CredentialsTypeOutput)
}

func (e CredentialsType) ToCredentialsTypePtrOutput() CredentialsTypePtrOutput {
	return e.ToCredentialsTypePtrOutputWithContext(context.Background())
}

func (e CredentialsType) ToCredentialsTypePtrOutputWithContext(ctx context.Context) CredentialsTypePtrOutput {
	return CredentialsType(e).ToCredentialsTypeOutputWithContext(ctx).ToCredentialsTypePtrOutputWithContext(ctx)
}

func (e CredentialsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CredentialsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CredentialsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CredentialsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CredentialsTypeOutput struct{ *pulumi.OutputState }

func (CredentialsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsType)(nil)).Elem()
}

func (o CredentialsTypeOutput) ToCredentialsTypeOutput() CredentialsTypeOutput {
	return o
}

func (o CredentialsTypeOutput) ToCredentialsTypeOutputWithContext(ctx context.Context) CredentialsTypeOutput {
	return o
}

func (o CredentialsTypeOutput) ToCredentialsTypePtrOutput() CredentialsTypePtrOutput {
	return o.ToCredentialsTypePtrOutputWithContext(context.Background())
}

func (o CredentialsTypeOutput) ToCredentialsTypePtrOutputWithContext(ctx context.Context) CredentialsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CredentialsType) *CredentialsType {
		return &v
	}).(CredentialsTypePtrOutput)
}

func (o CredentialsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CredentialsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CredentialsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CredentialsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CredentialsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CredentialsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CredentialsTypePtrOutput struct{ *pulumi.OutputState }

func (CredentialsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsType)(nil)).Elem()
}

func (o CredentialsTypePtrOutput) ToCredentialsTypePtrOutput() CredentialsTypePtrOutput {
	return o
}

func (o CredentialsTypePtrOutput) ToCredentialsTypePtrOutputWithContext(ctx context.Context) CredentialsTypePtrOutput {
	return o
}

func (o CredentialsTypePtrOutput) Elem() CredentialsTypeOutput {
	return o.ApplyT(func(v *CredentialsType) CredentialsType {
		if v != nil {
			return *v
		}
		var ret CredentialsType
		return ret
	}).(CredentialsTypeOutput)
}

func (o CredentialsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CredentialsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CredentialsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CredentialsTypeInput is an input type that accepts values of the CredentialsType enum
// A concrete instance of `CredentialsTypeInput` can be one of the following:
//
//	CredentialsTypeNone
//	CredentialsTypeSystemAssigned
//	CredentialsTypeUserAssigned
type CredentialsTypeInput interface {
	pulumi.Input

	ToCredentialsTypeOutput() CredentialsTypeOutput
	ToCredentialsTypeOutputWithContext(context.Context) CredentialsTypeOutput
}

var credentialsTypePtrType = reflect.TypeOf((**CredentialsType)(nil)).Elem()

type CredentialsTypePtrInput interface {
	pulumi.Input

	ToCredentialsTypePtrOutput() CredentialsTypePtrOutput
	ToCredentialsTypePtrOutputWithContext(context.Context) CredentialsTypePtrOutput
}

type credentialsTypePtr string

func CredentialsTypePtr(v string) CredentialsTypePtrInput {
	return (*credentialsTypePtr)(&v)
}

func (*credentialsTypePtr) ElementType() reflect.Type {
	return credentialsTypePtrType
}

func (in *credentialsTypePtr) ToCredentialsTypePtrOutput() CredentialsTypePtrOutput {
	return pulumi.ToOutput(in).(CredentialsTypePtrOutput)
}

func (in *credentialsTypePtr) ToCredentialsTypePtrOutputWithContext(ctx context.Context) CredentialsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CredentialsTypePtrOutput)
}

func (in *credentialsTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CredentialsType] {
	return pulumix.Output[*CredentialsType]{
		OutputState: in.ToCredentialsTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The event hub type.
type EventHubType string

const (
	EventHubTypeNotification = EventHubType("Notification")
	EventHubTypeHook         = EventHubType("Hook")
)

func (EventHubType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (e EventHubType) ToEventHubTypeOutput() EventHubTypeOutput {
	return pulumi.ToOutput(e).(EventHubTypeOutput)
}

func (e EventHubType) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventHubTypeOutput)
}

func (e EventHubType) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return e.ToEventHubTypePtrOutputWithContext(context.Background())
}

func (e EventHubType) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return EventHubType(e).ToEventHubTypeOutputWithContext(ctx).ToEventHubTypePtrOutputWithContext(ctx)
}

func (e EventHubType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventHubType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventHubType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventHubType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventHubTypeOutput struct{ *pulumi.OutputState }

func (EventHubTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (o EventHubTypeOutput) ToEventHubTypeOutput() EventHubTypeOutput {
	return o
}

func (o EventHubTypeOutput) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return o
}

func (o EventHubTypeOutput) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return o.ToEventHubTypePtrOutputWithContext(context.Background())
}

func (o EventHubTypeOutput) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventHubType) *EventHubType {
		return &v
	}).(EventHubTypePtrOutput)
}

func (o EventHubTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventHubTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventHubType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventHubTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventHubTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventHubType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventHubTypePtrOutput struct{ *pulumi.OutputState }

func (EventHubTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubType)(nil)).Elem()
}

func (o EventHubTypePtrOutput) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return o
}

func (o EventHubTypePtrOutput) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return o
}

func (o EventHubTypePtrOutput) Elem() EventHubTypeOutput {
	return o.ApplyT(func(v *EventHubType) EventHubType {
		if v != nil {
			return *v
		}
		var ret EventHubType
		return ret
	}).(EventHubTypeOutput)
}

func (o EventHubTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventHubTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventHubType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventHubTypeInput is an input type that accepts values of the EventHubType enum
// A concrete instance of `EventHubTypeInput` can be one of the following:
//
//	EventHubTypeNotification
//	EventHubTypeHook
type EventHubTypeInput interface {
	pulumi.Input

	ToEventHubTypeOutput() EventHubTypeOutput
	ToEventHubTypeOutputWithContext(context.Context) EventHubTypeOutput
}

var eventHubTypePtrType = reflect.TypeOf((**EventHubType)(nil)).Elem()

type EventHubTypePtrInput interface {
	pulumi.Input

	ToEventHubTypePtrOutput() EventHubTypePtrOutput
	ToEventHubTypePtrOutputWithContext(context.Context) EventHubTypePtrOutput
}

type eventHubTypePtr string

func EventHubTypePtr(v string) EventHubTypePtrInput {
	return (*eventHubTypePtr)(&v)
}

func (*eventHubTypePtr) ElementType() reflect.Type {
	return eventHubTypePtrType
}

func (in *eventHubTypePtr) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return pulumi.ToOutput(in).(EventHubTypePtrOutput)
}

func (in *eventHubTypePtr) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventHubTypePtrOutput)
}

func (in *eventHubTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EventHubType] {
	return pulumix.Output[*EventHubType]{
		OutputState: in.ToEventHubTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The state of the event streaming service
type EventStreamingState string

const (
	EventStreamingStateDisabled = EventStreamingState("Disabled")
	EventStreamingStateEnabled  = EventStreamingState("Enabled")
)

func (EventStreamingState) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingState)(nil)).Elem()
}

func (e EventStreamingState) ToEventStreamingStateOutput() EventStreamingStateOutput {
	return pulumi.ToOutput(e).(EventStreamingStateOutput)
}

func (e EventStreamingState) ToEventStreamingStateOutputWithContext(ctx context.Context) EventStreamingStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventStreamingStateOutput)
}

func (e EventStreamingState) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return e.ToEventStreamingStatePtrOutputWithContext(context.Background())
}

func (e EventStreamingState) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return EventStreamingState(e).ToEventStreamingStateOutputWithContext(ctx).ToEventStreamingStatePtrOutputWithContext(ctx)
}

func (e EventStreamingState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventStreamingState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventStreamingStateOutput struct{ *pulumi.OutputState }

func (EventStreamingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingState)(nil)).Elem()
}

func (o EventStreamingStateOutput) ToEventStreamingStateOutput() EventStreamingStateOutput {
	return o
}

func (o EventStreamingStateOutput) ToEventStreamingStateOutputWithContext(ctx context.Context) EventStreamingStateOutput {
	return o
}

func (o EventStreamingStateOutput) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return o.ToEventStreamingStatePtrOutputWithContext(context.Background())
}

func (o EventStreamingStateOutput) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventStreamingState) *EventStreamingState {
		return &v
	}).(EventStreamingStatePtrOutput)
}

func (o EventStreamingStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventStreamingStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventStreamingStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventStreamingStatePtrOutput struct{ *pulumi.OutputState }

func (EventStreamingStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventStreamingState)(nil)).Elem()
}

func (o EventStreamingStatePtrOutput) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return o
}

func (o EventStreamingStatePtrOutput) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return o
}

func (o EventStreamingStatePtrOutput) Elem() EventStreamingStateOutput {
	return o.ApplyT(func(v *EventStreamingState) EventStreamingState {
		if v != nil {
			return *v
		}
		var ret EventStreamingState
		return ret
	}).(EventStreamingStateOutput)
}

func (o EventStreamingStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventStreamingState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventStreamingStateInput is an input type that accepts values of the EventStreamingState enum
// A concrete instance of `EventStreamingStateInput` can be one of the following:
//
//	EventStreamingStateDisabled
//	EventStreamingStateEnabled
type EventStreamingStateInput interface {
	pulumi.Input

	ToEventStreamingStateOutput() EventStreamingStateOutput
	ToEventStreamingStateOutputWithContext(context.Context) EventStreamingStateOutput
}

var eventStreamingStatePtrType = reflect.TypeOf((**EventStreamingState)(nil)).Elem()

type EventStreamingStatePtrInput interface {
	pulumi.Input

	ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput
	ToEventStreamingStatePtrOutputWithContext(context.Context) EventStreamingStatePtrOutput
}

type eventStreamingStatePtr string

func EventStreamingStatePtr(v string) EventStreamingStatePtrInput {
	return (*eventStreamingStatePtr)(&v)
}

func (*eventStreamingStatePtr) ElementType() reflect.Type {
	return eventStreamingStatePtrType
}

func (in *eventStreamingStatePtr) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return pulumi.ToOutput(in).(EventStreamingStatePtrOutput)
}

func (in *eventStreamingStatePtr) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventStreamingStatePtrOutput)
}

func (in *eventStreamingStatePtr) ToOutput(ctx context.Context) pulumix.Output[*EventStreamingState] {
	return pulumix.Output[*EventStreamingState]{
		OutputState: in.ToEventStreamingStatePtrOutputWithContext(ctx).OutputState,
	}
}

// The event streaming service type
type EventStreamingType string

const (
	EventStreamingTypeNone    = EventStreamingType("None")
	EventStreamingTypeManaged = EventStreamingType("Managed")
	EventStreamingTypeAzure   = EventStreamingType("Azure")
)

func (EventStreamingType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingType)(nil)).Elem()
}

func (e EventStreamingType) ToEventStreamingTypeOutput() EventStreamingTypeOutput {
	return pulumi.ToOutput(e).(EventStreamingTypeOutput)
}

func (e EventStreamingType) ToEventStreamingTypeOutputWithContext(ctx context.Context) EventStreamingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventStreamingTypeOutput)
}

func (e EventStreamingType) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return e.ToEventStreamingTypePtrOutputWithContext(context.Background())
}

func (e EventStreamingType) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return EventStreamingType(e).ToEventStreamingTypeOutputWithContext(ctx).ToEventStreamingTypePtrOutputWithContext(ctx)
}

func (e EventStreamingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventStreamingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventStreamingTypeOutput struct{ *pulumi.OutputState }

func (EventStreamingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingType)(nil)).Elem()
}

func (o EventStreamingTypeOutput) ToEventStreamingTypeOutput() EventStreamingTypeOutput {
	return o
}

func (o EventStreamingTypeOutput) ToEventStreamingTypeOutputWithContext(ctx context.Context) EventStreamingTypeOutput {
	return o
}

func (o EventStreamingTypeOutput) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return o.ToEventStreamingTypePtrOutputWithContext(context.Background())
}

func (o EventStreamingTypeOutput) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventStreamingType) *EventStreamingType {
		return &v
	}).(EventStreamingTypePtrOutput)
}

func (o EventStreamingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventStreamingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventStreamingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventStreamingTypePtrOutput struct{ *pulumi.OutputState }

func (EventStreamingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventStreamingType)(nil)).Elem()
}

func (o EventStreamingTypePtrOutput) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return o
}

func (o EventStreamingTypePtrOutput) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return o
}

func (o EventStreamingTypePtrOutput) Elem() EventStreamingTypeOutput {
	return o.ApplyT(func(v *EventStreamingType) EventStreamingType {
		if v != nil {
			return *v
		}
		var ret EventStreamingType
		return ret
	}).(EventStreamingTypeOutput)
}

func (o EventStreamingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventStreamingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventStreamingTypeInput is an input type that accepts values of the EventStreamingType enum
// A concrete instance of `EventStreamingTypeInput` can be one of the following:
//
//	EventStreamingTypeNone
//	EventStreamingTypeManaged
//	EventStreamingTypeAzure
type EventStreamingTypeInput interface {
	pulumi.Input

	ToEventStreamingTypeOutput() EventStreamingTypeOutput
	ToEventStreamingTypeOutputWithContext(context.Context) EventStreamingTypeOutput
}

var eventStreamingTypePtrType = reflect.TypeOf((**EventStreamingType)(nil)).Elem()

type EventStreamingTypePtrInput interface {
	pulumi.Input

	ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput
	ToEventStreamingTypePtrOutputWithContext(context.Context) EventStreamingTypePtrOutput
}

type eventStreamingTypePtr string

func EventStreamingTypePtr(v string) EventStreamingTypePtrInput {
	return (*eventStreamingTypePtr)(&v)
}

func (*eventStreamingTypePtr) ElementType() reflect.Type {
	return eventStreamingTypePtrType
}

func (in *eventStreamingTypePtr) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return pulumi.ToOutput(in).(EventStreamingTypePtrOutput)
}

func (in *eventStreamingTypePtr) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventStreamingTypePtrOutput)
}

func (in *eventStreamingTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EventStreamingType] {
	return pulumix.Output[*EventStreamingType]{
		OutputState: in.ToEventStreamingTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
type ManagedEventHubState string

const (
	ManagedEventHubStateNotSpecified = ManagedEventHubState("NotSpecified")
	ManagedEventHubStateDisabled     = ManagedEventHubState("Disabled")
	ManagedEventHubStateEnabled      = ManagedEventHubState("Enabled")
)

func (ManagedEventHubState) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedEventHubState)(nil)).Elem()
}

func (e ManagedEventHubState) ToManagedEventHubStateOutput() ManagedEventHubStateOutput {
	return pulumi.ToOutput(e).(ManagedEventHubStateOutput)
}

func (e ManagedEventHubState) ToManagedEventHubStateOutputWithContext(ctx context.Context) ManagedEventHubStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedEventHubStateOutput)
}

func (e ManagedEventHubState) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return e.ToManagedEventHubStatePtrOutputWithContext(context.Background())
}

func (e ManagedEventHubState) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return ManagedEventHubState(e).ToManagedEventHubStateOutputWithContext(ctx).ToManagedEventHubStatePtrOutputWithContext(ctx)
}

func (e ManagedEventHubState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedEventHubState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedEventHubState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedEventHubState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedEventHubStateOutput struct{ *pulumi.OutputState }

func (ManagedEventHubStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedEventHubState)(nil)).Elem()
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStateOutput() ManagedEventHubStateOutput {
	return o
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStateOutputWithContext(ctx context.Context) ManagedEventHubStateOutput {
	return o
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return o.ToManagedEventHubStatePtrOutputWithContext(context.Background())
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedEventHubState) *ManagedEventHubState {
		return &v
	}).(ManagedEventHubStatePtrOutput)
}

func (o ManagedEventHubStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedEventHubStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedEventHubState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedEventHubStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedEventHubStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedEventHubState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedEventHubStatePtrOutput struct{ *pulumi.OutputState }

func (ManagedEventHubStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedEventHubState)(nil)).Elem()
}

func (o ManagedEventHubStatePtrOutput) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return o
}

func (o ManagedEventHubStatePtrOutput) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return o
}

func (o ManagedEventHubStatePtrOutput) Elem() ManagedEventHubStateOutput {
	return o.ApplyT(func(v *ManagedEventHubState) ManagedEventHubState {
		if v != nil {
			return *v
		}
		var ret ManagedEventHubState
		return ret
	}).(ManagedEventHubStateOutput)
}

func (o ManagedEventHubStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedEventHubStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedEventHubState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedEventHubStateInput is an input type that accepts values of the ManagedEventHubState enum
// A concrete instance of `ManagedEventHubStateInput` can be one of the following:
//
//	ManagedEventHubStateNotSpecified
//	ManagedEventHubStateDisabled
//	ManagedEventHubStateEnabled
type ManagedEventHubStateInput interface {
	pulumi.Input

	ToManagedEventHubStateOutput() ManagedEventHubStateOutput
	ToManagedEventHubStateOutputWithContext(context.Context) ManagedEventHubStateOutput
}

var managedEventHubStatePtrType = reflect.TypeOf((**ManagedEventHubState)(nil)).Elem()

type ManagedEventHubStatePtrInput interface {
	pulumi.Input

	ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput
	ToManagedEventHubStatePtrOutputWithContext(context.Context) ManagedEventHubStatePtrOutput
}

type managedEventHubStatePtr string

func ManagedEventHubStatePtr(v string) ManagedEventHubStatePtrInput {
	return (*managedEventHubStatePtr)(&v)
}

func (*managedEventHubStatePtr) ElementType() reflect.Type {
	return managedEventHubStatePtrType
}

func (in *managedEventHubStatePtr) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return pulumi.ToOutput(in).(ManagedEventHubStatePtrOutput)
}

func (in *managedEventHubStatePtr) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedEventHubStatePtrOutput)
}

func (in *managedEventHubStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedEventHubState] {
	return pulumix.Output[*ManagedEventHubState]{
		OutputState: in.ToManagedEventHubStatePtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the public network access for managed resources.
type ManagedResourcesPublicNetworkAccess string

const (
	ManagedResourcesPublicNetworkAccessNotSpecified = ManagedResourcesPublicNetworkAccess("NotSpecified")
	ManagedResourcesPublicNetworkAccessEnabled      = ManagedResourcesPublicNetworkAccess("Enabled")
	ManagedResourcesPublicNetworkAccessDisabled     = ManagedResourcesPublicNetworkAccess("Disabled")
)

func (ManagedResourcesPublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourcesPublicNetworkAccess)(nil)).Elem()
}

func (e ManagedResourcesPublicNetworkAccess) ToManagedResourcesPublicNetworkAccessOutput() ManagedResourcesPublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(ManagedResourcesPublicNetworkAccessOutput)
}

func (e ManagedResourcesPublicNetworkAccess) ToManagedResourcesPublicNetworkAccessOutputWithContext(ctx context.Context) ManagedResourcesPublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedResourcesPublicNetworkAccessOutput)
}

func (e ManagedResourcesPublicNetworkAccess) ToManagedResourcesPublicNetworkAccessPtrOutput() ManagedResourcesPublicNetworkAccessPtrOutput {
	return e.ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e ManagedResourcesPublicNetworkAccess) ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(ctx context.Context) ManagedResourcesPublicNetworkAccessPtrOutput {
	return ManagedResourcesPublicNetworkAccess(e).ToManagedResourcesPublicNetworkAccessOutputWithContext(ctx).ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e ManagedResourcesPublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedResourcesPublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedResourcesPublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedResourcesPublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedResourcesPublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (ManagedResourcesPublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourcesPublicNetworkAccess)(nil)).Elem()
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToManagedResourcesPublicNetworkAccessOutput() ManagedResourcesPublicNetworkAccessOutput {
	return o
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToManagedResourcesPublicNetworkAccessOutputWithContext(ctx context.Context) ManagedResourcesPublicNetworkAccessOutput {
	return o
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToManagedResourcesPublicNetworkAccessPtrOutput() ManagedResourcesPublicNetworkAccessPtrOutput {
	return o.ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(ctx context.Context) ManagedResourcesPublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedResourcesPublicNetworkAccess) *ManagedResourcesPublicNetworkAccess {
		return &v
	}).(ManagedResourcesPublicNetworkAccessPtrOutput)
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedResourcesPublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedResourcesPublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedResourcesPublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedResourcesPublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (ManagedResourcesPublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourcesPublicNetworkAccess)(nil)).Elem()
}

func (o ManagedResourcesPublicNetworkAccessPtrOutput) ToManagedResourcesPublicNetworkAccessPtrOutput() ManagedResourcesPublicNetworkAccessPtrOutput {
	return o
}

func (o ManagedResourcesPublicNetworkAccessPtrOutput) ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(ctx context.Context) ManagedResourcesPublicNetworkAccessPtrOutput {
	return o
}

func (o ManagedResourcesPublicNetworkAccessPtrOutput) Elem() ManagedResourcesPublicNetworkAccessOutput {
	return o.ApplyT(func(v *ManagedResourcesPublicNetworkAccess) ManagedResourcesPublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret ManagedResourcesPublicNetworkAccess
		return ret
	}).(ManagedResourcesPublicNetworkAccessOutput)
}

func (o ManagedResourcesPublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedResourcesPublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedResourcesPublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedResourcesPublicNetworkAccessInput is an input type that accepts values of the ManagedResourcesPublicNetworkAccess enum
// A concrete instance of `ManagedResourcesPublicNetworkAccessInput` can be one of the following:
//
//	ManagedResourcesPublicNetworkAccessNotSpecified
//	ManagedResourcesPublicNetworkAccessEnabled
//	ManagedResourcesPublicNetworkAccessDisabled
type ManagedResourcesPublicNetworkAccessInput interface {
	pulumi.Input

	ToManagedResourcesPublicNetworkAccessOutput() ManagedResourcesPublicNetworkAccessOutput
	ToManagedResourcesPublicNetworkAccessOutputWithContext(context.Context) ManagedResourcesPublicNetworkAccessOutput
}

var managedResourcesPublicNetworkAccessPtrType = reflect.TypeOf((**ManagedResourcesPublicNetworkAccess)(nil)).Elem()

type ManagedResourcesPublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToManagedResourcesPublicNetworkAccessPtrOutput() ManagedResourcesPublicNetworkAccessPtrOutput
	ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(context.Context) ManagedResourcesPublicNetworkAccessPtrOutput
}

type managedResourcesPublicNetworkAccessPtr string

func ManagedResourcesPublicNetworkAccessPtr(v string) ManagedResourcesPublicNetworkAccessPtrInput {
	return (*managedResourcesPublicNetworkAccessPtr)(&v)
}

func (*managedResourcesPublicNetworkAccessPtr) ElementType() reflect.Type {
	return managedResourcesPublicNetworkAccessPtrType
}

func (in *managedResourcesPublicNetworkAccessPtr) ToManagedResourcesPublicNetworkAccessPtrOutput() ManagedResourcesPublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(ManagedResourcesPublicNetworkAccessPtrOutput)
}

func (in *managedResourcesPublicNetworkAccessPtr) ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(ctx context.Context) ManagedResourcesPublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedResourcesPublicNetworkAccessPtrOutput)
}

func (in *managedResourcesPublicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedResourcesPublicNetworkAccess] {
	return pulumix.Output[*ManagedResourcesPublicNetworkAccess]{
		OutputState: in.ToManagedResourcesPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// Gets or sets the public network access.
type PublicNetworkAccess string

const (
	PublicNetworkAccessNotSpecified = PublicNetworkAccess("NotSpecified")
	PublicNetworkAccessEnabled      = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled     = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessNotSpecified
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*PublicNetworkAccess] {
	return pulumix.Output[*PublicNetworkAccess]{
		OutputState: in.ToPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// The status.
type Status string

const (
	StatusUnknown      = Status("Unknown")
	StatusPending      = Status("Pending")
	StatusApproved     = Status("Approved")
	StatusRejected     = Status("Rejected")
	StatusDisconnected = Status("Disconnected")
)

func (Status) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (e Status) ToStatusOutput() StatusOutput {
	return pulumi.ToOutput(e).(StatusOutput)
}

func (e Status) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusOutput)
}

func (e Status) ToStatusPtrOutput() StatusPtrOutput {
	return e.ToStatusPtrOutputWithContext(context.Background())
}

func (e Status) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return Status(e).ToStatusOutputWithContext(ctx).ToStatusPtrOutputWithContext(ctx)
}

func (e Status) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Status) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusInput is an input type that accepts values of the Status enum
// A concrete instance of `StatusInput` can be one of the following:
//
//	StatusUnknown
//	StatusPending
//	StatusApproved
//	StatusRejected
//	StatusDisconnected
type StatusInput interface {
	pulumi.Input

	ToStatusOutput() StatusOutput
	ToStatusOutputWithContext(context.Context) StatusOutput
}

var statusPtrType = reflect.TypeOf((**Status)(nil)).Elem()

type StatusPtrInput interface {
	pulumi.Input

	ToStatusPtrOutput() StatusPtrOutput
	ToStatusPtrOutputWithContext(context.Context) StatusPtrOutput
}

type statusPtr string

func StatusPtr(v string) StatusPtrInput {
	return (*statusPtr)(&v)
}

func (*statusPtr) ElementType() reflect.Type {
	return statusPtrType
}

func (in *statusPtr) ToStatusPtrOutput() StatusPtrOutput {
	return pulumi.ToOutput(in).(StatusPtrOutput)
}

func (in *statusPtr) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusPtrOutput)
}

func (in *statusPtr) ToOutput(ctx context.Context) pulumix.Output[*Status] {
	return pulumix.Output[*Status]{
		OutputState: in.ToStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Identity Type
type Type string

const (
	TypeNone           = Type("None")
	TypeSystemAssigned = Type("SystemAssigned")
	TypeUserAssigned   = Type("UserAssigned")
)

func (Type) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (e Type) ToTypeOutput() TypeOutput {
	return pulumi.ToOutput(e).(TypeOutput)
}

func (e Type) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypeOutput)
}

func (e Type) ToTypePtrOutput() TypePtrOutput {
	return e.ToTypePtrOutputWithContext(context.Background())
}

func (e Type) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return Type(e).ToTypeOutputWithContext(ctx).ToTypePtrOutputWithContext(ctx)
}

func (e Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypeOutput struct{ *pulumi.OutputState }

func (TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (o TypeOutput) ToTypeOutput() TypeOutput {
	return o
}

func (o TypeOutput) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return o
}

func (o TypeOutput) ToTypePtrOutput() TypePtrOutput {
	return o.ToTypePtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Type) *Type {
		return &v
	}).(TypePtrOutput)
}

func (o TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePtrOutput struct{ *pulumi.OutputState }

func (TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Type)(nil)).Elem()
}

func (o TypePtrOutput) ToTypePtrOutput() TypePtrOutput {
	return o
}

func (o TypePtrOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o
}

func (o TypePtrOutput) Elem() TypeOutput {
	return o.ApplyT(func(v *Type) Type {
		if v != nil {
			return *v
		}
		var ret Type
		return ret
	}).(TypeOutput)
}

func (o TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypeInput is an input type that accepts values of the Type enum
// A concrete instance of `TypeInput` can be one of the following:
//
//	TypeNone
//	TypeSystemAssigned
//	TypeUserAssigned
type TypeInput interface {
	pulumi.Input

	ToTypeOutput() TypeOutput
	ToTypeOutputWithContext(context.Context) TypeOutput
}

var typePtrType = reflect.TypeOf((**Type)(nil)).Elem()

type TypePtrInput interface {
	pulumi.Input

	ToTypePtrOutput() TypePtrOutput
	ToTypePtrOutputWithContext(context.Context) TypePtrOutput
}

type typePtr string

func TypePtr(v string) TypePtrInput {
	return (*typePtr)(&v)
}

func (*typePtr) ElementType() reflect.Type {
	return typePtrType
}

func (in *typePtr) ToTypePtrOutput() TypePtrOutput {
	return pulumi.ToOutput(in).(TypePtrOutput)
}

func (in *typePtr) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePtrOutput)
}

func (in *typePtr) ToOutput(ctx context.Context) pulumix.Output[*Type] {
	return pulumix.Output[*Type]{
		OutputState: in.ToTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(CredentialsTypeOutput{})
	pulumi.RegisterOutputType(CredentialsTypePtrOutput{})
	pulumi.RegisterOutputType(EventHubTypeOutput{})
	pulumi.RegisterOutputType(EventHubTypePtrOutput{})
	pulumi.RegisterOutputType(EventStreamingStateOutput{})
	pulumi.RegisterOutputType(EventStreamingStatePtrOutput{})
	pulumi.RegisterOutputType(EventStreamingTypeOutput{})
	pulumi.RegisterOutputType(EventStreamingTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedEventHubStateOutput{})
	pulumi.RegisterOutputType(ManagedEventHubStatePtrOutput{})
	pulumi.RegisterOutputType(ManagedResourcesPublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(ManagedResourcesPublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(TypeOutput{})
	pulumi.RegisterOutputType(TypePtrOutput{})
}
