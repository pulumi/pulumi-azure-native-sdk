// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details from a list of feature names.
func ListFeatureAccount(ctx *pulumi.Context, args *ListFeatureAccountArgs, opts ...pulumi.InvokeOption) (*ListFeatureAccountResult, error) {
	var rv ListFeatureAccountResult
	err := ctx.Invoke("azure-native:purview/v20211201:listFeatureAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListFeatureAccountArgs struct {
	// The name of the account.
	AccountName string `pulumi:"accountName"`
	// Set of features
	Features []string `pulumi:"features"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// List of features with enabled status
type ListFeatureAccountResult struct {
	// Features with enabled status
	Features map[string]bool `pulumi:"features"`
}

func ListFeatureAccountOutput(ctx *pulumi.Context, args ListFeatureAccountOutputArgs, opts ...pulumi.InvokeOption) ListFeatureAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListFeatureAccountResult, error) {
			args := v.(ListFeatureAccountArgs)
			r, err := ListFeatureAccount(ctx, &args, opts...)
			var s ListFeatureAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListFeatureAccountResultOutput)
}

type ListFeatureAccountOutputArgs struct {
	// The name of the account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Set of features
	Features pulumi.StringArrayInput `pulumi:"features"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListFeatureAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListFeatureAccountArgs)(nil)).Elem()
}

// List of features with enabled status
type ListFeatureAccountResultOutput struct{ *pulumi.OutputState }

func (ListFeatureAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListFeatureAccountResult)(nil)).Elem()
}

func (o ListFeatureAccountResultOutput) ToListFeatureAccountResultOutput() ListFeatureAccountResultOutput {
	return o
}

func (o ListFeatureAccountResultOutput) ToListFeatureAccountResultOutputWithContext(ctx context.Context) ListFeatureAccountResultOutput {
	return o
}

// Features with enabled status
func (o ListFeatureAccountResultOutput) Features() pulumi.BoolMapOutput {
	return o.ApplyT(func(v ListFeatureAccountResult) map[string]bool { return v.Features }).(pulumi.BoolMapOutput)
}

func init() {
	pulumi.RegisterOutputType(ListFeatureAccountResultOutput{})
}
