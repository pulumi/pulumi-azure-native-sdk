// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets or sets the sku name.
type AccountSkuName string

const (
	AccountSkuNameStandard = AccountSkuName("Standard")
	AccountSkuNameFree     = AccountSkuName("Free")
)

func (AccountSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountSkuName)(nil)).Elem()
}

func (e AccountSkuName) ToAccountSkuNameOutput() AccountSkuNameOutput {
	return pulumi.ToOutput(e).(AccountSkuNameOutput)
}

func (e AccountSkuName) ToAccountSkuNameOutputWithContext(ctx context.Context) AccountSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccountSkuNameOutput)
}

func (e AccountSkuName) ToAccountSkuNamePtrOutput() AccountSkuNamePtrOutput {
	return e.ToAccountSkuNamePtrOutputWithContext(context.Background())
}

func (e AccountSkuName) ToAccountSkuNamePtrOutputWithContext(ctx context.Context) AccountSkuNamePtrOutput {
	return AccountSkuName(e).ToAccountSkuNameOutputWithContext(ctx).ToAccountSkuNamePtrOutputWithContext(ctx)
}

func (e AccountSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccountSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccountSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccountSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccountSkuNameOutput struct{ *pulumi.OutputState }

func (AccountSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountSkuName)(nil)).Elem()
}

func (o AccountSkuNameOutput) ToAccountSkuNameOutput() AccountSkuNameOutput {
	return o
}

func (o AccountSkuNameOutput) ToAccountSkuNameOutputWithContext(ctx context.Context) AccountSkuNameOutput {
	return o
}

func (o AccountSkuNameOutput) ToAccountSkuNamePtrOutput() AccountSkuNamePtrOutput {
	return o.ToAccountSkuNamePtrOutputWithContext(context.Background())
}

func (o AccountSkuNameOutput) ToAccountSkuNamePtrOutputWithContext(ctx context.Context) AccountSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountSkuName) *AccountSkuName {
		return &v
	}).(AccountSkuNamePtrOutput)
}

func (o AccountSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccountSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccountSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccountSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccountSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccountSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccountSkuNamePtrOutput struct{ *pulumi.OutputState }

func (AccountSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountSkuName)(nil)).Elem()
}

func (o AccountSkuNamePtrOutput) ToAccountSkuNamePtrOutput() AccountSkuNamePtrOutput {
	return o
}

func (o AccountSkuNamePtrOutput) ToAccountSkuNamePtrOutputWithContext(ctx context.Context) AccountSkuNamePtrOutput {
	return o
}

func (o AccountSkuNamePtrOutput) Elem() AccountSkuNameOutput {
	return o.ApplyT(func(v *AccountSkuName) AccountSkuName {
		if v != nil {
			return *v
		}
		var ret AccountSkuName
		return ret
	}).(AccountSkuNameOutput)
}

func (o AccountSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccountSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccountSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccountSkuNameInput is an input type that accepts values of the AccountSkuName enum
// A concrete instance of `AccountSkuNameInput` can be one of the following:
//
//	AccountSkuNameStandard
//	AccountSkuNameFree
type AccountSkuNameInput interface {
	pulumi.Input

	ToAccountSkuNameOutput() AccountSkuNameOutput
	ToAccountSkuNameOutputWithContext(context.Context) AccountSkuNameOutput
}

var accountSkuNamePtrType = reflect.TypeOf((**AccountSkuName)(nil)).Elem()

type AccountSkuNamePtrInput interface {
	pulumi.Input

	ToAccountSkuNamePtrOutput() AccountSkuNamePtrOutput
	ToAccountSkuNamePtrOutputWithContext(context.Context) AccountSkuNamePtrOutput
}

type accountSkuNamePtr string

func AccountSkuNamePtr(v string) AccountSkuNamePtrInput {
	return (*accountSkuNamePtr)(&v)
}

func (*accountSkuNamePtr) ElementType() reflect.Type {
	return accountSkuNamePtrType
}

func (in *accountSkuNamePtr) ToAccountSkuNamePtrOutput() AccountSkuNamePtrOutput {
	return pulumi.ToOutput(in).(AccountSkuNamePtrOutput)
}

func (in *accountSkuNamePtr) ToAccountSkuNamePtrOutputWithContext(ctx context.Context) AccountSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccountSkuNamePtrOutput)
}

// The event hub type.
type EventHubType string

const (
	EventHubTypeNotification = EventHubType("Notification")
	EventHubTypeHook         = EventHubType("Hook")
)

func (EventHubType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (e EventHubType) ToEventHubTypeOutput() EventHubTypeOutput {
	return pulumi.ToOutput(e).(EventHubTypeOutput)
}

func (e EventHubType) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventHubTypeOutput)
}

func (e EventHubType) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return e.ToEventHubTypePtrOutputWithContext(context.Background())
}

func (e EventHubType) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return EventHubType(e).ToEventHubTypeOutputWithContext(ctx).ToEventHubTypePtrOutputWithContext(ctx)
}

func (e EventHubType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventHubType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventHubType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventHubType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventHubTypeOutput struct{ *pulumi.OutputState }

func (EventHubTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (o EventHubTypeOutput) ToEventHubTypeOutput() EventHubTypeOutput {
	return o
}

func (o EventHubTypeOutput) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return o
}

func (o EventHubTypeOutput) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return o.ToEventHubTypePtrOutputWithContext(context.Background())
}

func (o EventHubTypeOutput) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventHubType) *EventHubType {
		return &v
	}).(EventHubTypePtrOutput)
}

func (o EventHubTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventHubTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventHubType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventHubTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventHubTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventHubType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventHubTypePtrOutput struct{ *pulumi.OutputState }

func (EventHubTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubType)(nil)).Elem()
}

func (o EventHubTypePtrOutput) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return o
}

func (o EventHubTypePtrOutput) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return o
}

func (o EventHubTypePtrOutput) Elem() EventHubTypeOutput {
	return o.ApplyT(func(v *EventHubType) EventHubType {
		if v != nil {
			return *v
		}
		var ret EventHubType
		return ret
	}).(EventHubTypeOutput)
}

func (o EventHubTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventHubTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventHubType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventHubTypeInput is an input type that accepts values of the EventHubType enum
// A concrete instance of `EventHubTypeInput` can be one of the following:
//
//	EventHubTypeNotification
//	EventHubTypeHook
type EventHubTypeInput interface {
	pulumi.Input

	ToEventHubTypeOutput() EventHubTypeOutput
	ToEventHubTypeOutputWithContext(context.Context) EventHubTypeOutput
}

var eventHubTypePtrType = reflect.TypeOf((**EventHubType)(nil)).Elem()

type EventHubTypePtrInput interface {
	pulumi.Input

	ToEventHubTypePtrOutput() EventHubTypePtrOutput
	ToEventHubTypePtrOutputWithContext(context.Context) EventHubTypePtrOutput
}

type eventHubTypePtr string

func EventHubTypePtr(v string) EventHubTypePtrInput {
	return (*eventHubTypePtr)(&v)
}

func (*eventHubTypePtr) ElementType() reflect.Type {
	return eventHubTypePtrType
}

func (in *eventHubTypePtr) ToEventHubTypePtrOutput() EventHubTypePtrOutput {
	return pulumi.ToOutput(in).(EventHubTypePtrOutput)
}

func (in *eventHubTypePtr) ToEventHubTypePtrOutputWithContext(ctx context.Context) EventHubTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventHubTypePtrOutput)
}

// The state of the event streaming service
type EventStreamingState string

const (
	EventStreamingStateDisabled = EventStreamingState("Disabled")
	EventStreamingStateEnabled  = EventStreamingState("Enabled")
)

func (EventStreamingState) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingState)(nil)).Elem()
}

func (e EventStreamingState) ToEventStreamingStateOutput() EventStreamingStateOutput {
	return pulumi.ToOutput(e).(EventStreamingStateOutput)
}

func (e EventStreamingState) ToEventStreamingStateOutputWithContext(ctx context.Context) EventStreamingStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventStreamingStateOutput)
}

func (e EventStreamingState) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return e.ToEventStreamingStatePtrOutputWithContext(context.Background())
}

func (e EventStreamingState) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return EventStreamingState(e).ToEventStreamingStateOutputWithContext(ctx).ToEventStreamingStatePtrOutputWithContext(ctx)
}

func (e EventStreamingState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventStreamingState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventStreamingStateOutput struct{ *pulumi.OutputState }

func (EventStreamingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingState)(nil)).Elem()
}

func (o EventStreamingStateOutput) ToEventStreamingStateOutput() EventStreamingStateOutput {
	return o
}

func (o EventStreamingStateOutput) ToEventStreamingStateOutputWithContext(ctx context.Context) EventStreamingStateOutput {
	return o
}

func (o EventStreamingStateOutput) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return o.ToEventStreamingStatePtrOutputWithContext(context.Background())
}

func (o EventStreamingStateOutput) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventStreamingState) *EventStreamingState {
		return &v
	}).(EventStreamingStatePtrOutput)
}

func (o EventStreamingStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventStreamingStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventStreamingStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventStreamingStatePtrOutput struct{ *pulumi.OutputState }

func (EventStreamingStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventStreamingState)(nil)).Elem()
}

func (o EventStreamingStatePtrOutput) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return o
}

func (o EventStreamingStatePtrOutput) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return o
}

func (o EventStreamingStatePtrOutput) Elem() EventStreamingStateOutput {
	return o.ApplyT(func(v *EventStreamingState) EventStreamingState {
		if v != nil {
			return *v
		}
		var ret EventStreamingState
		return ret
	}).(EventStreamingStateOutput)
}

func (o EventStreamingStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventStreamingState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventStreamingStateInput is an input type that accepts values of the EventStreamingState enum
// A concrete instance of `EventStreamingStateInput` can be one of the following:
//
//	EventStreamingStateDisabled
//	EventStreamingStateEnabled
type EventStreamingStateInput interface {
	pulumi.Input

	ToEventStreamingStateOutput() EventStreamingStateOutput
	ToEventStreamingStateOutputWithContext(context.Context) EventStreamingStateOutput
}

var eventStreamingStatePtrType = reflect.TypeOf((**EventStreamingState)(nil)).Elem()

type EventStreamingStatePtrInput interface {
	pulumi.Input

	ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput
	ToEventStreamingStatePtrOutputWithContext(context.Context) EventStreamingStatePtrOutput
}

type eventStreamingStatePtr string

func EventStreamingStatePtr(v string) EventStreamingStatePtrInput {
	return (*eventStreamingStatePtr)(&v)
}

func (*eventStreamingStatePtr) ElementType() reflect.Type {
	return eventStreamingStatePtrType
}

func (in *eventStreamingStatePtr) ToEventStreamingStatePtrOutput() EventStreamingStatePtrOutput {
	return pulumi.ToOutput(in).(EventStreamingStatePtrOutput)
}

func (in *eventStreamingStatePtr) ToEventStreamingStatePtrOutputWithContext(ctx context.Context) EventStreamingStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventStreamingStatePtrOutput)
}

// The event streaming service type
type EventStreamingType string

const (
	EventStreamingTypeNone    = EventStreamingType("None")
	EventStreamingTypeManaged = EventStreamingType("Managed")
	EventStreamingTypeAzure   = EventStreamingType("Azure")
)

func (EventStreamingType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingType)(nil)).Elem()
}

func (e EventStreamingType) ToEventStreamingTypeOutput() EventStreamingTypeOutput {
	return pulumi.ToOutput(e).(EventStreamingTypeOutput)
}

func (e EventStreamingType) ToEventStreamingTypeOutputWithContext(ctx context.Context) EventStreamingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventStreamingTypeOutput)
}

func (e EventStreamingType) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return e.ToEventStreamingTypePtrOutputWithContext(context.Background())
}

func (e EventStreamingType) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return EventStreamingType(e).ToEventStreamingTypeOutputWithContext(ctx).ToEventStreamingTypePtrOutputWithContext(ctx)
}

func (e EventStreamingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventStreamingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventStreamingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventStreamingTypeOutput struct{ *pulumi.OutputState }

func (EventStreamingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventStreamingType)(nil)).Elem()
}

func (o EventStreamingTypeOutput) ToEventStreamingTypeOutput() EventStreamingTypeOutput {
	return o
}

func (o EventStreamingTypeOutput) ToEventStreamingTypeOutputWithContext(ctx context.Context) EventStreamingTypeOutput {
	return o
}

func (o EventStreamingTypeOutput) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return o.ToEventStreamingTypePtrOutputWithContext(context.Background())
}

func (o EventStreamingTypeOutput) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventStreamingType) *EventStreamingType {
		return &v
	}).(EventStreamingTypePtrOutput)
}

func (o EventStreamingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventStreamingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventStreamingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventStreamingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventStreamingTypePtrOutput struct{ *pulumi.OutputState }

func (EventStreamingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventStreamingType)(nil)).Elem()
}

func (o EventStreamingTypePtrOutput) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return o
}

func (o EventStreamingTypePtrOutput) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return o
}

func (o EventStreamingTypePtrOutput) Elem() EventStreamingTypeOutput {
	return o.ApplyT(func(v *EventStreamingType) EventStreamingType {
		if v != nil {
			return *v
		}
		var ret EventStreamingType
		return ret
	}).(EventStreamingTypeOutput)
}

func (o EventStreamingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventStreamingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventStreamingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventStreamingTypeInput is an input type that accepts values of the EventStreamingType enum
// A concrete instance of `EventStreamingTypeInput` can be one of the following:
//
//	EventStreamingTypeNone
//	EventStreamingTypeManaged
//	EventStreamingTypeAzure
type EventStreamingTypeInput interface {
	pulumi.Input

	ToEventStreamingTypeOutput() EventStreamingTypeOutput
	ToEventStreamingTypeOutputWithContext(context.Context) EventStreamingTypeOutput
}

var eventStreamingTypePtrType = reflect.TypeOf((**EventStreamingType)(nil)).Elem()

type EventStreamingTypePtrInput interface {
	pulumi.Input

	ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput
	ToEventStreamingTypePtrOutputWithContext(context.Context) EventStreamingTypePtrOutput
}

type eventStreamingTypePtr string

func EventStreamingTypePtr(v string) EventStreamingTypePtrInput {
	return (*eventStreamingTypePtr)(&v)
}

func (*eventStreamingTypePtr) ElementType() reflect.Type {
	return eventStreamingTypePtrType
}

func (in *eventStreamingTypePtr) ToEventStreamingTypePtrOutput() EventStreamingTypePtrOutput {
	return pulumi.ToOutput(in).(EventStreamingTypePtrOutput)
}

func (in *eventStreamingTypePtr) ToEventStreamingTypePtrOutputWithContext(ctx context.Context) EventStreamingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventStreamingTypePtrOutput)
}

// Identity Type.
type KafkaConfigurationIdentityType string

const (
	KafkaConfigurationIdentityTypeNone           = KafkaConfigurationIdentityType("None")
	KafkaConfigurationIdentityTypeSystemAssigned = KafkaConfigurationIdentityType("SystemAssigned")
	KafkaConfigurationIdentityTypeUserAssigned   = KafkaConfigurationIdentityType("UserAssigned")
)

func (KafkaConfigurationIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConfigurationIdentityType)(nil)).Elem()
}

func (e KafkaConfigurationIdentityType) ToKafkaConfigurationIdentityTypeOutput() KafkaConfigurationIdentityTypeOutput {
	return pulumi.ToOutput(e).(KafkaConfigurationIdentityTypeOutput)
}

func (e KafkaConfigurationIdentityType) ToKafkaConfigurationIdentityTypeOutputWithContext(ctx context.Context) KafkaConfigurationIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KafkaConfigurationIdentityTypeOutput)
}

func (e KafkaConfigurationIdentityType) ToKafkaConfigurationIdentityTypePtrOutput() KafkaConfigurationIdentityTypePtrOutput {
	return e.ToKafkaConfigurationIdentityTypePtrOutputWithContext(context.Background())
}

func (e KafkaConfigurationIdentityType) ToKafkaConfigurationIdentityTypePtrOutputWithContext(ctx context.Context) KafkaConfigurationIdentityTypePtrOutput {
	return KafkaConfigurationIdentityType(e).ToKafkaConfigurationIdentityTypeOutputWithContext(ctx).ToKafkaConfigurationIdentityTypePtrOutputWithContext(ctx)
}

func (e KafkaConfigurationIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KafkaConfigurationIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KafkaConfigurationIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KafkaConfigurationIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KafkaConfigurationIdentityTypeOutput struct{ *pulumi.OutputState }

func (KafkaConfigurationIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConfigurationIdentityType)(nil)).Elem()
}

func (o KafkaConfigurationIdentityTypeOutput) ToKafkaConfigurationIdentityTypeOutput() KafkaConfigurationIdentityTypeOutput {
	return o
}

func (o KafkaConfigurationIdentityTypeOutput) ToKafkaConfigurationIdentityTypeOutputWithContext(ctx context.Context) KafkaConfigurationIdentityTypeOutput {
	return o
}

func (o KafkaConfigurationIdentityTypeOutput) ToKafkaConfigurationIdentityTypePtrOutput() KafkaConfigurationIdentityTypePtrOutput {
	return o.ToKafkaConfigurationIdentityTypePtrOutputWithContext(context.Background())
}

func (o KafkaConfigurationIdentityTypeOutput) ToKafkaConfigurationIdentityTypePtrOutputWithContext(ctx context.Context) KafkaConfigurationIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaConfigurationIdentityType) *KafkaConfigurationIdentityType {
		return &v
	}).(KafkaConfigurationIdentityTypePtrOutput)
}

func (o KafkaConfigurationIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KafkaConfigurationIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KafkaConfigurationIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KafkaConfigurationIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KafkaConfigurationIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KafkaConfigurationIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KafkaConfigurationIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (KafkaConfigurationIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConfigurationIdentityType)(nil)).Elem()
}

func (o KafkaConfigurationIdentityTypePtrOutput) ToKafkaConfigurationIdentityTypePtrOutput() KafkaConfigurationIdentityTypePtrOutput {
	return o
}

func (o KafkaConfigurationIdentityTypePtrOutput) ToKafkaConfigurationIdentityTypePtrOutputWithContext(ctx context.Context) KafkaConfigurationIdentityTypePtrOutput {
	return o
}

func (o KafkaConfigurationIdentityTypePtrOutput) Elem() KafkaConfigurationIdentityTypeOutput {
	return o.ApplyT(func(v *KafkaConfigurationIdentityType) KafkaConfigurationIdentityType {
		if v != nil {
			return *v
		}
		var ret KafkaConfigurationIdentityType
		return ret
	}).(KafkaConfigurationIdentityTypeOutput)
}

func (o KafkaConfigurationIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KafkaConfigurationIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KafkaConfigurationIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KafkaConfigurationIdentityTypeInput is an input type that accepts values of the KafkaConfigurationIdentityType enum
// A concrete instance of `KafkaConfigurationIdentityTypeInput` can be one of the following:
//
//	KafkaConfigurationIdentityTypeNone
//	KafkaConfigurationIdentityTypeSystemAssigned
//	KafkaConfigurationIdentityTypeUserAssigned
type KafkaConfigurationIdentityTypeInput interface {
	pulumi.Input

	ToKafkaConfigurationIdentityTypeOutput() KafkaConfigurationIdentityTypeOutput
	ToKafkaConfigurationIdentityTypeOutputWithContext(context.Context) KafkaConfigurationIdentityTypeOutput
}

var kafkaConfigurationIdentityTypePtrType = reflect.TypeOf((**KafkaConfigurationIdentityType)(nil)).Elem()

type KafkaConfigurationIdentityTypePtrInput interface {
	pulumi.Input

	ToKafkaConfigurationIdentityTypePtrOutput() KafkaConfigurationIdentityTypePtrOutput
	ToKafkaConfigurationIdentityTypePtrOutputWithContext(context.Context) KafkaConfigurationIdentityTypePtrOutput
}

type kafkaConfigurationIdentityTypePtr string

func KafkaConfigurationIdentityTypePtr(v string) KafkaConfigurationIdentityTypePtrInput {
	return (*kafkaConfigurationIdentityTypePtr)(&v)
}

func (*kafkaConfigurationIdentityTypePtr) ElementType() reflect.Type {
	return kafkaConfigurationIdentityTypePtrType
}

func (in *kafkaConfigurationIdentityTypePtr) ToKafkaConfigurationIdentityTypePtrOutput() KafkaConfigurationIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(KafkaConfigurationIdentityTypePtrOutput)
}

func (in *kafkaConfigurationIdentityTypePtr) ToKafkaConfigurationIdentityTypePtrOutputWithContext(ctx context.Context) KafkaConfigurationIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KafkaConfigurationIdentityTypePtrOutput)
}

// Gets or sets the state of managed eventhub. If enabled managed eventhub will be created, if disabled the managed eventhub will be removed.
type ManagedEventHubState string

const (
	ManagedEventHubStateNotSpecified = ManagedEventHubState("NotSpecified")
	ManagedEventHubStateDisabled     = ManagedEventHubState("Disabled")
	ManagedEventHubStateEnabled      = ManagedEventHubState("Enabled")
)

func (ManagedEventHubState) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedEventHubState)(nil)).Elem()
}

func (e ManagedEventHubState) ToManagedEventHubStateOutput() ManagedEventHubStateOutput {
	return pulumi.ToOutput(e).(ManagedEventHubStateOutput)
}

func (e ManagedEventHubState) ToManagedEventHubStateOutputWithContext(ctx context.Context) ManagedEventHubStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedEventHubStateOutput)
}

func (e ManagedEventHubState) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return e.ToManagedEventHubStatePtrOutputWithContext(context.Background())
}

func (e ManagedEventHubState) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return ManagedEventHubState(e).ToManagedEventHubStateOutputWithContext(ctx).ToManagedEventHubStatePtrOutputWithContext(ctx)
}

func (e ManagedEventHubState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedEventHubState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedEventHubState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedEventHubState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedEventHubStateOutput struct{ *pulumi.OutputState }

func (ManagedEventHubStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedEventHubState)(nil)).Elem()
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStateOutput() ManagedEventHubStateOutput {
	return o
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStateOutputWithContext(ctx context.Context) ManagedEventHubStateOutput {
	return o
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return o.ToManagedEventHubStatePtrOutputWithContext(context.Background())
}

func (o ManagedEventHubStateOutput) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedEventHubState) *ManagedEventHubState {
		return &v
	}).(ManagedEventHubStatePtrOutput)
}

func (o ManagedEventHubStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedEventHubStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedEventHubState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedEventHubStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedEventHubStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedEventHubState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedEventHubStatePtrOutput struct{ *pulumi.OutputState }

func (ManagedEventHubStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedEventHubState)(nil)).Elem()
}

func (o ManagedEventHubStatePtrOutput) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return o
}

func (o ManagedEventHubStatePtrOutput) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return o
}

func (o ManagedEventHubStatePtrOutput) Elem() ManagedEventHubStateOutput {
	return o.ApplyT(func(v *ManagedEventHubState) ManagedEventHubState {
		if v != nil {
			return *v
		}
		var ret ManagedEventHubState
		return ret
	}).(ManagedEventHubStateOutput)
}

func (o ManagedEventHubStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedEventHubStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedEventHubState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedEventHubStateInput is an input type that accepts values of the ManagedEventHubState enum
// A concrete instance of `ManagedEventHubStateInput` can be one of the following:
//
//	ManagedEventHubStateNotSpecified
//	ManagedEventHubStateDisabled
//	ManagedEventHubStateEnabled
type ManagedEventHubStateInput interface {
	pulumi.Input

	ToManagedEventHubStateOutput() ManagedEventHubStateOutput
	ToManagedEventHubStateOutputWithContext(context.Context) ManagedEventHubStateOutput
}

var managedEventHubStatePtrType = reflect.TypeOf((**ManagedEventHubState)(nil)).Elem()

type ManagedEventHubStatePtrInput interface {
	pulumi.Input

	ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput
	ToManagedEventHubStatePtrOutputWithContext(context.Context) ManagedEventHubStatePtrOutput
}

type managedEventHubStatePtr string

func ManagedEventHubStatePtr(v string) ManagedEventHubStatePtrInput {
	return (*managedEventHubStatePtr)(&v)
}

func (*managedEventHubStatePtr) ElementType() reflect.Type {
	return managedEventHubStatePtrType
}

func (in *managedEventHubStatePtr) ToManagedEventHubStatePtrOutput() ManagedEventHubStatePtrOutput {
	return pulumi.ToOutput(in).(ManagedEventHubStatePtrOutput)
}

func (in *managedEventHubStatePtr) ToManagedEventHubStatePtrOutputWithContext(ctx context.Context) ManagedEventHubStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedEventHubStatePtrOutput)
}

// Identity Type
type ManagedIdentityType string

const (
	ManagedIdentityTypeNone           = ManagedIdentityType("None")
	ManagedIdentityTypeSystemAssigned = ManagedIdentityType("SystemAssigned")
	ManagedIdentityTypeUserAssigned   = ManagedIdentityType("UserAssigned")
)

func (ManagedIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return e.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return ManagedIdentityType(e).ToManagedIdentityTypeOutputWithContext(ctx).ToManagedIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityType) *ManagedIdentityType {
		return &v
	}).(ManagedIdentityTypePtrOutput)
}

func (o ManagedIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) Elem() ManagedIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedIdentityType) ManagedIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityType
		return ret
	}).(ManagedIdentityTypeOutput)
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedIdentityTypeInput is an input type that accepts values of the ManagedIdentityType enum
// A concrete instance of `ManagedIdentityTypeInput` can be one of the following:
//
//	ManagedIdentityTypeNone
//	ManagedIdentityTypeSystemAssigned
//	ManagedIdentityTypeUserAssigned
type ManagedIdentityTypeInput interface {
	pulumi.Input

	ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput
	ToManagedIdentityTypeOutputWithContext(context.Context) ManagedIdentityTypeOutput
}

var managedIdentityTypePtrType = reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()

type ManagedIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput
	ToManagedIdentityTypePtrOutputWithContext(context.Context) ManagedIdentityTypePtrOutput
}

type managedIdentityTypePtr string

func ManagedIdentityTypePtr(v string) ManagedIdentityTypePtrInput {
	return (*managedIdentityTypePtr)(&v)
}

func (*managedIdentityTypePtr) ElementType() reflect.Type {
	return managedIdentityTypePtrType
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedIdentityTypePtrOutput)
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedIdentityTypePtrOutput)
}

// The status.
type PrivateEndpointConnectionStatus string

const (
	PrivateEndpointConnectionStatusUnknown      = PrivateEndpointConnectionStatus("Unknown")
	PrivateEndpointConnectionStatusPending      = PrivateEndpointConnectionStatus("Pending")
	PrivateEndpointConnectionStatusApproved     = PrivateEndpointConnectionStatus("Approved")
	PrivateEndpointConnectionStatusRejected     = PrivateEndpointConnectionStatus("Rejected")
	PrivateEndpointConnectionStatusDisconnected = PrivateEndpointConnectionStatus("Disconnected")
)

func (PrivateEndpointConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointConnectionStatus) ToPrivateEndpointConnectionStatusOutput() PrivateEndpointConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointConnectionStatusOutput)
}

func (e PrivateEndpointConnectionStatus) ToPrivateEndpointConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointConnectionStatusOutput)
}

func (e PrivateEndpointConnectionStatus) ToPrivateEndpointConnectionStatusPtrOutput() PrivateEndpointConnectionStatusPtrOutput {
	return e.ToPrivateEndpointConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointConnectionStatus) ToPrivateEndpointConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionStatusPtrOutput {
	return PrivateEndpointConnectionStatus(e).ToPrivateEndpointConnectionStatusOutputWithContext(ctx).ToPrivateEndpointConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointConnectionStatusOutput) ToPrivateEndpointConnectionStatusOutput() PrivateEndpointConnectionStatusOutput {
	return o
}

func (o PrivateEndpointConnectionStatusOutput) ToPrivateEndpointConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointConnectionStatusOutput {
	return o
}

func (o PrivateEndpointConnectionStatusOutput) ToPrivateEndpointConnectionStatusPtrOutput() PrivateEndpointConnectionStatusPtrOutput {
	return o.ToPrivateEndpointConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionStatusOutput) ToPrivateEndpointConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionStatus) *PrivateEndpointConnectionStatus {
		return &v
	}).(PrivateEndpointConnectionStatusPtrOutput)
}

func (o PrivateEndpointConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointConnectionStatusPtrOutput) ToPrivateEndpointConnectionStatusPtrOutput() PrivateEndpointConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointConnectionStatusPtrOutput) ToPrivateEndpointConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointConnectionStatusPtrOutput) Elem() PrivateEndpointConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionStatus) PrivateEndpointConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionStatus
		return ret
	}).(PrivateEndpointConnectionStatusOutput)
}

func (o PrivateEndpointConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointConnectionStatusInput is an input type that accepts values of the PrivateEndpointConnectionStatus enum
// A concrete instance of `PrivateEndpointConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointConnectionStatusUnknown
//	PrivateEndpointConnectionStatusPending
//	PrivateEndpointConnectionStatusApproved
//	PrivateEndpointConnectionStatusRejected
//	PrivateEndpointConnectionStatusDisconnected
type PrivateEndpointConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionStatusOutput() PrivateEndpointConnectionStatusOutput
	ToPrivateEndpointConnectionStatusOutputWithContext(context.Context) PrivateEndpointConnectionStatusOutput
}

var privateEndpointConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointConnectionStatus)(nil)).Elem()

type PrivateEndpointConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionStatusPtrOutput() PrivateEndpointConnectionStatusPtrOutput
	ToPrivateEndpointConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointConnectionStatusPtrOutput
}

type privateEndpointConnectionStatusPtr string

func PrivateEndpointConnectionStatusPtr(v string) PrivateEndpointConnectionStatusPtrInput {
	return (*privateEndpointConnectionStatusPtr)(&v)
}

func (*privateEndpointConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointConnectionStatusPtrType
}

func (in *privateEndpointConnectionStatusPtr) ToPrivateEndpointConnectionStatusPtrOutput() PrivateEndpointConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointConnectionStatusPtrOutput)
}

func (in *privateEndpointConnectionStatusPtr) ToPrivateEndpointConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointConnectionStatusPtrOutput)
}

// Gets or sets the public network access.
type PublicNetworkAccess string

const (
	PublicNetworkAccessNotSpecified = PublicNetworkAccess("NotSpecified")
	PublicNetworkAccessEnabled      = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled     = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessNotSpecified
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// Gets or sets the state of tenant endpoint.
type TenantEndpointState string

const (
	TenantEndpointStateNotSpecified = TenantEndpointState("NotSpecified")
	TenantEndpointStateDisabled     = TenantEndpointState("Disabled")
	TenantEndpointStateEnabled      = TenantEndpointState("Enabled")
)

func (TenantEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantEndpointState)(nil)).Elem()
}

func (e TenantEndpointState) ToTenantEndpointStateOutput() TenantEndpointStateOutput {
	return pulumi.ToOutput(e).(TenantEndpointStateOutput)
}

func (e TenantEndpointState) ToTenantEndpointStateOutputWithContext(ctx context.Context) TenantEndpointStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TenantEndpointStateOutput)
}

func (e TenantEndpointState) ToTenantEndpointStatePtrOutput() TenantEndpointStatePtrOutput {
	return e.ToTenantEndpointStatePtrOutputWithContext(context.Background())
}

func (e TenantEndpointState) ToTenantEndpointStatePtrOutputWithContext(ctx context.Context) TenantEndpointStatePtrOutput {
	return TenantEndpointState(e).ToTenantEndpointStateOutputWithContext(ctx).ToTenantEndpointStatePtrOutputWithContext(ctx)
}

func (e TenantEndpointState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TenantEndpointState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TenantEndpointState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TenantEndpointState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TenantEndpointStateOutput struct{ *pulumi.OutputState }

func (TenantEndpointStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantEndpointState)(nil)).Elem()
}

func (o TenantEndpointStateOutput) ToTenantEndpointStateOutput() TenantEndpointStateOutput {
	return o
}

func (o TenantEndpointStateOutput) ToTenantEndpointStateOutputWithContext(ctx context.Context) TenantEndpointStateOutput {
	return o
}

func (o TenantEndpointStateOutput) ToTenantEndpointStatePtrOutput() TenantEndpointStatePtrOutput {
	return o.ToTenantEndpointStatePtrOutputWithContext(context.Background())
}

func (o TenantEndpointStateOutput) ToTenantEndpointStatePtrOutputWithContext(ctx context.Context) TenantEndpointStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantEndpointState) *TenantEndpointState {
		return &v
	}).(TenantEndpointStatePtrOutput)
}

func (o TenantEndpointStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TenantEndpointStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TenantEndpointState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TenantEndpointStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TenantEndpointStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TenantEndpointState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TenantEndpointStatePtrOutput struct{ *pulumi.OutputState }

func (TenantEndpointStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantEndpointState)(nil)).Elem()
}

func (o TenantEndpointStatePtrOutput) ToTenantEndpointStatePtrOutput() TenantEndpointStatePtrOutput {
	return o
}

func (o TenantEndpointStatePtrOutput) ToTenantEndpointStatePtrOutputWithContext(ctx context.Context) TenantEndpointStatePtrOutput {
	return o
}

func (o TenantEndpointStatePtrOutput) Elem() TenantEndpointStateOutput {
	return o.ApplyT(func(v *TenantEndpointState) TenantEndpointState {
		if v != nil {
			return *v
		}
		var ret TenantEndpointState
		return ret
	}).(TenantEndpointStateOutput)
}

func (o TenantEndpointStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TenantEndpointStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TenantEndpointState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TenantEndpointStateInput is an input type that accepts values of the TenantEndpointState enum
// A concrete instance of `TenantEndpointStateInput` can be one of the following:
//
//	TenantEndpointStateNotSpecified
//	TenantEndpointStateDisabled
//	TenantEndpointStateEnabled
type TenantEndpointStateInput interface {
	pulumi.Input

	ToTenantEndpointStateOutput() TenantEndpointStateOutput
	ToTenantEndpointStateOutputWithContext(context.Context) TenantEndpointStateOutput
}

var tenantEndpointStatePtrType = reflect.TypeOf((**TenantEndpointState)(nil)).Elem()

type TenantEndpointStatePtrInput interface {
	pulumi.Input

	ToTenantEndpointStatePtrOutput() TenantEndpointStatePtrOutput
	ToTenantEndpointStatePtrOutputWithContext(context.Context) TenantEndpointStatePtrOutput
}

type tenantEndpointStatePtr string

func TenantEndpointStatePtr(v string) TenantEndpointStatePtrInput {
	return (*tenantEndpointStatePtr)(&v)
}

func (*tenantEndpointStatePtr) ElementType() reflect.Type {
	return tenantEndpointStatePtrType
}

func (in *tenantEndpointStatePtr) ToTenantEndpointStatePtrOutput() TenantEndpointStatePtrOutput {
	return pulumi.ToOutput(in).(TenantEndpointStatePtrOutput)
}

func (in *tenantEndpointStatePtr) ToTenantEndpointStatePtrOutputWithContext(ctx context.Context) TenantEndpointStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TenantEndpointStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountSkuNameOutput{})
	pulumi.RegisterOutputType(AccountSkuNamePtrOutput{})
	pulumi.RegisterOutputType(EventHubTypeOutput{})
	pulumi.RegisterOutputType(EventHubTypePtrOutput{})
	pulumi.RegisterOutputType(EventStreamingStateOutput{})
	pulumi.RegisterOutputType(EventStreamingStatePtrOutput{})
	pulumi.RegisterOutputType(EventStreamingTypeOutput{})
	pulumi.RegisterOutputType(EventStreamingTypePtrOutput{})
	pulumi.RegisterOutputType(KafkaConfigurationIdentityTypeOutput{})
	pulumi.RegisterOutputType(KafkaConfigurationIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedEventHubStateOutput{})
	pulumi.RegisterOutputType(ManagedEventHubStatePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(TenantEndpointStateOutput{})
	pulumi.RegisterOutputType(TenantEndpointStatePtrOutput{})
}
