// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package relay

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type AccessRights string

const (
	AccessRightsManage = AccessRights("Manage")
	AccessRightsSend   = AccessRights("Send")
	AccessRightsListen = AccessRights("Listen")
)

func (AccessRights) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRights)(nil)).Elem()
}

func (e AccessRights) ToAccessRightsOutput() AccessRightsOutput {
	return pulumi.ToOutput(e).(AccessRightsOutput)
}

func (e AccessRights) ToAccessRightsOutputWithContext(ctx context.Context) AccessRightsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessRightsOutput)
}

func (e AccessRights) ToAccessRightsPtrOutput() AccessRightsPtrOutput {
	return e.ToAccessRightsPtrOutputWithContext(context.Background())
}

func (e AccessRights) ToAccessRightsPtrOutputWithContext(ctx context.Context) AccessRightsPtrOutput {
	return AccessRights(e).ToAccessRightsOutputWithContext(ctx).ToAccessRightsPtrOutputWithContext(ctx)
}

func (e AccessRights) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessRights) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessRights) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessRights) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessRightsOutput struct{ *pulumi.OutputState }

func (AccessRightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessRights)(nil)).Elem()
}

func (o AccessRightsOutput) ToAccessRightsOutput() AccessRightsOutput {
	return o
}

func (o AccessRightsOutput) ToAccessRightsOutputWithContext(ctx context.Context) AccessRightsOutput {
	return o
}

func (o AccessRightsOutput) ToAccessRightsPtrOutput() AccessRightsPtrOutput {
	return o.ToAccessRightsPtrOutputWithContext(context.Background())
}

func (o AccessRightsOutput) ToAccessRightsPtrOutputWithContext(ctx context.Context) AccessRightsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessRights) *AccessRights {
		return &v
	}).(AccessRightsPtrOutput)
}

func (o AccessRightsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessRightsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessRights) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessRightsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessRightsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessRights) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessRightsPtrOutput struct{ *pulumi.OutputState }

func (AccessRightsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRights)(nil)).Elem()
}

func (o AccessRightsPtrOutput) ToAccessRightsPtrOutput() AccessRightsPtrOutput {
	return o
}

func (o AccessRightsPtrOutput) ToAccessRightsPtrOutputWithContext(ctx context.Context) AccessRightsPtrOutput {
	return o
}

func (o AccessRightsPtrOutput) Elem() AccessRightsOutput {
	return o.ApplyT(func(v *AccessRights) AccessRights {
		if v != nil {
			return *v
		}
		var ret AccessRights
		return ret
	}).(AccessRightsOutput)
}

func (o AccessRightsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessRightsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessRights) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessRightsInput is an input type that accepts values of the AccessRights enum
// A concrete instance of `AccessRightsInput` can be one of the following:
//
//	AccessRightsManage
//	AccessRightsSend
//	AccessRightsListen
type AccessRightsInput interface {
	pulumi.Input

	ToAccessRightsOutput() AccessRightsOutput
	ToAccessRightsOutputWithContext(context.Context) AccessRightsOutput
}

var accessRightsPtrType = reflect.TypeOf((**AccessRights)(nil)).Elem()

type AccessRightsPtrInput interface {
	pulumi.Input

	ToAccessRightsPtrOutput() AccessRightsPtrOutput
	ToAccessRightsPtrOutputWithContext(context.Context) AccessRightsPtrOutput
}

type accessRightsPtr string

func AccessRightsPtr(v string) AccessRightsPtrInput {
	return (*accessRightsPtr)(&v)
}

func (*accessRightsPtr) ElementType() reflect.Type {
	return accessRightsPtrType
}

func (in *accessRightsPtr) ToAccessRightsPtrOutput() AccessRightsPtrOutput {
	return pulumi.ToOutput(in).(AccessRightsPtrOutput)
}

func (in *accessRightsPtr) ToAccessRightsPtrOutputWithContext(ctx context.Context) AccessRightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessRightsPtrOutput)
}

func (in *accessRightsPtr) ToOutput(ctx context.Context) pulumix.Output[*AccessRights] {
	return pulumix.Output[*AccessRights]{
		OutputState: in.ToAccessRightsPtrOutputWithContext(ctx).OutputState,
	}
}

// Provisioning state of the Private Endpoint Connection.
type EndPointProvisioningState string

const (
	EndPointProvisioningStateCreating  = EndPointProvisioningState("Creating")
	EndPointProvisioningStateUpdating  = EndPointProvisioningState("Updating")
	EndPointProvisioningStateDeleting  = EndPointProvisioningState("Deleting")
	EndPointProvisioningStateSucceeded = EndPointProvisioningState("Succeeded")
	EndPointProvisioningStateCanceled  = EndPointProvisioningState("Canceled")
	EndPointProvisioningStateFailed    = EndPointProvisioningState("Failed")
)

func (EndPointProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*EndPointProvisioningState)(nil)).Elem()
}

func (e EndPointProvisioningState) ToEndPointProvisioningStateOutput() EndPointProvisioningStateOutput {
	return pulumi.ToOutput(e).(EndPointProvisioningStateOutput)
}

func (e EndPointProvisioningState) ToEndPointProvisioningStateOutputWithContext(ctx context.Context) EndPointProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndPointProvisioningStateOutput)
}

func (e EndPointProvisioningState) ToEndPointProvisioningStatePtrOutput() EndPointProvisioningStatePtrOutput {
	return e.ToEndPointProvisioningStatePtrOutputWithContext(context.Background())
}

func (e EndPointProvisioningState) ToEndPointProvisioningStatePtrOutputWithContext(ctx context.Context) EndPointProvisioningStatePtrOutput {
	return EndPointProvisioningState(e).ToEndPointProvisioningStateOutputWithContext(ctx).ToEndPointProvisioningStatePtrOutputWithContext(ctx)
}

func (e EndPointProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndPointProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndPointProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndPointProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndPointProvisioningStateOutput struct{ *pulumi.OutputState }

func (EndPointProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndPointProvisioningState)(nil)).Elem()
}

func (o EndPointProvisioningStateOutput) ToEndPointProvisioningStateOutput() EndPointProvisioningStateOutput {
	return o
}

func (o EndPointProvisioningStateOutput) ToEndPointProvisioningStateOutputWithContext(ctx context.Context) EndPointProvisioningStateOutput {
	return o
}

func (o EndPointProvisioningStateOutput) ToEndPointProvisioningStatePtrOutput() EndPointProvisioningStatePtrOutput {
	return o.ToEndPointProvisioningStatePtrOutputWithContext(context.Background())
}

func (o EndPointProvisioningStateOutput) ToEndPointProvisioningStatePtrOutputWithContext(ctx context.Context) EndPointProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndPointProvisioningState) *EndPointProvisioningState {
		return &v
	}).(EndPointProvisioningStatePtrOutput)
}

func (o EndPointProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndPointProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndPointProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndPointProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndPointProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndPointProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndPointProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (EndPointProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndPointProvisioningState)(nil)).Elem()
}

func (o EndPointProvisioningStatePtrOutput) ToEndPointProvisioningStatePtrOutput() EndPointProvisioningStatePtrOutput {
	return o
}

func (o EndPointProvisioningStatePtrOutput) ToEndPointProvisioningStatePtrOutputWithContext(ctx context.Context) EndPointProvisioningStatePtrOutput {
	return o
}

func (o EndPointProvisioningStatePtrOutput) Elem() EndPointProvisioningStateOutput {
	return o.ApplyT(func(v *EndPointProvisioningState) EndPointProvisioningState {
		if v != nil {
			return *v
		}
		var ret EndPointProvisioningState
		return ret
	}).(EndPointProvisioningStateOutput)
}

func (o EndPointProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndPointProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndPointProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndPointProvisioningStateInput is an input type that accepts values of the EndPointProvisioningState enum
// A concrete instance of `EndPointProvisioningStateInput` can be one of the following:
//
//	EndPointProvisioningStateCreating
//	EndPointProvisioningStateUpdating
//	EndPointProvisioningStateDeleting
//	EndPointProvisioningStateSucceeded
//	EndPointProvisioningStateCanceled
//	EndPointProvisioningStateFailed
type EndPointProvisioningStateInput interface {
	pulumi.Input

	ToEndPointProvisioningStateOutput() EndPointProvisioningStateOutput
	ToEndPointProvisioningStateOutputWithContext(context.Context) EndPointProvisioningStateOutput
}

var endPointProvisioningStatePtrType = reflect.TypeOf((**EndPointProvisioningState)(nil)).Elem()

type EndPointProvisioningStatePtrInput interface {
	pulumi.Input

	ToEndPointProvisioningStatePtrOutput() EndPointProvisioningStatePtrOutput
	ToEndPointProvisioningStatePtrOutputWithContext(context.Context) EndPointProvisioningStatePtrOutput
}

type endPointProvisioningStatePtr string

func EndPointProvisioningStatePtr(v string) EndPointProvisioningStatePtrInput {
	return (*endPointProvisioningStatePtr)(&v)
}

func (*endPointProvisioningStatePtr) ElementType() reflect.Type {
	return endPointProvisioningStatePtrType
}

func (in *endPointProvisioningStatePtr) ToEndPointProvisioningStatePtrOutput() EndPointProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(EndPointProvisioningStatePtrOutput)
}

func (in *endPointProvisioningStatePtr) ToEndPointProvisioningStatePtrOutputWithContext(ctx context.Context) EndPointProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndPointProvisioningStatePtrOutput)
}

func (in *endPointProvisioningStatePtr) ToOutput(ctx context.Context) pulumix.Output[*EndPointProvisioningState] {
	return pulumix.Output[*EndPointProvisioningState]{
		OutputState: in.ToEndPointProvisioningStatePtrOutputWithContext(ctx).OutputState,
	}
}

// Status of the connection.
type PrivateLinkConnectionStatus string

const (
	PrivateLinkConnectionStatusPending      = PrivateLinkConnectionStatus("Pending")
	PrivateLinkConnectionStatusApproved     = PrivateLinkConnectionStatus("Approved")
	PrivateLinkConnectionStatusRejected     = PrivateLinkConnectionStatus("Rejected")
	PrivateLinkConnectionStatusDisconnected = PrivateLinkConnectionStatus("Disconnected")
)

func (PrivateLinkConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStatus)(nil)).Elem()
}

func (e PrivateLinkConnectionStatus) ToPrivateLinkConnectionStatusOutput() PrivateLinkConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateLinkConnectionStatusOutput)
}

func (e PrivateLinkConnectionStatus) ToPrivateLinkConnectionStatusOutputWithContext(ctx context.Context) PrivateLinkConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateLinkConnectionStatusOutput)
}

func (e PrivateLinkConnectionStatus) ToPrivateLinkConnectionStatusPtrOutput() PrivateLinkConnectionStatusPtrOutput {
	return e.ToPrivateLinkConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateLinkConnectionStatus) ToPrivateLinkConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatusPtrOutput {
	return PrivateLinkConnectionStatus(e).ToPrivateLinkConnectionStatusOutputWithContext(ctx).ToPrivateLinkConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateLinkConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateLinkConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateLinkConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStatus)(nil)).Elem()
}

func (o PrivateLinkConnectionStatusOutput) ToPrivateLinkConnectionStatusOutput() PrivateLinkConnectionStatusOutput {
	return o
}

func (o PrivateLinkConnectionStatusOutput) ToPrivateLinkConnectionStatusOutputWithContext(ctx context.Context) PrivateLinkConnectionStatusOutput {
	return o
}

func (o PrivateLinkConnectionStatusOutput) ToPrivateLinkConnectionStatusPtrOutput() PrivateLinkConnectionStatusPtrOutput {
	return o.ToPrivateLinkConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStatusOutput) ToPrivateLinkConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkConnectionStatus) *PrivateLinkConnectionStatus {
		return &v
	}).(PrivateLinkConnectionStatusPtrOutput)
}

func (o PrivateLinkConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateLinkConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStatus)(nil)).Elem()
}

func (o PrivateLinkConnectionStatusPtrOutput) ToPrivateLinkConnectionStatusPtrOutput() PrivateLinkConnectionStatusPtrOutput {
	return o
}

func (o PrivateLinkConnectionStatusPtrOutput) ToPrivateLinkConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatusPtrOutput {
	return o
}

func (o PrivateLinkConnectionStatusPtrOutput) Elem() PrivateLinkConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStatus) PrivateLinkConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateLinkConnectionStatus
		return ret
	}).(PrivateLinkConnectionStatusOutput)
}

func (o PrivateLinkConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateLinkConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnectionStatusInput is an input type that accepts values of the PrivateLinkConnectionStatus enum
// A concrete instance of `PrivateLinkConnectionStatusInput` can be one of the following:
//
//	PrivateLinkConnectionStatusPending
//	PrivateLinkConnectionStatusApproved
//	PrivateLinkConnectionStatusRejected
//	PrivateLinkConnectionStatusDisconnected
type PrivateLinkConnectionStatusInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStatusOutput() PrivateLinkConnectionStatusOutput
	ToPrivateLinkConnectionStatusOutputWithContext(context.Context) PrivateLinkConnectionStatusOutput
}

var privateLinkConnectionStatusPtrType = reflect.TypeOf((**PrivateLinkConnectionStatus)(nil)).Elem()

type PrivateLinkConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStatusPtrOutput() PrivateLinkConnectionStatusPtrOutput
	ToPrivateLinkConnectionStatusPtrOutputWithContext(context.Context) PrivateLinkConnectionStatusPtrOutput
}

type privateLinkConnectionStatusPtr string

func PrivateLinkConnectionStatusPtr(v string) PrivateLinkConnectionStatusPtrInput {
	return (*privateLinkConnectionStatusPtr)(&v)
}

func (*privateLinkConnectionStatusPtr) ElementType() reflect.Type {
	return privateLinkConnectionStatusPtrType
}

func (in *privateLinkConnectionStatusPtr) ToPrivateLinkConnectionStatusPtrOutput() PrivateLinkConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateLinkConnectionStatusPtrOutput)
}

func (in *privateLinkConnectionStatusPtr) ToPrivateLinkConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateLinkConnectionStatusPtrOutput)
}

func (in *privateLinkConnectionStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*PrivateLinkConnectionStatus] {
	return pulumix.Output[*PrivateLinkConnectionStatus]{
		OutputState: in.ToPrivateLinkConnectionStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// This determines if traffic is allowed over public network. By default it is enabled.
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled            = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled           = PublicNetworkAccess("Disabled")
	PublicNetworkAccessSecuredByPerimeter = PublicNetworkAccess("SecuredByPerimeter")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
//	PublicNetworkAccessSecuredByPerimeter
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*PublicNetworkAccess] {
	return pulumix.Output[*PublicNetworkAccess]{
		OutputState: in.ToPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// WCF relay type.
type Relaytype string

const (
	RelaytypeNetTcp = Relaytype("NetTcp")
	RelaytypeHttp   = Relaytype("Http")
)

func (Relaytype) ElementType() reflect.Type {
	return reflect.TypeOf((*Relaytype)(nil)).Elem()
}

func (e Relaytype) ToRelaytypeOutput() RelaytypeOutput {
	return pulumi.ToOutput(e).(RelaytypeOutput)
}

func (e Relaytype) ToRelaytypeOutputWithContext(ctx context.Context) RelaytypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RelaytypeOutput)
}

func (e Relaytype) ToRelaytypePtrOutput() RelaytypePtrOutput {
	return e.ToRelaytypePtrOutputWithContext(context.Background())
}

func (e Relaytype) ToRelaytypePtrOutputWithContext(ctx context.Context) RelaytypePtrOutput {
	return Relaytype(e).ToRelaytypeOutputWithContext(ctx).ToRelaytypePtrOutputWithContext(ctx)
}

func (e Relaytype) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Relaytype) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Relaytype) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Relaytype) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RelaytypeOutput struct{ *pulumi.OutputState }

func (RelaytypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Relaytype)(nil)).Elem()
}

func (o RelaytypeOutput) ToRelaytypeOutput() RelaytypeOutput {
	return o
}

func (o RelaytypeOutput) ToRelaytypeOutputWithContext(ctx context.Context) RelaytypeOutput {
	return o
}

func (o RelaytypeOutput) ToRelaytypePtrOutput() RelaytypePtrOutput {
	return o.ToRelaytypePtrOutputWithContext(context.Background())
}

func (o RelaytypeOutput) ToRelaytypePtrOutputWithContext(ctx context.Context) RelaytypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Relaytype) *Relaytype {
		return &v
	}).(RelaytypePtrOutput)
}

func (o RelaytypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RelaytypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Relaytype) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RelaytypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RelaytypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Relaytype) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RelaytypePtrOutput struct{ *pulumi.OutputState }

func (RelaytypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Relaytype)(nil)).Elem()
}

func (o RelaytypePtrOutput) ToRelaytypePtrOutput() RelaytypePtrOutput {
	return o
}

func (o RelaytypePtrOutput) ToRelaytypePtrOutputWithContext(ctx context.Context) RelaytypePtrOutput {
	return o
}

func (o RelaytypePtrOutput) Elem() RelaytypeOutput {
	return o.ApplyT(func(v *Relaytype) Relaytype {
		if v != nil {
			return *v
		}
		var ret Relaytype
		return ret
	}).(RelaytypeOutput)
}

func (o RelaytypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RelaytypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Relaytype) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RelaytypeInput is an input type that accepts values of the Relaytype enum
// A concrete instance of `RelaytypeInput` can be one of the following:
//
//	RelaytypeNetTcp
//	RelaytypeHttp
type RelaytypeInput interface {
	pulumi.Input

	ToRelaytypeOutput() RelaytypeOutput
	ToRelaytypeOutputWithContext(context.Context) RelaytypeOutput
}

var relaytypePtrType = reflect.TypeOf((**Relaytype)(nil)).Elem()

type RelaytypePtrInput interface {
	pulumi.Input

	ToRelaytypePtrOutput() RelaytypePtrOutput
	ToRelaytypePtrOutputWithContext(context.Context) RelaytypePtrOutput
}

type relaytypePtr string

func RelaytypePtr(v string) RelaytypePtrInput {
	return (*relaytypePtr)(&v)
}

func (*relaytypePtr) ElementType() reflect.Type {
	return relaytypePtrType
}

func (in *relaytypePtr) ToRelaytypePtrOutput() RelaytypePtrOutput {
	return pulumi.ToOutput(in).(RelaytypePtrOutput)
}

func (in *relaytypePtr) ToRelaytypePtrOutputWithContext(ctx context.Context) RelaytypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RelaytypePtrOutput)
}

func (in *relaytypePtr) ToOutput(ctx context.Context) pulumix.Output[*Relaytype] {
	return pulumix.Output[*Relaytype]{
		OutputState: in.ToRelaytypePtrOutputWithContext(ctx).OutputState,
	}
}

// Name of this SKU.
type SkuName string

const (
	SkuNameStandard = SkuName("Standard")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameStandard
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*SkuName] {
	return pulumix.Output[*SkuName]{
		OutputState: in.ToSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// The tier of this SKU.
type SkuTier string

const (
	SkuTierStandard = SkuTier("Standard")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierStandard
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*SkuTier] {
	return pulumix.Output[*SkuTier]{
		OutputState: in.ToSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AccessRightsOutput{})
	pulumi.RegisterOutputType(AccessRightsPtrOutput{})
	pulumi.RegisterOutputType(EndPointProvisioningStateOutput{})
	pulumi.RegisterOutputType(EndPointProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(RelaytypeOutput{})
	pulumi.RegisterOutputType(RelaytypePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
