// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package programmableconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get an Operator API Connection.
// Azure REST API version: 2024-01-15-preview.
func LookupOperatorApiConnection(ctx *pulumi.Context, args *LookupOperatorApiConnectionArgs, opts ...pulumi.InvokeOption) (*LookupOperatorApiConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupOperatorApiConnectionResult
	err := ctx.Invoke("azure-native:programmableconnectivity:getOperatorApiConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOperatorApiConnectionArgs struct {
	// Azure Programmable Connectivity (APC) Operator API Connection Name.
	OperatorApiConnectionName string `pulumi:"operatorApiConnectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Programmable Connectivity Operator API Connection resource
type LookupOperatorApiConnectionResult struct {
	// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
	AccountType string `pulumi:"accountType"`
	// Application ID of the App Developer that is registered with the Operator in a specific country/region.
	AppId *string `pulumi:"appId"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The Network API for the current operator in the country/region provided in the linked Operator API Plan.
	CamaraApiName string `pulumi:"camaraApiName"`
	// Details about the Application that would use the Operator's Network APIs.
	ConfiguredApplication *ApplicationPropertiesResponse `pulumi:"configuredApplication"`
	// Reference to the APC Gateway resource ID.
	GatewayId string `pulumi:"gatewayId"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Reference to the Operator API Plan Resource ID.
	OperatorApiPlanId string `pulumi:"operatorApiPlanId"`
	// Name of the Operator in the linked Operator API Plan belongs to.
	OperatorName string `pulumi:"operatorName"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Details about the SaaS offer purchased from the marketplace.
	SaasProperties *SaasPropertiesResponse `pulumi:"saasProperties"`
	// The status of the OperatorApiConnection resource.
	Status StatusResponse `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupOperatorApiConnectionOutput(ctx *pulumi.Context, args LookupOperatorApiConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupOperatorApiConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOperatorApiConnectionResultOutput, error) {
			args := v.(LookupOperatorApiConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:programmableconnectivity:getOperatorApiConnection", args, LookupOperatorApiConnectionResultOutput{}, options).(LookupOperatorApiConnectionResultOutput), nil
		}).(LookupOperatorApiConnectionResultOutput)
}

type LookupOperatorApiConnectionOutputArgs struct {
	// Azure Programmable Connectivity (APC) Operator API Connection Name.
	OperatorApiConnectionName pulumi.StringInput `pulumi:"operatorApiConnectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupOperatorApiConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOperatorApiConnectionArgs)(nil)).Elem()
}

// A Programmable Connectivity Operator API Connection resource
type LookupOperatorApiConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupOperatorApiConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOperatorApiConnectionResult)(nil)).Elem()
}

func (o LookupOperatorApiConnectionResultOutput) ToLookupOperatorApiConnectionResultOutput() LookupOperatorApiConnectionResultOutput {
	return o
}

func (o LookupOperatorApiConnectionResultOutput) ToLookupOperatorApiConnectionResultOutputWithContext(ctx context.Context) LookupOperatorApiConnectionResultOutput {
	return o
}

// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
func (o LookupOperatorApiConnectionResultOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.AccountType }).(pulumi.StringOutput)
}

// Application ID of the App Developer that is registered with the Operator in a specific country/region.
func (o LookupOperatorApiConnectionResultOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o LookupOperatorApiConnectionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The Network API for the current operator in the country/region provided in the linked Operator API Plan.
func (o LookupOperatorApiConnectionResultOutput) CamaraApiName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.CamaraApiName }).(pulumi.StringOutput)
}

// Details about the Application that would use the Operator's Network APIs.
func (o LookupOperatorApiConnectionResultOutput) ConfiguredApplication() ApplicationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) *ApplicationPropertiesResponse {
		return v.ConfiguredApplication
	}).(ApplicationPropertiesResponsePtrOutput)
}

// Reference to the APC Gateway resource ID.
func (o LookupOperatorApiConnectionResultOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.GatewayId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupOperatorApiConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupOperatorApiConnectionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupOperatorApiConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Reference to the Operator API Plan Resource ID.
func (o LookupOperatorApiConnectionResultOutput) OperatorApiPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.OperatorApiPlanId }).(pulumi.StringOutput)
}

// Name of the Operator in the linked Operator API Plan belongs to.
func (o LookupOperatorApiConnectionResultOutput) OperatorName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.OperatorName }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupOperatorApiConnectionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Details about the SaaS offer purchased from the marketplace.
func (o LookupOperatorApiConnectionResultOutput) SaasProperties() SaasPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) *SaasPropertiesResponse { return v.SaasProperties }).(SaasPropertiesResponsePtrOutput)
}

// The status of the OperatorApiConnection resource.
func (o LookupOperatorApiConnectionResultOutput) Status() StatusResponseOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) StatusResponse { return v.Status }).(StatusResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupOperatorApiConnectionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupOperatorApiConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupOperatorApiConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOperatorApiConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOperatorApiConnectionResultOutput{})
}
