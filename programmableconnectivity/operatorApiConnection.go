// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package programmableconnectivity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Programmable Connectivity Operator API Connection resource
//
// Uses Azure REST API version 2024-01-15-preview. In version 2.x of the Azure Native provider, it used API version 2024-01-15-preview.
type OperatorApiConnection struct {
	pulumi.CustomResourceState

	// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
	AccountType pulumi.StringOutput `pulumi:"accountType"`
	// Application ID of the App Developer that is registered with the Operator in a specific country/region.
	AppId pulumi.StringPtrOutput `pulumi:"appId"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The Network API for the current operator in the country/region provided in the linked Operator API Plan.
	CamaraApiName pulumi.StringOutput `pulumi:"camaraApiName"`
	// Details about the Application that would use the Operator's Network APIs.
	ConfiguredApplication ApplicationPropertiesResponsePtrOutput `pulumi:"configuredApplication"`
	// Reference to the APC Gateway resource ID.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Reference to the Operator API Plan Resource ID.
	OperatorApiPlanId pulumi.StringOutput `pulumi:"operatorApiPlanId"`
	// Name of the Operator in the linked Operator API Plan belongs to.
	OperatorName pulumi.StringOutput `pulumi:"operatorName"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Details about the SaaS offer purchased from the marketplace.
	SaasProperties SaasPropertiesResponsePtrOutput `pulumi:"saasProperties"`
	// The status of the OperatorApiConnection resource.
	Status StatusResponseOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewOperatorApiConnection registers a new resource with the given unique name, arguments, and options.
func NewOperatorApiConnection(ctx *pulumi.Context,
	name string, args *OperatorApiConnectionArgs, opts ...pulumi.ResourceOption) (*OperatorApiConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountType == nil {
		return nil, errors.New("invalid value for required argument 'AccountType'")
	}
	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.OperatorApiPlanId == nil {
		return nil, errors.New("invalid value for required argument 'OperatorApiPlanId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:programmableconnectivity/v20240115preview:OperatorApiConnection"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource OperatorApiConnection
	err := ctx.RegisterResource("azure-native:programmableconnectivity:OperatorApiConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOperatorApiConnection gets an existing OperatorApiConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOperatorApiConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OperatorApiConnectionState, opts ...pulumi.ResourceOption) (*OperatorApiConnection, error) {
	var resource OperatorApiConnection
	err := ctx.ReadResource("azure-native:programmableconnectivity:OperatorApiConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OperatorApiConnection resources.
type operatorApiConnectionState struct {
}

type OperatorApiConnectionState struct {
}

func (OperatorApiConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorApiConnectionState)(nil)).Elem()
}

type operatorApiConnectionArgs struct {
	// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
	AccountType string `pulumi:"accountType"`
	// Application ID of the App Developer that is registered with the Operator in a specific country/region.
	AppId *string `pulumi:"appId"`
	// Application secret linked to the 'appId'. This should be stored securely and is not returned back when the resource information is read.
	AppSecret *string `pulumi:"appSecret"`
	// Details about the Application that would use the Operator's Network APIs.
	ConfiguredApplication *ApplicationProperties `pulumi:"configuredApplication"`
	// Reference to the APC Gateway resource ID.
	GatewayId string `pulumi:"gatewayId"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Azure Programmable Connectivity (APC) Operator API Connection Name.
	OperatorApiConnectionName *string `pulumi:"operatorApiConnectionName"`
	// Reference to the Operator API Plan Resource ID.
	OperatorApiPlanId string `pulumi:"operatorApiPlanId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Details about the SaaS offer purchased from the marketplace.
	SaasProperties *SaasProperties `pulumi:"saasProperties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a OperatorApiConnection resource.
type OperatorApiConnectionArgs struct {
	// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
	AccountType pulumi.StringInput
	// Application ID of the App Developer that is registered with the Operator in a specific country/region.
	AppId pulumi.StringPtrInput
	// Application secret linked to the 'appId'. This should be stored securely and is not returned back when the resource information is read.
	AppSecret pulumi.StringPtrInput
	// Details about the Application that would use the Operator's Network APIs.
	ConfiguredApplication ApplicationPropertiesPtrInput
	// Reference to the APC Gateway resource ID.
	GatewayId pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Azure Programmable Connectivity (APC) Operator API Connection Name.
	OperatorApiConnectionName pulumi.StringPtrInput
	// Reference to the Operator API Plan Resource ID.
	OperatorApiPlanId pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Details about the SaaS offer purchased from the marketplace.
	SaasProperties SaasPropertiesPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (OperatorApiConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorApiConnectionArgs)(nil)).Elem()
}

type OperatorApiConnectionInput interface {
	pulumi.Input

	ToOperatorApiConnectionOutput() OperatorApiConnectionOutput
	ToOperatorApiConnectionOutputWithContext(ctx context.Context) OperatorApiConnectionOutput
}

func (*OperatorApiConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatorApiConnection)(nil)).Elem()
}

func (i *OperatorApiConnection) ToOperatorApiConnectionOutput() OperatorApiConnectionOutput {
	return i.ToOperatorApiConnectionOutputWithContext(context.Background())
}

func (i *OperatorApiConnection) ToOperatorApiConnectionOutputWithContext(ctx context.Context) OperatorApiConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorApiConnectionOutput)
}

type OperatorApiConnectionOutput struct{ *pulumi.OutputState }

func (OperatorApiConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatorApiConnection)(nil)).Elem()
}

func (o OperatorApiConnectionOutput) ToOperatorApiConnectionOutput() OperatorApiConnectionOutput {
	return o
}

func (o OperatorApiConnectionOutput) ToOperatorApiConnectionOutputWithContext(ctx context.Context) OperatorApiConnectionOutput {
	return o
}

// Type of the account the user has with the Operator's Network API infrastructure. AzureManaged | UserManaged.
func (o OperatorApiConnectionOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.AccountType }).(pulumi.StringOutput)
}

// Application ID of the App Developer that is registered with the Operator in a specific country/region.
func (o OperatorApiConnectionOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringPtrOutput { return v.AppId }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o OperatorApiConnectionOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The Network API for the current operator in the country/region provided in the linked Operator API Plan.
func (o OperatorApiConnectionOutput) CamaraApiName() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.CamaraApiName }).(pulumi.StringOutput)
}

// Details about the Application that would use the Operator's Network APIs.
func (o OperatorApiConnectionOutput) ConfiguredApplication() ApplicationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *OperatorApiConnection) ApplicationPropertiesResponsePtrOutput { return v.ConfiguredApplication }).(ApplicationPropertiesResponsePtrOutput)
}

// Reference to the APC Gateway resource ID.
func (o OperatorApiConnectionOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o OperatorApiConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o OperatorApiConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Reference to the Operator API Plan Resource ID.
func (o OperatorApiConnectionOutput) OperatorApiPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.OperatorApiPlanId }).(pulumi.StringOutput)
}

// Name of the Operator in the linked Operator API Plan belongs to.
func (o OperatorApiConnectionOutput) OperatorName() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.OperatorName }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o OperatorApiConnectionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Details about the SaaS offer purchased from the marketplace.
func (o OperatorApiConnectionOutput) SaasProperties() SaasPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *OperatorApiConnection) SaasPropertiesResponsePtrOutput { return v.SaasProperties }).(SaasPropertiesResponsePtrOutput)
}

// The status of the OperatorApiConnection resource.
func (o OperatorApiConnectionOutput) Status() StatusResponseOutput {
	return o.ApplyT(func(v *OperatorApiConnection) StatusResponseOutput { return v.Status }).(StatusResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o OperatorApiConnectionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *OperatorApiConnection) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o OperatorApiConnectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o OperatorApiConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorApiConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(OperatorApiConnectionOutput{})
}
