// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns an AML file system.
func GetamlFilesystem(ctx *pulumi.Context, args *GetamlFilesystemArgs, opts ...pulumi.InvokeOption) (*GetamlFilesystemResult, error) {
	var rv GetamlFilesystemResult
	err := ctx.Invoke("azure-native:storagecache/v20230301preview:getamlFilesystem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetamlFilesystemArgs struct {
	// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
	AmlFilesystemName string `pulumi:"amlFilesystemName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
type GetamlFilesystemResult struct {
	// Specifies encryption settings of the AML file system.
	EncryptionSettings *AmlFilesystemEncryptionSettingsResponse `pulumi:"encryptionSettings"`
	// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
	FilesystemSubnet string `pulumi:"filesystemSubnet"`
	// Health of the AML file system.
	Health AmlFilesystemHealthResponse `pulumi:"health"`
	// Hydration and archive settings and status
	Hsm *AmlFilesystemResponseHsm `pulumi:"hsm"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The managed identity used by the AML file system, if configured.
	Identity *AmlFilesystemIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The version of Lustre running in the AML file system
	LustreVersion string `pulumi:"lustreVersion"`
	// Start time of a 30-minute weekly maintenance window.
	MaintenanceWindow AmlFilesystemResponseMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
	MgsAddress string `pulumi:"mgsAddress"`
	// Recommended command to mount the AML file system
	MountCommand string `pulumi:"mountCommand"`
	// The name of the resource
	Name string `pulumi:"name"`
	// ARM provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// SKU for the resource.
	Sku *SkuNameResponse `pulumi:"sku"`
	// The size of the AML file system, in TiB. This might be rounded up.
	StorageCapacityTiB float64 `pulumi:"storageCapacityTiB"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
	ThroughputProvisionedMBps int `pulumi:"throughputProvisionedMBps"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Availability zones for resources. This field should only contain a single element in the array.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for GetamlFilesystemResult
func (val *GetamlFilesystemResult) Defaults() *GetamlFilesystemResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Hsm = tmp.Hsm.Defaults()

	return &tmp
}

func GetamlFilesystemOutput(ctx *pulumi.Context, args GetamlFilesystemOutputArgs, opts ...pulumi.InvokeOption) GetamlFilesystemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetamlFilesystemResult, error) {
			args := v.(GetamlFilesystemArgs)
			r, err := GetamlFilesystem(ctx, &args, opts...)
			var s GetamlFilesystemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetamlFilesystemResultOutput)
}

type GetamlFilesystemOutputArgs struct {
	// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
	AmlFilesystemName pulumi.StringInput `pulumi:"amlFilesystemName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetamlFilesystemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetamlFilesystemArgs)(nil)).Elem()
}

// An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
type GetamlFilesystemResultOutput struct{ *pulumi.OutputState }

func (GetamlFilesystemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetamlFilesystemResult)(nil)).Elem()
}

func (o GetamlFilesystemResultOutput) ToGetamlFilesystemResultOutput() GetamlFilesystemResultOutput {
	return o
}

func (o GetamlFilesystemResultOutput) ToGetamlFilesystemResultOutputWithContext(ctx context.Context) GetamlFilesystemResultOutput {
	return o
}

// Specifies encryption settings of the AML file system.
func (o GetamlFilesystemResultOutput) EncryptionSettings() AmlFilesystemEncryptionSettingsResponsePtrOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) *AmlFilesystemEncryptionSettingsResponse { return v.EncryptionSettings }).(AmlFilesystemEncryptionSettingsResponsePtrOutput)
}

// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
func (o GetamlFilesystemResultOutput) FilesystemSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.FilesystemSubnet }).(pulumi.StringOutput)
}

// Health of the AML file system.
func (o GetamlFilesystemResultOutput) Health() AmlFilesystemHealthResponseOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) AmlFilesystemHealthResponse { return v.Health }).(AmlFilesystemHealthResponseOutput)
}

// Hydration and archive settings and status
func (o GetamlFilesystemResultOutput) Hsm() AmlFilesystemResponseHsmPtrOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) *AmlFilesystemResponseHsm { return v.Hsm }).(AmlFilesystemResponseHsmPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GetamlFilesystemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed identity used by the AML file system, if configured.
func (o GetamlFilesystemResultOutput) Identity() AmlFilesystemIdentityResponsePtrOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) *AmlFilesystemIdentityResponse { return v.Identity }).(AmlFilesystemIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o GetamlFilesystemResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.Location }).(pulumi.StringOutput)
}

// The version of Lustre running in the AML file system
func (o GetamlFilesystemResultOutput) LustreVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.LustreVersion }).(pulumi.StringOutput)
}

// Start time of a 30-minute weekly maintenance window.
func (o GetamlFilesystemResultOutput) MaintenanceWindow() AmlFilesystemResponseMaintenanceWindowOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) AmlFilesystemResponseMaintenanceWindow { return v.MaintenanceWindow }).(AmlFilesystemResponseMaintenanceWindowOutput)
}

// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
func (o GetamlFilesystemResultOutput) MgsAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.MgsAddress }).(pulumi.StringOutput)
}

// Recommended command to mount the AML file system
func (o GetamlFilesystemResultOutput) MountCommand() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.MountCommand }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetamlFilesystemResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.Name }).(pulumi.StringOutput)
}

// ARM provisioning state.
func (o GetamlFilesystemResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SKU for the resource.
func (o GetamlFilesystemResultOutput) Sku() SkuNameResponsePtrOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) *SkuNameResponse { return v.Sku }).(SkuNameResponsePtrOutput)
}

// The size of the AML file system, in TiB. This might be rounded up.
func (o GetamlFilesystemResultOutput) StorageCapacityTiB() pulumi.Float64Output {
	return o.ApplyT(func(v GetamlFilesystemResult) float64 { return v.StorageCapacityTiB }).(pulumi.Float64Output)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GetamlFilesystemResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetamlFilesystemResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
func (o GetamlFilesystemResultOutput) ThroughputProvisionedMBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) int { return v.ThroughputProvisionedMBps }).(pulumi.IntOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetamlFilesystemResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) string { return v.Type }).(pulumi.StringOutput)
}

// Availability zones for resources. This field should only contain a single element in the array.
func (o GetamlFilesystemResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetamlFilesystemResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetamlFilesystemResultOutput{})
}
