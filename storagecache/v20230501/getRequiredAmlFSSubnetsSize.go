// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get the number of available IP addresses needed for the AML file system information provided.
func GetRequiredAmlFSSubnetsSize(ctx *pulumi.Context, args *GetRequiredAmlFSSubnetsSizeArgs, opts ...pulumi.InvokeOption) (*GetRequiredAmlFSSubnetsSizeResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetRequiredAmlFSSubnetsSizeResult
	err := ctx.Invoke("azure-native:storagecache/v20230501:getRequiredAmlFSSubnetsSize", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetRequiredAmlFSSubnetsSizeArgs struct {
	// SKU for the resource.
	Sku *SkuName `pulumi:"sku"`
	// The size of the AML file system, in TiB.
	StorageCapacityTiB *float64 `pulumi:"storageCapacityTiB"`
}

// Information about the number of available IP addresses that are required for the AML file system.
type GetRequiredAmlFSSubnetsSizeResult struct {
	// The number of available IP addresses that are required for the AML file system.
	FilesystemSubnetSize *int `pulumi:"filesystemSubnetSize"`
}

func GetRequiredAmlFSSubnetsSizeOutput(ctx *pulumi.Context, args GetRequiredAmlFSSubnetsSizeOutputArgs, opts ...pulumi.InvokeOption) GetRequiredAmlFSSubnetsSizeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRequiredAmlFSSubnetsSizeResult, error) {
			args := v.(GetRequiredAmlFSSubnetsSizeArgs)
			r, err := GetRequiredAmlFSSubnetsSize(ctx, &args, opts...)
			var s GetRequiredAmlFSSubnetsSizeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRequiredAmlFSSubnetsSizeResultOutput)
}

type GetRequiredAmlFSSubnetsSizeOutputArgs struct {
	// SKU for the resource.
	Sku SkuNamePtrInput `pulumi:"sku"`
	// The size of the AML file system, in TiB.
	StorageCapacityTiB pulumi.Float64PtrInput `pulumi:"storageCapacityTiB"`
}

func (GetRequiredAmlFSSubnetsSizeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRequiredAmlFSSubnetsSizeArgs)(nil)).Elem()
}

// Information about the number of available IP addresses that are required for the AML file system.
type GetRequiredAmlFSSubnetsSizeResultOutput struct{ *pulumi.OutputState }

func (GetRequiredAmlFSSubnetsSizeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRequiredAmlFSSubnetsSizeResult)(nil)).Elem()
}

func (o GetRequiredAmlFSSubnetsSizeResultOutput) ToGetRequiredAmlFSSubnetsSizeResultOutput() GetRequiredAmlFSSubnetsSizeResultOutput {
	return o
}

func (o GetRequiredAmlFSSubnetsSizeResultOutput) ToGetRequiredAmlFSSubnetsSizeResultOutputWithContext(ctx context.Context) GetRequiredAmlFSSubnetsSizeResultOutput {
	return o
}

func (o GetRequiredAmlFSSubnetsSizeResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetRequiredAmlFSSubnetsSizeResult] {
	return pulumix.Output[GetRequiredAmlFSSubnetsSizeResult]{
		OutputState: o.OutputState,
	}
}

// The number of available IP addresses that are required for the AML file system.
func (o GetRequiredAmlFSSubnetsSizeResultOutput) FilesystemSubnetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRequiredAmlFSSubnetsSizeResult) *int { return v.FilesystemSubnetSize }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRequiredAmlFSSubnetsSizeResultOutput{})
}
