// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagecache

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
// Azure REST API version: 2023-05-01.
type AmlFilesystem struct {
	pulumi.CustomResourceState

	// Client information for the AML file system.
	ClientInfo AmlFilesystemClientInfoResponseOutput `pulumi:"clientInfo"`
	// Specifies encryption settings of the AML file system.
	EncryptionSettings AmlFilesystemEncryptionSettingsResponsePtrOutput `pulumi:"encryptionSettings"`
	// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
	FilesystemSubnet pulumi.StringOutput `pulumi:"filesystemSubnet"`
	// Health of the AML file system.
	Health AmlFilesystemHealthResponseOutput `pulumi:"health"`
	// Hydration and archive settings and status
	Hsm AmlFilesystemResponseHsmPtrOutput `pulumi:"hsm"`
	// The managed identity used by the AML file system, if configured.
	Identity AmlFilesystemIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Start time of a 30-minute weekly maintenance window.
	MaintenanceWindow AmlFilesystemResponseMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// ARM provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// SKU for the resource.
	Sku SkuNameResponsePtrOutput `pulumi:"sku"`
	// The size of the AML file system, in TiB. This might be rounded up.
	StorageCapacityTiB pulumi.Float64Output `pulumi:"storageCapacityTiB"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
	ThroughputProvisionedMBps pulumi.IntOutput `pulumi:"throughputProvisionedMBps"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Availability zones for resources. This field should only contain a single element in the array.
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewAmlFilesystem registers a new resource with the given unique name, arguments, and options.
func NewAmlFilesystem(ctx *pulumi.Context,
	name string, args *AmlFilesystemArgs, opts ...pulumi.ResourceOption) (*AmlFilesystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FilesystemSubnet == nil {
		return nil, errors.New("invalid value for required argument 'FilesystemSubnet'")
	}
	if args.MaintenanceWindow == nil {
		return nil, errors.New("invalid value for required argument 'MaintenanceWindow'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageCapacityTiB == nil {
		return nil, errors.New("invalid value for required argument 'StorageCapacityTiB'")
	}
	if args.Hsm != nil {
		args.Hsm = args.Hsm.ToAmlFilesystemHsmPtrOutput().ApplyT(func(v *AmlFilesystemHsm) *AmlFilesystemHsm { return v.Defaults() }).(AmlFilesystemHsmPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:storagecache:amlFilesystem"),
		},
		{
			Type: pulumi.String("azure-native:storagecache/v20230301preview:AmlFilesystem"),
		},
		{
			Type: pulumi.String("azure-native:storagecache/v20230301preview:amlFilesystem"),
		},
		{
			Type: pulumi.String("azure-native:storagecache/v20230501:AmlFilesystem"),
		},
		{
			Type: pulumi.String("azure-native:storagecache/v20230501:amlFilesystem"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AmlFilesystem
	err := ctx.RegisterResource("azure-native:storagecache:AmlFilesystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmlFilesystem gets an existing AmlFilesystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmlFilesystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmlFilesystemState, opts ...pulumi.ResourceOption) (*AmlFilesystem, error) {
	var resource AmlFilesystem
	err := ctx.ReadResource("azure-native:storagecache:AmlFilesystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmlFilesystem resources.
type amlFilesystemState struct {
}

type AmlFilesystemState struct {
}

func (AmlFilesystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*amlFilesystemState)(nil)).Elem()
}

type amlFilesystemArgs struct {
	// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
	AmlFilesystemName *string `pulumi:"amlFilesystemName"`
	// Specifies encryption settings of the AML file system.
	EncryptionSettings *AmlFilesystemEncryptionSettings `pulumi:"encryptionSettings"`
	// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
	FilesystemSubnet string `pulumi:"filesystemSubnet"`
	// Hydration and archive settings and status
	Hsm *AmlFilesystemHsm `pulumi:"hsm"`
	// The managed identity used by the AML file system, if configured.
	Identity *AmlFilesystemIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Start time of a 30-minute weekly maintenance window.
	MaintenanceWindow AmlFilesystemMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SKU for the resource.
	Sku *SkuName `pulumi:"sku"`
	// The size of the AML file system, in TiB. This might be rounded up.
	StorageCapacityTiB float64 `pulumi:"storageCapacityTiB"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Availability zones for resources. This field should only contain a single element in the array.
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a AmlFilesystem resource.
type AmlFilesystemArgs struct {
	// Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric.
	AmlFilesystemName pulumi.StringPtrInput
	// Specifies encryption settings of the AML file system.
	EncryptionSettings AmlFilesystemEncryptionSettingsPtrInput
	// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
	FilesystemSubnet pulumi.StringInput
	// Hydration and archive settings and status
	Hsm AmlFilesystemHsmPtrInput
	// The managed identity used by the AML file system, if configured.
	Identity AmlFilesystemIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Start time of a 30-minute weekly maintenance window.
	MaintenanceWindow AmlFilesystemMaintenanceWindowInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// SKU for the resource.
	Sku SkuNamePtrInput
	// The size of the AML file system, in TiB. This might be rounded up.
	StorageCapacityTiB pulumi.Float64Input
	// Resource tags.
	Tags pulumi.StringMapInput
	// Availability zones for resources. This field should only contain a single element in the array.
	Zones pulumi.StringArrayInput
}

func (AmlFilesystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amlFilesystemArgs)(nil)).Elem()
}

type AmlFilesystemInput interface {
	pulumi.Input

	ToAmlFilesystemOutput() AmlFilesystemOutput
	ToAmlFilesystemOutputWithContext(ctx context.Context) AmlFilesystemOutput
}

func (*AmlFilesystem) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlFilesystem)(nil)).Elem()
}

func (i *AmlFilesystem) ToAmlFilesystemOutput() AmlFilesystemOutput {
	return i.ToAmlFilesystemOutputWithContext(context.Background())
}

func (i *AmlFilesystem) ToAmlFilesystemOutputWithContext(ctx context.Context) AmlFilesystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlFilesystemOutput)
}

func (i *AmlFilesystem) ToOutput(ctx context.Context) pulumix.Output[*AmlFilesystem] {
	return pulumix.Output[*AmlFilesystem]{
		OutputState: i.ToAmlFilesystemOutputWithContext(ctx).OutputState,
	}
}

type AmlFilesystemOutput struct{ *pulumi.OutputState }

func (AmlFilesystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlFilesystem)(nil)).Elem()
}

func (o AmlFilesystemOutput) ToAmlFilesystemOutput() AmlFilesystemOutput {
	return o
}

func (o AmlFilesystemOutput) ToAmlFilesystemOutputWithContext(ctx context.Context) AmlFilesystemOutput {
	return o
}

func (o AmlFilesystemOutput) ToOutput(ctx context.Context) pulumix.Output[*AmlFilesystem] {
	return pulumix.Output[*AmlFilesystem]{
		OutputState: o.OutputState,
	}
}

// Client information for the AML file system.
func (o AmlFilesystemOutput) ClientInfo() AmlFilesystemClientInfoResponseOutput {
	return o.ApplyT(func(v *AmlFilesystem) AmlFilesystemClientInfoResponseOutput { return v.ClientInfo }).(AmlFilesystemClientInfoResponseOutput)
}

// Specifies encryption settings of the AML file system.
func (o AmlFilesystemOutput) EncryptionSettings() AmlFilesystemEncryptionSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AmlFilesystem) AmlFilesystemEncryptionSettingsResponsePtrOutput { return v.EncryptionSettings }).(AmlFilesystemEncryptionSettingsResponsePtrOutput)
}

// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.
func (o AmlFilesystemOutput) FilesystemSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringOutput { return v.FilesystemSubnet }).(pulumi.StringOutput)
}

// Health of the AML file system.
func (o AmlFilesystemOutput) Health() AmlFilesystemHealthResponseOutput {
	return o.ApplyT(func(v *AmlFilesystem) AmlFilesystemHealthResponseOutput { return v.Health }).(AmlFilesystemHealthResponseOutput)
}

// Hydration and archive settings and status
func (o AmlFilesystemOutput) Hsm() AmlFilesystemResponseHsmPtrOutput {
	return o.ApplyT(func(v *AmlFilesystem) AmlFilesystemResponseHsmPtrOutput { return v.Hsm }).(AmlFilesystemResponseHsmPtrOutput)
}

// The managed identity used by the AML file system, if configured.
func (o AmlFilesystemOutput) Identity() AmlFilesystemIdentityResponsePtrOutput {
	return o.ApplyT(func(v *AmlFilesystem) AmlFilesystemIdentityResponsePtrOutput { return v.Identity }).(AmlFilesystemIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o AmlFilesystemOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Start time of a 30-minute weekly maintenance window.
func (o AmlFilesystemOutput) MaintenanceWindow() AmlFilesystemResponseMaintenanceWindowOutput {
	return o.ApplyT(func(v *AmlFilesystem) AmlFilesystemResponseMaintenanceWindowOutput { return v.MaintenanceWindow }).(AmlFilesystemResponseMaintenanceWindowOutput)
}

// The name of the resource
func (o AmlFilesystemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ARM provisioning state.
func (o AmlFilesystemOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SKU for the resource.
func (o AmlFilesystemOutput) Sku() SkuNameResponsePtrOutput {
	return o.ApplyT(func(v *AmlFilesystem) SkuNameResponsePtrOutput { return v.Sku }).(SkuNameResponsePtrOutput)
}

// The size of the AML file system, in TiB. This might be rounded up.
func (o AmlFilesystemOutput) StorageCapacityTiB() pulumi.Float64Output {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.Float64Output { return v.StorageCapacityTiB }).(pulumi.Float64Output)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AmlFilesystemOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AmlFilesystem) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AmlFilesystemOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
func (o AmlFilesystemOutput) ThroughputProvisionedMBps() pulumi.IntOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.IntOutput { return v.ThroughputProvisionedMBps }).(pulumi.IntOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AmlFilesystemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Availability zones for resources. This field should only contain a single element in the array.
func (o AmlFilesystemOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AmlFilesystem) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AmlFilesystemOutput{})
}
