// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Managed application artifact.
type ApplicationArtifactResponse struct {
	// The managed application artifact name.
	Name string `pulumi:"name"`
	// The managed application artifact type.
	Type string `pulumi:"type"`
	// The managed application artifact blob uri.
	Uri string `pulumi:"uri"`
}

// Managed application artifact.
type ApplicationArtifactResponseOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifactResponse)(nil)).Elem()
}

func (o ApplicationArtifactResponseOutput) ToApplicationArtifactResponseOutput() ApplicationArtifactResponseOutput {
	return o
}

func (o ApplicationArtifactResponseOutput) ToApplicationArtifactResponseOutputWithContext(ctx context.Context) ApplicationArtifactResponseOutput {
	return o
}

// The managed application artifact name.
func (o ApplicationArtifactResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationArtifactResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The managed application artifact type.
func (o ApplicationArtifactResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationArtifactResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The managed application artifact blob uri.
func (o ApplicationArtifactResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationArtifactResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type ApplicationArtifactResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationArtifactResponse)(nil)).Elem()
}

func (o ApplicationArtifactResponseArrayOutput) ToApplicationArtifactResponseArrayOutput() ApplicationArtifactResponseArrayOutput {
	return o
}

func (o ApplicationArtifactResponseArrayOutput) ToApplicationArtifactResponseArrayOutputWithContext(ctx context.Context) ApplicationArtifactResponseArrayOutput {
	return o
}

func (o ApplicationArtifactResponseArrayOutput) Index(i pulumi.IntInput) ApplicationArtifactResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationArtifactResponse {
		return vs[0].([]ApplicationArtifactResponse)[vs[1].(int)]
	}).(ApplicationArtifactResponseOutput)
}

// The managed application provider authorization.
type ApplicationAuthorizationResponse struct {
	// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
	PrincipalId string `pulumi:"principalId"`
	// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// The managed application provider authorization.
type ApplicationAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAuthorizationResponse)(nil)).Elem()
}

func (o ApplicationAuthorizationResponseOutput) ToApplicationAuthorizationResponseOutput() ApplicationAuthorizationResponseOutput {
	return o
}

func (o ApplicationAuthorizationResponseOutput) ToApplicationAuthorizationResponseOutputWithContext(ctx context.Context) ApplicationAuthorizationResponseOutput {
	return o
}

// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
func (o ApplicationAuthorizationResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAuthorizationResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
func (o ApplicationAuthorizationResponseOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAuthorizationResponse) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type ApplicationAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAuthorizationResponse)(nil)).Elem()
}

func (o ApplicationAuthorizationResponseArrayOutput) ToApplicationAuthorizationResponseArrayOutput() ApplicationAuthorizationResponseArrayOutput {
	return o
}

func (o ApplicationAuthorizationResponseArrayOutput) ToApplicationAuthorizationResponseArrayOutputWithContext(ctx context.Context) ApplicationAuthorizationResponseArrayOutput {
	return o
}

func (o ApplicationAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAuthorizationResponse {
		return vs[0].([]ApplicationAuthorizationResponse)[vs[1].(int)]
	}).(ApplicationAuthorizationResponseOutput)
}

// Managed application billing details definition.
type ApplicationBillingDetailsDefinitionResponse struct {
	// The managed application resource usage Id.
	ResourceUsageId *string `pulumi:"resourceUsageId"`
}

// Managed application billing details definition.
type ApplicationBillingDetailsDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationBillingDetailsDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationBillingDetailsDefinitionResponse)(nil)).Elem()
}

func (o ApplicationBillingDetailsDefinitionResponseOutput) ToApplicationBillingDetailsDefinitionResponseOutput() ApplicationBillingDetailsDefinitionResponseOutput {
	return o
}

func (o ApplicationBillingDetailsDefinitionResponseOutput) ToApplicationBillingDetailsDefinitionResponseOutputWithContext(ctx context.Context) ApplicationBillingDetailsDefinitionResponseOutput {
	return o
}

// The managed application resource usage Id.
func (o ApplicationBillingDetailsDefinitionResponseOutput) ResourceUsageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationBillingDetailsDefinitionResponse) *string { return v.ResourceUsageId }).(pulumi.StringPtrOutput)
}

// The application client details to track the entity creating/updating the managed app resource.
type ApplicationClientDetailsResponse struct {
	// The client application Id.
	ApplicationId *string `pulumi:"applicationId"`
	// The client Oid.
	Oid *string `pulumi:"oid"`
	// The client Puid
	Puid *string `pulumi:"puid"`
}

// The application client details to track the entity creating/updating the managed app resource.
type ApplicationClientDetailsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationClientDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationClientDetailsResponse)(nil)).Elem()
}

func (o ApplicationClientDetailsResponseOutput) ToApplicationClientDetailsResponseOutput() ApplicationClientDetailsResponseOutput {
	return o
}

func (o ApplicationClientDetailsResponseOutput) ToApplicationClientDetailsResponseOutputWithContext(ctx context.Context) ApplicationClientDetailsResponseOutput {
	return o
}

// The client application Id.
func (o ApplicationClientDetailsResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationClientDetailsResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The client Oid.
func (o ApplicationClientDetailsResponseOutput) Oid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationClientDetailsResponse) *string { return v.Oid }).(pulumi.StringPtrOutput)
}

// The client Puid
func (o ApplicationClientDetailsResponseOutput) Puid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationClientDetailsResponse) *string { return v.Puid }).(pulumi.StringPtrOutput)
}

// Managed application Jit access policy.
type ApplicationJitAccessPolicy struct {
	// Whether the JIT access is enabled.
	JitAccessEnabled bool `pulumi:"jitAccessEnabled"`
	// JIT approval mode.
	JitApprovalMode *string `pulumi:"jitApprovalMode"`
	// The JIT approvers
	JitApprovers []JitApproverDefinition `pulumi:"jitApprovers"`
	// The maximum duration JIT access is granted. This is an ISO8601 time period value.
	MaximumJitAccessDuration *string `pulumi:"maximumJitAccessDuration"`
}

// ApplicationJitAccessPolicyInput is an input type that accepts ApplicationJitAccessPolicyArgs and ApplicationJitAccessPolicyOutput values.
// You can construct a concrete instance of `ApplicationJitAccessPolicyInput` via:
//
//	ApplicationJitAccessPolicyArgs{...}
type ApplicationJitAccessPolicyInput interface {
	pulumi.Input

	ToApplicationJitAccessPolicyOutput() ApplicationJitAccessPolicyOutput
	ToApplicationJitAccessPolicyOutputWithContext(context.Context) ApplicationJitAccessPolicyOutput
}

// Managed application Jit access policy.
type ApplicationJitAccessPolicyArgs struct {
	// Whether the JIT access is enabled.
	JitAccessEnabled pulumi.BoolInput `pulumi:"jitAccessEnabled"`
	// JIT approval mode.
	JitApprovalMode pulumi.StringPtrInput `pulumi:"jitApprovalMode"`
	// The JIT approvers
	JitApprovers JitApproverDefinitionArrayInput `pulumi:"jitApprovers"`
	// The maximum duration JIT access is granted. This is an ISO8601 time period value.
	MaximumJitAccessDuration pulumi.StringPtrInput `pulumi:"maximumJitAccessDuration"`
}

func (ApplicationJitAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJitAccessPolicy)(nil)).Elem()
}

func (i ApplicationJitAccessPolicyArgs) ToApplicationJitAccessPolicyOutput() ApplicationJitAccessPolicyOutput {
	return i.ToApplicationJitAccessPolicyOutputWithContext(context.Background())
}

func (i ApplicationJitAccessPolicyArgs) ToApplicationJitAccessPolicyOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJitAccessPolicyOutput)
}

func (i ApplicationJitAccessPolicyArgs) ToApplicationJitAccessPolicyPtrOutput() ApplicationJitAccessPolicyPtrOutput {
	return i.ToApplicationJitAccessPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationJitAccessPolicyArgs) ToApplicationJitAccessPolicyPtrOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJitAccessPolicyOutput).ToApplicationJitAccessPolicyPtrOutputWithContext(ctx)
}

// ApplicationJitAccessPolicyPtrInput is an input type that accepts ApplicationJitAccessPolicyArgs, ApplicationJitAccessPolicyPtr and ApplicationJitAccessPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationJitAccessPolicyPtrInput` via:
//
//	        ApplicationJitAccessPolicyArgs{...}
//
//	or:
//
//	        nil
type ApplicationJitAccessPolicyPtrInput interface {
	pulumi.Input

	ToApplicationJitAccessPolicyPtrOutput() ApplicationJitAccessPolicyPtrOutput
	ToApplicationJitAccessPolicyPtrOutputWithContext(context.Context) ApplicationJitAccessPolicyPtrOutput
}

type applicationJitAccessPolicyPtrType ApplicationJitAccessPolicyArgs

func ApplicationJitAccessPolicyPtr(v *ApplicationJitAccessPolicyArgs) ApplicationJitAccessPolicyPtrInput {
	return (*applicationJitAccessPolicyPtrType)(v)
}

func (*applicationJitAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJitAccessPolicy)(nil)).Elem()
}

func (i *applicationJitAccessPolicyPtrType) ToApplicationJitAccessPolicyPtrOutput() ApplicationJitAccessPolicyPtrOutput {
	return i.ToApplicationJitAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationJitAccessPolicyPtrType) ToApplicationJitAccessPolicyPtrOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJitAccessPolicyPtrOutput)
}

// Managed application Jit access policy.
type ApplicationJitAccessPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationJitAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJitAccessPolicy)(nil)).Elem()
}

func (o ApplicationJitAccessPolicyOutput) ToApplicationJitAccessPolicyOutput() ApplicationJitAccessPolicyOutput {
	return o
}

func (o ApplicationJitAccessPolicyOutput) ToApplicationJitAccessPolicyOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyOutput {
	return o
}

func (o ApplicationJitAccessPolicyOutput) ToApplicationJitAccessPolicyPtrOutput() ApplicationJitAccessPolicyPtrOutput {
	return o.ToApplicationJitAccessPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationJitAccessPolicyOutput) ToApplicationJitAccessPolicyPtrOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationJitAccessPolicy) *ApplicationJitAccessPolicy {
		return &v
	}).(ApplicationJitAccessPolicyPtrOutput)
}

// Whether the JIT access is enabled.
func (o ApplicationJitAccessPolicyOutput) JitAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicy) bool { return v.JitAccessEnabled }).(pulumi.BoolOutput)
}

// JIT approval mode.
func (o ApplicationJitAccessPolicyOutput) JitApprovalMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicy) *string { return v.JitApprovalMode }).(pulumi.StringPtrOutput)
}

// The JIT approvers
func (o ApplicationJitAccessPolicyOutput) JitApprovers() JitApproverDefinitionArrayOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicy) []JitApproverDefinition { return v.JitApprovers }).(JitApproverDefinitionArrayOutput)
}

// The maximum duration JIT access is granted. This is an ISO8601 time period value.
func (o ApplicationJitAccessPolicyOutput) MaximumJitAccessDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicy) *string { return v.MaximumJitAccessDuration }).(pulumi.StringPtrOutput)
}

type ApplicationJitAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationJitAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJitAccessPolicy)(nil)).Elem()
}

func (o ApplicationJitAccessPolicyPtrOutput) ToApplicationJitAccessPolicyPtrOutput() ApplicationJitAccessPolicyPtrOutput {
	return o
}

func (o ApplicationJitAccessPolicyPtrOutput) ToApplicationJitAccessPolicyPtrOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyPtrOutput {
	return o
}

func (o ApplicationJitAccessPolicyPtrOutput) Elem() ApplicationJitAccessPolicyOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicy) ApplicationJitAccessPolicy {
		if v != nil {
			return *v
		}
		var ret ApplicationJitAccessPolicy
		return ret
	}).(ApplicationJitAccessPolicyOutput)
}

// Whether the JIT access is enabled.
func (o ApplicationJitAccessPolicyPtrOutput) JitAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.JitAccessEnabled
	}).(pulumi.BoolPtrOutput)
}

// JIT approval mode.
func (o ApplicationJitAccessPolicyPtrOutput) JitApprovalMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.JitApprovalMode
	}).(pulumi.StringPtrOutput)
}

// The JIT approvers
func (o ApplicationJitAccessPolicyPtrOutput) JitApprovers() JitApproverDefinitionArrayOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicy) []JitApproverDefinition {
		if v == nil {
			return nil
		}
		return v.JitApprovers
	}).(JitApproverDefinitionArrayOutput)
}

// The maximum duration JIT access is granted. This is an ISO8601 time period value.
func (o ApplicationJitAccessPolicyPtrOutput) MaximumJitAccessDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MaximumJitAccessDuration
	}).(pulumi.StringPtrOutput)
}

// Managed application Jit access policy.
type ApplicationJitAccessPolicyResponse struct {
	// Whether the JIT access is enabled.
	JitAccessEnabled bool `pulumi:"jitAccessEnabled"`
	// JIT approval mode.
	JitApprovalMode *string `pulumi:"jitApprovalMode"`
	// The JIT approvers
	JitApprovers []JitApproverDefinitionResponse `pulumi:"jitApprovers"`
	// The maximum duration JIT access is granted. This is an ISO8601 time period value.
	MaximumJitAccessDuration *string `pulumi:"maximumJitAccessDuration"`
}

// Managed application Jit access policy.
type ApplicationJitAccessPolicyResponseOutput struct{ *pulumi.OutputState }

func (ApplicationJitAccessPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJitAccessPolicyResponse)(nil)).Elem()
}

func (o ApplicationJitAccessPolicyResponseOutput) ToApplicationJitAccessPolicyResponseOutput() ApplicationJitAccessPolicyResponseOutput {
	return o
}

func (o ApplicationJitAccessPolicyResponseOutput) ToApplicationJitAccessPolicyResponseOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyResponseOutput {
	return o
}

// Whether the JIT access is enabled.
func (o ApplicationJitAccessPolicyResponseOutput) JitAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicyResponse) bool { return v.JitAccessEnabled }).(pulumi.BoolOutput)
}

// JIT approval mode.
func (o ApplicationJitAccessPolicyResponseOutput) JitApprovalMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicyResponse) *string { return v.JitApprovalMode }).(pulumi.StringPtrOutput)
}

// The JIT approvers
func (o ApplicationJitAccessPolicyResponseOutput) JitApprovers() JitApproverDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicyResponse) []JitApproverDefinitionResponse { return v.JitApprovers }).(JitApproverDefinitionResponseArrayOutput)
}

// The maximum duration JIT access is granted. This is an ISO8601 time period value.
func (o ApplicationJitAccessPolicyResponseOutput) MaximumJitAccessDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJitAccessPolicyResponse) *string { return v.MaximumJitAccessDuration }).(pulumi.StringPtrOutput)
}

type ApplicationJitAccessPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationJitAccessPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJitAccessPolicyResponse)(nil)).Elem()
}

func (o ApplicationJitAccessPolicyResponsePtrOutput) ToApplicationJitAccessPolicyResponsePtrOutput() ApplicationJitAccessPolicyResponsePtrOutput {
	return o
}

func (o ApplicationJitAccessPolicyResponsePtrOutput) ToApplicationJitAccessPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationJitAccessPolicyResponsePtrOutput {
	return o
}

func (o ApplicationJitAccessPolicyResponsePtrOutput) Elem() ApplicationJitAccessPolicyResponseOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicyResponse) ApplicationJitAccessPolicyResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationJitAccessPolicyResponse
		return ret
	}).(ApplicationJitAccessPolicyResponseOutput)
}

// Whether the JIT access is enabled.
func (o ApplicationJitAccessPolicyResponsePtrOutput) JitAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.JitAccessEnabled
	}).(pulumi.BoolPtrOutput)
}

// JIT approval mode.
func (o ApplicationJitAccessPolicyResponsePtrOutput) JitApprovalMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.JitApprovalMode
	}).(pulumi.StringPtrOutput)
}

// The JIT approvers
func (o ApplicationJitAccessPolicyResponsePtrOutput) JitApprovers() JitApproverDefinitionResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicyResponse) []JitApproverDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.JitApprovers
	}).(JitApproverDefinitionResponseArrayOutput)
}

// The maximum duration JIT access is granted. This is an ISO8601 time period value.
func (o ApplicationJitAccessPolicyResponsePtrOutput) MaximumJitAccessDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJitAccessPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaximumJitAccessDuration
	}).(pulumi.StringPtrOutput)
}

// The application package contact information.
type ApplicationPackageContactResponse struct {
	// The contact name.
	ContactName *string `pulumi:"contactName"`
	// The contact email.
	Email string `pulumi:"email"`
	// The contact phone number.
	Phone string `pulumi:"phone"`
}

// The application package contact information.
type ApplicationPackageContactResponseOutput struct{ *pulumi.OutputState }

func (ApplicationPackageContactResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageContactResponse)(nil)).Elem()
}

func (o ApplicationPackageContactResponseOutput) ToApplicationPackageContactResponseOutput() ApplicationPackageContactResponseOutput {
	return o
}

func (o ApplicationPackageContactResponseOutput) ToApplicationPackageContactResponseOutputWithContext(ctx context.Context) ApplicationPackageContactResponseOutput {
	return o
}

// The contact name.
func (o ApplicationPackageContactResponseOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageContactResponse) *string { return v.ContactName }).(pulumi.StringPtrOutput)
}

// The contact email.
func (o ApplicationPackageContactResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageContactResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The contact phone number.
func (o ApplicationPackageContactResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageContactResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// The appliance package support URLs.
type ApplicationPackageSupportUrlsResponse struct {
	// The government cloud support URL.
	GovernmentCloud *string `pulumi:"governmentCloud"`
	// The public azure support URL.
	PublicAzure *string `pulumi:"publicAzure"`
}

// The appliance package support URLs.
type ApplicationPackageSupportUrlsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationPackageSupportUrlsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageSupportUrlsResponse)(nil)).Elem()
}

func (o ApplicationPackageSupportUrlsResponseOutput) ToApplicationPackageSupportUrlsResponseOutput() ApplicationPackageSupportUrlsResponseOutput {
	return o
}

func (o ApplicationPackageSupportUrlsResponseOutput) ToApplicationPackageSupportUrlsResponseOutputWithContext(ctx context.Context) ApplicationPackageSupportUrlsResponseOutput {
	return o
}

// The government cloud support URL.
func (o ApplicationPackageSupportUrlsResponseOutput) GovernmentCloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageSupportUrlsResponse) *string { return v.GovernmentCloud }).(pulumi.StringPtrOutput)
}

// The public azure support URL.
func (o ApplicationPackageSupportUrlsResponseOutput) PublicAzure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageSupportUrlsResponse) *string { return v.PublicAzure }).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//	IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//	        IdentityArgs{...}
//
//	or:
//
//	        nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v Identity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v Identity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *Identity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserAssignedResourceIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedResourceIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedResourceIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedResourceIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedResourceIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedResourceIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedResourceIdentityResponseMapOutput)
}

// JIT approver definition.
type JitApproverDefinition struct {
	// The approver display name.
	DisplayName *string `pulumi:"displayName"`
	// The approver service principal Id.
	Id string `pulumi:"id"`
	// The approver type.
	Type *string `pulumi:"type"`
}

// JitApproverDefinitionInput is an input type that accepts JitApproverDefinitionArgs and JitApproverDefinitionOutput values.
// You can construct a concrete instance of `JitApproverDefinitionInput` via:
//
//	JitApproverDefinitionArgs{...}
type JitApproverDefinitionInput interface {
	pulumi.Input

	ToJitApproverDefinitionOutput() JitApproverDefinitionOutput
	ToJitApproverDefinitionOutputWithContext(context.Context) JitApproverDefinitionOutput
}

// JIT approver definition.
type JitApproverDefinitionArgs struct {
	// The approver display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The approver service principal Id.
	Id pulumi.StringInput `pulumi:"id"`
	// The approver type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JitApproverDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApproverDefinition)(nil)).Elem()
}

func (i JitApproverDefinitionArgs) ToJitApproverDefinitionOutput() JitApproverDefinitionOutput {
	return i.ToJitApproverDefinitionOutputWithContext(context.Background())
}

func (i JitApproverDefinitionArgs) ToJitApproverDefinitionOutputWithContext(ctx context.Context) JitApproverDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JitApproverDefinitionOutput)
}

// JitApproverDefinitionArrayInput is an input type that accepts JitApproverDefinitionArray and JitApproverDefinitionArrayOutput values.
// You can construct a concrete instance of `JitApproverDefinitionArrayInput` via:
//
//	JitApproverDefinitionArray{ JitApproverDefinitionArgs{...} }
type JitApproverDefinitionArrayInput interface {
	pulumi.Input

	ToJitApproverDefinitionArrayOutput() JitApproverDefinitionArrayOutput
	ToJitApproverDefinitionArrayOutputWithContext(context.Context) JitApproverDefinitionArrayOutput
}

type JitApproverDefinitionArray []JitApproverDefinitionInput

func (JitApproverDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JitApproverDefinition)(nil)).Elem()
}

func (i JitApproverDefinitionArray) ToJitApproverDefinitionArrayOutput() JitApproverDefinitionArrayOutput {
	return i.ToJitApproverDefinitionArrayOutputWithContext(context.Background())
}

func (i JitApproverDefinitionArray) ToJitApproverDefinitionArrayOutputWithContext(ctx context.Context) JitApproverDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JitApproverDefinitionArrayOutput)
}

// JIT approver definition.
type JitApproverDefinitionOutput struct{ *pulumi.OutputState }

func (JitApproverDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApproverDefinition)(nil)).Elem()
}

func (o JitApproverDefinitionOutput) ToJitApproverDefinitionOutput() JitApproverDefinitionOutput {
	return o
}

func (o JitApproverDefinitionOutput) ToJitApproverDefinitionOutputWithContext(ctx context.Context) JitApproverDefinitionOutput {
	return o
}

// The approver display name.
func (o JitApproverDefinitionOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JitApproverDefinition) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The approver service principal Id.
func (o JitApproverDefinitionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v JitApproverDefinition) string { return v.Id }).(pulumi.StringOutput)
}

// The approver type.
func (o JitApproverDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JitApproverDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JitApproverDefinitionArrayOutput struct{ *pulumi.OutputState }

func (JitApproverDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JitApproverDefinition)(nil)).Elem()
}

func (o JitApproverDefinitionArrayOutput) ToJitApproverDefinitionArrayOutput() JitApproverDefinitionArrayOutput {
	return o
}

func (o JitApproverDefinitionArrayOutput) ToJitApproverDefinitionArrayOutputWithContext(ctx context.Context) JitApproverDefinitionArrayOutput {
	return o
}

func (o JitApproverDefinitionArrayOutput) Index(i pulumi.IntInput) JitApproverDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JitApproverDefinition {
		return vs[0].([]JitApproverDefinition)[vs[1].(int)]
	}).(JitApproverDefinitionOutput)
}

// JIT approver definition.
type JitApproverDefinitionResponse struct {
	// The approver display name.
	DisplayName *string `pulumi:"displayName"`
	// The approver service principal Id.
	Id string `pulumi:"id"`
	// The approver type.
	Type *string `pulumi:"type"`
}

// JIT approver definition.
type JitApproverDefinitionResponseOutput struct{ *pulumi.OutputState }

func (JitApproverDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApproverDefinitionResponse)(nil)).Elem()
}

func (o JitApproverDefinitionResponseOutput) ToJitApproverDefinitionResponseOutput() JitApproverDefinitionResponseOutput {
	return o
}

func (o JitApproverDefinitionResponseOutput) ToJitApproverDefinitionResponseOutputWithContext(ctx context.Context) JitApproverDefinitionResponseOutput {
	return o
}

// The approver display name.
func (o JitApproverDefinitionResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JitApproverDefinitionResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The approver service principal Id.
func (o JitApproverDefinitionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v JitApproverDefinitionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The approver type.
func (o JitApproverDefinitionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JitApproverDefinitionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JitApproverDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (JitApproverDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JitApproverDefinitionResponse)(nil)).Elem()
}

func (o JitApproverDefinitionResponseArrayOutput) ToJitApproverDefinitionResponseArrayOutput() JitApproverDefinitionResponseArrayOutput {
	return o
}

func (o JitApproverDefinitionResponseArrayOutput) ToJitApproverDefinitionResponseArrayOutputWithContext(ctx context.Context) JitApproverDefinitionResponseArrayOutput {
	return o
}

func (o JitApproverDefinitionResponseArrayOutput) Index(i pulumi.IntInput) JitApproverDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JitApproverDefinitionResponse {
		return vs[0].([]JitApproverDefinitionResponse)[vs[1].(int)]
	}).(JitApproverDefinitionResponseOutput)
}

// The managed identity token for the managed app resource.
type ManagedIdentityTokenResponse struct {
	// The requested access token.
	AccessToken *string `pulumi:"accessToken"`
	// The aud (audience) the access token was request for. This is the same as what was provided in the listTokens request.
	AuthorizationAudience *string `pulumi:"authorizationAudience"`
	// The number of seconds the access token will be valid.
	ExpiresIn *string `pulumi:"expiresIn"`
	// The timespan when the access token expires. This is represented as the number of seconds from epoch.
	ExpiresOn *string `pulumi:"expiresOn"`
	// The timespan when the access token takes effect. This is represented as the number of seconds from epoch.
	NotBefore *string `pulumi:"notBefore"`
	// The Azure resource ID for the issued token. This is either the managed application ID or the user-assigned identity ID.
	ResourceId *string `pulumi:"resourceId"`
	// The type of the token.
	TokenType *string `pulumi:"tokenType"`
}

// The managed identity token for the managed app resource.
type ManagedIdentityTokenResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityTokenResponse)(nil)).Elem()
}

func (o ManagedIdentityTokenResponseOutput) ToManagedIdentityTokenResponseOutput() ManagedIdentityTokenResponseOutput {
	return o
}

func (o ManagedIdentityTokenResponseOutput) ToManagedIdentityTokenResponseOutputWithContext(ctx context.Context) ManagedIdentityTokenResponseOutput {
	return o
}

// The requested access token.
func (o ManagedIdentityTokenResponseOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The aud (audience) the access token was request for. This is the same as what was provided in the listTokens request.
func (o ManagedIdentityTokenResponseOutput) AuthorizationAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.AuthorizationAudience }).(pulumi.StringPtrOutput)
}

// The number of seconds the access token will be valid.
func (o ManagedIdentityTokenResponseOutput) ExpiresIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.ExpiresIn }).(pulumi.StringPtrOutput)
}

// The timespan when the access token expires. This is represented as the number of seconds from epoch.
func (o ManagedIdentityTokenResponseOutput) ExpiresOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.ExpiresOn }).(pulumi.StringPtrOutput)
}

// The timespan when the access token takes effect. This is represented as the number of seconds from epoch.
func (o ManagedIdentityTokenResponseOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.NotBefore }).(pulumi.StringPtrOutput)
}

// The Azure resource ID for the issued token. This is either the managed application ID or the user-assigned identity ID.
func (o ManagedIdentityTokenResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of the token.
func (o ManagedIdentityTokenResponseOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.TokenType }).(pulumi.StringPtrOutput)
}

type ManagedIdentityTokenResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTokenResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedIdentityTokenResponse)(nil)).Elem()
}

func (o ManagedIdentityTokenResponseArrayOutput) ToManagedIdentityTokenResponseArrayOutput() ManagedIdentityTokenResponseArrayOutput {
	return o
}

func (o ManagedIdentityTokenResponseArrayOutput) ToManagedIdentityTokenResponseArrayOutputWithContext(ctx context.Context) ManagedIdentityTokenResponseArrayOutput {
	return o
}

func (o ManagedIdentityTokenResponseArrayOutput) Index(i pulumi.IntInput) ManagedIdentityTokenResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedIdentityTokenResponse {
		return vs[0].([]ManagedIdentityTokenResponse)[vs[1].(int)]
	}).(ManagedIdentityTokenResponseOutput)
}

// Plan for the managed application.
type Plan struct {
	// The plan name.
	Name string `pulumi:"name"`
	// The product code.
	Product string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher string `pulumi:"publisher"`
	// The plan's version.
	Version string `pulumi:"version"`
}

// PlanInput is an input type that accepts PlanArgs and PlanOutput values.
// You can construct a concrete instance of `PlanInput` via:
//
//	PlanArgs{...}
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

// Plan for the managed application.
type PlanArgs struct {
	// The plan name.
	Name pulumi.StringInput `pulumi:"name"`
	// The product code.
	Product pulumi.StringInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The plan's version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (i PlanArgs) ToPlanOutput() PlanOutput {
	return i.ToPlanOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput)
}

func (i PlanArgs) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput).ToPlanPtrOutputWithContext(ctx)
}

// PlanPtrInput is an input type that accepts PlanArgs, PlanPtr and PlanPtrOutput values.
// You can construct a concrete instance of `PlanPtrInput` via:
//
//	        PlanArgs{...}
//
//	or:
//
//	        nil
type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtrType PlanArgs

func PlanPtr(v *PlanArgs) PlanPtrInput {
	return (*planPtrType)(v)
}

func (*planPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (i *planPtrType) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i *planPtrType) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanPtrOutput)
}

// Plan for the managed application.
type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

// The plan name.
func (o PlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Name }).(pulumi.StringOutput)
}

// The product code.
func (o PlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Product }).(pulumi.StringOutput)
}

// The promotion code.
func (o PlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Publisher }).(pulumi.StringOutput)
}

// The plan's version.
func (o PlanOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Version }).(pulumi.StringOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan {
		if v != nil {
			return *v
		}
		var ret Plan
		return ret
	}).(PlanOutput)
}

// The plan name.
func (o PlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The product code.
func (o PlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The plan's version.
func (o PlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Plan for the managed application.
type PlanResponse struct {
	// The plan name.
	Name string `pulumi:"name"`
	// The product code.
	Product string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher string `pulumi:"publisher"`
	// The plan's version.
	Version string `pulumi:"version"`
}

// Plan for the managed application.
type PlanResponseOutput struct{ *pulumi.OutputState }

func (PlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (o PlanResponseOutput) ToPlanResponseOutput() PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return o
}

// The plan name.
func (o PlanResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The product code.
func (o PlanResponseOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Product }).(pulumi.StringOutput)
}

// The promotion code.
func (o PlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The plan's version.
func (o PlanResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Version }).(pulumi.StringOutput)
}

type PlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) Elem() PlanResponseOutput {
	return o.ApplyT(func(v *PlanResponse) PlanResponse {
		if v != nil {
			return *v
		}
		var ret PlanResponse
		return ret
	}).(PlanResponseOutput)
}

// The plan name.
func (o PlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The product code.
func (o PlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The plan's version.
func (o PlanResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// SKU for the resource.
type Sku struct {
	// The SKU capacity.
	Capacity *int `pulumi:"capacity"`
	// The SKU family.
	Family *string `pulumi:"family"`
	// The SKU model.
	Model *string `pulumi:"model"`
	// The SKU name.
	Name string `pulumi:"name"`
	// The SKU size.
	Size *string `pulumi:"size"`
	// The SKU tier.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// SKU for the resource.
type SkuArgs struct {
	// The SKU capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The SKU model.
	Model pulumi.StringPtrInput `pulumi:"model"`
	// The SKU name.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// SKU for the resource.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU capacity.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The SKU capacity.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size.
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU for the resource.
type SkuResponse struct {
	// The SKU capacity.
	Capacity *int `pulumi:"capacity"`
	// The SKU family.
	Family *string `pulumi:"family"`
	// The SKU model.
	Model *string `pulumi:"model"`
	// The SKU name.
	Name string `pulumi:"name"`
	// The SKU size.
	Size *string `pulumi:"size"`
	// The SKU tier.
	Tier *string `pulumi:"tier"`
}

// SKU for the resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The SKU capacity.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuResponseOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The SKU capacity.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuResponsePtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size.
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Represents the user assigned identity that is contained within the UserAssignedIdentities dictionary on ResourceIdentity
type UserAssignedResourceIdentityResponse struct {
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of user assigned identity.
	TenantId string `pulumi:"tenantId"`
}

// Represents the user assigned identity that is contained within the UserAssignedIdentities dictionary on ResourceIdentity
type UserAssignedResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedResourceIdentityResponse)(nil)).Elem()
}

func (o UserAssignedResourceIdentityResponseOutput) ToUserAssignedResourceIdentityResponseOutput() UserAssignedResourceIdentityResponseOutput {
	return o
}

func (o UserAssignedResourceIdentityResponseOutput) ToUserAssignedResourceIdentityResponseOutputWithContext(ctx context.Context) UserAssignedResourceIdentityResponseOutput {
	return o
}

// The principal id of user assigned identity.
func (o UserAssignedResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of user assigned identity.
func (o UserAssignedResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type UserAssignedResourceIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedResourceIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedResourceIdentityResponse)(nil)).Elem()
}

func (o UserAssignedResourceIdentityResponseMapOutput) ToUserAssignedResourceIdentityResponseMapOutput() UserAssignedResourceIdentityResponseMapOutput {
	return o
}

func (o UserAssignedResourceIdentityResponseMapOutput) ToUserAssignedResourceIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedResourceIdentityResponseMapOutput {
	return o
}

func (o UserAssignedResourceIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedResourceIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedResourceIdentityResponse {
		return vs[0].(map[string]UserAssignedResourceIdentityResponse)[vs[1].(string)]
	}).(UserAssignedResourceIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationArtifactResponseOutput{})
	pulumi.RegisterOutputType(ApplicationArtifactResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationBillingDetailsDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationClientDetailsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationJitAccessPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationJitAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationJitAccessPolicyResponseOutput{})
	pulumi.RegisterOutputType(ApplicationJitAccessPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationPackageContactResponseOutput{})
	pulumi.RegisterOutputType(ApplicationPackageSupportUrlsResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(JitApproverDefinitionOutput{})
	pulumi.RegisterOutputType(JitApproverDefinitionArrayOutput{})
	pulumi.RegisterOutputType(JitApproverDefinitionResponseOutput{})
	pulumi.RegisterOutputType(JitApproverDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTokenResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTokenResponseArrayOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(PlanResponseOutput{})
	pulumi.RegisterOutputType(PlanResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedResourceIdentityResponseMapOutput{})
}
