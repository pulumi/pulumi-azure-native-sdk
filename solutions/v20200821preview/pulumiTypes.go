// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200821preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The managed identity token for the managed app resource.
type ManagedIdentityTokenResponse struct {
	// The requested access token.
	AccessToken *string `pulumi:"accessToken"`
	// The aud (audience) the access token was request for. This is the same as what was provided in the listTokens request.
	AuthorizationAudience *string `pulumi:"authorizationAudience"`
	// The number of seconds the access token will be valid.
	ExpiresIn *string `pulumi:"expiresIn"`
	// The timespan when the access token expires. This is represented as the number of seconds from epoch.
	ExpiresOn *string `pulumi:"expiresOn"`
	// The timespan when the access token takes effect. This is represented as the number of seconds from epoch.
	NotBefore *string `pulumi:"notBefore"`
	// The Azure resource ID for the issued token. This is either the managed application ID or the user-assigned identity ID.
	ResourceId *string `pulumi:"resourceId"`
	// The type of the token.
	TokenType *string `pulumi:"tokenType"`
}

// The managed identity token for the managed app resource.
type ManagedIdentityTokenResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityTokenResponse)(nil)).Elem()
}

func (o ManagedIdentityTokenResponseOutput) ToManagedIdentityTokenResponseOutput() ManagedIdentityTokenResponseOutput {
	return o
}

func (o ManagedIdentityTokenResponseOutput) ToManagedIdentityTokenResponseOutputWithContext(ctx context.Context) ManagedIdentityTokenResponseOutput {
	return o
}

// The requested access token.
func (o ManagedIdentityTokenResponseOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The aud (audience) the access token was request for. This is the same as what was provided in the listTokens request.
func (o ManagedIdentityTokenResponseOutput) AuthorizationAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.AuthorizationAudience }).(pulumi.StringPtrOutput)
}

// The number of seconds the access token will be valid.
func (o ManagedIdentityTokenResponseOutput) ExpiresIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.ExpiresIn }).(pulumi.StringPtrOutput)
}

// The timespan when the access token expires. This is represented as the number of seconds from epoch.
func (o ManagedIdentityTokenResponseOutput) ExpiresOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.ExpiresOn }).(pulumi.StringPtrOutput)
}

// The timespan when the access token takes effect. This is represented as the number of seconds from epoch.
func (o ManagedIdentityTokenResponseOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.NotBefore }).(pulumi.StringPtrOutput)
}

// The Azure resource ID for the issued token. This is either the managed application ID or the user-assigned identity ID.
func (o ManagedIdentityTokenResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of the token.
func (o ManagedIdentityTokenResponseOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityTokenResponse) *string { return v.TokenType }).(pulumi.StringPtrOutput)
}

type ManagedIdentityTokenResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTokenResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedIdentityTokenResponse)(nil)).Elem()
}

func (o ManagedIdentityTokenResponseArrayOutput) ToManagedIdentityTokenResponseArrayOutput() ManagedIdentityTokenResponseArrayOutput {
	return o
}

func (o ManagedIdentityTokenResponseArrayOutput) ToManagedIdentityTokenResponseArrayOutputWithContext(ctx context.Context) ManagedIdentityTokenResponseArrayOutput {
	return o
}

func (o ManagedIdentityTokenResponseArrayOutput) Index(i pulumi.IntInput) ManagedIdentityTokenResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedIdentityTokenResponse {
		return vs[0].([]ManagedIdentityTokenResponse)[vs[1].(int)]
	}).(ManagedIdentityTokenResponseOutput)
}

// Plan for the managed application.
type PlanResponse struct {
	// The plan name.
	Name string `pulumi:"name"`
	// The product code.
	Product string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher string `pulumi:"publisher"`
	// The plan's version.
	Version string `pulumi:"version"`
}

// Plan for the managed application.
type PlanResponseOutput struct{ *pulumi.OutputState }

func (PlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (o PlanResponseOutput) ToPlanResponseOutput() PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return o
}

// The plan name.
func (o PlanResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The product code.
func (o PlanResponseOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Product }).(pulumi.StringOutput)
}

// The promotion code.
func (o PlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The plan's version.
func (o PlanResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Version }).(pulumi.StringOutput)
}

type PlanResponseArrayOutput struct{ *pulumi.OutputState }

func (PlanResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlanResponse)(nil)).Elem()
}

func (o PlanResponseArrayOutput) ToPlanResponseArrayOutput() PlanResponseArrayOutput {
	return o
}

func (o PlanResponseArrayOutput) ToPlanResponseArrayOutputWithContext(ctx context.Context) PlanResponseArrayOutput {
	return o
}

func (o PlanResponseArrayOutput) Index(i pulumi.IntInput) PlanResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlanResponse {
		return vs[0].([]PlanResponse)[vs[1].(int)]
	}).(PlanResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedIdentityTokenResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTokenResponseArrayOutput{})
	pulumi.RegisterOutputType(PlanResponseOutput{})
	pulumi.RegisterOutputType(PlanResponseArrayOutput{})
}
