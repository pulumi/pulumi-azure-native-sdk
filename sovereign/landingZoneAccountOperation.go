// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sovereign

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Landing zone account resource type. A Landing zone account is the container for configuring, deploying and managing multiple landing zones.
// Azure REST API version: 2025-02-27-preview.
type LandingZoneAccountOperation struct {
	pulumi.CustomResourceState

	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties LandingZoneAccountResourcePropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLandingZoneAccountOperation registers a new resource with the given unique name, arguments, and options.
func NewLandingZoneAccountOperation(ctx *pulumi.Context,
	name string, args *LandingZoneAccountOperationArgs, opts ...pulumi.ResourceOption) (*LandingZoneAccountOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:sovereign/v20250227preview:LandingZoneAccountOperation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource LandingZoneAccountOperation
	err := ctx.RegisterResource("azure-native:sovereign:LandingZoneAccountOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLandingZoneAccountOperation gets an existing LandingZoneAccountOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLandingZoneAccountOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LandingZoneAccountOperationState, opts ...pulumi.ResourceOption) (*LandingZoneAccountOperation, error) {
	var resource LandingZoneAccountOperation
	err := ctx.ReadResource("azure-native:sovereign:LandingZoneAccountOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LandingZoneAccountOperation resources.
type landingZoneAccountOperationState struct {
}

type LandingZoneAccountOperationState struct {
}

func (LandingZoneAccountOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*landingZoneAccountOperationState)(nil)).Elem()
}

type landingZoneAccountOperationArgs struct {
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The landing zone account.
	LandingZoneAccountName *string `pulumi:"landingZoneAccountName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The resource-specific properties for this resource.
	Properties *LandingZoneAccountResourceProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LandingZoneAccountOperation resource.
type LandingZoneAccountOperationArgs struct {
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityPtrInput
	// The landing zone account.
	LandingZoneAccountName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties LandingZoneAccountResourcePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (LandingZoneAccountOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*landingZoneAccountOperationArgs)(nil)).Elem()
}

type LandingZoneAccountOperationInput interface {
	pulumi.Input

	ToLandingZoneAccountOperationOutput() LandingZoneAccountOperationOutput
	ToLandingZoneAccountOperationOutputWithContext(ctx context.Context) LandingZoneAccountOperationOutput
}

func (*LandingZoneAccountOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAccountOperation)(nil)).Elem()
}

func (i *LandingZoneAccountOperation) ToLandingZoneAccountOperationOutput() LandingZoneAccountOperationOutput {
	return i.ToLandingZoneAccountOperationOutputWithContext(context.Background())
}

func (i *LandingZoneAccountOperation) ToLandingZoneAccountOperationOutputWithContext(ctx context.Context) LandingZoneAccountOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAccountOperationOutput)
}

type LandingZoneAccountOperationOutput struct{ *pulumi.OutputState }

func (LandingZoneAccountOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAccountOperation)(nil)).Elem()
}

func (o LandingZoneAccountOperationOutput) ToLandingZoneAccountOperationOutput() LandingZoneAccountOperationOutput {
	return o
}

func (o LandingZoneAccountOperationOutput) ToLandingZoneAccountOperationOutputWithContext(ctx context.Context) LandingZoneAccountOperationOutput {
	return o
}

// The managed service identities assigned to this resource.
func (o LandingZoneAccountOperationOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LandingZoneAccountOperationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LandingZoneAccountOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LandingZoneAccountOperationOutput) Properties() LandingZoneAccountResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) LandingZoneAccountResourcePropertiesResponseOutput {
		return v.Properties
	}).(LandingZoneAccountResourcePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LandingZoneAccountOperationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LandingZoneAccountOperationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LandingZoneAccountOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *LandingZoneAccountOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LandingZoneAccountOperationOutput{})
}
