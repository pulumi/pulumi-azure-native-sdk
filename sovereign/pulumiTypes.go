// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sovereign

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The details for the custom naming convention override for a specific resource type.
type CustomNamingConvention struct {
	// The custom naming formula for the resource type.
	Formula string `pulumi:"formula"`
	// The type of the resource.
	ResourceType string `pulumi:"resourceType"`
}

// CustomNamingConventionInput is an input type that accepts CustomNamingConventionArgs and CustomNamingConventionOutput values.
// You can construct a concrete instance of `CustomNamingConventionInput` via:
//
//	CustomNamingConventionArgs{...}
type CustomNamingConventionInput interface {
	pulumi.Input

	ToCustomNamingConventionOutput() CustomNamingConventionOutput
	ToCustomNamingConventionOutputWithContext(context.Context) CustomNamingConventionOutput
}

// The details for the custom naming convention override for a specific resource type.
type CustomNamingConventionArgs struct {
	// The custom naming formula for the resource type.
	Formula pulumi.StringInput `pulumi:"formula"`
	// The type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (CustomNamingConventionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomNamingConvention)(nil)).Elem()
}

func (i CustomNamingConventionArgs) ToCustomNamingConventionOutput() CustomNamingConventionOutput {
	return i.ToCustomNamingConventionOutputWithContext(context.Background())
}

func (i CustomNamingConventionArgs) ToCustomNamingConventionOutputWithContext(ctx context.Context) CustomNamingConventionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomNamingConventionOutput)
}

// CustomNamingConventionArrayInput is an input type that accepts CustomNamingConventionArray and CustomNamingConventionArrayOutput values.
// You can construct a concrete instance of `CustomNamingConventionArrayInput` via:
//
//	CustomNamingConventionArray{ CustomNamingConventionArgs{...} }
type CustomNamingConventionArrayInput interface {
	pulumi.Input

	ToCustomNamingConventionArrayOutput() CustomNamingConventionArrayOutput
	ToCustomNamingConventionArrayOutputWithContext(context.Context) CustomNamingConventionArrayOutput
}

type CustomNamingConventionArray []CustomNamingConventionInput

func (CustomNamingConventionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomNamingConvention)(nil)).Elem()
}

func (i CustomNamingConventionArray) ToCustomNamingConventionArrayOutput() CustomNamingConventionArrayOutput {
	return i.ToCustomNamingConventionArrayOutputWithContext(context.Background())
}

func (i CustomNamingConventionArray) ToCustomNamingConventionArrayOutputWithContext(ctx context.Context) CustomNamingConventionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomNamingConventionArrayOutput)
}

// The details for the custom naming convention override for a specific resource type.
type CustomNamingConventionOutput struct{ *pulumi.OutputState }

func (CustomNamingConventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomNamingConvention)(nil)).Elem()
}

func (o CustomNamingConventionOutput) ToCustomNamingConventionOutput() CustomNamingConventionOutput {
	return o
}

func (o CustomNamingConventionOutput) ToCustomNamingConventionOutputWithContext(ctx context.Context) CustomNamingConventionOutput {
	return o
}

// The custom naming formula for the resource type.
func (o CustomNamingConventionOutput) Formula() pulumi.StringOutput {
	return o.ApplyT(func(v CustomNamingConvention) string { return v.Formula }).(pulumi.StringOutput)
}

// The type of the resource.
func (o CustomNamingConventionOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomNamingConvention) string { return v.ResourceType }).(pulumi.StringOutput)
}

type CustomNamingConventionArrayOutput struct{ *pulumi.OutputState }

func (CustomNamingConventionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomNamingConvention)(nil)).Elem()
}

func (o CustomNamingConventionArrayOutput) ToCustomNamingConventionArrayOutput() CustomNamingConventionArrayOutput {
	return o
}

func (o CustomNamingConventionArrayOutput) ToCustomNamingConventionArrayOutputWithContext(ctx context.Context) CustomNamingConventionArrayOutput {
	return o
}

func (o CustomNamingConventionArrayOutput) Index(i pulumi.IntInput) CustomNamingConventionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomNamingConvention {
		return vs[0].([]CustomNamingConvention)[vs[1].(int)]
	}).(CustomNamingConventionOutput)
}

// The details for the custom naming convention override for a specific resource type.
type CustomNamingConventionResponse struct {
	// The custom naming formula for the resource type.
	Formula string `pulumi:"formula"`
	// The type of the resource.
	ResourceType string `pulumi:"resourceType"`
}

// The details for the custom naming convention override for a specific resource type.
type CustomNamingConventionResponseOutput struct{ *pulumi.OutputState }

func (CustomNamingConventionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomNamingConventionResponse)(nil)).Elem()
}

func (o CustomNamingConventionResponseOutput) ToCustomNamingConventionResponseOutput() CustomNamingConventionResponseOutput {
	return o
}

func (o CustomNamingConventionResponseOutput) ToCustomNamingConventionResponseOutputWithContext(ctx context.Context) CustomNamingConventionResponseOutput {
	return o
}

// The custom naming formula for the resource type.
func (o CustomNamingConventionResponseOutput) Formula() pulumi.StringOutput {
	return o.ApplyT(func(v CustomNamingConventionResponse) string { return v.Formula }).(pulumi.StringOutput)
}

// The type of the resource.
func (o CustomNamingConventionResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomNamingConventionResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

type CustomNamingConventionResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomNamingConventionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomNamingConventionResponse)(nil)).Elem()
}

func (o CustomNamingConventionResponseArrayOutput) ToCustomNamingConventionResponseArrayOutput() CustomNamingConventionResponseArrayOutput {
	return o
}

func (o CustomNamingConventionResponseArrayOutput) ToCustomNamingConventionResponseArrayOutputWithContext(ctx context.Context) CustomNamingConventionResponseArrayOutput {
	return o
}

func (o CustomNamingConventionResponseArrayOutput) Index(i pulumi.IntInput) CustomNamingConventionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomNamingConventionResponse {
		return vs[0].([]CustomNamingConventionResponse)[vs[1].(int)]
	}).(CustomNamingConventionResponseOutput)
}

// The 'Decommissioned' management group properties.
type DecommissionedManagementGroupProperties struct {
	// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
	Create bool `pulumi:"create"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentProperties `pulumi:"policyInitiativesAssignmentProperties"`
}

// DecommissionedManagementGroupPropertiesInput is an input type that accepts DecommissionedManagementGroupPropertiesArgs and DecommissionedManagementGroupPropertiesOutput values.
// You can construct a concrete instance of `DecommissionedManagementGroupPropertiesInput` via:
//
//	DecommissionedManagementGroupPropertiesArgs{...}
type DecommissionedManagementGroupPropertiesInput interface {
	pulumi.Input

	ToDecommissionedManagementGroupPropertiesOutput() DecommissionedManagementGroupPropertiesOutput
	ToDecommissionedManagementGroupPropertiesOutputWithContext(context.Context) DecommissionedManagementGroupPropertiesOutput
}

// The 'Decommissioned' management group properties.
type DecommissionedManagementGroupPropertiesArgs struct {
	// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
	Create pulumi.BoolInput `pulumi:"create"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties PolicyInitiativeAssignmentPropertiesArrayInput `pulumi:"policyInitiativesAssignmentProperties"`
}

func (DecommissionedManagementGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DecommissionedManagementGroupProperties)(nil)).Elem()
}

func (i DecommissionedManagementGroupPropertiesArgs) ToDecommissionedManagementGroupPropertiesOutput() DecommissionedManagementGroupPropertiesOutput {
	return i.ToDecommissionedManagementGroupPropertiesOutputWithContext(context.Background())
}

func (i DecommissionedManagementGroupPropertiesArgs) ToDecommissionedManagementGroupPropertiesOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecommissionedManagementGroupPropertiesOutput)
}

func (i DecommissionedManagementGroupPropertiesArgs) ToDecommissionedManagementGroupPropertiesPtrOutput() DecommissionedManagementGroupPropertiesPtrOutput {
	return i.ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i DecommissionedManagementGroupPropertiesArgs) ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecommissionedManagementGroupPropertiesOutput).ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(ctx)
}

// DecommissionedManagementGroupPropertiesPtrInput is an input type that accepts DecommissionedManagementGroupPropertiesArgs, DecommissionedManagementGroupPropertiesPtr and DecommissionedManagementGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `DecommissionedManagementGroupPropertiesPtrInput` via:
//
//	        DecommissionedManagementGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type DecommissionedManagementGroupPropertiesPtrInput interface {
	pulumi.Input

	ToDecommissionedManagementGroupPropertiesPtrOutput() DecommissionedManagementGroupPropertiesPtrOutput
	ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(context.Context) DecommissionedManagementGroupPropertiesPtrOutput
}

type decommissionedManagementGroupPropertiesPtrType DecommissionedManagementGroupPropertiesArgs

func DecommissionedManagementGroupPropertiesPtr(v *DecommissionedManagementGroupPropertiesArgs) DecommissionedManagementGroupPropertiesPtrInput {
	return (*decommissionedManagementGroupPropertiesPtrType)(v)
}

func (*decommissionedManagementGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DecommissionedManagementGroupProperties)(nil)).Elem()
}

func (i *decommissionedManagementGroupPropertiesPtrType) ToDecommissionedManagementGroupPropertiesPtrOutput() DecommissionedManagementGroupPropertiesPtrOutput {
	return i.ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *decommissionedManagementGroupPropertiesPtrType) ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecommissionedManagementGroupPropertiesPtrOutput)
}

// The 'Decommissioned' management group properties.
type DecommissionedManagementGroupPropertiesOutput struct{ *pulumi.OutputState }

func (DecommissionedManagementGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DecommissionedManagementGroupProperties)(nil)).Elem()
}

func (o DecommissionedManagementGroupPropertiesOutput) ToDecommissionedManagementGroupPropertiesOutput() DecommissionedManagementGroupPropertiesOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesOutput) ToDecommissionedManagementGroupPropertiesOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesOutput) ToDecommissionedManagementGroupPropertiesPtrOutput() DecommissionedManagementGroupPropertiesPtrOutput {
	return o.ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o DecommissionedManagementGroupPropertiesOutput) ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DecommissionedManagementGroupProperties) *DecommissionedManagementGroupProperties {
		return &v
	}).(DecommissionedManagementGroupPropertiesPtrOutput)
}

// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o DecommissionedManagementGroupPropertiesOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v DecommissionedManagementGroupProperties) bool { return v.Create }).(pulumi.BoolOutput)
}

// Array of policy initiatives applied to the management group.
func (o DecommissionedManagementGroupPropertiesOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v DecommissionedManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

type DecommissionedManagementGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DecommissionedManagementGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DecommissionedManagementGroupProperties)(nil)).Elem()
}

func (o DecommissionedManagementGroupPropertiesPtrOutput) ToDecommissionedManagementGroupPropertiesPtrOutput() DecommissionedManagementGroupPropertiesPtrOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesPtrOutput) ToDecommissionedManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesPtrOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesPtrOutput) Elem() DecommissionedManagementGroupPropertiesOutput {
	return o.ApplyT(func(v *DecommissionedManagementGroupProperties) DecommissionedManagementGroupProperties {
		if v != nil {
			return *v
		}
		var ret DecommissionedManagementGroupProperties
		return ret
	}).(DecommissionedManagementGroupPropertiesOutput)
}

// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o DecommissionedManagementGroupPropertiesPtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecommissionedManagementGroupProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// Array of policy initiatives applied to the management group.
func (o DecommissionedManagementGroupPropertiesPtrOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v *DecommissionedManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		if v == nil {
			return nil
		}
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

// The 'Decommissioned' management group properties.
type DecommissionedManagementGroupPropertiesResponse struct {
	// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
	Create bool `pulumi:"create"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentPropertiesResponse `pulumi:"policyInitiativesAssignmentProperties"`
}

// The 'Decommissioned' management group properties.
type DecommissionedManagementGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DecommissionedManagementGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DecommissionedManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o DecommissionedManagementGroupPropertiesResponseOutput) ToDecommissionedManagementGroupPropertiesResponseOutput() DecommissionedManagementGroupPropertiesResponseOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesResponseOutput) ToDecommissionedManagementGroupPropertiesResponseOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesResponseOutput {
	return o
}

// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o DecommissionedManagementGroupPropertiesResponseOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v DecommissionedManagementGroupPropertiesResponse) bool { return v.Create }).(pulumi.BoolOutput)
}

// Array of policy initiatives applied to the management group.
func (o DecommissionedManagementGroupPropertiesResponseOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v DecommissionedManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

type DecommissionedManagementGroupPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DecommissionedManagementGroupPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DecommissionedManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o DecommissionedManagementGroupPropertiesResponsePtrOutput) ToDecommissionedManagementGroupPropertiesResponsePtrOutput() DecommissionedManagementGroupPropertiesResponsePtrOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesResponsePtrOutput) ToDecommissionedManagementGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) DecommissionedManagementGroupPropertiesResponsePtrOutput {
	return o
}

func (o DecommissionedManagementGroupPropertiesResponsePtrOutput) Elem() DecommissionedManagementGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *DecommissionedManagementGroupPropertiesResponse) DecommissionedManagementGroupPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DecommissionedManagementGroupPropertiesResponse
		return ret
	}).(DecommissionedManagementGroupPropertiesResponseOutput)
}

// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o DecommissionedManagementGroupPropertiesResponsePtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecommissionedManagementGroupPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// Array of policy initiatives applied to the management group.
func (o DecommissionedManagementGroupPropertiesResponsePtrOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *DecommissionedManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

// The properties of landing zone account resource type.
type LandingZoneAccountResourceProperties struct {
	// The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
	StorageAccount string `pulumi:"storageAccount"`
}

// LandingZoneAccountResourcePropertiesInput is an input type that accepts LandingZoneAccountResourcePropertiesArgs and LandingZoneAccountResourcePropertiesOutput values.
// You can construct a concrete instance of `LandingZoneAccountResourcePropertiesInput` via:
//
//	LandingZoneAccountResourcePropertiesArgs{...}
type LandingZoneAccountResourcePropertiesInput interface {
	pulumi.Input

	ToLandingZoneAccountResourcePropertiesOutput() LandingZoneAccountResourcePropertiesOutput
	ToLandingZoneAccountResourcePropertiesOutputWithContext(context.Context) LandingZoneAccountResourcePropertiesOutput
}

// The properties of landing zone account resource type.
type LandingZoneAccountResourcePropertiesArgs struct {
	// The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
	StorageAccount pulumi.StringInput `pulumi:"storageAccount"`
}

func (LandingZoneAccountResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAccountResourceProperties)(nil)).Elem()
}

func (i LandingZoneAccountResourcePropertiesArgs) ToLandingZoneAccountResourcePropertiesOutput() LandingZoneAccountResourcePropertiesOutput {
	return i.ToLandingZoneAccountResourcePropertiesOutputWithContext(context.Background())
}

func (i LandingZoneAccountResourcePropertiesArgs) ToLandingZoneAccountResourcePropertiesOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAccountResourcePropertiesOutput)
}

func (i LandingZoneAccountResourcePropertiesArgs) ToLandingZoneAccountResourcePropertiesPtrOutput() LandingZoneAccountResourcePropertiesPtrOutput {
	return i.ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i LandingZoneAccountResourcePropertiesArgs) ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAccountResourcePropertiesOutput).ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(ctx)
}

// LandingZoneAccountResourcePropertiesPtrInput is an input type that accepts LandingZoneAccountResourcePropertiesArgs, LandingZoneAccountResourcePropertiesPtr and LandingZoneAccountResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `LandingZoneAccountResourcePropertiesPtrInput` via:
//
//	        LandingZoneAccountResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type LandingZoneAccountResourcePropertiesPtrInput interface {
	pulumi.Input

	ToLandingZoneAccountResourcePropertiesPtrOutput() LandingZoneAccountResourcePropertiesPtrOutput
	ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(context.Context) LandingZoneAccountResourcePropertiesPtrOutput
}

type landingZoneAccountResourcePropertiesPtrType LandingZoneAccountResourcePropertiesArgs

func LandingZoneAccountResourcePropertiesPtr(v *LandingZoneAccountResourcePropertiesArgs) LandingZoneAccountResourcePropertiesPtrInput {
	return (*landingZoneAccountResourcePropertiesPtrType)(v)
}

func (*landingZoneAccountResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAccountResourceProperties)(nil)).Elem()
}

func (i *landingZoneAccountResourcePropertiesPtrType) ToLandingZoneAccountResourcePropertiesPtrOutput() LandingZoneAccountResourcePropertiesPtrOutput {
	return i.ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *landingZoneAccountResourcePropertiesPtrType) ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAccountResourcePropertiesPtrOutput)
}

// The properties of landing zone account resource type.
type LandingZoneAccountResourcePropertiesOutput struct{ *pulumi.OutputState }

func (LandingZoneAccountResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAccountResourceProperties)(nil)).Elem()
}

func (o LandingZoneAccountResourcePropertiesOutput) ToLandingZoneAccountResourcePropertiesOutput() LandingZoneAccountResourcePropertiesOutput {
	return o
}

func (o LandingZoneAccountResourcePropertiesOutput) ToLandingZoneAccountResourcePropertiesOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesOutput {
	return o
}

func (o LandingZoneAccountResourcePropertiesOutput) ToLandingZoneAccountResourcePropertiesPtrOutput() LandingZoneAccountResourcePropertiesPtrOutput {
	return o.ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o LandingZoneAccountResourcePropertiesOutput) ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LandingZoneAccountResourceProperties) *LandingZoneAccountResourceProperties {
		return &v
	}).(LandingZoneAccountResourcePropertiesPtrOutput)
}

// The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
func (o LandingZoneAccountResourcePropertiesOutput) StorageAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneAccountResourceProperties) string { return v.StorageAccount }).(pulumi.StringOutput)
}

type LandingZoneAccountResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (LandingZoneAccountResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAccountResourceProperties)(nil)).Elem()
}

func (o LandingZoneAccountResourcePropertiesPtrOutput) ToLandingZoneAccountResourcePropertiesPtrOutput() LandingZoneAccountResourcePropertiesPtrOutput {
	return o
}

func (o LandingZoneAccountResourcePropertiesPtrOutput) ToLandingZoneAccountResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesPtrOutput {
	return o
}

func (o LandingZoneAccountResourcePropertiesPtrOutput) Elem() LandingZoneAccountResourcePropertiesOutput {
	return o.ApplyT(func(v *LandingZoneAccountResourceProperties) LandingZoneAccountResourceProperties {
		if v != nil {
			return *v
		}
		var ret LandingZoneAccountResourceProperties
		return ret
	}).(LandingZoneAccountResourcePropertiesOutput)
}

// The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
func (o LandingZoneAccountResourcePropertiesPtrOutput) StorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneAccountResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccount
	}).(pulumi.StringPtrOutput)
}

// The properties of landing zone account resource type.
type LandingZoneAccountResourcePropertiesResponse struct {
	// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone account.
	ProvisioningState string `pulumi:"provisioningState"`
	// The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
	StorageAccount string `pulumi:"storageAccount"`
}

// The properties of landing zone account resource type.
type LandingZoneAccountResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (LandingZoneAccountResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAccountResourcePropertiesResponse)(nil)).Elem()
}

func (o LandingZoneAccountResourcePropertiesResponseOutput) ToLandingZoneAccountResourcePropertiesResponseOutput() LandingZoneAccountResourcePropertiesResponseOutput {
	return o
}

func (o LandingZoneAccountResourcePropertiesResponseOutput) ToLandingZoneAccountResourcePropertiesResponseOutputWithContext(ctx context.Context) LandingZoneAccountResourcePropertiesResponseOutput {
	return o
}

// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone account.
func (o LandingZoneAccountResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneAccountResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment.
func (o LandingZoneAccountResourcePropertiesResponseOutput) StorageAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneAccountResourcePropertiesResponse) string { return v.StorageAccount }).(pulumi.StringOutput)
}

// The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourceProperties struct {
	// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
	AzureBastionCreationOption string `pulumi:"azureBastionCreationOption"`
	// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
	AzureBastionSubnetCidrBlock *string `pulumi:"azureBastionSubnetCidrBlock"`
	// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
	CustomNamingConvention []CustomNamingConvention `pulumi:"customNamingConvention"`
	// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
	DdosProtectionCreationOption string `pulumi:"ddosProtectionCreationOption"`
	// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
	DecommissionedMgMetadata *DecommissionedManagementGroupProperties `pulumi:"decommissionedMgMetadata"`
	// The resource ID of the Bastion when reusing an existing one.
	ExistingAzureBastionId *string `pulumi:"existingAzureBastionId"`
	// The resource ID of the DDoS protection plan when reusing an existing one.
	ExistingDdosProtectionId *string `pulumi:"existingDdosProtectionId"`
	// The resource ID of the log analytics workspace when reusing an existing one.
	ExistingLogAnalyticsWorkspaceId *string `pulumi:"existingLogAnalyticsWorkspaceId"`
	// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
	FirewallCreationOption string `pulumi:"firewallCreationOption"`
	// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
	FirewallSubnetCidrBlock *string `pulumi:"firewallSubnetCidrBlock"`
	// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
	GatewaySubnetCidrBlock string `pulumi:"gatewaySubnetCidrBlock"`
	// The Virtual Network address. Specify the address using IPv4 CIDR notation.
	HubNetworkCidrBlock string `pulumi:"hubNetworkCidrBlock"`
	// The child management groups of 'Landing Zones' management group and their assigned policies.
	LandingZonesMgChildren []LandingZoneManagementGroupProperties `pulumi:"landingZonesMgChildren"`
	// The assigned policies of the 'Landing Zones' management group.
	LandingZonesMgMetadata *ManagementGroupProperties `pulumi:"landingZonesMgMetadata"`
	// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
	LogAnalyticsWorkspaceCreationOption string `pulumi:"logAnalyticsWorkspaceCreationOption"`
	// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
	LogRetentionInDays float64 `pulumi:"logRetentionInDays"`
	// The managed identity to be assigned to this landing zone configuration.
	ManagedIdentity ManagedIdentityProperties `pulumi:"managedIdentity"`
	// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
	NamingConventionFormula *string `pulumi:"namingConventionFormula"`
	// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
	PlatformConnectivityMgMetadata *ManagementGroupProperties `pulumi:"platformConnectivityMgMetadata"`
	// The assigned policies of the 'Identity' management group under 'Platform' management group.
	PlatformIdentityMgMetadata *ManagementGroupProperties `pulumi:"platformIdentityMgMetadata"`
	// The assigned policies of the 'Management' management group under 'Platform' management group.
	PlatformManagementMgMetadata *ManagementGroupProperties `pulumi:"platformManagementMgMetadata"`
	// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
	PlatformMgChildren []PlatformManagementGroupProperties `pulumi:"platformMgChildren"`
	// The assigned policies of the 'Platform' management group.
	PlatformMgMetadata *ManagementGroupProperties `pulumi:"platformMgMetadata"`
	// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
	SandboxMgMetadata *SandboxManagementGroupProperties `pulumi:"sandboxMgMetadata"`
	// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
	Tags []Tags `pulumi:"tags"`
	// The assigned policies of the parent management group.
	TopLevelMgMetadata *ManagementGroupProperties `pulumi:"topLevelMgMetadata"`
}

// LandingZoneConfigurationResourcePropertiesInput is an input type that accepts LandingZoneConfigurationResourcePropertiesArgs and LandingZoneConfigurationResourcePropertiesOutput values.
// You can construct a concrete instance of `LandingZoneConfigurationResourcePropertiesInput` via:
//
//	LandingZoneConfigurationResourcePropertiesArgs{...}
type LandingZoneConfigurationResourcePropertiesInput interface {
	pulumi.Input

	ToLandingZoneConfigurationResourcePropertiesOutput() LandingZoneConfigurationResourcePropertiesOutput
	ToLandingZoneConfigurationResourcePropertiesOutputWithContext(context.Context) LandingZoneConfigurationResourcePropertiesOutput
}

// The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourcePropertiesArgs struct {
	// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
	AzureBastionCreationOption pulumi.StringInput `pulumi:"azureBastionCreationOption"`
	// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
	AzureBastionSubnetCidrBlock pulumi.StringPtrInput `pulumi:"azureBastionSubnetCidrBlock"`
	// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
	CustomNamingConvention CustomNamingConventionArrayInput `pulumi:"customNamingConvention"`
	// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
	DdosProtectionCreationOption pulumi.StringInput `pulumi:"ddosProtectionCreationOption"`
	// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
	DecommissionedMgMetadata DecommissionedManagementGroupPropertiesPtrInput `pulumi:"decommissionedMgMetadata"`
	// The resource ID of the Bastion when reusing an existing one.
	ExistingAzureBastionId pulumi.StringPtrInput `pulumi:"existingAzureBastionId"`
	// The resource ID of the DDoS protection plan when reusing an existing one.
	ExistingDdosProtectionId pulumi.StringPtrInput `pulumi:"existingDdosProtectionId"`
	// The resource ID of the log analytics workspace when reusing an existing one.
	ExistingLogAnalyticsWorkspaceId pulumi.StringPtrInput `pulumi:"existingLogAnalyticsWorkspaceId"`
	// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
	FirewallCreationOption pulumi.StringInput `pulumi:"firewallCreationOption"`
	// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
	FirewallSubnetCidrBlock pulumi.StringPtrInput `pulumi:"firewallSubnetCidrBlock"`
	// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
	GatewaySubnetCidrBlock pulumi.StringInput `pulumi:"gatewaySubnetCidrBlock"`
	// The Virtual Network address. Specify the address using IPv4 CIDR notation.
	HubNetworkCidrBlock pulumi.StringInput `pulumi:"hubNetworkCidrBlock"`
	// The child management groups of 'Landing Zones' management group and their assigned policies.
	LandingZonesMgChildren LandingZoneManagementGroupPropertiesArrayInput `pulumi:"landingZonesMgChildren"`
	// The assigned policies of the 'Landing Zones' management group.
	LandingZonesMgMetadata ManagementGroupPropertiesPtrInput `pulumi:"landingZonesMgMetadata"`
	// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
	LogAnalyticsWorkspaceCreationOption pulumi.StringInput `pulumi:"logAnalyticsWorkspaceCreationOption"`
	// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
	LogRetentionInDays pulumi.Float64Input `pulumi:"logRetentionInDays"`
	// The managed identity to be assigned to this landing zone configuration.
	ManagedIdentity ManagedIdentityPropertiesInput `pulumi:"managedIdentity"`
	// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
	NamingConventionFormula pulumi.StringPtrInput `pulumi:"namingConventionFormula"`
	// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
	PlatformConnectivityMgMetadata ManagementGroupPropertiesPtrInput `pulumi:"platformConnectivityMgMetadata"`
	// The assigned policies of the 'Identity' management group under 'Platform' management group.
	PlatformIdentityMgMetadata ManagementGroupPropertiesPtrInput `pulumi:"platformIdentityMgMetadata"`
	// The assigned policies of the 'Management' management group under 'Platform' management group.
	PlatformManagementMgMetadata ManagementGroupPropertiesPtrInput `pulumi:"platformManagementMgMetadata"`
	// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
	PlatformMgChildren PlatformManagementGroupPropertiesArrayInput `pulumi:"platformMgChildren"`
	// The assigned policies of the 'Platform' management group.
	PlatformMgMetadata ManagementGroupPropertiesPtrInput `pulumi:"platformMgMetadata"`
	// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
	SandboxMgMetadata SandboxManagementGroupPropertiesPtrInput `pulumi:"sandboxMgMetadata"`
	// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
	Tags TagsArrayInput `pulumi:"tags"`
	// The assigned policies of the parent management group.
	TopLevelMgMetadata ManagementGroupPropertiesPtrInput `pulumi:"topLevelMgMetadata"`
}

func (LandingZoneConfigurationResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneConfigurationResourceProperties)(nil)).Elem()
}

func (i LandingZoneConfigurationResourcePropertiesArgs) ToLandingZoneConfigurationResourcePropertiesOutput() LandingZoneConfigurationResourcePropertiesOutput {
	return i.ToLandingZoneConfigurationResourcePropertiesOutputWithContext(context.Background())
}

func (i LandingZoneConfigurationResourcePropertiesArgs) ToLandingZoneConfigurationResourcePropertiesOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneConfigurationResourcePropertiesOutput)
}

func (i LandingZoneConfigurationResourcePropertiesArgs) ToLandingZoneConfigurationResourcePropertiesPtrOutput() LandingZoneConfigurationResourcePropertiesPtrOutput {
	return i.ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i LandingZoneConfigurationResourcePropertiesArgs) ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneConfigurationResourcePropertiesOutput).ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(ctx)
}

// LandingZoneConfigurationResourcePropertiesPtrInput is an input type that accepts LandingZoneConfigurationResourcePropertiesArgs, LandingZoneConfigurationResourcePropertiesPtr and LandingZoneConfigurationResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `LandingZoneConfigurationResourcePropertiesPtrInput` via:
//
//	        LandingZoneConfigurationResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type LandingZoneConfigurationResourcePropertiesPtrInput interface {
	pulumi.Input

	ToLandingZoneConfigurationResourcePropertiesPtrOutput() LandingZoneConfigurationResourcePropertiesPtrOutput
	ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(context.Context) LandingZoneConfigurationResourcePropertiesPtrOutput
}

type landingZoneConfigurationResourcePropertiesPtrType LandingZoneConfigurationResourcePropertiesArgs

func LandingZoneConfigurationResourcePropertiesPtr(v *LandingZoneConfigurationResourcePropertiesArgs) LandingZoneConfigurationResourcePropertiesPtrInput {
	return (*landingZoneConfigurationResourcePropertiesPtrType)(v)
}

func (*landingZoneConfigurationResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneConfigurationResourceProperties)(nil)).Elem()
}

func (i *landingZoneConfigurationResourcePropertiesPtrType) ToLandingZoneConfigurationResourcePropertiesPtrOutput() LandingZoneConfigurationResourcePropertiesPtrOutput {
	return i.ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *landingZoneConfigurationResourcePropertiesPtrType) ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneConfigurationResourcePropertiesPtrOutput)
}

// The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourcePropertiesOutput struct{ *pulumi.OutputState }

func (LandingZoneConfigurationResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneConfigurationResourceProperties)(nil)).Elem()
}

func (o LandingZoneConfigurationResourcePropertiesOutput) ToLandingZoneConfigurationResourcePropertiesOutput() LandingZoneConfigurationResourcePropertiesOutput {
	return o
}

func (o LandingZoneConfigurationResourcePropertiesOutput) ToLandingZoneConfigurationResourcePropertiesOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesOutput {
	return o
}

func (o LandingZoneConfigurationResourcePropertiesOutput) ToLandingZoneConfigurationResourcePropertiesPtrOutput() LandingZoneConfigurationResourcePropertiesPtrOutput {
	return o.ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o LandingZoneConfigurationResourcePropertiesOutput) ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LandingZoneConfigurationResourceProperties) *LandingZoneConfigurationResourceProperties {
		return &v
	}).(LandingZoneConfigurationResourcePropertiesPtrOutput)
}

// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
func (o LandingZoneConfigurationResourcePropertiesOutput) AzureBastionCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) string { return v.AzureBastionCreationOption }).(pulumi.StringOutput)
}

// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesOutput) AzureBastionSubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *string { return v.AzureBastionSubnetCidrBlock }).(pulumi.StringPtrOutput)
}

// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
func (o LandingZoneConfigurationResourcePropertiesOutput) CustomNamingConvention() CustomNamingConventionArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) []CustomNamingConvention {
		return v.CustomNamingConvention
	}).(CustomNamingConventionArrayOutput)
}

// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
func (o LandingZoneConfigurationResourcePropertiesOutput) DdosProtectionCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) string { return v.DdosProtectionCreationOption }).(pulumi.StringOutput)
}

// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
func (o LandingZoneConfigurationResourcePropertiesOutput) DecommissionedMgMetadata() DecommissionedManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *DecommissionedManagementGroupProperties {
		return v.DecommissionedMgMetadata
	}).(DecommissionedManagementGroupPropertiesPtrOutput)
}

// The resource ID of the Bastion when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesOutput) ExistingAzureBastionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *string { return v.ExistingAzureBastionId }).(pulumi.StringPtrOutput)
}

// The resource ID of the DDoS protection plan when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesOutput) ExistingDdosProtectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *string { return v.ExistingDdosProtectionId }).(pulumi.StringPtrOutput)
}

// The resource ID of the log analytics workspace when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesOutput) ExistingLogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *string { return v.ExistingLogAnalyticsWorkspaceId }).(pulumi.StringPtrOutput)
}

// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
func (o LandingZoneConfigurationResourcePropertiesOutput) FirewallCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) string { return v.FirewallCreationOption }).(pulumi.StringOutput)
}

// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesOutput) FirewallSubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *string { return v.FirewallSubnetCidrBlock }).(pulumi.StringPtrOutput)
}

// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesOutput) GatewaySubnetCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) string { return v.GatewaySubnetCidrBlock }).(pulumi.StringOutput)
}

// The Virtual Network address. Specify the address using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesOutput) HubNetworkCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) string { return v.HubNetworkCidrBlock }).(pulumi.StringOutput)
}

// The child management groups of 'Landing Zones' management group and their assigned policies.
func (o LandingZoneConfigurationResourcePropertiesOutput) LandingZonesMgChildren() LandingZoneManagementGroupPropertiesArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) []LandingZoneManagementGroupProperties {
		return v.LandingZonesMgChildren
	}).(LandingZoneManagementGroupPropertiesArrayOutput)
}

// The assigned policies of the 'Landing Zones' management group.
func (o LandingZoneConfigurationResourcePropertiesOutput) LandingZonesMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		return v.LandingZonesMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
func (o LandingZoneConfigurationResourcePropertiesOutput) LogAnalyticsWorkspaceCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) string {
		return v.LogAnalyticsWorkspaceCreationOption
	}).(pulumi.StringOutput)
}

// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
func (o LandingZoneConfigurationResourcePropertiesOutput) LogRetentionInDays() pulumi.Float64Output {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) float64 { return v.LogRetentionInDays }).(pulumi.Float64Output)
}

// The managed identity to be assigned to this landing zone configuration.
func (o LandingZoneConfigurationResourcePropertiesOutput) ManagedIdentity() ManagedIdentityPropertiesOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) ManagedIdentityProperties { return v.ManagedIdentity }).(ManagedIdentityPropertiesOutput)
}

// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
func (o LandingZoneConfigurationResourcePropertiesOutput) NamingConventionFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *string { return v.NamingConventionFormula }).(pulumi.StringPtrOutput)
}

// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesOutput) PlatformConnectivityMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		return v.PlatformConnectivityMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The assigned policies of the 'Identity' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesOutput) PlatformIdentityMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		return v.PlatformIdentityMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The assigned policies of the 'Management' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesOutput) PlatformManagementMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		return v.PlatformManagementMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
func (o LandingZoneConfigurationResourcePropertiesOutput) PlatformMgChildren() PlatformManagementGroupPropertiesArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) []PlatformManagementGroupProperties {
		return v.PlatformMgChildren
	}).(PlatformManagementGroupPropertiesArrayOutput)
}

// The assigned policies of the 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesOutput) PlatformMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		return v.PlatformMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
func (o LandingZoneConfigurationResourcePropertiesOutput) SandboxMgMetadata() SandboxManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *SandboxManagementGroupProperties {
		return v.SandboxMgMetadata
	}).(SandboxManagementGroupPropertiesPtrOutput)
}

// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
func (o LandingZoneConfigurationResourcePropertiesOutput) Tags() TagsArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) []Tags { return v.Tags }).(TagsArrayOutput)
}

// The assigned policies of the parent management group.
func (o LandingZoneConfigurationResourcePropertiesOutput) TopLevelMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		return v.TopLevelMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

type LandingZoneConfigurationResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (LandingZoneConfigurationResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneConfigurationResourceProperties)(nil)).Elem()
}

func (o LandingZoneConfigurationResourcePropertiesPtrOutput) ToLandingZoneConfigurationResourcePropertiesPtrOutput() LandingZoneConfigurationResourcePropertiesPtrOutput {
	return o
}

func (o LandingZoneConfigurationResourcePropertiesPtrOutput) ToLandingZoneConfigurationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesPtrOutput {
	return o
}

func (o LandingZoneConfigurationResourcePropertiesPtrOutput) Elem() LandingZoneConfigurationResourcePropertiesOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) LandingZoneConfigurationResourceProperties {
		if v != nil {
			return *v
		}
		var ret LandingZoneConfigurationResourceProperties
		return ret
	}).(LandingZoneConfigurationResourcePropertiesOutput)
}

// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) AzureBastionCreationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AzureBastionCreationOption
	}).(pulumi.StringPtrOutput)
}

// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) AzureBastionSubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.AzureBastionSubnetCidrBlock
	}).(pulumi.StringPtrOutput)
}

// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) CustomNamingConvention() CustomNamingConventionArrayOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) []CustomNamingConvention {
		if v == nil {
			return nil
		}
		return v.CustomNamingConvention
	}).(CustomNamingConventionArrayOutput)
}

// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) DdosProtectionCreationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DdosProtectionCreationOption
	}).(pulumi.StringPtrOutput)
}

// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) DecommissionedMgMetadata() DecommissionedManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *DecommissionedManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.DecommissionedMgMetadata
	}).(DecommissionedManagementGroupPropertiesPtrOutput)
}

// The resource ID of the Bastion when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) ExistingAzureBastionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExistingAzureBastionId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the DDoS protection plan when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) ExistingDdosProtectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExistingDdosProtectionId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the log analytics workspace when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) ExistingLogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExistingLogAnalyticsWorkspaceId
	}).(pulumi.StringPtrOutput)
}

// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) FirewallCreationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallCreationOption
	}).(pulumi.StringPtrOutput)
}

// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) FirewallSubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.FirewallSubnetCidrBlock
	}).(pulumi.StringPtrOutput)
}

// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) GatewaySubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.GatewaySubnetCidrBlock
	}).(pulumi.StringPtrOutput)
}

// The Virtual Network address. Specify the address using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) HubNetworkCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.HubNetworkCidrBlock
	}).(pulumi.StringPtrOutput)
}

// The child management groups of 'Landing Zones' management group and their assigned policies.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) LandingZonesMgChildren() LandingZoneManagementGroupPropertiesArrayOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) []LandingZoneManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.LandingZonesMgChildren
	}).(LandingZoneManagementGroupPropertiesArrayOutput)
}

// The assigned policies of the 'Landing Zones' management group.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) LandingZonesMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.LandingZonesMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) LogAnalyticsWorkspaceCreationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LogAnalyticsWorkspaceCreationOption
	}).(pulumi.StringPtrOutput)
}

// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) LogRetentionInDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *float64 {
		if v == nil {
			return nil
		}
		return &v.LogRetentionInDays
	}).(pulumi.Float64PtrOutput)
}

// The managed identity to be assigned to this landing zone configuration.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) ManagedIdentity() ManagedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagedIdentityProperties {
		if v == nil {
			return nil
		}
		return &v.ManagedIdentity
	}).(ManagedIdentityPropertiesPtrOutput)
}

// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) NamingConventionFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.NamingConventionFormula
	}).(pulumi.StringPtrOutput)
}

// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) PlatformConnectivityMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.PlatformConnectivityMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The assigned policies of the 'Identity' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) PlatformIdentityMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.PlatformIdentityMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The assigned policies of the 'Management' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) PlatformManagementMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.PlatformManagementMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) PlatformMgChildren() PlatformManagementGroupPropertiesArrayOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) []PlatformManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.PlatformMgChildren
	}).(PlatformManagementGroupPropertiesArrayOutput)
}

// The assigned policies of the 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) PlatformMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.PlatformMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) SandboxMgMetadata() SandboxManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *SandboxManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.SandboxMgMetadata
	}).(SandboxManagementGroupPropertiesPtrOutput)
}

// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) Tags() TagsArrayOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) []Tags {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TagsArrayOutput)
}

// The assigned policies of the parent management group.
func (o LandingZoneConfigurationResourcePropertiesPtrOutput) TopLevelMgMetadata() ManagementGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneConfigurationResourceProperties) *ManagementGroupProperties {
		if v == nil {
			return nil
		}
		return v.TopLevelMgMetadata
	}).(ManagementGroupPropertiesPtrOutput)
}

// The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourcePropertiesResponse struct {
	// The status that indicates the current phase of the configuration process for a deployment.
	AuthoringStatus string `pulumi:"authoringStatus"`
	// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
	AzureBastionCreationOption string `pulumi:"azureBastionCreationOption"`
	// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
	AzureBastionSubnetCidrBlock *string `pulumi:"azureBastionSubnetCidrBlock"`
	// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
	CustomNamingConvention []CustomNamingConventionResponse `pulumi:"customNamingConvention"`
	// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
	DdosProtectionCreationOption string `pulumi:"ddosProtectionCreationOption"`
	// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
	DecommissionedMgMetadata *DecommissionedManagementGroupPropertiesResponse `pulumi:"decommissionedMgMetadata"`
	// The resource ID of the Bastion when reusing an existing one.
	ExistingAzureBastionId *string `pulumi:"existingAzureBastionId"`
	// The resource ID of the DDoS protection plan when reusing an existing one.
	ExistingDdosProtectionId *string `pulumi:"existingDdosProtectionId"`
	// The resource ID of the log analytics workspace when reusing an existing one.
	ExistingLogAnalyticsWorkspaceId *string `pulumi:"existingLogAnalyticsWorkspaceId"`
	// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
	FirewallCreationOption string `pulumi:"firewallCreationOption"`
	// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
	FirewallSubnetCidrBlock *string `pulumi:"firewallSubnetCidrBlock"`
	// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
	GatewaySubnetCidrBlock string `pulumi:"gatewaySubnetCidrBlock"`
	// The Virtual Network address. Specify the address using IPv4 CIDR notation.
	HubNetworkCidrBlock string `pulumi:"hubNetworkCidrBlock"`
	// The child management groups of 'Landing Zones' management group and their assigned policies.
	LandingZonesMgChildren []LandingZoneManagementGroupPropertiesResponse `pulumi:"landingZonesMgChildren"`
	// The assigned policies of the 'Landing Zones' management group.
	LandingZonesMgMetadata *ManagementGroupPropertiesResponse `pulumi:"landingZonesMgMetadata"`
	// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
	LogAnalyticsWorkspaceCreationOption string `pulumi:"logAnalyticsWorkspaceCreationOption"`
	// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
	LogRetentionInDays float64 `pulumi:"logRetentionInDays"`
	// The managed identity to be assigned to this landing zone configuration.
	ManagedIdentity ManagedIdentityPropertiesResponse `pulumi:"managedIdentity"`
	// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
	NamingConventionFormula *string `pulumi:"namingConventionFormula"`
	// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
	PlatformConnectivityMgMetadata *ManagementGroupPropertiesResponse `pulumi:"platformConnectivityMgMetadata"`
	// The assigned policies of the 'Identity' management group under 'Platform' management group.
	PlatformIdentityMgMetadata *ManagementGroupPropertiesResponse `pulumi:"platformIdentityMgMetadata"`
	// The assigned policies of the 'Management' management group under 'Platform' management group.
	PlatformManagementMgMetadata *ManagementGroupPropertiesResponse `pulumi:"platformManagementMgMetadata"`
	// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
	PlatformMgChildren []PlatformManagementGroupPropertiesResponse `pulumi:"platformMgChildren"`
	// The assigned policies of the 'Platform' management group.
	PlatformMgMetadata *ManagementGroupPropertiesResponse `pulumi:"platformMgMetadata"`
	// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
	SandboxMgMetadata *SandboxManagementGroupPropertiesResponse `pulumi:"sandboxMgMetadata"`
	// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
	Tags []TagsResponse `pulumi:"tags"`
	// The assigned policies of the parent management group.
	TopLevelMgMetadata *ManagementGroupPropertiesResponse `pulumi:"topLevelMgMetadata"`
}

// The properties of landing zone configuration resource type.
type LandingZoneConfigurationResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (LandingZoneConfigurationResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneConfigurationResourcePropertiesResponse)(nil)).Elem()
}

func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ToLandingZoneConfigurationResourcePropertiesResponseOutput() LandingZoneConfigurationResourcePropertiesResponseOutput {
	return o
}

func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ToLandingZoneConfigurationResourcePropertiesResponseOutputWithContext(ctx context.Context) LandingZoneConfigurationResourcePropertiesResponseOutput {
	return o
}

// The status that indicates the current phase of the configuration process for a deployment.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) AuthoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string { return v.AuthoringStatus }).(pulumi.StringOutput)
}

// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) AzureBastionCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string { return v.AzureBastionCreationOption }).(pulumi.StringOutput)
}

// The Bastion subnet address. Specify the address using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) AzureBastionSubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *string {
		return v.AzureBastionSubnetCidrBlock
	}).(pulumi.StringPtrOutput)
}

// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) CustomNamingConvention() CustomNamingConventionResponseArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) []CustomNamingConventionResponse {
		return v.CustomNamingConvention
	}).(CustomNamingConventionResponseArrayOutput)
}

// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) DdosProtectionCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string {
		return v.DdosProtectionCreationOption
	}).(pulumi.StringOutput)
}

// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) DecommissionedMgMetadata() DecommissionedManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *DecommissionedManagementGroupPropertiesResponse {
		return v.DecommissionedMgMetadata
	}).(DecommissionedManagementGroupPropertiesResponsePtrOutput)
}

// The resource ID of the Bastion when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ExistingAzureBastionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *string { return v.ExistingAzureBastionId }).(pulumi.StringPtrOutput)
}

// The resource ID of the DDoS protection plan when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ExistingDdosProtectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *string { return v.ExistingDdosProtectionId }).(pulumi.StringPtrOutput)
}

// The resource ID of the log analytics workspace when reusing an existing one.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ExistingLogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *string {
		return v.ExistingLogAnalyticsWorkspaceId
	}).(pulumi.StringPtrOutput)
}

// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) FirewallCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string { return v.FirewallCreationOption }).(pulumi.StringOutput)
}

// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) FirewallSubnetCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *string { return v.FirewallSubnetCidrBlock }).(pulumi.StringPtrOutput)
}

// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) GatewaySubnetCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string { return v.GatewaySubnetCidrBlock }).(pulumi.StringOutput)
}

// The Virtual Network address. Specify the address using IPv4 CIDR notation.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) HubNetworkCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string { return v.HubNetworkCidrBlock }).(pulumi.StringOutput)
}

// The child management groups of 'Landing Zones' management group and their assigned policies.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) LandingZonesMgChildren() LandingZoneManagementGroupPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) []LandingZoneManagementGroupPropertiesResponse {
		return v.LandingZonesMgChildren
	}).(LandingZoneManagementGroupPropertiesResponseArrayOutput)
}

// The assigned policies of the 'Landing Zones' management group.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) LandingZonesMgMetadata() ManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *ManagementGroupPropertiesResponse {
		return v.LandingZonesMgMetadata
	}).(ManagementGroupPropertiesResponsePtrOutput)
}

// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) LogAnalyticsWorkspaceCreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string {
		return v.LogAnalyticsWorkspaceCreationOption
	}).(pulumi.StringOutput)
}

// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) LogRetentionInDays() pulumi.Float64Output {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) float64 { return v.LogRetentionInDays }).(pulumi.Float64Output)
}

// The managed identity to be assigned to this landing zone configuration.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ManagedIdentity() ManagedIdentityPropertiesResponseOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) ManagedIdentityPropertiesResponse {
		return v.ManagedIdentity
	}).(ManagedIdentityPropertiesResponseOutput)
}

// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) NamingConventionFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *string { return v.NamingConventionFormula }).(pulumi.StringPtrOutput)
}

// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) PlatformConnectivityMgMetadata() ManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *ManagementGroupPropertiesResponse {
		return v.PlatformConnectivityMgMetadata
	}).(ManagementGroupPropertiesResponsePtrOutput)
}

// The assigned policies of the 'Identity' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) PlatformIdentityMgMetadata() ManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *ManagementGroupPropertiesResponse {
		return v.PlatformIdentityMgMetadata
	}).(ManagementGroupPropertiesResponsePtrOutput)
}

// The assigned policies of the 'Management' management group under 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) PlatformManagementMgMetadata() ManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *ManagementGroupPropertiesResponse {
		return v.PlatformManagementMgMetadata
	}).(ManagementGroupPropertiesResponsePtrOutput)
}

// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) PlatformMgChildren() PlatformManagementGroupPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) []PlatformManagementGroupPropertiesResponse {
		return v.PlatformMgChildren
	}).(PlatformManagementGroupPropertiesResponseArrayOutput)
}

// The assigned policies of the 'Platform' management group.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) PlatformMgMetadata() ManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *ManagementGroupPropertiesResponse {
		return v.PlatformMgMetadata
	}).(ManagementGroupPropertiesResponsePtrOutput)
}

// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone configuration.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) SandboxMgMetadata() SandboxManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *SandboxManagementGroupPropertiesResponse {
		return v.SandboxMgMetadata
	}).(SandboxManagementGroupPropertiesResponsePtrOutput)
}

// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) Tags() TagsResponseArrayOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) []TagsResponse { return v.Tags }).(TagsResponseArrayOutput)
}

// The assigned policies of the parent management group.
func (o LandingZoneConfigurationResourcePropertiesResponseOutput) TopLevelMgMetadata() ManagementGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneConfigurationResourcePropertiesResponse) *ManagementGroupPropertiesResponse {
		return v.TopLevelMgMetadata
	}).(ManagementGroupPropertiesResponsePtrOutput)
}

// The 'Landing Zones' management group properties..
type LandingZoneManagementGroupProperties struct {
	// Management group name.
	Name string `pulumi:"name"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentProperties `pulumi:"policyInitiativesAssignmentProperties"`
}

// LandingZoneManagementGroupPropertiesInput is an input type that accepts LandingZoneManagementGroupPropertiesArgs and LandingZoneManagementGroupPropertiesOutput values.
// You can construct a concrete instance of `LandingZoneManagementGroupPropertiesInput` via:
//
//	LandingZoneManagementGroupPropertiesArgs{...}
type LandingZoneManagementGroupPropertiesInput interface {
	pulumi.Input

	ToLandingZoneManagementGroupPropertiesOutput() LandingZoneManagementGroupPropertiesOutput
	ToLandingZoneManagementGroupPropertiesOutputWithContext(context.Context) LandingZoneManagementGroupPropertiesOutput
}

// The 'Landing Zones' management group properties..
type LandingZoneManagementGroupPropertiesArgs struct {
	// Management group name.
	Name pulumi.StringInput `pulumi:"name"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties PolicyInitiativeAssignmentPropertiesArrayInput `pulumi:"policyInitiativesAssignmentProperties"`
}

func (LandingZoneManagementGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneManagementGroupProperties)(nil)).Elem()
}

func (i LandingZoneManagementGroupPropertiesArgs) ToLandingZoneManagementGroupPropertiesOutput() LandingZoneManagementGroupPropertiesOutput {
	return i.ToLandingZoneManagementGroupPropertiesOutputWithContext(context.Background())
}

func (i LandingZoneManagementGroupPropertiesArgs) ToLandingZoneManagementGroupPropertiesOutputWithContext(ctx context.Context) LandingZoneManagementGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneManagementGroupPropertiesOutput)
}

// LandingZoneManagementGroupPropertiesArrayInput is an input type that accepts LandingZoneManagementGroupPropertiesArray and LandingZoneManagementGroupPropertiesArrayOutput values.
// You can construct a concrete instance of `LandingZoneManagementGroupPropertiesArrayInput` via:
//
//	LandingZoneManagementGroupPropertiesArray{ LandingZoneManagementGroupPropertiesArgs{...} }
type LandingZoneManagementGroupPropertiesArrayInput interface {
	pulumi.Input

	ToLandingZoneManagementGroupPropertiesArrayOutput() LandingZoneManagementGroupPropertiesArrayOutput
	ToLandingZoneManagementGroupPropertiesArrayOutputWithContext(context.Context) LandingZoneManagementGroupPropertiesArrayOutput
}

type LandingZoneManagementGroupPropertiesArray []LandingZoneManagementGroupPropertiesInput

func (LandingZoneManagementGroupPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LandingZoneManagementGroupProperties)(nil)).Elem()
}

func (i LandingZoneManagementGroupPropertiesArray) ToLandingZoneManagementGroupPropertiesArrayOutput() LandingZoneManagementGroupPropertiesArrayOutput {
	return i.ToLandingZoneManagementGroupPropertiesArrayOutputWithContext(context.Background())
}

func (i LandingZoneManagementGroupPropertiesArray) ToLandingZoneManagementGroupPropertiesArrayOutputWithContext(ctx context.Context) LandingZoneManagementGroupPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneManagementGroupPropertiesArrayOutput)
}

// The 'Landing Zones' management group properties..
type LandingZoneManagementGroupPropertiesOutput struct{ *pulumi.OutputState }

func (LandingZoneManagementGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneManagementGroupProperties)(nil)).Elem()
}

func (o LandingZoneManagementGroupPropertiesOutput) ToLandingZoneManagementGroupPropertiesOutput() LandingZoneManagementGroupPropertiesOutput {
	return o
}

func (o LandingZoneManagementGroupPropertiesOutput) ToLandingZoneManagementGroupPropertiesOutputWithContext(ctx context.Context) LandingZoneManagementGroupPropertiesOutput {
	return o
}

// Management group name.
func (o LandingZoneManagementGroupPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneManagementGroupProperties) string { return v.Name }).(pulumi.StringOutput)
}

// Array of policy initiatives applied to the management group.
func (o LandingZoneManagementGroupPropertiesOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v LandingZoneManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

type LandingZoneManagementGroupPropertiesArrayOutput struct{ *pulumi.OutputState }

func (LandingZoneManagementGroupPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LandingZoneManagementGroupProperties)(nil)).Elem()
}

func (o LandingZoneManagementGroupPropertiesArrayOutput) ToLandingZoneManagementGroupPropertiesArrayOutput() LandingZoneManagementGroupPropertiesArrayOutput {
	return o
}

func (o LandingZoneManagementGroupPropertiesArrayOutput) ToLandingZoneManagementGroupPropertiesArrayOutputWithContext(ctx context.Context) LandingZoneManagementGroupPropertiesArrayOutput {
	return o
}

func (o LandingZoneManagementGroupPropertiesArrayOutput) Index(i pulumi.IntInput) LandingZoneManagementGroupPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LandingZoneManagementGroupProperties {
		return vs[0].([]LandingZoneManagementGroupProperties)[vs[1].(int)]
	}).(LandingZoneManagementGroupPropertiesOutput)
}

// The 'Landing Zones' management group properties..
type LandingZoneManagementGroupPropertiesResponse struct {
	// Management group name.
	Name string `pulumi:"name"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentPropertiesResponse `pulumi:"policyInitiativesAssignmentProperties"`
}

// The 'Landing Zones' management group properties..
type LandingZoneManagementGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LandingZoneManagementGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o LandingZoneManagementGroupPropertiesResponseOutput) ToLandingZoneManagementGroupPropertiesResponseOutput() LandingZoneManagementGroupPropertiesResponseOutput {
	return o
}

func (o LandingZoneManagementGroupPropertiesResponseOutput) ToLandingZoneManagementGroupPropertiesResponseOutputWithContext(ctx context.Context) LandingZoneManagementGroupPropertiesResponseOutput {
	return o
}

// Management group name.
func (o LandingZoneManagementGroupPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneManagementGroupPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Array of policy initiatives applied to the management group.
func (o LandingZoneManagementGroupPropertiesResponseOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LandingZoneManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

type LandingZoneManagementGroupPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (LandingZoneManagementGroupPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LandingZoneManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o LandingZoneManagementGroupPropertiesResponseArrayOutput) ToLandingZoneManagementGroupPropertiesResponseArrayOutput() LandingZoneManagementGroupPropertiesResponseArrayOutput {
	return o
}

func (o LandingZoneManagementGroupPropertiesResponseArrayOutput) ToLandingZoneManagementGroupPropertiesResponseArrayOutputWithContext(ctx context.Context) LandingZoneManagementGroupPropertiesResponseArrayOutput {
	return o
}

func (o LandingZoneManagementGroupPropertiesResponseArrayOutput) Index(i pulumi.IntInput) LandingZoneManagementGroupPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LandingZoneManagementGroupPropertiesResponse {
		return vs[0].([]LandingZoneManagementGroupPropertiesResponse)[vs[1].(int)]
	}).(LandingZoneManagementGroupPropertiesResponseOutput)
}

// The properties of landing zone registration resource type.
type LandingZoneRegistrationResourceProperties struct {
	// The resource id of the associated landing zone configuration.
	ExistingLandingZoneConfigurationId string `pulumi:"existingLandingZoneConfigurationId"`
	// The resource id of the top level management group
	ExistingTopLevelMgId string `pulumi:"existingTopLevelMgId"`
	// The managed identity to be assigned to this landing zone registration.
	ManagedIdentity *ManagedIdentityProperties `pulumi:"managedIdentity"`
}

// LandingZoneRegistrationResourcePropertiesInput is an input type that accepts LandingZoneRegistrationResourcePropertiesArgs and LandingZoneRegistrationResourcePropertiesOutput values.
// You can construct a concrete instance of `LandingZoneRegistrationResourcePropertiesInput` via:
//
//	LandingZoneRegistrationResourcePropertiesArgs{...}
type LandingZoneRegistrationResourcePropertiesInput interface {
	pulumi.Input

	ToLandingZoneRegistrationResourcePropertiesOutput() LandingZoneRegistrationResourcePropertiesOutput
	ToLandingZoneRegistrationResourcePropertiesOutputWithContext(context.Context) LandingZoneRegistrationResourcePropertiesOutput
}

// The properties of landing zone registration resource type.
type LandingZoneRegistrationResourcePropertiesArgs struct {
	// The resource id of the associated landing zone configuration.
	ExistingLandingZoneConfigurationId pulumi.StringInput `pulumi:"existingLandingZoneConfigurationId"`
	// The resource id of the top level management group
	ExistingTopLevelMgId pulumi.StringInput `pulumi:"existingTopLevelMgId"`
	// The managed identity to be assigned to this landing zone registration.
	ManagedIdentity ManagedIdentityPropertiesPtrInput `pulumi:"managedIdentity"`
}

func (LandingZoneRegistrationResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneRegistrationResourceProperties)(nil)).Elem()
}

func (i LandingZoneRegistrationResourcePropertiesArgs) ToLandingZoneRegistrationResourcePropertiesOutput() LandingZoneRegistrationResourcePropertiesOutput {
	return i.ToLandingZoneRegistrationResourcePropertiesOutputWithContext(context.Background())
}

func (i LandingZoneRegistrationResourcePropertiesArgs) ToLandingZoneRegistrationResourcePropertiesOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneRegistrationResourcePropertiesOutput)
}

func (i LandingZoneRegistrationResourcePropertiesArgs) ToLandingZoneRegistrationResourcePropertiesPtrOutput() LandingZoneRegistrationResourcePropertiesPtrOutput {
	return i.ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i LandingZoneRegistrationResourcePropertiesArgs) ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneRegistrationResourcePropertiesOutput).ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(ctx)
}

// LandingZoneRegistrationResourcePropertiesPtrInput is an input type that accepts LandingZoneRegistrationResourcePropertiesArgs, LandingZoneRegistrationResourcePropertiesPtr and LandingZoneRegistrationResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `LandingZoneRegistrationResourcePropertiesPtrInput` via:
//
//	        LandingZoneRegistrationResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type LandingZoneRegistrationResourcePropertiesPtrInput interface {
	pulumi.Input

	ToLandingZoneRegistrationResourcePropertiesPtrOutput() LandingZoneRegistrationResourcePropertiesPtrOutput
	ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(context.Context) LandingZoneRegistrationResourcePropertiesPtrOutput
}

type landingZoneRegistrationResourcePropertiesPtrType LandingZoneRegistrationResourcePropertiesArgs

func LandingZoneRegistrationResourcePropertiesPtr(v *LandingZoneRegistrationResourcePropertiesArgs) LandingZoneRegistrationResourcePropertiesPtrInput {
	return (*landingZoneRegistrationResourcePropertiesPtrType)(v)
}

func (*landingZoneRegistrationResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneRegistrationResourceProperties)(nil)).Elem()
}

func (i *landingZoneRegistrationResourcePropertiesPtrType) ToLandingZoneRegistrationResourcePropertiesPtrOutput() LandingZoneRegistrationResourcePropertiesPtrOutput {
	return i.ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *landingZoneRegistrationResourcePropertiesPtrType) ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneRegistrationResourcePropertiesPtrOutput)
}

// The properties of landing zone registration resource type.
type LandingZoneRegistrationResourcePropertiesOutput struct{ *pulumi.OutputState }

func (LandingZoneRegistrationResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneRegistrationResourceProperties)(nil)).Elem()
}

func (o LandingZoneRegistrationResourcePropertiesOutput) ToLandingZoneRegistrationResourcePropertiesOutput() LandingZoneRegistrationResourcePropertiesOutput {
	return o
}

func (o LandingZoneRegistrationResourcePropertiesOutput) ToLandingZoneRegistrationResourcePropertiesOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesOutput {
	return o
}

func (o LandingZoneRegistrationResourcePropertiesOutput) ToLandingZoneRegistrationResourcePropertiesPtrOutput() LandingZoneRegistrationResourcePropertiesPtrOutput {
	return o.ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o LandingZoneRegistrationResourcePropertiesOutput) ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LandingZoneRegistrationResourceProperties) *LandingZoneRegistrationResourceProperties {
		return &v
	}).(LandingZoneRegistrationResourcePropertiesPtrOutput)
}

// The resource id of the associated landing zone configuration.
func (o LandingZoneRegistrationResourcePropertiesOutput) ExistingLandingZoneConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourceProperties) string { return v.ExistingLandingZoneConfigurationId }).(pulumi.StringOutput)
}

// The resource id of the top level management group
func (o LandingZoneRegistrationResourcePropertiesOutput) ExistingTopLevelMgId() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourceProperties) string { return v.ExistingTopLevelMgId }).(pulumi.StringOutput)
}

// The managed identity to be assigned to this landing zone registration.
func (o LandingZoneRegistrationResourcePropertiesOutput) ManagedIdentity() ManagedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourceProperties) *ManagedIdentityProperties { return v.ManagedIdentity }).(ManagedIdentityPropertiesPtrOutput)
}

type LandingZoneRegistrationResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (LandingZoneRegistrationResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneRegistrationResourceProperties)(nil)).Elem()
}

func (o LandingZoneRegistrationResourcePropertiesPtrOutput) ToLandingZoneRegistrationResourcePropertiesPtrOutput() LandingZoneRegistrationResourcePropertiesPtrOutput {
	return o
}

func (o LandingZoneRegistrationResourcePropertiesPtrOutput) ToLandingZoneRegistrationResourcePropertiesPtrOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesPtrOutput {
	return o
}

func (o LandingZoneRegistrationResourcePropertiesPtrOutput) Elem() LandingZoneRegistrationResourcePropertiesOutput {
	return o.ApplyT(func(v *LandingZoneRegistrationResourceProperties) LandingZoneRegistrationResourceProperties {
		if v != nil {
			return *v
		}
		var ret LandingZoneRegistrationResourceProperties
		return ret
	}).(LandingZoneRegistrationResourcePropertiesOutput)
}

// The resource id of the associated landing zone configuration.
func (o LandingZoneRegistrationResourcePropertiesPtrOutput) ExistingLandingZoneConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneRegistrationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ExistingLandingZoneConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The resource id of the top level management group
func (o LandingZoneRegistrationResourcePropertiesPtrOutput) ExistingTopLevelMgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneRegistrationResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ExistingTopLevelMgId
	}).(pulumi.StringPtrOutput)
}

// The managed identity to be assigned to this landing zone registration.
func (o LandingZoneRegistrationResourcePropertiesPtrOutput) ManagedIdentity() ManagedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v *LandingZoneRegistrationResourceProperties) *ManagedIdentityProperties {
		if v == nil {
			return nil
		}
		return v.ManagedIdentity
	}).(ManagedIdentityPropertiesPtrOutput)
}

// The properties of landing zone registration resource type.
type LandingZoneRegistrationResourcePropertiesResponse struct {
	// The resource id of the associated landing zone configuration.
	ExistingLandingZoneConfigurationId string `pulumi:"existingLandingZoneConfigurationId"`
	// The resource id of the top level management group
	ExistingTopLevelMgId string `pulumi:"existingTopLevelMgId"`
	// The managed identity to be assigned to this landing zone registration.
	ManagedIdentity *ManagedIdentityPropertiesResponse `pulumi:"managedIdentity"`
	// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone registration resource type.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of landing zone registration resource type.
type LandingZoneRegistrationResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (LandingZoneRegistrationResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneRegistrationResourcePropertiesResponse)(nil)).Elem()
}

func (o LandingZoneRegistrationResourcePropertiesResponseOutput) ToLandingZoneRegistrationResourcePropertiesResponseOutput() LandingZoneRegistrationResourcePropertiesResponseOutput {
	return o
}

func (o LandingZoneRegistrationResourcePropertiesResponseOutput) ToLandingZoneRegistrationResourcePropertiesResponseOutputWithContext(ctx context.Context) LandingZoneRegistrationResourcePropertiesResponseOutput {
	return o
}

// The resource id of the associated landing zone configuration.
func (o LandingZoneRegistrationResourcePropertiesResponseOutput) ExistingLandingZoneConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourcePropertiesResponse) string {
		return v.ExistingLandingZoneConfigurationId
	}).(pulumi.StringOutput)
}

// The resource id of the top level management group
func (o LandingZoneRegistrationResourcePropertiesResponseOutput) ExistingTopLevelMgId() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourcePropertiesResponse) string { return v.ExistingTopLevelMgId }).(pulumi.StringOutput)
}

// The managed identity to be assigned to this landing zone registration.
func (o LandingZoneRegistrationResourcePropertiesResponseOutput) ManagedIdentity() ManagedIdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourcePropertiesResponse) *ManagedIdentityPropertiesResponse {
		return v.ManagedIdentity
	}).(ManagedIdentityPropertiesResponsePtrOutput)
}

// The state that reflects the current stage in the creation, updating, or deletion process of the landing zone registration resource type.
func (o LandingZoneRegistrationResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneRegistrationResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties of managed identity, specifically including type and resource ID.
type ManagedIdentityProperties struct {
	// The type of managed identity.
	Type string `pulumi:"type"`
	// The resource id of the managed identity.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// ManagedIdentityPropertiesInput is an input type that accepts ManagedIdentityPropertiesArgs and ManagedIdentityPropertiesOutput values.
// You can construct a concrete instance of `ManagedIdentityPropertiesInput` via:
//
//	ManagedIdentityPropertiesArgs{...}
type ManagedIdentityPropertiesInput interface {
	pulumi.Input

	ToManagedIdentityPropertiesOutput() ManagedIdentityPropertiesOutput
	ToManagedIdentityPropertiesOutputWithContext(context.Context) ManagedIdentityPropertiesOutput
}

// The properties of managed identity, specifically including type and resource ID.
type ManagedIdentityPropertiesArgs struct {
	// The type of managed identity.
	Type pulumi.StringInput `pulumi:"type"`
	// The resource id of the managed identity.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (ManagedIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityProperties)(nil)).Elem()
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesOutput() ManagedIdentityPropertiesOutput {
	return i.ToManagedIdentityPropertiesOutputWithContext(context.Background())
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesOutputWithContext(ctx context.Context) ManagedIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPropertiesOutput)
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return i.ToManagedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedIdentityPropertiesArgs) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPropertiesOutput).ToManagedIdentityPropertiesPtrOutputWithContext(ctx)
}

// ManagedIdentityPropertiesPtrInput is an input type that accepts ManagedIdentityPropertiesArgs, ManagedIdentityPropertiesPtr and ManagedIdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedIdentityPropertiesPtrInput` via:
//
//	        ManagedIdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityPropertiesPtrInput interface {
	pulumi.Input

	ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput
	ToManagedIdentityPropertiesPtrOutputWithContext(context.Context) ManagedIdentityPropertiesPtrOutput
}

type managedIdentityPropertiesPtrType ManagedIdentityPropertiesArgs

func ManagedIdentityPropertiesPtr(v *ManagedIdentityPropertiesArgs) ManagedIdentityPropertiesPtrInput {
	return (*managedIdentityPropertiesPtrType)(v)
}

func (*managedIdentityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityProperties)(nil)).Elem()
}

func (i *managedIdentityPropertiesPtrType) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return i.ToManagedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedIdentityPropertiesPtrType) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPropertiesPtrOutput)
}

// The properties of managed identity, specifically including type and resource ID.
type ManagedIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityProperties)(nil)).Elem()
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesOutput() ManagedIdentityPropertiesOutput {
	return o
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesOutputWithContext(ctx context.Context) ManagedIdentityPropertiesOutput {
	return o
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return o.ToManagedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityPropertiesOutput) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityProperties) *ManagedIdentityProperties {
		return &v
	}).(ManagedIdentityPropertiesPtrOutput)
}

// The type of managed identity.
func (o ManagedIdentityPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The resource id of the managed identity.
func (o ManagedIdentityPropertiesOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityProperties) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityProperties)(nil)).Elem()
}

func (o ManagedIdentityPropertiesPtrOutput) ToManagedIdentityPropertiesPtrOutput() ManagedIdentityPropertiesPtrOutput {
	return o
}

func (o ManagedIdentityPropertiesPtrOutput) ToManagedIdentityPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesPtrOutput {
	return o
}

func (o ManagedIdentityPropertiesPtrOutput) Elem() ManagedIdentityPropertiesOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) ManagedIdentityProperties {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityProperties
		return ret
	}).(ManagedIdentityPropertiesOutput)
}

// The type of managed identity.
func (o ManagedIdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The resource id of the managed identity.
func (o ManagedIdentityPropertiesPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// The properties of managed identity, specifically including type and resource ID.
type ManagedIdentityPropertiesResponse struct {
	// The type of managed identity.
	Type string `pulumi:"type"`
	// The resource id of the managed identity.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// The properties of managed identity, specifically including type and resource ID.
type ManagedIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityPropertiesResponse)(nil)).Elem()
}

func (o ManagedIdentityPropertiesResponseOutput) ToManagedIdentityPropertiesResponseOutput() ManagedIdentityPropertiesResponseOutput {
	return o
}

func (o ManagedIdentityPropertiesResponseOutput) ToManagedIdentityPropertiesResponseOutputWithContext(ctx context.Context) ManagedIdentityPropertiesResponseOutput {
	return o
}

// The type of managed identity.
func (o ManagedIdentityPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The resource id of the managed identity.
func (o ManagedIdentityPropertiesResponseOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityPropertiesResponse) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityPropertiesResponse)(nil)).Elem()
}

func (o ManagedIdentityPropertiesResponsePtrOutput) ToManagedIdentityPropertiesResponsePtrOutput() ManagedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o ManagedIdentityPropertiesResponsePtrOutput) ToManagedIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o ManagedIdentityPropertiesResponsePtrOutput) Elem() ManagedIdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) ManagedIdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityPropertiesResponse
		return ret
	}).(ManagedIdentityPropertiesResponseOutput)
}

// The type of managed identity.
func (o ManagedIdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The resource id of the managed identity.
func (o ManagedIdentityPropertiesResponsePtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// The properties of policy initiatives applied to the management group.
type ManagementGroupProperties struct {
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentProperties `pulumi:"policyInitiativesAssignmentProperties"`
}

// ManagementGroupPropertiesInput is an input type that accepts ManagementGroupPropertiesArgs and ManagementGroupPropertiesOutput values.
// You can construct a concrete instance of `ManagementGroupPropertiesInput` via:
//
//	ManagementGroupPropertiesArgs{...}
type ManagementGroupPropertiesInput interface {
	pulumi.Input

	ToManagementGroupPropertiesOutput() ManagementGroupPropertiesOutput
	ToManagementGroupPropertiesOutputWithContext(context.Context) ManagementGroupPropertiesOutput
}

// The properties of policy initiatives applied to the management group.
type ManagementGroupPropertiesArgs struct {
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties PolicyInitiativeAssignmentPropertiesArrayInput `pulumi:"policyInitiativesAssignmentProperties"`
}

func (ManagementGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupProperties)(nil)).Elem()
}

func (i ManagementGroupPropertiesArgs) ToManagementGroupPropertiesOutput() ManagementGroupPropertiesOutput {
	return i.ToManagementGroupPropertiesOutputWithContext(context.Background())
}

func (i ManagementGroupPropertiesArgs) ToManagementGroupPropertiesOutputWithContext(ctx context.Context) ManagementGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupPropertiesOutput)
}

func (i ManagementGroupPropertiesArgs) ToManagementGroupPropertiesPtrOutput() ManagementGroupPropertiesPtrOutput {
	return i.ToManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagementGroupPropertiesArgs) ToManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) ManagementGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupPropertiesOutput).ToManagementGroupPropertiesPtrOutputWithContext(ctx)
}

// ManagementGroupPropertiesPtrInput is an input type that accepts ManagementGroupPropertiesArgs, ManagementGroupPropertiesPtr and ManagementGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagementGroupPropertiesPtrInput` via:
//
//	        ManagementGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagementGroupPropertiesPtrInput interface {
	pulumi.Input

	ToManagementGroupPropertiesPtrOutput() ManagementGroupPropertiesPtrOutput
	ToManagementGroupPropertiesPtrOutputWithContext(context.Context) ManagementGroupPropertiesPtrOutput
}

type managementGroupPropertiesPtrType ManagementGroupPropertiesArgs

func ManagementGroupPropertiesPtr(v *ManagementGroupPropertiesArgs) ManagementGroupPropertiesPtrInput {
	return (*managementGroupPropertiesPtrType)(v)
}

func (*managementGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupProperties)(nil)).Elem()
}

func (i *managementGroupPropertiesPtrType) ToManagementGroupPropertiesPtrOutput() ManagementGroupPropertiesPtrOutput {
	return i.ToManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *managementGroupPropertiesPtrType) ToManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) ManagementGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupPropertiesPtrOutput)
}

// The properties of policy initiatives applied to the management group.
type ManagementGroupPropertiesOutput struct{ *pulumi.OutputState }

func (ManagementGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupProperties)(nil)).Elem()
}

func (o ManagementGroupPropertiesOutput) ToManagementGroupPropertiesOutput() ManagementGroupPropertiesOutput {
	return o
}

func (o ManagementGroupPropertiesOutput) ToManagementGroupPropertiesOutputWithContext(ctx context.Context) ManagementGroupPropertiesOutput {
	return o
}

func (o ManagementGroupPropertiesOutput) ToManagementGroupPropertiesPtrOutput() ManagementGroupPropertiesPtrOutput {
	return o.ToManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagementGroupPropertiesOutput) ToManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) ManagementGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementGroupProperties) *ManagementGroupProperties {
		return &v
	}).(ManagementGroupPropertiesPtrOutput)
}

// Array of policy initiatives applied to the management group.
func (o ManagementGroupPropertiesOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v ManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

type ManagementGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagementGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupProperties)(nil)).Elem()
}

func (o ManagementGroupPropertiesPtrOutput) ToManagementGroupPropertiesPtrOutput() ManagementGroupPropertiesPtrOutput {
	return o
}

func (o ManagementGroupPropertiesPtrOutput) ToManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) ManagementGroupPropertiesPtrOutput {
	return o
}

func (o ManagementGroupPropertiesPtrOutput) Elem() ManagementGroupPropertiesOutput {
	return o.ApplyT(func(v *ManagementGroupProperties) ManagementGroupProperties {
		if v != nil {
			return *v
		}
		var ret ManagementGroupProperties
		return ret
	}).(ManagementGroupPropertiesOutput)
}

// Array of policy initiatives applied to the management group.
func (o ManagementGroupPropertiesPtrOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v *ManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		if v == nil {
			return nil
		}
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

// The properties of policy initiatives applied to the management group.
type ManagementGroupPropertiesResponse struct {
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentPropertiesResponse `pulumi:"policyInitiativesAssignmentProperties"`
}

// The properties of policy initiatives applied to the management group.
type ManagementGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagementGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o ManagementGroupPropertiesResponseOutput) ToManagementGroupPropertiesResponseOutput() ManagementGroupPropertiesResponseOutput {
	return o
}

func (o ManagementGroupPropertiesResponseOutput) ToManagementGroupPropertiesResponseOutputWithContext(ctx context.Context) ManagementGroupPropertiesResponseOutput {
	return o
}

// Array of policy initiatives applied to the management group.
func (o ManagementGroupPropertiesResponseOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v ManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

type ManagementGroupPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementGroupPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o ManagementGroupPropertiesResponsePtrOutput) ToManagementGroupPropertiesResponsePtrOutput() ManagementGroupPropertiesResponsePtrOutput {
	return o
}

func (o ManagementGroupPropertiesResponsePtrOutput) ToManagementGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagementGroupPropertiesResponsePtrOutput {
	return o
}

func (o ManagementGroupPropertiesResponsePtrOutput) Elem() ManagementGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagementGroupPropertiesResponse) ManagementGroupPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ManagementGroupPropertiesResponse
		return ret
	}).(ManagementGroupPropertiesResponseOutput)
}

// Array of policy initiatives applied to the management group.
func (o ManagementGroupPropertiesResponsePtrOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *ManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

// The 'Platform' management group properties.
type PlatformManagementGroupProperties struct {
	// Management group name.
	Name string `pulumi:"name"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentProperties `pulumi:"policyInitiativesAssignmentProperties"`
}

// PlatformManagementGroupPropertiesInput is an input type that accepts PlatformManagementGroupPropertiesArgs and PlatformManagementGroupPropertiesOutput values.
// You can construct a concrete instance of `PlatformManagementGroupPropertiesInput` via:
//
//	PlatformManagementGroupPropertiesArgs{...}
type PlatformManagementGroupPropertiesInput interface {
	pulumi.Input

	ToPlatformManagementGroupPropertiesOutput() PlatformManagementGroupPropertiesOutput
	ToPlatformManagementGroupPropertiesOutputWithContext(context.Context) PlatformManagementGroupPropertiesOutput
}

// The 'Platform' management group properties.
type PlatformManagementGroupPropertiesArgs struct {
	// Management group name.
	Name pulumi.StringInput `pulumi:"name"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties PolicyInitiativeAssignmentPropertiesArrayInput `pulumi:"policyInitiativesAssignmentProperties"`
}

func (PlatformManagementGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformManagementGroupProperties)(nil)).Elem()
}

func (i PlatformManagementGroupPropertiesArgs) ToPlatformManagementGroupPropertiesOutput() PlatformManagementGroupPropertiesOutput {
	return i.ToPlatformManagementGroupPropertiesOutputWithContext(context.Background())
}

func (i PlatformManagementGroupPropertiesArgs) ToPlatformManagementGroupPropertiesOutputWithContext(ctx context.Context) PlatformManagementGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformManagementGroupPropertiesOutput)
}

// PlatformManagementGroupPropertiesArrayInput is an input type that accepts PlatformManagementGroupPropertiesArray and PlatformManagementGroupPropertiesArrayOutput values.
// You can construct a concrete instance of `PlatformManagementGroupPropertiesArrayInput` via:
//
//	PlatformManagementGroupPropertiesArray{ PlatformManagementGroupPropertiesArgs{...} }
type PlatformManagementGroupPropertiesArrayInput interface {
	pulumi.Input

	ToPlatformManagementGroupPropertiesArrayOutput() PlatformManagementGroupPropertiesArrayOutput
	ToPlatformManagementGroupPropertiesArrayOutputWithContext(context.Context) PlatformManagementGroupPropertiesArrayOutput
}

type PlatformManagementGroupPropertiesArray []PlatformManagementGroupPropertiesInput

func (PlatformManagementGroupPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlatformManagementGroupProperties)(nil)).Elem()
}

func (i PlatformManagementGroupPropertiesArray) ToPlatformManagementGroupPropertiesArrayOutput() PlatformManagementGroupPropertiesArrayOutput {
	return i.ToPlatformManagementGroupPropertiesArrayOutputWithContext(context.Background())
}

func (i PlatformManagementGroupPropertiesArray) ToPlatformManagementGroupPropertiesArrayOutputWithContext(ctx context.Context) PlatformManagementGroupPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformManagementGroupPropertiesArrayOutput)
}

// The 'Platform' management group properties.
type PlatformManagementGroupPropertiesOutput struct{ *pulumi.OutputState }

func (PlatformManagementGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformManagementGroupProperties)(nil)).Elem()
}

func (o PlatformManagementGroupPropertiesOutput) ToPlatformManagementGroupPropertiesOutput() PlatformManagementGroupPropertiesOutput {
	return o
}

func (o PlatformManagementGroupPropertiesOutput) ToPlatformManagementGroupPropertiesOutputWithContext(ctx context.Context) PlatformManagementGroupPropertiesOutput {
	return o
}

// Management group name.
func (o PlatformManagementGroupPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformManagementGroupProperties) string { return v.Name }).(pulumi.StringOutput)
}

// Array of policy initiatives applied to the management group.
func (o PlatformManagementGroupPropertiesOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v PlatformManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

type PlatformManagementGroupPropertiesArrayOutput struct{ *pulumi.OutputState }

func (PlatformManagementGroupPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlatformManagementGroupProperties)(nil)).Elem()
}

func (o PlatformManagementGroupPropertiesArrayOutput) ToPlatformManagementGroupPropertiesArrayOutput() PlatformManagementGroupPropertiesArrayOutput {
	return o
}

func (o PlatformManagementGroupPropertiesArrayOutput) ToPlatformManagementGroupPropertiesArrayOutputWithContext(ctx context.Context) PlatformManagementGroupPropertiesArrayOutput {
	return o
}

func (o PlatformManagementGroupPropertiesArrayOutput) Index(i pulumi.IntInput) PlatformManagementGroupPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlatformManagementGroupProperties {
		return vs[0].([]PlatformManagementGroupProperties)[vs[1].(int)]
	}).(PlatformManagementGroupPropertiesOutput)
}

// The 'Platform' management group properties.
type PlatformManagementGroupPropertiesResponse struct {
	// Management group name.
	Name string `pulumi:"name"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentPropertiesResponse `pulumi:"policyInitiativesAssignmentProperties"`
}

// The 'Platform' management group properties.
type PlatformManagementGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PlatformManagementGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o PlatformManagementGroupPropertiesResponseOutput) ToPlatformManagementGroupPropertiesResponseOutput() PlatformManagementGroupPropertiesResponseOutput {
	return o
}

func (o PlatformManagementGroupPropertiesResponseOutput) ToPlatformManagementGroupPropertiesResponseOutputWithContext(ctx context.Context) PlatformManagementGroupPropertiesResponseOutput {
	return o
}

// Management group name.
func (o PlatformManagementGroupPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformManagementGroupPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Array of policy initiatives applied to the management group.
func (o PlatformManagementGroupPropertiesResponseOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v PlatformManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

type PlatformManagementGroupPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PlatformManagementGroupPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlatformManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o PlatformManagementGroupPropertiesResponseArrayOutput) ToPlatformManagementGroupPropertiesResponseArrayOutput() PlatformManagementGroupPropertiesResponseArrayOutput {
	return o
}

func (o PlatformManagementGroupPropertiesResponseArrayOutput) ToPlatformManagementGroupPropertiesResponseArrayOutputWithContext(ctx context.Context) PlatformManagementGroupPropertiesResponseArrayOutput {
	return o
}

func (o PlatformManagementGroupPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PlatformManagementGroupPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlatformManagementGroupPropertiesResponse {
		return vs[0].([]PlatformManagementGroupPropertiesResponse)[vs[1].(int)]
	}).(PlatformManagementGroupPropertiesResponseOutput)
}

// The properties of assigned policy initiatives.
type PolicyInitiativeAssignmentProperties struct {
	// The parameters of the assigned policy initiative.
	AssignmentParameters interface{} `pulumi:"assignmentParameters"`
	// The fully qualified id of the policy initiative.
	PolicyInitiativeId string `pulumi:"policyInitiativeId"`
}

// PolicyInitiativeAssignmentPropertiesInput is an input type that accepts PolicyInitiativeAssignmentPropertiesArgs and PolicyInitiativeAssignmentPropertiesOutput values.
// You can construct a concrete instance of `PolicyInitiativeAssignmentPropertiesInput` via:
//
//	PolicyInitiativeAssignmentPropertiesArgs{...}
type PolicyInitiativeAssignmentPropertiesInput interface {
	pulumi.Input

	ToPolicyInitiativeAssignmentPropertiesOutput() PolicyInitiativeAssignmentPropertiesOutput
	ToPolicyInitiativeAssignmentPropertiesOutputWithContext(context.Context) PolicyInitiativeAssignmentPropertiesOutput
}

// The properties of assigned policy initiatives.
type PolicyInitiativeAssignmentPropertiesArgs struct {
	// The parameters of the assigned policy initiative.
	AssignmentParameters pulumi.Input `pulumi:"assignmentParameters"`
	// The fully qualified id of the policy initiative.
	PolicyInitiativeId pulumi.StringInput `pulumi:"policyInitiativeId"`
}

func (PolicyInitiativeAssignmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInitiativeAssignmentProperties)(nil)).Elem()
}

func (i PolicyInitiativeAssignmentPropertiesArgs) ToPolicyInitiativeAssignmentPropertiesOutput() PolicyInitiativeAssignmentPropertiesOutput {
	return i.ToPolicyInitiativeAssignmentPropertiesOutputWithContext(context.Background())
}

func (i PolicyInitiativeAssignmentPropertiesArgs) ToPolicyInitiativeAssignmentPropertiesOutputWithContext(ctx context.Context) PolicyInitiativeAssignmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInitiativeAssignmentPropertiesOutput)
}

// PolicyInitiativeAssignmentPropertiesArrayInput is an input type that accepts PolicyInitiativeAssignmentPropertiesArray and PolicyInitiativeAssignmentPropertiesArrayOutput values.
// You can construct a concrete instance of `PolicyInitiativeAssignmentPropertiesArrayInput` via:
//
//	PolicyInitiativeAssignmentPropertiesArray{ PolicyInitiativeAssignmentPropertiesArgs{...} }
type PolicyInitiativeAssignmentPropertiesArrayInput interface {
	pulumi.Input

	ToPolicyInitiativeAssignmentPropertiesArrayOutput() PolicyInitiativeAssignmentPropertiesArrayOutput
	ToPolicyInitiativeAssignmentPropertiesArrayOutputWithContext(context.Context) PolicyInitiativeAssignmentPropertiesArrayOutput
}

type PolicyInitiativeAssignmentPropertiesArray []PolicyInitiativeAssignmentPropertiesInput

func (PolicyInitiativeAssignmentPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInitiativeAssignmentProperties)(nil)).Elem()
}

func (i PolicyInitiativeAssignmentPropertiesArray) ToPolicyInitiativeAssignmentPropertiesArrayOutput() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return i.ToPolicyInitiativeAssignmentPropertiesArrayOutputWithContext(context.Background())
}

func (i PolicyInitiativeAssignmentPropertiesArray) ToPolicyInitiativeAssignmentPropertiesArrayOutputWithContext(ctx context.Context) PolicyInitiativeAssignmentPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

// The properties of assigned policy initiatives.
type PolicyInitiativeAssignmentPropertiesOutput struct{ *pulumi.OutputState }

func (PolicyInitiativeAssignmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInitiativeAssignmentProperties)(nil)).Elem()
}

func (o PolicyInitiativeAssignmentPropertiesOutput) ToPolicyInitiativeAssignmentPropertiesOutput() PolicyInitiativeAssignmentPropertiesOutput {
	return o
}

func (o PolicyInitiativeAssignmentPropertiesOutput) ToPolicyInitiativeAssignmentPropertiesOutputWithContext(ctx context.Context) PolicyInitiativeAssignmentPropertiesOutput {
	return o
}

// The parameters of the assigned policy initiative.
func (o PolicyInitiativeAssignmentPropertiesOutput) AssignmentParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyInitiativeAssignmentProperties) interface{} { return v.AssignmentParameters }).(pulumi.AnyOutput)
}

// The fully qualified id of the policy initiative.
func (o PolicyInitiativeAssignmentPropertiesOutput) PolicyInitiativeId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyInitiativeAssignmentProperties) string { return v.PolicyInitiativeId }).(pulumi.StringOutput)
}

type PolicyInitiativeAssignmentPropertiesArrayOutput struct{ *pulumi.OutputState }

func (PolicyInitiativeAssignmentPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInitiativeAssignmentProperties)(nil)).Elem()
}

func (o PolicyInitiativeAssignmentPropertiesArrayOutput) ToPolicyInitiativeAssignmentPropertiesArrayOutput() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o
}

func (o PolicyInitiativeAssignmentPropertiesArrayOutput) ToPolicyInitiativeAssignmentPropertiesArrayOutputWithContext(ctx context.Context) PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o
}

func (o PolicyInitiativeAssignmentPropertiesArrayOutput) Index(i pulumi.IntInput) PolicyInitiativeAssignmentPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInitiativeAssignmentProperties {
		return vs[0].([]PolicyInitiativeAssignmentProperties)[vs[1].(int)]
	}).(PolicyInitiativeAssignmentPropertiesOutput)
}

// The properties of assigned policy initiatives.
type PolicyInitiativeAssignmentPropertiesResponse struct {
	// The parameters of the assigned policy initiative.
	AssignmentParameters interface{} `pulumi:"assignmentParameters"`
	// The fully qualified id of the policy initiative.
	PolicyInitiativeId string `pulumi:"policyInitiativeId"`
}

// The properties of assigned policy initiatives.
type PolicyInitiativeAssignmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyInitiativeAssignmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInitiativeAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyInitiativeAssignmentPropertiesResponseOutput) ToPolicyInitiativeAssignmentPropertiesResponseOutput() PolicyInitiativeAssignmentPropertiesResponseOutput {
	return o
}

func (o PolicyInitiativeAssignmentPropertiesResponseOutput) ToPolicyInitiativeAssignmentPropertiesResponseOutputWithContext(ctx context.Context) PolicyInitiativeAssignmentPropertiesResponseOutput {
	return o
}

// The parameters of the assigned policy initiative.
func (o PolicyInitiativeAssignmentPropertiesResponseOutput) AssignmentParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyInitiativeAssignmentPropertiesResponse) interface{} { return v.AssignmentParameters }).(pulumi.AnyOutput)
}

// The fully qualified id of the policy initiative.
func (o PolicyInitiativeAssignmentPropertiesResponseOutput) PolicyInitiativeId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyInitiativeAssignmentPropertiesResponse) string { return v.PolicyInitiativeId }).(pulumi.StringOutput)
}

type PolicyInitiativeAssignmentPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyInitiativeAssignmentPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInitiativeAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyInitiativeAssignmentPropertiesResponseArrayOutput) ToPolicyInitiativeAssignmentPropertiesResponseArrayOutput() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o
}

func (o PolicyInitiativeAssignmentPropertiesResponseArrayOutput) ToPolicyInitiativeAssignmentPropertiesResponseArrayOutputWithContext(ctx context.Context) PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o
}

func (o PolicyInitiativeAssignmentPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PolicyInitiativeAssignmentPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInitiativeAssignmentPropertiesResponse {
		return vs[0].([]PolicyInitiativeAssignmentPropertiesResponse)[vs[1].(int)]
	}).(PolicyInitiativeAssignmentPropertiesResponseOutput)
}

// The 'Sandbox' management group properties.
type SandboxManagementGroupProperties struct {
	// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
	Create bool `pulumi:"create"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentProperties `pulumi:"policyInitiativesAssignmentProperties"`
}

// SandboxManagementGroupPropertiesInput is an input type that accepts SandboxManagementGroupPropertiesArgs and SandboxManagementGroupPropertiesOutput values.
// You can construct a concrete instance of `SandboxManagementGroupPropertiesInput` via:
//
//	SandboxManagementGroupPropertiesArgs{...}
type SandboxManagementGroupPropertiesInput interface {
	pulumi.Input

	ToSandboxManagementGroupPropertiesOutput() SandboxManagementGroupPropertiesOutput
	ToSandboxManagementGroupPropertiesOutputWithContext(context.Context) SandboxManagementGroupPropertiesOutput
}

// The 'Sandbox' management group properties.
type SandboxManagementGroupPropertiesArgs struct {
	// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
	Create pulumi.BoolInput `pulumi:"create"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties PolicyInitiativeAssignmentPropertiesArrayInput `pulumi:"policyInitiativesAssignmentProperties"`
}

func (SandboxManagementGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SandboxManagementGroupProperties)(nil)).Elem()
}

func (i SandboxManagementGroupPropertiesArgs) ToSandboxManagementGroupPropertiesOutput() SandboxManagementGroupPropertiesOutput {
	return i.ToSandboxManagementGroupPropertiesOutputWithContext(context.Background())
}

func (i SandboxManagementGroupPropertiesArgs) ToSandboxManagementGroupPropertiesOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SandboxManagementGroupPropertiesOutput)
}

func (i SandboxManagementGroupPropertiesArgs) ToSandboxManagementGroupPropertiesPtrOutput() SandboxManagementGroupPropertiesPtrOutput {
	return i.ToSandboxManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i SandboxManagementGroupPropertiesArgs) ToSandboxManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SandboxManagementGroupPropertiesOutput).ToSandboxManagementGroupPropertiesPtrOutputWithContext(ctx)
}

// SandboxManagementGroupPropertiesPtrInput is an input type that accepts SandboxManagementGroupPropertiesArgs, SandboxManagementGroupPropertiesPtr and SandboxManagementGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `SandboxManagementGroupPropertiesPtrInput` via:
//
//	        SandboxManagementGroupPropertiesArgs{...}
//
//	or:
//
//	        nil
type SandboxManagementGroupPropertiesPtrInput interface {
	pulumi.Input

	ToSandboxManagementGroupPropertiesPtrOutput() SandboxManagementGroupPropertiesPtrOutput
	ToSandboxManagementGroupPropertiesPtrOutputWithContext(context.Context) SandboxManagementGroupPropertiesPtrOutput
}

type sandboxManagementGroupPropertiesPtrType SandboxManagementGroupPropertiesArgs

func SandboxManagementGroupPropertiesPtr(v *SandboxManagementGroupPropertiesArgs) SandboxManagementGroupPropertiesPtrInput {
	return (*sandboxManagementGroupPropertiesPtrType)(v)
}

func (*sandboxManagementGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SandboxManagementGroupProperties)(nil)).Elem()
}

func (i *sandboxManagementGroupPropertiesPtrType) ToSandboxManagementGroupPropertiesPtrOutput() SandboxManagementGroupPropertiesPtrOutput {
	return i.ToSandboxManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *sandboxManagementGroupPropertiesPtrType) ToSandboxManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SandboxManagementGroupPropertiesPtrOutput)
}

// The 'Sandbox' management group properties.
type SandboxManagementGroupPropertiesOutput struct{ *pulumi.OutputState }

func (SandboxManagementGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SandboxManagementGroupProperties)(nil)).Elem()
}

func (o SandboxManagementGroupPropertiesOutput) ToSandboxManagementGroupPropertiesOutput() SandboxManagementGroupPropertiesOutput {
	return o
}

func (o SandboxManagementGroupPropertiesOutput) ToSandboxManagementGroupPropertiesOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesOutput {
	return o
}

func (o SandboxManagementGroupPropertiesOutput) ToSandboxManagementGroupPropertiesPtrOutput() SandboxManagementGroupPropertiesPtrOutput {
	return o.ToSandboxManagementGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o SandboxManagementGroupPropertiesOutput) ToSandboxManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SandboxManagementGroupProperties) *SandboxManagementGroupProperties {
		return &v
	}).(SandboxManagementGroupPropertiesPtrOutput)
}

// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o SandboxManagementGroupPropertiesOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v SandboxManagementGroupProperties) bool { return v.Create }).(pulumi.BoolOutput)
}

// Array of policy initiatives applied to the management group.
func (o SandboxManagementGroupPropertiesOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v SandboxManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

type SandboxManagementGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SandboxManagementGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SandboxManagementGroupProperties)(nil)).Elem()
}

func (o SandboxManagementGroupPropertiesPtrOutput) ToSandboxManagementGroupPropertiesPtrOutput() SandboxManagementGroupPropertiesPtrOutput {
	return o
}

func (o SandboxManagementGroupPropertiesPtrOutput) ToSandboxManagementGroupPropertiesPtrOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesPtrOutput {
	return o
}

func (o SandboxManagementGroupPropertiesPtrOutput) Elem() SandboxManagementGroupPropertiesOutput {
	return o.ApplyT(func(v *SandboxManagementGroupProperties) SandboxManagementGroupProperties {
		if v != nil {
			return *v
		}
		var ret SandboxManagementGroupProperties
		return ret
	}).(SandboxManagementGroupPropertiesOutput)
}

// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o SandboxManagementGroupPropertiesPtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SandboxManagementGroupProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// Array of policy initiatives applied to the management group.
func (o SandboxManagementGroupPropertiesPtrOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesArrayOutput {
	return o.ApplyT(func(v *SandboxManagementGroupProperties) []PolicyInitiativeAssignmentProperties {
		if v == nil {
			return nil
		}
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesArrayOutput)
}

// The 'Sandbox' management group properties.
type SandboxManagementGroupPropertiesResponse struct {
	// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
	Create bool `pulumi:"create"`
	// Array of policy initiatives applied to the management group.
	PolicyInitiativesAssignmentProperties []PolicyInitiativeAssignmentPropertiesResponse `pulumi:"policyInitiativesAssignmentProperties"`
}

// The 'Sandbox' management group properties.
type SandboxManagementGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SandboxManagementGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SandboxManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o SandboxManagementGroupPropertiesResponseOutput) ToSandboxManagementGroupPropertiesResponseOutput() SandboxManagementGroupPropertiesResponseOutput {
	return o
}

func (o SandboxManagementGroupPropertiesResponseOutput) ToSandboxManagementGroupPropertiesResponseOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesResponseOutput {
	return o
}

// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o SandboxManagementGroupPropertiesResponseOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v SandboxManagementGroupPropertiesResponse) bool { return v.Create }).(pulumi.BoolOutput)
}

// Array of policy initiatives applied to the management group.
func (o SandboxManagementGroupPropertiesResponseOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v SandboxManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

type SandboxManagementGroupPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SandboxManagementGroupPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SandboxManagementGroupPropertiesResponse)(nil)).Elem()
}

func (o SandboxManagementGroupPropertiesResponsePtrOutput) ToSandboxManagementGroupPropertiesResponsePtrOutput() SandboxManagementGroupPropertiesResponsePtrOutput {
	return o
}

func (o SandboxManagementGroupPropertiesResponsePtrOutput) ToSandboxManagementGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) SandboxManagementGroupPropertiesResponsePtrOutput {
	return o
}

func (o SandboxManagementGroupPropertiesResponsePtrOutput) Elem() SandboxManagementGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *SandboxManagementGroupPropertiesResponse) SandboxManagementGroupPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SandboxManagementGroupPropertiesResponse
		return ret
	}).(SandboxManagementGroupPropertiesResponseOutput)
}

// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.
func (o SandboxManagementGroupPropertiesResponsePtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SandboxManagementGroupPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// Array of policy initiatives applied to the management group.
func (o SandboxManagementGroupPropertiesResponsePtrOutput) PolicyInitiativesAssignmentProperties() PolicyInitiativeAssignmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *SandboxManagementGroupPropertiesResponse) []PolicyInitiativeAssignmentPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PolicyInitiativesAssignmentProperties
	}).(PolicyInitiativeAssignmentPropertiesResponseArrayOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Key-value pairs that can be assigned to this resource.
type Tags struct {
	// A tag name.
	Name string `pulumi:"name"`
	// A tag value.
	Value *string `pulumi:"value"`
}

// TagsInput is an input type that accepts TagsArgs and TagsOutput values.
// You can construct a concrete instance of `TagsInput` via:
//
//	TagsArgs{...}
type TagsInput interface {
	pulumi.Input

	ToTagsOutput() TagsOutput
	ToTagsOutputWithContext(context.Context) TagsOutput
}

// Key-value pairs that can be assigned to this resource.
type TagsArgs struct {
	// A tag name.
	Name pulumi.StringInput `pulumi:"name"`
	// A tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Tags)(nil)).Elem()
}

func (i TagsArgs) ToTagsOutput() TagsOutput {
	return i.ToTagsOutputWithContext(context.Background())
}

func (i TagsArgs) ToTagsOutputWithContext(ctx context.Context) TagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsOutput)
}

// TagsArrayInput is an input type that accepts TagsArray and TagsArrayOutput values.
// You can construct a concrete instance of `TagsArrayInput` via:
//
//	TagsArray{ TagsArgs{...} }
type TagsArrayInput interface {
	pulumi.Input

	ToTagsArrayOutput() TagsArrayOutput
	ToTagsArrayOutputWithContext(context.Context) TagsArrayOutput
}

type TagsArray []TagsInput

func (TagsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tags)(nil)).Elem()
}

func (i TagsArray) ToTagsArrayOutput() TagsArrayOutput {
	return i.ToTagsArrayOutputWithContext(context.Background())
}

func (i TagsArray) ToTagsArrayOutputWithContext(ctx context.Context) TagsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsArrayOutput)
}

// Key-value pairs that can be assigned to this resource.
type TagsOutput struct{ *pulumi.OutputState }

func (TagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tags)(nil)).Elem()
}

func (o TagsOutput) ToTagsOutput() TagsOutput {
	return o
}

func (o TagsOutput) ToTagsOutputWithContext(ctx context.Context) TagsOutput {
	return o
}

// A tag name.
func (o TagsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Tags) string { return v.Name }).(pulumi.StringOutput)
}

// A tag value.
func (o TagsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Tags) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagsArrayOutput struct{ *pulumi.OutputState }

func (TagsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tags)(nil)).Elem()
}

func (o TagsArrayOutput) ToTagsArrayOutput() TagsArrayOutput {
	return o
}

func (o TagsArrayOutput) ToTagsArrayOutputWithContext(ctx context.Context) TagsArrayOutput {
	return o
}

func (o TagsArrayOutput) Index(i pulumi.IntInput) TagsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tags {
		return vs[0].([]Tags)[vs[1].(int)]
	}).(TagsOutput)
}

// Key-value pairs that can be assigned to this resource.
type TagsResponse struct {
	// A tag name.
	Name string `pulumi:"name"`
	// A tag value.
	Value *string `pulumi:"value"`
}

// Key-value pairs that can be assigned to this resource.
type TagsResponseOutput struct{ *pulumi.OutputState }

func (TagsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagsResponse)(nil)).Elem()
}

func (o TagsResponseOutput) ToTagsResponseOutput() TagsResponseOutput {
	return o
}

func (o TagsResponseOutput) ToTagsResponseOutputWithContext(ctx context.Context) TagsResponseOutput {
	return o
}

// A tag name.
func (o TagsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A tag value.
func (o TagsResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagsResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagsResponseArrayOutput struct{ *pulumi.OutputState }

func (TagsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagsResponse)(nil)).Elem()
}

func (o TagsResponseArrayOutput) ToTagsResponseArrayOutput() TagsResponseArrayOutput {
	return o
}

func (o TagsResponseArrayOutput) ToTagsResponseArrayOutputWithContext(ctx context.Context) TagsResponseArrayOutput {
	return o
}

func (o TagsResponseArrayOutput) Index(i pulumi.IntInput) TagsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagsResponse {
		return vs[0].([]TagsResponse)[vs[1].(int)]
	}).(TagsResponseOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomNamingConventionOutput{})
	pulumi.RegisterOutputType(CustomNamingConventionArrayOutput{})
	pulumi.RegisterOutputType(CustomNamingConventionResponseOutput{})
	pulumi.RegisterOutputType(CustomNamingConventionResponseArrayOutput{})
	pulumi.RegisterOutputType(DecommissionedManagementGroupPropertiesOutput{})
	pulumi.RegisterOutputType(DecommissionedManagementGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DecommissionedManagementGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DecommissionedManagementGroupPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LandingZoneAccountResourcePropertiesOutput{})
	pulumi.RegisterOutputType(LandingZoneAccountResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(LandingZoneAccountResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(LandingZoneConfigurationResourcePropertiesOutput{})
	pulumi.RegisterOutputType(LandingZoneConfigurationResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(LandingZoneConfigurationResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(LandingZoneManagementGroupPropertiesOutput{})
	pulumi.RegisterOutputType(LandingZoneManagementGroupPropertiesArrayOutput{})
	pulumi.RegisterOutputType(LandingZoneManagementGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LandingZoneManagementGroupPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(LandingZoneRegistrationResourcePropertiesOutput{})
	pulumi.RegisterOutputType(LandingZoneRegistrationResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(LandingZoneRegistrationResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementGroupPropertiesOutput{})
	pulumi.RegisterOutputType(ManagementGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagementGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagementGroupPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PlatformManagementGroupPropertiesOutput{})
	pulumi.RegisterOutputType(PlatformManagementGroupPropertiesArrayOutput{})
	pulumi.RegisterOutputType(PlatformManagementGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PlatformManagementGroupPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicyInitiativeAssignmentPropertiesOutput{})
	pulumi.RegisterOutputType(PolicyInitiativeAssignmentPropertiesArrayOutput{})
	pulumi.RegisterOutputType(PolicyInitiativeAssignmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyInitiativeAssignmentPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SandboxManagementGroupPropertiesOutput{})
	pulumi.RegisterOutputType(SandboxManagementGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SandboxManagementGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SandboxManagementGroupPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TagsOutput{})
	pulumi.RegisterOutputType(TagsArrayOutput{})
	pulumi.RegisterOutputType(TagsResponseOutput{})
	pulumi.RegisterOutputType(TagsResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
