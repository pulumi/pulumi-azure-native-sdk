// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sovereign

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a landing zone configuration.
//
// Uses Azure REST API version 2025-02-27-preview.
func LookupLandingZoneConfigurationOperation(ctx *pulumi.Context, args *LookupLandingZoneConfigurationOperationArgs, opts ...pulumi.InvokeOption) (*LookupLandingZoneConfigurationOperationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupLandingZoneConfigurationOperationResult
	err := ctx.Invoke("azure-native:sovereign:getLandingZoneConfigurationOperation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLandingZoneConfigurationOperationArgs struct {
	// The landing zone account.
	LandingZoneAccountName string `pulumi:"landingZoneAccountName"`
	// The landing zone configuration name
	LandingZoneConfigurationName string `pulumi:"landingZoneConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Concrete proxy resource types can be created by aliasing this type using a specific property type.
type LookupLandingZoneConfigurationOperationResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties LandingZoneConfigurationResourcePropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupLandingZoneConfigurationOperationOutput(ctx *pulumi.Context, args LookupLandingZoneConfigurationOperationOutputArgs, opts ...pulumi.InvokeOption) LookupLandingZoneConfigurationOperationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLandingZoneConfigurationOperationResultOutput, error) {
			args := v.(LookupLandingZoneConfigurationOperationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:sovereign:getLandingZoneConfigurationOperation", args, LookupLandingZoneConfigurationOperationResultOutput{}, options).(LookupLandingZoneConfigurationOperationResultOutput), nil
		}).(LookupLandingZoneConfigurationOperationResultOutput)
}

type LookupLandingZoneConfigurationOperationOutputArgs struct {
	// The landing zone account.
	LandingZoneAccountName pulumi.StringInput `pulumi:"landingZoneAccountName"`
	// The landing zone configuration name
	LandingZoneConfigurationName pulumi.StringInput `pulumi:"landingZoneConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLandingZoneConfigurationOperationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLandingZoneConfigurationOperationArgs)(nil)).Elem()
}

// Concrete proxy resource types can be created by aliasing this type using a specific property type.
type LookupLandingZoneConfigurationOperationResultOutput struct{ *pulumi.OutputState }

func (LookupLandingZoneConfigurationOperationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLandingZoneConfigurationOperationResult)(nil)).Elem()
}

func (o LookupLandingZoneConfigurationOperationResultOutput) ToLookupLandingZoneConfigurationOperationResultOutput() LookupLandingZoneConfigurationOperationResultOutput {
	return o
}

func (o LookupLandingZoneConfigurationOperationResultOutput) ToLookupLandingZoneConfigurationOperationResultOutputWithContext(ctx context.Context) LookupLandingZoneConfigurationOperationResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupLandingZoneConfigurationOperationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLandingZoneConfigurationOperationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLandingZoneConfigurationOperationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLandingZoneConfigurationOperationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupLandingZoneConfigurationOperationResultOutput) Properties() LandingZoneConfigurationResourcePropertiesResponseOutput {
	return o.ApplyT(func(v LookupLandingZoneConfigurationOperationResult) LandingZoneConfigurationResourcePropertiesResponse {
		return v.Properties
	}).(LandingZoneConfigurationResourcePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupLandingZoneConfigurationOperationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLandingZoneConfigurationOperationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLandingZoneConfigurationOperationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLandingZoneConfigurationOperationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLandingZoneConfigurationOperationResultOutput{})
}
