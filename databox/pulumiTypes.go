// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databox

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Credential details of the account.
type AccountCredentialDetailsResponse struct {
	// Connection string of the account endpoint to use the account as a storage endpoint on the device.
	AccountConnectionString string `pulumi:"accountConnectionString"`
	// Name of the account.
	AccountName string `pulumi:"accountName"`
	// Type of the account.
	DataAccountType string `pulumi:"dataAccountType"`
	// Per share level unencrypted access credentials.
	ShareCredentialDetails []ShareCredentialDetailsResponse `pulumi:"shareCredentialDetails"`
}

// Credential details of the account.
type AccountCredentialDetailsResponseOutput struct{ *pulumi.OutputState }

func (AccountCredentialDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCredentialDetailsResponse)(nil)).Elem()
}

func (o AccountCredentialDetailsResponseOutput) ToAccountCredentialDetailsResponseOutput() AccountCredentialDetailsResponseOutput {
	return o
}

func (o AccountCredentialDetailsResponseOutput) ToAccountCredentialDetailsResponseOutputWithContext(ctx context.Context) AccountCredentialDetailsResponseOutput {
	return o
}

// Connection string of the account endpoint to use the account as a storage endpoint on the device.
func (o AccountCredentialDetailsResponseOutput) AccountConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) string { return v.AccountConnectionString }).(pulumi.StringOutput)
}

// Name of the account.
func (o AccountCredentialDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Type of the account.
func (o AccountCredentialDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Per share level unencrypted access credentials.
func (o AccountCredentialDetailsResponseOutput) ShareCredentialDetails() ShareCredentialDetailsResponseArrayOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) []ShareCredentialDetailsResponse {
		return v.ShareCredentialDetails
	}).(ShareCredentialDetailsResponseArrayOutput)
}

type AccountCredentialDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AccountCredentialDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCredentialDetailsResponse)(nil)).Elem()
}

func (o AccountCredentialDetailsResponseArrayOutput) ToAccountCredentialDetailsResponseArrayOutput() AccountCredentialDetailsResponseArrayOutput {
	return o
}

func (o AccountCredentialDetailsResponseArrayOutput) ToAccountCredentialDetailsResponseArrayOutputWithContext(ctx context.Context) AccountCredentialDetailsResponseArrayOutput {
	return o
}

func (o AccountCredentialDetailsResponseArrayOutput) Index(i pulumi.IntInput) AccountCredentialDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountCredentialDetailsResponse {
		return vs[0].([]AccountCredentialDetailsResponse)[vs[1].(int)]
	}).(AccountCredentialDetailsResponseOutput)
}

// This class represents additional info which Resource Providers pass when an error occurs.
type AdditionalErrorInfoResponse struct {
	// Additional information of the type of error.
	Info interface{} `pulumi:"info"`
	// Type of error (e.g. CustomerIntervention, PolicyViolation, SecurityViolation).
	Type *string `pulumi:"type"`
}

// This class represents additional info which Resource Providers pass when an error occurs.
type AdditionalErrorInfoResponseOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return o
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return o
}

// Additional information of the type of error.
func (o AdditionalErrorInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// Type of error (e.g. CustomerIntervention, PolicyViolation, SecurityViolation).
func (o AdditionalErrorInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdditionalErrorInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) Index(i pulumi.IntInput) AdditionalErrorInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalErrorInfoResponse {
		return vs[0].([]AdditionalErrorInfoResponse)[vs[1].(int)]
	}).(AdditionalErrorInfoResponseOutput)
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponse struct {
	// Mac Address.
	MacAddress string `pulumi:"macAddress"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplianceNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceNetworkConfigurationResponse)(nil)).Elem()
}

func (o ApplianceNetworkConfigurationResponseOutput) ToApplianceNetworkConfigurationResponseOutput() ApplianceNetworkConfigurationResponseOutput {
	return o
}

func (o ApplianceNetworkConfigurationResponseOutput) ToApplianceNetworkConfigurationResponseOutputWithContext(ctx context.Context) ApplianceNetworkConfigurationResponseOutput {
	return o
}

// Mac Address.
func (o ApplianceNetworkConfigurationResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceNetworkConfigurationResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Name of the network.
func (o ApplianceNetworkConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceNetworkConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ApplianceNetworkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplianceNetworkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceNetworkConfigurationResponse)(nil)).Elem()
}

func (o ApplianceNetworkConfigurationResponseArrayOutput) ToApplianceNetworkConfigurationResponseArrayOutput() ApplianceNetworkConfigurationResponseArrayOutput {
	return o
}

func (o ApplianceNetworkConfigurationResponseArrayOutput) ToApplianceNetworkConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplianceNetworkConfigurationResponseArrayOutput {
	return o
}

func (o ApplianceNetworkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplianceNetworkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceNetworkConfigurationResponse {
		return vs[0].([]ApplianceNetworkConfigurationResponse)[vs[1].(int)]
	}).(ApplianceNetworkConfigurationResponseOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetails struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// AzureFileFilterDetailsInput is an input type that accepts AzureFileFilterDetailsArgs and AzureFileFilterDetailsOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsInput` via:
//
//	AzureFileFilterDetailsArgs{...}
type AzureFileFilterDetailsInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput
	ToAzureFileFilterDetailsOutputWithContext(context.Context) AzureFileFilterDetailsOutput
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsArgs struct {
	// List of full path of the files to be transferred.
	FilePathList pulumi.StringArrayInput `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList pulumi.StringArrayInput `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList pulumi.StringArrayInput `pulumi:"fileShareList"`
}

func (AzureFileFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetails)(nil)).Elem()
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput {
	return i.ToAzureFileFilterDetailsOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsOutputWithContext(ctx context.Context) AzureFileFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsOutput)
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return i.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsOutput).ToAzureFileFilterDetailsPtrOutputWithContext(ctx)
}

// AzureFileFilterDetailsPtrInput is an input type that accepts AzureFileFilterDetailsArgs, AzureFileFilterDetailsPtr and AzureFileFilterDetailsPtrOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsPtrInput` via:
//
//	        AzureFileFilterDetailsArgs{...}
//
//	or:
//
//	        nil
type AzureFileFilterDetailsPtrInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput
	ToAzureFileFilterDetailsPtrOutputWithContext(context.Context) AzureFileFilterDetailsPtrOutput
}

type azureFileFilterDetailsPtrType AzureFileFilterDetailsArgs

func AzureFileFilterDetailsPtr(v *AzureFileFilterDetailsArgs) AzureFileFilterDetailsPtrInput {
	return (*azureFileFilterDetailsPtrType)(v)
}

func (*azureFileFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetails)(nil)).Elem()
}

func (i *azureFileFilterDetailsPtrType) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return i.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *azureFileFilterDetailsPtrType) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetails)(nil)).Elem()
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput {
	return o
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsOutputWithContext(ctx context.Context) AzureFileFilterDetailsOutput {
	return o
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return o.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileFilterDetails) *AzureFileFilterDetails {
		return &v
	}).(AzureFileFilterDetailsPtrOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) []string { return v.FilePathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) []string { return v.FilePrefixList }).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) []string { return v.FileShareList }).(pulumi.StringArrayOutput)
}

type AzureFileFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetails)(nil)).Elem()
}

func (o AzureFileFilterDetailsPtrOutput) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return o
}

func (o AzureFileFilterDetailsPtrOutput) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return o
}

func (o AzureFileFilterDetailsPtrOutput) Elem() AzureFileFilterDetailsOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) AzureFileFilterDetails {
		if v != nil {
			return *v
		}
		var ret AzureFileFilterDetails
		return ret
	}).(AzureFileFilterDetailsOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsPtrOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.FilePathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsPtrOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.FilePrefixList
	}).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsPtrOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.FileShareList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponse struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponseOutput() AzureFileFilterDetailsResponseOutput {
	return o
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponseOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponseOutput {
	return o
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FilePathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FilePrefixList }).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FileShareList }).(pulumi.StringArrayOutput)
}

type AzureFileFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (o AzureFileFilterDetailsResponsePtrOutput) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return o
}

func (o AzureFileFilterDetailsResponsePtrOutput) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return o
}

func (o AzureFileFilterDetailsResponsePtrOutput) Elem() AzureFileFilterDetailsResponseOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) AzureFileFilterDetailsResponse {
		if v != nil {
			return *v
		}
		var ret AzureFileFilterDetailsResponse
		return ret
	}).(AzureFileFilterDetailsResponseOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FilePathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FilePrefixList
	}).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileShareList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetails struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// BlobFilterDetailsInput is an input type that accepts BlobFilterDetailsArgs and BlobFilterDetailsOutput values.
// You can construct a concrete instance of `BlobFilterDetailsInput` via:
//
//	BlobFilterDetailsArgs{...}
type BlobFilterDetailsInput interface {
	pulumi.Input

	ToBlobFilterDetailsOutput() BlobFilterDetailsOutput
	ToBlobFilterDetailsOutputWithContext(context.Context) BlobFilterDetailsOutput
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsArgs struct {
	// List of full path of the blobs to be transferred.
	BlobPathList pulumi.StringArrayInput `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList pulumi.StringArrayInput `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList pulumi.StringArrayInput `pulumi:"containerList"`
}

func (BlobFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetails)(nil)).Elem()
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsOutput() BlobFilterDetailsOutput {
	return i.ToBlobFilterDetailsOutputWithContext(context.Background())
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsOutputWithContext(ctx context.Context) BlobFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsOutput)
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return i.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsOutput).ToBlobFilterDetailsPtrOutputWithContext(ctx)
}

// BlobFilterDetailsPtrInput is an input type that accepts BlobFilterDetailsArgs, BlobFilterDetailsPtr and BlobFilterDetailsPtrOutput values.
// You can construct a concrete instance of `BlobFilterDetailsPtrInput` via:
//
//	        BlobFilterDetailsArgs{...}
//
//	or:
//
//	        nil
type BlobFilterDetailsPtrInput interface {
	pulumi.Input

	ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput
	ToBlobFilterDetailsPtrOutputWithContext(context.Context) BlobFilterDetailsPtrOutput
}

type blobFilterDetailsPtrType BlobFilterDetailsArgs

func BlobFilterDetailsPtr(v *BlobFilterDetailsArgs) BlobFilterDetailsPtrInput {
	return (*blobFilterDetailsPtrType)(v)
}

func (*blobFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetails)(nil)).Elem()
}

func (i *blobFilterDetailsPtrType) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return i.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *blobFilterDetailsPtrType) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsPtrOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetails)(nil)).Elem()
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsOutput() BlobFilterDetailsOutput {
	return o
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsOutputWithContext(ctx context.Context) BlobFilterDetailsOutput {
	return o
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return o.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlobFilterDetails) *BlobFilterDetails {
		return &v
	}).(BlobFilterDetailsPtrOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetails) []string { return v.BlobPathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetails) []string { return v.BlobPrefixList }).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetails) []string { return v.ContainerList }).(pulumi.StringArrayOutput)
}

type BlobFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetails)(nil)).Elem()
}

func (o BlobFilterDetailsPtrOutput) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return o
}

func (o BlobFilterDetailsPtrOutput) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return o
}

func (o BlobFilterDetailsPtrOutput) Elem() BlobFilterDetailsOutput {
	return o.ApplyT(func(v *BlobFilterDetails) BlobFilterDetails {
		if v != nil {
			return *v
		}
		var ret BlobFilterDetails
		return ret
	}).(BlobFilterDetailsOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsPtrOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsPtrOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.BlobPrefixList
	}).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsPtrOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.ContainerList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponse struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetailsResponse)(nil)).Elem()
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponseOutput() BlobFilterDetailsResponseOutput {
	return o
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponseOutputWithContext(ctx context.Context) BlobFilterDetailsResponseOutput {
	return o
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsResponseOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.BlobPathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsResponseOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.BlobPrefixList }).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsResponseOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.ContainerList }).(pulumi.StringArrayOutput)
}

type BlobFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetailsResponse)(nil)).Elem()
}

func (o BlobFilterDetailsResponsePtrOutput) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return o
}

func (o BlobFilterDetailsResponsePtrOutput) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return o
}

func (o BlobFilterDetailsResponsePtrOutput) Elem() BlobFilterDetailsResponseOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) BlobFilterDetailsResponse {
		if v != nil {
			return *v
		}
		var ret BlobFilterDetailsResponse
		return ret
	}).(BlobFilterDetailsResponseOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPrefixList
	}).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContainerList
	}).(pulumi.StringArrayOutput)
}

// Provides additional information about an http error response.
type CloudErrorResponse struct {
	// Gets or sets additional error info.
	AdditionalInfo []AdditionalErrorInfoResponse `pulumi:"additionalInfo"`
	// Error code.
	Code *string `pulumi:"code"`
	// Gets or sets details for the error.
	Details []CloudErrorResponse `pulumi:"details"`
	// The error message parsed from the body of the http error response.
	Message *string `pulumi:"message"`
	// Gets or sets the target of the error.
	Target *string `pulumi:"target"`
}

// Provides additional information about an http error response.
type CloudErrorResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return o
}

// Gets or sets additional error info.
func (o CloudErrorResponseOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []AdditionalErrorInfoResponse { return v.AdditionalInfo }).(AdditionalErrorInfoResponseArrayOutput)
}

// Error code.
func (o CloudErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Gets or sets details for the error.
func (o CloudErrorResponseOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []CloudErrorResponse { return v.Details }).(CloudErrorResponseArrayOutput)
}

// The error message parsed from the body of the http error response.
func (o CloudErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Gets or sets the target of the error.
func (o CloudErrorResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorResponse {
		return vs[0].([]CloudErrorResponse)[vs[1].(int)]
	}).(CloudErrorResponseOutput)
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreference `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//	ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contact Details.
type ContactDetailsArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference NotificationPreferenceArrayInput `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput).ToContactDetailsPtrOutputWithContext(ctx)
}

// ContactDetailsPtrInput is an input type that accepts ContactDetailsArgs, ContactDetailsPtr and ContactDetailsPtrOutput values.
// You can construct a concrete instance of `ContactDetailsPtrInput` via:
//
//	        ContactDetailsArgs{...}
//
//	or:
//
//	        nil
type ContactDetailsPtrInput interface {
	pulumi.Input

	ToContactDetailsPtrOutput() ContactDetailsPtrOutput
	ToContactDetailsPtrOutputWithContext(context.Context) ContactDetailsPtrOutput
}

type contactDetailsPtrType ContactDetailsArgs

func ContactDetailsPtr(v *ContactDetailsArgs) ContactDetailsPtrInput {
	return (*contactDetailsPtrType)(v)
}

func (*contactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsPtrOutput)
}

// Contact Details.
type ContactDetailsOutput struct{ *pulumi.OutputState }

func (ContactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (o ContactDetailsOutput) ToContactDetailsOutput() ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactDetails) *ContactDetails {
		return &v
	}).(ContactDetailsPtrOutput)
}

// Contact name of the person.
func (o ContactDetailsOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.ContactName }).(pulumi.StringOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetails) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsOutput) NotificationPreference() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v ContactDetails) []NotificationPreference { return v.NotificationPreference }).(NotificationPreferenceArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactDetailsPtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) Elem() ContactDetailsOutput {
	return o.ApplyT(func(v *ContactDetails) ContactDetails {
		if v != nil {
			return *v
		}
		var ret ContactDetails
		return ret
	}).(ContactDetailsOutput)
}

// Contact name of the person.
func (o ContactDetailsPtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ContactName
	}).(pulumi.StringPtrOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsPtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetails) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsPtrOutput) NotificationPreference() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v *ContactDetails) []NotificationPreference {
		if v == nil {
			return nil
		}
		return v.NotificationPreference
	}).(NotificationPreferenceArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsPtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreferenceResponse `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Contact Details.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

// Contact name of the person.
func (o ContactDetailsResponseOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.ContactName }).(pulumi.StringOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsResponseOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponseOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsResponseOutput) NotificationPreference() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []NotificationPreferenceResponse { return v.NotificationPreference }).(NotificationPreferenceResponseArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponseOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) Elem() ContactDetailsResponseOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) ContactDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ContactDetailsResponse
		return ret
	}).(ContactDetailsResponseOutput)
}

// Contact name of the person.
func (o ContactDetailsResponsePtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContactName
	}).(pulumi.StringPtrOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsResponsePtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponsePtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsResponsePtrOutput) NotificationPreference() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) []NotificationPreferenceResponse {
		if v == nil {
			return nil
		}
		return v.NotificationPreference
	}).(NotificationPreferenceResponseArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponsePtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Contact Info.
type ContactInfo struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactInfoInput is an input type that accepts ContactInfoArgs and ContactInfoOutput values.
// You can construct a concrete instance of `ContactInfoInput` via:
//
//	ContactInfoArgs{...}
type ContactInfoInput interface {
	pulumi.Input

	ToContactInfoOutput() ContactInfoOutput
	ToContactInfoOutputWithContext(context.Context) ContactInfoOutput
}

// Contact Info.
type ContactInfoArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactInfo)(nil)).Elem()
}

func (i ContactInfoArgs) ToContactInfoOutput() ContactInfoOutput {
	return i.ToContactInfoOutputWithContext(context.Background())
}

func (i ContactInfoArgs) ToContactInfoOutputWithContext(ctx context.Context) ContactInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactInfoOutput)
}

func (i ContactInfoArgs) ToContactInfoPtrOutput() ContactInfoPtrOutput {
	return i.ToContactInfoPtrOutputWithContext(context.Background())
}

func (i ContactInfoArgs) ToContactInfoPtrOutputWithContext(ctx context.Context) ContactInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactInfoOutput).ToContactInfoPtrOutputWithContext(ctx)
}

// ContactInfoPtrInput is an input type that accepts ContactInfoArgs, ContactInfoPtr and ContactInfoPtrOutput values.
// You can construct a concrete instance of `ContactInfoPtrInput` via:
//
//	        ContactInfoArgs{...}
//
//	or:
//
//	        nil
type ContactInfoPtrInput interface {
	pulumi.Input

	ToContactInfoPtrOutput() ContactInfoPtrOutput
	ToContactInfoPtrOutputWithContext(context.Context) ContactInfoPtrOutput
}

type contactInfoPtrType ContactInfoArgs

func ContactInfoPtr(v *ContactInfoArgs) ContactInfoPtrInput {
	return (*contactInfoPtrType)(v)
}

func (*contactInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactInfo)(nil)).Elem()
}

func (i *contactInfoPtrType) ToContactInfoPtrOutput() ContactInfoPtrOutput {
	return i.ToContactInfoPtrOutputWithContext(context.Background())
}

func (i *contactInfoPtrType) ToContactInfoPtrOutputWithContext(ctx context.Context) ContactInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactInfoPtrOutput)
}

// Contact Info.
type ContactInfoOutput struct{ *pulumi.OutputState }

func (ContactInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactInfo)(nil)).Elem()
}

func (o ContactInfoOutput) ToContactInfoOutput() ContactInfoOutput {
	return o
}

func (o ContactInfoOutput) ToContactInfoOutputWithContext(ctx context.Context) ContactInfoOutput {
	return o
}

func (o ContactInfoOutput) ToContactInfoPtrOutput() ContactInfoPtrOutput {
	return o.ToContactInfoPtrOutputWithContext(context.Background())
}

func (o ContactInfoOutput) ToContactInfoPtrOutputWithContext(ctx context.Context) ContactInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactInfo) *ContactInfo {
		return &v
	}).(ContactInfoPtrOutput)
}

// Contact name of the person.
func (o ContactInfoOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactInfo) string { return v.ContactName }).(pulumi.StringOutput)
}

// Mobile number of the contact person.
func (o ContactInfoOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInfo) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactInfoOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactInfo) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactInfoOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInfo) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactInfoPtrOutput struct{ *pulumi.OutputState }

func (ContactInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactInfo)(nil)).Elem()
}

func (o ContactInfoPtrOutput) ToContactInfoPtrOutput() ContactInfoPtrOutput {
	return o
}

func (o ContactInfoPtrOutput) ToContactInfoPtrOutputWithContext(ctx context.Context) ContactInfoPtrOutput {
	return o
}

func (o ContactInfoPtrOutput) Elem() ContactInfoOutput {
	return o.ApplyT(func(v *ContactInfo) ContactInfo {
		if v != nil {
			return *v
		}
		var ret ContactInfo
		return ret
	}).(ContactInfoOutput)
}

// Contact name of the person.
func (o ContactInfoPtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ContactName
	}).(pulumi.StringPtrOutput)
}

// Mobile number of the contact person.
func (o ContactInfoPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactInfoPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactInfoPtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Contact Info.
type ContactInfoResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Contact Info.
type ContactInfoResponseOutput struct{ *pulumi.OutputState }

func (ContactInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactInfoResponse)(nil)).Elem()
}

func (o ContactInfoResponseOutput) ToContactInfoResponseOutput() ContactInfoResponseOutput {
	return o
}

func (o ContactInfoResponseOutput) ToContactInfoResponseOutputWithContext(ctx context.Context) ContactInfoResponseOutput {
	return o
}

// Contact name of the person.
func (o ContactInfoResponseOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactInfoResponse) string { return v.ContactName }).(pulumi.StringOutput)
}

// Mobile number of the contact person.
func (o ContactInfoResponseOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInfoResponse) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactInfoResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactInfoResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactInfoResponseOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInfoResponse) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ContactInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactInfoResponse)(nil)).Elem()
}

func (o ContactInfoResponsePtrOutput) ToContactInfoResponsePtrOutput() ContactInfoResponsePtrOutput {
	return o
}

func (o ContactInfoResponsePtrOutput) ToContactInfoResponsePtrOutputWithContext(ctx context.Context) ContactInfoResponsePtrOutput {
	return o
}

func (o ContactInfoResponsePtrOutput) Elem() ContactInfoResponseOutput {
	return o.ApplyT(func(v *ContactInfoResponse) ContactInfoResponse {
		if v != nil {
			return *v
		}
		var ret ContactInfoResponse
		return ret
	}).(ContactInfoResponseOutput)
}

// Contact name of the person.
func (o ContactInfoResponsePtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContactName
	}).(pulumi.StringPtrOutput)
}

// Mobile number of the contact person.
func (o ContactInfoResponsePtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactInfoResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactInfoResponsePtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Copy progress.
type CopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// To indicate bytes transferred.
	BytesProcessed float64 `pulumi:"bytesProcessed"`
	// Data Account Type.
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut float64 `pulumi:"directoriesErroredOut"`
	// Error, if any, in the stage
	Error CloudErrorResponse `pulumi:"error"`
	// Number of files which could not be copied
	FilesErroredOut float64 `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed float64 `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed float64 `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded float64 `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed float64 `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress bool `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount float64 `pulumi:"renamedContainerCount"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess float64 `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess float64 `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType string `pulumi:"transferType"`
}

// Copy progress.
type CopyProgressResponseOutput struct{ *pulumi.OutputState }

func (CopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyProgressResponse)(nil)).Elem()
}

func (o CopyProgressResponseOutput) ToCopyProgressResponseOutput() CopyProgressResponseOutput {
	return o
}

func (o CopyProgressResponseOutput) ToCopyProgressResponseOutputWithContext(ctx context.Context) CopyProgressResponseOutput {
	return o
}

// Id of the account where the data needs to be uploaded.
func (o CopyProgressResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// Available actions on the job.
func (o CopyProgressResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CopyProgressResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// To indicate bytes transferred.
func (o CopyProgressResponseOutput) BytesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.BytesProcessed }).(pulumi.Float64Output)
}

// Data Account Type.
func (o CopyProgressResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate directories errored out in the job.
func (o CopyProgressResponseOutput) DirectoriesErroredOut() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.DirectoriesErroredOut }).(pulumi.Float64Output)
}

// Error, if any, in the stage
func (o CopyProgressResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v CopyProgressResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Number of files which could not be copied
func (o CopyProgressResponseOutput) FilesErroredOut() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.FilesErroredOut }).(pulumi.Float64Output)
}

// Number of files processed
func (o CopyProgressResponseOutput) FilesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.FilesProcessed }).(pulumi.Float64Output)
}

// To indicate directories renamed
func (o CopyProgressResponseOutput) InvalidDirectoriesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.InvalidDirectoriesProcessed }).(pulumi.Float64Output)
}

// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) InvalidFileBytesUploaded() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.InvalidFileBytesUploaded }).(pulumi.Float64Output)
}

// Number of files not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) InvalidFilesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.InvalidFilesProcessed }).(pulumi.Float64Output)
}

// To indicate if enumeration of data is in progress.
// Until this is true, the TotalBytesToProcess may not be valid.
func (o CopyProgressResponseOutput) IsEnumerationInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v CopyProgressResponse) bool { return v.IsEnumerationInProgress }).(pulumi.BoolOutput)
}

// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) RenamedContainerCount() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.RenamedContainerCount }).(pulumi.Float64Output)
}

// Name of the storage account. This will be empty for data account types other than storage account.
func (o CopyProgressResponseOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Total amount of data to be processed by the job.
func (o CopyProgressResponseOutput) TotalBytesToProcess() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.TotalBytesToProcess }).(pulumi.Float64Output)
}

// Total files to process
func (o CopyProgressResponseOutput) TotalFilesToProcess() pulumi.Float64Output {
	return o.ApplyT(func(v CopyProgressResponse) float64 { return v.TotalFilesToProcess }).(pulumi.Float64Output)
}

// Transfer type of data
func (o CopyProgressResponseOutput) TransferType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.TransferType }).(pulumi.StringOutput)
}

type CopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (CopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CopyProgressResponse)(nil)).Elem()
}

func (o CopyProgressResponseArrayOutput) ToCopyProgressResponseArrayOutput() CopyProgressResponseArrayOutput {
	return o
}

func (o CopyProgressResponseArrayOutput) ToCopyProgressResponseArrayOutputWithContext(ctx context.Context) CopyProgressResponseArrayOutput {
	return o
}

func (o CopyProgressResponseArrayOutput) Index(i pulumi.IntInput) CopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CopyProgressResponse {
		return vs[0].([]CopyProgressResponse)[vs[1].(int)]
	}).(CopyProgressResponseOutput)
}

// The secrets related to customer disk job.
type CustomerDiskJobSecretsResponse struct {
	// Carrier Account Number of the customer
	CarrierAccountNumber string `pulumi:"carrierAccountNumber"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets []DiskSecretResponse `pulumi:"diskSecrets"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxCustomerDisk'.
	JobSecretsType string `pulumi:"jobSecretsType"`
}

// The secrets related to customer disk job.
type CustomerDiskJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (CustomerDiskJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerDiskJobSecretsResponse)(nil)).Elem()
}

func (o CustomerDiskJobSecretsResponseOutput) ToCustomerDiskJobSecretsResponseOutput() CustomerDiskJobSecretsResponseOutput {
	return o
}

func (o CustomerDiskJobSecretsResponseOutput) ToCustomerDiskJobSecretsResponseOutputWithContext(ctx context.Context) CustomerDiskJobSecretsResponseOutput {
	return o
}

// Carrier Account Number of the customer
func (o CustomerDiskJobSecretsResponseOutput) CarrierAccountNumber() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerDiskJobSecretsResponse) string { return v.CarrierAccountNumber }).(pulumi.StringOutput)
}

// Dc Access Security Code for Customer Managed Shipping
func (o CustomerDiskJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v CustomerDiskJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Contains the list of secrets object for that device.
func (o CustomerDiskJobSecretsResponseOutput) DiskSecrets() DiskSecretResponseArrayOutput {
	return o.ApplyT(func(v CustomerDiskJobSecretsResponse) []DiskSecretResponse { return v.DiskSecrets }).(DiskSecretResponseArrayOutput)
}

// Error while fetching the secrets.
func (o CustomerDiskJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v CustomerDiskJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Used to indicate what type of job secrets object.
// Expected value is 'DataBoxCustomerDisk'.
func (o CustomerDiskJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerDiskJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
	CopyVerboseLogLink string `pulumi:"copyVerboseLogLink"`
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxAccountCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxAccountCopyLogDetailsResponseOutput) ToDataBoxAccountCopyLogDetailsResponseOutput() DataBoxAccountCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxAccountCopyLogDetailsResponseOutput) ToDataBoxAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxAccountCopyLogDetailsResponseOutput {
	return o
}

// Account name.
func (o DataBoxAccountCopyLogDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBox'.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy logs.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyLogLink }).(pulumi.StringOutput)
}

// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyVerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyVerboseLogLink }).(pulumi.StringOutput)
}

// Copy Log Details for customer disk
type DataBoxCustomerDiskCopyLogDetailsResponse struct {
	// Indicates the type of job details.
	// Expected value is 'DataBoxCustomerDisk'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Disk Serial Number.
	SerialNumber string `pulumi:"serialNumber"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// Copy Log Details for customer disk
type DataBoxCustomerDiskCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxCustomerDiskCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxCustomerDiskCopyLogDetailsResponseOutput) ToDataBoxCustomerDiskCopyLogDetailsResponseOutput() DataBoxCustomerDiskCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxCustomerDiskCopyLogDetailsResponseOutput) ToDataBoxCustomerDiskCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxCustomerDiskCopyLogDetailsResponseOutput {
	return o
}

// Indicates the type of job details.
// Expected value is 'DataBoxCustomerDisk'.
func (o DataBoxCustomerDiskCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy error logs.
func (o DataBoxCustomerDiskCopyLogDetailsResponseOutput) ErrorLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyLogDetailsResponse) string { return v.ErrorLogLink }).(pulumi.StringOutput)
}

// Disk Serial Number.
func (o DataBoxCustomerDiskCopyLogDetailsResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyLogDetailsResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Link for copy verbose logs.
func (o DataBoxCustomerDiskCopyLogDetailsResponseOutput) VerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyLogDetailsResponse) string { return v.VerboseLogLink }).(pulumi.StringOutput)
}

// DataBox CustomerDisk Copy Progress
type DataBoxCustomerDiskCopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// To indicate bytes transferred.
	BytesProcessed float64 `pulumi:"bytesProcessed"`
	// The Status of the copy
	CopyStatus string `pulumi:"copyStatus"`
	// Data Account Type.
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut float64 `pulumi:"directoriesErroredOut"`
	// Error, if any, in the stage
	Error CloudErrorResponse `pulumi:"error"`
	// Number of files which could not be copied
	FilesErroredOut float64 `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed float64 `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed float64 `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded float64 `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed float64 `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress bool `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount float64 `pulumi:"renamedContainerCount"`
	// Disk Serial Number.
	SerialNumber string `pulumi:"serialNumber"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess float64 `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess float64 `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType string `pulumi:"transferType"`
}

// DataBox CustomerDisk Copy Progress
type DataBoxCustomerDiskCopyProgressResponseOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskCopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxCustomerDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxCustomerDiskCopyProgressResponseOutput) ToDataBoxCustomerDiskCopyProgressResponseOutput() DataBoxCustomerDiskCopyProgressResponseOutput {
	return o
}

func (o DataBoxCustomerDiskCopyProgressResponseOutput) ToDataBoxCustomerDiskCopyProgressResponseOutputWithContext(ctx context.Context) DataBoxCustomerDiskCopyProgressResponseOutput {
	return o
}

// Id of the account where the data needs to be uploaded.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// Available actions on the job.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// To indicate bytes transferred.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) BytesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.BytesProcessed }).(pulumi.Float64Output)
}

// The Status of the copy
func (o DataBoxCustomerDiskCopyProgressResponseOutput) CopyStatus() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) string { return v.CopyStatus }).(pulumi.StringOutput)
}

// Data Account Type.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate directories errored out in the job.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) DirectoriesErroredOut() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.DirectoriesErroredOut }).(pulumi.Float64Output)
}

// Error, if any, in the stage
func (o DataBoxCustomerDiskCopyProgressResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Number of files which could not be copied
func (o DataBoxCustomerDiskCopyProgressResponseOutput) FilesErroredOut() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.FilesErroredOut }).(pulumi.Float64Output)
}

// Number of files processed
func (o DataBoxCustomerDiskCopyProgressResponseOutput) FilesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.FilesProcessed }).(pulumi.Float64Output)
}

// To indicate directories renamed
func (o DataBoxCustomerDiskCopyProgressResponseOutput) InvalidDirectoriesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.InvalidDirectoriesProcessed }).(pulumi.Float64Output)
}

// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
func (o DataBoxCustomerDiskCopyProgressResponseOutput) InvalidFileBytesUploaded() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.InvalidFileBytesUploaded }).(pulumi.Float64Output)
}

// Number of files not adhering to azure naming conventions which were processed by automatic renaming
func (o DataBoxCustomerDiskCopyProgressResponseOutput) InvalidFilesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.InvalidFilesProcessed }).(pulumi.Float64Output)
}

// To indicate if enumeration of data is in progress.
// Until this is true, the TotalBytesToProcess may not be valid.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) IsEnumerationInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) bool { return v.IsEnumerationInProgress }).(pulumi.BoolOutput)
}

// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
func (o DataBoxCustomerDiskCopyProgressResponseOutput) RenamedContainerCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.RenamedContainerCount }).(pulumi.Float64Output)
}

// Disk Serial Number.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Name of the storage account. This will be empty for data account types other than storage account.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Total amount of data to be processed by the job.
func (o DataBoxCustomerDiskCopyProgressResponseOutput) TotalBytesToProcess() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.TotalBytesToProcess }).(pulumi.Float64Output)
}

// Total files to process
func (o DataBoxCustomerDiskCopyProgressResponseOutput) TotalFilesToProcess() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) float64 { return v.TotalFilesToProcess }).(pulumi.Float64Output)
}

// Transfer type of data
func (o DataBoxCustomerDiskCopyProgressResponseOutput) TransferType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskCopyProgressResponse) string { return v.TransferType }).(pulumi.StringOutput)
}

type DataBoxCustomerDiskCopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskCopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxCustomerDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxCustomerDiskCopyProgressResponseArrayOutput) ToDataBoxCustomerDiskCopyProgressResponseArrayOutput() DataBoxCustomerDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxCustomerDiskCopyProgressResponseArrayOutput) ToDataBoxCustomerDiskCopyProgressResponseArrayOutputWithContext(ctx context.Context) DataBoxCustomerDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxCustomerDiskCopyProgressResponseArrayOutput) Index(i pulumi.IntInput) DataBoxCustomerDiskCopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxCustomerDiskCopyProgressResponse {
		return vs[0].([]DataBoxCustomerDiskCopyProgressResponse)[vs[1].(int)]
	}).(DataBoxCustomerDiskCopyProgressResponseOutput)
}

// Customer disk job details.
type DataBoxCustomerDiskJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Flag to indicate if disk manifest should be backed-up in the Storage Account.
	EnableManifestBackup *bool `pulumi:"enableManifestBackup"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Contains the map of disk serial number to the disk details for import jobs.
	ImportDiskDetailsCollection map[string]ImportDiskDetails `pulumi:"importDiskDetailsCollection"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxCustomerDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Return package shipping details.
	ReturnToCustomerPackageDetails PackageCarrierDetails `pulumi:"returnToCustomerPackageDetails"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetails `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxCustomerDiskJobDetails
func (val *DataBoxCustomerDiskJobDetails) Defaults() *DataBoxCustomerDiskJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableManifestBackup == nil {
		enableManifestBackup_ := false
		tmp.EnableManifestBackup = &enableManifestBackup_
	}
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBoxCustomerDiskJobDetailsInput is an input type that accepts DataBoxCustomerDiskJobDetailsArgs and DataBoxCustomerDiskJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxCustomerDiskJobDetailsInput` via:
//
//	DataBoxCustomerDiskJobDetailsArgs{...}
type DataBoxCustomerDiskJobDetailsInput interface {
	pulumi.Input

	ToDataBoxCustomerDiskJobDetailsOutput() DataBoxCustomerDiskJobDetailsOutput
	ToDataBoxCustomerDiskJobDetailsOutputWithContext(context.Context) DataBoxCustomerDiskJobDetailsOutput
}

// Customer disk job details.
type DataBoxCustomerDiskJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Flag to indicate if disk manifest should be backed-up in the Storage Account.
	EnableManifestBackup pulumi.BoolPtrInput `pulumi:"enableManifestBackup"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTeraBytes"`
	// Contains the map of disk serial number to the disk details for import jobs.
	ImportDiskDetailsCollection ImportDiskDetailsMapInput `pulumi:"importDiskDetailsCollection"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxCustomerDisk'.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyPtrInput `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Return package shipping details.
	ReturnToCustomerPackageDetails PackageCarrierDetailsInput `pulumi:"returnToCustomerPackageDetails"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails ReverseShippingDetailsPtrInput `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxCustomerDiskJobDetailsArgs
func (val *DataBoxCustomerDiskJobDetailsArgs) Defaults() *DataBoxCustomerDiskJobDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableManifestBackup == nil {
		tmp.EnableManifestBackup = pulumi.BoolPtr(false)
	}

	return &tmp
}
func (DataBoxCustomerDiskJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxCustomerDiskJobDetails)(nil)).Elem()
}

func (i DataBoxCustomerDiskJobDetailsArgs) ToDataBoxCustomerDiskJobDetailsOutput() DataBoxCustomerDiskJobDetailsOutput {
	return i.ToDataBoxCustomerDiskJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxCustomerDiskJobDetailsArgs) ToDataBoxCustomerDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxCustomerDiskJobDetailsOutput)
}

func (i DataBoxCustomerDiskJobDetailsArgs) ToDataBoxCustomerDiskJobDetailsPtrOutput() DataBoxCustomerDiskJobDetailsPtrOutput {
	return i.ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(context.Background())
}

func (i DataBoxCustomerDiskJobDetailsArgs) ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxCustomerDiskJobDetailsOutput).ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(ctx)
}

// DataBoxCustomerDiskJobDetailsPtrInput is an input type that accepts DataBoxCustomerDiskJobDetailsArgs, DataBoxCustomerDiskJobDetailsPtr and DataBoxCustomerDiskJobDetailsPtrOutput values.
// You can construct a concrete instance of `DataBoxCustomerDiskJobDetailsPtrInput` via:
//
//	        DataBoxCustomerDiskJobDetailsArgs{...}
//
//	or:
//
//	        nil
type DataBoxCustomerDiskJobDetailsPtrInput interface {
	pulumi.Input

	ToDataBoxCustomerDiskJobDetailsPtrOutput() DataBoxCustomerDiskJobDetailsPtrOutput
	ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(context.Context) DataBoxCustomerDiskJobDetailsPtrOutput
}

type dataBoxCustomerDiskJobDetailsPtrType DataBoxCustomerDiskJobDetailsArgs

func DataBoxCustomerDiskJobDetailsPtr(v *DataBoxCustomerDiskJobDetailsArgs) DataBoxCustomerDiskJobDetailsPtrInput {
	return (*dataBoxCustomerDiskJobDetailsPtrType)(v)
}

func (*dataBoxCustomerDiskJobDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxCustomerDiskJobDetails)(nil)).Elem()
}

func (i *dataBoxCustomerDiskJobDetailsPtrType) ToDataBoxCustomerDiskJobDetailsPtrOutput() DataBoxCustomerDiskJobDetailsPtrOutput {
	return i.ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(context.Background())
}

func (i *dataBoxCustomerDiskJobDetailsPtrType) ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxCustomerDiskJobDetailsPtrOutput)
}

// Customer disk job details.
type DataBoxCustomerDiskJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxCustomerDiskJobDetails)(nil)).Elem()
}

func (o DataBoxCustomerDiskJobDetailsOutput) ToDataBoxCustomerDiskJobDetailsOutput() DataBoxCustomerDiskJobDetailsOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsOutput) ToDataBoxCustomerDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsOutput) ToDataBoxCustomerDiskJobDetailsPtrOutput() DataBoxCustomerDiskJobDetailsPtrOutput {
	return o.ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(context.Background())
}

func (o DataBoxCustomerDiskJobDetailsOutput) ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxCustomerDiskJobDetails) *DataBoxCustomerDiskJobDetails {
		return &v
	}).(DataBoxCustomerDiskJobDetailsPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxCustomerDiskJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxCustomerDiskJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxCustomerDiskJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// Flag to indicate if disk manifest should be backed-up in the Storage Account.
func (o DataBoxCustomerDiskJobDetailsOutput) EnableManifestBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) *bool { return v.EnableManifestBackup }).(pulumi.BoolPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxCustomerDiskJobDetailsOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Contains the map of disk serial number to the disk details for import jobs.
func (o DataBoxCustomerDiskJobDetailsOutput) ImportDiskDetailsCollection() ImportDiskDetailsMapOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) map[string]ImportDiskDetails {
		return v.ImportDiskDetailsCollection
	}).(ImportDiskDetailsMapOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxCustomerDisk'.
func (o DataBoxCustomerDiskJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxCustomerDiskJobDetailsOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) *KeyEncryptionKey { return v.KeyEncryptionKey }).(KeyEncryptionKeyPtrOutput)
}

// Preferences for the order.
func (o DataBoxCustomerDiskJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Return package shipping details.
func (o DataBoxCustomerDiskJobDetailsOutput) ReturnToCustomerPackageDetails() PackageCarrierDetailsOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) PackageCarrierDetails { return v.ReturnToCustomerPackageDetails }).(PackageCarrierDetailsOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxCustomerDiskJobDetailsOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) *ReverseShippingDetails { return v.ReverseShippingDetails }).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxCustomerDiskJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type DataBoxCustomerDiskJobDetailsPtrOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskJobDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxCustomerDiskJobDetails)(nil)).Elem()
}

func (o DataBoxCustomerDiskJobDetailsPtrOutput) ToDataBoxCustomerDiskJobDetailsPtrOutput() DataBoxCustomerDiskJobDetailsPtrOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsPtrOutput) ToDataBoxCustomerDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsPtrOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsPtrOutput) Elem() DataBoxCustomerDiskJobDetailsOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) DataBoxCustomerDiskJobDetails {
		if v != nil {
			return *v
		}
		var ret DataBoxCustomerDiskJobDetails
		return ret
	}).(DataBoxCustomerDiskJobDetailsOutput)
}

// Contact details for notification and shipping.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *ContactDetails {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) []DataExportDetails {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) []DataImportDetails {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsArrayOutput)
}

// Flag to indicate if disk manifest should be backed-up in the Storage Account.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) EnableManifestBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *bool {
		if v == nil {
			return nil
		}
		return v.EnableManifestBackup
	}).(pulumi.BoolPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Contains the map of disk serial number to the disk details for import jobs.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) ImportDiskDetailsCollection() ImportDiskDetailsMapOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) map[string]ImportDiskDetails {
		if v == nil {
			return nil
		}
		return v.ImportDiskDetailsCollection
	}).(ImportDiskDetailsMapOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxCustomerDisk'.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *KeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyPtrOutput)
}

// Preferences for the order.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *Preferences {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesPtrOutput)
}

// Return package shipping details.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) ReturnToCustomerPackageDetails() PackageCarrierDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *PackageCarrierDetails {
		if v == nil {
			return nil
		}
		return &v.ReturnToCustomerPackageDetails
	}).(PackageCarrierDetailsPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *ReverseShippingDetails {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxCustomerDiskJobDetailsPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetails) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// Customer disk job details.
type DataBoxCustomerDiskJobDetailsResponse struct {
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress []DataBoxCustomerDiskCopyProgressResponse `pulumi:"copyProgress"`
	// DataCenter code.
	DataCenterCode string `pulumi:"dataCenterCode"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Datacenter address to ship to, for the given sku and storage location.
	DatacenterAddress interface{} `pulumi:"datacenterAddress"`
	// Delivery package shipping details.
	DeliverToDcPackageDetails PackageCarrierInfoResponse `pulumi:"deliverToDcPackageDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Holds device data erasure details
	DeviceErasureDetails DeviceErasureDetailsResponse `pulumi:"deviceErasureDetails"`
	// Flag to indicate if disk manifest should be backed-up in the Storage Account.
	EnableManifestBackup *bool `pulumi:"enableManifestBackup"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Contains the map of disk serial number to the disk details for export jobs.
	ExportDiskDetailsCollection map[string]ExportDiskDetailsResponse `pulumi:"exportDiskDetailsCollection"`
	// Contains the map of disk serial number to the disk details for import jobs.
	ImportDiskDetailsCollection map[string]ImportDiskDetailsResponse `pulumi:"importDiskDetailsCollection"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxCustomerDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Last mitigation action performed on the job.
	LastMitigationActionOnJob LastMitigationActionOnJobResponse `pulumi:"lastMitigationActionOnJob"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Return package shipping details.
	ReturnToCustomerPackageDetails PackageCarrierDetailsResponse `pulumi:"returnToCustomerPackageDetails"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetailsResponse `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxCustomerDiskJobDetailsResponse
func (val *DataBoxCustomerDiskJobDetailsResponse) Defaults() *DataBoxCustomerDiskJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableManifestBackup == nil {
		enableManifestBackup_ := false
		tmp.EnableManifestBackup = &enableManifestBackup_
	}
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// Customer disk job details.
type DataBoxCustomerDiskJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxCustomerDiskJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxCustomerDiskJobDetailsResponseOutput) ToDataBoxCustomerDiskJobDetailsResponseOutput() DataBoxCustomerDiskJobDetailsResponseOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsResponseOutput) ToDataBoxCustomerDiskJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsResponseOutput {
	return o
}

// Available actions on the job.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per disk.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) CopyProgress() DataBoxCustomerDiskCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) []DataBoxCustomerDiskCopyProgressResponse {
		return v.CopyProgress
	}).(DataBoxCustomerDiskCopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DataCenterCode() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) string { return v.DataCenterCode }).(pulumi.StringOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) interface{} { return v.DatacenterAddress }).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DeliverToDcPackageDetails() PackageCarrierInfoResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) PackageCarrierInfoResponse {
		return v.DeliverToDcPackageDetails
	}).(PackageCarrierInfoResponseOutput)
}

// Delivery package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Holds device data erasure details
func (o DataBoxCustomerDiskJobDetailsResponseOutput) DeviceErasureDetails() DeviceErasureDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) DeviceErasureDetailsResponse {
		return v.DeviceErasureDetails
	}).(DeviceErasureDetailsResponseOutput)
}

// Flag to indicate if disk manifest should be backed-up in the Storage Account.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) EnableManifestBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) *bool { return v.EnableManifestBackup }).(pulumi.BoolPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Contains the map of disk serial number to the disk details for export jobs.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ExportDiskDetailsCollection() ExportDiskDetailsResponseMapOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) map[string]ExportDiskDetailsResponse {
		return v.ExportDiskDetailsCollection
	}).(ExportDiskDetailsResponseMapOutput)
}

// Contains the map of disk serial number to the disk details for import jobs.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ImportDiskDetailsCollection() ImportDiskDetailsResponseMapOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) map[string]ImportDiskDetailsResponse {
		return v.ImportDiskDetailsCollection
	}).(ImportDiskDetailsResponseMapOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxCustomerDisk'.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) *KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) LastMitigationActionOnJobResponse {
		return v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponseOutput)
}

// Preferences for the order.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Return package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ReturnToCustomerPackageDetails() PackageCarrierDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) PackageCarrierDetailsResponse {
		return v.ReturnToCustomerPackageDetails
	}).(PackageCarrierDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) *ReverseShippingDetailsResponse {
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxCustomerDiskJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxCustomerDiskJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type DataBoxCustomerDiskJobDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBoxCustomerDiskJobDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxCustomerDiskJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ToDataBoxCustomerDiskJobDetailsResponsePtrOutput() DataBoxCustomerDiskJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ToDataBoxCustomerDiskJobDetailsResponsePtrOutputWithContext(ctx context.Context) DataBoxCustomerDiskJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) Elem() DataBoxCustomerDiskJobDetailsResponseOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) DataBoxCustomerDiskJobDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DataBoxCustomerDiskJobDetailsResponse
		return ret
	}).(DataBoxCustomerDiskJobDetailsResponseOutput)
}

// Available actions on the job.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ChainOfCustodySasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChainOfCustodySasKey
	}).(pulumi.StringPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsResponsePtrOutput)
}

// List of copy log details.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.CopyLogDetails
	}).(pulumi.ArrayOutput)
}

// Copy progress per disk.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) CopyProgress() DataBoxCustomerDiskCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) []DataBoxCustomerDiskCopyProgressResponse {
		if v == nil {
			return nil
		}
		return v.CopyProgress
	}).(DataBoxCustomerDiskCopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DataCenterCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCenterCode
	}).(pulumi.StringPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) []DataExportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) []DataImportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.DatacenterAddress
	}).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DeliverToDcPackageDetails() PackageCarrierInfoResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *PackageCarrierInfoResponse {
		if v == nil {
			return nil
		}
		return &v.DeliverToDcPackageDetails
	}).(PackageCarrierInfoResponsePtrOutput)
}

// Delivery package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DeliveryPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeliveryPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Holds device data erasure details
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) DeviceErasureDetails() DeviceErasureDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *DeviceErasureDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeviceErasureDetails
	}).(DeviceErasureDetailsResponsePtrOutput)
}

// Flag to indicate if disk manifest should be backed-up in the Storage Account.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) EnableManifestBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableManifestBackup
	}).(pulumi.BoolPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Contains the map of disk serial number to the disk details for export jobs.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ExportDiskDetailsCollection() ExportDiskDetailsResponseMapOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) map[string]ExportDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ExportDiskDetailsCollection
	}).(ExportDiskDetailsResponseMapOutput)
}

// Contains the map of disk serial number to the disk details for import jobs.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ImportDiskDetailsCollection() ImportDiskDetailsResponseMapOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) map[string]ImportDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ImportDiskDetailsCollection
	}).(ImportDiskDetailsResponseMapOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxCustomerDisk'.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// List of stages that run in the job.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) []JobStagesResponse {
		if v == nil {
			return nil
		}
		return v.JobStages
	}).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *KeyEncryptionKeyResponse {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *LastMitigationActionOnJobResponse {
		if v == nil {
			return nil
		}
		return &v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponsePtrOutput)
}

// Preferences for the order.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *PreferencesResponse {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ReturnPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ReturnToCustomerPackageDetails() PackageCarrierDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *PackageCarrierDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnToCustomerPackageDetails
	}).(PackageCarrierDetailsResponsePtrOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ReverseShipmentLabelSasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReverseShipmentLabelSasKey
	}).(pulumi.StringPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *ReverseShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxCustomerDiskJobDetailsResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxCustomerDiskJobDetailsResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponse struct {
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Disk Serial Number.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyLogDetailsResponseOutput) ToDataBoxDiskCopyLogDetailsResponseOutput() DataBoxDiskCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxDiskCopyLogDetailsResponseOutput) ToDataBoxDiskCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyLogDetailsResponseOutput {
	return o
}

// Indicates the type of job details.
// Expected value is 'DataBoxDisk'.
func (o DataBoxDiskCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Disk Serial Number.
func (o DataBoxDiskCopyLogDetailsResponseOutput) DiskSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.DiskSerialNumber }).(pulumi.StringOutput)
}

// Link for copy error logs.
func (o DataBoxDiskCopyLogDetailsResponseOutput) ErrorLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.ErrorLogLink }).(pulumi.StringOutput)
}

// Link for copy verbose logs.
func (o DataBoxDiskCopyLogDetailsResponseOutput) VerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.VerboseLogLink }).(pulumi.StringOutput)
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponse struct {
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// Bytes copied during the copy of disk.
	BytesCopied float64 `pulumi:"bytesCopied"`
	// Error, if any, in the stage
	Error CloudErrorResponse `pulumi:"error"`
	// Indicates the percentage completed for the copy of the disk.
	PercentComplete int `pulumi:"percentComplete"`
	// The serial number of the disk
	SerialNumber string `pulumi:"serialNumber"`
	// The Status of the copy
	Status string `pulumi:"status"`
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyProgressResponseOutput) ToDataBoxDiskCopyProgressResponseOutput() DataBoxDiskCopyProgressResponseOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseOutput) ToDataBoxDiskCopyProgressResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseOutput {
	return o
}

// Available actions on the job.
func (o DataBoxDiskCopyProgressResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Bytes copied during the copy of disk.
func (o DataBoxDiskCopyProgressResponseOutput) BytesCopied() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) float64 { return v.BytesCopied }).(pulumi.Float64Output)
}

// Error, if any, in the stage
func (o DataBoxDiskCopyProgressResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Indicates the percentage completed for the copy of the disk.
func (o DataBoxDiskCopyProgressResponseOutput) PercentComplete() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) int { return v.PercentComplete }).(pulumi.IntOutput)
}

// The serial number of the disk
func (o DataBoxDiskCopyProgressResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The Status of the copy
func (o DataBoxDiskCopyProgressResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) string { return v.Status }).(pulumi.StringOutput)
}

type DataBoxDiskCopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) ToDataBoxDiskCopyProgressResponseArrayOutput() DataBoxDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) ToDataBoxDiskCopyProgressResponseArrayOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) Index(i pulumi.IntInput) DataBoxDiskCopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxDiskCopyProgressResponse {
		return vs[0].([]DataBoxDiskCopyProgressResponse)[vs[1].(int)]
	}).(DataBoxDiskCopyProgressResponseOutput)
}

// Granular Copy Log Details for customer disk
type DataBoxDiskGranularCopyLogDetailsResponse struct {
	// Account id.
	AccountId string `pulumi:"accountId"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxCustomerDisk'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Disk Serial Number.
	SerialNumber string `pulumi:"serialNumber"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// Granular Copy Log Details for customer disk
type DataBoxDiskGranularCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskGranularCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskGranularCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) ToDataBoxDiskGranularCopyLogDetailsResponseOutput() DataBoxDiskGranularCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) ToDataBoxDiskGranularCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskGranularCopyLogDetailsResponseOutput {
	return o
}

// Account id.
func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyLogDetailsResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxCustomerDisk'.
func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy error logs.
func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) ErrorLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyLogDetailsResponse) string { return v.ErrorLogLink }).(pulumi.StringOutput)
}

// Disk Serial Number.
func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyLogDetailsResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Link for copy verbose logs.
func (o DataBoxDiskGranularCopyLogDetailsResponseOutput) VerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyLogDetailsResponse) string { return v.VerboseLogLink }).(pulumi.StringOutput)
}

type DataBoxDiskGranularCopyLogDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxDiskGranularCopyLogDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxDiskGranularCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskGranularCopyLogDetailsResponseArrayOutput) ToDataBoxDiskGranularCopyLogDetailsResponseArrayOutput() DataBoxDiskGranularCopyLogDetailsResponseArrayOutput {
	return o
}

func (o DataBoxDiskGranularCopyLogDetailsResponseArrayOutput) ToDataBoxDiskGranularCopyLogDetailsResponseArrayOutputWithContext(ctx context.Context) DataBoxDiskGranularCopyLogDetailsResponseArrayOutput {
	return o
}

func (o DataBoxDiskGranularCopyLogDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataBoxDiskGranularCopyLogDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxDiskGranularCopyLogDetailsResponse {
		return vs[0].([]DataBoxDiskGranularCopyLogDetailsResponse)[vs[1].(int)]
	}).(DataBoxDiskGranularCopyLogDetailsResponseOutput)
}

// DataBox Disk Granular Copy Progress
type DataBoxDiskGranularCopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// To indicate bytes transferred.
	BytesProcessed float64 `pulumi:"bytesProcessed"`
	// The Status of the copy
	CopyStatus string `pulumi:"copyStatus"`
	// Data Account Type.
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut float64 `pulumi:"directoriesErroredOut"`
	// Error, if any, in the stage
	Error CloudErrorResponse `pulumi:"error"`
	// Number of files which could not be copied
	FilesErroredOut float64 `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed float64 `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed float64 `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded float64 `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed float64 `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress bool `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount float64 `pulumi:"renamedContainerCount"`
	// Disk Serial Number.
	SerialNumber string `pulumi:"serialNumber"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess float64 `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess float64 `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType string `pulumi:"transferType"`
}

// DataBox Disk Granular Copy Progress
type DataBoxDiskGranularCopyProgressResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskGranularCopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskGranularCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskGranularCopyProgressResponseOutput) ToDataBoxDiskGranularCopyProgressResponseOutput() DataBoxDiskGranularCopyProgressResponseOutput {
	return o
}

func (o DataBoxDiskGranularCopyProgressResponseOutput) ToDataBoxDiskGranularCopyProgressResponseOutputWithContext(ctx context.Context) DataBoxDiskGranularCopyProgressResponseOutput {
	return o
}

// Id of the account where the data needs to be uploaded.
func (o DataBoxDiskGranularCopyProgressResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// Available actions on the job.
func (o DataBoxDiskGranularCopyProgressResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// To indicate bytes transferred.
func (o DataBoxDiskGranularCopyProgressResponseOutput) BytesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.BytesProcessed }).(pulumi.Float64Output)
}

// The Status of the copy
func (o DataBoxDiskGranularCopyProgressResponseOutput) CopyStatus() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) string { return v.CopyStatus }).(pulumi.StringOutput)
}

// Data Account Type.
func (o DataBoxDiskGranularCopyProgressResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate directories errored out in the job.
func (o DataBoxDiskGranularCopyProgressResponseOutput) DirectoriesErroredOut() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.DirectoriesErroredOut }).(pulumi.Float64Output)
}

// Error, if any, in the stage
func (o DataBoxDiskGranularCopyProgressResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Number of files which could not be copied
func (o DataBoxDiskGranularCopyProgressResponseOutput) FilesErroredOut() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.FilesErroredOut }).(pulumi.Float64Output)
}

// Number of files processed
func (o DataBoxDiskGranularCopyProgressResponseOutput) FilesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.FilesProcessed }).(pulumi.Float64Output)
}

// To indicate directories renamed
func (o DataBoxDiskGranularCopyProgressResponseOutput) InvalidDirectoriesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.InvalidDirectoriesProcessed }).(pulumi.Float64Output)
}

// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
func (o DataBoxDiskGranularCopyProgressResponseOutput) InvalidFileBytesUploaded() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.InvalidFileBytesUploaded }).(pulumi.Float64Output)
}

// Number of files not adhering to azure naming conventions which were processed by automatic renaming
func (o DataBoxDiskGranularCopyProgressResponseOutput) InvalidFilesProcessed() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.InvalidFilesProcessed }).(pulumi.Float64Output)
}

// To indicate if enumeration of data is in progress.
// Until this is true, the TotalBytesToProcess may not be valid.
func (o DataBoxDiskGranularCopyProgressResponseOutput) IsEnumerationInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) bool { return v.IsEnumerationInProgress }).(pulumi.BoolOutput)
}

// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
func (o DataBoxDiskGranularCopyProgressResponseOutput) RenamedContainerCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.RenamedContainerCount }).(pulumi.Float64Output)
}

// Disk Serial Number.
func (o DataBoxDiskGranularCopyProgressResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Name of the storage account. This will be empty for data account types other than storage account.
func (o DataBoxDiskGranularCopyProgressResponseOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Total amount of data to be processed by the job.
func (o DataBoxDiskGranularCopyProgressResponseOutput) TotalBytesToProcess() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.TotalBytesToProcess }).(pulumi.Float64Output)
}

// Total files to process
func (o DataBoxDiskGranularCopyProgressResponseOutput) TotalFilesToProcess() pulumi.Float64Output {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) float64 { return v.TotalFilesToProcess }).(pulumi.Float64Output)
}

// Transfer type of data
func (o DataBoxDiskGranularCopyProgressResponseOutput) TransferType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskGranularCopyProgressResponse) string { return v.TransferType }).(pulumi.StringOutput)
}

type DataBoxDiskGranularCopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxDiskGranularCopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxDiskGranularCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskGranularCopyProgressResponseArrayOutput) ToDataBoxDiskGranularCopyProgressResponseArrayOutput() DataBoxDiskGranularCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskGranularCopyProgressResponseArrayOutput) ToDataBoxDiskGranularCopyProgressResponseArrayOutputWithContext(ctx context.Context) DataBoxDiskGranularCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskGranularCopyProgressResponseArrayOutput) Index(i pulumi.IntInput) DataBoxDiskGranularCopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxDiskGranularCopyProgressResponse {
		return vs[0].([]DataBoxDiskGranularCopyProgressResponse)[vs[1].(int)]
	}).(DataBoxDiskGranularCopyProgressResponseOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetails `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetails
func (val *DataBoxDiskJobDetails) Defaults() *DataBoxDiskJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBoxDiskJobDetailsInput is an input type that accepts DataBoxDiskJobDetailsArgs and DataBoxDiskJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxDiskJobDetailsInput` via:
//
//	DataBoxDiskJobDetailsArgs{...}
type DataBoxDiskJobDetailsInput interface {
	pulumi.Input

	ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput
	ToDataBoxDiskJobDetailsOutputWithContext(context.Context) DataBoxDiskJobDetailsOutput
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyPtrInput `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey pulumi.StringPtrInput `pulumi:"passkey"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks pulumi.IntMapInput `pulumi:"preferredDisks"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails ReverseShippingDetailsPtrInput `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetailsArgs
func (val *DataBoxDiskJobDetailsArgs) Defaults() *DataBoxDiskJobDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataBoxDiskJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetails)(nil)).Elem()
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput {
	return i.ToDataBoxDiskJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobDetailsOutput)
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsPtrOutput() DataBoxDiskJobDetailsPtrOutput {
	return i.ToDataBoxDiskJobDetailsPtrOutputWithContext(context.Background())
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobDetailsOutput).ToDataBoxDiskJobDetailsPtrOutputWithContext(ctx)
}

// DataBoxDiskJobDetailsPtrInput is an input type that accepts DataBoxDiskJobDetailsArgs, DataBoxDiskJobDetailsPtr and DataBoxDiskJobDetailsPtrOutput values.
// You can construct a concrete instance of `DataBoxDiskJobDetailsPtrInput` via:
//
//	        DataBoxDiskJobDetailsArgs{...}
//
//	or:
//
//	        nil
type DataBoxDiskJobDetailsPtrInput interface {
	pulumi.Input

	ToDataBoxDiskJobDetailsPtrOutput() DataBoxDiskJobDetailsPtrOutput
	ToDataBoxDiskJobDetailsPtrOutputWithContext(context.Context) DataBoxDiskJobDetailsPtrOutput
}

type dataBoxDiskJobDetailsPtrType DataBoxDiskJobDetailsArgs

func DataBoxDiskJobDetailsPtr(v *DataBoxDiskJobDetailsArgs) DataBoxDiskJobDetailsPtrInput {
	return (*dataBoxDiskJobDetailsPtrType)(v)
}

func (*dataBoxDiskJobDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxDiskJobDetails)(nil)).Elem()
}

func (i *dataBoxDiskJobDetailsPtrType) ToDataBoxDiskJobDetailsPtrOutput() DataBoxDiskJobDetailsPtrOutput {
	return i.ToDataBoxDiskJobDetailsPtrOutputWithContext(context.Background())
}

func (i *dataBoxDiskJobDetailsPtrType) ToDataBoxDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobDetailsPtrOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetails)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsOutput) ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput {
	return o
}

func (o DataBoxDiskJobDetailsOutput) ToDataBoxDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsOutput {
	return o
}

func (o DataBoxDiskJobDetailsOutput) ToDataBoxDiskJobDetailsPtrOutput() DataBoxDiskJobDetailsPtrOutput {
	return o.ToDataBoxDiskJobDetailsPtrOutputWithContext(context.Background())
}

func (o DataBoxDiskJobDetailsOutput) ToDataBoxDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxDiskJobDetails) *DataBoxDiskJobDetails {
		return &v
	}).(DataBoxDiskJobDetailsPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxDisk'.
func (o DataBoxDiskJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxDiskJobDetailsOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *KeyEncryptionKey { return v.KeyEncryptionKey }).(KeyEncryptionKeyPtrOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *string { return v.Passkey }).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) map[string]int { return v.PreferredDisks }).(pulumi.IntMapOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxDiskJobDetailsOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *ReverseShippingDetails { return v.ReverseShippingDetails }).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type DataBoxDiskJobDetailsPtrOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxDiskJobDetails)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsPtrOutput) ToDataBoxDiskJobDetailsPtrOutput() DataBoxDiskJobDetailsPtrOutput {
	return o
}

func (o DataBoxDiskJobDetailsPtrOutput) ToDataBoxDiskJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsPtrOutput {
	return o
}

func (o DataBoxDiskJobDetailsPtrOutput) Elem() DataBoxDiskJobDetailsOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) DataBoxDiskJobDetails {
		if v != nil {
			return *v
		}
		var ret DataBoxDiskJobDetails
		return ret
	}).(DataBoxDiskJobDetailsOutput)
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsPtrOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *ContactDetails {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsPtrOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) []DataExportDetails {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsPtrOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) []DataImportDetails {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsArrayOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsPtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxDisk'.
func (o DataBoxDiskJobDetailsPtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxDiskJobDetailsPtrOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *KeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyPtrOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsPtrOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *string {
		if v == nil {
			return nil
		}
		return v.Passkey
	}).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsPtrOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *Preferences {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesPtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsPtrOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) map[string]int {
		if v == nil {
			return nil
		}
		return v.PreferredDisks
	}).(pulumi.IntMapOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxDiskJobDetailsPtrOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *ReverseShippingDetails {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetails) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponse struct {
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress []DataBoxDiskCopyProgressResponse `pulumi:"copyProgress"`
	// DataCenter code.
	DataCenterCode string `pulumi:"dataCenterCode"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Datacenter address to ship to, for the given sku and storage location.
	DatacenterAddress interface{} `pulumi:"datacenterAddress"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Holds device data erasure details
	DeviceErasureDetails DeviceErasureDetailsResponse `pulumi:"deviceErasureDetails"`
	// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
	DisksAndSizeDetails map[string]int `pulumi:"disksAndSizeDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Copy progress per disk.
	GranularCopyLogDetails []DataBoxDiskGranularCopyLogDetailsResponse `pulumi:"granularCopyLogDetails"`
	// Copy progress per disk.
	GranularCopyProgress []DataBoxDiskGranularCopyProgressResponse `pulumi:"granularCopyProgress"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Last mitigation action performed on the job.
	LastMitigationActionOnJob LastMitigationActionOnJobResponse `pulumi:"lastMitigationActionOnJob"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetailsResponse `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetailsResponse
func (val *DataBoxDiskJobDetailsResponse) Defaults() *DataBoxDiskJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsResponseOutput) ToDataBoxDiskJobDetailsResponseOutput() DataBoxDiskJobDetailsResponseOutput {
	return o
}

func (o DataBoxDiskJobDetailsResponseOutput) ToDataBoxDiskJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsResponseOutput {
	return o
}

// Available actions on the job.
func (o DataBoxDiskJobDetailsResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxDiskJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxDiskJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponseOutput) CopyProgress() DataBoxDiskCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataBoxDiskCopyProgressResponse { return v.CopyProgress }).(DataBoxDiskCopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxDiskJobDetailsResponseOutput) DataCenterCode() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.DataCenterCode }).(pulumi.StringOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxDiskJobDetailsResponseOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) interface{} { return v.DatacenterAddress }).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxDiskJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Holds device data erasure details
func (o DataBoxDiskJobDetailsResponseOutput) DeviceErasureDetails() DeviceErasureDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) DeviceErasureDetailsResponse { return v.DeviceErasureDetails }).(DeviceErasureDetailsResponseOutput)
}

// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
func (o DataBoxDiskJobDetailsResponseOutput) DisksAndSizeDetails() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) map[string]int { return v.DisksAndSizeDetails }).(pulumi.IntMapOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsResponseOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponseOutput) GranularCopyLogDetails() DataBoxDiskGranularCopyLogDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataBoxDiskGranularCopyLogDetailsResponse {
		return v.GranularCopyLogDetails
	}).(DataBoxDiskGranularCopyLogDetailsResponseArrayOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponseOutput) GranularCopyProgress() DataBoxDiskGranularCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataBoxDiskGranularCopyProgressResponse {
		return v.GranularCopyProgress
	}).(DataBoxDiskGranularCopyProgressResponseArrayOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxDisk'.
func (o DataBoxDiskJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxDiskJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxDiskJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxDiskJobDetailsResponseOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) LastMitigationActionOnJobResponse {
		return v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponseOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsResponseOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *string { return v.Passkey }).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsResponseOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) map[string]int { return v.PreferredDisks }).(pulumi.IntMapOutput)
}

// Return package shipping details.
func (o DataBoxDiskJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxDiskJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxDiskJobDetailsResponseOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *ReverseShippingDetailsResponse { return v.ReverseShippingDetails }).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type DataBoxDiskJobDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxDiskJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsResponsePtrOutput) ToDataBoxDiskJobDetailsResponsePtrOutput() DataBoxDiskJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxDiskJobDetailsResponsePtrOutput) ToDataBoxDiskJobDetailsResponsePtrOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxDiskJobDetailsResponsePtrOutput) Elem() DataBoxDiskJobDetailsResponseOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) DataBoxDiskJobDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DataBoxDiskJobDetailsResponse
		return ret
	}).(DataBoxDiskJobDetailsResponseOutput)
}

// Available actions on the job.
func (o DataBoxDiskJobDetailsResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxDiskJobDetailsResponsePtrOutput) ChainOfCustodySasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChainOfCustodySasKey
	}).(pulumi.StringPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsResponsePtrOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsResponsePtrOutput)
}

// List of copy log details.
func (o DataBoxDiskJobDetailsResponsePtrOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.CopyLogDetails
	}).(pulumi.ArrayOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponsePtrOutput) CopyProgress() DataBoxDiskCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []DataBoxDiskCopyProgressResponse {
		if v == nil {
			return nil
		}
		return v.CopyProgress
	}).(DataBoxDiskCopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxDiskJobDetailsResponsePtrOutput) DataCenterCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCenterCode
	}).(pulumi.StringPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsResponsePtrOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []DataExportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsResponsePtrOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []DataImportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxDiskJobDetailsResponsePtrOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.DatacenterAddress
	}).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxDiskJobDetailsResponsePtrOutput) DeliveryPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeliveryPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Holds device data erasure details
func (o DataBoxDiskJobDetailsResponsePtrOutput) DeviceErasureDetails() DeviceErasureDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *DeviceErasureDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeviceErasureDetails
	}).(DeviceErasureDetailsResponsePtrOutput)
}

// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
func (o DataBoxDiskJobDetailsResponsePtrOutput) DisksAndSizeDetails() pulumi.IntMapOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) map[string]int {
		if v == nil {
			return nil
		}
		return v.DisksAndSizeDetails
	}).(pulumi.IntMapOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsResponsePtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponsePtrOutput) GranularCopyLogDetails() DataBoxDiskGranularCopyLogDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []DataBoxDiskGranularCopyLogDetailsResponse {
		if v == nil {
			return nil
		}
		return v.GranularCopyLogDetails
	}).(DataBoxDiskGranularCopyLogDetailsResponseArrayOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponsePtrOutput) GranularCopyProgress() DataBoxDiskGranularCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []DataBoxDiskGranularCopyProgressResponse {
		if v == nil {
			return nil
		}
		return v.GranularCopyProgress
	}).(DataBoxDiskGranularCopyProgressResponseArrayOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxDisk'.
func (o DataBoxDiskJobDetailsResponsePtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// List of stages that run in the job.
func (o DataBoxDiskJobDetailsResponsePtrOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) []JobStagesResponse {
		if v == nil {
			return nil
		}
		return v.JobStages
	}).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxDiskJobDetailsResponsePtrOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *KeyEncryptionKeyResponse {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxDiskJobDetailsResponsePtrOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *LastMitigationActionOnJobResponse {
		if v == nil {
			return nil
		}
		return &v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponsePtrOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsResponsePtrOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Passkey
	}).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsResponsePtrOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *PreferencesResponse {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesResponsePtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsResponsePtrOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) map[string]int {
		if v == nil {
			return nil
		}
		return v.PreferredDisks
	}).(pulumi.IntMapOutput)
}

// Return package shipping details.
func (o DataBoxDiskJobDetailsResponsePtrOutput) ReturnPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxDiskJobDetailsResponsePtrOutput) ReverseShipmentLabelSasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReverseShipmentLabelSasKey
	}).(pulumi.StringPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxDiskJobDetailsResponsePtrOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *ReverseShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxDiskJobDetailsResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets []DiskSecretResponse `pulumi:"diskSecrets"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Whether passkey was provided by user.
	IsPasskeyUserDefined bool `pulumi:"isPasskeyUserDefined"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxDisk'.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// PassKey for the disk Job.
	PassKey string `pulumi:"passKey"`
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobSecretsResponse)(nil)).Elem()
}

func (o DataBoxDiskJobSecretsResponseOutput) ToDataBoxDiskJobSecretsResponseOutput() DataBoxDiskJobSecretsResponseOutput {
	return o
}

func (o DataBoxDiskJobSecretsResponseOutput) ToDataBoxDiskJobSecretsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobSecretsResponseOutput {
	return o
}

// Dc Access Security Code for Customer Managed Shipping
func (o DataBoxDiskJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Contains the list of secrets object for that device.
func (o DataBoxDiskJobSecretsResponseOutput) DiskSecrets() DiskSecretResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) []DiskSecretResponse { return v.DiskSecrets }).(DiskSecretResponseArrayOutput)
}

// Error while fetching the secrets.
func (o DataBoxDiskJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Whether passkey was provided by user.
func (o DataBoxDiskJobSecretsResponseOutput) IsPasskeyUserDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) bool { return v.IsPasskeyUserDefined }).(pulumi.BoolOutput)
}

// Used to indicate what type of job secrets object.
// Expected value is 'DataBoxDisk'.
func (o DataBoxDiskJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// PassKey for the disk Job.
func (o DataBoxDiskJobSecretsResponseOutput) PassKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) string { return v.PassKey }).(pulumi.StringOutput)
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink []string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
	CopyVerboseLogLink []string `pulumi:"copyVerboseLogLink"`
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyAccountCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) ToDataBoxHeavyAccountCopyLogDetailsResponseOutput() DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) ToDataBoxHeavyAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return o
}

// Account name.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxHeavy'.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy logs.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyLogLink() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) []string { return v.CopyLogLink }).(pulumi.StringArrayOutput)
}

// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyVerboseLogLink() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) []string { return v.CopyVerboseLogLink }).(pulumi.StringArrayOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetails `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetails
func (val *DataBoxHeavyJobDetails) Defaults() *DataBoxHeavyJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBoxHeavyJobDetailsInput is an input type that accepts DataBoxHeavyJobDetailsArgs and DataBoxHeavyJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxHeavyJobDetailsInput` via:
//
//	DataBoxHeavyJobDetailsArgs{...}
type DataBoxHeavyJobDetailsInput interface {
	pulumi.Input

	ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput
	ToDataBoxHeavyJobDetailsOutputWithContext(context.Context) DataBoxHeavyJobDetailsOutput
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyPtrInput `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails ReverseShippingDetailsPtrInput `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetailsArgs
func (val *DataBoxHeavyJobDetailsArgs) Defaults() *DataBoxHeavyJobDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataBoxHeavyJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetails)(nil)).Elem()
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput {
	return i.ToDataBoxHeavyJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobDetailsOutput)
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsPtrOutput() DataBoxHeavyJobDetailsPtrOutput {
	return i.ToDataBoxHeavyJobDetailsPtrOutputWithContext(context.Background())
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobDetailsOutput).ToDataBoxHeavyJobDetailsPtrOutputWithContext(ctx)
}

// DataBoxHeavyJobDetailsPtrInput is an input type that accepts DataBoxHeavyJobDetailsArgs, DataBoxHeavyJobDetailsPtr and DataBoxHeavyJobDetailsPtrOutput values.
// You can construct a concrete instance of `DataBoxHeavyJobDetailsPtrInput` via:
//
//	        DataBoxHeavyJobDetailsArgs{...}
//
//	or:
//
//	        nil
type DataBoxHeavyJobDetailsPtrInput interface {
	pulumi.Input

	ToDataBoxHeavyJobDetailsPtrOutput() DataBoxHeavyJobDetailsPtrOutput
	ToDataBoxHeavyJobDetailsPtrOutputWithContext(context.Context) DataBoxHeavyJobDetailsPtrOutput
}

type dataBoxHeavyJobDetailsPtrType DataBoxHeavyJobDetailsArgs

func DataBoxHeavyJobDetailsPtr(v *DataBoxHeavyJobDetailsArgs) DataBoxHeavyJobDetailsPtrInput {
	return (*dataBoxHeavyJobDetailsPtrType)(v)
}

func (*dataBoxHeavyJobDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxHeavyJobDetails)(nil)).Elem()
}

func (i *dataBoxHeavyJobDetailsPtrType) ToDataBoxHeavyJobDetailsPtrOutput() DataBoxHeavyJobDetailsPtrOutput {
	return i.ToDataBoxHeavyJobDetailsPtrOutputWithContext(context.Background())
}

func (i *dataBoxHeavyJobDetailsPtrType) ToDataBoxHeavyJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobDetailsPtrOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetails)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsOutput) ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput {
	return o
}

func (o DataBoxHeavyJobDetailsOutput) ToDataBoxHeavyJobDetailsOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsOutput {
	return o
}

func (o DataBoxHeavyJobDetailsOutput) ToDataBoxHeavyJobDetailsPtrOutput() DataBoxHeavyJobDetailsPtrOutput {
	return o.ToDataBoxHeavyJobDetailsPtrOutputWithContext(context.Background())
}

func (o DataBoxHeavyJobDetailsOutput) ToDataBoxHeavyJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxHeavyJobDetails) *DataBoxHeavyJobDetails {
		return &v
	}).(DataBoxHeavyJobDetailsPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxHeavy'.
func (o DataBoxHeavyJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxHeavyJobDetailsOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *KeyEncryptionKey { return v.KeyEncryptionKey }).(KeyEncryptionKeyPtrOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxHeavyJobDetailsOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *ReverseShippingDetails { return v.ReverseShippingDetails }).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type DataBoxHeavyJobDetailsPtrOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxHeavyJobDetails)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsPtrOutput) ToDataBoxHeavyJobDetailsPtrOutput() DataBoxHeavyJobDetailsPtrOutput {
	return o
}

func (o DataBoxHeavyJobDetailsPtrOutput) ToDataBoxHeavyJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsPtrOutput {
	return o
}

func (o DataBoxHeavyJobDetailsPtrOutput) Elem() DataBoxHeavyJobDetailsOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) DataBoxHeavyJobDetails {
		if v != nil {
			return *v
		}
		var ret DataBoxHeavyJobDetails
		return ret
	}).(DataBoxHeavyJobDetailsOutput)
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsPtrOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *ContactDetails {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsPtrOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) []DataExportDetails {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsPtrOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) []DataImportDetails {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsArrayOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsPtrOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *string {
		if v == nil {
			return nil
		}
		return v.DevicePassword
	}).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsPtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxHeavy'.
func (o DataBoxHeavyJobDetailsPtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxHeavyJobDetailsPtrOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *KeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyPtrOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsPtrOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *Preferences {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxHeavyJobDetailsPtrOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *ReverseShippingDetails {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetails) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponse struct {
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// DataCenter code.
	DataCenterCode string `pulumi:"dataCenterCode"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Datacenter address to ship to, for the given sku and storage location.
	DatacenterAddress interface{} `pulumi:"datacenterAddress"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Holds device data erasure details
	DeviceErasureDetails DeviceErasureDetailsResponse `pulumi:"deviceErasureDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Last mitigation action performed on the job.
	LastMitigationActionOnJob LastMitigationActionOnJobResponse `pulumi:"lastMitigationActionOnJob"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetailsResponse `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetailsResponse
func (val *DataBoxHeavyJobDetailsResponse) Defaults() *DataBoxHeavyJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsResponseOutput) ToDataBoxHeavyJobDetailsResponseOutput() DataBoxHeavyJobDetailsResponseOutput {
	return o
}

func (o DataBoxHeavyJobDetailsResponseOutput) ToDataBoxHeavyJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsResponseOutput {
	return o
}

// Available actions on the job.
func (o DataBoxHeavyJobDetailsResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxHeavyJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxHeavyJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per account.
func (o DataBoxHeavyJobDetailsResponseOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []CopyProgressResponse { return v.CopyProgress }).(CopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxHeavyJobDetailsResponseOutput) DataCenterCode() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.DataCenterCode }).(pulumi.StringOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxHeavyJobDetailsResponseOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) interface{} { return v.DatacenterAddress }).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxHeavyJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Holds device data erasure details
func (o DataBoxHeavyJobDetailsResponseOutput) DeviceErasureDetails() DeviceErasureDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) DeviceErasureDetailsResponse { return v.DeviceErasureDetails }).(DeviceErasureDetailsResponseOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsResponseOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsResponseOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxHeavy'.
func (o DataBoxHeavyJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxHeavyJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxHeavyJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxHeavyJobDetailsResponseOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) LastMitigationActionOnJobResponse {
		return v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponseOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxHeavyJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxHeavyJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxHeavyJobDetailsResponseOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *ReverseShippingDetailsResponse {
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type DataBoxHeavyJobDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxHeavyJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsResponsePtrOutput) ToDataBoxHeavyJobDetailsResponsePtrOutput() DataBoxHeavyJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxHeavyJobDetailsResponsePtrOutput) ToDataBoxHeavyJobDetailsResponsePtrOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxHeavyJobDetailsResponsePtrOutput) Elem() DataBoxHeavyJobDetailsResponseOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) DataBoxHeavyJobDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DataBoxHeavyJobDetailsResponse
		return ret
	}).(DataBoxHeavyJobDetailsResponseOutput)
}

// Available actions on the job.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ChainOfCustodySasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChainOfCustodySasKey
	}).(pulumi.StringPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsResponsePtrOutput)
}

// List of copy log details.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.CopyLogDetails
	}).(pulumi.ArrayOutput)
}

// Copy progress per account.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) []CopyProgressResponse {
		if v == nil {
			return nil
		}
		return v.CopyProgress
	}).(CopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DataCenterCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCenterCode
	}).(pulumi.StringPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) []DataExportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) []DataImportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.DatacenterAddress
	}).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DeliveryPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeliveryPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Holds device data erasure details
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DeviceErasureDetails() DeviceErasureDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *DeviceErasureDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeviceErasureDetails
	}).(DeviceErasureDetailsResponsePtrOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsResponsePtrOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DevicePassword
	}).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBoxHeavy'.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// List of stages that run in the job.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) []JobStagesResponse {
		if v == nil {
			return nil
		}
		return v.JobStages
	}).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *KeyEncryptionKeyResponse {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *LastMitigationActionOnJobResponse {
		if v == nil {
			return nil
		}
		return &v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponsePtrOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *PreferencesResponse {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ReturnPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ReverseShipmentLabelSasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReverseShipmentLabelSasKey
	}).(pulumi.StringPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *ReverseShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxHeavyJobDetailsResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponse struct {
	// Contains the list of secret objects for a databox heavy job.
	CabinetPodSecrets []DataBoxHeavySecretResponse `pulumi:"cabinetPodSecrets"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxHeavy'.
	JobSecretsType string `pulumi:"jobSecretsType"`
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobSecretsResponse)(nil)).Elem()
}

func (o DataBoxHeavyJobSecretsResponseOutput) ToDataBoxHeavyJobSecretsResponseOutput() DataBoxHeavyJobSecretsResponseOutput {
	return o
}

func (o DataBoxHeavyJobSecretsResponseOutput) ToDataBoxHeavyJobSecretsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobSecretsResponseOutput {
	return o
}

// Contains the list of secret objects for a databox heavy job.
func (o DataBoxHeavyJobSecretsResponseOutput) CabinetPodSecrets() DataBoxHeavySecretResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) []DataBoxHeavySecretResponse { return v.CabinetPodSecrets }).(DataBoxHeavySecretResponseArrayOutput)
}

// Dc Access Security Code for Customer Managed Shipping
func (o DataBoxHeavyJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Error while fetching the secrets.
func (o DataBoxHeavyJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Used to indicate what type of job secrets object.
// Expected value is 'DataBoxHeavy'.
func (o DataBoxHeavyJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavySecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavySecretResponse)(nil)).Elem()
}

func (o DataBoxHeavySecretResponseOutput) ToDataBoxHeavySecretResponseOutput() DataBoxHeavySecretResponseOutput {
	return o
}

func (o DataBoxHeavySecretResponseOutput) ToDataBoxHeavySecretResponseOutputWithContext(ctx context.Context) DataBoxHeavySecretResponseOutput {
	return o
}

// Per account level access credentials.
func (o DataBoxHeavySecretResponseOutput) AccountCredentialDetails() AccountCredentialDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) []AccountCredentialDetailsResponse {
		return v.AccountCredentialDetails
	}).(AccountCredentialDetailsResponseArrayOutput)
}

// Password for out of the box experience on device.
func (o DataBoxHeavySecretResponseOutput) DevicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) string { return v.DevicePassword }).(pulumi.StringOutput)
}

// Serial number of the assigned device.
func (o DataBoxHeavySecretResponseOutput) DeviceSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) string { return v.DeviceSerialNumber }).(pulumi.StringOutput)
}

// The base 64 encoded public key to authenticate with the device
func (o DataBoxHeavySecretResponseOutput) EncodedValidationCertPubKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) string { return v.EncodedValidationCertPubKey }).(pulumi.StringOutput)
}

// Network configuration of the appliance.
func (o DataBoxHeavySecretResponseOutput) NetworkConfigurations() ApplianceNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) []ApplianceNetworkConfigurationResponse {
		return v.NetworkConfigurations
	}).(ApplianceNetworkConfigurationResponseArrayOutput)
}

type DataBoxHeavySecretResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxHeavySecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxHeavySecretResponse)(nil)).Elem()
}

func (o DataBoxHeavySecretResponseArrayOutput) ToDataBoxHeavySecretResponseArrayOutput() DataBoxHeavySecretResponseArrayOutput {
	return o
}

func (o DataBoxHeavySecretResponseArrayOutput) ToDataBoxHeavySecretResponseArrayOutputWithContext(ctx context.Context) DataBoxHeavySecretResponseArrayOutput {
	return o
}

func (o DataBoxHeavySecretResponseArrayOutput) Index(i pulumi.IntInput) DataBoxHeavySecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxHeavySecretResponse {
		return vs[0].([]DataBoxHeavySecretResponse)[vs[1].(int)]
	}).(DataBoxHeavySecretResponseOutput)
}

// Databox Job Details
type DataBoxJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetails `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetails
func (val *DataBoxJobDetails) Defaults() *DataBoxJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBoxJobDetailsInput is an input type that accepts DataBoxJobDetailsArgs and DataBoxJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxJobDetailsInput` via:
//
//	DataBoxJobDetailsArgs{...}
type DataBoxJobDetailsInput interface {
	pulumi.Input

	ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput
	ToDataBoxJobDetailsOutputWithContext(context.Context) DataBoxJobDetailsOutput
}

// Databox Job Details
type DataBoxJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyPtrInput `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails ReverseShippingDetailsPtrInput `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetailsArgs
func (val *DataBoxJobDetailsArgs) Defaults() *DataBoxJobDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataBoxJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetails)(nil)).Elem()
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput {
	return i.ToDataBoxJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsOutputWithContext(ctx context.Context) DataBoxJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxJobDetailsOutput)
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsPtrOutput() DataBoxJobDetailsPtrOutput {
	return i.ToDataBoxJobDetailsPtrOutputWithContext(context.Background())
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxJobDetailsOutput).ToDataBoxJobDetailsPtrOutputWithContext(ctx)
}

// DataBoxJobDetailsPtrInput is an input type that accepts DataBoxJobDetailsArgs, DataBoxJobDetailsPtr and DataBoxJobDetailsPtrOutput values.
// You can construct a concrete instance of `DataBoxJobDetailsPtrInput` via:
//
//	        DataBoxJobDetailsArgs{...}
//
//	or:
//
//	        nil
type DataBoxJobDetailsPtrInput interface {
	pulumi.Input

	ToDataBoxJobDetailsPtrOutput() DataBoxJobDetailsPtrOutput
	ToDataBoxJobDetailsPtrOutputWithContext(context.Context) DataBoxJobDetailsPtrOutput
}

type dataBoxJobDetailsPtrType DataBoxJobDetailsArgs

func DataBoxJobDetailsPtr(v *DataBoxJobDetailsArgs) DataBoxJobDetailsPtrInput {
	return (*dataBoxJobDetailsPtrType)(v)
}

func (*dataBoxJobDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxJobDetails)(nil)).Elem()
}

func (i *dataBoxJobDetailsPtrType) ToDataBoxJobDetailsPtrOutput() DataBoxJobDetailsPtrOutput {
	return i.ToDataBoxJobDetailsPtrOutputWithContext(context.Background())
}

func (i *dataBoxJobDetailsPtrType) ToDataBoxJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxJobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxJobDetailsPtrOutput)
}

// Databox Job Details
type DataBoxJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetails)(nil)).Elem()
}

func (o DataBoxJobDetailsOutput) ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput {
	return o
}

func (o DataBoxJobDetailsOutput) ToDataBoxJobDetailsOutputWithContext(ctx context.Context) DataBoxJobDetailsOutput {
	return o
}

func (o DataBoxJobDetailsOutput) ToDataBoxJobDetailsPtrOutput() DataBoxJobDetailsPtrOutput {
	return o.ToDataBoxJobDetailsPtrOutputWithContext(context.Background())
}

func (o DataBoxJobDetailsOutput) ToDataBoxJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxJobDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxJobDetails) *DataBoxJobDetails {
		return &v
	}).(DataBoxJobDetailsPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBox'.
func (o DataBoxJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxJobDetailsOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *KeyEncryptionKey { return v.KeyEncryptionKey }).(KeyEncryptionKeyPtrOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxJobDetailsOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *ReverseShippingDetails { return v.ReverseShippingDetails }).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type DataBoxJobDetailsPtrOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxJobDetails)(nil)).Elem()
}

func (o DataBoxJobDetailsPtrOutput) ToDataBoxJobDetailsPtrOutput() DataBoxJobDetailsPtrOutput {
	return o
}

func (o DataBoxJobDetailsPtrOutput) ToDataBoxJobDetailsPtrOutputWithContext(ctx context.Context) DataBoxJobDetailsPtrOutput {
	return o
}

func (o DataBoxJobDetailsPtrOutput) Elem() DataBoxJobDetailsOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) DataBoxJobDetails {
		if v != nil {
			return *v
		}
		var ret DataBoxJobDetails
		return ret
	}).(DataBoxJobDetailsOutput)
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsPtrOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *ContactDetails {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsPtrOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) []DataExportDetails {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsPtrOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) []DataImportDetails {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsArrayOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsPtrOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *string {
		if v == nil {
			return nil
		}
		return v.DevicePassword
	}).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsPtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBox'.
func (o DataBoxJobDetailsPtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxJobDetailsPtrOutput) KeyEncryptionKey() KeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *KeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyPtrOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsPtrOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *Preferences {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxJobDetailsPtrOutput) ReverseShippingDetails() ReverseShippingDetailsPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *ReverseShippingDetails {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetails) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// Databox Job Details
type DataBoxJobDetailsResponse struct {
	// Available actions on the job.
	Actions []string `pulumi:"actions"`
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per storage account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// DataCenter code.
	DataCenterCode string `pulumi:"dataCenterCode"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Datacenter address to ship to, for the given sku and storage location.
	DatacenterAddress interface{} `pulumi:"datacenterAddress"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Holds device data erasure details
	DeviceErasureDetails DeviceErasureDetailsResponse `pulumi:"deviceErasureDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Last mitigation action performed on the job.
	LastMitigationActionOnJob LastMitigationActionOnJobResponse `pulumi:"lastMitigationActionOnJob"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Optional Reverse Shipping details for order.
	ReverseShippingDetails *ReverseShippingDetailsResponse `pulumi:"reverseShippingDetails"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetailsResponse
func (val *DataBoxJobDetailsResponse) Defaults() *DataBoxJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ReverseShippingDetails = tmp.ReverseShippingDetails.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// Databox Job Details
type DataBoxJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxJobDetailsResponseOutput) ToDataBoxJobDetailsResponseOutput() DataBoxJobDetailsResponseOutput {
	return o
}

func (o DataBoxJobDetailsResponseOutput) ToDataBoxJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxJobDetailsResponseOutput {
	return o
}

// Available actions on the job.
func (o DataBoxJobDetailsResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per storage account.
func (o DataBoxJobDetailsResponseOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []CopyProgressResponse { return v.CopyProgress }).(CopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxJobDetailsResponseOutput) DataCenterCode() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.DataCenterCode }).(pulumi.StringOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxJobDetailsResponseOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) interface{} { return v.DatacenterAddress }).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Holds device data erasure details
func (o DataBoxJobDetailsResponseOutput) DeviceErasureDetails() DeviceErasureDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) DeviceErasureDetailsResponse { return v.DeviceErasureDetails }).(DeviceErasureDetailsResponseOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsResponseOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsResponseOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *int { return v.ExpectedDataSizeInTeraBytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBox'.
func (o DataBoxJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxJobDetailsResponseOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) LastMitigationActionOnJobResponse {
		return v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponseOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxJobDetailsResponseOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *ReverseShippingDetailsResponse { return v.ReverseShippingDetails }).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type DataBoxJobDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxJobDetailsResponsePtrOutput) ToDataBoxJobDetailsResponsePtrOutput() DataBoxJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxJobDetailsResponsePtrOutput) ToDataBoxJobDetailsResponsePtrOutputWithContext(ctx context.Context) DataBoxJobDetailsResponsePtrOutput {
	return o
}

func (o DataBoxJobDetailsResponsePtrOutput) Elem() DataBoxJobDetailsResponseOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) DataBoxJobDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DataBoxJobDetailsResponse
		return ret
	}).(DataBoxJobDetailsResponseOutput)
}

// Available actions on the job.
func (o DataBoxJobDetailsResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Shared access key to download the chain of custody logs
func (o DataBoxJobDetailsResponsePtrOutput) ChainOfCustodySasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChainOfCustodySasKey
	}).(pulumi.StringPtrOutput)
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsResponsePtrOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsResponsePtrOutput)
}

// List of copy log details.
func (o DataBoxJobDetailsResponsePtrOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.CopyLogDetails
	}).(pulumi.ArrayOutput)
}

// Copy progress per storage account.
func (o DataBoxJobDetailsResponsePtrOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) []CopyProgressResponse {
		if v == nil {
			return nil
		}
		return v.CopyProgress
	}).(CopyProgressResponseArrayOutput)
}

// DataCenter code.
func (o DataBoxJobDetailsResponsePtrOutput) DataCenterCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCenterCode
	}).(pulumi.StringPtrOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsResponsePtrOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) []DataExportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataExportDetails
	}).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsResponsePtrOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) []DataImportDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DataImportDetails
	}).(DataImportDetailsResponseArrayOutput)
}

// Datacenter address to ship to, for the given sku and storage location.
func (o DataBoxJobDetailsResponsePtrOutput) DatacenterAddress() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.DatacenterAddress
	}).(pulumi.AnyOutput)
}

// Delivery package shipping details.
func (o DataBoxJobDetailsResponsePtrOutput) DeliveryPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeliveryPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Holds device data erasure details
func (o DataBoxJobDetailsResponsePtrOutput) DeviceErasureDetails() DeviceErasureDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *DeviceErasureDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DeviceErasureDetails
	}).(DeviceErasureDetailsResponsePtrOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsResponsePtrOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DevicePassword
	}).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsResponsePtrOutput) ExpectedDataSizeInTeraBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedDataSizeInTeraBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
// Expected value is 'DataBox'.
func (o DataBoxJobDetailsResponsePtrOutput) JobDetailsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobDetailsType
	}).(pulumi.StringPtrOutput)
}

// List of stages that run in the job.
func (o DataBoxJobDetailsResponsePtrOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) []JobStagesResponse {
		if v == nil {
			return nil
		}
		return v.JobStages
	}).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxJobDetailsResponsePtrOutput) KeyEncryptionKey() KeyEncryptionKeyResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *KeyEncryptionKeyResponse {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyEncryptionKeyResponsePtrOutput)
}

// Last mitigation action performed on the job.
func (o DataBoxJobDetailsResponsePtrOutput) LastMitigationActionOnJob() LastMitigationActionOnJobResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *LastMitigationActionOnJobResponse {
		if v == nil {
			return nil
		}
		return &v.LastMitigationActionOnJob
	}).(LastMitigationActionOnJobResponsePtrOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsResponsePtrOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *PreferencesResponse {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxJobDetailsResponsePtrOutput) ReturnPackage() PackageShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *PackageShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnPackage
	}).(PackageShippingDetailsResponsePtrOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxJobDetailsResponsePtrOutput) ReverseShipmentLabelSasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReverseShipmentLabelSasKey
	}).(pulumi.StringPtrOutput)
}

// Optional Reverse Shipping details for order.
func (o DataBoxJobDetailsResponsePtrOutput) ReverseShippingDetails() ReverseShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *ReverseShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ReverseShippingDetails
	}).(ReverseShippingDetailsResponsePtrOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *DataBoxJobDetailsResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// The secrets related to a DataBox.
type DataBoxSecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// The secrets related to a DataBox.
type DataBoxSecretResponseOutput struct{ *pulumi.OutputState }

func (DataBoxSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxSecretResponse)(nil)).Elem()
}

func (o DataBoxSecretResponseOutput) ToDataBoxSecretResponseOutput() DataBoxSecretResponseOutput {
	return o
}

func (o DataBoxSecretResponseOutput) ToDataBoxSecretResponseOutputWithContext(ctx context.Context) DataBoxSecretResponseOutput {
	return o
}

// Per account level access credentials.
func (o DataBoxSecretResponseOutput) AccountCredentialDetails() AccountCredentialDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) []AccountCredentialDetailsResponse { return v.AccountCredentialDetails }).(AccountCredentialDetailsResponseArrayOutput)
}

// Password for out of the box experience on device.
func (o DataBoxSecretResponseOutput) DevicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) string { return v.DevicePassword }).(pulumi.StringOutput)
}

// Serial number of the assigned device.
func (o DataBoxSecretResponseOutput) DeviceSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) string { return v.DeviceSerialNumber }).(pulumi.StringOutput)
}

// The base 64 encoded public key to authenticate with the device
func (o DataBoxSecretResponseOutput) EncodedValidationCertPubKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) string { return v.EncodedValidationCertPubKey }).(pulumi.StringOutput)
}

// Network configuration of the appliance.
func (o DataBoxSecretResponseOutput) NetworkConfigurations() ApplianceNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) []ApplianceNetworkConfigurationResponse { return v.NetworkConfigurations }).(ApplianceNetworkConfigurationResponseArrayOutput)
}

type DataBoxSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxSecretResponse)(nil)).Elem()
}

func (o DataBoxSecretResponseArrayOutput) ToDataBoxSecretResponseArrayOutput() DataBoxSecretResponseArrayOutput {
	return o
}

func (o DataBoxSecretResponseArrayOutput) ToDataBoxSecretResponseArrayOutputWithContext(ctx context.Context) DataBoxSecretResponseArrayOutput {
	return o
}

func (o DataBoxSecretResponseArrayOutput) Index(i pulumi.IntInput) DataBoxSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxSecretResponse {
		return vs[0].([]DataBoxSecretResponse)[vs[1].(int)]
	}).(DataBoxSecretResponseOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfiguration `pulumi:"transferConfiguration"`
}

// Defaults sets the appropriate defaults for DataExportDetails
func (val *DataExportDetails) Defaults() *DataExportDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LogCollectionLevel == nil {
		logCollectionLevel_ := "Error"
		tmp.LogCollectionLevel = &logCollectionLevel_
	}
	tmp.TransferConfiguration = *tmp.TransferConfiguration.Defaults()

	return &tmp
}

// DataExportDetailsInput is an input type that accepts DataExportDetailsArgs and DataExportDetailsOutput values.
// You can construct a concrete instance of `DataExportDetailsInput` via:
//
//	DataExportDetailsArgs{...}
type DataExportDetailsInput interface {
	pulumi.Input

	ToDataExportDetailsOutput() DataExportDetailsOutput
	ToDataExportDetailsOutputWithContext(context.Context) DataExportDetailsOutput
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel pulumi.StringPtrInput `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationInput `pulumi:"transferConfiguration"`
}

// Defaults sets the appropriate defaults for DataExportDetailsArgs
func (val *DataExportDetailsArgs) Defaults() *DataExportDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LogCollectionLevel == nil {
		tmp.LogCollectionLevel = pulumi.StringPtr("Error")
	}

	return &tmp
}
func (DataExportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetails)(nil)).Elem()
}

func (i DataExportDetailsArgs) ToDataExportDetailsOutput() DataExportDetailsOutput {
	return i.ToDataExportDetailsOutputWithContext(context.Background())
}

func (i DataExportDetailsArgs) ToDataExportDetailsOutputWithContext(ctx context.Context) DataExportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsOutput)
}

// DataExportDetailsArrayInput is an input type that accepts DataExportDetailsArray and DataExportDetailsArrayOutput values.
// You can construct a concrete instance of `DataExportDetailsArrayInput` via:
//
//	DataExportDetailsArray{ DataExportDetailsArgs{...} }
type DataExportDetailsArrayInput interface {
	pulumi.Input

	ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput
	ToDataExportDetailsArrayOutputWithContext(context.Context) DataExportDetailsArrayOutput
}

type DataExportDetailsArray []DataExportDetailsInput

func (DataExportDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetails)(nil)).Elem()
}

func (i DataExportDetailsArray) ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput {
	return i.ToDataExportDetailsArrayOutputWithContext(context.Background())
}

func (i DataExportDetailsArray) ToDataExportDetailsArrayOutputWithContext(ctx context.Context) DataExportDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsArrayOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsOutput struct{ *pulumi.OutputState }

func (DataExportDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetails)(nil)).Elem()
}

func (o DataExportDetailsOutput) ToDataExportDetailsOutput() DataExportDetailsOutput {
	return o
}

func (o DataExportDetailsOutput) ToDataExportDetailsOutputWithContext(ctx context.Context) DataExportDetailsOutput {
	return o
}

// Account details of the data to be transferred
func (o DataExportDetailsOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataExportDetails) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataExportDetailsOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExportDetails) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

// Configuration for the data transfer.
func (o DataExportDetailsOutput) TransferConfiguration() TransferConfigurationOutput {
	return o.ApplyT(func(v DataExportDetails) TransferConfiguration { return v.TransferConfiguration }).(TransferConfigurationOutput)
}

type DataExportDetailsArrayOutput struct{ *pulumi.OutputState }

func (DataExportDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetails)(nil)).Elem()
}

func (o DataExportDetailsArrayOutput) ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput {
	return o
}

func (o DataExportDetailsArrayOutput) ToDataExportDetailsArrayOutputWithContext(ctx context.Context) DataExportDetailsArrayOutput {
	return o
}

func (o DataExportDetailsArrayOutput) Index(i pulumi.IntInput) DataExportDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExportDetails {
		return vs[0].([]DataExportDetails)[vs[1].(int)]
	}).(DataExportDetailsOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationResponse `pulumi:"transferConfiguration"`
}

// Defaults sets the appropriate defaults for DataExportDetailsResponse
func (val *DataExportDetailsResponse) Defaults() *DataExportDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LogCollectionLevel == nil {
		logCollectionLevel_ := "Error"
		tmp.LogCollectionLevel = &logCollectionLevel_
	}
	tmp.TransferConfiguration = *tmp.TransferConfiguration.Defaults()

	return &tmp
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataExportDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetailsResponse)(nil)).Elem()
}

func (o DataExportDetailsResponseOutput) ToDataExportDetailsResponseOutput() DataExportDetailsResponseOutput {
	return o
}

func (o DataExportDetailsResponseOutput) ToDataExportDetailsResponseOutputWithContext(ctx context.Context) DataExportDetailsResponseOutput {
	return o
}

// Account details of the data to be transferred
func (o DataExportDetailsResponseOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataExportDetailsResponseOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

// Configuration for the data transfer.
func (o DataExportDetailsResponseOutput) TransferConfiguration() TransferConfigurationResponseOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) TransferConfigurationResponse { return v.TransferConfiguration }).(TransferConfigurationResponseOutput)
}

type DataExportDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataExportDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetailsResponse)(nil)).Elem()
}

func (o DataExportDetailsResponseArrayOutput) ToDataExportDetailsResponseArrayOutput() DataExportDetailsResponseArrayOutput {
	return o
}

func (o DataExportDetailsResponseArrayOutput) ToDataExportDetailsResponseArrayOutputWithContext(ctx context.Context) DataExportDetailsResponseArrayOutput {
	return o
}

func (o DataExportDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataExportDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExportDetailsResponse {
		return vs[0].([]DataExportDetailsResponse)[vs[1].(int)]
	}).(DataExportDetailsResponseOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
}

// Defaults sets the appropriate defaults for DataImportDetails
func (val *DataImportDetails) Defaults() *DataImportDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LogCollectionLevel == nil {
		logCollectionLevel_ := "Error"
		tmp.LogCollectionLevel = &logCollectionLevel_
	}
	return &tmp
}

// DataImportDetailsInput is an input type that accepts DataImportDetailsArgs and DataImportDetailsOutput values.
// You can construct a concrete instance of `DataImportDetailsInput` via:
//
//	DataImportDetailsArgs{...}
type DataImportDetailsInput interface {
	pulumi.Input

	ToDataImportDetailsOutput() DataImportDetailsOutput
	ToDataImportDetailsOutputWithContext(context.Context) DataImportDetailsOutput
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel pulumi.StringPtrInput `pulumi:"logCollectionLevel"`
}

// Defaults sets the appropriate defaults for DataImportDetailsArgs
func (val *DataImportDetailsArgs) Defaults() *DataImportDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LogCollectionLevel == nil {
		tmp.LogCollectionLevel = pulumi.StringPtr("Error")
	}
	return &tmp
}
func (DataImportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetails)(nil)).Elem()
}

func (i DataImportDetailsArgs) ToDataImportDetailsOutput() DataImportDetailsOutput {
	return i.ToDataImportDetailsOutputWithContext(context.Background())
}

func (i DataImportDetailsArgs) ToDataImportDetailsOutputWithContext(ctx context.Context) DataImportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsOutput)
}

// DataImportDetailsArrayInput is an input type that accepts DataImportDetailsArray and DataImportDetailsArrayOutput values.
// You can construct a concrete instance of `DataImportDetailsArrayInput` via:
//
//	DataImportDetailsArray{ DataImportDetailsArgs{...} }
type DataImportDetailsArrayInput interface {
	pulumi.Input

	ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput
	ToDataImportDetailsArrayOutputWithContext(context.Context) DataImportDetailsArrayOutput
}

type DataImportDetailsArray []DataImportDetailsInput

func (DataImportDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetails)(nil)).Elem()
}

func (i DataImportDetailsArray) ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput {
	return i.ToDataImportDetailsArrayOutputWithContext(context.Background())
}

func (i DataImportDetailsArray) ToDataImportDetailsArrayOutputWithContext(ctx context.Context) DataImportDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsArrayOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsOutput struct{ *pulumi.OutputState }

func (DataImportDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetails)(nil)).Elem()
}

func (o DataImportDetailsOutput) ToDataImportDetailsOutput() DataImportDetailsOutput {
	return o
}

func (o DataImportDetailsOutput) ToDataImportDetailsOutputWithContext(ctx context.Context) DataImportDetailsOutput {
	return o
}

// Account details of the data to be transferred
func (o DataImportDetailsOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataImportDetails) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataImportDetailsOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataImportDetails) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

type DataImportDetailsArrayOutput struct{ *pulumi.OutputState }

func (DataImportDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetails)(nil)).Elem()
}

func (o DataImportDetailsArrayOutput) ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput {
	return o
}

func (o DataImportDetailsArrayOutput) ToDataImportDetailsArrayOutputWithContext(ctx context.Context) DataImportDetailsArrayOutput {
	return o
}

func (o DataImportDetailsArrayOutput) Index(i pulumi.IntInput) DataImportDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataImportDetails {
		return vs[0].([]DataImportDetails)[vs[1].(int)]
	}).(DataImportDetailsOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
}

// Defaults sets the appropriate defaults for DataImportDetailsResponse
func (val *DataImportDetailsResponse) Defaults() *DataImportDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LogCollectionLevel == nil {
		logCollectionLevel_ := "Error"
		tmp.LogCollectionLevel = &logCollectionLevel_
	}
	return &tmp
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataImportDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetailsResponse)(nil)).Elem()
}

func (o DataImportDetailsResponseOutput) ToDataImportDetailsResponseOutput() DataImportDetailsResponseOutput {
	return o
}

func (o DataImportDetailsResponseOutput) ToDataImportDetailsResponseOutputWithContext(ctx context.Context) DataImportDetailsResponseOutput {
	return o
}

// Account details of the data to be transferred
func (o DataImportDetailsResponseOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataImportDetailsResponse) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataImportDetailsResponseOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataImportDetailsResponse) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

type DataImportDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataImportDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetailsResponse)(nil)).Elem()
}

func (o DataImportDetailsResponseArrayOutput) ToDataImportDetailsResponseArrayOutput() DataImportDetailsResponseArrayOutput {
	return o
}

func (o DataImportDetailsResponseArrayOutput) ToDataImportDetailsResponseArrayOutputWithContext(ctx context.Context) DataImportDetailsResponseArrayOutput {
	return o
}

func (o DataImportDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataImportDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataImportDetailsResponse {
		return vs[0].([]DataImportDetailsResponse)[vs[1].(int)]
	}).(DataImportDetailsResponseOutput)
}

// The secrets related to a databox job.
type DataboxJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBox'.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// Contains the list of secret objects for a job.
	PodSecrets []DataBoxSecretResponse `pulumi:"podSecrets"`
}

// The secrets related to a databox job.
type DataboxJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (DataboxJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataboxJobSecretsResponse)(nil)).Elem()
}

func (o DataboxJobSecretsResponseOutput) ToDataboxJobSecretsResponseOutput() DataboxJobSecretsResponseOutput {
	return o
}

func (o DataboxJobSecretsResponseOutput) ToDataboxJobSecretsResponseOutputWithContext(ctx context.Context) DataboxJobSecretsResponseOutput {
	return o
}

// Dc Access Security Code for Customer Managed Shipping
func (o DataboxJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Error while fetching the secrets.
func (o DataboxJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Used to indicate what type of job secrets object.
// Expected value is 'DataBox'.
func (o DataboxJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// Contains the list of secret objects for a job.
func (o DataboxJobSecretsResponseOutput) PodSecrets() DataBoxSecretResponseArrayOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) []DataBoxSecretResponse { return v.PodSecrets }).(DataBoxSecretResponseArrayOutput)
}

// Datacenter instruction for given storage location.
type DatacenterAddressInstructionResponseResponse struct {
	// Data center communication instruction
	CommunicationInstruction string `pulumi:"communicationInstruction"`
	// Azure Location where the Data Center serves primarily.
	DataCenterAzureLocation string `pulumi:"dataCenterAzureLocation"`
	// Data center address type
	// Expected value is 'DatacenterAddressInstruction'.
	DatacenterAddressType string `pulumi:"datacenterAddressType"`
	// List of supported carriers for return shipment.
	SupportedCarriersForReturnShipment []string `pulumi:"supportedCarriersForReturnShipment"`
}

// Datacenter instruction for given storage location.
type DatacenterAddressInstructionResponseResponseOutput struct{ *pulumi.OutputState }

func (DatacenterAddressInstructionResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatacenterAddressInstructionResponseResponse)(nil)).Elem()
}

func (o DatacenterAddressInstructionResponseResponseOutput) ToDatacenterAddressInstructionResponseResponseOutput() DatacenterAddressInstructionResponseResponseOutput {
	return o
}

func (o DatacenterAddressInstructionResponseResponseOutput) ToDatacenterAddressInstructionResponseResponseOutputWithContext(ctx context.Context) DatacenterAddressInstructionResponseResponseOutput {
	return o
}

// Data center communication instruction
func (o DatacenterAddressInstructionResponseResponseOutput) CommunicationInstruction() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressInstructionResponseResponse) string { return v.CommunicationInstruction }).(pulumi.StringOutput)
}

// Azure Location where the Data Center serves primarily.
func (o DatacenterAddressInstructionResponseResponseOutput) DataCenterAzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressInstructionResponseResponse) string { return v.DataCenterAzureLocation }).(pulumi.StringOutput)
}

// Data center address type
// Expected value is 'DatacenterAddressInstruction'.
func (o DatacenterAddressInstructionResponseResponseOutput) DatacenterAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressInstructionResponseResponse) string { return v.DatacenterAddressType }).(pulumi.StringOutput)
}

// List of supported carriers for return shipment.
func (o DatacenterAddressInstructionResponseResponseOutput) SupportedCarriersForReturnShipment() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatacenterAddressInstructionResponseResponse) []string {
		return v.SupportedCarriersForReturnShipment
	}).(pulumi.StringArrayOutput)
}

type DatacenterAddressInstructionResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (DatacenterAddressInstructionResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatacenterAddressInstructionResponseResponse)(nil)).Elem()
}

func (o DatacenterAddressInstructionResponseResponsePtrOutput) ToDatacenterAddressInstructionResponseResponsePtrOutput() DatacenterAddressInstructionResponseResponsePtrOutput {
	return o
}

func (o DatacenterAddressInstructionResponseResponsePtrOutput) ToDatacenterAddressInstructionResponseResponsePtrOutputWithContext(ctx context.Context) DatacenterAddressInstructionResponseResponsePtrOutput {
	return o
}

func (o DatacenterAddressInstructionResponseResponsePtrOutput) Elem() DatacenterAddressInstructionResponseResponseOutput {
	return o.ApplyT(func(v *DatacenterAddressInstructionResponseResponse) DatacenterAddressInstructionResponseResponse {
		if v != nil {
			return *v
		}
		var ret DatacenterAddressInstructionResponseResponse
		return ret
	}).(DatacenterAddressInstructionResponseResponseOutput)
}

// Data center communication instruction
func (o DatacenterAddressInstructionResponseResponsePtrOutput) CommunicationInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressInstructionResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CommunicationInstruction
	}).(pulumi.StringPtrOutput)
}

// Azure Location where the Data Center serves primarily.
func (o DatacenterAddressInstructionResponseResponsePtrOutput) DataCenterAzureLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressInstructionResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCenterAzureLocation
	}).(pulumi.StringPtrOutput)
}

// Data center address type
// Expected value is 'DatacenterAddressInstruction'.
func (o DatacenterAddressInstructionResponseResponsePtrOutput) DatacenterAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressInstructionResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterAddressType
	}).(pulumi.StringPtrOutput)
}

// List of supported carriers for return shipment.
func (o DatacenterAddressInstructionResponseResponsePtrOutput) SupportedCarriersForReturnShipment() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatacenterAddressInstructionResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.SupportedCarriersForReturnShipment
	}).(pulumi.StringArrayOutput)
}

// Datacenter address for given storage location.
type DatacenterAddressLocationResponseResponse struct {
	// Special instruction for shipping
	AdditionalShippingInformation string `pulumi:"additionalShippingInformation"`
	// Address type
	AddressType string `pulumi:"addressType"`
	// City name
	City string `pulumi:"city"`
	// Company name
	Company string `pulumi:"company"`
	// Contact person name
	ContactPersonName string `pulumi:"contactPersonName"`
	// name of the country
	Country string `pulumi:"country"`
	// Azure Location where the Data Center serves primarily.
	DataCenterAzureLocation string `pulumi:"dataCenterAzureLocation"`
	// Data center address type
	// Expected value is 'DatacenterAddressLocation'.
	DatacenterAddressType string `pulumi:"datacenterAddressType"`
	// Phone number
	Phone string `pulumi:"phone"`
	// Phone extension
	PhoneExtension string `pulumi:"phoneExtension"`
	// name of the state
	State string `pulumi:"state"`
	// Street address line 1
	Street1 string `pulumi:"street1"`
	// Street address line 2
	Street2 string `pulumi:"street2"`
	// Street address line 3
	Street3 string `pulumi:"street3"`
	// List of supported carriers for return shipment.
	SupportedCarriersForReturnShipment []string `pulumi:"supportedCarriersForReturnShipment"`
	// Zip code
	Zip string `pulumi:"zip"`
}

// Datacenter address for given storage location.
type DatacenterAddressLocationResponseResponseOutput struct{ *pulumi.OutputState }

func (DatacenterAddressLocationResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatacenterAddressLocationResponseResponse)(nil)).Elem()
}

func (o DatacenterAddressLocationResponseResponseOutput) ToDatacenterAddressLocationResponseResponseOutput() DatacenterAddressLocationResponseResponseOutput {
	return o
}

func (o DatacenterAddressLocationResponseResponseOutput) ToDatacenterAddressLocationResponseResponseOutputWithContext(ctx context.Context) DatacenterAddressLocationResponseResponseOutput {
	return o
}

// Special instruction for shipping
func (o DatacenterAddressLocationResponseResponseOutput) AdditionalShippingInformation() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.AdditionalShippingInformation }).(pulumi.StringOutput)
}

// Address type
func (o DatacenterAddressLocationResponseResponseOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.AddressType }).(pulumi.StringOutput)
}

// City name
func (o DatacenterAddressLocationResponseResponseOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.City }).(pulumi.StringOutput)
}

// Company name
func (o DatacenterAddressLocationResponseResponseOutput) Company() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Company }).(pulumi.StringOutput)
}

// Contact person name
func (o DatacenterAddressLocationResponseResponseOutput) ContactPersonName() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.ContactPersonName }).(pulumi.StringOutput)
}

// name of the country
func (o DatacenterAddressLocationResponseResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Country }).(pulumi.StringOutput)
}

// Azure Location where the Data Center serves primarily.
func (o DatacenterAddressLocationResponseResponseOutput) DataCenterAzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.DataCenterAzureLocation }).(pulumi.StringOutput)
}

// Data center address type
// Expected value is 'DatacenterAddressLocation'.
func (o DatacenterAddressLocationResponseResponseOutput) DatacenterAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.DatacenterAddressType }).(pulumi.StringOutput)
}

// Phone number
func (o DatacenterAddressLocationResponseResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension
func (o DatacenterAddressLocationResponseResponseOutput) PhoneExtension() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.PhoneExtension }).(pulumi.StringOutput)
}

// name of the state
func (o DatacenterAddressLocationResponseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.State }).(pulumi.StringOutput)
}

// Street address line 1
func (o DatacenterAddressLocationResponseResponseOutput) Street1() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Street1 }).(pulumi.StringOutput)
}

// Street address line 2
func (o DatacenterAddressLocationResponseResponseOutput) Street2() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Street2 }).(pulumi.StringOutput)
}

// Street address line 3
func (o DatacenterAddressLocationResponseResponseOutput) Street3() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Street3 }).(pulumi.StringOutput)
}

// List of supported carriers for return shipment.
func (o DatacenterAddressLocationResponseResponseOutput) SupportedCarriersForReturnShipment() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) []string {
		return v.SupportedCarriersForReturnShipment
	}).(pulumi.StringArrayOutput)
}

// Zip code
func (o DatacenterAddressLocationResponseResponseOutput) Zip() pulumi.StringOutput {
	return o.ApplyT(func(v DatacenterAddressLocationResponseResponse) string { return v.Zip }).(pulumi.StringOutput)
}

type DatacenterAddressLocationResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (DatacenterAddressLocationResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatacenterAddressLocationResponseResponse)(nil)).Elem()
}

func (o DatacenterAddressLocationResponseResponsePtrOutput) ToDatacenterAddressLocationResponseResponsePtrOutput() DatacenterAddressLocationResponseResponsePtrOutput {
	return o
}

func (o DatacenterAddressLocationResponseResponsePtrOutput) ToDatacenterAddressLocationResponseResponsePtrOutputWithContext(ctx context.Context) DatacenterAddressLocationResponseResponsePtrOutput {
	return o
}

func (o DatacenterAddressLocationResponseResponsePtrOutput) Elem() DatacenterAddressLocationResponseResponseOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) DatacenterAddressLocationResponseResponse {
		if v != nil {
			return *v
		}
		var ret DatacenterAddressLocationResponseResponse
		return ret
	}).(DatacenterAddressLocationResponseResponseOutput)
}

// Special instruction for shipping
func (o DatacenterAddressLocationResponseResponsePtrOutput) AdditionalShippingInformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdditionalShippingInformation
	}).(pulumi.StringPtrOutput)
}

// Address type
func (o DatacenterAddressLocationResponseResponsePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AddressType
	}).(pulumi.StringPtrOutput)
}

// City name
func (o DatacenterAddressLocationResponseResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// Company name
func (o DatacenterAddressLocationResponseResponsePtrOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Company
	}).(pulumi.StringPtrOutput)
}

// Contact person name
func (o DatacenterAddressLocationResponseResponsePtrOutput) ContactPersonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContactPersonName
	}).(pulumi.StringPtrOutput)
}

// name of the country
func (o DatacenterAddressLocationResponseResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Azure Location where the Data Center serves primarily.
func (o DatacenterAddressLocationResponseResponsePtrOutput) DataCenterAzureLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCenterAzureLocation
	}).(pulumi.StringPtrOutput)
}

// Data center address type
// Expected value is 'DatacenterAddressLocation'.
func (o DatacenterAddressLocationResponseResponsePtrOutput) DatacenterAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterAddressType
	}).(pulumi.StringPtrOutput)
}

// Phone number
func (o DatacenterAddressLocationResponseResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension
func (o DatacenterAddressLocationResponseResponsePtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// name of the state
func (o DatacenterAddressLocationResponseResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Street address line 1
func (o DatacenterAddressLocationResponseResponsePtrOutput) Street1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Street1
	}).(pulumi.StringPtrOutput)
}

// Street address line 2
func (o DatacenterAddressLocationResponseResponsePtrOutput) Street2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Street2
	}).(pulumi.StringPtrOutput)
}

// Street address line 3
func (o DatacenterAddressLocationResponseResponsePtrOutput) Street3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Street3
	}).(pulumi.StringPtrOutput)
}

// List of supported carriers for return shipment.
func (o DatacenterAddressLocationResponseResponsePtrOutput) SupportedCarriersForReturnShipment() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.SupportedCarriersForReturnShipment
	}).(pulumi.StringArrayOutput)
}

// Zip code
func (o DatacenterAddressLocationResponseResponsePtrOutput) Zip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatacenterAddressLocationResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Zip
	}).(pulumi.StringPtrOutput)
}

// Dc access security code
type DcAccessSecurityCodeResponse struct {
	// Forward Dc access security code.
	ForwardDCAccessCode *string `pulumi:"forwardDCAccessCode"`
	// Reverse Dc access security code.
	ReverseDCAccessCode *string `pulumi:"reverseDCAccessCode"`
}

// Dc access security code
type DcAccessSecurityCodeResponseOutput struct{ *pulumi.OutputState }

func (DcAccessSecurityCodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcAccessSecurityCodeResponse)(nil)).Elem()
}

func (o DcAccessSecurityCodeResponseOutput) ToDcAccessSecurityCodeResponseOutput() DcAccessSecurityCodeResponseOutput {
	return o
}

func (o DcAccessSecurityCodeResponseOutput) ToDcAccessSecurityCodeResponseOutputWithContext(ctx context.Context) DcAccessSecurityCodeResponseOutput {
	return o
}

// Forward Dc access security code.
func (o DcAccessSecurityCodeResponseOutput) ForwardDCAccessCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcAccessSecurityCodeResponse) *string { return v.ForwardDCAccessCode }).(pulumi.StringPtrOutput)
}

// Reverse Dc access security code.
func (o DcAccessSecurityCodeResponseOutput) ReverseDCAccessCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcAccessSecurityCodeResponse) *string { return v.ReverseDCAccessCode }).(pulumi.StringPtrOutput)
}

// Device erasure details with erasure completion status and erasureordestructionlog sas key
type DeviceErasureDetailsResponse struct {
	// Holds the device erasure completion status
	DeviceErasureStatus string `pulumi:"deviceErasureStatus"`
	// Shared access key to download cleanup or destruction certificate for device
	ErasureOrDestructionCertificateSasKey string `pulumi:"erasureOrDestructionCertificateSasKey"`
}

// Device erasure details with erasure completion status and erasureordestructionlog sas key
type DeviceErasureDetailsResponseOutput struct{ *pulumi.OutputState }

func (DeviceErasureDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceErasureDetailsResponse)(nil)).Elem()
}

func (o DeviceErasureDetailsResponseOutput) ToDeviceErasureDetailsResponseOutput() DeviceErasureDetailsResponseOutput {
	return o
}

func (o DeviceErasureDetailsResponseOutput) ToDeviceErasureDetailsResponseOutputWithContext(ctx context.Context) DeviceErasureDetailsResponseOutput {
	return o
}

// Holds the device erasure completion status
func (o DeviceErasureDetailsResponseOutput) DeviceErasureStatus() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceErasureDetailsResponse) string { return v.DeviceErasureStatus }).(pulumi.StringOutput)
}

// Shared access key to download cleanup or destruction certificate for device
func (o DeviceErasureDetailsResponseOutput) ErasureOrDestructionCertificateSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceErasureDetailsResponse) string { return v.ErasureOrDestructionCertificateSasKey }).(pulumi.StringOutput)
}

type DeviceErasureDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DeviceErasureDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceErasureDetailsResponse)(nil)).Elem()
}

func (o DeviceErasureDetailsResponsePtrOutput) ToDeviceErasureDetailsResponsePtrOutput() DeviceErasureDetailsResponsePtrOutput {
	return o
}

func (o DeviceErasureDetailsResponsePtrOutput) ToDeviceErasureDetailsResponsePtrOutputWithContext(ctx context.Context) DeviceErasureDetailsResponsePtrOutput {
	return o
}

func (o DeviceErasureDetailsResponsePtrOutput) Elem() DeviceErasureDetailsResponseOutput {
	return o.ApplyT(func(v *DeviceErasureDetailsResponse) DeviceErasureDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DeviceErasureDetailsResponse
		return ret
	}).(DeviceErasureDetailsResponseOutput)
}

// Holds the device erasure completion status
func (o DeviceErasureDetailsResponsePtrOutput) DeviceErasureStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceErasureDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceErasureStatus
	}).(pulumi.StringPtrOutput)
}

// Shared access key to download cleanup or destruction certificate for device
func (o DeviceErasureDetailsResponsePtrOutput) ErasureOrDestructionCertificateSasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceErasureDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ErasureOrDestructionCertificateSasKey
	}).(pulumi.StringPtrOutput)
}

// Contains all the secrets of a Disk.
type DiskSecretResponse struct {
	// Bit Locker key of the disk which can be used to unlock the disk to copy data.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// Serial number of the assigned disk.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
}

// Contains all the secrets of a Disk.
type DiskSecretResponseOutput struct{ *pulumi.OutputState }

func (DiskSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskSecretResponse)(nil)).Elem()
}

func (o DiskSecretResponseOutput) ToDiskSecretResponseOutput() DiskSecretResponseOutput {
	return o
}

func (o DiskSecretResponseOutput) ToDiskSecretResponseOutputWithContext(ctx context.Context) DiskSecretResponseOutput {
	return o
}

// Bit Locker key of the disk which can be used to unlock the disk to copy data.
func (o DiskSecretResponseOutput) BitLockerKey() pulumi.StringOutput {
	return o.ApplyT(func(v DiskSecretResponse) string { return v.BitLockerKey }).(pulumi.StringOutput)
}

// Serial number of the assigned disk.
func (o DiskSecretResponseOutput) DiskSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DiskSecretResponse) string { return v.DiskSerialNumber }).(pulumi.StringOutput)
}

type DiskSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskSecretResponse)(nil)).Elem()
}

func (o DiskSecretResponseArrayOutput) ToDiskSecretResponseArrayOutput() DiskSecretResponseArrayOutput {
	return o
}

func (o DiskSecretResponseArrayOutput) ToDiskSecretResponseArrayOutputWithContext(ctx context.Context) DiskSecretResponseArrayOutput {
	return o
}

func (o DiskSecretResponseArrayOutput) Index(i pulumi.IntInput) DiskSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskSecretResponse {
		return vs[0].([]DiskSecretResponse)[vs[1].(int)]
	}).(DiskSecretResponseOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferences struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption *string `pulumi:"doubleEncryption"`
	// Defines Hardware level encryption (Only for disk)
	HardwareEncryption *string `pulumi:"hardwareEncryption"`
}

// Defaults sets the appropriate defaults for EncryptionPreferences
func (val *EncryptionPreferences) Defaults() *EncryptionPreferences {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DoubleEncryption == nil {
		doubleEncryption_ := "Disabled"
		tmp.DoubleEncryption = &doubleEncryption_
	}
	return &tmp
}

// EncryptionPreferencesInput is an input type that accepts EncryptionPreferencesArgs and EncryptionPreferencesOutput values.
// You can construct a concrete instance of `EncryptionPreferencesInput` via:
//
//	EncryptionPreferencesArgs{...}
type EncryptionPreferencesInput interface {
	pulumi.Input

	ToEncryptionPreferencesOutput() EncryptionPreferencesOutput
	ToEncryptionPreferencesOutputWithContext(context.Context) EncryptionPreferencesOutput
}

// Preferences related to the Encryption.
type EncryptionPreferencesArgs struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption pulumi.StringPtrInput `pulumi:"doubleEncryption"`
	// Defines Hardware level encryption (Only for disk)
	HardwareEncryption pulumi.StringPtrInput `pulumi:"hardwareEncryption"`
}

// Defaults sets the appropriate defaults for EncryptionPreferencesArgs
func (val *EncryptionPreferencesArgs) Defaults() *EncryptionPreferencesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DoubleEncryption == nil {
		tmp.DoubleEncryption = pulumi.StringPtr("Disabled")
	}
	return &tmp
}
func (EncryptionPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferences)(nil)).Elem()
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesOutput() EncryptionPreferencesOutput {
	return i.ToEncryptionPreferencesOutputWithContext(context.Background())
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesOutputWithContext(ctx context.Context) EncryptionPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesOutput)
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return i.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesOutput).ToEncryptionPreferencesPtrOutputWithContext(ctx)
}

// EncryptionPreferencesPtrInput is an input type that accepts EncryptionPreferencesArgs, EncryptionPreferencesPtr and EncryptionPreferencesPtrOutput values.
// You can construct a concrete instance of `EncryptionPreferencesPtrInput` via:
//
//	        EncryptionPreferencesArgs{...}
//
//	or:
//
//	        nil
type EncryptionPreferencesPtrInput interface {
	pulumi.Input

	ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput
	ToEncryptionPreferencesPtrOutputWithContext(context.Context) EncryptionPreferencesPtrOutput
}

type encryptionPreferencesPtrType EncryptionPreferencesArgs

func EncryptionPreferencesPtr(v *EncryptionPreferencesArgs) EncryptionPreferencesPtrInput {
	return (*encryptionPreferencesPtrType)(v)
}

func (*encryptionPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferences)(nil)).Elem()
}

func (i *encryptionPreferencesPtrType) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return i.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (i *encryptionPreferencesPtrType) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesPtrOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferencesOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferences)(nil)).Elem()
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesOutput() EncryptionPreferencesOutput {
	return o
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesOutputWithContext(ctx context.Context) EncryptionPreferencesOutput {
	return o
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return o.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionPreferences) *EncryptionPreferences {
		return &v
	}).(EncryptionPreferencesPtrOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferences) *string { return v.DoubleEncryption }).(pulumi.StringPtrOutput)
}

// Defines Hardware level encryption (Only for disk)
func (o EncryptionPreferencesOutput) HardwareEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferences) *string { return v.HardwareEncryption }).(pulumi.StringPtrOutput)
}

type EncryptionPreferencesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferences)(nil)).Elem()
}

func (o EncryptionPreferencesPtrOutput) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return o
}

func (o EncryptionPreferencesPtrOutput) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return o
}

func (o EncryptionPreferencesPtrOutput) Elem() EncryptionPreferencesOutput {
	return o.ApplyT(func(v *EncryptionPreferences) EncryptionPreferences {
		if v != nil {
			return *v
		}
		var ret EncryptionPreferences
		return ret
	}).(EncryptionPreferencesOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesPtrOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferences) *string {
		if v == nil {
			return nil
		}
		return v.DoubleEncryption
	}).(pulumi.StringPtrOutput)
}

// Defines Hardware level encryption (Only for disk)
func (o EncryptionPreferencesPtrOutput) HardwareEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferences) *string {
		if v == nil {
			return nil
		}
		return v.HardwareEncryption
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferencesResponse struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption *string `pulumi:"doubleEncryption"`
	// Defines Hardware level encryption (Only for disk)
	HardwareEncryption *string `pulumi:"hardwareEncryption"`
}

// Defaults sets the appropriate defaults for EncryptionPreferencesResponse
func (val *EncryptionPreferencesResponse) Defaults() *EncryptionPreferencesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DoubleEncryption == nil {
		doubleEncryption_ := "Disabled"
		tmp.DoubleEncryption = &doubleEncryption_
	}
	return &tmp
}

// Preferences related to the Encryption.
type EncryptionPreferencesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferencesResponse)(nil)).Elem()
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponseOutput() EncryptionPreferencesResponseOutput {
	return o
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponseOutputWithContext(ctx context.Context) EncryptionPreferencesResponseOutput {
	return o
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesResponseOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferencesResponse) *string { return v.DoubleEncryption }).(pulumi.StringPtrOutput)
}

// Defines Hardware level encryption (Only for disk)
func (o EncryptionPreferencesResponseOutput) HardwareEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferencesResponse) *string { return v.HardwareEncryption }).(pulumi.StringPtrOutput)
}

type EncryptionPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferencesResponse)(nil)).Elem()
}

func (o EncryptionPreferencesResponsePtrOutput) ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput {
	return o
}

func (o EncryptionPreferencesResponsePtrOutput) ToEncryptionPreferencesResponsePtrOutputWithContext(ctx context.Context) EncryptionPreferencesResponsePtrOutput {
	return o
}

func (o EncryptionPreferencesResponsePtrOutput) Elem() EncryptionPreferencesResponseOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) EncryptionPreferencesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionPreferencesResponse
		return ret
	}).(EncryptionPreferencesResponseOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesResponsePtrOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DoubleEncryption
	}).(pulumi.StringPtrOutput)
}

// Defines Hardware level encryption (Only for disk)
func (o EncryptionPreferencesResponsePtrOutput) HardwareEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HardwareEncryption
	}).(pulumi.StringPtrOutput)
}

// Export disk details
type ExportDiskDetailsResponse struct {
	// Path to backed up manifest, only returned if enableManifestBackup is true.
	BackupManifestCloudPath string `pulumi:"backupManifestCloudPath"`
	// The relative path of the manifest file on the disk.
	ManifestFile string `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the disk.
	ManifestHash string `pulumi:"manifestHash"`
}

// Export disk details
type ExportDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (ExportDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportDiskDetailsResponse)(nil)).Elem()
}

func (o ExportDiskDetailsResponseOutput) ToExportDiskDetailsResponseOutput() ExportDiskDetailsResponseOutput {
	return o
}

func (o ExportDiskDetailsResponseOutput) ToExportDiskDetailsResponseOutputWithContext(ctx context.Context) ExportDiskDetailsResponseOutput {
	return o
}

// Path to backed up manifest, only returned if enableManifestBackup is true.
func (o ExportDiskDetailsResponseOutput) BackupManifestCloudPath() pulumi.StringOutput {
	return o.ApplyT(func(v ExportDiskDetailsResponse) string { return v.BackupManifestCloudPath }).(pulumi.StringOutput)
}

// The relative path of the manifest file on the disk.
func (o ExportDiskDetailsResponseOutput) ManifestFile() pulumi.StringOutput {
	return o.ApplyT(func(v ExportDiskDetailsResponse) string { return v.ManifestFile }).(pulumi.StringOutput)
}

// The Base16-encoded MD5 hash of the manifest file on the disk.
func (o ExportDiskDetailsResponseOutput) ManifestHash() pulumi.StringOutput {
	return o.ApplyT(func(v ExportDiskDetailsResponse) string { return v.ManifestHash }).(pulumi.StringOutput)
}

type ExportDiskDetailsResponseMapOutput struct{ *pulumi.OutputState }

func (ExportDiskDetailsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ExportDiskDetailsResponse)(nil)).Elem()
}

func (o ExportDiskDetailsResponseMapOutput) ToExportDiskDetailsResponseMapOutput() ExportDiskDetailsResponseMapOutput {
	return o
}

func (o ExportDiskDetailsResponseMapOutput) ToExportDiskDetailsResponseMapOutputWithContext(ctx context.Context) ExportDiskDetailsResponseMapOutput {
	return o
}

func (o ExportDiskDetailsResponseMapOutput) MapIndex(k pulumi.StringInput) ExportDiskDetailsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ExportDiskDetailsResponse {
		return vs[0].(map[string]ExportDiskDetailsResponse)[vs[1].(string)]
	}).(ExportDiskDetailsResponseOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetails struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// FilterFileDetailsInput is an input type that accepts FilterFileDetailsArgs and FilterFileDetailsOutput values.
// You can construct a concrete instance of `FilterFileDetailsInput` via:
//
//	FilterFileDetailsArgs{...}
type FilterFileDetailsInput interface {
	pulumi.Input

	ToFilterFileDetailsOutput() FilterFileDetailsOutput
	ToFilterFileDetailsOutputWithContext(context.Context) FilterFileDetailsOutput
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsArgs struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath pulumi.StringInput `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType pulumi.StringInput `pulumi:"filterFileType"`
}

func (FilterFileDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetails)(nil)).Elem()
}

func (i FilterFileDetailsArgs) ToFilterFileDetailsOutput() FilterFileDetailsOutput {
	return i.ToFilterFileDetailsOutputWithContext(context.Background())
}

func (i FilterFileDetailsArgs) ToFilterFileDetailsOutputWithContext(ctx context.Context) FilterFileDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsOutput)
}

// FilterFileDetailsArrayInput is an input type that accepts FilterFileDetailsArray and FilterFileDetailsArrayOutput values.
// You can construct a concrete instance of `FilterFileDetailsArrayInput` via:
//
//	FilterFileDetailsArray{ FilterFileDetailsArgs{...} }
type FilterFileDetailsArrayInput interface {
	pulumi.Input

	ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput
	ToFilterFileDetailsArrayOutputWithContext(context.Context) FilterFileDetailsArrayOutput
}

type FilterFileDetailsArray []FilterFileDetailsInput

func (FilterFileDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetails)(nil)).Elem()
}

func (i FilterFileDetailsArray) ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput {
	return i.ToFilterFileDetailsArrayOutputWithContext(context.Background())
}

func (i FilterFileDetailsArray) ToFilterFileDetailsArrayOutputWithContext(ctx context.Context) FilterFileDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsArrayOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetails)(nil)).Elem()
}

func (o FilterFileDetailsOutput) ToFilterFileDetailsOutput() FilterFileDetailsOutput {
	return o
}

func (o FilterFileDetailsOutput) ToFilterFileDetailsOutputWithContext(ctx context.Context) FilterFileDetailsOutput {
	return o
}

// Path of the file that contains the details of all items to transfer.
func (o FilterFileDetailsOutput) FilterFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetails) string { return v.FilterFilePath }).(pulumi.StringOutput)
}

// Type of the filter file.
func (o FilterFileDetailsOutput) FilterFileType() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetails) string { return v.FilterFileType }).(pulumi.StringOutput)
}

type FilterFileDetailsArrayOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetails)(nil)).Elem()
}

func (o FilterFileDetailsArrayOutput) ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput {
	return o
}

func (o FilterFileDetailsArrayOutput) ToFilterFileDetailsArrayOutputWithContext(ctx context.Context) FilterFileDetailsArrayOutput {
	return o
}

func (o FilterFileDetailsArrayOutput) Index(i pulumi.IntInput) FilterFileDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFileDetails {
		return vs[0].([]FilterFileDetails)[vs[1].(int)]
	}).(FilterFileDetailsOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponse struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponseOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetailsResponse)(nil)).Elem()
}

func (o FilterFileDetailsResponseOutput) ToFilterFileDetailsResponseOutput() FilterFileDetailsResponseOutput {
	return o
}

func (o FilterFileDetailsResponseOutput) ToFilterFileDetailsResponseOutputWithContext(ctx context.Context) FilterFileDetailsResponseOutput {
	return o
}

// Path of the file that contains the details of all items to transfer.
func (o FilterFileDetailsResponseOutput) FilterFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetailsResponse) string { return v.FilterFilePath }).(pulumi.StringOutput)
}

// Type of the filter file.
func (o FilterFileDetailsResponseOutput) FilterFileType() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetailsResponse) string { return v.FilterFileType }).(pulumi.StringOutput)
}

type FilterFileDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetailsResponse)(nil)).Elem()
}

func (o FilterFileDetailsResponseArrayOutput) ToFilterFileDetailsResponseArrayOutput() FilterFileDetailsResponseArrayOutput {
	return o
}

func (o FilterFileDetailsResponseArrayOutput) ToFilterFileDetailsResponseArrayOutputWithContext(ctx context.Context) FilterFileDetailsResponseArrayOutput {
	return o
}

func (o FilterFileDetailsResponseArrayOutput) Index(i pulumi.IntInput) FilterFileDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFileDetailsResponse {
		return vs[0].([]FilterFileDetailsResponse)[vs[1].(int)]
	}).(FilterFileDetailsResponseOutput)
}

// Managed identity properties.
type IdentityProperties struct {
	// Managed service identity type.
	Type *string `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned *UserAssignedProperties `pulumi:"userAssigned"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//	IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Managed identity properties.
type IdentityPropertiesArgs struct {
	// Managed service identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned UserAssignedPropertiesPtrInput `pulumi:"userAssigned"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//	        IdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Managed identity properties.
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

// Managed service identity type.
func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
func (o IdentityPropertiesOutput) UserAssigned() UserAssignedPropertiesPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *UserAssignedProperties { return v.UserAssigned }).(UserAssignedPropertiesPtrOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties {
		if v != nil {
			return *v
		}
		var ret IdentityProperties
		return ret
	}).(IdentityPropertiesOutput)
}

// Managed service identity type.
func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
func (o IdentityPropertiesPtrOutput) UserAssigned() UserAssignedPropertiesPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *UserAssignedProperties {
		if v == nil {
			return nil
		}
		return v.UserAssigned
	}).(UserAssignedPropertiesPtrOutput)
}

// Managed identity properties.
type IdentityPropertiesResponse struct {
	// Managed service identity type.
	Type *string `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned *UserAssignedPropertiesResponse `pulumi:"userAssigned"`
}

// Managed identity properties.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

// Managed service identity type.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
func (o IdentityPropertiesResponseOutput) UserAssigned() UserAssignedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *UserAssignedPropertiesResponse { return v.UserAssigned }).(UserAssignedPropertiesResponsePtrOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret IdentityPropertiesResponse
		return ret
	}).(IdentityPropertiesResponseOutput)
}

// Managed service identity type.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
func (o IdentityPropertiesResponsePtrOutput) UserAssigned() UserAssignedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *UserAssignedPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssigned
	}).(UserAssignedPropertiesResponsePtrOutput)
}

// Import disk details
type ImportDiskDetails struct {
	// BitLocker key used to encrypt the disk.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// The relative path of the manifest file on the disk.
	ManifestFile string `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the disk.
	ManifestHash string `pulumi:"manifestHash"`
}

// ImportDiskDetailsInput is an input type that accepts ImportDiskDetailsArgs and ImportDiskDetailsOutput values.
// You can construct a concrete instance of `ImportDiskDetailsInput` via:
//
//	ImportDiskDetailsArgs{...}
type ImportDiskDetailsInput interface {
	pulumi.Input

	ToImportDiskDetailsOutput() ImportDiskDetailsOutput
	ToImportDiskDetailsOutputWithContext(context.Context) ImportDiskDetailsOutput
}

// Import disk details
type ImportDiskDetailsArgs struct {
	// BitLocker key used to encrypt the disk.
	BitLockerKey pulumi.StringInput `pulumi:"bitLockerKey"`
	// The relative path of the manifest file on the disk.
	ManifestFile pulumi.StringInput `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the disk.
	ManifestHash pulumi.StringInput `pulumi:"manifestHash"`
}

func (ImportDiskDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportDiskDetails)(nil)).Elem()
}

func (i ImportDiskDetailsArgs) ToImportDiskDetailsOutput() ImportDiskDetailsOutput {
	return i.ToImportDiskDetailsOutputWithContext(context.Background())
}

func (i ImportDiskDetailsArgs) ToImportDiskDetailsOutputWithContext(ctx context.Context) ImportDiskDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportDiskDetailsOutput)
}

// ImportDiskDetailsMapInput is an input type that accepts ImportDiskDetailsMap and ImportDiskDetailsMapOutput values.
// You can construct a concrete instance of `ImportDiskDetailsMapInput` via:
//
//	ImportDiskDetailsMap{ "key": ImportDiskDetailsArgs{...} }
type ImportDiskDetailsMapInput interface {
	pulumi.Input

	ToImportDiskDetailsMapOutput() ImportDiskDetailsMapOutput
	ToImportDiskDetailsMapOutputWithContext(context.Context) ImportDiskDetailsMapOutput
}

type ImportDiskDetailsMap map[string]ImportDiskDetailsInput

func (ImportDiskDetailsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ImportDiskDetails)(nil)).Elem()
}

func (i ImportDiskDetailsMap) ToImportDiskDetailsMapOutput() ImportDiskDetailsMapOutput {
	return i.ToImportDiskDetailsMapOutputWithContext(context.Background())
}

func (i ImportDiskDetailsMap) ToImportDiskDetailsMapOutputWithContext(ctx context.Context) ImportDiskDetailsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportDiskDetailsMapOutput)
}

// Import disk details
type ImportDiskDetailsOutput struct{ *pulumi.OutputState }

func (ImportDiskDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportDiskDetails)(nil)).Elem()
}

func (o ImportDiskDetailsOutput) ToImportDiskDetailsOutput() ImportDiskDetailsOutput {
	return o
}

func (o ImportDiskDetailsOutput) ToImportDiskDetailsOutputWithContext(ctx context.Context) ImportDiskDetailsOutput {
	return o
}

// BitLocker key used to encrypt the disk.
func (o ImportDiskDetailsOutput) BitLockerKey() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetails) string { return v.BitLockerKey }).(pulumi.StringOutput)
}

// The relative path of the manifest file on the disk.
func (o ImportDiskDetailsOutput) ManifestFile() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetails) string { return v.ManifestFile }).(pulumi.StringOutput)
}

// The Base16-encoded MD5 hash of the manifest file on the disk.
func (o ImportDiskDetailsOutput) ManifestHash() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetails) string { return v.ManifestHash }).(pulumi.StringOutput)
}

type ImportDiskDetailsMapOutput struct{ *pulumi.OutputState }

func (ImportDiskDetailsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ImportDiskDetails)(nil)).Elem()
}

func (o ImportDiskDetailsMapOutput) ToImportDiskDetailsMapOutput() ImportDiskDetailsMapOutput {
	return o
}

func (o ImportDiskDetailsMapOutput) ToImportDiskDetailsMapOutputWithContext(ctx context.Context) ImportDiskDetailsMapOutput {
	return o
}

func (o ImportDiskDetailsMapOutput) MapIndex(k pulumi.StringInput) ImportDiskDetailsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ImportDiskDetails {
		return vs[0].(map[string]ImportDiskDetails)[vs[1].(string)]
	}).(ImportDiskDetailsOutput)
}

// Import disk details
type ImportDiskDetailsResponse struct {
	// Path to backed up manifest, only returned if enableManifestBackup is true.
	BackupManifestCloudPath string `pulumi:"backupManifestCloudPath"`
	// BitLocker key used to encrypt the disk.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// The relative path of the manifest file on the disk.
	ManifestFile string `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the disk.
	ManifestHash string `pulumi:"manifestHash"`
}

// Import disk details
type ImportDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (ImportDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportDiskDetailsResponse)(nil)).Elem()
}

func (o ImportDiskDetailsResponseOutput) ToImportDiskDetailsResponseOutput() ImportDiskDetailsResponseOutput {
	return o
}

func (o ImportDiskDetailsResponseOutput) ToImportDiskDetailsResponseOutputWithContext(ctx context.Context) ImportDiskDetailsResponseOutput {
	return o
}

// Path to backed up manifest, only returned if enableManifestBackup is true.
func (o ImportDiskDetailsResponseOutput) BackupManifestCloudPath() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetailsResponse) string { return v.BackupManifestCloudPath }).(pulumi.StringOutput)
}

// BitLocker key used to encrypt the disk.
func (o ImportDiskDetailsResponseOutput) BitLockerKey() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetailsResponse) string { return v.BitLockerKey }).(pulumi.StringOutput)
}

// The relative path of the manifest file on the disk.
func (o ImportDiskDetailsResponseOutput) ManifestFile() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetailsResponse) string { return v.ManifestFile }).(pulumi.StringOutput)
}

// The Base16-encoded MD5 hash of the manifest file on the disk.
func (o ImportDiskDetailsResponseOutput) ManifestHash() pulumi.StringOutput {
	return o.ApplyT(func(v ImportDiskDetailsResponse) string { return v.ManifestHash }).(pulumi.StringOutput)
}

type ImportDiskDetailsResponseMapOutput struct{ *pulumi.OutputState }

func (ImportDiskDetailsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ImportDiskDetailsResponse)(nil)).Elem()
}

func (o ImportDiskDetailsResponseMapOutput) ToImportDiskDetailsResponseMapOutput() ImportDiskDetailsResponseMapOutput {
	return o
}

func (o ImportDiskDetailsResponseMapOutput) ToImportDiskDetailsResponseMapOutputWithContext(ctx context.Context) ImportDiskDetailsResponseMapOutput {
	return o
}

func (o ImportDiskDetailsResponseMapOutput) MapIndex(k pulumi.StringInput) ImportDiskDetailsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ImportDiskDetailsResponse {
		return vs[0].(map[string]ImportDiskDetailsResponse)[vs[1].(string)]
	}).(ImportDiskDetailsResponseOutput)
}

// Additional delivery info.
type JobDeliveryInfo struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// JobDeliveryInfoInput is an input type that accepts JobDeliveryInfoArgs and JobDeliveryInfoOutput values.
// You can construct a concrete instance of `JobDeliveryInfoInput` via:
//
//	JobDeliveryInfoArgs{...}
type JobDeliveryInfoInput interface {
	pulumi.Input

	ToJobDeliveryInfoOutput() JobDeliveryInfoOutput
	ToJobDeliveryInfoOutputWithContext(context.Context) JobDeliveryInfoOutput
}

// Additional delivery info.
type JobDeliveryInfoArgs struct {
	// Scheduled date time.
	ScheduledDateTime pulumi.StringPtrInput `pulumi:"scheduledDateTime"`
}

func (JobDeliveryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return i.ToJobDeliveryInfoOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput)
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput).ToJobDeliveryInfoPtrOutputWithContext(ctx)
}

// JobDeliveryInfoPtrInput is an input type that accepts JobDeliveryInfoArgs, JobDeliveryInfoPtr and JobDeliveryInfoPtrOutput values.
// You can construct a concrete instance of `JobDeliveryInfoPtrInput` via:
//
//	        JobDeliveryInfoArgs{...}
//
//	or:
//
//	        nil
type JobDeliveryInfoPtrInput interface {
	pulumi.Input

	ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput
	ToJobDeliveryInfoPtrOutputWithContext(context.Context) JobDeliveryInfoPtrOutput
}

type jobDeliveryInfoPtrType JobDeliveryInfoArgs

func JobDeliveryInfoPtr(v *JobDeliveryInfoArgs) JobDeliveryInfoPtrInput {
	return (*jobDeliveryInfoPtrType)(v)
}

func (*jobDeliveryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDeliveryInfo) *JobDeliveryInfo {
		return &v
	}).(JobDeliveryInfoPtrOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfo) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoPtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) Elem() JobDeliveryInfoOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) JobDeliveryInfo {
		if v != nil {
			return *v
		}
		var ret JobDeliveryInfo
		return ret
	}).(JobDeliveryInfoOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoPtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoResponse struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// Additional delivery info.
type JobDeliveryInfoResponseOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutputWithContext(ctx context.Context) JobDeliveryInfoResponseOutput {
	return o
}

// Scheduled date time.
func (o JobDeliveryInfoResponseOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) Elem() JobDeliveryInfoResponseOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) JobDeliveryInfoResponse {
		if v != nil {
			return *v
		}
		var ret JobDeliveryInfoResponse
		return ret
	}).(JobDeliveryInfoResponseOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponsePtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Job stages.
type JobStagesResponse struct {
	// Display name of the job stage.
	DisplayName string `pulumi:"displayName"`
	// Job Stage Details
	JobStageDetails interface{} `pulumi:"jobStageDetails"`
	// Name of the job stage.
	StageName string `pulumi:"stageName"`
	// Status of the job stage.
	StageStatus string `pulumi:"stageStatus"`
	// Time for the job stage in UTC ISO 8601 format.
	StageTime string `pulumi:"stageTime"`
}

// Job stages.
type JobStagesResponseOutput struct{ *pulumi.OutputState }

func (JobStagesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStagesResponse)(nil)).Elem()
}

func (o JobStagesResponseOutput) ToJobStagesResponseOutput() JobStagesResponseOutput {
	return o
}

func (o JobStagesResponseOutput) ToJobStagesResponseOutputWithContext(ctx context.Context) JobStagesResponseOutput {
	return o
}

// Display name of the job stage.
func (o JobStagesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Job Stage Details
func (o JobStagesResponseOutput) JobStageDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v JobStagesResponse) interface{} { return v.JobStageDetails }).(pulumi.AnyOutput)
}

// Name of the job stage.
func (o JobStagesResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageName }).(pulumi.StringOutput)
}

// Status of the job stage.
func (o JobStagesResponseOutput) StageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageStatus }).(pulumi.StringOutput)
}

// Time for the job stage in UTC ISO 8601 format.
func (o JobStagesResponseOutput) StageTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageTime }).(pulumi.StringOutput)
}

type JobStagesResponseArrayOutput struct{ *pulumi.OutputState }

func (JobStagesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobStagesResponse)(nil)).Elem()
}

func (o JobStagesResponseArrayOutput) ToJobStagesResponseArrayOutput() JobStagesResponseArrayOutput {
	return o
}

func (o JobStagesResponseArrayOutput) ToJobStagesResponseArrayOutputWithContext(ctx context.Context) JobStagesResponseArrayOutput {
	return o
}

func (o JobStagesResponseArrayOutput) Index(i pulumi.IntInput) JobStagesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobStagesResponse {
		return vs[0].([]JobStagesResponse)[vs[1].(int)]
	}).(JobStagesResponseOutput)
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKey struct {
	// Managed identity properties used for key encryption.
	IdentityProperties *IdentityProperties `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType string `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl *string `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// Defaults sets the appropriate defaults for KeyEncryptionKey
func (val *KeyEncryptionKey) Defaults() *KeyEncryptionKey {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.KekType) {
		tmp.KekType = "MicrosoftManaged"
	}
	return &tmp
}

// KeyEncryptionKeyInput is an input type that accepts KeyEncryptionKeyArgs and KeyEncryptionKeyOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyInput` via:
//
//	KeyEncryptionKeyArgs{...}
type KeyEncryptionKeyInput interface {
	pulumi.Input

	ToKeyEncryptionKeyOutput() KeyEncryptionKeyOutput
	ToKeyEncryptionKeyOutputWithContext(context.Context) KeyEncryptionKeyOutput
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyArgs struct {
	// Managed identity properties used for key encryption.
	IdentityProperties IdentityPropertiesPtrInput `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType pulumi.StringInput `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl pulumi.StringPtrInput `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID pulumi.StringPtrInput `pulumi:"kekVaultResourceID"`
}

// Defaults sets the appropriate defaults for KeyEncryptionKeyArgs
func (val *KeyEncryptionKeyArgs) Defaults() *KeyEncryptionKeyArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KekType == nil {
		tmp.KekType = pulumi.String("MicrosoftManaged")
	}
	return &tmp
}
func (KeyEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKey)(nil)).Elem()
}

func (i KeyEncryptionKeyArgs) ToKeyEncryptionKeyOutput() KeyEncryptionKeyOutput {
	return i.ToKeyEncryptionKeyOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyArgs) ToKeyEncryptionKeyOutputWithContext(ctx context.Context) KeyEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyOutput)
}

func (i KeyEncryptionKeyArgs) ToKeyEncryptionKeyPtrOutput() KeyEncryptionKeyPtrOutput {
	return i.ToKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyArgs) ToKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyOutput).ToKeyEncryptionKeyPtrOutputWithContext(ctx)
}

// KeyEncryptionKeyPtrInput is an input type that accepts KeyEncryptionKeyArgs, KeyEncryptionKeyPtr and KeyEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyPtrInput` via:
//
//	        KeyEncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type KeyEncryptionKeyPtrInput interface {
	pulumi.Input

	ToKeyEncryptionKeyPtrOutput() KeyEncryptionKeyPtrOutput
	ToKeyEncryptionKeyPtrOutputWithContext(context.Context) KeyEncryptionKeyPtrOutput
}

type keyEncryptionKeyPtrType KeyEncryptionKeyArgs

func KeyEncryptionKeyPtr(v *KeyEncryptionKeyArgs) KeyEncryptionKeyPtrInput {
	return (*keyEncryptionKeyPtrType)(v)
}

func (*keyEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyEncryptionKey)(nil)).Elem()
}

func (i *keyEncryptionKeyPtrType) ToKeyEncryptionKeyPtrOutput() KeyEncryptionKeyPtrOutput {
	return i.ToKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *keyEncryptionKeyPtrType) ToKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyPtrOutput)
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKey)(nil)).Elem()
}

func (o KeyEncryptionKeyOutput) ToKeyEncryptionKeyOutput() KeyEncryptionKeyOutput {
	return o
}

func (o KeyEncryptionKeyOutput) ToKeyEncryptionKeyOutputWithContext(ctx context.Context) KeyEncryptionKeyOutput {
	return o
}

func (o KeyEncryptionKeyOutput) ToKeyEncryptionKeyPtrOutput() KeyEncryptionKeyPtrOutput {
	return o.ToKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o KeyEncryptionKeyOutput) ToKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyEncryptionKey) *KeyEncryptionKey {
		return &v
	}).(KeyEncryptionKeyPtrOutput)
}

// Managed identity properties used for key encryption.
func (o KeyEncryptionKeyOutput) IdentityProperties() IdentityPropertiesPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKey) *IdentityProperties { return v.IdentityProperties }).(IdentityPropertiesPtrOutput)
}

// Type of encryption key used for key encryption.
func (o KeyEncryptionKeyOutput) KekType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyEncryptionKey) string { return v.KekType }).(pulumi.StringOutput)
}

// Key encryption key. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKey) *string { return v.KekUrl }).(pulumi.StringPtrOutput)
}

// Kek vault resource id. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKey) *string { return v.KekVaultResourceID }).(pulumi.StringPtrOutput)
}

type KeyEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyEncryptionKey)(nil)).Elem()
}

func (o KeyEncryptionKeyPtrOutput) ToKeyEncryptionKeyPtrOutput() KeyEncryptionKeyPtrOutput {
	return o
}

func (o KeyEncryptionKeyPtrOutput) ToKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyPtrOutput {
	return o
}

func (o KeyEncryptionKeyPtrOutput) Elem() KeyEncryptionKeyOutput {
	return o.ApplyT(func(v *KeyEncryptionKey) KeyEncryptionKey {
		if v != nil {
			return *v
		}
		var ret KeyEncryptionKey
		return ret
	}).(KeyEncryptionKeyOutput)
}

// Managed identity properties used for key encryption.
func (o KeyEncryptionKeyPtrOutput) IdentityProperties() IdentityPropertiesPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKey) *IdentityProperties {
		if v == nil {
			return nil
		}
		return v.IdentityProperties
	}).(IdentityPropertiesPtrOutput)
}

// Type of encryption key used for key encryption.
func (o KeyEncryptionKeyPtrOutput) KekType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.KekType
	}).(pulumi.StringPtrOutput)
}

// Key encryption key. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyPtrOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return v.KekUrl
	}).(pulumi.StringPtrOutput)
}

// Kek vault resource id. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyPtrOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return v.KekVaultResourceID
	}).(pulumi.StringPtrOutput)
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponse struct {
	// Managed identity properties used for key encryption.
	IdentityProperties *IdentityPropertiesResponse `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType string `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl *string `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// Defaults sets the appropriate defaults for KeyEncryptionKeyResponse
func (val *KeyEncryptionKeyResponse) Defaults() *KeyEncryptionKeyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.KekType) {
		tmp.KekType = "MicrosoftManaged"
	}
	return &tmp
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponseOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyResponse)(nil)).Elem()
}

func (o KeyEncryptionKeyResponseOutput) ToKeyEncryptionKeyResponseOutput() KeyEncryptionKeyResponseOutput {
	return o
}

func (o KeyEncryptionKeyResponseOutput) ToKeyEncryptionKeyResponseOutputWithContext(ctx context.Context) KeyEncryptionKeyResponseOutput {
	return o
}

// Managed identity properties used for key encryption.
func (o KeyEncryptionKeyResponseOutput) IdentityProperties() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *IdentityPropertiesResponse { return v.IdentityProperties }).(IdentityPropertiesResponsePtrOutput)
}

// Type of encryption key used for key encryption.
func (o KeyEncryptionKeyResponseOutput) KekType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) string { return v.KekType }).(pulumi.StringOutput)
}

// Key encryption key. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponseOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *string { return v.KekUrl }).(pulumi.StringPtrOutput)
}

// Kek vault resource id. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponseOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *string { return v.KekVaultResourceID }).(pulumi.StringPtrOutput)
}

type KeyEncryptionKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyEncryptionKeyResponse)(nil)).Elem()
}

func (o KeyEncryptionKeyResponsePtrOutput) ToKeyEncryptionKeyResponsePtrOutput() KeyEncryptionKeyResponsePtrOutput {
	return o
}

func (o KeyEncryptionKeyResponsePtrOutput) ToKeyEncryptionKeyResponsePtrOutputWithContext(ctx context.Context) KeyEncryptionKeyResponsePtrOutput {
	return o
}

func (o KeyEncryptionKeyResponsePtrOutput) Elem() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyResponse) KeyEncryptionKeyResponse {
		if v != nil {
			return *v
		}
		var ret KeyEncryptionKeyResponse
		return ret
	}).(KeyEncryptionKeyResponseOutput)
}

// Managed identity properties used for key encryption.
func (o KeyEncryptionKeyResponsePtrOutput) IdentityProperties() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyResponse) *IdentityPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.IdentityProperties
	}).(IdentityPropertiesResponsePtrOutput)
}

// Type of encryption key used for key encryption.
func (o KeyEncryptionKeyResponsePtrOutput) KekType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KekType
	}).(pulumi.StringPtrOutput)
}

// Key encryption key. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponsePtrOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekUrl
	}).(pulumi.StringPtrOutput)
}

// Kek vault resource id. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponsePtrOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekVaultResourceID
	}).(pulumi.StringPtrOutput)
}

// Last Mitigation Action Performed On Job
type LastMitigationActionOnJobResponse struct {
	// Action performed date time
	ActionDateTimeInUtc *string `pulumi:"actionDateTimeInUtc"`
	// Resolution code provided by customer
	CustomerResolution *string `pulumi:"customerResolution"`
	// Action performed by customer,
	// possibility is that mitigation might happen by customer or service or by ops
	IsPerformedByCustomer *bool `pulumi:"isPerformedByCustomer"`
}

// Last Mitigation Action Performed On Job
type LastMitigationActionOnJobResponseOutput struct{ *pulumi.OutputState }

func (LastMitigationActionOnJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LastMitigationActionOnJobResponse)(nil)).Elem()
}

func (o LastMitigationActionOnJobResponseOutput) ToLastMitigationActionOnJobResponseOutput() LastMitigationActionOnJobResponseOutput {
	return o
}

func (o LastMitigationActionOnJobResponseOutput) ToLastMitigationActionOnJobResponseOutputWithContext(ctx context.Context) LastMitigationActionOnJobResponseOutput {
	return o
}

// Action performed date time
func (o LastMitigationActionOnJobResponseOutput) ActionDateTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LastMitigationActionOnJobResponse) *string { return v.ActionDateTimeInUtc }).(pulumi.StringPtrOutput)
}

// Resolution code provided by customer
func (o LastMitigationActionOnJobResponseOutput) CustomerResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LastMitigationActionOnJobResponse) *string { return v.CustomerResolution }).(pulumi.StringPtrOutput)
}

// Action performed by customer,
// possibility is that mitigation might happen by customer or service or by ops
func (o LastMitigationActionOnJobResponseOutput) IsPerformedByCustomer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LastMitigationActionOnJobResponse) *bool { return v.IsPerformedByCustomer }).(pulumi.BoolPtrOutput)
}

type LastMitigationActionOnJobResponsePtrOutput struct{ *pulumi.OutputState }

func (LastMitigationActionOnJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LastMitigationActionOnJobResponse)(nil)).Elem()
}

func (o LastMitigationActionOnJobResponsePtrOutput) ToLastMitigationActionOnJobResponsePtrOutput() LastMitigationActionOnJobResponsePtrOutput {
	return o
}

func (o LastMitigationActionOnJobResponsePtrOutput) ToLastMitigationActionOnJobResponsePtrOutputWithContext(ctx context.Context) LastMitigationActionOnJobResponsePtrOutput {
	return o
}

func (o LastMitigationActionOnJobResponsePtrOutput) Elem() LastMitigationActionOnJobResponseOutput {
	return o.ApplyT(func(v *LastMitigationActionOnJobResponse) LastMitigationActionOnJobResponse {
		if v != nil {
			return *v
		}
		var ret LastMitigationActionOnJobResponse
		return ret
	}).(LastMitigationActionOnJobResponseOutput)
}

// Action performed date time
func (o LastMitigationActionOnJobResponsePtrOutput) ActionDateTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LastMitigationActionOnJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionDateTimeInUtc
	}).(pulumi.StringPtrOutput)
}

// Resolution code provided by customer
func (o LastMitigationActionOnJobResponsePtrOutput) CustomerResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LastMitigationActionOnJobResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomerResolution
	}).(pulumi.StringPtrOutput)
}

// Action performed by customer,
// possibility is that mitigation might happen by customer or service or by ops
func (o LastMitigationActionOnJobResponsePtrOutput) IsPerformedByCustomer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LastMitigationActionOnJobResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPerformedByCustomer
	}).(pulumi.BoolPtrOutput)
}

// Details of the managed disks.
type ManagedDiskDetails struct {
	// Account Type of the data to be transferred.
	// Expected value is 'ManagedDisk'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Defaults sets the appropriate defaults for ManagedDiskDetails
func (val *ManagedDiskDetails) Defaults() *ManagedDiskDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// ManagedDiskDetailsInput is an input type that accepts ManagedDiskDetailsArgs and ManagedDiskDetailsOutput values.
// You can construct a concrete instance of `ManagedDiskDetailsInput` via:
//
//	ManagedDiskDetailsArgs{...}
type ManagedDiskDetailsInput interface {
	pulumi.Input

	ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput
	ToManagedDiskDetailsOutputWithContext(context.Context) ManagedDiskDetailsOutput
}

// Details of the managed disks.
type ManagedDiskDetailsArgs struct {
	// Account Type of the data to be transferred.
	// Expected value is 'ManagedDisk'.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId pulumi.StringInput `pulumi:"stagingStorageAccountId"`
}

// Defaults sets the appropriate defaults for ManagedDiskDetailsArgs
func (val *ManagedDiskDetailsArgs) Defaults() *ManagedDiskDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataAccountType == nil {
		tmp.DataAccountType = pulumi.String("StorageAccount")
	}
	return &tmp
}
func (ManagedDiskDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetails)(nil)).Elem()
}

func (i ManagedDiskDetailsArgs) ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput {
	return i.ToManagedDiskDetailsOutputWithContext(context.Background())
}

func (i ManagedDiskDetailsArgs) ToManagedDiskDetailsOutputWithContext(ctx context.Context) ManagedDiskDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskDetailsOutput)
}

// Details of the managed disks.
type ManagedDiskDetailsOutput struct{ *pulumi.OutputState }

func (ManagedDiskDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetails)(nil)).Elem()
}

func (o ManagedDiskDetailsOutput) ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput {
	return o
}

func (o ManagedDiskDetailsOutput) ToManagedDiskDetailsOutputWithContext(ctx context.Context) ManagedDiskDetailsOutput {
	return o
}

// Account Type of the data to be transferred.
// Expected value is 'ManagedDisk'.
func (o ManagedDiskDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Resource Group Id of the compute disks.
func (o ManagedDiskDetailsOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetails) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o ManagedDiskDetailsOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDiskDetails) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Resource Id of the storage account that can be used to copy the vhd for staging.
func (o ManagedDiskDetailsOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetails) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// Details of the managed disks.
type ManagedDiskDetailsResponse struct {
	// Account Type of the data to be transferred.
	// Expected value is 'ManagedDisk'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Defaults sets the appropriate defaults for ManagedDiskDetailsResponse
func (val *ManagedDiskDetailsResponse) Defaults() *ManagedDiskDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details of the managed disks.
type ManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (ManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o ManagedDiskDetailsResponseOutput) ToManagedDiskDetailsResponseOutput() ManagedDiskDetailsResponseOutput {
	return o
}

func (o ManagedDiskDetailsResponseOutput) ToManagedDiskDetailsResponseOutputWithContext(ctx context.Context) ManagedDiskDetailsResponseOutput {
	return o
}

// Account Type of the data to be transferred.
// Expected value is 'ManagedDisk'.
func (o ManagedDiskDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Resource Group Id of the compute disks.
func (o ManagedDiskDetailsResponseOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Resource Id of the storage account that can be used to copy the vhd for staging.
func (o ManagedDiskDetailsResponseOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreference
func (val *NotificationPreference) Defaults() *NotificationPreference {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.SendNotification) {
		tmp.SendNotification = true
	}
	return &tmp
}

// NotificationPreferenceInput is an input type that accepts NotificationPreferenceArgs and NotificationPreferenceOutput values.
// You can construct a concrete instance of `NotificationPreferenceInput` via:
//
//	NotificationPreferenceArgs{...}
type NotificationPreferenceInput interface {
	pulumi.Input

	ToNotificationPreferenceOutput() NotificationPreferenceOutput
	ToNotificationPreferenceOutputWithContext(context.Context) NotificationPreferenceOutput
}

// Notification preference for a job stage.
type NotificationPreferenceArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreferenceArgs
func (val *NotificationPreferenceArgs) Defaults() *NotificationPreferenceArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SendNotification == nil {
		tmp.SendNotification = pulumi.Bool(true)
	}
	return &tmp
}
func (NotificationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return i.ToNotificationPreferenceOutputWithContext(context.Background())
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceOutput)
}

// NotificationPreferenceArrayInput is an input type that accepts NotificationPreferenceArray and NotificationPreferenceArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceArrayInput` via:
//
//	NotificationPreferenceArray{ NotificationPreferenceArgs{...} }
type NotificationPreferenceArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput
	ToNotificationPreferenceArrayOutputWithContext(context.Context) NotificationPreferenceArrayOutput
}

type NotificationPreferenceArray []NotificationPreferenceInput

func (NotificationPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return i.ToNotificationPreferenceArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return o
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreference) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreference) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreference {
		return vs[0].([]NotificationPreference)[vs[1].(int)]
	}).(NotificationPreferenceOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreferenceResponse
func (val *NotificationPreferenceResponse) Defaults() *NotificationPreferenceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.SendNotification) {
		tmp.SendNotification = true
	}
	return &tmp
}

// Notification preference for a job stage.
type NotificationPreferenceResponseOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return o
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceResponseOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreferenceResponse {
		return vs[0].([]NotificationPreferenceResponse)[vs[1].(int)]
	}).(NotificationPreferenceResponseOutput)
}

// Package carrier details.
type PackageCarrierDetails struct {
	// Carrier Account Number of customer for customer disk.
	CarrierAccountNumber *string `pulumi:"carrierAccountNumber"`
	// Name of the carrier.
	CarrierName *string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId *string `pulumi:"trackingId"`
}

// PackageCarrierDetailsInput is an input type that accepts PackageCarrierDetailsArgs and PackageCarrierDetailsOutput values.
// You can construct a concrete instance of `PackageCarrierDetailsInput` via:
//
//	PackageCarrierDetailsArgs{...}
type PackageCarrierDetailsInput interface {
	pulumi.Input

	ToPackageCarrierDetailsOutput() PackageCarrierDetailsOutput
	ToPackageCarrierDetailsOutputWithContext(context.Context) PackageCarrierDetailsOutput
}

// Package carrier details.
type PackageCarrierDetailsArgs struct {
	// Carrier Account Number of customer for customer disk.
	CarrierAccountNumber pulumi.StringPtrInput `pulumi:"carrierAccountNumber"`
	// Name of the carrier.
	CarrierName pulumi.StringPtrInput `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId pulumi.StringPtrInput `pulumi:"trackingId"`
}

func (PackageCarrierDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageCarrierDetails)(nil)).Elem()
}

func (i PackageCarrierDetailsArgs) ToPackageCarrierDetailsOutput() PackageCarrierDetailsOutput {
	return i.ToPackageCarrierDetailsOutputWithContext(context.Background())
}

func (i PackageCarrierDetailsArgs) ToPackageCarrierDetailsOutputWithContext(ctx context.Context) PackageCarrierDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageCarrierDetailsOutput)
}

func (i PackageCarrierDetailsArgs) ToPackageCarrierDetailsPtrOutput() PackageCarrierDetailsPtrOutput {
	return i.ToPackageCarrierDetailsPtrOutputWithContext(context.Background())
}

func (i PackageCarrierDetailsArgs) ToPackageCarrierDetailsPtrOutputWithContext(ctx context.Context) PackageCarrierDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageCarrierDetailsOutput).ToPackageCarrierDetailsPtrOutputWithContext(ctx)
}

// PackageCarrierDetailsPtrInput is an input type that accepts PackageCarrierDetailsArgs, PackageCarrierDetailsPtr and PackageCarrierDetailsPtrOutput values.
// You can construct a concrete instance of `PackageCarrierDetailsPtrInput` via:
//
//	        PackageCarrierDetailsArgs{...}
//
//	or:
//
//	        nil
type PackageCarrierDetailsPtrInput interface {
	pulumi.Input

	ToPackageCarrierDetailsPtrOutput() PackageCarrierDetailsPtrOutput
	ToPackageCarrierDetailsPtrOutputWithContext(context.Context) PackageCarrierDetailsPtrOutput
}

type packageCarrierDetailsPtrType PackageCarrierDetailsArgs

func PackageCarrierDetailsPtr(v *PackageCarrierDetailsArgs) PackageCarrierDetailsPtrInput {
	return (*packageCarrierDetailsPtrType)(v)
}

func (*packageCarrierDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageCarrierDetails)(nil)).Elem()
}

func (i *packageCarrierDetailsPtrType) ToPackageCarrierDetailsPtrOutput() PackageCarrierDetailsPtrOutput {
	return i.ToPackageCarrierDetailsPtrOutputWithContext(context.Background())
}

func (i *packageCarrierDetailsPtrType) ToPackageCarrierDetailsPtrOutputWithContext(ctx context.Context) PackageCarrierDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageCarrierDetailsPtrOutput)
}

// Package carrier details.
type PackageCarrierDetailsOutput struct{ *pulumi.OutputState }

func (PackageCarrierDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageCarrierDetails)(nil)).Elem()
}

func (o PackageCarrierDetailsOutput) ToPackageCarrierDetailsOutput() PackageCarrierDetailsOutput {
	return o
}

func (o PackageCarrierDetailsOutput) ToPackageCarrierDetailsOutputWithContext(ctx context.Context) PackageCarrierDetailsOutput {
	return o
}

func (o PackageCarrierDetailsOutput) ToPackageCarrierDetailsPtrOutput() PackageCarrierDetailsPtrOutput {
	return o.ToPackageCarrierDetailsPtrOutputWithContext(context.Background())
}

func (o PackageCarrierDetailsOutput) ToPackageCarrierDetailsPtrOutputWithContext(ctx context.Context) PackageCarrierDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageCarrierDetails) *PackageCarrierDetails {
		return &v
	}).(PackageCarrierDetailsPtrOutput)
}

// Carrier Account Number of customer for customer disk.
func (o PackageCarrierDetailsOutput) CarrierAccountNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierDetails) *string { return v.CarrierAccountNumber }).(pulumi.StringPtrOutput)
}

// Name of the carrier.
func (o PackageCarrierDetailsOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierDetails) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageCarrierDetailsOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierDetails) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

type PackageCarrierDetailsPtrOutput struct{ *pulumi.OutputState }

func (PackageCarrierDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageCarrierDetails)(nil)).Elem()
}

func (o PackageCarrierDetailsPtrOutput) ToPackageCarrierDetailsPtrOutput() PackageCarrierDetailsPtrOutput {
	return o
}

func (o PackageCarrierDetailsPtrOutput) ToPackageCarrierDetailsPtrOutputWithContext(ctx context.Context) PackageCarrierDetailsPtrOutput {
	return o
}

func (o PackageCarrierDetailsPtrOutput) Elem() PackageCarrierDetailsOutput {
	return o.ApplyT(func(v *PackageCarrierDetails) PackageCarrierDetails {
		if v != nil {
			return *v
		}
		var ret PackageCarrierDetails
		return ret
	}).(PackageCarrierDetailsOutput)
}

// Carrier Account Number of customer for customer disk.
func (o PackageCarrierDetailsPtrOutput) CarrierAccountNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierDetails) *string {
		if v == nil {
			return nil
		}
		return v.CarrierAccountNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the carrier.
func (o PackageCarrierDetailsPtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierDetails) *string {
		if v == nil {
			return nil
		}
		return v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageCarrierDetailsPtrOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierDetails) *string {
		if v == nil {
			return nil
		}
		return v.TrackingId
	}).(pulumi.StringPtrOutput)
}

// Package carrier details.
type PackageCarrierDetailsResponse struct {
	// Carrier Account Number of customer for customer disk.
	CarrierAccountNumber *string `pulumi:"carrierAccountNumber"`
	// Name of the carrier.
	CarrierName *string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId *string `pulumi:"trackingId"`
}

// Package carrier details.
type PackageCarrierDetailsResponseOutput struct{ *pulumi.OutputState }

func (PackageCarrierDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageCarrierDetailsResponse)(nil)).Elem()
}

func (o PackageCarrierDetailsResponseOutput) ToPackageCarrierDetailsResponseOutput() PackageCarrierDetailsResponseOutput {
	return o
}

func (o PackageCarrierDetailsResponseOutput) ToPackageCarrierDetailsResponseOutputWithContext(ctx context.Context) PackageCarrierDetailsResponseOutput {
	return o
}

// Carrier Account Number of customer for customer disk.
func (o PackageCarrierDetailsResponseOutput) CarrierAccountNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierDetailsResponse) *string { return v.CarrierAccountNumber }).(pulumi.StringPtrOutput)
}

// Name of the carrier.
func (o PackageCarrierDetailsResponseOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierDetailsResponse) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageCarrierDetailsResponseOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierDetailsResponse) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

type PackageCarrierDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (PackageCarrierDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageCarrierDetailsResponse)(nil)).Elem()
}

func (o PackageCarrierDetailsResponsePtrOutput) ToPackageCarrierDetailsResponsePtrOutput() PackageCarrierDetailsResponsePtrOutput {
	return o
}

func (o PackageCarrierDetailsResponsePtrOutput) ToPackageCarrierDetailsResponsePtrOutputWithContext(ctx context.Context) PackageCarrierDetailsResponsePtrOutput {
	return o
}

func (o PackageCarrierDetailsResponsePtrOutput) Elem() PackageCarrierDetailsResponseOutput {
	return o.ApplyT(func(v *PackageCarrierDetailsResponse) PackageCarrierDetailsResponse {
		if v != nil {
			return *v
		}
		var ret PackageCarrierDetailsResponse
		return ret
	}).(PackageCarrierDetailsResponseOutput)
}

// Carrier Account Number of customer for customer disk.
func (o PackageCarrierDetailsResponsePtrOutput) CarrierAccountNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CarrierAccountNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the carrier.
func (o PackageCarrierDetailsResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageCarrierDetailsResponsePtrOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrackingId
	}).(pulumi.StringPtrOutput)
}

// package carrier info
type PackageCarrierInfoResponse struct {
	// Name of the carrier.
	CarrierName *string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId *string `pulumi:"trackingId"`
}

// package carrier info
type PackageCarrierInfoResponseOutput struct{ *pulumi.OutputState }

func (PackageCarrierInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageCarrierInfoResponse)(nil)).Elem()
}

func (o PackageCarrierInfoResponseOutput) ToPackageCarrierInfoResponseOutput() PackageCarrierInfoResponseOutput {
	return o
}

func (o PackageCarrierInfoResponseOutput) ToPackageCarrierInfoResponseOutputWithContext(ctx context.Context) PackageCarrierInfoResponseOutput {
	return o
}

// Name of the carrier.
func (o PackageCarrierInfoResponseOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierInfoResponse) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageCarrierInfoResponseOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackageCarrierInfoResponse) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

type PackageCarrierInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (PackageCarrierInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageCarrierInfoResponse)(nil)).Elem()
}

func (o PackageCarrierInfoResponsePtrOutput) ToPackageCarrierInfoResponsePtrOutput() PackageCarrierInfoResponsePtrOutput {
	return o
}

func (o PackageCarrierInfoResponsePtrOutput) ToPackageCarrierInfoResponsePtrOutputWithContext(ctx context.Context) PackageCarrierInfoResponsePtrOutput {
	return o
}

func (o PackageCarrierInfoResponsePtrOutput) Elem() PackageCarrierInfoResponseOutput {
	return o.ApplyT(func(v *PackageCarrierInfoResponse) PackageCarrierInfoResponse {
		if v != nil {
			return *v
		}
		var ret PackageCarrierInfoResponse
		return ret
	}).(PackageCarrierInfoResponseOutput)
}

// Name of the carrier.
func (o PackageCarrierInfoResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageCarrierInfoResponsePtrOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageCarrierInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrackingId
	}).(pulumi.StringPtrOutput)
}

// package shipping details
type PackageShippingDetailsResponse struct {
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId string `pulumi:"trackingId"`
	// Url where shipment can be tracked.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// package shipping details
type PackageShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (PackageShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageShippingDetailsResponse)(nil)).Elem()
}

func (o PackageShippingDetailsResponseOutput) ToPackageShippingDetailsResponseOutput() PackageShippingDetailsResponseOutput {
	return o
}

func (o PackageShippingDetailsResponseOutput) ToPackageShippingDetailsResponseOutputWithContext(ctx context.Context) PackageShippingDetailsResponseOutput {
	return o
}

// Name of the carrier.
func (o PackageShippingDetailsResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// Tracking Id of shipment.
func (o PackageShippingDetailsResponseOutput) TrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.TrackingId }).(pulumi.StringOutput)
}

// Url where shipment can be tracked.
func (o PackageShippingDetailsResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

type PackageShippingDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (PackageShippingDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageShippingDetailsResponse)(nil)).Elem()
}

func (o PackageShippingDetailsResponsePtrOutput) ToPackageShippingDetailsResponsePtrOutput() PackageShippingDetailsResponsePtrOutput {
	return o
}

func (o PackageShippingDetailsResponsePtrOutput) ToPackageShippingDetailsResponsePtrOutputWithContext(ctx context.Context) PackageShippingDetailsResponsePtrOutput {
	return o
}

func (o PackageShippingDetailsResponsePtrOutput) Elem() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v *PackageShippingDetailsResponse) PackageShippingDetailsResponse {
		if v != nil {
			return *v
		}
		var ret PackageShippingDetailsResponse
		return ret
	}).(PackageShippingDetailsResponseOutput)
}

// Name of the carrier.
func (o PackageShippingDetailsResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Tracking Id of shipment.
func (o PackageShippingDetailsResponsePtrOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrackingId
	}).(pulumi.StringPtrOutput)
}

// Url where shipment can be tracked.
func (o PackageShippingDetailsResponsePtrOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrackingUrl
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the order
type Preferences struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferences `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Optional Preferences related to the reverse shipment logistics of the sku.
	ReverseTransportPreferences *TransportPreferences `pulumi:"reverseTransportPreferences"`
	// Preferences related to the Access Tier of storage accounts.
	StorageAccountAccessTierPreferences []string `pulumi:"storageAccountAccessTierPreferences"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// Defaults sets the appropriate defaults for Preferences
func (val *Preferences) Defaults() *Preferences {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EncryptionPreferences = tmp.EncryptionPreferences.Defaults()

	return &tmp
}

// PreferencesInput is an input type that accepts PreferencesArgs and PreferencesOutput values.
// You can construct a concrete instance of `PreferencesInput` via:
//
//	PreferencesArgs{...}
type PreferencesInput interface {
	pulumi.Input

	ToPreferencesOutput() PreferencesOutput
	ToPreferencesOutputWithContext(context.Context) PreferencesOutput
}

// Preferences related to the order
type PreferencesArgs struct {
	// Preferences related to the Encryption.
	EncryptionPreferences EncryptionPreferencesPtrInput `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion pulumi.StringArrayInput `pulumi:"preferredDataCenterRegion"`
	// Optional Preferences related to the reverse shipment logistics of the sku.
	ReverseTransportPreferences TransportPreferencesPtrInput `pulumi:"reverseTransportPreferences"`
	// Preferences related to the Access Tier of storage accounts.
	StorageAccountAccessTierPreferences pulumi.StringArrayInput `pulumi:"storageAccountAccessTierPreferences"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences TransportPreferencesPtrInput `pulumi:"transportPreferences"`
}

// Defaults sets the appropriate defaults for PreferencesArgs
func (val *PreferencesArgs) Defaults() *PreferencesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (i PreferencesArgs) ToPreferencesOutput() PreferencesOutput {
	return i.ToPreferencesOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput)
}

func (i PreferencesArgs) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput).ToPreferencesPtrOutputWithContext(ctx)
}

// PreferencesPtrInput is an input type that accepts PreferencesArgs, PreferencesPtr and PreferencesPtrOutput values.
// You can construct a concrete instance of `PreferencesPtrInput` via:
//
//	        PreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferencesPtrInput interface {
	pulumi.Input

	ToPreferencesPtrOutput() PreferencesPtrOutput
	ToPreferencesPtrOutputWithContext(context.Context) PreferencesPtrOutput
}

type preferencesPtrType PreferencesArgs

func PreferencesPtr(v *PreferencesArgs) PreferencesPtrInput {
	return (*preferencesPtrType)(v)
}

func (*preferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (i *preferencesPtrType) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferencesPtrType) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesOutput struct{ *pulumi.OutputState }

func (PreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (o PreferencesOutput) ToPreferencesOutput() PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o.ToPreferencesPtrOutputWithContext(context.Background())
}

func (o PreferencesOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Preferences) *Preferences {
		return &v
	}).(PreferencesPtrOutput)
}

// Preferences related to the Encryption.
func (o PreferencesOutput) EncryptionPreferences() EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *EncryptionPreferences { return v.EncryptionPreferences }).(EncryptionPreferencesPtrOutput)
}

// Preferred data center region.
func (o PreferencesOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Preferences) []string { return v.PreferredDataCenterRegion }).(pulumi.StringArrayOutput)
}

// Optional Preferences related to the reverse shipment logistics of the sku.
func (o PreferencesOutput) ReverseTransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *TransportPreferences { return v.ReverseTransportPreferences }).(TransportPreferencesPtrOutput)
}

// Preferences related to the Access Tier of storage accounts.
func (o PreferencesOutput) StorageAccountAccessTierPreferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Preferences) []string { return v.StorageAccountAccessTierPreferences }).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *TransportPreferences { return v.TransportPreferences }).(TransportPreferencesPtrOutput)
}

type PreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) Elem() PreferencesOutput {
	return o.ApplyT(func(v *Preferences) Preferences {
		if v != nil {
			return *v
		}
		var ret Preferences
		return ret
	}).(PreferencesOutput)
}

// Preferences related to the Encryption.
func (o PreferencesPtrOutput) EncryptionPreferences() EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *EncryptionPreferences {
		if v == nil {
			return nil
		}
		return v.EncryptionPreferences
	}).(EncryptionPreferencesPtrOutput)
}

// Preferred data center region.
func (o PreferencesPtrOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Preferences) []string {
		if v == nil {
			return nil
		}
		return v.PreferredDataCenterRegion
	}).(pulumi.StringArrayOutput)
}

// Optional Preferences related to the reverse shipment logistics of the sku.
func (o PreferencesPtrOutput) ReverseTransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *TransportPreferences {
		if v == nil {
			return nil
		}
		return v.ReverseTransportPreferences
	}).(TransportPreferencesPtrOutput)
}

// Preferences related to the Access Tier of storage accounts.
func (o PreferencesPtrOutput) StorageAccountAccessTierPreferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Preferences) []string {
		if v == nil {
			return nil
		}
		return v.StorageAccountAccessTierPreferences
	}).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesPtrOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *TransportPreferences {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesResponse struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferencesResponse `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Optional Preferences related to the reverse shipment logistics of the sku.
	ReverseTransportPreferences *TransportPreferencesResponse `pulumi:"reverseTransportPreferences"`
	// Preferences related to the Access Tier of storage accounts.
	StorageAccountAccessTierPreferences []string `pulumi:"storageAccountAccessTierPreferences"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// Defaults sets the appropriate defaults for PreferencesResponse
func (val *PreferencesResponse) Defaults() *PreferencesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EncryptionPreferences = tmp.EncryptionPreferences.Defaults()

	return &tmp
}

// Preferences related to the order
type PreferencesResponseOutput struct{ *pulumi.OutputState }

func (PreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return o
}

// Preferences related to the Encryption.
func (o PreferencesResponseOutput) EncryptionPreferences() EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *EncryptionPreferencesResponse { return v.EncryptionPreferences }).(EncryptionPreferencesResponsePtrOutput)
}

// Preferred data center region.
func (o PreferencesResponseOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PreferencesResponse) []string { return v.PreferredDataCenterRegion }).(pulumi.StringArrayOutput)
}

// Optional Preferences related to the reverse shipment logistics of the sku.
func (o PreferencesResponseOutput) ReverseTransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TransportPreferencesResponse { return v.ReverseTransportPreferences }).(TransportPreferencesResponsePtrOutput)
}

// Preferences related to the Access Tier of storage accounts.
func (o PreferencesResponseOutput) StorageAccountAccessTierPreferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PreferencesResponse) []string { return v.StorageAccountAccessTierPreferences }).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesResponseOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TransportPreferencesResponse { return v.TransportPreferences }).(TransportPreferencesResponsePtrOutput)
}

type PreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (PreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) Elem() PreferencesResponseOutput {
	return o.ApplyT(func(v *PreferencesResponse) PreferencesResponse {
		if v != nil {
			return *v
		}
		var ret PreferencesResponse
		return ret
	}).(PreferencesResponseOutput)
}

// Preferences related to the Encryption.
func (o PreferencesResponsePtrOutput) EncryptionPreferences() EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *EncryptionPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionPreferences
	}).(EncryptionPreferencesResponsePtrOutput)
}

// Preferred data center region.
func (o PreferencesResponsePtrOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreferencesResponse) []string {
		if v == nil {
			return nil
		}
		return v.PreferredDataCenterRegion
	}).(pulumi.StringArrayOutput)
}

// Optional Preferences related to the reverse shipment logistics of the sku.
func (o PreferencesResponsePtrOutput) ReverseTransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TransportPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.ReverseTransportPreferences
	}).(TransportPreferencesResponsePtrOutput)
}

// Preferences related to the Access Tier of storage accounts.
func (o PreferencesResponsePtrOutput) StorageAccountAccessTierPreferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreferencesResponse) []string {
		if v == nil {
			return nil
		}
		return v.StorageAccountAccessTierPreferences
	}).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesResponsePtrOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TransportPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesResponsePtrOutput)
}

// Msi identity details of the resource
type ResourceIdentity struct {
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentity
func (val *ResourceIdentity) Defaults() *ResourceIdentity {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "None"
		tmp.Type = &type_
	}
	return &tmp
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Msi identity details of the resource
type ResourceIdentityArgs struct {
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentityArgs
func (val *ResourceIdentityArgs) Defaults() *ResourceIdentityArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		tmp.Type = pulumi.StringPtr("None")
	}
	return &tmp
}
func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Identity type
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// Identity type
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponse struct {
	// Service Principal Id backing the Msi
	PrincipalId string `pulumi:"principalId"`
	// Home Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentityResponse
func (val *ResourceIdentityResponse) Defaults() *ResourceIdentityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "None"
		tmp.Type = &type_
	}
	return &tmp
}

// Msi identity details of the resource
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity type
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity type
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Reverse Shipping Address and contact details for a job.
type ReverseShippingDetails struct {
	// Contact Info.
	ContactDetails *ContactInfo `pulumi:"contactDetails"`
	// Shipping address where customer wishes to receive the device.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for ReverseShippingDetails
func (val *ReverseShippingDetails) Defaults() *ReverseShippingDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// ReverseShippingDetailsInput is an input type that accepts ReverseShippingDetailsArgs and ReverseShippingDetailsOutput values.
// You can construct a concrete instance of `ReverseShippingDetailsInput` via:
//
//	ReverseShippingDetailsArgs{...}
type ReverseShippingDetailsInput interface {
	pulumi.Input

	ToReverseShippingDetailsOutput() ReverseShippingDetailsOutput
	ToReverseShippingDetailsOutputWithContext(context.Context) ReverseShippingDetailsOutput
}

// Reverse Shipping Address and contact details for a job.
type ReverseShippingDetailsArgs struct {
	// Contact Info.
	ContactDetails ContactInfoPtrInput `pulumi:"contactDetails"`
	// Shipping address where customer wishes to receive the device.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for ReverseShippingDetailsArgs
func (val *ReverseShippingDetailsArgs) Defaults() *ReverseShippingDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ReverseShippingDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReverseShippingDetails)(nil)).Elem()
}

func (i ReverseShippingDetailsArgs) ToReverseShippingDetailsOutput() ReverseShippingDetailsOutput {
	return i.ToReverseShippingDetailsOutputWithContext(context.Background())
}

func (i ReverseShippingDetailsArgs) ToReverseShippingDetailsOutputWithContext(ctx context.Context) ReverseShippingDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReverseShippingDetailsOutput)
}

func (i ReverseShippingDetailsArgs) ToReverseShippingDetailsPtrOutput() ReverseShippingDetailsPtrOutput {
	return i.ToReverseShippingDetailsPtrOutputWithContext(context.Background())
}

func (i ReverseShippingDetailsArgs) ToReverseShippingDetailsPtrOutputWithContext(ctx context.Context) ReverseShippingDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReverseShippingDetailsOutput).ToReverseShippingDetailsPtrOutputWithContext(ctx)
}

// ReverseShippingDetailsPtrInput is an input type that accepts ReverseShippingDetailsArgs, ReverseShippingDetailsPtr and ReverseShippingDetailsPtrOutput values.
// You can construct a concrete instance of `ReverseShippingDetailsPtrInput` via:
//
//	        ReverseShippingDetailsArgs{...}
//
//	or:
//
//	        nil
type ReverseShippingDetailsPtrInput interface {
	pulumi.Input

	ToReverseShippingDetailsPtrOutput() ReverseShippingDetailsPtrOutput
	ToReverseShippingDetailsPtrOutputWithContext(context.Context) ReverseShippingDetailsPtrOutput
}

type reverseShippingDetailsPtrType ReverseShippingDetailsArgs

func ReverseShippingDetailsPtr(v *ReverseShippingDetailsArgs) ReverseShippingDetailsPtrInput {
	return (*reverseShippingDetailsPtrType)(v)
}

func (*reverseShippingDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReverseShippingDetails)(nil)).Elem()
}

func (i *reverseShippingDetailsPtrType) ToReverseShippingDetailsPtrOutput() ReverseShippingDetailsPtrOutput {
	return i.ToReverseShippingDetailsPtrOutputWithContext(context.Background())
}

func (i *reverseShippingDetailsPtrType) ToReverseShippingDetailsPtrOutputWithContext(ctx context.Context) ReverseShippingDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReverseShippingDetailsPtrOutput)
}

// Reverse Shipping Address and contact details for a job.
type ReverseShippingDetailsOutput struct{ *pulumi.OutputState }

func (ReverseShippingDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReverseShippingDetails)(nil)).Elem()
}

func (o ReverseShippingDetailsOutput) ToReverseShippingDetailsOutput() ReverseShippingDetailsOutput {
	return o
}

func (o ReverseShippingDetailsOutput) ToReverseShippingDetailsOutputWithContext(ctx context.Context) ReverseShippingDetailsOutput {
	return o
}

func (o ReverseShippingDetailsOutput) ToReverseShippingDetailsPtrOutput() ReverseShippingDetailsPtrOutput {
	return o.ToReverseShippingDetailsPtrOutputWithContext(context.Background())
}

func (o ReverseShippingDetailsOutput) ToReverseShippingDetailsPtrOutputWithContext(ctx context.Context) ReverseShippingDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReverseShippingDetails) *ReverseShippingDetails {
		return &v
	}).(ReverseShippingDetailsPtrOutput)
}

// Contact Info.
func (o ReverseShippingDetailsOutput) ContactDetails() ContactInfoPtrOutput {
	return o.ApplyT(func(v ReverseShippingDetails) *ContactInfo { return v.ContactDetails }).(ContactInfoPtrOutput)
}

// Shipping address where customer wishes to receive the device.
func (o ReverseShippingDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v ReverseShippingDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type ReverseShippingDetailsPtrOutput struct{ *pulumi.OutputState }

func (ReverseShippingDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReverseShippingDetails)(nil)).Elem()
}

func (o ReverseShippingDetailsPtrOutput) ToReverseShippingDetailsPtrOutput() ReverseShippingDetailsPtrOutput {
	return o
}

func (o ReverseShippingDetailsPtrOutput) ToReverseShippingDetailsPtrOutputWithContext(ctx context.Context) ReverseShippingDetailsPtrOutput {
	return o
}

func (o ReverseShippingDetailsPtrOutput) Elem() ReverseShippingDetailsOutput {
	return o.ApplyT(func(v *ReverseShippingDetails) ReverseShippingDetails {
		if v != nil {
			return *v
		}
		var ret ReverseShippingDetails
		return ret
	}).(ReverseShippingDetailsOutput)
}

// Contact Info.
func (o ReverseShippingDetailsPtrOutput) ContactDetails() ContactInfoPtrOutput {
	return o.ApplyT(func(v *ReverseShippingDetails) *ContactInfo {
		if v == nil {
			return nil
		}
		return v.ContactDetails
	}).(ContactInfoPtrOutput)
}

// Shipping address where customer wishes to receive the device.
func (o ReverseShippingDetailsPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *ReverseShippingDetails) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// Reverse Shipping Address and contact details for a job.
type ReverseShippingDetailsResponse struct {
	// Contact Info.
	ContactDetails *ContactInfoResponse `pulumi:"contactDetails"`
	// A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.
	// Read only field
	IsUpdated bool `pulumi:"isUpdated"`
	// Shipping address where customer wishes to receive the device.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for ReverseShippingDetailsResponse
func (val *ReverseShippingDetailsResponse) Defaults() *ReverseShippingDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// Reverse Shipping Address and contact details for a job.
type ReverseShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (ReverseShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReverseShippingDetailsResponse)(nil)).Elem()
}

func (o ReverseShippingDetailsResponseOutput) ToReverseShippingDetailsResponseOutput() ReverseShippingDetailsResponseOutput {
	return o
}

func (o ReverseShippingDetailsResponseOutput) ToReverseShippingDetailsResponseOutputWithContext(ctx context.Context) ReverseShippingDetailsResponseOutput {
	return o
}

// Contact Info.
func (o ReverseShippingDetailsResponseOutput) ContactDetails() ContactInfoResponsePtrOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) *ContactInfoResponse { return v.ContactDetails }).(ContactInfoResponsePtrOutput)
}

// A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.
// Read only field
func (o ReverseShippingDetailsResponseOutput) IsUpdated() pulumi.BoolOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) bool { return v.IsUpdated }).(pulumi.BoolOutput)
}

// Shipping address where customer wishes to receive the device.
func (o ReverseShippingDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v ReverseShippingDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type ReverseShippingDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ReverseShippingDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReverseShippingDetailsResponse)(nil)).Elem()
}

func (o ReverseShippingDetailsResponsePtrOutput) ToReverseShippingDetailsResponsePtrOutput() ReverseShippingDetailsResponsePtrOutput {
	return o
}

func (o ReverseShippingDetailsResponsePtrOutput) ToReverseShippingDetailsResponsePtrOutputWithContext(ctx context.Context) ReverseShippingDetailsResponsePtrOutput {
	return o
}

func (o ReverseShippingDetailsResponsePtrOutput) Elem() ReverseShippingDetailsResponseOutput {
	return o.ApplyT(func(v *ReverseShippingDetailsResponse) ReverseShippingDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ReverseShippingDetailsResponse
		return ret
	}).(ReverseShippingDetailsResponseOutput)
}

// Contact Info.
func (o ReverseShippingDetailsResponsePtrOutput) ContactDetails() ContactInfoResponsePtrOutput {
	return o.ApplyT(func(v *ReverseShippingDetailsResponse) *ContactInfoResponse {
		if v == nil {
			return nil
		}
		return v.ContactDetails
	}).(ContactInfoResponsePtrOutput)
}

// A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.
// Read only field
func (o ReverseShippingDetailsResponsePtrOutput) IsUpdated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReverseShippingDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsUpdated
	}).(pulumi.BoolPtrOutput)
}

// Shipping address where customer wishes to receive the device.
func (o ReverseShippingDetailsResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *ReverseShippingDetailsResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponse struct {
	// Password for the share.
	Password string `pulumi:"password"`
	// Name of the share.
	ShareName string `pulumi:"shareName"`
	// Type of the share.
	ShareType string `pulumi:"shareType"`
	// Access protocols supported on the device.
	SupportedAccessProtocols []string `pulumi:"supportedAccessProtocols"`
	// User name for the share.
	UserName string `pulumi:"userName"`
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponseOutput struct{ *pulumi.OutputState }

func (ShareCredentialDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareCredentialDetailsResponse)(nil)).Elem()
}

func (o ShareCredentialDetailsResponseOutput) ToShareCredentialDetailsResponseOutput() ShareCredentialDetailsResponseOutput {
	return o
}

func (o ShareCredentialDetailsResponseOutput) ToShareCredentialDetailsResponseOutputWithContext(ctx context.Context) ShareCredentialDetailsResponseOutput {
	return o
}

// Password for the share.
func (o ShareCredentialDetailsResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.Password }).(pulumi.StringOutput)
}

// Name of the share.
func (o ShareCredentialDetailsResponseOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.ShareName }).(pulumi.StringOutput)
}

// Type of the share.
func (o ShareCredentialDetailsResponseOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.ShareType }).(pulumi.StringOutput)
}

// Access protocols supported on the device.
func (o ShareCredentialDetailsResponseOutput) SupportedAccessProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) []string { return v.SupportedAccessProtocols }).(pulumi.StringArrayOutput)
}

// User name for the share.
func (o ShareCredentialDetailsResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type ShareCredentialDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ShareCredentialDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareCredentialDetailsResponse)(nil)).Elem()
}

func (o ShareCredentialDetailsResponseArrayOutput) ToShareCredentialDetailsResponseArrayOutput() ShareCredentialDetailsResponseArrayOutput {
	return o
}

func (o ShareCredentialDetailsResponseArrayOutput) ToShareCredentialDetailsResponseArrayOutputWithContext(ctx context.Context) ShareCredentialDetailsResponseArrayOutput {
	return o
}

func (o ShareCredentialDetailsResponseArrayOutput) Index(i pulumi.IntInput) ShareCredentialDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareCredentialDetailsResponse {
		return vs[0].([]ShareCredentialDetailsResponse)[vs[1].(int)]
	}).(ShareCredentialDetailsResponseOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Flag to indicate if customer has chosen to skip default address validation
	SkipAddressValidation *bool `pulumi:"skipAddressValidation"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Tax Identification Number
	TaxIdentificationNumber *string `pulumi:"taxIdentificationNumber"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddress
func (val *ShippingAddress) Defaults() *ShippingAddress {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AddressType == nil {
		addressType_ := "None"
		tmp.AddressType = &addressType_
	}
	return &tmp
}

// ShippingAddressInput is an input type that accepts ShippingAddressArgs and ShippingAddressOutput values.
// You can construct a concrete instance of `ShippingAddressInput` via:
//
//	ShippingAddressArgs{...}
type ShippingAddressInput interface {
	pulumi.Input

	ToShippingAddressOutput() ShippingAddressOutput
	ToShippingAddressOutputWithContext(context.Context) ShippingAddressOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Flag to indicate if customer has chosen to skip default address validation
	SkipAddressValidation pulumi.BoolPtrInput `pulumi:"skipAddressValidation"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Tax Identification Number
	TaxIdentificationNumber pulumi.StringPtrInput `pulumi:"taxIdentificationNumber"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddressArgs
func (val *ShippingAddressArgs) Defaults() *ShippingAddressArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AddressType == nil {
		tmp.AddressType = pulumi.StringPtr("None")
	}
	return &tmp
}
func (ShippingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (i ShippingAddressArgs) ToShippingAddressOutput() ShippingAddressOutput {
	return i.ToShippingAddressOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput)
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput).ToShippingAddressPtrOutputWithContext(ctx)
}

// ShippingAddressPtrInput is an input type that accepts ShippingAddressArgs, ShippingAddressPtr and ShippingAddressPtrOutput values.
// You can construct a concrete instance of `ShippingAddressPtrInput` via:
//
//	        ShippingAddressArgs{...}
//
//	or:
//
//	        nil
type ShippingAddressPtrInput interface {
	pulumi.Input

	ToShippingAddressPtrOutput() ShippingAddressPtrOutput
	ToShippingAddressPtrOutputWithContext(context.Context) ShippingAddressPtrOutput
}

type shippingAddressPtrType ShippingAddressArgs

func ShippingAddressPtr(v *ShippingAddressArgs) ShippingAddressPtrInput {
	return (*shippingAddressPtrType)(v)
}

func (*shippingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressOutput struct{ *pulumi.OutputState }

func (ShippingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressOutput) ToShippingAddressOutput() ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShippingAddress) *ShippingAddress {
		return &v
	}).(ShippingAddressPtrOutput)
}

// Type of address.
func (o ShippingAddressOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Flag to indicate if customer has chosen to skip default address validation
func (o ShippingAddressOutput) SkipAddressValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *bool { return v.SkipAddressValidation }).(pulumi.BoolPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Tax Identification Number
func (o ShippingAddressOutput) TaxIdentificationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.TaxIdentificationNumber }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressPtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) Elem() ShippingAddressOutput {
	return o.ApplyT(func(v *ShippingAddress) ShippingAddress {
		if v != nil {
			return *v
		}
		var ret ShippingAddress
		return ret
	}).(ShippingAddressOutput)
}

// Type of address.
func (o ShippingAddressPtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Flag to indicate if customer has chosen to skip default address validation
func (o ShippingAddressPtrOutput) SkipAddressValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *bool {
		if v == nil {
			return nil
		}
		return v.SkipAddressValidation
	}).(pulumi.BoolPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressPtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Tax Identification Number
func (o ShippingAddressPtrOutput) TaxIdentificationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.TaxIdentificationNumber
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressPtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Flag to indicate if customer has chosen to skip default address validation
	SkipAddressValidation *bool `pulumi:"skipAddressValidation"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Tax Identification Number
	TaxIdentificationNumber *string `pulumi:"taxIdentificationNumber"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddressResponse
func (val *ShippingAddressResponse) Defaults() *ShippingAddressResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AddressType == nil {
		addressType_ := "None"
		tmp.AddressType = &addressType_
	}
	return &tmp
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return o
}

// Type of address.
func (o ShippingAddressResponseOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponseOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressResponseOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Flag to indicate if customer has chosen to skip default address validation
func (o ShippingAddressResponseOutput) SkipAddressValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *bool { return v.SkipAddressValidation }).(pulumi.BoolPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponseOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponseOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Tax Identification Number
func (o ShippingAddressResponseOutput) TaxIdentificationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.TaxIdentificationNumber }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponseOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) Elem() ShippingAddressResponseOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) ShippingAddressResponse {
		if v != nil {
			return *v
		}
		var ret ShippingAddressResponse
		return ret
	}).(ShippingAddressResponseOutput)
}

// Type of address.
func (o ShippingAddressResponsePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Flag to indicate if customer has chosen to skip default address validation
func (o ShippingAddressResponsePtrOutput) SkipAddressValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SkipAddressValidation
	}).(pulumi.BoolPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponsePtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Tax Identification Number
func (o ShippingAddressResponsePtrOutput) TaxIdentificationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.TaxIdentificationNumber
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponsePtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type Sku struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The Sku.
type SkuArgs struct {
	// The display name of the sku.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The sku family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The Sku.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The display name of the sku.
func (o SkuOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The Sku.
type SkuResponse struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// The Sku.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The display name of the sku.
func (o SkuResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Details for the storage account.
type StorageAccountDetails struct {
	// Account Type of the data to be transferred.
	// Expected value is 'StorageAccount'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for StorageAccountDetails
func (val *StorageAccountDetails) Defaults() *StorageAccountDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// StorageAccountDetailsInput is an input type that accepts StorageAccountDetailsArgs and StorageAccountDetailsOutput values.
// You can construct a concrete instance of `StorageAccountDetailsInput` via:
//
//	StorageAccountDetailsArgs{...}
type StorageAccountDetailsInput interface {
	pulumi.Input

	ToStorageAccountDetailsOutput() StorageAccountDetailsOutput
	ToStorageAccountDetailsOutputWithContext(context.Context) StorageAccountDetailsOutput
}

// Details for the storage account.
type StorageAccountDetailsArgs struct {
	// Account Type of the data to be transferred.
	// Expected value is 'StorageAccount'.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for StorageAccountDetailsArgs
func (val *StorageAccountDetailsArgs) Defaults() *StorageAccountDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataAccountType == nil {
		tmp.DataAccountType = pulumi.String("StorageAccount")
	}
	return &tmp
}
func (StorageAccountDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return i.ToStorageAccountDetailsOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsOutput)
}

// Details for the storage account.
type StorageAccountDetailsOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return o
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return o
}

// Account Type of the data to be transferred.
// Expected value is 'StorageAccount'.
func (o StorageAccountDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o StorageAccountDetailsOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountDetails) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Storage Account Resource Id.
func (o StorageAccountDetailsOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetails) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// Details for the storage account.
type StorageAccountDetailsResponse struct {
	// Account Type of the data to be transferred.
	// Expected value is 'StorageAccount'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for StorageAccountDetailsResponse
func (val *StorageAccountDetailsResponse) Defaults() *StorageAccountDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details for the storage account.
type StorageAccountDetailsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput {
	return o
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutputWithContext(ctx context.Context) StorageAccountDetailsResponseOutput {
	return o
}

// Account Type of the data to be transferred.
// Expected value is 'StorageAccount'.
func (o StorageAccountDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Storage Account Resource Id.
func (o StorageAccountDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// Provides details about resource creation and update time
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC)
	CreatedAt string `pulumi:"createdAt"`
	// A string identifier for the identity that created the resource
	CreatedBy string `pulumi:"createdBy"`
	// The type of identity that created the resource: user, application, managedIdentity
	CreatedByType string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt string `pulumi:"lastModifiedAt"`
	// A string identifier for the identity that last modified the resource
	LastModifiedBy string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource: user, application, managedIdentity
	LastModifiedByType string `pulumi:"lastModifiedByType"`
}

// Provides details about resource creation and update time
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC)
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A string identifier for the identity that created the resource
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The type of identity that created the resource: user, application, managedIdentity
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedByType }).(pulumi.StringOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedAt }).(pulumi.StringOutput)
}

// A string identifier for the identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedBy }).(pulumi.StringOutput)
}

// The type of identity that last modified the resource: user, application, managedIdentity
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedByType }).(pulumi.StringOutput)
}

// Details to transfer all data.
type TransferAllDetails struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// Defaults sets the appropriate defaults for TransferAllDetails
func (val *TransferAllDetails) Defaults() *TransferAllDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// TransferAllDetailsInput is an input type that accepts TransferAllDetailsArgs and TransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferAllDetailsInput` via:
//
//	TransferAllDetailsArgs{...}
type TransferAllDetailsInput interface {
	pulumi.Input

	ToTransferAllDetailsOutput() TransferAllDetailsOutput
	ToTransferAllDetailsOutputWithContext(context.Context) TransferAllDetailsOutput
}

// Details to transfer all data.
type TransferAllDetailsArgs struct {
	// Type of the account of data
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs pulumi.BoolPtrInput `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles pulumi.BoolPtrInput `pulumi:"transferAllFiles"`
}

// Defaults sets the appropriate defaults for TransferAllDetailsArgs
func (val *TransferAllDetailsArgs) Defaults() *TransferAllDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataAccountType == nil {
		tmp.DataAccountType = pulumi.String("StorageAccount")
	}
	return &tmp
}
func (TransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetails)(nil)).Elem()
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsOutput() TransferAllDetailsOutput {
	return i.ToTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsOutputWithContext(ctx context.Context) TransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsOutput)
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return i.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsOutput).ToTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferAllDetailsPtrInput is an input type that accepts TransferAllDetailsArgs, TransferAllDetailsPtr and TransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferAllDetailsPtrInput` via:
//
//	        TransferAllDetailsArgs{...}
//
//	or:
//
//	        nil
type TransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput
	ToTransferAllDetailsPtrOutputWithContext(context.Context) TransferAllDetailsPtrOutput
}

type transferAllDetailsPtrType TransferAllDetailsArgs

func TransferAllDetailsPtr(v *TransferAllDetailsArgs) TransferAllDetailsPtrInput {
	return (*transferAllDetailsPtrType)(v)
}

func (*transferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetails)(nil)).Elem()
}

func (i *transferAllDetailsPtrType) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return i.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferAllDetailsPtrType) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsPtrOutput)
}

// Details to transfer all data.
type TransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetails)(nil)).Elem()
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsOutput() TransferAllDetailsOutput {
	return o
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsOutputWithContext(ctx context.Context) TransferAllDetailsOutput {
	return o
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return o.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferAllDetails) *TransferAllDetails {
		return &v
	}).(TransferAllDetailsPtrOutput)
}

// Type of the account of data
func (o TransferAllDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferAllDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetails) *bool { return v.TransferAllBlobs }).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetails) *bool { return v.TransferAllFiles }).(pulumi.BoolPtrOutput)
}

type TransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetails)(nil)).Elem()
}

func (o TransferAllDetailsPtrOutput) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return o
}

func (o TransferAllDetailsPtrOutput) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return o
}

func (o TransferAllDetailsPtrOutput) Elem() TransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferAllDetails) TransferAllDetails {
		if v != nil {
			return *v
		}
		var ret TransferAllDetails
		return ret
	}).(TransferAllDetailsOutput)
}

// Type of the account of data
func (o TransferAllDetailsPtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferAllDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsPtrOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetails) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllBlobs
	}).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsPtrOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetails) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllFiles
	}).(pulumi.BoolPtrOutput)
}

// Details to transfer all data.
type TransferAllDetailsResponse struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// Defaults sets the appropriate defaults for TransferAllDetailsResponse
func (val *TransferAllDetailsResponse) Defaults() *TransferAllDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details to transfer all data.
type TransferAllDetailsResponseOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetailsResponse)(nil)).Elem()
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponseOutput() TransferAllDetailsResponseOutput {
	return o
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponseOutputWithContext(ctx context.Context) TransferAllDetailsResponseOutput {
	return o
}

// Type of the account of data
func (o TransferAllDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsResponseOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *bool { return v.TransferAllBlobs }).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsResponseOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *bool { return v.TransferAllFiles }).(pulumi.BoolPtrOutput)
}

type TransferAllDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetailsResponse)(nil)).Elem()
}

func (o TransferAllDetailsResponsePtrOutput) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return o
}

func (o TransferAllDetailsResponsePtrOutput) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return o
}

func (o TransferAllDetailsResponsePtrOutput) Elem() TransferAllDetailsResponseOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) TransferAllDetailsResponse {
		if v != nil {
			return *v
		}
		var ret TransferAllDetailsResponse
		return ret
	}).(TransferAllDetailsResponseOutput)
}

// Type of the account of data
func (o TransferAllDetailsResponsePtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsResponsePtrOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllBlobs
	}).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsResponsePtrOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllFiles
	}).(pulumi.BoolPtrOutput)
}

// Configuration for defining the transfer of data.
type TransferConfiguration struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// Defaults sets the appropriate defaults for TransferConfiguration
func (val *TransferConfiguration) Defaults() *TransferConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TransferAllDetails = tmp.TransferAllDetails.Defaults()

	tmp.TransferFilterDetails = tmp.TransferFilterDetails.Defaults()

	return &tmp
}

// TransferConfigurationInput is an input type that accepts TransferConfigurationArgs and TransferConfigurationOutput values.
// You can construct a concrete instance of `TransferConfigurationInput` via:
//
//	TransferConfigurationArgs{...}
type TransferConfigurationInput interface {
	pulumi.Input

	ToTransferConfigurationOutput() TransferConfigurationOutput
	ToTransferConfigurationOutputWithContext(context.Context) TransferConfigurationOutput
}

// Configuration for defining the transfer of data.
type TransferConfigurationArgs struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails TransferConfigurationTransferAllDetailsPtrInput `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType pulumi.StringInput `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails TransferConfigurationTransferFilterDetailsPtrInput `pulumi:"transferFilterDetails"`
}

// Defaults sets the appropriate defaults for TransferConfigurationArgs
func (val *TransferConfigurationArgs) Defaults() *TransferConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (TransferConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfiguration)(nil)).Elem()
}

func (i TransferConfigurationArgs) ToTransferConfigurationOutput() TransferConfigurationOutput {
	return i.ToTransferConfigurationOutputWithContext(context.Background())
}

func (i TransferConfigurationArgs) ToTransferConfigurationOutputWithContext(ctx context.Context) TransferConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationOutput)
}

// Configuration for defining the transfer of data.
type TransferConfigurationOutput struct{ *pulumi.OutputState }

func (TransferConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfiguration)(nil)).Elem()
}

func (o TransferConfigurationOutput) ToTransferConfigurationOutput() TransferConfigurationOutput {
	return o
}

func (o TransferConfigurationOutput) ToTransferConfigurationOutputWithContext(ctx context.Context) TransferConfigurationOutput {
	return o
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
func (o TransferConfigurationOutput) TransferAllDetails() TransferConfigurationTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfiguration) *TransferConfigurationTransferAllDetails { return v.TransferAllDetails }).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Type of the configuration for transfer.
func (o TransferConfigurationOutput) TransferConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferConfiguration) string { return v.TransferConfigurationType }).(pulumi.StringOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
func (o TransferConfigurationOutput) TransferFilterDetails() TransferConfigurationTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfiguration) *TransferConfigurationTransferFilterDetails {
		return v.TransferFilterDetails
	}).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponse struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationResponseTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationResponseTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// Defaults sets the appropriate defaults for TransferConfigurationResponse
func (val *TransferConfigurationResponse) Defaults() *TransferConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TransferAllDetails = tmp.TransferAllDetails.Defaults()

	tmp.TransferFilterDetails = tmp.TransferFilterDetails.Defaults()

	return &tmp
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponse)(nil)).Elem()
}

func (o TransferConfigurationResponseOutput) ToTransferConfigurationResponseOutput() TransferConfigurationResponseOutput {
	return o
}

func (o TransferConfigurationResponseOutput) ToTransferConfigurationResponseOutputWithContext(ctx context.Context) TransferConfigurationResponseOutput {
	return o
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
func (o TransferConfigurationResponseOutput) TransferAllDetails() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) *TransferConfigurationResponseTransferAllDetails {
		return v.TransferAllDetails
	}).(TransferConfigurationResponseTransferAllDetailsPtrOutput)
}

// Type of the configuration for transfer.
func (o TransferConfigurationResponseOutput) TransferConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) string { return v.TransferConfigurationType }).(pulumi.StringOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
func (o TransferConfigurationResponseOutput) TransferFilterDetails() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) *TransferConfigurationResponseTransferFilterDetails {
		return v.TransferFilterDetails
	}).(TransferConfigurationResponseTransferFilterDetailsPtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetailsResponse `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationResponseTransferAllDetails
func (val *TransferConfigurationResponseTransferAllDetails) Defaults() *TransferConfigurationResponseTransferAllDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsOutput() TransferConfigurationResponseTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsOutput {
	return o
}

// Details to transfer all data.
func (o TransferConfigurationResponseTransferAllDetailsOutput) Include() TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferAllDetails) *TransferAllDetailsResponse { return v.Include }).(TransferAllDetailsResponsePtrOutput)
}

type TransferConfigurationResponseTransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) Elem() TransferConfigurationResponseTransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferAllDetails) TransferConfigurationResponseTransferAllDetails {
		if v != nil {
			return *v
		}
		var ret TransferConfigurationResponseTransferAllDetails
		return ret
	}).(TransferConfigurationResponseTransferAllDetailsOutput)
}

// Details to transfer all data.
func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) Include() TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferAllDetails) *TransferAllDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferAllDetailsResponsePtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetailsResponse `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationResponseTransferFilterDetails
func (val *TransferConfigurationResponseTransferFilterDetails) Defaults() *TransferConfigurationResponseTransferFilterDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsOutput() TransferConfigurationResponseTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsOutput {
	return o
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationResponseTransferFilterDetailsOutput) Include() TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferFilterDetails) *TransferFilterDetailsResponse {
		return v.Include
	}).(TransferFilterDetailsResponsePtrOutput)
}

type TransferConfigurationResponseTransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) Elem() TransferConfigurationResponseTransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferFilterDetails) TransferConfigurationResponseTransferFilterDetails {
		if v != nil {
			return *v
		}
		var ret TransferConfigurationResponseTransferFilterDetails
		return ret
	}).(TransferConfigurationResponseTransferFilterDetailsOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) Include() TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferFilterDetails) *TransferFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferFilterDetailsResponsePtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetails `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationTransferAllDetails
func (val *TransferConfigurationTransferAllDetails) Defaults() *TransferConfigurationTransferAllDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// TransferConfigurationTransferAllDetailsInput is an input type that accepts TransferConfigurationTransferAllDetailsArgs and TransferConfigurationTransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferAllDetailsInput` via:
//
//	TransferConfigurationTransferAllDetailsArgs{...}
type TransferConfigurationTransferAllDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput
	ToTransferConfigurationTransferAllDetailsOutputWithContext(context.Context) TransferConfigurationTransferAllDetailsOutput
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetailsArgs struct {
	// Details to transfer all data.
	Include TransferAllDetailsPtrInput `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationTransferAllDetailsArgs
func (val *TransferConfigurationTransferAllDetailsArgs) Defaults() *TransferConfigurationTransferAllDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (TransferConfigurationTransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput {
	return i.ToTransferConfigurationTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsOutput)
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsOutput).ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationTransferAllDetailsPtrInput is an input type that accepts TransferConfigurationTransferAllDetailsArgs, TransferConfigurationTransferAllDetailsPtr and TransferConfigurationTransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferAllDetailsPtrInput` via:
//
//	        TransferConfigurationTransferAllDetailsArgs{...}
//
//	or:
//
//	        nil
type TransferConfigurationTransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput
	ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Context) TransferConfigurationTransferAllDetailsPtrOutput
}

type transferConfigurationTransferAllDetailsPtrType TransferConfigurationTransferAllDetailsArgs

func TransferConfigurationTransferAllDetailsPtr(v *TransferConfigurationTransferAllDetailsArgs) TransferConfigurationTransferAllDetailsPtrInput {
	return (*transferConfigurationTransferAllDetailsPtrType)(v)
}

func (*transferConfigurationTransferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (i *transferConfigurationTransferAllDetailsPtrType) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationTransferAllDetailsPtrType) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return o.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferConfigurationTransferAllDetails) *TransferConfigurationTransferAllDetails {
		return &v
	}).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Details to transfer all data.
func (o TransferConfigurationTransferAllDetailsOutput) Include() TransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationTransferAllDetails) *TransferAllDetails { return v.Include }).(TransferAllDetailsPtrOutput)
}

type TransferConfigurationTransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferAllDetailsPtrOutput) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsPtrOutput) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsPtrOutput) Elem() TransferConfigurationTransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferAllDetails) TransferConfigurationTransferAllDetails {
		if v != nil {
			return *v
		}
		var ret TransferConfigurationTransferAllDetails
		return ret
	}).(TransferConfigurationTransferAllDetailsOutput)
}

// Details to transfer all data.
func (o TransferConfigurationTransferAllDetailsPtrOutput) Include() TransferAllDetailsPtrOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferAllDetails) *TransferAllDetails {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferAllDetailsPtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetails `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationTransferFilterDetails
func (val *TransferConfigurationTransferFilterDetails) Defaults() *TransferConfigurationTransferFilterDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// TransferConfigurationTransferFilterDetailsInput is an input type that accepts TransferConfigurationTransferFilterDetailsArgs and TransferConfigurationTransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferFilterDetailsInput` via:
//
//	TransferConfigurationTransferFilterDetailsArgs{...}
type TransferConfigurationTransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput
	ToTransferConfigurationTransferFilterDetailsOutputWithContext(context.Context) TransferConfigurationTransferFilterDetailsOutput
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetailsArgs struct {
	// Details of the filtering the transfer of data.
	Include TransferFilterDetailsPtrInput `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationTransferFilterDetailsArgs
func (val *TransferConfigurationTransferFilterDetailsArgs) Defaults() *TransferConfigurationTransferFilterDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (TransferConfigurationTransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput {
	return i.ToTransferConfigurationTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsOutput)
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsOutput).ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationTransferFilterDetailsPtrInput is an input type that accepts TransferConfigurationTransferFilterDetailsArgs, TransferConfigurationTransferFilterDetailsPtr and TransferConfigurationTransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferFilterDetailsPtrInput` via:
//
//	        TransferConfigurationTransferFilterDetailsArgs{...}
//
//	or:
//
//	        nil
type TransferConfigurationTransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput
	ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Context) TransferConfigurationTransferFilterDetailsPtrOutput
}

type transferConfigurationTransferFilterDetailsPtrType TransferConfigurationTransferFilterDetailsArgs

func TransferConfigurationTransferFilterDetailsPtr(v *TransferConfigurationTransferFilterDetailsArgs) TransferConfigurationTransferFilterDetailsPtrInput {
	return (*transferConfigurationTransferFilterDetailsPtrType)(v)
}

func (*transferConfigurationTransferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (i *transferConfigurationTransferFilterDetailsPtrType) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationTransferFilterDetailsPtrType) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return o.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferConfigurationTransferFilterDetails) *TransferConfigurationTransferFilterDetails {
		return &v
	}).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationTransferFilterDetailsOutput) Include() TransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationTransferFilterDetails) *TransferFilterDetails { return v.Include }).(TransferFilterDetailsPtrOutput)
}

type TransferConfigurationTransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferFilterDetailsPtrOutput) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsPtrOutput) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsPtrOutput) Elem() TransferConfigurationTransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferFilterDetails) TransferConfigurationTransferFilterDetails {
		if v != nil {
			return *v
		}
		var ret TransferConfigurationTransferFilterDetails
		return ret
	}).(TransferConfigurationTransferFilterDetailsOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationTransferFilterDetailsPtrOutput) Include() TransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferFilterDetails) *TransferFilterDetails {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetails struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetails `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetails `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetails `pulumi:"filterFileDetails"`
}

// Defaults sets the appropriate defaults for TransferFilterDetails
func (val *TransferFilterDetails) Defaults() *TransferFilterDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// TransferFilterDetailsInput is an input type that accepts TransferFilterDetailsArgs and TransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferFilterDetailsInput` via:
//
//	TransferFilterDetailsArgs{...}
type TransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferFilterDetailsOutput() TransferFilterDetailsOutput
	ToTransferFilterDetailsOutputWithContext(context.Context) TransferFilterDetailsOutput
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsArgs struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails AzureFileFilterDetailsPtrInput `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails BlobFilterDetailsPtrInput `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails FilterFileDetailsArrayInput `pulumi:"filterFileDetails"`
}

// Defaults sets the appropriate defaults for TransferFilterDetailsArgs
func (val *TransferFilterDetailsArgs) Defaults() *TransferFilterDetailsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DataAccountType == nil {
		tmp.DataAccountType = pulumi.String("StorageAccount")
	}
	return &tmp
}
func (TransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetails)(nil)).Elem()
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsOutput() TransferFilterDetailsOutput {
	return i.ToTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsOutputWithContext(ctx context.Context) TransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsOutput)
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return i.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsOutput).ToTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferFilterDetailsPtrInput is an input type that accepts TransferFilterDetailsArgs, TransferFilterDetailsPtr and TransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferFilterDetailsPtrInput` via:
//
//	        TransferFilterDetailsArgs{...}
//
//	or:
//
//	        nil
type TransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput
	ToTransferFilterDetailsPtrOutputWithContext(context.Context) TransferFilterDetailsPtrOutput
}

type transferFilterDetailsPtrType TransferFilterDetailsArgs

func TransferFilterDetailsPtr(v *TransferFilterDetailsArgs) TransferFilterDetailsPtrInput {
	return (*transferFilterDetailsPtrType)(v)
}

func (*transferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetails)(nil)).Elem()
}

func (i *transferFilterDetailsPtrType) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return i.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferFilterDetailsPtrType) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetails)(nil)).Elem()
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsOutput() TransferFilterDetailsOutput {
	return o
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsOutputWithContext(ctx context.Context) TransferFilterDetailsOutput {
	return o
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return o.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferFilterDetails) *TransferFilterDetails {
		return &v
	}).(TransferFilterDetailsPtrOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsOutput) AzureFileFilterDetails() AzureFileFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferFilterDetails) *AzureFileFilterDetails { return v.AzureFileFilterDetails }).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsOutput) BlobFilterDetails() BlobFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferFilterDetails) *BlobFilterDetails { return v.BlobFilterDetails }).(BlobFilterDetailsPtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferFilterDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsOutput) FilterFileDetails() FilterFileDetailsArrayOutput {
	return o.ApplyT(func(v TransferFilterDetails) []FilterFileDetails { return v.FilterFileDetails }).(FilterFileDetailsArrayOutput)
}

type TransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetails)(nil)).Elem()
}

func (o TransferFilterDetailsPtrOutput) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return o
}

func (o TransferFilterDetailsPtrOutput) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return o
}

func (o TransferFilterDetailsPtrOutput) Elem() TransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferFilterDetails) TransferFilterDetails {
		if v != nil {
			return *v
		}
		var ret TransferFilterDetails
		return ret
	}).(TransferFilterDetailsOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsPtrOutput) AzureFileFilterDetails() AzureFileFilterDetailsPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetails) *AzureFileFilterDetails {
		if v == nil {
			return nil
		}
		return v.AzureFileFilterDetails
	}).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsPtrOutput) BlobFilterDetails() BlobFilterDetailsPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetails) *BlobFilterDetails {
		if v == nil {
			return nil
		}
		return v.BlobFilterDetails
	}).(BlobFilterDetailsPtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsPtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsPtrOutput) FilterFileDetails() FilterFileDetailsArrayOutput {
	return o.ApplyT(func(v *TransferFilterDetails) []FilterFileDetails {
		if v == nil {
			return nil
		}
		return v.FilterFileDetails
	}).(FilterFileDetailsArrayOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponse struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetailsResponse `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetailsResponse `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetailsResponse `pulumi:"filterFileDetails"`
}

// Defaults sets the appropriate defaults for TransferFilterDetailsResponse
func (val *TransferFilterDetailsResponse) Defaults() *TransferFilterDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetailsResponse)(nil)).Elem()
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponseOutput() TransferFilterDetailsResponseOutput {
	return o
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponseOutputWithContext(ctx context.Context) TransferFilterDetailsResponseOutput {
	return o
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsResponseOutput) AzureFileFilterDetails() AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *AzureFileFilterDetailsResponse { return v.AzureFileFilterDetails }).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsResponseOutput) BlobFilterDetails() BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *BlobFilterDetailsResponse { return v.BlobFilterDetails }).(BlobFilterDetailsResponsePtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsResponseOutput) FilterFileDetails() FilterFileDetailsResponseArrayOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) []FilterFileDetailsResponse { return v.FilterFileDetails }).(FilterFileDetailsResponseArrayOutput)
}

type TransferFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetailsResponse)(nil)).Elem()
}

func (o TransferFilterDetailsResponsePtrOutput) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return o
}

func (o TransferFilterDetailsResponsePtrOutput) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return o
}

func (o TransferFilterDetailsResponsePtrOutput) Elem() TransferFilterDetailsResponseOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) TransferFilterDetailsResponse {
		if v != nil {
			return *v
		}
		var ret TransferFilterDetailsResponse
		return ret
	}).(TransferFilterDetailsResponseOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsResponsePtrOutput) AzureFileFilterDetails() AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *AzureFileFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AzureFileFilterDetails
	}).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsResponsePtrOutput) BlobFilterDetails() BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *BlobFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.BlobFilterDetails
	}).(BlobFilterDetailsResponsePtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsResponsePtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsResponsePtrOutput) FilterFileDetails() FilterFileDetailsResponseArrayOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) []FilterFileDetailsResponse {
		if v == nil {
			return nil
		}
		return v.FilterFileDetails
	}).(FilterFileDetailsResponseArrayOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesInput is an input type that accepts TransportPreferencesArgs and TransportPreferencesOutput values.
// You can construct a concrete instance of `TransportPreferencesInput` via:
//
//	TransportPreferencesArgs{...}
type TransportPreferencesInput interface {
	pulumi.Input

	ToTransportPreferencesOutput() TransportPreferencesOutput
	ToTransportPreferencesOutputWithContext(context.Context) TransportPreferencesOutput
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return i.ToTransportPreferencesOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput)
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput).ToTransportPreferencesPtrOutputWithContext(ctx)
}

// TransportPreferencesPtrInput is an input type that accepts TransportPreferencesArgs, TransportPreferencesPtr and TransportPreferencesPtrOutput values.
// You can construct a concrete instance of `TransportPreferencesPtrInput` via:
//
//	        TransportPreferencesArgs{...}
//
//	or:
//
//	        nil
type TransportPreferencesPtrInput interface {
	pulumi.Input

	ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput
	ToTransportPreferencesPtrOutputWithContext(context.Context) TransportPreferencesPtrOutput
}

type transportPreferencesPtrType TransportPreferencesArgs

func TransportPreferencesPtr(v *TransportPreferencesArgs) TransportPreferencesPtrInput {
	return (*transportPreferencesPtrType)(v)
}

func (*transportPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesOutput struct{ *pulumi.OutputState }

func (TransportPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransportPreferences) *TransportPreferences {
		return &v
	}).(TransportPreferencesPtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferences) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesPtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) Elem() TransportPreferencesOutput {
	return o.ApplyT(func(v *TransportPreferences) TransportPreferences {
		if v != nil {
			return *v
		}
		var ret TransportPreferences
		return ret
	}).(TransportPreferencesOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesPtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferences) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponse struct {
	// Read only property which indicates whether transport preferences has been updated or not after device is prepared.
	IsUpdated bool `pulumi:"isUpdated"`
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponseOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return o
}

// Read only property which indicates whether transport preferences has been updated or not after device is prepared.
func (o TransportPreferencesResponseOutput) IsUpdated() pulumi.BoolOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) bool { return v.IsUpdated }).(pulumi.BoolOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponseOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) Elem() TransportPreferencesResponseOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) TransportPreferencesResponse {
		if v != nil {
			return *v
		}
		var ret TransportPreferencesResponse
		return ret
	}).(TransportPreferencesResponseOutput)
}

// Read only property which indicates whether transport preferences has been updated or not after device is prepared.
func (o TransportPreferencesResponsePtrOutput) IsUpdated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsUpdated
	}).(pulumi.BoolPtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponsePtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponse struct {
	// Name of the job.
	JobName string `pulumi:"jobName"`
	// Secrets related to this job.
	JobSecrets interface{} `pulumi:"jobSecrets"`
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutput() UnencryptedCredentialsResponseOutput {
	return o
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseOutput {
	return o
}

// Name of the job.
func (o UnencryptedCredentialsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// Secrets related to this job.
func (o UnencryptedCredentialsResponseOutput) JobSecrets() pulumi.AnyOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) interface{} { return v.JobSecrets }).(pulumi.AnyOutput)
}

type UnencryptedCredentialsResponseArrayOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutput() UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) Index(i pulumi.IntInput) UnencryptedCredentialsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnencryptedCredentialsResponse {
		return vs[0].([]UnencryptedCredentialsResponse)[vs[1].(int)]
	}).(UnencryptedCredentialsResponseOutput)
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponse struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// User assigned identity properties.
type UserAssignedProperties struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId *string `pulumi:"resourceId"`
}

// UserAssignedPropertiesInput is an input type that accepts UserAssignedPropertiesArgs and UserAssignedPropertiesOutput values.
// You can construct a concrete instance of `UserAssignedPropertiesInput` via:
//
//	UserAssignedPropertiesArgs{...}
type UserAssignedPropertiesInput interface {
	pulumi.Input

	ToUserAssignedPropertiesOutput() UserAssignedPropertiesOutput
	ToUserAssignedPropertiesOutputWithContext(context.Context) UserAssignedPropertiesOutput
}

// User assigned identity properties.
type UserAssignedPropertiesArgs struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (UserAssignedPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedProperties)(nil)).Elem()
}

func (i UserAssignedPropertiesArgs) ToUserAssignedPropertiesOutput() UserAssignedPropertiesOutput {
	return i.ToUserAssignedPropertiesOutputWithContext(context.Background())
}

func (i UserAssignedPropertiesArgs) ToUserAssignedPropertiesOutputWithContext(ctx context.Context) UserAssignedPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedPropertiesOutput)
}

func (i UserAssignedPropertiesArgs) ToUserAssignedPropertiesPtrOutput() UserAssignedPropertiesPtrOutput {
	return i.ToUserAssignedPropertiesPtrOutputWithContext(context.Background())
}

func (i UserAssignedPropertiesArgs) ToUserAssignedPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedPropertiesOutput).ToUserAssignedPropertiesPtrOutputWithContext(ctx)
}

// UserAssignedPropertiesPtrInput is an input type that accepts UserAssignedPropertiesArgs, UserAssignedPropertiesPtr and UserAssignedPropertiesPtrOutput values.
// You can construct a concrete instance of `UserAssignedPropertiesPtrInput` via:
//
//	        UserAssignedPropertiesArgs{...}
//
//	or:
//
//	        nil
type UserAssignedPropertiesPtrInput interface {
	pulumi.Input

	ToUserAssignedPropertiesPtrOutput() UserAssignedPropertiesPtrOutput
	ToUserAssignedPropertiesPtrOutputWithContext(context.Context) UserAssignedPropertiesPtrOutput
}

type userAssignedPropertiesPtrType UserAssignedPropertiesArgs

func UserAssignedPropertiesPtr(v *UserAssignedPropertiesArgs) UserAssignedPropertiesPtrInput {
	return (*userAssignedPropertiesPtrType)(v)
}

func (*userAssignedPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedProperties)(nil)).Elem()
}

func (i *userAssignedPropertiesPtrType) ToUserAssignedPropertiesPtrOutput() UserAssignedPropertiesPtrOutput {
	return i.ToUserAssignedPropertiesPtrOutputWithContext(context.Background())
}

func (i *userAssignedPropertiesPtrType) ToUserAssignedPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedPropertiesPtrOutput)
}

// User assigned identity properties.
type UserAssignedPropertiesOutput struct{ *pulumi.OutputState }

func (UserAssignedPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedProperties)(nil)).Elem()
}

func (o UserAssignedPropertiesOutput) ToUserAssignedPropertiesOutput() UserAssignedPropertiesOutput {
	return o
}

func (o UserAssignedPropertiesOutput) ToUserAssignedPropertiesOutputWithContext(ctx context.Context) UserAssignedPropertiesOutput {
	return o
}

func (o UserAssignedPropertiesOutput) ToUserAssignedPropertiesPtrOutput() UserAssignedPropertiesPtrOutput {
	return o.ToUserAssignedPropertiesPtrOutputWithContext(context.Background())
}

func (o UserAssignedPropertiesOutput) ToUserAssignedPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAssignedProperties) *UserAssignedProperties {
		return &v
	}).(UserAssignedPropertiesPtrOutput)
}

// Arm resource id for user assigned identity to be used to fetch MSI token.
func (o UserAssignedPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserAssignedPropertiesPtrOutput struct{ *pulumi.OutputState }

func (UserAssignedPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedProperties)(nil)).Elem()
}

func (o UserAssignedPropertiesPtrOutput) ToUserAssignedPropertiesPtrOutput() UserAssignedPropertiesPtrOutput {
	return o
}

func (o UserAssignedPropertiesPtrOutput) ToUserAssignedPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedPropertiesPtrOutput {
	return o
}

func (o UserAssignedPropertiesPtrOutput) Elem() UserAssignedPropertiesOutput {
	return o.ApplyT(func(v *UserAssignedProperties) UserAssignedProperties {
		if v != nil {
			return *v
		}
		var ret UserAssignedProperties
		return ret
	}).(UserAssignedPropertiesOutput)
}

// Arm resource id for user assigned identity to be used to fetch MSI token.
func (o UserAssignedPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
type UserAssignedPropertiesResponse struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId *string `pulumi:"resourceId"`
}

// User assigned identity properties.
type UserAssignedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedPropertiesResponseOutput) ToUserAssignedPropertiesResponseOutput() UserAssignedPropertiesResponseOutput {
	return o
}

func (o UserAssignedPropertiesResponseOutput) ToUserAssignedPropertiesResponseOutputWithContext(ctx context.Context) UserAssignedPropertiesResponseOutput {
	return o
}

// Arm resource id for user assigned identity to be used to fetch MSI token.
func (o UserAssignedPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserAssignedPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedPropertiesResponsePtrOutput) ToUserAssignedPropertiesResponsePtrOutput() UserAssignedPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedPropertiesResponsePtrOutput) ToUserAssignedPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedPropertiesResponsePtrOutput) Elem() UserAssignedPropertiesResponseOutput {
	return o.ApplyT(func(v *UserAssignedPropertiesResponse) UserAssignedPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret UserAssignedPropertiesResponse
		return ret
	}).(UserAssignedPropertiesResponseOutput)
}

// Arm resource id for user assigned identity to be used to fetch MSI token.
func (o UserAssignedPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountCredentialDetailsResponseOutput{})
	pulumi.RegisterOutputType(AccountCredentialDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplianceNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplianceNetworkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsPtrOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContactInfoOutput{})
	pulumi.RegisterOutputType(ContactInfoPtrOutput{})
	pulumi.RegisterOutputType(ContactInfoResponseOutput{})
	pulumi.RegisterOutputType(ContactInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(CopyProgressResponseOutput{})
	pulumi.RegisterOutputType(CopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomerDiskJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxAccountCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskCopyProgressResponseOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskCopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskJobDetailsPtrOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxCustomerDiskJobDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyProgressResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxDiskGranularCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskGranularCopyLogDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxDiskGranularCopyProgressResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskGranularCopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsPtrOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyAccountCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsPtrOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavySecretResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavySecretResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsPtrOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBoxSecretResponseOutput{})
	pulumi.RegisterOutputType(DataBoxSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(DataExportDetailsOutput{})
	pulumi.RegisterOutputType(DataExportDetailsArrayOutput{})
	pulumi.RegisterOutputType(DataExportDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataExportDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataImportDetailsOutput{})
	pulumi.RegisterOutputType(DataImportDetailsArrayOutput{})
	pulumi.RegisterOutputType(DataImportDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataImportDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataboxJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DatacenterAddressInstructionResponseResponseOutput{})
	pulumi.RegisterOutputType(DatacenterAddressInstructionResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(DatacenterAddressLocationResponseResponseOutput{})
	pulumi.RegisterOutputType(DatacenterAddressLocationResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(DcAccessSecurityCodeResponseOutput{})
	pulumi.RegisterOutputType(DeviceErasureDetailsResponseOutput{})
	pulumi.RegisterOutputType(DeviceErasureDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskSecretResponseOutput{})
	pulumi.RegisterOutputType(DiskSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExportDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(ExportDiskDetailsResponseMapOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsArrayOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsResponseOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ImportDiskDetailsOutput{})
	pulumi.RegisterOutputType(ImportDiskDetailsMapOutput{})
	pulumi.RegisterOutputType(ImportDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(ImportDiskDetailsResponseMapOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoPtrOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponseOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStagesResponseOutput{})
	pulumi.RegisterOutputType(JobStagesResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyResponseOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(LastMitigationActionOnJobResponseOutput{})
	pulumi.RegisterOutputType(LastMitigationActionOnJobResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedDiskDetailsOutput{})
	pulumi.RegisterOutputType(ManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceArrayOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(PackageCarrierDetailsOutput{})
	pulumi.RegisterOutputType(PackageCarrierDetailsPtrOutput{})
	pulumi.RegisterOutputType(PackageCarrierDetailsResponseOutput{})
	pulumi.RegisterOutputType(PackageCarrierDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(PackageCarrierInfoResponseOutput{})
	pulumi.RegisterOutputType(PackageCarrierInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(PackageShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(PackageShippingDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(PreferencesOutput{})
	pulumi.RegisterOutputType(PreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferencesResponseOutput{})
	pulumi.RegisterOutputType(PreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ReverseShippingDetailsOutput{})
	pulumi.RegisterOutputType(ReverseShippingDetailsPtrOutput{})
	pulumi.RegisterOutputType(ReverseShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(ReverseShippingDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ShareCredentialDetailsResponseOutput{})
	pulumi.RegisterOutputType(ShareCredentialDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ShippingAddressOutput{})
	pulumi.RegisterOutputType(ShippingAddressPtrOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponseOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesOutput{})
	pulumi.RegisterOutputType(TransportPreferencesPtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponseOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserAssignedPropertiesOutput{})
	pulumi.RegisterOutputType(UserAssignedPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserAssignedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedPropertiesResponsePtrOutput{})
}
