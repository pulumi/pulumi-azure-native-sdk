// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A CommunityProviderHub resource
type CommunityTraining struct {
	pulumi.CustomResourceState

	// To indicate whether the Community Training instance has Disaster Recovery enabled
	DisasterRecoveryEnabled pulumi.BoolOutput `pulumi:"disasterRecoveryEnabled"`
	// The identity configuration of the Community Training resource
	IdentityConfiguration IdentityConfigurationPropertiesResponseOutput `pulumi:"identityConfiguration"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The email address of the portal admin
	PortalAdminEmailAddress pulumi.StringOutput `pulumi:"portalAdminEmailAddress"`
	// The portal name (website name) of the Community Training instance
	PortalName pulumi.StringOutput `pulumi:"portalName"`
	// The email address of the portal owner. Will be used as the primary contact
	PortalOwnerEmailAddress pulumi.StringOutput `pulumi:"portalOwnerEmailAddress"`
	// The organization name of the portal owner
	PortalOwnerOrganizationName pulumi.StringOutput `pulumi:"portalOwnerOrganizationName"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The SKU (Stock Keeping Unit) assigned to this resource.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// To indicate whether the Community Training instance has Zone Redundancy enabled
	ZoneRedundancyEnabled pulumi.BoolOutput `pulumi:"zoneRedundancyEnabled"`
}

// NewCommunityTraining registers a new resource with the given unique name, arguments, and options.
func NewCommunityTraining(ctx *pulumi.Context,
	name string, args *CommunityTrainingArgs, opts ...pulumi.ResourceOption) (*CommunityTraining, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisasterRecoveryEnabled == nil {
		return nil, errors.New("invalid value for required argument 'DisasterRecoveryEnabled'")
	}
	if args.IdentityConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'IdentityConfiguration'")
	}
	if args.PortalAdminEmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'PortalAdminEmailAddress'")
	}
	if args.PortalName == nil {
		return nil, errors.New("invalid value for required argument 'PortalName'")
	}
	if args.PortalOwnerEmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'PortalOwnerEmailAddress'")
	}
	if args.PortalOwnerOrganizationName == nil {
		return nil, errors.New("invalid value for required argument 'PortalOwnerOrganizationName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ZoneRedundancyEnabled == nil {
		return nil, errors.New("invalid value for required argument 'ZoneRedundancyEnabled'")
	}
	args.IdentityConfiguration = args.IdentityConfiguration.ToIdentityConfigurationPropertiesOutput().ApplyT(func(v IdentityConfigurationProperties) IdentityConfigurationProperties { return *v.Defaults() }).(IdentityConfigurationPropertiesOutput)
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:community:CommunityTraining"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CommunityTraining
	err := ctx.RegisterResource("azure-native:community/v20231101:CommunityTraining", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCommunityTraining gets an existing CommunityTraining resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCommunityTraining(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CommunityTrainingState, opts ...pulumi.ResourceOption) (*CommunityTraining, error) {
	var resource CommunityTraining
	err := ctx.ReadResource("azure-native:community/v20231101:CommunityTraining", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CommunityTraining resources.
type communityTrainingState struct {
}

type CommunityTrainingState struct {
}

func (CommunityTrainingState) ElementType() reflect.Type {
	return reflect.TypeOf((*communityTrainingState)(nil)).Elem()
}

type communityTrainingArgs struct {
	// The name of the Community Training Resource
	CommunityTrainingName *string `pulumi:"communityTrainingName"`
	// To indicate whether the Community Training instance has Disaster Recovery enabled
	DisasterRecoveryEnabled bool `pulumi:"disasterRecoveryEnabled"`
	// The identity configuration of the Community Training resource
	IdentityConfiguration IdentityConfigurationProperties `pulumi:"identityConfiguration"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The email address of the portal admin
	PortalAdminEmailAddress string `pulumi:"portalAdminEmailAddress"`
	// The portal name (website name) of the Community Training instance
	PortalName string `pulumi:"portalName"`
	// The email address of the portal owner. Will be used as the primary contact
	PortalOwnerEmailAddress string `pulumi:"portalOwnerEmailAddress"`
	// The organization name of the portal owner
	PortalOwnerOrganizationName string `pulumi:"portalOwnerOrganizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU (Stock Keeping Unit) assigned to this resource.
	Sku *Sku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// To indicate whether the Community Training instance has Zone Redundancy enabled
	ZoneRedundancyEnabled bool `pulumi:"zoneRedundancyEnabled"`
}

// The set of arguments for constructing a CommunityTraining resource.
type CommunityTrainingArgs struct {
	// The name of the Community Training Resource
	CommunityTrainingName pulumi.StringPtrInput
	// To indicate whether the Community Training instance has Disaster Recovery enabled
	DisasterRecoveryEnabled pulumi.BoolInput
	// The identity configuration of the Community Training resource
	IdentityConfiguration IdentityConfigurationPropertiesInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The email address of the portal admin
	PortalAdminEmailAddress pulumi.StringInput
	// The portal name (website name) of the Community Training instance
	PortalName pulumi.StringInput
	// The email address of the portal owner. Will be used as the primary contact
	PortalOwnerEmailAddress pulumi.StringInput
	// The organization name of the portal owner
	PortalOwnerOrganizationName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The SKU (Stock Keeping Unit) assigned to this resource.
	Sku SkuPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// To indicate whether the Community Training instance has Zone Redundancy enabled
	ZoneRedundancyEnabled pulumi.BoolInput
}

func (CommunityTrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*communityTrainingArgs)(nil)).Elem()
}

type CommunityTrainingInput interface {
	pulumi.Input

	ToCommunityTrainingOutput() CommunityTrainingOutput
	ToCommunityTrainingOutputWithContext(ctx context.Context) CommunityTrainingOutput
}

func (*CommunityTraining) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunityTraining)(nil)).Elem()
}

func (i *CommunityTraining) ToCommunityTrainingOutput() CommunityTrainingOutput {
	return i.ToCommunityTrainingOutputWithContext(context.Background())
}

func (i *CommunityTraining) ToCommunityTrainingOutputWithContext(ctx context.Context) CommunityTrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityTrainingOutput)
}

type CommunityTrainingOutput struct{ *pulumi.OutputState }

func (CommunityTrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommunityTraining)(nil)).Elem()
}

func (o CommunityTrainingOutput) ToCommunityTrainingOutput() CommunityTrainingOutput {
	return o
}

func (o CommunityTrainingOutput) ToCommunityTrainingOutputWithContext(ctx context.Context) CommunityTrainingOutput {
	return o
}

// To indicate whether the Community Training instance has Disaster Recovery enabled
func (o CommunityTrainingOutput) DisasterRecoveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.BoolOutput { return v.DisasterRecoveryEnabled }).(pulumi.BoolOutput)
}

// The identity configuration of the Community Training resource
func (o CommunityTrainingOutput) IdentityConfiguration() IdentityConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *CommunityTraining) IdentityConfigurationPropertiesResponseOutput {
		return v.IdentityConfiguration
	}).(IdentityConfigurationPropertiesResponseOutput)
}

// The geo-location where the resource lives
func (o CommunityTrainingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o CommunityTrainingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The email address of the portal admin
func (o CommunityTrainingOutput) PortalAdminEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.PortalAdminEmailAddress }).(pulumi.StringOutput)
}

// The portal name (website name) of the Community Training instance
func (o CommunityTrainingOutput) PortalName() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.PortalName }).(pulumi.StringOutput)
}

// The email address of the portal owner. Will be used as the primary contact
func (o CommunityTrainingOutput) PortalOwnerEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.PortalOwnerEmailAddress }).(pulumi.StringOutput)
}

// The organization name of the portal owner
func (o CommunityTrainingOutput) PortalOwnerOrganizationName() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.PortalOwnerOrganizationName }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o CommunityTrainingOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SKU (Stock Keeping Unit) assigned to this resource.
func (o CommunityTrainingOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *CommunityTraining) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CommunityTrainingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CommunityTraining) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CommunityTrainingOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CommunityTrainingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// To indicate whether the Community Training instance has Zone Redundancy enabled
func (o CommunityTrainingOutput) ZoneRedundancyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CommunityTraining) pulumi.BoolOutput { return v.ZoneRedundancyEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(CommunityTrainingOutput{})
}
