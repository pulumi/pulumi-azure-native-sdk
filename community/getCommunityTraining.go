// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package community

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a CommunityTraining
// Azure REST API version: 2023-11-01.
func LookupCommunityTraining(ctx *pulumi.Context, args *LookupCommunityTrainingArgs, opts ...pulumi.InvokeOption) (*LookupCommunityTrainingResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCommunityTrainingResult
	err := ctx.Invoke("azure-native:community:getCommunityTraining", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupCommunityTrainingArgs struct {
	// The name of the Community Training Resource
	CommunityTrainingName string `pulumi:"communityTrainingName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A CommunityProviderHub resource
type LookupCommunityTrainingResult struct {
	// To indicate whether the Community Training instance has Disaster Recovery enabled
	DisasterRecoveryEnabled bool `pulumi:"disasterRecoveryEnabled"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The identity configuration of the Community Training resource
	IdentityConfiguration IdentityConfigurationPropertiesResponse `pulumi:"identityConfiguration"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The email address of the portal admin
	PortalAdminEmailAddress string `pulumi:"portalAdminEmailAddress"`
	// The portal name (website name) of the Community Training instance
	PortalName string `pulumi:"portalName"`
	// The email address of the portal owner. Will be used as the primary contact
	PortalOwnerEmailAddress string `pulumi:"portalOwnerEmailAddress"`
	// The organization name of the portal owner
	PortalOwnerOrganizationName string `pulumi:"portalOwnerOrganizationName"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// The SKU (Stock Keeping Unit) assigned to this resource.
	Sku *SkuResponse `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// To indicate whether the Community Training instance has Zone Redundancy enabled
	ZoneRedundancyEnabled bool `pulumi:"zoneRedundancyEnabled"`
}

// Defaults sets the appropriate defaults for LookupCommunityTrainingResult
func (val *LookupCommunityTrainingResult) Defaults() *LookupCommunityTrainingResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IdentityConfiguration = *tmp.IdentityConfiguration.Defaults()

	return &tmp
}

func LookupCommunityTrainingOutput(ctx *pulumi.Context, args LookupCommunityTrainingOutputArgs, opts ...pulumi.InvokeOption) LookupCommunityTrainingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCommunityTrainingResult, error) {
			args := v.(LookupCommunityTrainingArgs)
			r, err := LookupCommunityTraining(ctx, &args, opts...)
			var s LookupCommunityTrainingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCommunityTrainingResultOutput)
}

type LookupCommunityTrainingOutputArgs struct {
	// The name of the Community Training Resource
	CommunityTrainingName pulumi.StringInput `pulumi:"communityTrainingName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCommunityTrainingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommunityTrainingArgs)(nil)).Elem()
}

// A CommunityProviderHub resource
type LookupCommunityTrainingResultOutput struct{ *pulumi.OutputState }

func (LookupCommunityTrainingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommunityTrainingResult)(nil)).Elem()
}

func (o LookupCommunityTrainingResultOutput) ToLookupCommunityTrainingResultOutput() LookupCommunityTrainingResultOutput {
	return o
}

func (o LookupCommunityTrainingResultOutput) ToLookupCommunityTrainingResultOutputWithContext(ctx context.Context) LookupCommunityTrainingResultOutput {
	return o
}

// To indicate whether the Community Training instance has Disaster Recovery enabled
func (o LookupCommunityTrainingResultOutput) DisasterRecoveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) bool { return v.DisasterRecoveryEnabled }).(pulumi.BoolOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupCommunityTrainingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity configuration of the Community Training resource
func (o LookupCommunityTrainingResultOutput) IdentityConfiguration() IdentityConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) IdentityConfigurationPropertiesResponse {
		return v.IdentityConfiguration
	}).(IdentityConfigurationPropertiesResponseOutput)
}

// The geo-location where the resource lives
func (o LookupCommunityTrainingResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCommunityTrainingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.Name }).(pulumi.StringOutput)
}

// The email address of the portal admin
func (o LookupCommunityTrainingResultOutput) PortalAdminEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.PortalAdminEmailAddress }).(pulumi.StringOutput)
}

// The portal name (website name) of the Community Training instance
func (o LookupCommunityTrainingResultOutput) PortalName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.PortalName }).(pulumi.StringOutput)
}

// The email address of the portal owner. Will be used as the primary contact
func (o LookupCommunityTrainingResultOutput) PortalOwnerEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.PortalOwnerEmailAddress }).(pulumi.StringOutput)
}

// The organization name of the portal owner
func (o LookupCommunityTrainingResultOutput) PortalOwnerOrganizationName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.PortalOwnerOrganizationName }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupCommunityTrainingResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SKU (Stock Keeping Unit) assigned to this resource.
func (o LookupCommunityTrainingResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCommunityTrainingResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupCommunityTrainingResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCommunityTrainingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) string { return v.Type }).(pulumi.StringOutput)
}

// To indicate whether the Community Training instance has Zone Redundancy enabled
func (o LookupCommunityTrainingResultOutput) ZoneRedundancyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCommunityTrainingResult) bool { return v.ZoneRedundancyEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCommunityTrainingResultOutput{})
}
