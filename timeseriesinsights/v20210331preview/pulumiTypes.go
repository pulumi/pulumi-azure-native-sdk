// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210331preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponse struct {
	// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
	Code *string `pulumi:"code"`
	// A message that describes the state in detail.
	Message *string `pulumi:"message"`
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput {
	return o
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponseOutput {
	return o
}

// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
func (o EnvironmentStateDetailsResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A message that describes the state in detail.
func (o EnvironmentStateDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponse struct {
	// An object that represents the status of ingress on an environment.
	Ingress IngressEnvironmentStatusResponse `pulumi:"ingress"`
	// An object that represents the status of warm storage on an environment.
	WarmStorage WarmStorageEnvironmentStatusResponse `pulumi:"warmStorage"`
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatusResponse)(nil)).Elem()
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput {
	return o
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutputWithContext(ctx context.Context) EnvironmentStatusResponseOutput {
	return o
}

// An object that represents the status of ingress on an environment.
func (o EnvironmentStatusResponseOutput) Ingress() IngressEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) IngressEnvironmentStatusResponse { return v.Ingress }).(IngressEnvironmentStatusResponseOutput)
}

// An object that represents the status of warm storage on an environment.
func (o EnvironmentStatusResponseOutput) WarmStorage() WarmStorageEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) WarmStorageEnvironmentStatusResponse { return v.WarmStorage }).(WarmStorageEnvironmentStatusResponseOutput)
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInput struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName string `pulumi:"accountName"`
	// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
	ManagementKey string `pulumi:"managementKey"`
}

// Gen2StorageConfigurationInputInput is an input type that accepts Gen2StorageConfigurationInputArgs and Gen2StorageConfigurationInputOutput values.
// You can construct a concrete instance of `Gen2StorageConfigurationInputInput` via:
//
//	Gen2StorageConfigurationInputArgs{...}
type Gen2StorageConfigurationInputInput interface {
	pulumi.Input

	ToGen2StorageConfigurationInputOutput() Gen2StorageConfigurationInputOutput
	ToGen2StorageConfigurationInputOutputWithContext(context.Context) Gen2StorageConfigurationInputOutput
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInputArgs struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
	ManagementKey pulumi.StringInput `pulumi:"managementKey"`
}

func (Gen2StorageConfigurationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationInput)(nil)).Elem()
}

func (i Gen2StorageConfigurationInputArgs) ToGen2StorageConfigurationInputOutput() Gen2StorageConfigurationInputOutput {
	return i.ToGen2StorageConfigurationInputOutputWithContext(context.Background())
}

func (i Gen2StorageConfigurationInputArgs) ToGen2StorageConfigurationInputOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationInputOutput)
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInputOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationInput)(nil)).Elem()
}

func (o Gen2StorageConfigurationInputOutput) ToGen2StorageConfigurationInputOutput() Gen2StorageConfigurationInputOutput {
	return o
}

func (o Gen2StorageConfigurationInputOutput) ToGen2StorageConfigurationInputOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputOutput {
	return o
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationInputOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationInput) string { return v.AccountName }).(pulumi.StringOutput)
}

// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
func (o Gen2StorageConfigurationInputOutput) ManagementKey() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationInput) string { return v.ManagementKey }).(pulumi.StringOutput)
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponse struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName string `pulumi:"accountName"`
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponseOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationOutputResponse)(nil)).Elem()
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponseOutput() Gen2StorageConfigurationOutputResponseOutput {
	return o
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponseOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponseOutput {
	return o
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationOutputResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationOutputResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponse struct {
	// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
	State *string `pulumi:"state"`
	// An object that contains the details about an environment's state.
	StateDetails EnvironmentStateDetailsResponse `pulumi:"stateDetails"`
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (IngressEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput {
	return o
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponseOutput {
	return o
}

// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
func (o IngressEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
func (o IngressEnvironmentStatusResponseOutput) StateDetails() EnvironmentStateDetailsResponseOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) EnvironmentStateDetailsResponse { return v.StateDetails }).(EnvironmentStateDetailsResponseOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// The provisioning state of the private endpoint connection resource.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// Provisioning state of the private endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type Sku struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuArgs struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v Sku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponse struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v SkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdProperty struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// TimeSeriesIdPropertyInput is an input type that accepts TimeSeriesIdPropertyArgs and TimeSeriesIdPropertyOutput values.
// You can construct a concrete instance of `TimeSeriesIdPropertyInput` via:
//
//	TimeSeriesIdPropertyArgs{...}
type TimeSeriesIdPropertyInput interface {
	pulumi.Input

	ToTimeSeriesIdPropertyOutput() TimeSeriesIdPropertyOutput
	ToTimeSeriesIdPropertyOutputWithContext(context.Context) TimeSeriesIdPropertyOutput
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyArgs struct {
	// The name of the property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TimeSeriesIdPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdProperty)(nil)).Elem()
}

func (i TimeSeriesIdPropertyArgs) ToTimeSeriesIdPropertyOutput() TimeSeriesIdPropertyOutput {
	return i.ToTimeSeriesIdPropertyOutputWithContext(context.Background())
}

func (i TimeSeriesIdPropertyArgs) ToTimeSeriesIdPropertyOutputWithContext(ctx context.Context) TimeSeriesIdPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesIdPropertyOutput)
}

// TimeSeriesIdPropertyArrayInput is an input type that accepts TimeSeriesIdPropertyArray and TimeSeriesIdPropertyArrayOutput values.
// You can construct a concrete instance of `TimeSeriesIdPropertyArrayInput` via:
//
//	TimeSeriesIdPropertyArray{ TimeSeriesIdPropertyArgs{...} }
type TimeSeriesIdPropertyArrayInput interface {
	pulumi.Input

	ToTimeSeriesIdPropertyArrayOutput() TimeSeriesIdPropertyArrayOutput
	ToTimeSeriesIdPropertyArrayOutputWithContext(context.Context) TimeSeriesIdPropertyArrayOutput
}

type TimeSeriesIdPropertyArray []TimeSeriesIdPropertyInput

func (TimeSeriesIdPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdProperty)(nil)).Elem()
}

func (i TimeSeriesIdPropertyArray) ToTimeSeriesIdPropertyArrayOutput() TimeSeriesIdPropertyArrayOutput {
	return i.ToTimeSeriesIdPropertyArrayOutputWithContext(context.Background())
}

func (i TimeSeriesIdPropertyArray) ToTimeSeriesIdPropertyArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesIdPropertyArrayOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdProperty)(nil)).Elem()
}

func (o TimeSeriesIdPropertyOutput) ToTimeSeriesIdPropertyOutput() TimeSeriesIdPropertyOutput {
	return o
}

func (o TimeSeriesIdPropertyOutput) ToTimeSeriesIdPropertyOutputWithContext(ctx context.Context) TimeSeriesIdPropertyOutput {
	return o
}

// The name of the property.
func (o TimeSeriesIdPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o TimeSeriesIdPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TimeSeriesIdPropertyArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdProperty)(nil)).Elem()
}

func (o TimeSeriesIdPropertyArrayOutput) ToTimeSeriesIdPropertyArrayOutput() TimeSeriesIdPropertyArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyArrayOutput) ToTimeSeriesIdPropertyArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyArrayOutput) Index(i pulumi.IntInput) TimeSeriesIdPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSeriesIdProperty {
		return vs[0].([]TimeSeriesIdProperty)[vs[1].(int)]
	}).(TimeSeriesIdPropertyOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponse struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponseOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (o TimeSeriesIdPropertyResponseOutput) ToTimeSeriesIdPropertyResponseOutput() TimeSeriesIdPropertyResponseOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseOutput) ToTimeSeriesIdPropertyResponseOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseOutput {
	return o
}

// The name of the property.
func (o TimeSeriesIdPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o TimeSeriesIdPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TimeSeriesIdPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (o TimeSeriesIdPropertyResponseArrayOutput) ToTimeSeriesIdPropertyResponseArrayOutput() TimeSeriesIdPropertyResponseArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseArrayOutput) ToTimeSeriesIdPropertyResponseArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseArrayOutput) Index(i pulumi.IntInput) TimeSeriesIdPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSeriesIdPropertyResponse {
		return vs[0].([]TimeSeriesIdPropertyResponse)[vs[1].(int)]
	}).(TimeSeriesIdPropertyResponseOutput)
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponse struct {
	// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
	CurrentCount *int `pulumi:"currentCount"`
	// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
	MaxCount *int `pulumi:"maxCount"`
	// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
	State *string `pulumi:"state"`
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (WarmStorageEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStorageEnvironmentStatusResponse)(nil)).Elem()
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponseOutput() WarmStorageEnvironmentStatusResponseOutput {
	return o
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponseOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponseOutput {
	return o
}

// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
func (o WarmStorageEnvironmentStatusResponseOutput) CurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *int { return v.CurrentCount }).(pulumi.IntPtrOutput)
}

// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
func (o WarmStorageEnvironmentStatusResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
func (o WarmStorageEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationProperties struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention string `pulumi:"dataRetention"`
}

// WarmStoreConfigurationPropertiesInput is an input type that accepts WarmStoreConfigurationPropertiesArgs and WarmStoreConfigurationPropertiesOutput values.
// You can construct a concrete instance of `WarmStoreConfigurationPropertiesInput` via:
//
//	WarmStoreConfigurationPropertiesArgs{...}
type WarmStoreConfigurationPropertiesInput interface {
	pulumi.Input

	ToWarmStoreConfigurationPropertiesOutput() WarmStoreConfigurationPropertiesOutput
	ToWarmStoreConfigurationPropertiesOutputWithContext(context.Context) WarmStoreConfigurationPropertiesOutput
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesArgs struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention pulumi.StringInput `pulumi:"dataRetention"`
}

func (WarmStoreConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationProperties)(nil)).Elem()
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesOutput() WarmStoreConfigurationPropertiesOutput {
	return i.ToWarmStoreConfigurationPropertiesOutputWithContext(context.Background())
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesOutput)
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return i.ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesOutput).ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx)
}

// WarmStoreConfigurationPropertiesPtrInput is an input type that accepts WarmStoreConfigurationPropertiesArgs, WarmStoreConfigurationPropertiesPtr and WarmStoreConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `WarmStoreConfigurationPropertiesPtrInput` via:
//
//	        WarmStoreConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type WarmStoreConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput
	ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Context) WarmStoreConfigurationPropertiesPtrOutput
}

type warmStoreConfigurationPropertiesPtrType WarmStoreConfigurationPropertiesArgs

func WarmStoreConfigurationPropertiesPtr(v *WarmStoreConfigurationPropertiesArgs) WarmStoreConfigurationPropertiesPtrInput {
	return (*warmStoreConfigurationPropertiesPtrType)(v)
}

func (*warmStoreConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationProperties)(nil)).Elem()
}

func (i *warmStoreConfigurationPropertiesPtrType) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return i.ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *warmStoreConfigurationPropertiesPtrType) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationProperties)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesOutput() WarmStoreConfigurationPropertiesOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return o.ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WarmStoreConfigurationProperties) *WarmStoreConfigurationProperties {
		return &v
	}).(WarmStoreConfigurationPropertiesPtrOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesOutput) DataRetention() pulumi.StringOutput {
	return o.ApplyT(func(v WarmStoreConfigurationProperties) string { return v.DataRetention }).(pulumi.StringOutput)
}

type WarmStoreConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationProperties)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesPtrOutput) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesPtrOutput) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesPtrOutput) Elem() WarmStoreConfigurationPropertiesOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationProperties) WarmStoreConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret WarmStoreConfigurationProperties
		return ret
	}).(WarmStoreConfigurationPropertiesOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesPtrOutput) DataRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetention
	}).(pulumi.StringPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponse struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention string `pulumi:"dataRetention"`
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponseOutput() WarmStoreConfigurationPropertiesResponseOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponseOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponseOutput {
	return o
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesResponseOutput) DataRetention() pulumi.StringOutput {
	return o.ApplyT(func(v WarmStoreConfigurationPropertiesResponse) string { return v.DataRetention }).(pulumi.StringOutput)
}

type WarmStoreConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) Elem() WarmStoreConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationPropertiesResponse) WarmStoreConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret WarmStoreConfigurationPropertiesResponse
		return ret
	}).(WarmStoreConfigurationPropertiesResponseOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesResponsePtrOutput) DataRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetention
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationInputOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationOutputResponseOutput{})
	pulumi.RegisterOutputType(IngressEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyArrayOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyResponseOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(WarmStorageEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesResponsePtrOutput{})
}
