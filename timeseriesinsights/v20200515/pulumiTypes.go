// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200515

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponse struct {
	// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
	Code *string `pulumi:"code"`
	// A message that describes the state in detail.
	Message *string `pulumi:"message"`
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput {
	return o
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponseOutput {
	return o
}

// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
func (o EnvironmentStateDetailsResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A message that describes the state in detail.
func (o EnvironmentStateDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponse struct {
	// An object that represents the status of ingress on an environment.
	Ingress IngressEnvironmentStatusResponse `pulumi:"ingress"`
	// An object that represents the status of warm storage on an environment.
	WarmStorage WarmStorageEnvironmentStatusResponse `pulumi:"warmStorage"`
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatusResponse)(nil)).Elem()
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput {
	return o
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutputWithContext(ctx context.Context) EnvironmentStatusResponseOutput {
	return o
}

// An object that represents the status of ingress on an environment.
func (o EnvironmentStatusResponseOutput) Ingress() IngressEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) IngressEnvironmentStatusResponse { return v.Ingress }).(IngressEnvironmentStatusResponseOutput)
}

// An object that represents the status of warm storage on an environment.
func (o EnvironmentStatusResponseOutput) WarmStorage() WarmStorageEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) WarmStorageEnvironmentStatusResponse { return v.WarmStorage }).(WarmStorageEnvironmentStatusResponseOutput)
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInput struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName string `pulumi:"accountName"`
	// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
	ManagementKey string `pulumi:"managementKey"`
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponse struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName string `pulumi:"accountName"`
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponseOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationOutputResponse)(nil)).Elem()
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponseOutput() Gen2StorageConfigurationOutputResponseOutput {
	return o
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponseOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponseOutput {
	return o
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationOutputResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationOutputResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponse struct {
	// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
	State *string `pulumi:"state"`
	// An object that contains the details about an environment's state.
	StateDetails EnvironmentStateDetailsResponse `pulumi:"stateDetails"`
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (IngressEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput {
	return o
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponseOutput {
	return o
}

// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
func (o IngressEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
func (o IngressEnvironmentStatusResponseOutput) StateDetails() EnvironmentStateDetailsResponseOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) EnvironmentStateDetailsResponse { return v.StateDetails }).(EnvironmentStateDetailsResponseOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestamp struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format *string `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset *LocalTimestampTimeZoneOffset `pulumi:"timeZoneOffset"`
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampResponse struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format *string `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset *LocalTimestampResponseTimeZoneOffset `pulumi:"timeZoneOffset"`
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampResponseOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampResponse)(nil)).Elem()
}

func (o LocalTimestampResponseOutput) ToLocalTimestampResponseOutput() LocalTimestampResponseOutput {
	return o
}

func (o LocalTimestampResponseOutput) ToLocalTimestampResponseOutputWithContext(ctx context.Context) LocalTimestampResponseOutput {
	return o
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampResponseOutput) TimeZoneOffset() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponse) *LocalTimestampResponseTimeZoneOffset { return v.TimeZoneOffset }).(LocalTimestampResponseTimeZoneOffsetPtrOutput)
}

type LocalTimestampResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampResponse)(nil)).Elem()
}

func (o LocalTimestampResponsePtrOutput) ToLocalTimestampResponsePtrOutput() LocalTimestampResponsePtrOutput {
	return o
}

func (o LocalTimestampResponsePtrOutput) ToLocalTimestampResponsePtrOutputWithContext(ctx context.Context) LocalTimestampResponsePtrOutput {
	return o
}

func (o LocalTimestampResponsePtrOutput) Elem() LocalTimestampResponseOutput {
	return o.ApplyT(func(v *LocalTimestampResponse) LocalTimestampResponse {
		if v != nil {
			return *v
		}
		var ret LocalTimestampResponse
		return ret
	}).(LocalTimestampResponseOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampResponsePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestampResponse) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampResponsePtrOutput) TimeZoneOffset() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v *LocalTimestampResponse) *LocalTimestampResponseTimeZoneOffset {
		if v == nil {
			return nil
		}
		return v.TimeZoneOffset
	}).(LocalTimestampResponseTimeZoneOffsetPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampResponseTimeZoneOffset struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName *string `pulumi:"propertyName"`
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampResponseTimeZoneOffsetOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponseTimeZoneOffsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampResponseTimeZoneOffset)(nil)).Elem()
}

func (o LocalTimestampResponseTimeZoneOffsetOutput) ToLocalTimestampResponseTimeZoneOffsetOutput() LocalTimestampResponseTimeZoneOffsetOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetOutput) ToLocalTimestampResponseTimeZoneOffsetOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetOutput {
	return o
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampResponseTimeZoneOffsetOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponseTimeZoneOffset) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

type LocalTimestampResponseTimeZoneOffsetPtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponseTimeZoneOffsetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampResponseTimeZoneOffset)(nil)).Elem()
}

func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) ToLocalTimestampResponseTimeZoneOffsetPtrOutput() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) Elem() LocalTimestampResponseTimeZoneOffsetOutput {
	return o.ApplyT(func(v *LocalTimestampResponseTimeZoneOffset) LocalTimestampResponseTimeZoneOffset {
		if v != nil {
			return *v
		}
		var ret LocalTimestampResponseTimeZoneOffset
		return ret
	}).(LocalTimestampResponseTimeZoneOffsetOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestampResponseTimeZoneOffset) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampTimeZoneOffset struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName *string `pulumi:"propertyName"`
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyProperty struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyInput is an input type that accepts ReferenceDataSetKeyPropertyArgs and ReferenceDataSetKeyPropertyOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyInput` via:
//
//	ReferenceDataSetKeyPropertyArgs{...}
type ReferenceDataSetKeyPropertyInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput
	ToReferenceDataSetKeyPropertyOutputWithContext(context.Context) ReferenceDataSetKeyPropertyOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return i.ToReferenceDataSetKeyPropertyOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyOutput)
}

// ReferenceDataSetKeyPropertyArrayInput is an input type that accepts ReferenceDataSetKeyPropertyArray and ReferenceDataSetKeyPropertyArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyArrayInput` via:
//
//	ReferenceDataSetKeyPropertyArray{ ReferenceDataSetKeyPropertyArgs{...} }
type ReferenceDataSetKeyPropertyArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput
	ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyArrayOutput
}

type ReferenceDataSetKeyPropertyArray []ReferenceDataSetKeyPropertyInput

func (ReferenceDataSetKeyPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return i.ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyProperty {
		return vs[0].([]ReferenceDataSetKeyProperty)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponse struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyPropertyResponse {
		return vs[0].([]ReferenceDataSetKeyPropertyResponse)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyResponseOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type Sku struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponse struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v SkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdProperty struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponse struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponseOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (o TimeSeriesIdPropertyResponseOutput) ToTimeSeriesIdPropertyResponseOutput() TimeSeriesIdPropertyResponseOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseOutput) ToTimeSeriesIdPropertyResponseOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseOutput {
	return o
}

// The name of the property.
func (o TimeSeriesIdPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o TimeSeriesIdPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TimeSeriesIdPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (o TimeSeriesIdPropertyResponseArrayOutput) ToTimeSeriesIdPropertyResponseArrayOutput() TimeSeriesIdPropertyResponseArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseArrayOutput) ToTimeSeriesIdPropertyResponseArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseArrayOutput) Index(i pulumi.IntInput) TimeSeriesIdPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSeriesIdPropertyResponse {
		return vs[0].([]TimeSeriesIdPropertyResponse)[vs[1].(int)]
	}).(TimeSeriesIdPropertyResponseOutput)
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponse struct {
	// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
	CurrentCount *int `pulumi:"currentCount"`
	// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
	MaxCount *int `pulumi:"maxCount"`
	// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
	State *string `pulumi:"state"`
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (WarmStorageEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStorageEnvironmentStatusResponse)(nil)).Elem()
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponseOutput() WarmStorageEnvironmentStatusResponseOutput {
	return o
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponseOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponseOutput {
	return o
}

// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
func (o WarmStorageEnvironmentStatusResponseOutput) CurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *int { return v.CurrentCount }).(pulumi.IntPtrOutput)
}

// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
func (o WarmStorageEnvironmentStatusResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
func (o WarmStorageEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationProperties struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention string `pulumi:"dataRetention"`
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponse struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention string `pulumi:"dataRetention"`
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponseOutput() WarmStoreConfigurationPropertiesResponseOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponseOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponseOutput {
	return o
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesResponseOutput) DataRetention() pulumi.StringOutput {
	return o.ApplyT(func(v WarmStoreConfigurationPropertiesResponse) string { return v.DataRetention }).(pulumi.StringOutput)
}

type WarmStoreConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) Elem() WarmStoreConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationPropertiesResponse) WarmStoreConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret WarmStoreConfigurationPropertiesResponse
		return ret
	}).(WarmStoreConfigurationPropertiesResponseOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesResponsePtrOutput) DataRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetention
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationOutputResponseOutput{})
	pulumi.RegisterOutputType(IngressEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponseOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponsePtrOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponseTimeZoneOffsetOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponseTimeZoneOffsetPtrOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyResponseOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(WarmStorageEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesResponsePtrOutput{})
}
