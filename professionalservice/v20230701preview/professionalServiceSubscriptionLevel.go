// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ProfessionalService REST API resource definition.
type ProfessionalServiceSubscriptionLevel struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// professionalService properties
	Properties ProfessionalServiceResourceResponsePropertiesOutput `pulumi:"properties"`
	// the resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProfessionalServiceSubscriptionLevel registers a new resource with the given unique name, arguments, and options.
func NewProfessionalServiceSubscriptionLevel(ctx *pulumi.Context,
	name string, args *ProfessionalServiceSubscriptionLevelArgs, opts ...pulumi.ResourceOption) (*ProfessionalServiceSubscriptionLevel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:professionalservice:ProfessionalServiceSubscriptionLevel"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProfessionalServiceSubscriptionLevel
	err := ctx.RegisterResource("azure-native:professionalservice/v20230701preview:ProfessionalServiceSubscriptionLevel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfessionalServiceSubscriptionLevel gets an existing ProfessionalServiceSubscriptionLevel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfessionalServiceSubscriptionLevel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfessionalServiceSubscriptionLevelState, opts ...pulumi.ResourceOption) (*ProfessionalServiceSubscriptionLevel, error) {
	var resource ProfessionalServiceSubscriptionLevel
	err := ctx.ReadResource("azure-native:professionalservice/v20230701preview:ProfessionalServiceSubscriptionLevel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProfessionalServiceSubscriptionLevel resources.
type professionalServiceSubscriptionLevelState struct {
}

type ProfessionalServiceSubscriptionLevelState struct {
}

func (ProfessionalServiceSubscriptionLevelState) ElementType() reflect.Type {
	return reflect.TypeOf((*professionalServiceSubscriptionLevelState)(nil)).Elem()
}

type professionalServiceSubscriptionLevelArgs struct {
	// Resource location. Only value allowed for ProfessionalService is 'global'
	Location *string `pulumi:"location"`
	// The resource name
	Name *string `pulumi:"name"`
	// Properties of the ProfessionalService resource that are relevant for creation.
	Properties *ProfessionalServiceCreationProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the resource.
	ResourceName *string `pulumi:"resourceName"`
	// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
	SubscriptionId *string `pulumi:"subscriptionId"`
	// the resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ProfessionalServiceSubscriptionLevel resource.
type ProfessionalServiceSubscriptionLevelArgs struct {
	// Resource location. Only value allowed for ProfessionalService is 'global'
	Location pulumi.StringPtrInput
	// The resource name
	Name pulumi.StringPtrInput
	// Properties of the ProfessionalService resource that are relevant for creation.
	Properties ProfessionalServiceCreationPropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the resource.
	ResourceName pulumi.StringPtrInput
	// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
	SubscriptionId pulumi.StringPtrInput
	// the resource tags.
	Tags pulumi.StringMapInput
}

func (ProfessionalServiceSubscriptionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*professionalServiceSubscriptionLevelArgs)(nil)).Elem()
}

type ProfessionalServiceSubscriptionLevelInput interface {
	pulumi.Input

	ToProfessionalServiceSubscriptionLevelOutput() ProfessionalServiceSubscriptionLevelOutput
	ToProfessionalServiceSubscriptionLevelOutputWithContext(ctx context.Context) ProfessionalServiceSubscriptionLevelOutput
}

func (*ProfessionalServiceSubscriptionLevel) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfessionalServiceSubscriptionLevel)(nil)).Elem()
}

func (i *ProfessionalServiceSubscriptionLevel) ToProfessionalServiceSubscriptionLevelOutput() ProfessionalServiceSubscriptionLevelOutput {
	return i.ToProfessionalServiceSubscriptionLevelOutputWithContext(context.Background())
}

func (i *ProfessionalServiceSubscriptionLevel) ToProfessionalServiceSubscriptionLevelOutputWithContext(ctx context.Context) ProfessionalServiceSubscriptionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfessionalServiceSubscriptionLevelOutput)
}

type ProfessionalServiceSubscriptionLevelOutput struct{ *pulumi.OutputState }

func (ProfessionalServiceSubscriptionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfessionalServiceSubscriptionLevel)(nil)).Elem()
}

func (o ProfessionalServiceSubscriptionLevelOutput) ToProfessionalServiceSubscriptionLevelOutput() ProfessionalServiceSubscriptionLevelOutput {
	return o
}

func (o ProfessionalServiceSubscriptionLevelOutput) ToProfessionalServiceSubscriptionLevelOutputWithContext(ctx context.Context) ProfessionalServiceSubscriptionLevelOutput {
	return o
}

// The name of the resource
func (o ProfessionalServiceSubscriptionLevelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfessionalServiceSubscriptionLevel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// professionalService properties
func (o ProfessionalServiceSubscriptionLevelOutput) Properties() ProfessionalServiceResourceResponsePropertiesOutput {
	return o.ApplyT(func(v *ProfessionalServiceSubscriptionLevel) ProfessionalServiceResourceResponsePropertiesOutput {
		return v.Properties
	}).(ProfessionalServiceResourceResponsePropertiesOutput)
}

// the resource tags.
func (o ProfessionalServiceSubscriptionLevelOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProfessionalServiceSubscriptionLevel) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ProfessionalServiceSubscriptionLevelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfessionalServiceSubscriptionLevel) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProfessionalServiceSubscriptionLevelOutput{})
}
