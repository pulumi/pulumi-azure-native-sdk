// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerinstance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the properties of the specified n group.
// Azure REST API version: 2024-09-01-preview.
//
// Other available API versions: 2024-11-01-preview.
func LookupNGroup(ctx *pulumi.Context, args *LookupNGroupArgs, opts ...pulumi.InvokeOption) (*LookupNGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNGroupResult
	err := ctx.Invoke("azure-native:containerinstance:getNGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNGroupArgs struct {
	// The N Groups name.
	NgroupsName string `pulumi:"ngroupsName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Describes a nGroup.
type LookupNGroupResult struct {
	// The Container Group Profiles that could be used in a nGroup.
	ContainerGroupProfiles []ContainerGroupProfileStubResponse `pulumi:"containerGroupProfiles"`
	// The elastic profile.
	ElasticProfile *ElasticProfileResponse `pulumi:"elasticProfile"`
	// The resource id.
	Id string `pulumi:"id"`
	// The identity of the nGroup, if configured.
	Identity *NGroupIdentityResponse `pulumi:"identity"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource name.
	Name string `pulumi:"name"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
	// The zones for the container group.
	Zones []string `pulumi:"zones"`
}

func LookupNGroupOutput(ctx *pulumi.Context, args LookupNGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNGroupResultOutput, error) {
			args := v.(LookupNGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerinstance:getNGroup", args, LookupNGroupResultOutput{}, options).(LookupNGroupResultOutput), nil
		}).(LookupNGroupResultOutput)
}

type LookupNGroupOutputArgs struct {
	// The N Groups name.
	NgroupsName pulumi.StringInput `pulumi:"ngroupsName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNGroupArgs)(nil)).Elem()
}

// Describes a nGroup.
type LookupNGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNGroupResult)(nil)).Elem()
}

func (o LookupNGroupResultOutput) ToLookupNGroupResultOutput() LookupNGroupResultOutput {
	return o
}

func (o LookupNGroupResultOutput) ToLookupNGroupResultOutputWithContext(ctx context.Context) LookupNGroupResultOutput {
	return o
}

// The Container Group Profiles that could be used in a nGroup.
func (o LookupNGroupResultOutput) ContainerGroupProfiles() ContainerGroupProfileStubResponseArrayOutput {
	return o.ApplyT(func(v LookupNGroupResult) []ContainerGroupProfileStubResponse { return v.ContainerGroupProfiles }).(ContainerGroupProfileStubResponseArrayOutput)
}

// The elastic profile.
func (o LookupNGroupResultOutput) ElasticProfile() ElasticProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *ElasticProfileResponse { return v.ElasticProfile }).(ElasticProfileResponsePtrOutput)
}

// The resource id.
func (o LookupNGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the nGroup, if configured.
func (o LookupNGroupResultOutput) Identity() NGroupIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *NGroupIdentityResponse { return v.Identity }).(NGroupIdentityResponsePtrOutput)
}

// The resource location.
func (o LookupNGroupResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource name.
func (o LookupNGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state, which only appears in the response.
func (o LookupNGroupResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupNGroupResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNGroupResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The resource tags.
func (o LookupNGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o LookupNGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

// The zones for the container group.
func (o LookupNGroupResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNGroupResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNGroupResultOutput{})
}
