// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerinstance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the properties of the specified container group profile in the specified subscription and resource group. The operation returns the properties of container group profile including containers, image registry credentials, restart policy, IP address type, OS type, volumes, current revision number, etc.
// Azure REST API version: 2024-05-01-preview.
func LookupContainerGroupProfile(ctx *pulumi.Context, args *LookupContainerGroupProfileArgs, opts ...pulumi.InvokeOption) (*LookupContainerGroupProfileResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerGroupProfileResult
	err := ctx.Invoke("azure-native:containerinstance:getContainerGroupProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupContainerGroupProfileArgs struct {
	// The name of the container group profile.
	ContainerGroupProfileName string `pulumi:"containerGroupProfileName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A container group profile.
type LookupContainerGroupProfileResult struct {
	// The properties for confidential container group
	ConfidentialComputeProperties *ConfidentialComputePropertiesResponse `pulumi:"confidentialComputeProperties"`
	// The containers within the container group.
	Containers []ContainerResponse `pulumi:"containers"`
	// The diagnostic information for a container group.
	Diagnostics *ContainerGroupDiagnosticsResponse `pulumi:"diagnostics"`
	// The encryption properties for a container group.
	EncryptionProperties *EncryptionPropertiesResponse `pulumi:"encryptionProperties"`
	// extensions used by virtual kubelet
	Extensions []DeploymentExtensionSpecResponse `pulumi:"extensions"`
	// The resource id.
	Id string `pulumi:"id"`
	// The image registry credentials by which the container group is created from.
	ImageRegistryCredentials []ImageRegistryCredentialResponse `pulumi:"imageRegistryCredentials"`
	// The init containers for a container group.
	InitContainers []InitContainerDefinitionResponse `pulumi:"initContainers"`
	// The IP address type of the container group.
	IpAddress *IpAddressResponse `pulumi:"ipAddress"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource name.
	Name string `pulumi:"name"`
	// The operating system type required by the containers in the container group.
	OsType string `pulumi:"osType"`
	// The priority of the container group.
	Priority *string `pulumi:"priority"`
	// Restart policy for all containers within the container group.
	// - `Always` Always restart
	// - `OnFailure` Restart on failure
	// - `Never` Never restart
	RestartPolicy *string `pulumi:"restartPolicy"`
	// The container group profile current revision number. This only appears in the response.
	Revision int `pulumi:"revision"`
	// The SKU for a container group.
	Sku *string `pulumi:"sku"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
	// The list of volumes that can be mounted by containers in this container group.
	Volumes []VolumeResponse `pulumi:"volumes"`
	// The zones for the container group.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for LookupContainerGroupProfileResult
func (val *LookupContainerGroupProfileResult) Defaults() *LookupContainerGroupProfileResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IpAddress = tmp.IpAddress.Defaults()

	return &tmp
}
func LookupContainerGroupProfileOutput(ctx *pulumi.Context, args LookupContainerGroupProfileOutputArgs, opts ...pulumi.InvokeOption) LookupContainerGroupProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupContainerGroupProfileResultOutput, error) {
			args := v.(LookupContainerGroupProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerinstance:getContainerGroupProfile", args, LookupContainerGroupProfileResultOutput{}, options).(LookupContainerGroupProfileResultOutput), nil
		}).(LookupContainerGroupProfileResultOutput)
}

type LookupContainerGroupProfileOutputArgs struct {
	// The name of the container group profile.
	ContainerGroupProfileName pulumi.StringInput `pulumi:"containerGroupProfileName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupContainerGroupProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerGroupProfileArgs)(nil)).Elem()
}

// A container group profile.
type LookupContainerGroupProfileResultOutput struct{ *pulumi.OutputState }

func (LookupContainerGroupProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerGroupProfileResult)(nil)).Elem()
}

func (o LookupContainerGroupProfileResultOutput) ToLookupContainerGroupProfileResultOutput() LookupContainerGroupProfileResultOutput {
	return o
}

func (o LookupContainerGroupProfileResultOutput) ToLookupContainerGroupProfileResultOutputWithContext(ctx context.Context) LookupContainerGroupProfileResultOutput {
	return o
}

// The properties for confidential container group
func (o LookupContainerGroupProfileResultOutput) ConfidentialComputeProperties() ConfidentialComputePropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *ConfidentialComputePropertiesResponse {
		return v.ConfidentialComputeProperties
	}).(ConfidentialComputePropertiesResponsePtrOutput)
}

// The containers within the container group.
func (o LookupContainerGroupProfileResultOutput) Containers() ContainerResponseArrayOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) []ContainerResponse { return v.Containers }).(ContainerResponseArrayOutput)
}

// The diagnostic information for a container group.
func (o LookupContainerGroupProfileResultOutput) Diagnostics() ContainerGroupDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *ContainerGroupDiagnosticsResponse { return v.Diagnostics }).(ContainerGroupDiagnosticsResponsePtrOutput)
}

// The encryption properties for a container group.
func (o LookupContainerGroupProfileResultOutput) EncryptionProperties() EncryptionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *EncryptionPropertiesResponse { return v.EncryptionProperties }).(EncryptionPropertiesResponsePtrOutput)
}

// extensions used by virtual kubelet
func (o LookupContainerGroupProfileResultOutput) Extensions() DeploymentExtensionSpecResponseArrayOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) []DeploymentExtensionSpecResponse { return v.Extensions }).(DeploymentExtensionSpecResponseArrayOutput)
}

// The resource id.
func (o LookupContainerGroupProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// The image registry credentials by which the container group is created from.
func (o LookupContainerGroupProfileResultOutput) ImageRegistryCredentials() ImageRegistryCredentialResponseArrayOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) []ImageRegistryCredentialResponse {
		return v.ImageRegistryCredentials
	}).(ImageRegistryCredentialResponseArrayOutput)
}

// The init containers for a container group.
func (o LookupContainerGroupProfileResultOutput) InitContainers() InitContainerDefinitionResponseArrayOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) []InitContainerDefinitionResponse { return v.InitContainers }).(InitContainerDefinitionResponseArrayOutput)
}

// The IP address type of the container group.
func (o LookupContainerGroupProfileResultOutput) IpAddress() IpAddressResponsePtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *IpAddressResponse { return v.IpAddress }).(IpAddressResponsePtrOutput)
}

// The resource location.
func (o LookupContainerGroupProfileResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource name.
func (o LookupContainerGroupProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// The operating system type required by the containers in the container group.
func (o LookupContainerGroupProfileResultOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) string { return v.OsType }).(pulumi.StringOutput)
}

// The priority of the container group.
func (o LookupContainerGroupProfileResultOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Restart policy for all containers within the container group.
// - `Always` Always restart
// - `OnFailure` Restart on failure
// - `Never` Never restart
func (o LookupContainerGroupProfileResultOutput) RestartPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *string { return v.RestartPolicy }).(pulumi.StringPtrOutput)
}

// The container group profile current revision number. This only appears in the response.
func (o LookupContainerGroupProfileResultOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) int { return v.Revision }).(pulumi.IntOutput)
}

// The SKU for a container group.
func (o LookupContainerGroupProfileResultOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The resource tags.
func (o LookupContainerGroupProfileResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o LookupContainerGroupProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

// The list of volumes that can be mounted by containers in this container group.
func (o LookupContainerGroupProfileResultOutput) Volumes() VolumeResponseArrayOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) []VolumeResponse { return v.Volumes }).(VolumeResponseArrayOutput)
}

// The zones for the container group.
func (o LookupContainerGroupProfileResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContainerGroupProfileResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerGroupProfileResultOutput{})
}
