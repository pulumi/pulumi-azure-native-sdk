// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the properties of the specified NGroups resource.
func LookupNGroup(ctx *pulumi.Context, args *LookupNGroupArgs, opts ...pulumi.InvokeOption) (*LookupNGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNGroupResult
	err := ctx.Invoke("azure-native:containerinstance/v20241101preview:getNGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNGroupArgs struct {
	// The NGroups name.
	NgroupsName string `pulumi:"ngroupsName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Describes the NGroups resource.
type LookupNGroupResult struct {
	// The Container Group Profiles that could be used in the NGroups resource.
	ContainerGroupProfiles []ContainerGroupProfileStubResponse `pulumi:"containerGroupProfiles"`
	// The elastic profile.
	ElasticProfile *ElasticProfileResponse `pulumi:"elasticProfile"`
	// The resource id.
	Id string `pulumi:"id"`
	// The identity of the NGroup, if configured.
	Identity *NGroupIdentityResponse `pulumi:"identity"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource name.
	Name string `pulumi:"name"`
	// Provides options w.r.t allocation and management w.r.t certain placement policies. These utilize capabilities provided by the underlying Azure infrastructure. They are typically used for high availability scenarios. E.g., distributing CGs across fault domains.
	PlacementProfile *PlacementProfileResponse `pulumi:"placementProfile"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
	// Used by the customer to specify the way to update the Container Groups in NGroup.
	UpdateProfile *UpdateProfileResponse `pulumi:"updateProfile"`
	// The zones for the container group.
	Zones []string `pulumi:"zones"`
}

func LookupNGroupOutput(ctx *pulumi.Context, args LookupNGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNGroupResultOutput, error) {
			args := v.(LookupNGroupArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupNGroupResult
			secret, err := ctx.InvokePackageRaw("azure-native:containerinstance/v20241101preview:getNGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupNGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupNGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupNGroupResultOutput), nil
			}
			return output, nil
		}).(LookupNGroupResultOutput)
}

type LookupNGroupOutputArgs struct {
	// The NGroups name.
	NgroupsName pulumi.StringInput `pulumi:"ngroupsName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNGroupArgs)(nil)).Elem()
}

// Describes the NGroups resource.
type LookupNGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNGroupResult)(nil)).Elem()
}

func (o LookupNGroupResultOutput) ToLookupNGroupResultOutput() LookupNGroupResultOutput {
	return o
}

func (o LookupNGroupResultOutput) ToLookupNGroupResultOutputWithContext(ctx context.Context) LookupNGroupResultOutput {
	return o
}

// The Container Group Profiles that could be used in the NGroups resource.
func (o LookupNGroupResultOutput) ContainerGroupProfiles() ContainerGroupProfileStubResponseArrayOutput {
	return o.ApplyT(func(v LookupNGroupResult) []ContainerGroupProfileStubResponse { return v.ContainerGroupProfiles }).(ContainerGroupProfileStubResponseArrayOutput)
}

// The elastic profile.
func (o LookupNGroupResultOutput) ElasticProfile() ElasticProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *ElasticProfileResponse { return v.ElasticProfile }).(ElasticProfileResponsePtrOutput)
}

// The resource id.
func (o LookupNGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the NGroup, if configured.
func (o LookupNGroupResultOutput) Identity() NGroupIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *NGroupIdentityResponse { return v.Identity }).(NGroupIdentityResponsePtrOutput)
}

// The resource location.
func (o LookupNGroupResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource name.
func (o LookupNGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provides options w.r.t allocation and management w.r.t certain placement policies. These utilize capabilities provided by the underlying Azure infrastructure. They are typically used for high availability scenarios. E.g., distributing CGs across fault domains.
func (o LookupNGroupResultOutput) PlacementProfile() PlacementProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *PlacementProfileResponse { return v.PlacementProfile }).(PlacementProfileResponsePtrOutput)
}

// The provisioning state, which only appears in the response.
func (o LookupNGroupResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupNGroupResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNGroupResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The resource tags.
func (o LookupNGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o LookupNGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

// Used by the customer to specify the way to update the Container Groups in NGroup.
func (o LookupNGroupResultOutput) UpdateProfile() UpdateProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupNGroupResult) *UpdateProfileResponse { return v.UpdateProfile }).(UpdateProfileResponsePtrOutput)
}

// The zones for the container group.
func (o LookupNGroupResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNGroupResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNGroupResultOutput{})
}
