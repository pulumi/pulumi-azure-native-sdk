// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240125

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Transfer Storage Blobs or Tables
type DataType string

const (
	DataTypeBlob  = DataType("Blob")
	DataTypeTable = DataType("Table")
)

func (DataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataType)(nil)).Elem()
}

func (e DataType) ToDataTypeOutput() DataTypeOutput {
	return pulumi.ToOutput(e).(DataTypeOutput)
}

func (e DataType) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataTypeOutput)
}

func (e DataType) ToDataTypePtrOutput() DataTypePtrOutput {
	return e.ToDataTypePtrOutputWithContext(context.Background())
}

func (e DataType) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return DataType(e).ToDataTypeOutputWithContext(ctx).ToDataTypePtrOutputWithContext(ctx)
}

func (e DataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataTypeOutput struct{ *pulumi.OutputState }

func (DataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataType)(nil)).Elem()
}

func (o DataTypeOutput) ToDataTypeOutput() DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypePtrOutput() DataTypePtrOutput {
	return o.ToDataTypePtrOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataType) *DataType {
		return &v
	}).(DataTypePtrOutput)
}

func (o DataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataTypePtrOutput struct{ *pulumi.OutputState }

func (DataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataType)(nil)).Elem()
}

func (o DataTypePtrOutput) ToDataTypePtrOutput() DataTypePtrOutput {
	return o
}

func (o DataTypePtrOutput) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return o
}

func (o DataTypePtrOutput) Elem() DataTypeOutput {
	return o.ApplyT(func(v *DataType) DataType {
		if v != nil {
			return *v
		}
		var ret DataType
		return ret
	}).(DataTypeOutput)
}

func (o DataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataTypeInput is an input type that accepts values of the DataType enum
// A concrete instance of `DataTypeInput` can be one of the following:
//
//	DataTypeBlob
//	DataTypeTable
type DataTypeInput interface {
	pulumi.Input

	ToDataTypeOutput() DataTypeOutput
	ToDataTypeOutputWithContext(context.Context) DataTypeOutput
}

var dataTypePtrType = reflect.TypeOf((**DataType)(nil)).Elem()

type DataTypePtrInput interface {
	pulumi.Input

	ToDataTypePtrOutput() DataTypePtrOutput
	ToDataTypePtrOutputWithContext(context.Context) DataTypePtrOutput
}

type dataTypePtr string

func DataTypePtr(v string) DataTypePtrInput {
	return (*dataTypePtr)(&v)
}

func (*dataTypePtr) ElementType() reflect.Type {
	return dataTypePtrType
}

func (in *dataTypePtr) ToDataTypePtrOutput() DataTypePtrOutput {
	return pulumi.ToOutput(in).(DataTypePtrOutput)
}

func (in *dataTypePtr) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataTypePtrOutput)
}

// Direction of data movement
type Direction string

const (
	DirectionSend    = Direction("Send")
	DirectionReceive = Direction("Receive")
)

func (Direction) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (e Direction) ToDirectionOutput() DirectionOutput {
	return pulumi.ToOutput(e).(DirectionOutput)
}

func (e Direction) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DirectionOutput)
}

func (e Direction) ToDirectionPtrOutput() DirectionPtrOutput {
	return e.ToDirectionPtrOutputWithContext(context.Background())
}

func (e Direction) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return Direction(e).ToDirectionOutputWithContext(ctx).ToDirectionPtrOutputWithContext(ctx)
}

func (e Direction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Direction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DirectionOutput struct{ *pulumi.OutputState }

func (DirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (o DirectionOutput) ToDirectionOutput() DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o.ToDirectionPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Direction) *Direction {
		return &v
	}).(DirectionPtrOutput)
}

func (o DirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DirectionPtrOutput struct{ *pulumi.OutputState }

func (DirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Direction)(nil)).Elem()
}

func (o DirectionPtrOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) Elem() DirectionOutput {
	return o.ApplyT(func(v *Direction) Direction {
		if v != nil {
			return *v
		}
		var ret Direction
		return ret
	}).(DirectionOutput)
}

func (o DirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Direction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DirectionInput is an input type that accepts values of the Direction enum
// A concrete instance of `DirectionInput` can be one of the following:
//
//	DirectionSend
//	DirectionReceive
type DirectionInput interface {
	pulumi.Input

	ToDirectionOutput() DirectionOutput
	ToDirectionOutputWithContext(context.Context) DirectionOutput
}

var directionPtrType = reflect.TypeOf((**Direction)(nil)).Elem()

type DirectionPtrInput interface {
	pulumi.Input

	ToDirectionPtrOutput() DirectionPtrOutput
	ToDirectionPtrOutputWithContext(context.Context) DirectionPtrOutput
}

type directionPtr string

func DirectionPtr(v string) DirectionPtrInput {
	return (*directionPtr)(&v)
}

func (*directionPtr) ElementType() reflect.Type {
	return directionPtrType
}

func (in *directionPtr) ToDirectionPtrOutput() DirectionPtrOutput {
	return pulumi.ToOutput(in).(DirectionPtrOutput)
}

func (in *directionPtr) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DirectionPtrOutput)
}

// Billing tier for this messaging flow
type FlowBillingTier string

const (
	FlowBillingTierBlobTransport = FlowBillingTier("BlobTransport")
	FlowBillingTierStandard      = FlowBillingTier("Standard")
	FlowBillingTierPremium       = FlowBillingTier("Premium")
)

func (FlowBillingTier) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowBillingTier)(nil)).Elem()
}

func (e FlowBillingTier) ToFlowBillingTierOutput() FlowBillingTierOutput {
	return pulumi.ToOutput(e).(FlowBillingTierOutput)
}

func (e FlowBillingTier) ToFlowBillingTierOutputWithContext(ctx context.Context) FlowBillingTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowBillingTierOutput)
}

func (e FlowBillingTier) ToFlowBillingTierPtrOutput() FlowBillingTierPtrOutput {
	return e.ToFlowBillingTierPtrOutputWithContext(context.Background())
}

func (e FlowBillingTier) ToFlowBillingTierPtrOutputWithContext(ctx context.Context) FlowBillingTierPtrOutput {
	return FlowBillingTier(e).ToFlowBillingTierOutputWithContext(ctx).ToFlowBillingTierPtrOutputWithContext(ctx)
}

func (e FlowBillingTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowBillingTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowBillingTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowBillingTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowBillingTierOutput struct{ *pulumi.OutputState }

func (FlowBillingTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowBillingTier)(nil)).Elem()
}

func (o FlowBillingTierOutput) ToFlowBillingTierOutput() FlowBillingTierOutput {
	return o
}

func (o FlowBillingTierOutput) ToFlowBillingTierOutputWithContext(ctx context.Context) FlowBillingTierOutput {
	return o
}

func (o FlowBillingTierOutput) ToFlowBillingTierPtrOutput() FlowBillingTierPtrOutput {
	return o.ToFlowBillingTierPtrOutputWithContext(context.Background())
}

func (o FlowBillingTierOutput) ToFlowBillingTierPtrOutputWithContext(ctx context.Context) FlowBillingTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowBillingTier) *FlowBillingTier {
		return &v
	}).(FlowBillingTierPtrOutput)
}

func (o FlowBillingTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowBillingTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowBillingTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowBillingTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowBillingTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowBillingTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowBillingTierPtrOutput struct{ *pulumi.OutputState }

func (FlowBillingTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowBillingTier)(nil)).Elem()
}

func (o FlowBillingTierPtrOutput) ToFlowBillingTierPtrOutput() FlowBillingTierPtrOutput {
	return o
}

func (o FlowBillingTierPtrOutput) ToFlowBillingTierPtrOutputWithContext(ctx context.Context) FlowBillingTierPtrOutput {
	return o
}

func (o FlowBillingTierPtrOutput) Elem() FlowBillingTierOutput {
	return o.ApplyT(func(v *FlowBillingTier) FlowBillingTier {
		if v != nil {
			return *v
		}
		var ret FlowBillingTier
		return ret
	}).(FlowBillingTierOutput)
}

func (o FlowBillingTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowBillingTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowBillingTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowBillingTierInput is an input type that accepts values of the FlowBillingTier enum
// A concrete instance of `FlowBillingTierInput` can be one of the following:
//
//	FlowBillingTierBlobTransport
//	FlowBillingTierStandard
//	FlowBillingTierPremium
type FlowBillingTierInput interface {
	pulumi.Input

	ToFlowBillingTierOutput() FlowBillingTierOutput
	ToFlowBillingTierOutputWithContext(context.Context) FlowBillingTierOutput
}

var flowBillingTierPtrType = reflect.TypeOf((**FlowBillingTier)(nil)).Elem()

type FlowBillingTierPtrInput interface {
	pulumi.Input

	ToFlowBillingTierPtrOutput() FlowBillingTierPtrOutput
	ToFlowBillingTierPtrOutputWithContext(context.Context) FlowBillingTierPtrOutput
}

type flowBillingTierPtr string

func FlowBillingTierPtr(v string) FlowBillingTierPtrInput {
	return (*flowBillingTierPtr)(&v)
}

func (*flowBillingTierPtr) ElementType() reflect.Type {
	return flowBillingTierPtrType
}

func (in *flowBillingTierPtr) ToFlowBillingTierPtrOutput() FlowBillingTierPtrOutput {
	return pulumi.ToOutput(in).(FlowBillingTierPtrOutput)
}

func (in *flowBillingTierPtr) ToFlowBillingTierPtrOutputWithContext(ctx context.Context) FlowBillingTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowBillingTierPtrOutput)
}

// Status of the current flow
type FlowStatus string

const (
	FlowStatusEnabled  = FlowStatus("Enabled")
	FlowStatusDisabled = FlowStatus("Disabled")
)

func (FlowStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStatus)(nil)).Elem()
}

func (e FlowStatus) ToFlowStatusOutput() FlowStatusOutput {
	return pulumi.ToOutput(e).(FlowStatusOutput)
}

func (e FlowStatus) ToFlowStatusOutputWithContext(ctx context.Context) FlowStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowStatusOutput)
}

func (e FlowStatus) ToFlowStatusPtrOutput() FlowStatusPtrOutput {
	return e.ToFlowStatusPtrOutputWithContext(context.Background())
}

func (e FlowStatus) ToFlowStatusPtrOutputWithContext(ctx context.Context) FlowStatusPtrOutput {
	return FlowStatus(e).ToFlowStatusOutputWithContext(ctx).ToFlowStatusPtrOutputWithContext(ctx)
}

func (e FlowStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowStatusOutput struct{ *pulumi.OutputState }

func (FlowStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStatus)(nil)).Elem()
}

func (o FlowStatusOutput) ToFlowStatusOutput() FlowStatusOutput {
	return o
}

func (o FlowStatusOutput) ToFlowStatusOutputWithContext(ctx context.Context) FlowStatusOutput {
	return o
}

func (o FlowStatusOutput) ToFlowStatusPtrOutput() FlowStatusPtrOutput {
	return o.ToFlowStatusPtrOutputWithContext(context.Background())
}

func (o FlowStatusOutput) ToFlowStatusPtrOutputWithContext(ctx context.Context) FlowStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowStatus) *FlowStatus {
		return &v
	}).(FlowStatusPtrOutput)
}

func (o FlowStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowStatusPtrOutput struct{ *pulumi.OutputState }

func (FlowStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStatus)(nil)).Elem()
}

func (o FlowStatusPtrOutput) ToFlowStatusPtrOutput() FlowStatusPtrOutput {
	return o
}

func (o FlowStatusPtrOutput) ToFlowStatusPtrOutputWithContext(ctx context.Context) FlowStatusPtrOutput {
	return o
}

func (o FlowStatusPtrOutput) Elem() FlowStatusOutput {
	return o.ApplyT(func(v *FlowStatus) FlowStatus {
		if v != nil {
			return *v
		}
		var ret FlowStatus
		return ret
	}).(FlowStatusOutput)
}

func (o FlowStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowStatusInput is an input type that accepts values of the FlowStatus enum
// A concrete instance of `FlowStatusInput` can be one of the following:
//
//	FlowStatusEnabled
//	FlowStatusDisabled
type FlowStatusInput interface {
	pulumi.Input

	ToFlowStatusOutput() FlowStatusOutput
	ToFlowStatusOutputWithContext(context.Context) FlowStatusOutput
}

var flowStatusPtrType = reflect.TypeOf((**FlowStatus)(nil)).Elem()

type FlowStatusPtrInput interface {
	pulumi.Input

	ToFlowStatusPtrOutput() FlowStatusPtrOutput
	ToFlowStatusPtrOutputWithContext(context.Context) FlowStatusPtrOutput
}

type flowStatusPtr string

func FlowStatusPtr(v string) FlowStatusPtrInput {
	return (*flowStatusPtr)(&v)
}

func (*flowStatusPtr) ElementType() reflect.Type {
	return flowStatusPtrType
}

func (in *flowStatusPtr) ToFlowStatusPtrOutput() FlowStatusPtrOutput {
	return pulumi.ToOutput(in).(FlowStatusPtrOutput)
}

func (in *flowStatusPtr) ToFlowStatusPtrOutputWithContext(ctx context.Context) FlowStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowStatusPtrOutput)
}

// Flow type for the specified resource
type FlowType string

const (
	FlowTypeUnknown           = FlowType("Unknown")
	FlowTypeComplex           = FlowType("Complex")
	FlowTypeDevSecOps         = FlowType("DevSecOps")
	FlowTypeMessaging         = FlowType("Messaging")
	FlowTypeMission           = FlowType("Mission")
	FlowTypeMicrosoftInternal = FlowType("MicrosoftInternal")
	FlowTypeBasicFiles        = FlowType("BasicFiles")
	FlowTypeData              = FlowType("Data")
)

func (FlowType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowType)(nil)).Elem()
}

func (e FlowType) ToFlowTypeOutput() FlowTypeOutput {
	return pulumi.ToOutput(e).(FlowTypeOutput)
}

func (e FlowType) ToFlowTypeOutputWithContext(ctx context.Context) FlowTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowTypeOutput)
}

func (e FlowType) ToFlowTypePtrOutput() FlowTypePtrOutput {
	return e.ToFlowTypePtrOutputWithContext(context.Background())
}

func (e FlowType) ToFlowTypePtrOutputWithContext(ctx context.Context) FlowTypePtrOutput {
	return FlowType(e).ToFlowTypeOutputWithContext(ctx).ToFlowTypePtrOutputWithContext(ctx)
}

func (e FlowType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowTypeOutput struct{ *pulumi.OutputState }

func (FlowTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowType)(nil)).Elem()
}

func (o FlowTypeOutput) ToFlowTypeOutput() FlowTypeOutput {
	return o
}

func (o FlowTypeOutput) ToFlowTypeOutputWithContext(ctx context.Context) FlowTypeOutput {
	return o
}

func (o FlowTypeOutput) ToFlowTypePtrOutput() FlowTypePtrOutput {
	return o.ToFlowTypePtrOutputWithContext(context.Background())
}

func (o FlowTypeOutput) ToFlowTypePtrOutputWithContext(ctx context.Context) FlowTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowType) *FlowType {
		return &v
	}).(FlowTypePtrOutput)
}

func (o FlowTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowTypePtrOutput struct{ *pulumi.OutputState }

func (FlowTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowType)(nil)).Elem()
}

func (o FlowTypePtrOutput) ToFlowTypePtrOutput() FlowTypePtrOutput {
	return o
}

func (o FlowTypePtrOutput) ToFlowTypePtrOutputWithContext(ctx context.Context) FlowTypePtrOutput {
	return o
}

func (o FlowTypePtrOutput) Elem() FlowTypeOutput {
	return o.ApplyT(func(v *FlowType) FlowType {
		if v != nil {
			return *v
		}
		var ret FlowType
		return ret
	}).(FlowTypeOutput)
}

func (o FlowTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowTypeInput is an input type that accepts values of the FlowType enum
// A concrete instance of `FlowTypeInput` can be one of the following:
//
//	FlowTypeUnknown
//	FlowTypeComplex
//	FlowTypeDevSecOps
//	FlowTypeMessaging
//	FlowTypeMission
//	FlowTypeMicrosoftInternal
//	FlowTypeBasicFiles
//	FlowTypeData
type FlowTypeInput interface {
	pulumi.Input

	ToFlowTypeOutput() FlowTypeOutput
	ToFlowTypeOutputWithContext(context.Context) FlowTypeOutput
}

var flowTypePtrType = reflect.TypeOf((**FlowType)(nil)).Elem()

type FlowTypePtrInput interface {
	pulumi.Input

	ToFlowTypePtrOutput() FlowTypePtrOutput
	ToFlowTypePtrOutputWithContext(context.Context) FlowTypePtrOutput
}

type flowTypePtr string

func FlowTypePtr(v string) FlowTypePtrInput {
	return (*flowTypePtr)(&v)
}

func (*flowTypePtr) ElementType() reflect.Type {
	return flowTypePtrType
}

func (in *flowTypePtr) ToFlowTypePtrOutput() FlowTypePtrOutput {
	return pulumi.ToOutput(in).(FlowTypePtrOutput)
}

func (in *flowTypePtr) ToFlowTypePtrOutputWithContext(ctx context.Context) FlowTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowTypePtrOutput)
}

// The direction pipeline to filter approved schemas.
type ListApprovedSchemasDirection string

const (
	ListApprovedSchemasDirectionSend    = ListApprovedSchemasDirection("Send")
	ListApprovedSchemasDirectionReceive = ListApprovedSchemasDirection("Receive")
)

func (ListApprovedSchemasDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*ListApprovedSchemasDirection)(nil)).Elem()
}

func (e ListApprovedSchemasDirection) ToListApprovedSchemasDirectionOutput() ListApprovedSchemasDirectionOutput {
	return pulumi.ToOutput(e).(ListApprovedSchemasDirectionOutput)
}

func (e ListApprovedSchemasDirection) ToListApprovedSchemasDirectionOutputWithContext(ctx context.Context) ListApprovedSchemasDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ListApprovedSchemasDirectionOutput)
}

func (e ListApprovedSchemasDirection) ToListApprovedSchemasDirectionPtrOutput() ListApprovedSchemasDirectionPtrOutput {
	return e.ToListApprovedSchemasDirectionPtrOutputWithContext(context.Background())
}

func (e ListApprovedSchemasDirection) ToListApprovedSchemasDirectionPtrOutputWithContext(ctx context.Context) ListApprovedSchemasDirectionPtrOutput {
	return ListApprovedSchemasDirection(e).ToListApprovedSchemasDirectionOutputWithContext(ctx).ToListApprovedSchemasDirectionPtrOutputWithContext(ctx)
}

func (e ListApprovedSchemasDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListApprovedSchemasDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListApprovedSchemasDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ListApprovedSchemasDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ListApprovedSchemasDirectionOutput struct{ *pulumi.OutputState }

func (ListApprovedSchemasDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListApprovedSchemasDirection)(nil)).Elem()
}

func (o ListApprovedSchemasDirectionOutput) ToListApprovedSchemasDirectionOutput() ListApprovedSchemasDirectionOutput {
	return o
}

func (o ListApprovedSchemasDirectionOutput) ToListApprovedSchemasDirectionOutputWithContext(ctx context.Context) ListApprovedSchemasDirectionOutput {
	return o
}

func (o ListApprovedSchemasDirectionOutput) ToListApprovedSchemasDirectionPtrOutput() ListApprovedSchemasDirectionPtrOutput {
	return o.ToListApprovedSchemasDirectionPtrOutputWithContext(context.Background())
}

func (o ListApprovedSchemasDirectionOutput) ToListApprovedSchemasDirectionPtrOutputWithContext(ctx context.Context) ListApprovedSchemasDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListApprovedSchemasDirection) *ListApprovedSchemasDirection {
		return &v
	}).(ListApprovedSchemasDirectionPtrOutput)
}

func (o ListApprovedSchemasDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ListApprovedSchemasDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListApprovedSchemasDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ListApprovedSchemasDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListApprovedSchemasDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListApprovedSchemasDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ListApprovedSchemasDirectionPtrOutput struct{ *pulumi.OutputState }

func (ListApprovedSchemasDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListApprovedSchemasDirection)(nil)).Elem()
}

func (o ListApprovedSchemasDirectionPtrOutput) ToListApprovedSchemasDirectionPtrOutput() ListApprovedSchemasDirectionPtrOutput {
	return o
}

func (o ListApprovedSchemasDirectionPtrOutput) ToListApprovedSchemasDirectionPtrOutputWithContext(ctx context.Context) ListApprovedSchemasDirectionPtrOutput {
	return o
}

func (o ListApprovedSchemasDirectionPtrOutput) Elem() ListApprovedSchemasDirectionOutput {
	return o.ApplyT(func(v *ListApprovedSchemasDirection) ListApprovedSchemasDirection {
		if v != nil {
			return *v
		}
		var ret ListApprovedSchemasDirection
		return ret
	}).(ListApprovedSchemasDirectionOutput)
}

func (o ListApprovedSchemasDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListApprovedSchemasDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ListApprovedSchemasDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ListApprovedSchemasDirectionInput is an input type that accepts values of the ListApprovedSchemasDirection enum
// A concrete instance of `ListApprovedSchemasDirectionInput` can be one of the following:
//
//	ListApprovedSchemasDirectionSend
//	ListApprovedSchemasDirectionReceive
type ListApprovedSchemasDirectionInput interface {
	pulumi.Input

	ToListApprovedSchemasDirectionOutput() ListApprovedSchemasDirectionOutput
	ToListApprovedSchemasDirectionOutputWithContext(context.Context) ListApprovedSchemasDirectionOutput
}

var listApprovedSchemasDirectionPtrType = reflect.TypeOf((**ListApprovedSchemasDirection)(nil)).Elem()

type ListApprovedSchemasDirectionPtrInput interface {
	pulumi.Input

	ToListApprovedSchemasDirectionPtrOutput() ListApprovedSchemasDirectionPtrOutput
	ToListApprovedSchemasDirectionPtrOutputWithContext(context.Context) ListApprovedSchemasDirectionPtrOutput
}

type listApprovedSchemasDirectionPtr string

func ListApprovedSchemasDirectionPtr(v string) ListApprovedSchemasDirectionPtrInput {
	return (*listApprovedSchemasDirectionPtr)(&v)
}

func (*listApprovedSchemasDirectionPtr) ElementType() reflect.Type {
	return listApprovedSchemasDirectionPtrType
}

func (in *listApprovedSchemasDirectionPtr) ToListApprovedSchemasDirectionPtrOutput() ListApprovedSchemasDirectionPtrOutput {
	return pulumi.ToOutput(in).(ListApprovedSchemasDirectionPtrOutput)
}

func (in *listApprovedSchemasDirectionPtr) ToListApprovedSchemasDirectionPtrOutputWithContext(ctx context.Context) ListApprovedSchemasDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ListApprovedSchemasDirectionPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Status of the schema
type SchemaStatus string

const (
	SchemaStatusNew      = SchemaStatus("New")
	SchemaStatusApproved = SchemaStatus("Approved")
)

func (SchemaStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaStatus)(nil)).Elem()
}

func (e SchemaStatus) ToSchemaStatusOutput() SchemaStatusOutput {
	return pulumi.ToOutput(e).(SchemaStatusOutput)
}

func (e SchemaStatus) ToSchemaStatusOutputWithContext(ctx context.Context) SchemaStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaStatusOutput)
}

func (e SchemaStatus) ToSchemaStatusPtrOutput() SchemaStatusPtrOutput {
	return e.ToSchemaStatusPtrOutputWithContext(context.Background())
}

func (e SchemaStatus) ToSchemaStatusPtrOutputWithContext(ctx context.Context) SchemaStatusPtrOutput {
	return SchemaStatus(e).ToSchemaStatusOutputWithContext(ctx).ToSchemaStatusPtrOutputWithContext(ctx)
}

func (e SchemaStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaStatusOutput struct{ *pulumi.OutputState }

func (SchemaStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaStatus)(nil)).Elem()
}

func (o SchemaStatusOutput) ToSchemaStatusOutput() SchemaStatusOutput {
	return o
}

func (o SchemaStatusOutput) ToSchemaStatusOutputWithContext(ctx context.Context) SchemaStatusOutput {
	return o
}

func (o SchemaStatusOutput) ToSchemaStatusPtrOutput() SchemaStatusPtrOutput {
	return o.ToSchemaStatusPtrOutputWithContext(context.Background())
}

func (o SchemaStatusOutput) ToSchemaStatusPtrOutputWithContext(ctx context.Context) SchemaStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaStatus) *SchemaStatus {
		return &v
	}).(SchemaStatusPtrOutput)
}

func (o SchemaStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaStatusPtrOutput struct{ *pulumi.OutputState }

func (SchemaStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaStatus)(nil)).Elem()
}

func (o SchemaStatusPtrOutput) ToSchemaStatusPtrOutput() SchemaStatusPtrOutput {
	return o
}

func (o SchemaStatusPtrOutput) ToSchemaStatusPtrOutputWithContext(ctx context.Context) SchemaStatusPtrOutput {
	return o
}

func (o SchemaStatusPtrOutput) Elem() SchemaStatusOutput {
	return o.ApplyT(func(v *SchemaStatus) SchemaStatus {
		if v != nil {
			return *v
		}
		var ret SchemaStatus
		return ret
	}).(SchemaStatusOutput)
}

func (o SchemaStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaStatusInput is an input type that accepts values of the SchemaStatus enum
// A concrete instance of `SchemaStatusInput` can be one of the following:
//
//	SchemaStatusNew
//	SchemaStatusApproved
type SchemaStatusInput interface {
	pulumi.Input

	ToSchemaStatusOutput() SchemaStatusOutput
	ToSchemaStatusOutputWithContext(context.Context) SchemaStatusOutput
}

var schemaStatusPtrType = reflect.TypeOf((**SchemaStatus)(nil)).Elem()

type SchemaStatusPtrInput interface {
	pulumi.Input

	ToSchemaStatusPtrOutput() SchemaStatusPtrOutput
	ToSchemaStatusPtrOutputWithContext(context.Context) SchemaStatusPtrOutput
}

type schemaStatusPtr string

func SchemaStatusPtr(v string) SchemaStatusPtrInput {
	return (*schemaStatusPtr)(&v)
}

func (*schemaStatusPtr) ElementType() reflect.Type {
	return schemaStatusPtrType
}

func (in *schemaStatusPtr) ToSchemaStatusPtrOutput() SchemaStatusPtrOutput {
	return pulumi.ToOutput(in).(SchemaStatusPtrOutput)
}

func (in *schemaStatusPtr) ToSchemaStatusPtrOutputWithContext(ctx context.Context) SchemaStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DataTypeOutput{})
	pulumi.RegisterOutputType(DataTypePtrOutput{})
	pulumi.RegisterOutputType(DirectionOutput{})
	pulumi.RegisterOutputType(DirectionPtrOutput{})
	pulumi.RegisterOutputType(FlowBillingTierOutput{})
	pulumi.RegisterOutputType(FlowBillingTierPtrOutput{})
	pulumi.RegisterOutputType(FlowStatusOutput{})
	pulumi.RegisterOutputType(FlowStatusPtrOutput{})
	pulumi.RegisterOutputType(FlowTypeOutput{})
	pulumi.RegisterOutputType(FlowTypePtrOutput{})
	pulumi.RegisterOutputType(ListApprovedSchemasDirectionOutput{})
	pulumi.RegisterOutputType(ListApprovedSchemasDirectionPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SchemaStatusOutput{})
	pulumi.RegisterOutputType(SchemaStatusPtrOutput{})
}
