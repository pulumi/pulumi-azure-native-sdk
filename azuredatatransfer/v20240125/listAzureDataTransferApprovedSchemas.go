// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240125

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists approved schemas for Azure Data Transfer.
func ListAzureDataTransferApprovedSchemas(ctx *pulumi.Context, args *ListAzureDataTransferApprovedSchemasArgs, opts ...pulumi.InvokeOption) (*ListAzureDataTransferApprovedSchemasResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListAzureDataTransferApprovedSchemasResult
	err := ctx.Invoke("azure-native:azuredatatransfer/v20240125:listAzureDataTransferApprovedSchemas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAzureDataTransferApprovedSchemasArgs struct {
	// The direction pipeline to filter approved schemas.
	Direction *string `pulumi:"direction"`
	// The name of the pipeline to filter approved schemas.
	Pipeline *string `pulumi:"pipeline"`
}

// The schemas list result.
type ListAzureDataTransferApprovedSchemasResult struct {
	// Schemas array.
	Value []SchemaResponse `pulumi:"value"`
}

func ListAzureDataTransferApprovedSchemasOutput(ctx *pulumi.Context, args ListAzureDataTransferApprovedSchemasOutputArgs, opts ...pulumi.InvokeOption) ListAzureDataTransferApprovedSchemasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAzureDataTransferApprovedSchemasResult, error) {
			args := v.(ListAzureDataTransferApprovedSchemasArgs)
			r, err := ListAzureDataTransferApprovedSchemas(ctx, &args, opts...)
			var s ListAzureDataTransferApprovedSchemasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListAzureDataTransferApprovedSchemasResultOutput)
}

type ListAzureDataTransferApprovedSchemasOutputArgs struct {
	// The direction pipeline to filter approved schemas.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// The name of the pipeline to filter approved schemas.
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
}

func (ListAzureDataTransferApprovedSchemasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAzureDataTransferApprovedSchemasArgs)(nil)).Elem()
}

// The schemas list result.
type ListAzureDataTransferApprovedSchemasResultOutput struct{ *pulumi.OutputState }

func (ListAzureDataTransferApprovedSchemasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAzureDataTransferApprovedSchemasResult)(nil)).Elem()
}

func (o ListAzureDataTransferApprovedSchemasResultOutput) ToListAzureDataTransferApprovedSchemasResultOutput() ListAzureDataTransferApprovedSchemasResultOutput {
	return o
}

func (o ListAzureDataTransferApprovedSchemasResultOutput) ToListAzureDataTransferApprovedSchemasResultOutputWithContext(ctx context.Context) ListAzureDataTransferApprovedSchemasResultOutput {
	return o
}

// Schemas array.
func (o ListAzureDataTransferApprovedSchemasResultOutput) Value() SchemaResponseArrayOutput {
	return o.ApplyT(func(v ListAzureDataTransferApprovedSchemasResult) []SchemaResponse { return v.Value }).(SchemaResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAzureDataTransferApprovedSchemasResultOutput{})
}
