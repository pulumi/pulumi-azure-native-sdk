// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredatatransfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets flow resource.
//
// Uses Azure REST API version 2024-09-27.
//
// Other available API versions: 2023-10-11-preview, 2024-01-25, 2024-05-07, 2024-09-11, 2025-03-01-preview, 2025-04-11-preview, 2025-05-21. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azuredatatransfer [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupFlow(ctx *pulumi.Context, args *LookupFlowArgs, opts ...pulumi.InvokeOption) (*LookupFlowResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFlowResult
	err := ctx.Invoke("azure-native:azuredatatransfer:getFlow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFlowArgs struct {
	// The name for the connection that is to be requested.
	ConnectionName string `pulumi:"connectionName"`
	// The name for the flow that is to be onboarded.
	FlowName string `pulumi:"flowName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The flow resource definition.
type LookupFlowResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed identity of the flow resource, if configured.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Plan for the resource.
	Plan *PlanResponse `pulumi:"plan"`
	// Properties of flow
	Properties FlowPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupFlowOutput(ctx *pulumi.Context, args LookupFlowOutputArgs, opts ...pulumi.InvokeOption) LookupFlowResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFlowResultOutput, error) {
			args := v.(LookupFlowArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:azuredatatransfer:getFlow", args, LookupFlowResultOutput{}, options).(LookupFlowResultOutput), nil
		}).(LookupFlowResultOutput)
}

type LookupFlowOutputArgs struct {
	// The name for the connection that is to be requested.
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The name for the flow that is to be onboarded.
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFlowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowArgs)(nil)).Elem()
}

// The flow resource definition.
type LookupFlowResultOutput struct{ *pulumi.OutputState }

func (LookupFlowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowResult)(nil)).Elem()
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutput() LookupFlowResultOutput {
	return o
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutputWithContext(ctx context.Context) LookupFlowResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupFlowResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupFlowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed identity of the flow resource, if configured.
func (o LookupFlowResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupFlowResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupFlowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Name }).(pulumi.StringOutput)
}

// Plan for the resource.
func (o LookupFlowResultOutput) Plan() PlanResponsePtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *PlanResponse { return v.Plan }).(PlanResponsePtrOutput)
}

// Properties of flow
func (o LookupFlowResultOutput) Properties() FlowPropertiesResponseOutput {
	return o.ApplyT(func(v LookupFlowResult) FlowPropertiesResponse { return v.Properties }).(FlowPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupFlowResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupFlowResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupFlowResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFlowResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupFlowResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlowResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowResultOutput{})
}
