// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredatatransfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists all pending connections for a connection.
//
// Uses Azure REST API version 2024-09-27.
//
// Other available API versions: 2023-10-11-preview, 2024-01-25, 2024-05-07, 2024-09-11, 2025-03-01-preview, 2025-04-11-preview, 2025-05-21. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native azuredatatransfer [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListListPendingConnection(ctx *pulumi.Context, args *ListListPendingConnectionArgs, opts ...pulumi.InvokeOption) (*ListListPendingConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListListPendingConnectionResult
	err := ctx.Invoke("azure-native:azuredatatransfer:listListPendingConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListListPendingConnectionArgs struct {
	// The name for the connection that is to be requested.
	ConnectionName string `pulumi:"connectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The connections list result.
type ListListPendingConnectionResult struct {
	// Link to next results
	NextLink *string `pulumi:"nextLink"`
	// Connections array.
	Value []PendingConnectionResponse `pulumi:"value"`
}

func ListListPendingConnectionOutput(ctx *pulumi.Context, args ListListPendingConnectionOutputArgs, opts ...pulumi.InvokeOption) ListListPendingConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListListPendingConnectionResultOutput, error) {
			args := v.(ListListPendingConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:azuredatatransfer:listListPendingConnection", args, ListListPendingConnectionResultOutput{}, options).(ListListPendingConnectionResultOutput), nil
		}).(ListListPendingConnectionResultOutput)
}

type ListListPendingConnectionOutputArgs struct {
	// The name for the connection that is to be requested.
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListListPendingConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListListPendingConnectionArgs)(nil)).Elem()
}

// The connections list result.
type ListListPendingConnectionResultOutput struct{ *pulumi.OutputState }

func (ListListPendingConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListListPendingConnectionResult)(nil)).Elem()
}

func (o ListListPendingConnectionResultOutput) ToListListPendingConnectionResultOutput() ListListPendingConnectionResultOutput {
	return o
}

func (o ListListPendingConnectionResultOutput) ToListListPendingConnectionResultOutputWithContext(ctx context.Context) ListListPendingConnectionResultOutput {
	return o
}

// Link to next results
func (o ListListPendingConnectionResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListListPendingConnectionResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// Connections array.
func (o ListListPendingConnectionResultOutput) Value() PendingConnectionResponseArrayOutput {
	return o.ApplyT(func(v ListListPendingConnectionResult) []PendingConnectionResponse { return v.Value }).(PendingConnectionResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListListPendingConnectionResultOutput{})
}
