// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the source addresses for the specified flow.
func GetFlowSourceAddresses(ctx *pulumi.Context, args *GetFlowSourceAddressesArgs, opts ...pulumi.InvokeOption) (*GetFlowSourceAddressesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetFlowSourceAddressesResult
	err := ctx.Invoke("azure-native:azuredatatransfer/v20250301preview:getFlowSourceAddresses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetFlowSourceAddressesArgs struct {
	// The name for the connection that is to be requested.
	ConnectionName string `pulumi:"connectionName"`
	// The name for the flow that is to be onboarded.
	FlowName string `pulumi:"flowName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The source IP address and CIDR ranges of the stream
type GetFlowSourceAddressesResult struct {
	// A source IP address or CIDR range
	SourceAddresses []string `pulumi:"sourceAddresses"`
}

func GetFlowSourceAddressesOutput(ctx *pulumi.Context, args GetFlowSourceAddressesOutputArgs, opts ...pulumi.InvokeOption) GetFlowSourceAddressesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlowSourceAddressesResultOutput, error) {
			args := v.(GetFlowSourceAddressesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:azuredatatransfer/v20250301preview:getFlowSourceAddresses", args, GetFlowSourceAddressesResultOutput{}, options).(GetFlowSourceAddressesResultOutput), nil
		}).(GetFlowSourceAddressesResultOutput)
}

type GetFlowSourceAddressesOutputArgs struct {
	// The name for the connection that is to be requested.
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The name for the flow that is to be onboarded.
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetFlowSourceAddressesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowSourceAddressesArgs)(nil)).Elem()
}

// The source IP address and CIDR ranges of the stream
type GetFlowSourceAddressesResultOutput struct{ *pulumi.OutputState }

func (GetFlowSourceAddressesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowSourceAddressesResult)(nil)).Elem()
}

func (o GetFlowSourceAddressesResultOutput) ToGetFlowSourceAddressesResultOutput() GetFlowSourceAddressesResultOutput {
	return o
}

func (o GetFlowSourceAddressesResultOutput) ToGetFlowSourceAddressesResultOutputWithContext(ctx context.Context) GetFlowSourceAddressesResultOutput {
	return o
}

// A source IP address or CIDR range
func (o GetFlowSourceAddressesResultOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlowSourceAddressesResult) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlowSourceAddressesResultOutput{})
}
