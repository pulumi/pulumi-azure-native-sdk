// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fileshares

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The storage media tier of the file share.
type MediaTier string

const (
	// SSD media tier.
	MediaTierSSD = MediaTier("SSD")
)

func (MediaTier) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaTier)(nil)).Elem()
}

func (e MediaTier) ToMediaTierOutput() MediaTierOutput {
	return pulumi.ToOutput(e).(MediaTierOutput)
}

func (e MediaTier) ToMediaTierOutputWithContext(ctx context.Context) MediaTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MediaTierOutput)
}

func (e MediaTier) ToMediaTierPtrOutput() MediaTierPtrOutput {
	return e.ToMediaTierPtrOutputWithContext(context.Background())
}

func (e MediaTier) ToMediaTierPtrOutputWithContext(ctx context.Context) MediaTierPtrOutput {
	return MediaTier(e).ToMediaTierOutputWithContext(ctx).ToMediaTierPtrOutputWithContext(ctx)
}

func (e MediaTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MediaTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MediaTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MediaTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MediaTierOutput struct{ *pulumi.OutputState }

func (MediaTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaTier)(nil)).Elem()
}

func (o MediaTierOutput) ToMediaTierOutput() MediaTierOutput {
	return o
}

func (o MediaTierOutput) ToMediaTierOutputWithContext(ctx context.Context) MediaTierOutput {
	return o
}

func (o MediaTierOutput) ToMediaTierPtrOutput() MediaTierPtrOutput {
	return o.ToMediaTierPtrOutputWithContext(context.Background())
}

func (o MediaTierOutput) ToMediaTierPtrOutputWithContext(ctx context.Context) MediaTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MediaTier) *MediaTier {
		return &v
	}).(MediaTierPtrOutput)
}

func (o MediaTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MediaTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MediaTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MediaTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MediaTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MediaTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MediaTierPtrOutput struct{ *pulumi.OutputState }

func (MediaTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaTier)(nil)).Elem()
}

func (o MediaTierPtrOutput) ToMediaTierPtrOutput() MediaTierPtrOutput {
	return o
}

func (o MediaTierPtrOutput) ToMediaTierPtrOutputWithContext(ctx context.Context) MediaTierPtrOutput {
	return o
}

func (o MediaTierPtrOutput) Elem() MediaTierOutput {
	return o.ApplyT(func(v *MediaTier) MediaTier {
		if v != nil {
			return *v
		}
		var ret MediaTier
		return ret
	}).(MediaTierOutput)
}

func (o MediaTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MediaTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MediaTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MediaTierInput is an input type that accepts values of the MediaTier enum
// A concrete instance of `MediaTierInput` can be one of the following:
//
//	MediaTierSSD
type MediaTierInput interface {
	pulumi.Input

	ToMediaTierOutput() MediaTierOutput
	ToMediaTierOutputWithContext(context.Context) MediaTierOutput
}

var mediaTierPtrType = reflect.TypeOf((**MediaTier)(nil)).Elem()

type MediaTierPtrInput interface {
	pulumi.Input

	ToMediaTierPtrOutput() MediaTierPtrOutput
	ToMediaTierPtrOutputWithContext(context.Context) MediaTierPtrOutput
}

type mediaTierPtr string

func MediaTierPtr(v string) MediaTierPtrInput {
	return (*mediaTierPtr)(&v)
}

func (*mediaTierPtr) ElementType() reflect.Type {
	return mediaTierPtrType
}

func (in *mediaTierPtr) ToMediaTierPtrOutput() MediaTierPtrOutput {
	return pulumi.ToOutput(in).(MediaTierPtrOutput)
}

func (in *mediaTierPtr) ToMediaTierPtrOutputWithContext(ctx context.Context) MediaTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MediaTierPtrOutput)
}

// The file sharing protocol for this file share.
type Protocol string

const (
	// NFS protocol.
	ProtocolNFS = Protocol("NFS")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts values of the Protocol enum
// A concrete instance of `ProtocolInput` can be one of the following:
//
//	ProtocolNFS
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

// Gets or sets allow or disallow public network access to azure managed file share
type PublicNetworkAccess string

const (
	// The public network access is enabled
	PublicNetworkAccessEnabled = PublicNetworkAccess("Enabled")
	// The public network access is disabled
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// The chosen redundancy level of the file share.
type Redundancy string

const (
	// Local redundancy.
	RedundancyLocal = Redundancy("Local")
	// Zone redundancy.
	RedundancyZone = Redundancy("Zone")
)

func (Redundancy) ElementType() reflect.Type {
	return reflect.TypeOf((*Redundancy)(nil)).Elem()
}

func (e Redundancy) ToRedundancyOutput() RedundancyOutput {
	return pulumi.ToOutput(e).(RedundancyOutput)
}

func (e Redundancy) ToRedundancyOutputWithContext(ctx context.Context) RedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RedundancyOutput)
}

func (e Redundancy) ToRedundancyPtrOutput() RedundancyPtrOutput {
	return e.ToRedundancyPtrOutputWithContext(context.Background())
}

func (e Redundancy) ToRedundancyPtrOutputWithContext(ctx context.Context) RedundancyPtrOutput {
	return Redundancy(e).ToRedundancyOutputWithContext(ctx).ToRedundancyPtrOutputWithContext(ctx)
}

func (e Redundancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Redundancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Redundancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Redundancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RedundancyOutput struct{ *pulumi.OutputState }

func (RedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Redundancy)(nil)).Elem()
}

func (o RedundancyOutput) ToRedundancyOutput() RedundancyOutput {
	return o
}

func (o RedundancyOutput) ToRedundancyOutputWithContext(ctx context.Context) RedundancyOutput {
	return o
}

func (o RedundancyOutput) ToRedundancyPtrOutput() RedundancyPtrOutput {
	return o.ToRedundancyPtrOutputWithContext(context.Background())
}

func (o RedundancyOutput) ToRedundancyPtrOutputWithContext(ctx context.Context) RedundancyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Redundancy) *Redundancy {
		return &v
	}).(RedundancyPtrOutput)
}

func (o RedundancyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedundancyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Redundancy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedundancyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedundancyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Redundancy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedundancyPtrOutput struct{ *pulumi.OutputState }

func (RedundancyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Redundancy)(nil)).Elem()
}

func (o RedundancyPtrOutput) ToRedundancyPtrOutput() RedundancyPtrOutput {
	return o
}

func (o RedundancyPtrOutput) ToRedundancyPtrOutputWithContext(ctx context.Context) RedundancyPtrOutput {
	return o
}

func (o RedundancyPtrOutput) Elem() RedundancyOutput {
	return o.ApplyT(func(v *Redundancy) Redundancy {
		if v != nil {
			return *v
		}
		var ret Redundancy
		return ret
	}).(RedundancyOutput)
}

func (o RedundancyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedundancyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Redundancy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RedundancyInput is an input type that accepts values of the Redundancy enum
// A concrete instance of `RedundancyInput` can be one of the following:
//
//	RedundancyLocal
//	RedundancyZone
type RedundancyInput interface {
	pulumi.Input

	ToRedundancyOutput() RedundancyOutput
	ToRedundancyOutputWithContext(context.Context) RedundancyOutput
}

var redundancyPtrType = reflect.TypeOf((**Redundancy)(nil)).Elem()

type RedundancyPtrInput interface {
	pulumi.Input

	ToRedundancyPtrOutput() RedundancyPtrOutput
	ToRedundancyPtrOutputWithContext(context.Context) RedundancyPtrOutput
}

type redundancyPtr string

func RedundancyPtr(v string) RedundancyPtrInput {
	return (*redundancyPtr)(&v)
}

func (*redundancyPtr) ElementType() reflect.Type {
	return redundancyPtrType
}

func (in *redundancyPtr) ToRedundancyPtrOutput() RedundancyPtrOutput {
	return pulumi.ToOutput(in).(RedundancyPtrOutput)
}

func (in *redundancyPtr) ToRedundancyPtrOutputWithContext(ctx context.Context) RedundancyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RedundancyPtrOutput)
}

// Root squash defines how root users on clients are mapped to the NFS share.
type ShareRootSquash string

const (
	// No root squash.
	ShareRootSquashNoRootSquash = ShareRootSquash("NoRootSquash")
	// Root squash.
	ShareRootSquashRootSquash = ShareRootSquash("RootSquash")
	// All squash.
	ShareRootSquashAllSquash = ShareRootSquash("AllSquash")
)

func (ShareRootSquash) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareRootSquash)(nil)).Elem()
}

func (e ShareRootSquash) ToShareRootSquashOutput() ShareRootSquashOutput {
	return pulumi.ToOutput(e).(ShareRootSquashOutput)
}

func (e ShareRootSquash) ToShareRootSquashOutputWithContext(ctx context.Context) ShareRootSquashOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ShareRootSquashOutput)
}

func (e ShareRootSquash) ToShareRootSquashPtrOutput() ShareRootSquashPtrOutput {
	return e.ToShareRootSquashPtrOutputWithContext(context.Background())
}

func (e ShareRootSquash) ToShareRootSquashPtrOutputWithContext(ctx context.Context) ShareRootSquashPtrOutput {
	return ShareRootSquash(e).ToShareRootSquashOutputWithContext(ctx).ToShareRootSquashPtrOutputWithContext(ctx)
}

func (e ShareRootSquash) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShareRootSquash) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShareRootSquash) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ShareRootSquash) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ShareRootSquashOutput struct{ *pulumi.OutputState }

func (ShareRootSquashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareRootSquash)(nil)).Elem()
}

func (o ShareRootSquashOutput) ToShareRootSquashOutput() ShareRootSquashOutput {
	return o
}

func (o ShareRootSquashOutput) ToShareRootSquashOutputWithContext(ctx context.Context) ShareRootSquashOutput {
	return o
}

func (o ShareRootSquashOutput) ToShareRootSquashPtrOutput() ShareRootSquashPtrOutput {
	return o.ToShareRootSquashPtrOutputWithContext(context.Background())
}

func (o ShareRootSquashOutput) ToShareRootSquashPtrOutputWithContext(ctx context.Context) ShareRootSquashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShareRootSquash) *ShareRootSquash {
		return &v
	}).(ShareRootSquashPtrOutput)
}

func (o ShareRootSquashOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ShareRootSquashOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShareRootSquash) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ShareRootSquashOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShareRootSquashOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShareRootSquash) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ShareRootSquashPtrOutput struct{ *pulumi.OutputState }

func (ShareRootSquashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareRootSquash)(nil)).Elem()
}

func (o ShareRootSquashPtrOutput) ToShareRootSquashPtrOutput() ShareRootSquashPtrOutput {
	return o
}

func (o ShareRootSquashPtrOutput) ToShareRootSquashPtrOutputWithContext(ctx context.Context) ShareRootSquashPtrOutput {
	return o
}

func (o ShareRootSquashPtrOutput) Elem() ShareRootSquashOutput {
	return o.ApplyT(func(v *ShareRootSquash) ShareRootSquash {
		if v != nil {
			return *v
		}
		var ret ShareRootSquash
		return ret
	}).(ShareRootSquashOutput)
}

func (o ShareRootSquashPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShareRootSquashPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ShareRootSquash) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ShareRootSquashInput is an input type that accepts values of the ShareRootSquash enum
// A concrete instance of `ShareRootSquashInput` can be one of the following:
//
//	ShareRootSquashNoRootSquash
//	ShareRootSquashRootSquash
//	ShareRootSquashAllSquash
type ShareRootSquashInput interface {
	pulumi.Input

	ToShareRootSquashOutput() ShareRootSquashOutput
	ToShareRootSquashOutputWithContext(context.Context) ShareRootSquashOutput
}

var shareRootSquashPtrType = reflect.TypeOf((**ShareRootSquash)(nil)).Elem()

type ShareRootSquashPtrInput interface {
	pulumi.Input

	ToShareRootSquashPtrOutput() ShareRootSquashPtrOutput
	ToShareRootSquashPtrOutputWithContext(context.Context) ShareRootSquashPtrOutput
}

type shareRootSquashPtr string

func ShareRootSquashPtr(v string) ShareRootSquashPtrInput {
	return (*shareRootSquashPtr)(&v)
}

func (*shareRootSquashPtr) ElementType() reflect.Type {
	return shareRootSquashPtrType
}

func (in *shareRootSquashPtr) ToShareRootSquashPtrOutput() ShareRootSquashPtrOutput {
	return pulumi.ToOutput(in).(ShareRootSquashPtrOutput)
}

func (in *shareRootSquashPtr) ToShareRootSquashPtrOutputWithContext(ctx context.Context) ShareRootSquashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ShareRootSquashPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MediaTierOutput{})
	pulumi.RegisterOutputType(MediaTierPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(RedundancyOutput{})
	pulumi.RegisterOutputType(RedundancyPtrOutput{})
	pulumi.RegisterOutputType(ShareRootSquashOutput{})
	pulumi.RegisterOutputType(ShareRootSquashPtrOutput{})
}
