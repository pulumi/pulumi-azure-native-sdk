// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fileshares

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// File share limits API result.
type FileShareLimitsOutputResponse struct {
	// The limits for the file share.
	Limits FileShareLimitsResponse `pulumi:"limits"`
	// The provisioning constants for the file share.
	ProvisioningConstants FileShareProvisioningConstantsResponse `pulumi:"provisioningConstants"`
}

// File share limits API result.
type FileShareLimitsOutputResponseOutput struct{ *pulumi.OutputState }

func (FileShareLimitsOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareLimitsOutputResponse)(nil)).Elem()
}

func (o FileShareLimitsOutputResponseOutput) ToFileShareLimitsOutputResponseOutput() FileShareLimitsOutputResponseOutput {
	return o
}

func (o FileShareLimitsOutputResponseOutput) ToFileShareLimitsOutputResponseOutputWithContext(ctx context.Context) FileShareLimitsOutputResponseOutput {
	return o
}

// The limits for the file share.
func (o FileShareLimitsOutputResponseOutput) Limits() FileShareLimitsResponseOutput {
	return o.ApplyT(func(v FileShareLimitsOutputResponse) FileShareLimitsResponse { return v.Limits }).(FileShareLimitsResponseOutput)
}

// The provisioning constants for the file share.
func (o FileShareLimitsOutputResponseOutput) ProvisioningConstants() FileShareProvisioningConstantsResponseOutput {
	return o.ApplyT(func(v FileShareLimitsOutputResponse) FileShareProvisioningConstantsResponse {
		return v.ProvisioningConstants
	}).(FileShareProvisioningConstantsResponseOutput)
}

// File share-related limits in the specified subscription/location.
type FileShareLimitsResponse struct {
	// The maximum number of private endpoint connections allowed for a file share.
	MaxFileSharePrivateEndpointConnections int `pulumi:"maxFileSharePrivateEndpointConnections"`
	// The maximum number of snapshots allowed per file share.
	MaxFileShareSnapshots int `pulumi:"maxFileShareSnapshots"`
	// The maximum number of subnets that can be associated with a file share.
	MaxFileShareSubnets int `pulumi:"maxFileShareSubnets"`
	// The maximum number of file shares that can be created.
	MaxFileShares int `pulumi:"maxFileShares"`
	// The maximum provisioned IOPS (Input/Output Operations Per Second) for a file share.
	MaxProvisionedIOPerSec int `pulumi:"maxProvisionedIOPerSec"`
	// The maximum provisioned storage in GiB for a file share.
	MaxProvisionedStorageGiB int `pulumi:"maxProvisionedStorageGiB"`
	// The maximum provisioned throughput in MiB/s for a file share.
	MaxProvisionedThroughputMiBPerSec int `pulumi:"maxProvisionedThroughputMiBPerSec"`
	// The minimum provisioned IOPS (Input/Output Operations Per Second) for a file share.
	MinProvisionedIOPerSec int `pulumi:"minProvisionedIOPerSec"`
	// The minimum provisioned storage in GiB for a file share.
	MinProvisionedStorageGiB int `pulumi:"minProvisionedStorageGiB"`
	// The minimum provisioned throughput in MiB/s for a file share.
	MinProvisionedThroughputMiBPerSec int `pulumi:"minProvisionedThroughputMiBPerSec"`
}

// File share-related limits in the specified subscription/location.
type FileShareLimitsResponseOutput struct{ *pulumi.OutputState }

func (FileShareLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareLimitsResponse)(nil)).Elem()
}

func (o FileShareLimitsResponseOutput) ToFileShareLimitsResponseOutput() FileShareLimitsResponseOutput {
	return o
}

func (o FileShareLimitsResponseOutput) ToFileShareLimitsResponseOutputWithContext(ctx context.Context) FileShareLimitsResponseOutput {
	return o
}

// The maximum number of private endpoint connections allowed for a file share.
func (o FileShareLimitsResponseOutput) MaxFileSharePrivateEndpointConnections() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxFileSharePrivateEndpointConnections }).(pulumi.IntOutput)
}

// The maximum number of snapshots allowed per file share.
func (o FileShareLimitsResponseOutput) MaxFileShareSnapshots() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxFileShareSnapshots }).(pulumi.IntOutput)
}

// The maximum number of subnets that can be associated with a file share.
func (o FileShareLimitsResponseOutput) MaxFileShareSubnets() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxFileShareSubnets }).(pulumi.IntOutput)
}

// The maximum number of file shares that can be created.
func (o FileShareLimitsResponseOutput) MaxFileShares() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxFileShares }).(pulumi.IntOutput)
}

// The maximum provisioned IOPS (Input/Output Operations Per Second) for a file share.
func (o FileShareLimitsResponseOutput) MaxProvisionedIOPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxProvisionedIOPerSec }).(pulumi.IntOutput)
}

// The maximum provisioned storage in GiB for a file share.
func (o FileShareLimitsResponseOutput) MaxProvisionedStorageGiB() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxProvisionedStorageGiB }).(pulumi.IntOutput)
}

// The maximum provisioned throughput in MiB/s for a file share.
func (o FileShareLimitsResponseOutput) MaxProvisionedThroughputMiBPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MaxProvisionedThroughputMiBPerSec }).(pulumi.IntOutput)
}

// The minimum provisioned IOPS (Input/Output Operations Per Second) for a file share.
func (o FileShareLimitsResponseOutput) MinProvisionedIOPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MinProvisionedIOPerSec }).(pulumi.IntOutput)
}

// The minimum provisioned storage in GiB for a file share.
func (o FileShareLimitsResponseOutput) MinProvisionedStorageGiB() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MinProvisionedStorageGiB }).(pulumi.IntOutput)
}

// The minimum provisioned throughput in MiB/s for a file share.
func (o FileShareLimitsResponseOutput) MinProvisionedThroughputMiBPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareLimitsResponse) int { return v.MinProvisionedThroughputMiBPerSec }).(pulumi.IntOutput)
}

// File share properties
type FileShareProperties struct {
	// The storage media tier of the file share.
	MediaTier *string `pulumi:"mediaTier"`
	// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating system.
	MountName *string `pulumi:"mountName"`
	// Protocol settings specific NFS.
	NfsProtocolProperties *NfsProtocolProperties `pulumi:"nfsProtocolProperties"`
	// The file sharing protocol for this file share.
	Protocol *string `pulumi:"protocol"`
	// The provisioned IO / sec of the share.
	ProvisionedIOPerSec *int `pulumi:"provisionedIOPerSec"`
	// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's bill is the provisioned storage, regardless of the amount of used storage.
	ProvisionedStorageGiB *int `pulumi:"provisionedStorageGiB"`
	// The provisioned throughput / sec of the share.
	ProvisionedThroughputMiBPerSec *int `pulumi:"provisionedThroughputMiBPerSec"`
	// The set of properties for control public access.
	PublicAccessProperties *PublicAccessProperties `pulumi:"publicAccessProperties"`
	// Gets or sets allow or disallow public network access to azure managed file share
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The chosen redundancy level of the file share.
	Redundancy *string `pulumi:"redundancy"`
}

// FileSharePropertiesInput is an input type that accepts FileSharePropertiesArgs and FileSharePropertiesOutput values.
// You can construct a concrete instance of `FileSharePropertiesInput` via:
//
//	FileSharePropertiesArgs{...}
type FileSharePropertiesInput interface {
	pulumi.Input

	ToFileSharePropertiesOutput() FileSharePropertiesOutput
	ToFileSharePropertiesOutputWithContext(context.Context) FileSharePropertiesOutput
}

// File share properties
type FileSharePropertiesArgs struct {
	// The storage media tier of the file share.
	MediaTier pulumi.StringPtrInput `pulumi:"mediaTier"`
	// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating system.
	MountName pulumi.StringPtrInput `pulumi:"mountName"`
	// Protocol settings specific NFS.
	NfsProtocolProperties NfsProtocolPropertiesPtrInput `pulumi:"nfsProtocolProperties"`
	// The file sharing protocol for this file share.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The provisioned IO / sec of the share.
	ProvisionedIOPerSec pulumi.IntPtrInput `pulumi:"provisionedIOPerSec"`
	// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's bill is the provisioned storage, regardless of the amount of used storage.
	ProvisionedStorageGiB pulumi.IntPtrInput `pulumi:"provisionedStorageGiB"`
	// The provisioned throughput / sec of the share.
	ProvisionedThroughputMiBPerSec pulumi.IntPtrInput `pulumi:"provisionedThroughputMiBPerSec"`
	// The set of properties for control public access.
	PublicAccessProperties PublicAccessPropertiesPtrInput `pulumi:"publicAccessProperties"`
	// Gets or sets allow or disallow public network access to azure managed file share
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// The chosen redundancy level of the file share.
	Redundancy pulumi.StringPtrInput `pulumi:"redundancy"`
}

func (FileSharePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProperties)(nil)).Elem()
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesOutput() FileSharePropertiesOutput {
	return i.ToFileSharePropertiesOutputWithContext(context.Background())
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesOutputWithContext(ctx context.Context) FileSharePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesOutput)
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return i.ToFileSharePropertiesPtrOutputWithContext(context.Background())
}

func (i FileSharePropertiesArgs) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesOutput).ToFileSharePropertiesPtrOutputWithContext(ctx)
}

// FileSharePropertiesPtrInput is an input type that accepts FileSharePropertiesArgs, FileSharePropertiesPtr and FileSharePropertiesPtrOutput values.
// You can construct a concrete instance of `FileSharePropertiesPtrInput` via:
//
//	        FileSharePropertiesArgs{...}
//
//	or:
//
//	        nil
type FileSharePropertiesPtrInput interface {
	pulumi.Input

	ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput
	ToFileSharePropertiesPtrOutputWithContext(context.Context) FileSharePropertiesPtrOutput
}

type fileSharePropertiesPtrType FileSharePropertiesArgs

func FileSharePropertiesPtr(v *FileSharePropertiesArgs) FileSharePropertiesPtrInput {
	return (*fileSharePropertiesPtrType)(v)
}

func (*fileSharePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareProperties)(nil)).Elem()
}

func (i *fileSharePropertiesPtrType) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return i.ToFileSharePropertiesPtrOutputWithContext(context.Background())
}

func (i *fileSharePropertiesPtrType) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePropertiesPtrOutput)
}

// File share properties
type FileSharePropertiesOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProperties)(nil)).Elem()
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesOutput() FileSharePropertiesOutput {
	return o
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesOutputWithContext(ctx context.Context) FileSharePropertiesOutput {
	return o
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return o.ToFileSharePropertiesPtrOutputWithContext(context.Background())
}

func (o FileSharePropertiesOutput) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileShareProperties) *FileShareProperties {
		return &v
	}).(FileSharePropertiesPtrOutput)
}

// The storage media tier of the file share.
func (o FileSharePropertiesOutput) MediaTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *string { return v.MediaTier }).(pulumi.StringPtrOutput)
}

// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating system.
func (o FileSharePropertiesOutput) MountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *string { return v.MountName }).(pulumi.StringPtrOutput)
}

// Protocol settings specific NFS.
func (o FileSharePropertiesOutput) NfsProtocolProperties() NfsProtocolPropertiesPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *NfsProtocolProperties { return v.NfsProtocolProperties }).(NfsProtocolPropertiesPtrOutput)
}

// The file sharing protocol for this file share.
func (o FileSharePropertiesOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioned IO / sec of the share.
func (o FileSharePropertiesOutput) ProvisionedIOPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *int { return v.ProvisionedIOPerSec }).(pulumi.IntPtrOutput)
}

// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's bill is the provisioned storage, regardless of the amount of used storage.
func (o FileSharePropertiesOutput) ProvisionedStorageGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *int { return v.ProvisionedStorageGiB }).(pulumi.IntPtrOutput)
}

// The provisioned throughput / sec of the share.
func (o FileSharePropertiesOutput) ProvisionedThroughputMiBPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *int { return v.ProvisionedThroughputMiBPerSec }).(pulumi.IntPtrOutput)
}

// The set of properties for control public access.
func (o FileSharePropertiesOutput) PublicAccessProperties() PublicAccessPropertiesPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *PublicAccessProperties { return v.PublicAccessProperties }).(PublicAccessPropertiesPtrOutput)
}

// Gets or sets allow or disallow public network access to azure managed file share
func (o FileSharePropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The chosen redundancy level of the file share.
func (o FileSharePropertiesOutput) Redundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareProperties) *string { return v.Redundancy }).(pulumi.StringPtrOutput)
}

type FileSharePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareProperties)(nil)).Elem()
}

func (o FileSharePropertiesPtrOutput) ToFileSharePropertiesPtrOutput() FileSharePropertiesPtrOutput {
	return o
}

func (o FileSharePropertiesPtrOutput) ToFileSharePropertiesPtrOutputWithContext(ctx context.Context) FileSharePropertiesPtrOutput {
	return o
}

func (o FileSharePropertiesPtrOutput) Elem() FileSharePropertiesOutput {
	return o.ApplyT(func(v *FileShareProperties) FileShareProperties {
		if v != nil {
			return *v
		}
		var ret FileShareProperties
		return ret
	}).(FileSharePropertiesOutput)
}

// The storage media tier of the file share.
func (o FileSharePropertiesPtrOutput) MediaTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.MediaTier
	}).(pulumi.StringPtrOutput)
}

// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating system.
func (o FileSharePropertiesPtrOutput) MountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.MountName
	}).(pulumi.StringPtrOutput)
}

// Protocol settings specific NFS.
func (o FileSharePropertiesPtrOutput) NfsProtocolProperties() NfsProtocolPropertiesPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *NfsProtocolProperties {
		if v == nil {
			return nil
		}
		return v.NfsProtocolProperties
	}).(NfsProtocolPropertiesPtrOutput)
}

// The file sharing protocol for this file share.
func (o FileSharePropertiesPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The provisioned IO / sec of the share.
func (o FileSharePropertiesPtrOutput) ProvisionedIOPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *int {
		if v == nil {
			return nil
		}
		return v.ProvisionedIOPerSec
	}).(pulumi.IntPtrOutput)
}

// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's bill is the provisioned storage, regardless of the amount of used storage.
func (o FileSharePropertiesPtrOutput) ProvisionedStorageGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *int {
		if v == nil {
			return nil
		}
		return v.ProvisionedStorageGiB
	}).(pulumi.IntPtrOutput)
}

// The provisioned throughput / sec of the share.
func (o FileSharePropertiesPtrOutput) ProvisionedThroughputMiBPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *int {
		if v == nil {
			return nil
		}
		return v.ProvisionedThroughputMiBPerSec
	}).(pulumi.IntPtrOutput)
}

// The set of properties for control public access.
func (o FileSharePropertiesPtrOutput) PublicAccessProperties() PublicAccessPropertiesPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *PublicAccessProperties {
		if v == nil {
			return nil
		}
		return v.PublicAccessProperties
	}).(PublicAccessPropertiesPtrOutput)
}

// Gets or sets allow or disallow public network access to azure managed file share
func (o FileSharePropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// The chosen redundancy level of the file share.
func (o FileSharePropertiesPtrOutput) Redundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.Redundancy
	}).(pulumi.StringPtrOutput)
}

// File share properties
type FileSharePropertiesResponse struct {
	// The host name of the file share.
	HostName string `pulumi:"hostName"`
	// Burst IOPS are extra buffer IOPS enabling you to consume more than your provisioned IOPS for a short period of time, depending on the burst credits available for your share.
	IncludedBurstIOPerSec int `pulumi:"includedBurstIOPerSec"`
	// Max burst IOPS credits shows the maximum number of burst credits the share can have at the current IOPS provisioning level.
	MaxBurstIOPerSecCredits float64 `pulumi:"maxBurstIOPerSecCredits"`
	// The storage media tier of the file share.
	MediaTier *string `pulumi:"mediaTier"`
	// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating system.
	MountName *string `pulumi:"mountName"`
	// Protocol settings specific NFS.
	NfsProtocolProperties *NfsProtocolPropertiesResponse `pulumi:"nfsProtocolProperties"`
	// The list of associated private endpoint connections.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The file sharing protocol for this file share.
	Protocol *string `pulumi:"protocol"`
	// The provisioned IO / sec of the share.
	ProvisionedIOPerSec *int `pulumi:"provisionedIOPerSec"`
	// A date/time value that specifies when the provisioned IOPS for the file share is permitted to be reduced.
	ProvisionedIOPerSecNextAllowedDowngrade string `pulumi:"provisionedIOPerSecNextAllowedDowngrade"`
	// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's bill is the provisioned storage, regardless of the amount of used storage.
	ProvisionedStorageGiB *int `pulumi:"provisionedStorageGiB"`
	// A date/time value that specifies when the provisioned storage for the file share is permitted to be reduced.
	ProvisionedStorageNextAllowedDowngrade string `pulumi:"provisionedStorageNextAllowedDowngrade"`
	// The provisioned throughput / sec of the share.
	ProvisionedThroughputMiBPerSec *int `pulumi:"provisionedThroughputMiBPerSec"`
	// A date/time value that specifies when the provisioned throughput for the file share is permitted to be reduced.
	ProvisionedThroughputNextAllowedDowngrade string `pulumi:"provisionedThroughputNextAllowedDowngrade"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// The set of properties for control public access.
	PublicAccessProperties *PublicAccessPropertiesResponse `pulumi:"publicAccessProperties"`
	// Gets or sets allow or disallow public network access to azure managed file share
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The chosen redundancy level of the file share.
	Redundancy *string `pulumi:"redundancy"`
}

// File share properties
type FileSharePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FileSharePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSharePropertiesResponse)(nil)).Elem()
}

func (o FileSharePropertiesResponseOutput) ToFileSharePropertiesResponseOutput() FileSharePropertiesResponseOutput {
	return o
}

func (o FileSharePropertiesResponseOutput) ToFileSharePropertiesResponseOutputWithContext(ctx context.Context) FileSharePropertiesResponseOutput {
	return o
}

// The host name of the file share.
func (o FileSharePropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Burst IOPS are extra buffer IOPS enabling you to consume more than your provisioned IOPS for a short period of time, depending on the burst credits available for your share.
func (o FileSharePropertiesResponseOutput) IncludedBurstIOPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) int { return v.IncludedBurstIOPerSec }).(pulumi.IntOutput)
}

// Max burst IOPS credits shows the maximum number of burst credits the share can have at the current IOPS provisioning level.
func (o FileSharePropertiesResponseOutput) MaxBurstIOPerSecCredits() pulumi.Float64Output {
	return o.ApplyT(func(v FileSharePropertiesResponse) float64 { return v.MaxBurstIOPerSecCredits }).(pulumi.Float64Output)
}

// The storage media tier of the file share.
func (o FileSharePropertiesResponseOutput) MediaTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *string { return v.MediaTier }).(pulumi.StringPtrOutput)
}

// The name of the file share as seen by the end user when mounting the share, such as in a URI or UNC format in their operating system.
func (o FileSharePropertiesResponseOutput) MountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *string { return v.MountName }).(pulumi.StringPtrOutput)
}

// Protocol settings specific NFS.
func (o FileSharePropertiesResponseOutput) NfsProtocolProperties() NfsProtocolPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *NfsProtocolPropertiesResponse { return v.NfsProtocolProperties }).(NfsProtocolPropertiesResponsePtrOutput)
}

// The list of associated private endpoint connections.
func (o FileSharePropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The file sharing protocol for this file share.
func (o FileSharePropertiesResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioned IO / sec of the share.
func (o FileSharePropertiesResponseOutput) ProvisionedIOPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *int { return v.ProvisionedIOPerSec }).(pulumi.IntPtrOutput)
}

// A date/time value that specifies when the provisioned IOPS for the file share is permitted to be reduced.
func (o FileSharePropertiesResponseOutput) ProvisionedIOPerSecNextAllowedDowngrade() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.ProvisionedIOPerSecNextAllowedDowngrade }).(pulumi.StringOutput)
}

// The provisioned storage size of the share in GiB (1 GiB is 1024^3 bytes or 1073741824 bytes). A component of the file share's bill is the provisioned storage, regardless of the amount of used storage.
func (o FileSharePropertiesResponseOutput) ProvisionedStorageGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *int { return v.ProvisionedStorageGiB }).(pulumi.IntPtrOutput)
}

// A date/time value that specifies when the provisioned storage for the file share is permitted to be reduced.
func (o FileSharePropertiesResponseOutput) ProvisionedStorageNextAllowedDowngrade() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.ProvisionedStorageNextAllowedDowngrade }).(pulumi.StringOutput)
}

// The provisioned throughput / sec of the share.
func (o FileSharePropertiesResponseOutput) ProvisionedThroughputMiBPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *int { return v.ProvisionedThroughputMiBPerSec }).(pulumi.IntPtrOutput)
}

// A date/time value that specifies when the provisioned throughput for the file share is permitted to be reduced.
func (o FileSharePropertiesResponseOutput) ProvisionedThroughputNextAllowedDowngrade() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.ProvisionedThroughputNextAllowedDowngrade }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o FileSharePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The set of properties for control public access.
func (o FileSharePropertiesResponseOutput) PublicAccessProperties() PublicAccessPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *PublicAccessPropertiesResponse { return v.PublicAccessProperties }).(PublicAccessPropertiesResponsePtrOutput)
}

// Gets or sets allow or disallow public network access to azure managed file share
func (o FileSharePropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The chosen redundancy level of the file share.
func (o FileSharePropertiesResponseOutput) Redundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSharePropertiesResponse) *string { return v.Redundancy }).(pulumi.StringPtrOutput)
}

// Constants used for calculating recommended values of file share provisioning properties.
type FileShareProvisioningConstantsResponse struct {
	// Base IO per second.
	BaseIOPerSec int `pulumi:"baseIOPerSec"`
	// Base throughput in MiB per second.
	BaseThroughputMiBPerSec int `pulumi:"baseThroughputMiBPerSec"`
	// Scalar IO per second.
	ScalarIOPerSec float64 `pulumi:"scalarIOPerSec"`
	// Scalar throughput in MiB per second.
	ScalarThroughputMiBPerSec float64 `pulumi:"scalarThroughputMiBPerSec"`
}

// Constants used for calculating recommended values of file share provisioning properties.
type FileShareProvisioningConstantsResponseOutput struct{ *pulumi.OutputState }

func (FileShareProvisioningConstantsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProvisioningConstantsResponse)(nil)).Elem()
}

func (o FileShareProvisioningConstantsResponseOutput) ToFileShareProvisioningConstantsResponseOutput() FileShareProvisioningConstantsResponseOutput {
	return o
}

func (o FileShareProvisioningConstantsResponseOutput) ToFileShareProvisioningConstantsResponseOutputWithContext(ctx context.Context) FileShareProvisioningConstantsResponseOutput {
	return o
}

// Base IO per second.
func (o FileShareProvisioningConstantsResponseOutput) BaseIOPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareProvisioningConstantsResponse) int { return v.BaseIOPerSec }).(pulumi.IntOutput)
}

// Base throughput in MiB per second.
func (o FileShareProvisioningConstantsResponseOutput) BaseThroughputMiBPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareProvisioningConstantsResponse) int { return v.BaseThroughputMiBPerSec }).(pulumi.IntOutput)
}

// Scalar IO per second.
func (o FileShareProvisioningConstantsResponseOutput) ScalarIOPerSec() pulumi.Float64Output {
	return o.ApplyT(func(v FileShareProvisioningConstantsResponse) float64 { return v.ScalarIOPerSec }).(pulumi.Float64Output)
}

// Scalar throughput in MiB per second.
func (o FileShareProvisioningConstantsResponseOutput) ScalarThroughputMiBPerSec() pulumi.Float64Output {
	return o.ApplyT(func(v FileShareProvisioningConstantsResponse) float64 { return v.ScalarThroughputMiBPerSec }).(pulumi.Float64Output)
}

// File share provisioning parameters recommendation API input structure.
type FileShareProvisioningRecommendationInput struct {
	// The desired provisioned storage size of the share in GiB. Will be use to calculate the values of remaining provisioning parameters.
	ProvisionedStorageGiB int `pulumi:"provisionedStorageGiB"`
}

// FileShareProvisioningRecommendationInputInput is an input type that accepts FileShareProvisioningRecommendationInputArgs and FileShareProvisioningRecommendationInputOutput values.
// You can construct a concrete instance of `FileShareProvisioningRecommendationInputInput` via:
//
//	FileShareProvisioningRecommendationInputArgs{...}
type FileShareProvisioningRecommendationInputInput interface {
	pulumi.Input

	ToFileShareProvisioningRecommendationInputOutput() FileShareProvisioningRecommendationInputOutput
	ToFileShareProvisioningRecommendationInputOutputWithContext(context.Context) FileShareProvisioningRecommendationInputOutput
}

// File share provisioning parameters recommendation API input structure.
type FileShareProvisioningRecommendationInputArgs struct {
	// The desired provisioned storage size of the share in GiB. Will be use to calculate the values of remaining provisioning parameters.
	ProvisionedStorageGiB pulumi.IntInput `pulumi:"provisionedStorageGiB"`
}

func (FileShareProvisioningRecommendationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProvisioningRecommendationInput)(nil)).Elem()
}

func (i FileShareProvisioningRecommendationInputArgs) ToFileShareProvisioningRecommendationInputOutput() FileShareProvisioningRecommendationInputOutput {
	return i.ToFileShareProvisioningRecommendationInputOutputWithContext(context.Background())
}

func (i FileShareProvisioningRecommendationInputArgs) ToFileShareProvisioningRecommendationInputOutputWithContext(ctx context.Context) FileShareProvisioningRecommendationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareProvisioningRecommendationInputOutput)
}

// File share provisioning parameters recommendation API input structure.
type FileShareProvisioningRecommendationInputOutput struct{ *pulumi.OutputState }

func (FileShareProvisioningRecommendationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProvisioningRecommendationInput)(nil)).Elem()
}

func (o FileShareProvisioningRecommendationInputOutput) ToFileShareProvisioningRecommendationInputOutput() FileShareProvisioningRecommendationInputOutput {
	return o
}

func (o FileShareProvisioningRecommendationInputOutput) ToFileShareProvisioningRecommendationInputOutputWithContext(ctx context.Context) FileShareProvisioningRecommendationInputOutput {
	return o
}

// The desired provisioned storage size of the share in GiB. Will be use to calculate the values of remaining provisioning parameters.
func (o FileShareProvisioningRecommendationInputOutput) ProvisionedStorageGiB() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareProvisioningRecommendationInput) int { return v.ProvisionedStorageGiB }).(pulumi.IntOutput)
}

// File share provisioning parameters recommendation API result.
type FileShareProvisioningRecommendationOutputResponse struct {
	// Redundancy options for the share.
	AvailableRedundancyOptions []string `pulumi:"availableRedundancyOptions"`
	// The recommended value of provisioned IO / sec of the share.
	ProvisionedIOPerSec int `pulumi:"provisionedIOPerSec"`
	// The recommended value of provisioned throughput / sec of the share.
	ProvisionedThroughputMiBPerSec int `pulumi:"provisionedThroughputMiBPerSec"`
}

// File share provisioning parameters recommendation API result.
type FileShareProvisioningRecommendationOutputResponseOutput struct{ *pulumi.OutputState }

func (FileShareProvisioningRecommendationOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareProvisioningRecommendationOutputResponse)(nil)).Elem()
}

func (o FileShareProvisioningRecommendationOutputResponseOutput) ToFileShareProvisioningRecommendationOutputResponseOutput() FileShareProvisioningRecommendationOutputResponseOutput {
	return o
}

func (o FileShareProvisioningRecommendationOutputResponseOutput) ToFileShareProvisioningRecommendationOutputResponseOutputWithContext(ctx context.Context) FileShareProvisioningRecommendationOutputResponseOutput {
	return o
}

// Redundancy options for the share.
func (o FileShareProvisioningRecommendationOutputResponseOutput) AvailableRedundancyOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FileShareProvisioningRecommendationOutputResponse) []string {
		return v.AvailableRedundancyOptions
	}).(pulumi.StringArrayOutput)
}

// The recommended value of provisioned IO / sec of the share.
func (o FileShareProvisioningRecommendationOutputResponseOutput) ProvisionedIOPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareProvisioningRecommendationOutputResponse) int { return v.ProvisionedIOPerSec }).(pulumi.IntOutput)
}

// The recommended value of provisioned throughput / sec of the share.
func (o FileShareProvisioningRecommendationOutputResponseOutput) ProvisionedThroughputMiBPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FileShareProvisioningRecommendationOutputResponse) int { return v.ProvisionedThroughputMiBPerSec }).(pulumi.IntOutput)
}

// File shares usage result.
type FileShareUsageDataOutputResponse struct {
	// File share usage data for active file shares.
	LiveShares LiveSharesUsageDataResponse `pulumi:"liveShares"`
}

// File shares usage result.
type FileShareUsageDataOutputResponseOutput struct{ *pulumi.OutputState }

func (FileShareUsageDataOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareUsageDataOutputResponse)(nil)).Elem()
}

func (o FileShareUsageDataOutputResponseOutput) ToFileShareUsageDataOutputResponseOutput() FileShareUsageDataOutputResponseOutput {
	return o
}

func (o FileShareUsageDataOutputResponseOutput) ToFileShareUsageDataOutputResponseOutputWithContext(ctx context.Context) FileShareUsageDataOutputResponseOutput {
	return o
}

// File share usage data for active file shares.
func (o FileShareUsageDataOutputResponseOutput) LiveShares() LiveSharesUsageDataResponseOutput {
	return o.ApplyT(func(v FileShareUsageDataOutputResponse) LiveSharesUsageDataResponse { return v.LiveShares }).(LiveSharesUsageDataResponseOutput)
}

// Usage data for live shares.
type LiveSharesUsageDataResponse struct {
	// The number of active file shares.
	FileShareCount int `pulumi:"fileShareCount"`
}

// Usage data for live shares.
type LiveSharesUsageDataResponseOutput struct{ *pulumi.OutputState }

func (LiveSharesUsageDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LiveSharesUsageDataResponse)(nil)).Elem()
}

func (o LiveSharesUsageDataResponseOutput) ToLiveSharesUsageDataResponseOutput() LiveSharesUsageDataResponseOutput {
	return o
}

func (o LiveSharesUsageDataResponseOutput) ToLiveSharesUsageDataResponseOutputWithContext(ctx context.Context) LiveSharesUsageDataResponseOutput {
	return o
}

// The number of active file shares.
func (o LiveSharesUsageDataResponseOutput) FileShareCount() pulumi.IntOutput {
	return o.ApplyT(func(v LiveSharesUsageDataResponse) int { return v.FileShareCount }).(pulumi.IntOutput)
}

// Properties specific to the NFS protocol.
type NfsProtocolProperties struct {
	// Root squash defines how root users on clients are mapped to the NFS share.
	RootSquash *string `pulumi:"rootSquash"`
}

// NfsProtocolPropertiesInput is an input type that accepts NfsProtocolPropertiesArgs and NfsProtocolPropertiesOutput values.
// You can construct a concrete instance of `NfsProtocolPropertiesInput` via:
//
//	NfsProtocolPropertiesArgs{...}
type NfsProtocolPropertiesInput interface {
	pulumi.Input

	ToNfsProtocolPropertiesOutput() NfsProtocolPropertiesOutput
	ToNfsProtocolPropertiesOutputWithContext(context.Context) NfsProtocolPropertiesOutput
}

// Properties specific to the NFS protocol.
type NfsProtocolPropertiesArgs struct {
	// Root squash defines how root users on clients are mapped to the NFS share.
	RootSquash pulumi.StringPtrInput `pulumi:"rootSquash"`
}

func (NfsProtocolPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsProtocolProperties)(nil)).Elem()
}

func (i NfsProtocolPropertiesArgs) ToNfsProtocolPropertiesOutput() NfsProtocolPropertiesOutput {
	return i.ToNfsProtocolPropertiesOutputWithContext(context.Background())
}

func (i NfsProtocolPropertiesArgs) ToNfsProtocolPropertiesOutputWithContext(ctx context.Context) NfsProtocolPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsProtocolPropertiesOutput)
}

func (i NfsProtocolPropertiesArgs) ToNfsProtocolPropertiesPtrOutput() NfsProtocolPropertiesPtrOutput {
	return i.ToNfsProtocolPropertiesPtrOutputWithContext(context.Background())
}

func (i NfsProtocolPropertiesArgs) ToNfsProtocolPropertiesPtrOutputWithContext(ctx context.Context) NfsProtocolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsProtocolPropertiesOutput).ToNfsProtocolPropertiesPtrOutputWithContext(ctx)
}

// NfsProtocolPropertiesPtrInput is an input type that accepts NfsProtocolPropertiesArgs, NfsProtocolPropertiesPtr and NfsProtocolPropertiesPtrOutput values.
// You can construct a concrete instance of `NfsProtocolPropertiesPtrInput` via:
//
//	        NfsProtocolPropertiesArgs{...}
//
//	or:
//
//	        nil
type NfsProtocolPropertiesPtrInput interface {
	pulumi.Input

	ToNfsProtocolPropertiesPtrOutput() NfsProtocolPropertiesPtrOutput
	ToNfsProtocolPropertiesPtrOutputWithContext(context.Context) NfsProtocolPropertiesPtrOutput
}

type nfsProtocolPropertiesPtrType NfsProtocolPropertiesArgs

func NfsProtocolPropertiesPtr(v *NfsProtocolPropertiesArgs) NfsProtocolPropertiesPtrInput {
	return (*nfsProtocolPropertiesPtrType)(v)
}

func (*nfsProtocolPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsProtocolProperties)(nil)).Elem()
}

func (i *nfsProtocolPropertiesPtrType) ToNfsProtocolPropertiesPtrOutput() NfsProtocolPropertiesPtrOutput {
	return i.ToNfsProtocolPropertiesPtrOutputWithContext(context.Background())
}

func (i *nfsProtocolPropertiesPtrType) ToNfsProtocolPropertiesPtrOutputWithContext(ctx context.Context) NfsProtocolPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsProtocolPropertiesPtrOutput)
}

// Properties specific to the NFS protocol.
type NfsProtocolPropertiesOutput struct{ *pulumi.OutputState }

func (NfsProtocolPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsProtocolProperties)(nil)).Elem()
}

func (o NfsProtocolPropertiesOutput) ToNfsProtocolPropertiesOutput() NfsProtocolPropertiesOutput {
	return o
}

func (o NfsProtocolPropertiesOutput) ToNfsProtocolPropertiesOutputWithContext(ctx context.Context) NfsProtocolPropertiesOutput {
	return o
}

func (o NfsProtocolPropertiesOutput) ToNfsProtocolPropertiesPtrOutput() NfsProtocolPropertiesPtrOutput {
	return o.ToNfsProtocolPropertiesPtrOutputWithContext(context.Background())
}

func (o NfsProtocolPropertiesOutput) ToNfsProtocolPropertiesPtrOutputWithContext(ctx context.Context) NfsProtocolPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NfsProtocolProperties) *NfsProtocolProperties {
		return &v
	}).(NfsProtocolPropertiesPtrOutput)
}

// Root squash defines how root users on clients are mapped to the NFS share.
func (o NfsProtocolPropertiesOutput) RootSquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsProtocolProperties) *string { return v.RootSquash }).(pulumi.StringPtrOutput)
}

type NfsProtocolPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NfsProtocolPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsProtocolProperties)(nil)).Elem()
}

func (o NfsProtocolPropertiesPtrOutput) ToNfsProtocolPropertiesPtrOutput() NfsProtocolPropertiesPtrOutput {
	return o
}

func (o NfsProtocolPropertiesPtrOutput) ToNfsProtocolPropertiesPtrOutputWithContext(ctx context.Context) NfsProtocolPropertiesPtrOutput {
	return o
}

func (o NfsProtocolPropertiesPtrOutput) Elem() NfsProtocolPropertiesOutput {
	return o.ApplyT(func(v *NfsProtocolProperties) NfsProtocolProperties {
		if v != nil {
			return *v
		}
		var ret NfsProtocolProperties
		return ret
	}).(NfsProtocolPropertiesOutput)
}

// Root squash defines how root users on clients are mapped to the NFS share.
func (o NfsProtocolPropertiesPtrOutput) RootSquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsProtocolProperties) *string {
		if v == nil {
			return nil
		}
		return v.RootSquash
	}).(pulumi.StringPtrOutput)
}

// Properties specific to the NFS protocol.
type NfsProtocolPropertiesResponse struct {
	// Root squash defines how root users on clients are mapped to the NFS share.
	RootSquash *string `pulumi:"rootSquash"`
}

// Properties specific to the NFS protocol.
type NfsProtocolPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NfsProtocolPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsProtocolPropertiesResponse)(nil)).Elem()
}

func (o NfsProtocolPropertiesResponseOutput) ToNfsProtocolPropertiesResponseOutput() NfsProtocolPropertiesResponseOutput {
	return o
}

func (o NfsProtocolPropertiesResponseOutput) ToNfsProtocolPropertiesResponseOutputWithContext(ctx context.Context) NfsProtocolPropertiesResponseOutput {
	return o
}

// Root squash defines how root users on clients are mapped to the NFS share.
func (o NfsProtocolPropertiesResponseOutput) RootSquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsProtocolPropertiesResponse) *string { return v.RootSquash }).(pulumi.StringPtrOutput)
}

type NfsProtocolPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NfsProtocolPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsProtocolPropertiesResponse)(nil)).Elem()
}

func (o NfsProtocolPropertiesResponsePtrOutput) ToNfsProtocolPropertiesResponsePtrOutput() NfsProtocolPropertiesResponsePtrOutput {
	return o
}

func (o NfsProtocolPropertiesResponsePtrOutput) ToNfsProtocolPropertiesResponsePtrOutputWithContext(ctx context.Context) NfsProtocolPropertiesResponsePtrOutput {
	return o
}

func (o NfsProtocolPropertiesResponsePtrOutput) Elem() NfsProtocolPropertiesResponseOutput {
	return o.ApplyT(func(v *NfsProtocolPropertiesResponse) NfsProtocolPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret NfsProtocolPropertiesResponse
		return ret
	}).(NfsProtocolPropertiesResponseOutput)
}

// Root squash defines how root users on clients are mapped to the NFS share.
func (o NfsProtocolPropertiesResponsePtrOutput) RootSquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsProtocolPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RootSquash
	}).(pulumi.StringPtrOutput)
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponse struct {
	// The group ids for the private endpoint resource.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The private endpoint resource.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The group ids for the private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for private endpoint.
	Id string `pulumi:"id"`
}

// The private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The set of properties for control public access.
type PublicAccessProperties struct {
	// The allowed set of subnets when access is restricted.
	AllowedSubnets []string `pulumi:"allowedSubnets"`
}

// PublicAccessPropertiesInput is an input type that accepts PublicAccessPropertiesArgs and PublicAccessPropertiesOutput values.
// You can construct a concrete instance of `PublicAccessPropertiesInput` via:
//
//	PublicAccessPropertiesArgs{...}
type PublicAccessPropertiesInput interface {
	pulumi.Input

	ToPublicAccessPropertiesOutput() PublicAccessPropertiesOutput
	ToPublicAccessPropertiesOutputWithContext(context.Context) PublicAccessPropertiesOutput
}

// The set of properties for control public access.
type PublicAccessPropertiesArgs struct {
	// The allowed set of subnets when access is restricted.
	AllowedSubnets pulumi.StringArrayInput `pulumi:"allowedSubnets"`
}

func (PublicAccessPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccessProperties)(nil)).Elem()
}

func (i PublicAccessPropertiesArgs) ToPublicAccessPropertiesOutput() PublicAccessPropertiesOutput {
	return i.ToPublicAccessPropertiesOutputWithContext(context.Background())
}

func (i PublicAccessPropertiesArgs) ToPublicAccessPropertiesOutputWithContext(ctx context.Context) PublicAccessPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAccessPropertiesOutput)
}

func (i PublicAccessPropertiesArgs) ToPublicAccessPropertiesPtrOutput() PublicAccessPropertiesPtrOutput {
	return i.ToPublicAccessPropertiesPtrOutputWithContext(context.Background())
}

func (i PublicAccessPropertiesArgs) ToPublicAccessPropertiesPtrOutputWithContext(ctx context.Context) PublicAccessPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAccessPropertiesOutput).ToPublicAccessPropertiesPtrOutputWithContext(ctx)
}

// PublicAccessPropertiesPtrInput is an input type that accepts PublicAccessPropertiesArgs, PublicAccessPropertiesPtr and PublicAccessPropertiesPtrOutput values.
// You can construct a concrete instance of `PublicAccessPropertiesPtrInput` via:
//
//	        PublicAccessPropertiesArgs{...}
//
//	or:
//
//	        nil
type PublicAccessPropertiesPtrInput interface {
	pulumi.Input

	ToPublicAccessPropertiesPtrOutput() PublicAccessPropertiesPtrOutput
	ToPublicAccessPropertiesPtrOutputWithContext(context.Context) PublicAccessPropertiesPtrOutput
}

type publicAccessPropertiesPtrType PublicAccessPropertiesArgs

func PublicAccessPropertiesPtr(v *PublicAccessPropertiesArgs) PublicAccessPropertiesPtrInput {
	return (*publicAccessPropertiesPtrType)(v)
}

func (*publicAccessPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccessProperties)(nil)).Elem()
}

func (i *publicAccessPropertiesPtrType) ToPublicAccessPropertiesPtrOutput() PublicAccessPropertiesPtrOutput {
	return i.ToPublicAccessPropertiesPtrOutputWithContext(context.Background())
}

func (i *publicAccessPropertiesPtrType) ToPublicAccessPropertiesPtrOutputWithContext(ctx context.Context) PublicAccessPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAccessPropertiesPtrOutput)
}

// The set of properties for control public access.
type PublicAccessPropertiesOutput struct{ *pulumi.OutputState }

func (PublicAccessPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccessProperties)(nil)).Elem()
}

func (o PublicAccessPropertiesOutput) ToPublicAccessPropertiesOutput() PublicAccessPropertiesOutput {
	return o
}

func (o PublicAccessPropertiesOutput) ToPublicAccessPropertiesOutputWithContext(ctx context.Context) PublicAccessPropertiesOutput {
	return o
}

func (o PublicAccessPropertiesOutput) ToPublicAccessPropertiesPtrOutput() PublicAccessPropertiesPtrOutput {
	return o.ToPublicAccessPropertiesPtrOutputWithContext(context.Background())
}

func (o PublicAccessPropertiesOutput) ToPublicAccessPropertiesPtrOutputWithContext(ctx context.Context) PublicAccessPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicAccessProperties) *PublicAccessProperties {
		return &v
	}).(PublicAccessPropertiesPtrOutput)
}

// The allowed set of subnets when access is restricted.
func (o PublicAccessPropertiesOutput) AllowedSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicAccessProperties) []string { return v.AllowedSubnets }).(pulumi.StringArrayOutput)
}

type PublicAccessPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PublicAccessPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccessProperties)(nil)).Elem()
}

func (o PublicAccessPropertiesPtrOutput) ToPublicAccessPropertiesPtrOutput() PublicAccessPropertiesPtrOutput {
	return o
}

func (o PublicAccessPropertiesPtrOutput) ToPublicAccessPropertiesPtrOutputWithContext(ctx context.Context) PublicAccessPropertiesPtrOutput {
	return o
}

func (o PublicAccessPropertiesPtrOutput) Elem() PublicAccessPropertiesOutput {
	return o.ApplyT(func(v *PublicAccessProperties) PublicAccessProperties {
		if v != nil {
			return *v
		}
		var ret PublicAccessProperties
		return ret
	}).(PublicAccessPropertiesOutput)
}

// The allowed set of subnets when access is restricted.
func (o PublicAccessPropertiesPtrOutput) AllowedSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicAccessProperties) []string {
		if v == nil {
			return nil
		}
		return v.AllowedSubnets
	}).(pulumi.StringArrayOutput)
}

// The set of properties for control public access.
type PublicAccessPropertiesResponse struct {
	// The allowed set of subnets when access is restricted.
	AllowedSubnets []string `pulumi:"allowedSubnets"`
}

// The set of properties for control public access.
type PublicAccessPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PublicAccessPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAccessPropertiesResponse)(nil)).Elem()
}

func (o PublicAccessPropertiesResponseOutput) ToPublicAccessPropertiesResponseOutput() PublicAccessPropertiesResponseOutput {
	return o
}

func (o PublicAccessPropertiesResponseOutput) ToPublicAccessPropertiesResponseOutputWithContext(ctx context.Context) PublicAccessPropertiesResponseOutput {
	return o
}

// The allowed set of subnets when access is restricted.
func (o PublicAccessPropertiesResponseOutput) AllowedSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicAccessPropertiesResponse) []string { return v.AllowedSubnets }).(pulumi.StringArrayOutput)
}

type PublicAccessPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicAccessPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAccessPropertiesResponse)(nil)).Elem()
}

func (o PublicAccessPropertiesResponsePtrOutput) ToPublicAccessPropertiesResponsePtrOutput() PublicAccessPropertiesResponsePtrOutput {
	return o
}

func (o PublicAccessPropertiesResponsePtrOutput) ToPublicAccessPropertiesResponsePtrOutputWithContext(ctx context.Context) PublicAccessPropertiesResponsePtrOutput {
	return o
}

func (o PublicAccessPropertiesResponsePtrOutput) Elem() PublicAccessPropertiesResponseOutput {
	return o.ApplyT(func(v *PublicAccessPropertiesResponse) PublicAccessPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PublicAccessPropertiesResponse
		return ret
	}).(PublicAccessPropertiesResponseOutput)
}

// The allowed set of subnets when access is restricted.
func (o PublicAccessPropertiesResponsePtrOutput) AllowedSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicAccessPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedSubnets
	}).(pulumi.StringArrayOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FileShareLimitsOutputResponseOutput{})
	pulumi.RegisterOutputType(FileShareLimitsResponseOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FileSharePropertiesResponseOutput{})
	pulumi.RegisterOutputType(FileShareProvisioningConstantsResponseOutput{})
	pulumi.RegisterOutputType(FileShareProvisioningRecommendationInputOutput{})
	pulumi.RegisterOutputType(FileShareProvisioningRecommendationOutputResponseOutput{})
	pulumi.RegisterOutputType(FileShareUsageDataOutputResponseOutput{})
	pulumi.RegisterOutputType(LiveSharesUsageDataResponseOutput{})
	pulumi.RegisterOutputType(NfsProtocolPropertiesOutput{})
	pulumi.RegisterOutputType(NfsProtocolPropertiesPtrOutput{})
	pulumi.RegisterOutputType(NfsProtocolPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NfsProtocolPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PublicAccessPropertiesOutput{})
	pulumi.RegisterOutputType(PublicAccessPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PublicAccessPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PublicAccessPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
