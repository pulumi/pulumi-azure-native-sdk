// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fileshares

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get file shares usage data.
//
// Uses Azure REST API version 2025-06-01-preview.
func GetFileShareUsageData(ctx *pulumi.Context, args *GetFileShareUsageDataArgs, opts ...pulumi.InvokeOption) (*GetFileShareUsageDataResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetFileShareUsageDataResult
	err := ctx.Invoke("azure-native:fileshares:getFileShareUsageData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetFileShareUsageDataArgs struct {
	// The name of the Azure region.
	Location string `pulumi:"location"`
}

// Response structure for file shares usage in the specified subscription/location.
type GetFileShareUsageDataResult struct {
	// The properties of the file share usage data.
	Properties FileShareUsageDataOutputResponse `pulumi:"properties"`
}

func GetFileShareUsageDataOutput(ctx *pulumi.Context, args GetFileShareUsageDataOutputArgs, opts ...pulumi.InvokeOption) GetFileShareUsageDataResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFileShareUsageDataResultOutput, error) {
			args := v.(GetFileShareUsageDataArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:fileshares:getFileShareUsageData", args, GetFileShareUsageDataResultOutput{}, options).(GetFileShareUsageDataResultOutput), nil
		}).(GetFileShareUsageDataResultOutput)
}

type GetFileShareUsageDataOutputArgs struct {
	// The name of the Azure region.
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetFileShareUsageDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileShareUsageDataArgs)(nil)).Elem()
}

// Response structure for file shares usage in the specified subscription/location.
type GetFileShareUsageDataResultOutput struct{ *pulumi.OutputState }

func (GetFileShareUsageDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileShareUsageDataResult)(nil)).Elem()
}

func (o GetFileShareUsageDataResultOutput) ToGetFileShareUsageDataResultOutput() GetFileShareUsageDataResultOutput {
	return o
}

func (o GetFileShareUsageDataResultOutput) ToGetFileShareUsageDataResultOutputWithContext(ctx context.Context) GetFileShareUsageDataResultOutput {
	return o
}

// The properties of the file share usage data.
func (o GetFileShareUsageDataResultOutput) Properties() FileShareUsageDataOutputResponseOutput {
	return o.ApplyT(func(v GetFileShareUsageDataResult) FileShareUsageDataOutputResponse { return v.Properties }).(FileShareUsageDataOutputResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFileShareUsageDataResultOutput{})
}
