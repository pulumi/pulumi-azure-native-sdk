// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Trigger in a shareSubscription
func GetScheduledTrigger(ctx *pulumi.Context, args *GetScheduledTriggerArgs, opts ...pulumi.InvokeOption) (*GetScheduledTriggerResult, error) {
	var rv GetScheduledTriggerResult
	err := ctx.Invoke("azure-native:datashare/v20200901:getScheduledTrigger", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetScheduledTriggerArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the shareSubscription.
	ShareSubscriptionName string `pulumi:"shareSubscriptionName"`
	// The name of the trigger.
	TriggerName string `pulumi:"triggerName"`
}

// A type of trigger based on schedule
type GetScheduledTriggerResult struct {
	// Time at which the trigger was created.
	CreatedAt string `pulumi:"createdAt"`
	// The resource id of the azure resource
	Id string `pulumi:"id"`
	// Kind of synchronization on trigger.
	// Expected value is 'ScheduleBased'.
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Gets the provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Recurrence Interval
	RecurrenceInterval string `pulumi:"recurrenceInterval"`
	// Synchronization mode
	SynchronizationMode *string `pulumi:"synchronizationMode"`
	// Synchronization time
	SynchronizationTime string `pulumi:"synchronizationTime"`
	// System Data of the Azure resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Gets the trigger state
	TriggerStatus string `pulumi:"triggerStatus"`
	// Type of the azure resource
	Type string `pulumi:"type"`
	// Name of the user who created the trigger.
	UserName string `pulumi:"userName"`
}

func GetScheduledTriggerOutput(ctx *pulumi.Context, args GetScheduledTriggerOutputArgs, opts ...pulumi.InvokeOption) GetScheduledTriggerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScheduledTriggerResult, error) {
			args := v.(GetScheduledTriggerArgs)
			r, err := GetScheduledTrigger(ctx, &args, opts...)
			var s GetScheduledTriggerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScheduledTriggerResultOutput)
}

type GetScheduledTriggerOutputArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the shareSubscription.
	ShareSubscriptionName pulumi.StringInput `pulumi:"shareSubscriptionName"`
	// The name of the trigger.
	TriggerName pulumi.StringInput `pulumi:"triggerName"`
}

func (GetScheduledTriggerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScheduledTriggerArgs)(nil)).Elem()
}

// A type of trigger based on schedule
type GetScheduledTriggerResultOutput struct{ *pulumi.OutputState }

func (GetScheduledTriggerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScheduledTriggerResult)(nil)).Elem()
}

func (o GetScheduledTriggerResultOutput) ToGetScheduledTriggerResultOutput() GetScheduledTriggerResultOutput {
	return o
}

func (o GetScheduledTriggerResultOutput) ToGetScheduledTriggerResultOutputWithContext(ctx context.Context) GetScheduledTriggerResultOutput {
	return o
}

// Time at which the trigger was created.
func (o GetScheduledTriggerResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resource id of the azure resource
func (o GetScheduledTriggerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of synchronization on trigger.
// Expected value is 'ScheduleBased'.
func (o GetScheduledTriggerResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o GetScheduledTriggerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the provisioning state
func (o GetScheduledTriggerResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Recurrence Interval
func (o GetScheduledTriggerResultOutput) RecurrenceInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.RecurrenceInterval }).(pulumi.StringOutput)
}

// Synchronization mode
func (o GetScheduledTriggerResultOutput) SynchronizationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) *string { return v.SynchronizationMode }).(pulumi.StringPtrOutput)
}

// Synchronization time
func (o GetScheduledTriggerResultOutput) SynchronizationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.SynchronizationTime }).(pulumi.StringOutput)
}

// System Data of the Azure resource.
func (o GetScheduledTriggerResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Gets the trigger state
func (o GetScheduledTriggerResultOutput) TriggerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.TriggerStatus }).(pulumi.StringOutput)
}

// Type of the azure resource
func (o GetScheduledTriggerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.Type }).(pulumi.StringOutput)
}

// Name of the user who created the trigger.
func (o GetScheduledTriggerResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledTriggerResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScheduledTriggerResultOutput{})
}
