// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package management

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the details of the serviceGroup's ancestors
//
// Uses Azure REST API version 2024-02-01-preview.
func ListServiceGroupAncestors(ctx *pulumi.Context, args *ListServiceGroupAncestorsArgs, opts ...pulumi.InvokeOption) (*ListServiceGroupAncestorsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListServiceGroupAncestorsResult
	err := ctx.Invoke("azure-native:management:listServiceGroupAncestors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListServiceGroupAncestorsArgs struct {
	// ServiceGroup Name.
	ServiceGroupName string `pulumi:"serviceGroupName"`
}

// Response holding an array of service groups and a nextLink that supports pagination
type ListServiceGroupAncestorsResult struct {
	// URL to query the next page of results for this request
	NextLink *string `pulumi:"nextLink"`
	// Array of service groups based on the request criteria
	Value []ServiceGroupResponse `pulumi:"value"`
}

func ListServiceGroupAncestorsOutput(ctx *pulumi.Context, args ListServiceGroupAncestorsOutputArgs, opts ...pulumi.InvokeOption) ListServiceGroupAncestorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListServiceGroupAncestorsResultOutput, error) {
			args := v.(ListServiceGroupAncestorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:management:listServiceGroupAncestors", args, ListServiceGroupAncestorsResultOutput{}, options).(ListServiceGroupAncestorsResultOutput), nil
		}).(ListServiceGroupAncestorsResultOutput)
}

type ListServiceGroupAncestorsOutputArgs struct {
	// ServiceGroup Name.
	ServiceGroupName pulumi.StringInput `pulumi:"serviceGroupName"`
}

func (ListServiceGroupAncestorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceGroupAncestorsArgs)(nil)).Elem()
}

// Response holding an array of service groups and a nextLink that supports pagination
type ListServiceGroupAncestorsResultOutput struct{ *pulumi.OutputState }

func (ListServiceGroupAncestorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceGroupAncestorsResult)(nil)).Elem()
}

func (o ListServiceGroupAncestorsResultOutput) ToListServiceGroupAncestorsResultOutput() ListServiceGroupAncestorsResultOutput {
	return o
}

func (o ListServiceGroupAncestorsResultOutput) ToListServiceGroupAncestorsResultOutputWithContext(ctx context.Context) ListServiceGroupAncestorsResultOutput {
	return o
}

// URL to query the next page of results for this request
func (o ListServiceGroupAncestorsResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListServiceGroupAncestorsResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// Array of service groups based on the request criteria
func (o ListServiceGroupAncestorsResultOutput) Value() ServiceGroupResponseArrayOutput {
	return o.ApplyT(func(v ListServiceGroupAncestorsResult) []ServiceGroupResponse { return v.Value }).(ServiceGroupResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListServiceGroupAncestorsResultOutput{})
}
