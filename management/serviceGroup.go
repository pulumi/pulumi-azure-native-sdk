// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package management

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The serviceGroup details.
//
// Uses Azure REST API version 2024-02-01-preview.
type ServiceGroup struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The kind of the serviceGroup.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// ServiceGroup creation request body parameters.
	Properties ServiceGroupPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The serviceGroup tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServiceGroup registers a new resource with the given unique name, arguments, and options.
func NewServiceGroup(ctx *pulumi.Context,
	name string, args *ServiceGroupArgs, opts ...pulumi.ResourceOption) (*ServiceGroup, error) {
	if args == nil {
		args = &ServiceGroupArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:management/v20240201preview:ServiceGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ServiceGroup
	err := ctx.RegisterResource("azure-native:management:ServiceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceGroup gets an existing ServiceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceGroupState, opts ...pulumi.ResourceOption) (*ServiceGroup, error) {
	var resource ServiceGroup
	err := ctx.ReadResource("azure-native:management:ServiceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceGroup resources.
type serviceGroupState struct {
}

type ServiceGroupState struct {
}

func (ServiceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceGroupState)(nil)).Elem()
}

type serviceGroupArgs struct {
	// The kind of the serviceGroup.
	Kind *string `pulumi:"kind"`
	// ServiceGroup creation request body parameters.
	Properties *ServiceGroupProperties `pulumi:"properties"`
	// ServiceGroup Name.
	ServiceGroupName *string `pulumi:"serviceGroupName"`
	// The serviceGroup tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceGroup resource.
type ServiceGroupArgs struct {
	// The kind of the serviceGroup.
	Kind pulumi.StringPtrInput
	// ServiceGroup creation request body parameters.
	Properties ServiceGroupPropertiesPtrInput
	// ServiceGroup Name.
	ServiceGroupName pulumi.StringPtrInput
	// The serviceGroup tags.
	Tags pulumi.StringMapInput
}

func (ServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceGroupArgs)(nil)).Elem()
}

type ServiceGroupInput interface {
	pulumi.Input

	ToServiceGroupOutput() ServiceGroupOutput
	ToServiceGroupOutputWithContext(ctx context.Context) ServiceGroupOutput
}

func (*ServiceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGroup)(nil)).Elem()
}

func (i *ServiceGroup) ToServiceGroupOutput() ServiceGroupOutput {
	return i.ToServiceGroupOutputWithContext(context.Background())
}

func (i *ServiceGroup) ToServiceGroupOutputWithContext(ctx context.Context) ServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupOutput)
}

type ServiceGroupOutput struct{ *pulumi.OutputState }

func (ServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGroup)(nil)).Elem()
}

func (o ServiceGroupOutput) ToServiceGroupOutput() ServiceGroupOutput {
	return o
}

func (o ServiceGroupOutput) ToServiceGroupOutputWithContext(ctx context.Context) ServiceGroupOutput {
	return o
}

// The Azure API version of the resource.
func (o ServiceGroupOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The kind of the serviceGroup.
func (o ServiceGroupOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ServiceGroup creation request body parameters.
func (o ServiceGroupOutput) Properties() ServiceGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *ServiceGroup) ServiceGroupPropertiesResponseOutput { return v.Properties }).(ServiceGroupPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ServiceGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ServiceGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The serviceGroup tags.
func (o ServiceGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ServiceGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceGroupOutput{})
}
