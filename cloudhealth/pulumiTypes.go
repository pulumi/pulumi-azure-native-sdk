// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudhealth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Alert configuration details
type AlertConfiguration struct {
	// Optional list of action group resource IDs to be notified when the alert is triggered.
	ActionGroupIds []string `pulumi:"actionGroupIds"`
	// The alert rule description.
	Description *string `pulumi:"description"`
	// The severity of triggered alert.
	Severity string `pulumi:"severity"`
}

// AlertConfigurationInput is an input type that accepts AlertConfigurationArgs and AlertConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationInput` via:
//
//	AlertConfigurationArgs{...}
type AlertConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationOutput() AlertConfigurationOutput
	ToAlertConfigurationOutputWithContext(context.Context) AlertConfigurationOutput
}

// Alert configuration details
type AlertConfigurationArgs struct {
	// Optional list of action group resource IDs to be notified when the alert is triggered.
	ActionGroupIds pulumi.StringArrayInput `pulumi:"actionGroupIds"`
	// The alert rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The severity of triggered alert.
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (AlertConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfiguration)(nil)).Elem()
}

func (i AlertConfigurationArgs) ToAlertConfigurationOutput() AlertConfigurationOutput {
	return i.ToAlertConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationArgs) ToAlertConfigurationOutputWithContext(ctx context.Context) AlertConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationOutput)
}

func (i AlertConfigurationArgs) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return i.ToAlertConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationArgs) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationOutput).ToAlertConfigurationPtrOutputWithContext(ctx)
}

// AlertConfigurationPtrInput is an input type that accepts AlertConfigurationArgs, AlertConfigurationPtr and AlertConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationPtrInput` via:
//
//	        AlertConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationPtrInput interface {
	pulumi.Input

	ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput
	ToAlertConfigurationPtrOutputWithContext(context.Context) AlertConfigurationPtrOutput
}

type alertConfigurationPtrType AlertConfigurationArgs

func AlertConfigurationPtr(v *AlertConfigurationArgs) AlertConfigurationPtrInput {
	return (*alertConfigurationPtrType)(v)
}

func (*alertConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfiguration)(nil)).Elem()
}

func (i *alertConfigurationPtrType) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return i.ToAlertConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationPtrType) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationPtrOutput)
}

// Alert configuration details
type AlertConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfiguration)(nil)).Elem()
}

func (o AlertConfigurationOutput) ToAlertConfigurationOutput() AlertConfigurationOutput {
	return o
}

func (o AlertConfigurationOutput) ToAlertConfigurationOutputWithContext(ctx context.Context) AlertConfigurationOutput {
	return o
}

func (o AlertConfigurationOutput) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return o.ToAlertConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationOutput) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfiguration) *AlertConfiguration {
		return &v
	}).(AlertConfigurationPtrOutput)
}

// Optional list of action group resource IDs to be notified when the alert is triggered.
func (o AlertConfigurationOutput) ActionGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []string { return v.ActionGroupIds }).(pulumi.StringArrayOutput)
}

// The alert rule description.
func (o AlertConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The severity of triggered alert.
func (o AlertConfigurationOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v AlertConfiguration) string { return v.Severity }).(pulumi.StringOutput)
}

type AlertConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfiguration)(nil)).Elem()
}

func (o AlertConfigurationPtrOutput) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationPtrOutput) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationPtrOutput) Elem() AlertConfigurationOutput {
	return o.ApplyT(func(v *AlertConfiguration) AlertConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertConfiguration
		return ret
	}).(AlertConfigurationOutput)
}

// Optional list of action group resource IDs to be notified when the alert is triggered.
func (o AlertConfigurationPtrOutput) ActionGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ActionGroupIds
	}).(pulumi.StringArrayOutput)
}

// The alert rule description.
func (o AlertConfigurationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The severity of triggered alert.
func (o AlertConfigurationPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// Alert configuration details
type AlertConfigurationResponse struct {
	// Optional list of action group resource IDs to be notified when the alert is triggered.
	ActionGroupIds []string `pulumi:"actionGroupIds"`
	// The alert rule description.
	Description *string `pulumi:"description"`
	// The severity of triggered alert.
	Severity string `pulumi:"severity"`
}

// Alert configuration details
type AlertConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AlertConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationResponse)(nil)).Elem()
}

func (o AlertConfigurationResponseOutput) ToAlertConfigurationResponseOutput() AlertConfigurationResponseOutput {
	return o
}

func (o AlertConfigurationResponseOutput) ToAlertConfigurationResponseOutputWithContext(ctx context.Context) AlertConfigurationResponseOutput {
	return o
}

// Optional list of action group resource IDs to be notified when the alert is triggered.
func (o AlertConfigurationResponseOutput) ActionGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfigurationResponse) []string { return v.ActionGroupIds }).(pulumi.StringArrayOutput)
}

// The alert rule description.
func (o AlertConfigurationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The severity of triggered alert.
func (o AlertConfigurationResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v AlertConfigurationResponse) string { return v.Severity }).(pulumi.StringOutput)
}

type AlertConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationResponse)(nil)).Elem()
}

func (o AlertConfigurationResponsePtrOutput) ToAlertConfigurationResponsePtrOutput() AlertConfigurationResponsePtrOutput {
	return o
}

func (o AlertConfigurationResponsePtrOutput) ToAlertConfigurationResponsePtrOutputWithContext(ctx context.Context) AlertConfigurationResponsePtrOutput {
	return o
}

func (o AlertConfigurationResponsePtrOutput) Elem() AlertConfigurationResponseOutput {
	return o.ApplyT(func(v *AlertConfigurationResponse) AlertConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationResponse
		return ret
	}).(AlertConfigurationResponseOutput)
}

// Optional list of action group resource IDs to be notified when the alert is triggered.
func (o AlertConfigurationResponsePtrOutput) ActionGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.ActionGroupIds
	}).(pulumi.StringArrayOutput)
}

// The alert rule description.
func (o AlertConfigurationResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The severity of triggered alert.
func (o AlertConfigurationResponsePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// A grouping of signal assignments for a Azure Monitor Workspace
type AzureMonitorWorkspaceSignalGroup struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Azure Monitor workspace resource ID
	AzureMonitorWorkspaceResourceId string `pulumi:"azureMonitorWorkspaceResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments []SignalAssignment `pulumi:"signalAssignments"`
}

// AzureMonitorWorkspaceSignalGroupInput is an input type that accepts AzureMonitorWorkspaceSignalGroupArgs and AzureMonitorWorkspaceSignalGroupOutput values.
// You can construct a concrete instance of `AzureMonitorWorkspaceSignalGroupInput` via:
//
//	AzureMonitorWorkspaceSignalGroupArgs{...}
type AzureMonitorWorkspaceSignalGroupInput interface {
	pulumi.Input

	ToAzureMonitorWorkspaceSignalGroupOutput() AzureMonitorWorkspaceSignalGroupOutput
	ToAzureMonitorWorkspaceSignalGroupOutputWithContext(context.Context) AzureMonitorWorkspaceSignalGroupOutput
}

// A grouping of signal assignments for a Azure Monitor Workspace
type AzureMonitorWorkspaceSignalGroupArgs struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting pulumi.StringInput `pulumi:"authenticationSetting"`
	// Azure Monitor workspace resource ID
	AzureMonitorWorkspaceResourceId pulumi.StringInput `pulumi:"azureMonitorWorkspaceResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments SignalAssignmentArrayInput `pulumi:"signalAssignments"`
}

func (AzureMonitorWorkspaceSignalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorWorkspaceSignalGroup)(nil)).Elem()
}

func (i AzureMonitorWorkspaceSignalGroupArgs) ToAzureMonitorWorkspaceSignalGroupOutput() AzureMonitorWorkspaceSignalGroupOutput {
	return i.ToAzureMonitorWorkspaceSignalGroupOutputWithContext(context.Background())
}

func (i AzureMonitorWorkspaceSignalGroupArgs) ToAzureMonitorWorkspaceSignalGroupOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorWorkspaceSignalGroupOutput)
}

func (i AzureMonitorWorkspaceSignalGroupArgs) ToAzureMonitorWorkspaceSignalGroupPtrOutput() AzureMonitorWorkspaceSignalGroupPtrOutput {
	return i.ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(context.Background())
}

func (i AzureMonitorWorkspaceSignalGroupArgs) ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorWorkspaceSignalGroupOutput).ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(ctx)
}

// AzureMonitorWorkspaceSignalGroupPtrInput is an input type that accepts AzureMonitorWorkspaceSignalGroupArgs, AzureMonitorWorkspaceSignalGroupPtr and AzureMonitorWorkspaceSignalGroupPtrOutput values.
// You can construct a concrete instance of `AzureMonitorWorkspaceSignalGroupPtrInput` via:
//
//	        AzureMonitorWorkspaceSignalGroupArgs{...}
//
//	or:
//
//	        nil
type AzureMonitorWorkspaceSignalGroupPtrInput interface {
	pulumi.Input

	ToAzureMonitorWorkspaceSignalGroupPtrOutput() AzureMonitorWorkspaceSignalGroupPtrOutput
	ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(context.Context) AzureMonitorWorkspaceSignalGroupPtrOutput
}

type azureMonitorWorkspaceSignalGroupPtrType AzureMonitorWorkspaceSignalGroupArgs

func AzureMonitorWorkspaceSignalGroupPtr(v *AzureMonitorWorkspaceSignalGroupArgs) AzureMonitorWorkspaceSignalGroupPtrInput {
	return (*azureMonitorWorkspaceSignalGroupPtrType)(v)
}

func (*azureMonitorWorkspaceSignalGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorWorkspaceSignalGroup)(nil)).Elem()
}

func (i *azureMonitorWorkspaceSignalGroupPtrType) ToAzureMonitorWorkspaceSignalGroupPtrOutput() AzureMonitorWorkspaceSignalGroupPtrOutput {
	return i.ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(context.Background())
}

func (i *azureMonitorWorkspaceSignalGroupPtrType) ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorWorkspaceSignalGroupPtrOutput)
}

// A grouping of signal assignments for a Azure Monitor Workspace
type AzureMonitorWorkspaceSignalGroupOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceSignalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorWorkspaceSignalGroup)(nil)).Elem()
}

func (o AzureMonitorWorkspaceSignalGroupOutput) ToAzureMonitorWorkspaceSignalGroupOutput() AzureMonitorWorkspaceSignalGroupOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupOutput) ToAzureMonitorWorkspaceSignalGroupOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupOutput) ToAzureMonitorWorkspaceSignalGroupPtrOutput() AzureMonitorWorkspaceSignalGroupPtrOutput {
	return o.ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(context.Background())
}

func (o AzureMonitorWorkspaceSignalGroupOutput) ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureMonitorWorkspaceSignalGroup) *AzureMonitorWorkspaceSignalGroup {
		return &v
	}).(AzureMonitorWorkspaceSignalGroupPtrOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureMonitorWorkspaceSignalGroupOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceSignalGroup) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Azure Monitor workspace resource ID
func (o AzureMonitorWorkspaceSignalGroupOutput) AzureMonitorWorkspaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceSignalGroup) string { return v.AzureMonitorWorkspaceResourceId }).(pulumi.StringOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureMonitorWorkspaceSignalGroupOutput) SignalAssignments() SignalAssignmentArrayOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceSignalGroup) []SignalAssignment { return v.SignalAssignments }).(SignalAssignmentArrayOutput)
}

type AzureMonitorWorkspaceSignalGroupPtrOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceSignalGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorWorkspaceSignalGroup)(nil)).Elem()
}

func (o AzureMonitorWorkspaceSignalGroupPtrOutput) ToAzureMonitorWorkspaceSignalGroupPtrOutput() AzureMonitorWorkspaceSignalGroupPtrOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupPtrOutput) ToAzureMonitorWorkspaceSignalGroupPtrOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupPtrOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupPtrOutput) Elem() AzureMonitorWorkspaceSignalGroupOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroup) AzureMonitorWorkspaceSignalGroup {
		if v != nil {
			return *v
		}
		var ret AzureMonitorWorkspaceSignalGroup
		return ret
	}).(AzureMonitorWorkspaceSignalGroupOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureMonitorWorkspaceSignalGroupPtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Azure Monitor workspace resource ID
func (o AzureMonitorWorkspaceSignalGroupPtrOutput) AzureMonitorWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.AzureMonitorWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureMonitorWorkspaceSignalGroupPtrOutput) SignalAssignments() SignalAssignmentArrayOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroup) []SignalAssignment {
		if v == nil {
			return nil
		}
		return v.SignalAssignments
	}).(SignalAssignmentArrayOutput)
}

// A grouping of signal assignments for a Azure Monitor Workspace
type AzureMonitorWorkspaceSignalGroupResponse struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Azure Monitor workspace resource ID
	AzureMonitorWorkspaceResourceId string `pulumi:"azureMonitorWorkspaceResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments []SignalAssignmentResponse `pulumi:"signalAssignments"`
}

// A grouping of signal assignments for a Azure Monitor Workspace
type AzureMonitorWorkspaceSignalGroupResponseOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceSignalGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorWorkspaceSignalGroupResponse)(nil)).Elem()
}

func (o AzureMonitorWorkspaceSignalGroupResponseOutput) ToAzureMonitorWorkspaceSignalGroupResponseOutput() AzureMonitorWorkspaceSignalGroupResponseOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupResponseOutput) ToAzureMonitorWorkspaceSignalGroupResponseOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupResponseOutput {
	return o
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureMonitorWorkspaceSignalGroupResponseOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceSignalGroupResponse) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Azure Monitor workspace resource ID
func (o AzureMonitorWorkspaceSignalGroupResponseOutput) AzureMonitorWorkspaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceSignalGroupResponse) string { return v.AzureMonitorWorkspaceResourceId }).(pulumi.StringOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureMonitorWorkspaceSignalGroupResponseOutput) SignalAssignments() SignalAssignmentResponseArrayOutput {
	return o.ApplyT(func(v AzureMonitorWorkspaceSignalGroupResponse) []SignalAssignmentResponse {
		return v.SignalAssignments
	}).(SignalAssignmentResponseArrayOutput)
}

type AzureMonitorWorkspaceSignalGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceSignalGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorWorkspaceSignalGroupResponse)(nil)).Elem()
}

func (o AzureMonitorWorkspaceSignalGroupResponsePtrOutput) ToAzureMonitorWorkspaceSignalGroupResponsePtrOutput() AzureMonitorWorkspaceSignalGroupResponsePtrOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupResponsePtrOutput) ToAzureMonitorWorkspaceSignalGroupResponsePtrOutputWithContext(ctx context.Context) AzureMonitorWorkspaceSignalGroupResponsePtrOutput {
	return o
}

func (o AzureMonitorWorkspaceSignalGroupResponsePtrOutput) Elem() AzureMonitorWorkspaceSignalGroupResponseOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroupResponse) AzureMonitorWorkspaceSignalGroupResponse {
		if v != nil {
			return *v
		}
		var ret AzureMonitorWorkspaceSignalGroupResponse
		return ret
	}).(AzureMonitorWorkspaceSignalGroupResponseOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureMonitorWorkspaceSignalGroupResponsePtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Azure Monitor workspace resource ID
func (o AzureMonitorWorkspaceSignalGroupResponsePtrOutput) AzureMonitorWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AzureMonitorWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureMonitorWorkspaceSignalGroupResponsePtrOutput) SignalAssignments() SignalAssignmentResponseArrayOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspaceSignalGroupResponse) []SignalAssignmentResponse {
		if v == nil {
			return nil
		}
		return v.SignalAssignments
	}).(SignalAssignmentResponseArrayOutput)
}

// A grouping of signal assignments for an Azure resource
type AzureResourceSignalGroup struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Azure resource ID
	AzureResourceId string `pulumi:"azureResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments []SignalAssignment `pulumi:"signalAssignments"`
}

// AzureResourceSignalGroupInput is an input type that accepts AzureResourceSignalGroupArgs and AzureResourceSignalGroupOutput values.
// You can construct a concrete instance of `AzureResourceSignalGroupInput` via:
//
//	AzureResourceSignalGroupArgs{...}
type AzureResourceSignalGroupInput interface {
	pulumi.Input

	ToAzureResourceSignalGroupOutput() AzureResourceSignalGroupOutput
	ToAzureResourceSignalGroupOutputWithContext(context.Context) AzureResourceSignalGroupOutput
}

// A grouping of signal assignments for an Azure resource
type AzureResourceSignalGroupArgs struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting pulumi.StringInput `pulumi:"authenticationSetting"`
	// Azure resource ID
	AzureResourceId pulumi.StringInput `pulumi:"azureResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments SignalAssignmentArrayInput `pulumi:"signalAssignments"`
}

func (AzureResourceSignalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceSignalGroup)(nil)).Elem()
}

func (i AzureResourceSignalGroupArgs) ToAzureResourceSignalGroupOutput() AzureResourceSignalGroupOutput {
	return i.ToAzureResourceSignalGroupOutputWithContext(context.Background())
}

func (i AzureResourceSignalGroupArgs) ToAzureResourceSignalGroupOutputWithContext(ctx context.Context) AzureResourceSignalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceSignalGroupOutput)
}

func (i AzureResourceSignalGroupArgs) ToAzureResourceSignalGroupPtrOutput() AzureResourceSignalGroupPtrOutput {
	return i.ToAzureResourceSignalGroupPtrOutputWithContext(context.Background())
}

func (i AzureResourceSignalGroupArgs) ToAzureResourceSignalGroupPtrOutputWithContext(ctx context.Context) AzureResourceSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceSignalGroupOutput).ToAzureResourceSignalGroupPtrOutputWithContext(ctx)
}

// AzureResourceSignalGroupPtrInput is an input type that accepts AzureResourceSignalGroupArgs, AzureResourceSignalGroupPtr and AzureResourceSignalGroupPtrOutput values.
// You can construct a concrete instance of `AzureResourceSignalGroupPtrInput` via:
//
//	        AzureResourceSignalGroupArgs{...}
//
//	or:
//
//	        nil
type AzureResourceSignalGroupPtrInput interface {
	pulumi.Input

	ToAzureResourceSignalGroupPtrOutput() AzureResourceSignalGroupPtrOutput
	ToAzureResourceSignalGroupPtrOutputWithContext(context.Context) AzureResourceSignalGroupPtrOutput
}

type azureResourceSignalGroupPtrType AzureResourceSignalGroupArgs

func AzureResourceSignalGroupPtr(v *AzureResourceSignalGroupArgs) AzureResourceSignalGroupPtrInput {
	return (*azureResourceSignalGroupPtrType)(v)
}

func (*azureResourceSignalGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceSignalGroup)(nil)).Elem()
}

func (i *azureResourceSignalGroupPtrType) ToAzureResourceSignalGroupPtrOutput() AzureResourceSignalGroupPtrOutput {
	return i.ToAzureResourceSignalGroupPtrOutputWithContext(context.Background())
}

func (i *azureResourceSignalGroupPtrType) ToAzureResourceSignalGroupPtrOutputWithContext(ctx context.Context) AzureResourceSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceSignalGroupPtrOutput)
}

// A grouping of signal assignments for an Azure resource
type AzureResourceSignalGroupOutput struct{ *pulumi.OutputState }

func (AzureResourceSignalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceSignalGroup)(nil)).Elem()
}

func (o AzureResourceSignalGroupOutput) ToAzureResourceSignalGroupOutput() AzureResourceSignalGroupOutput {
	return o
}

func (o AzureResourceSignalGroupOutput) ToAzureResourceSignalGroupOutputWithContext(ctx context.Context) AzureResourceSignalGroupOutput {
	return o
}

func (o AzureResourceSignalGroupOutput) ToAzureResourceSignalGroupPtrOutput() AzureResourceSignalGroupPtrOutput {
	return o.ToAzureResourceSignalGroupPtrOutputWithContext(context.Background())
}

func (o AzureResourceSignalGroupOutput) ToAzureResourceSignalGroupPtrOutputWithContext(ctx context.Context) AzureResourceSignalGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureResourceSignalGroup) *AzureResourceSignalGroup {
		return &v
	}).(AzureResourceSignalGroupPtrOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureResourceSignalGroupOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceSignalGroup) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Azure resource ID
func (o AzureResourceSignalGroupOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceSignalGroup) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureResourceSignalGroupOutput) SignalAssignments() SignalAssignmentArrayOutput {
	return o.ApplyT(func(v AzureResourceSignalGroup) []SignalAssignment { return v.SignalAssignments }).(SignalAssignmentArrayOutput)
}

type AzureResourceSignalGroupPtrOutput struct{ *pulumi.OutputState }

func (AzureResourceSignalGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceSignalGroup)(nil)).Elem()
}

func (o AzureResourceSignalGroupPtrOutput) ToAzureResourceSignalGroupPtrOutput() AzureResourceSignalGroupPtrOutput {
	return o
}

func (o AzureResourceSignalGroupPtrOutput) ToAzureResourceSignalGroupPtrOutputWithContext(ctx context.Context) AzureResourceSignalGroupPtrOutput {
	return o
}

func (o AzureResourceSignalGroupPtrOutput) Elem() AzureResourceSignalGroupOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroup) AzureResourceSignalGroup {
		if v != nil {
			return *v
		}
		var ret AzureResourceSignalGroup
		return ret
	}).(AzureResourceSignalGroupOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureResourceSignalGroupPtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Azure resource ID
func (o AzureResourceSignalGroupPtrOutput) AzureResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.AzureResourceId
	}).(pulumi.StringPtrOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureResourceSignalGroupPtrOutput) SignalAssignments() SignalAssignmentArrayOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroup) []SignalAssignment {
		if v == nil {
			return nil
		}
		return v.SignalAssignments
	}).(SignalAssignmentArrayOutput)
}

// A grouping of signal assignments for an Azure resource
type AzureResourceSignalGroupResponse struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Azure resource ID
	AzureResourceId string `pulumi:"azureResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments []SignalAssignmentResponse `pulumi:"signalAssignments"`
}

// A grouping of signal assignments for an Azure resource
type AzureResourceSignalGroupResponseOutput struct{ *pulumi.OutputState }

func (AzureResourceSignalGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceSignalGroupResponse)(nil)).Elem()
}

func (o AzureResourceSignalGroupResponseOutput) ToAzureResourceSignalGroupResponseOutput() AzureResourceSignalGroupResponseOutput {
	return o
}

func (o AzureResourceSignalGroupResponseOutput) ToAzureResourceSignalGroupResponseOutputWithContext(ctx context.Context) AzureResourceSignalGroupResponseOutput {
	return o
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureResourceSignalGroupResponseOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceSignalGroupResponse) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Azure resource ID
func (o AzureResourceSignalGroupResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceSignalGroupResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureResourceSignalGroupResponseOutput) SignalAssignments() SignalAssignmentResponseArrayOutput {
	return o.ApplyT(func(v AzureResourceSignalGroupResponse) []SignalAssignmentResponse { return v.SignalAssignments }).(SignalAssignmentResponseArrayOutput)
}

type AzureResourceSignalGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureResourceSignalGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceSignalGroupResponse)(nil)).Elem()
}

func (o AzureResourceSignalGroupResponsePtrOutput) ToAzureResourceSignalGroupResponsePtrOutput() AzureResourceSignalGroupResponsePtrOutput {
	return o
}

func (o AzureResourceSignalGroupResponsePtrOutput) ToAzureResourceSignalGroupResponsePtrOutputWithContext(ctx context.Context) AzureResourceSignalGroupResponsePtrOutput {
	return o
}

func (o AzureResourceSignalGroupResponsePtrOutput) Elem() AzureResourceSignalGroupResponseOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroupResponse) AzureResourceSignalGroupResponse {
		if v != nil {
			return *v
		}
		var ret AzureResourceSignalGroupResponse
		return ret
	}).(AzureResourceSignalGroupResponseOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o AzureResourceSignalGroupResponsePtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Azure resource ID
func (o AzureResourceSignalGroupResponsePtrOutput) AzureResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AzureResourceId
	}).(pulumi.StringPtrOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o AzureResourceSignalGroupResponsePtrOutput) SignalAssignments() SignalAssignmentResponseArrayOutput {
	return o.ApplyT(func(v *AzureResourceSignalGroupResponse) []SignalAssignmentResponse {
		if v == nil {
			return nil
		}
		return v.SignalAssignments
	}).(SignalAssignmentResponseArrayOutput)
}

// Properties for dependent entities, i.e. child entities
type DependenciesSignalGroup struct {
	// Aggregation type for child dependencies.
	AggregationType string `pulumi:"aggregationType"`
	// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
	DegradedThreshold *string `pulumi:"degradedThreshold"`
	// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
	UnhealthyThreshold *string `pulumi:"unhealthyThreshold"`
}

// Defaults sets the appropriate defaults for DependenciesSignalGroup
func (val *DependenciesSignalGroup) Defaults() *DependenciesSignalGroup {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.AggregationType) {
		tmp.AggregationType = "WorstOf"
	}
	return &tmp
}

// DependenciesSignalGroupInput is an input type that accepts DependenciesSignalGroupArgs and DependenciesSignalGroupOutput values.
// You can construct a concrete instance of `DependenciesSignalGroupInput` via:
//
//	DependenciesSignalGroupArgs{...}
type DependenciesSignalGroupInput interface {
	pulumi.Input

	ToDependenciesSignalGroupOutput() DependenciesSignalGroupOutput
	ToDependenciesSignalGroupOutputWithContext(context.Context) DependenciesSignalGroupOutput
}

// Properties for dependent entities, i.e. child entities
type DependenciesSignalGroupArgs struct {
	// Aggregation type for child dependencies.
	AggregationType pulumi.StringInput `pulumi:"aggregationType"`
	// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
	DegradedThreshold pulumi.StringPtrInput `pulumi:"degradedThreshold"`
	// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
	UnhealthyThreshold pulumi.StringPtrInput `pulumi:"unhealthyThreshold"`
}

// Defaults sets the appropriate defaults for DependenciesSignalGroupArgs
func (val *DependenciesSignalGroupArgs) Defaults() *DependenciesSignalGroupArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AggregationType == nil {
		tmp.AggregationType = pulumi.String("WorstOf")
	}
	return &tmp
}
func (DependenciesSignalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DependenciesSignalGroup)(nil)).Elem()
}

func (i DependenciesSignalGroupArgs) ToDependenciesSignalGroupOutput() DependenciesSignalGroupOutput {
	return i.ToDependenciesSignalGroupOutputWithContext(context.Background())
}

func (i DependenciesSignalGroupArgs) ToDependenciesSignalGroupOutputWithContext(ctx context.Context) DependenciesSignalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependenciesSignalGroupOutput)
}

func (i DependenciesSignalGroupArgs) ToDependenciesSignalGroupPtrOutput() DependenciesSignalGroupPtrOutput {
	return i.ToDependenciesSignalGroupPtrOutputWithContext(context.Background())
}

func (i DependenciesSignalGroupArgs) ToDependenciesSignalGroupPtrOutputWithContext(ctx context.Context) DependenciesSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependenciesSignalGroupOutput).ToDependenciesSignalGroupPtrOutputWithContext(ctx)
}

// DependenciesSignalGroupPtrInput is an input type that accepts DependenciesSignalGroupArgs, DependenciesSignalGroupPtr and DependenciesSignalGroupPtrOutput values.
// You can construct a concrete instance of `DependenciesSignalGroupPtrInput` via:
//
//	        DependenciesSignalGroupArgs{...}
//
//	or:
//
//	        nil
type DependenciesSignalGroupPtrInput interface {
	pulumi.Input

	ToDependenciesSignalGroupPtrOutput() DependenciesSignalGroupPtrOutput
	ToDependenciesSignalGroupPtrOutputWithContext(context.Context) DependenciesSignalGroupPtrOutput
}

type dependenciesSignalGroupPtrType DependenciesSignalGroupArgs

func DependenciesSignalGroupPtr(v *DependenciesSignalGroupArgs) DependenciesSignalGroupPtrInput {
	return (*dependenciesSignalGroupPtrType)(v)
}

func (*dependenciesSignalGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DependenciesSignalGroup)(nil)).Elem()
}

func (i *dependenciesSignalGroupPtrType) ToDependenciesSignalGroupPtrOutput() DependenciesSignalGroupPtrOutput {
	return i.ToDependenciesSignalGroupPtrOutputWithContext(context.Background())
}

func (i *dependenciesSignalGroupPtrType) ToDependenciesSignalGroupPtrOutputWithContext(ctx context.Context) DependenciesSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependenciesSignalGroupPtrOutput)
}

// Properties for dependent entities, i.e. child entities
type DependenciesSignalGroupOutput struct{ *pulumi.OutputState }

func (DependenciesSignalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DependenciesSignalGroup)(nil)).Elem()
}

func (o DependenciesSignalGroupOutput) ToDependenciesSignalGroupOutput() DependenciesSignalGroupOutput {
	return o
}

func (o DependenciesSignalGroupOutput) ToDependenciesSignalGroupOutputWithContext(ctx context.Context) DependenciesSignalGroupOutput {
	return o
}

func (o DependenciesSignalGroupOutput) ToDependenciesSignalGroupPtrOutput() DependenciesSignalGroupPtrOutput {
	return o.ToDependenciesSignalGroupPtrOutputWithContext(context.Background())
}

func (o DependenciesSignalGroupOutput) ToDependenciesSignalGroupPtrOutputWithContext(ctx context.Context) DependenciesSignalGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DependenciesSignalGroup) *DependenciesSignalGroup {
		return &v
	}).(DependenciesSignalGroupPtrOutput)
}

// Aggregation type for child dependencies.
func (o DependenciesSignalGroupOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v DependenciesSignalGroup) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupOutput) DegradedThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependenciesSignalGroup) *string { return v.DegradedThreshold }).(pulumi.StringPtrOutput)
}

// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupOutput) UnhealthyThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependenciesSignalGroup) *string { return v.UnhealthyThreshold }).(pulumi.StringPtrOutput)
}

type DependenciesSignalGroupPtrOutput struct{ *pulumi.OutputState }

func (DependenciesSignalGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DependenciesSignalGroup)(nil)).Elem()
}

func (o DependenciesSignalGroupPtrOutput) ToDependenciesSignalGroupPtrOutput() DependenciesSignalGroupPtrOutput {
	return o
}

func (o DependenciesSignalGroupPtrOutput) ToDependenciesSignalGroupPtrOutputWithContext(ctx context.Context) DependenciesSignalGroupPtrOutput {
	return o
}

func (o DependenciesSignalGroupPtrOutput) Elem() DependenciesSignalGroupOutput {
	return o.ApplyT(func(v *DependenciesSignalGroup) DependenciesSignalGroup {
		if v != nil {
			return *v
		}
		var ret DependenciesSignalGroup
		return ret
	}).(DependenciesSignalGroupOutput)
}

// Aggregation type for child dependencies.
func (o DependenciesSignalGroupPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DependenciesSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationType
	}).(pulumi.StringPtrOutput)
}

// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupPtrOutput) DegradedThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DependenciesSignalGroup) *string {
		if v == nil {
			return nil
		}
		return v.DegradedThreshold
	}).(pulumi.StringPtrOutput)
}

// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupPtrOutput) UnhealthyThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DependenciesSignalGroup) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.StringPtrOutput)
}

// Properties for dependent entities, i.e. child entities
type DependenciesSignalGroupResponse struct {
	// Aggregation type for child dependencies.
	AggregationType string `pulumi:"aggregationType"`
	// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
	DegradedThreshold *string `pulumi:"degradedThreshold"`
	// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
	UnhealthyThreshold *string `pulumi:"unhealthyThreshold"`
}

// Defaults sets the appropriate defaults for DependenciesSignalGroupResponse
func (val *DependenciesSignalGroupResponse) Defaults() *DependenciesSignalGroupResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.AggregationType) {
		tmp.AggregationType = "WorstOf"
	}
	return &tmp
}

// Properties for dependent entities, i.e. child entities
type DependenciesSignalGroupResponseOutput struct{ *pulumi.OutputState }

func (DependenciesSignalGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DependenciesSignalGroupResponse)(nil)).Elem()
}

func (o DependenciesSignalGroupResponseOutput) ToDependenciesSignalGroupResponseOutput() DependenciesSignalGroupResponseOutput {
	return o
}

func (o DependenciesSignalGroupResponseOutput) ToDependenciesSignalGroupResponseOutputWithContext(ctx context.Context) DependenciesSignalGroupResponseOutput {
	return o
}

// Aggregation type for child dependencies.
func (o DependenciesSignalGroupResponseOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v DependenciesSignalGroupResponse) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupResponseOutput) DegradedThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependenciesSignalGroupResponse) *string { return v.DegradedThreshold }).(pulumi.StringPtrOutput)
}

// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupResponseOutput) UnhealthyThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependenciesSignalGroupResponse) *string { return v.UnhealthyThreshold }).(pulumi.StringPtrOutput)
}

type DependenciesSignalGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (DependenciesSignalGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DependenciesSignalGroupResponse)(nil)).Elem()
}

func (o DependenciesSignalGroupResponsePtrOutput) ToDependenciesSignalGroupResponsePtrOutput() DependenciesSignalGroupResponsePtrOutput {
	return o
}

func (o DependenciesSignalGroupResponsePtrOutput) ToDependenciesSignalGroupResponsePtrOutputWithContext(ctx context.Context) DependenciesSignalGroupResponsePtrOutput {
	return o
}

func (o DependenciesSignalGroupResponsePtrOutput) Elem() DependenciesSignalGroupResponseOutput {
	return o.ApplyT(func(v *DependenciesSignalGroupResponse) DependenciesSignalGroupResponse {
		if v != nil {
			return *v
		}
		var ret DependenciesSignalGroupResponse
		return ret
	}).(DependenciesSignalGroupResponseOutput)
}

// Aggregation type for child dependencies.
func (o DependenciesSignalGroupResponsePtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DependenciesSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationType
	}).(pulumi.StringPtrOutput)
}

// Degraded threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered degraded when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupResponsePtrOutput) DegradedThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DependenciesSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.DegradedThreshold
	}).(pulumi.StringPtrOutput)
}

// Unhealthy threshold for aggregating the propagated health state of child dependencies. Can be either an absolute number that is greater than 0, or a percentage between 1-100%. The entity will be considered unhealthy when the number of not healthy child dependents (unhealthy, degraded, unknown) is equal to or above the threshold value. Must only be set when AggregationType is 'Thresholds'.
func (o DependenciesSignalGroupResponsePtrOutput) UnhealthyThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DependenciesSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.StringPtrOutput)
}

// Discovery rule properties
type DiscoveryRuleProperties struct {
	// Whether to add all recommended signals to the discovered entities.
	AddRecommendedSignals string `pulumi:"addRecommendedSignals"`
	// Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities.
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted.
	DiscoverRelationships string `pulumi:"discoverRelationships"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.
	ResourceGraphQuery string `pulumi:"resourceGraphQuery"`
}

// DiscoveryRulePropertiesInput is an input type that accepts DiscoveryRulePropertiesArgs and DiscoveryRulePropertiesOutput values.
// You can construct a concrete instance of `DiscoveryRulePropertiesInput` via:
//
//	DiscoveryRulePropertiesArgs{...}
type DiscoveryRulePropertiesInput interface {
	pulumi.Input

	ToDiscoveryRulePropertiesOutput() DiscoveryRulePropertiesOutput
	ToDiscoveryRulePropertiesOutputWithContext(context.Context) DiscoveryRulePropertiesOutput
}

// Discovery rule properties
type DiscoveryRulePropertiesArgs struct {
	// Whether to add all recommended signals to the discovered entities.
	AddRecommendedSignals pulumi.StringInput `pulumi:"addRecommendedSignals"`
	// Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities.
	AuthenticationSetting pulumi.StringInput `pulumi:"authenticationSetting"`
	// Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted.
	DiscoverRelationships pulumi.StringInput `pulumi:"discoverRelationships"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.
	ResourceGraphQuery pulumi.StringInput `pulumi:"resourceGraphQuery"`
}

func (DiscoveryRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryRuleProperties)(nil)).Elem()
}

func (i DiscoveryRulePropertiesArgs) ToDiscoveryRulePropertiesOutput() DiscoveryRulePropertiesOutput {
	return i.ToDiscoveryRulePropertiesOutputWithContext(context.Background())
}

func (i DiscoveryRulePropertiesArgs) ToDiscoveryRulePropertiesOutputWithContext(ctx context.Context) DiscoveryRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryRulePropertiesOutput)
}

func (i DiscoveryRulePropertiesArgs) ToDiscoveryRulePropertiesPtrOutput() DiscoveryRulePropertiesPtrOutput {
	return i.ToDiscoveryRulePropertiesPtrOutputWithContext(context.Background())
}

func (i DiscoveryRulePropertiesArgs) ToDiscoveryRulePropertiesPtrOutputWithContext(ctx context.Context) DiscoveryRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryRulePropertiesOutput).ToDiscoveryRulePropertiesPtrOutputWithContext(ctx)
}

// DiscoveryRulePropertiesPtrInput is an input type that accepts DiscoveryRulePropertiesArgs, DiscoveryRulePropertiesPtr and DiscoveryRulePropertiesPtrOutput values.
// You can construct a concrete instance of `DiscoveryRulePropertiesPtrInput` via:
//
//	        DiscoveryRulePropertiesArgs{...}
//
//	or:
//
//	        nil
type DiscoveryRulePropertiesPtrInput interface {
	pulumi.Input

	ToDiscoveryRulePropertiesPtrOutput() DiscoveryRulePropertiesPtrOutput
	ToDiscoveryRulePropertiesPtrOutputWithContext(context.Context) DiscoveryRulePropertiesPtrOutput
}

type discoveryRulePropertiesPtrType DiscoveryRulePropertiesArgs

func DiscoveryRulePropertiesPtr(v *DiscoveryRulePropertiesArgs) DiscoveryRulePropertiesPtrInput {
	return (*discoveryRulePropertiesPtrType)(v)
}

func (*discoveryRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryRuleProperties)(nil)).Elem()
}

func (i *discoveryRulePropertiesPtrType) ToDiscoveryRulePropertiesPtrOutput() DiscoveryRulePropertiesPtrOutput {
	return i.ToDiscoveryRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *discoveryRulePropertiesPtrType) ToDiscoveryRulePropertiesPtrOutputWithContext(ctx context.Context) DiscoveryRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryRulePropertiesPtrOutput)
}

// Discovery rule properties
type DiscoveryRulePropertiesOutput struct{ *pulumi.OutputState }

func (DiscoveryRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryRuleProperties)(nil)).Elem()
}

func (o DiscoveryRulePropertiesOutput) ToDiscoveryRulePropertiesOutput() DiscoveryRulePropertiesOutput {
	return o
}

func (o DiscoveryRulePropertiesOutput) ToDiscoveryRulePropertiesOutputWithContext(ctx context.Context) DiscoveryRulePropertiesOutput {
	return o
}

func (o DiscoveryRulePropertiesOutput) ToDiscoveryRulePropertiesPtrOutput() DiscoveryRulePropertiesPtrOutput {
	return o.ToDiscoveryRulePropertiesPtrOutputWithContext(context.Background())
}

func (o DiscoveryRulePropertiesOutput) ToDiscoveryRulePropertiesPtrOutputWithContext(ctx context.Context) DiscoveryRulePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryRuleProperties) *DiscoveryRuleProperties {
		return &v
	}).(DiscoveryRulePropertiesPtrOutput)
}

// Whether to add all recommended signals to the discovered entities.
func (o DiscoveryRulePropertiesOutput) AddRecommendedSignals() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRuleProperties) string { return v.AddRecommendedSignals }).(pulumi.StringOutput)
}

// Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities.
func (o DiscoveryRulePropertiesOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRuleProperties) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted.
func (o DiscoveryRulePropertiesOutput) DiscoverRelationships() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRuleProperties) string { return v.DiscoverRelationships }).(pulumi.StringOutput)
}

// Display name
func (o DiscoveryRulePropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiscoveryRuleProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.
func (o DiscoveryRulePropertiesOutput) ResourceGraphQuery() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRuleProperties) string { return v.ResourceGraphQuery }).(pulumi.StringOutput)
}

type DiscoveryRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryRuleProperties)(nil)).Elem()
}

func (o DiscoveryRulePropertiesPtrOutput) ToDiscoveryRulePropertiesPtrOutput() DiscoveryRulePropertiesPtrOutput {
	return o
}

func (o DiscoveryRulePropertiesPtrOutput) ToDiscoveryRulePropertiesPtrOutputWithContext(ctx context.Context) DiscoveryRulePropertiesPtrOutput {
	return o
}

func (o DiscoveryRulePropertiesPtrOutput) Elem() DiscoveryRulePropertiesOutput {
	return o.ApplyT(func(v *DiscoveryRuleProperties) DiscoveryRuleProperties {
		if v != nil {
			return *v
		}
		var ret DiscoveryRuleProperties
		return ret
	}).(DiscoveryRulePropertiesOutput)
}

// Whether to add all recommended signals to the discovered entities.
func (o DiscoveryRulePropertiesPtrOutput) AddRecommendedSignals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AddRecommendedSignals
	}).(pulumi.StringPtrOutput)
}

// Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities.
func (o DiscoveryRulePropertiesPtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted.
func (o DiscoveryRulePropertiesPtrOutput) DiscoverRelationships() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DiscoverRelationships
	}).(pulumi.StringPtrOutput)
}

// Display name
func (o DiscoveryRulePropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryRuleProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.
func (o DiscoveryRulePropertiesPtrOutput) ResourceGraphQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGraphQuery
	}).(pulumi.StringPtrOutput)
}

// Discovery rule properties
type DiscoveryRulePropertiesResponse struct {
	// Whether to add all recommended signals to the discovered entities.
	AddRecommendedSignals string `pulumi:"addRecommendedSignals"`
	// Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities.
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Date when the discovery rule was (soft-)deleted.
	DeletionDate string `pulumi:"deletionDate"`
	// Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted.
	DiscoverRelationships string `pulumi:"discoverRelationships"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Name of the entity which represents the discovery rule. Note: It might take a few minutes after creating the discovery rule until the entity is created.
	EntityName string `pulumi:"entityName"`
	// Error message if the last discovery operation failed.
	ErrorMessage string `pulumi:"errorMessage"`
	// Number of discovered entities in the last discovery operation.
	NumberOfDiscoveredEntities int `pulumi:"numberOfDiscoveredEntities"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.
	ResourceGraphQuery string `pulumi:"resourceGraphQuery"`
}

// Discovery rule properties
type DiscoveryRulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DiscoveryRulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryRulePropertiesResponse)(nil)).Elem()
}

func (o DiscoveryRulePropertiesResponseOutput) ToDiscoveryRulePropertiesResponseOutput() DiscoveryRulePropertiesResponseOutput {
	return o
}

func (o DiscoveryRulePropertiesResponseOutput) ToDiscoveryRulePropertiesResponseOutputWithContext(ctx context.Context) DiscoveryRulePropertiesResponseOutput {
	return o
}

// Whether to add all recommended signals to the discovered entities.
func (o DiscoveryRulePropertiesResponseOutput) AddRecommendedSignals() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.AddRecommendedSignals }).(pulumi.StringOutput)
}

// Reference to the name of the authentication setting which is used for querying Azure Resource Graph. The same authentication setting will also be assigned to any discovered entities.
func (o DiscoveryRulePropertiesResponseOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Date when the discovery rule was (soft-)deleted.
func (o DiscoveryRulePropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

// Whether to create relationships between the discovered entities based on a set of built-in rules. These relationships cannot be manually deleted.
func (o DiscoveryRulePropertiesResponseOutput) DiscoverRelationships() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.DiscoverRelationships }).(pulumi.StringOutput)
}

// Display name
func (o DiscoveryRulePropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Name of the entity which represents the discovery rule. Note: It might take a few minutes after creating the discovery rule until the entity is created.
func (o DiscoveryRulePropertiesResponseOutput) EntityName() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.EntityName }).(pulumi.StringOutput)
}

// Error message if the last discovery operation failed.
func (o DiscoveryRulePropertiesResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Number of discovered entities in the last discovery operation.
func (o DiscoveryRulePropertiesResponseOutput) NumberOfDiscoveredEntities() pulumi.IntOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) int { return v.NumberOfDiscoveredEntities }).(pulumi.IntOutput)
}

// The status of the last operation.
func (o DiscoveryRulePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Graph query text in KQL syntax. The query must return at least a column named 'id' which contains the resource ID of the discovered resources.
func (o DiscoveryRulePropertiesResponseOutput) ResourceGraphQuery() pulumi.StringOutput {
	return o.ApplyT(func(v DiscoveryRulePropertiesResponse) string { return v.ResourceGraphQuery }).(pulumi.StringOutput)
}

// ML-based evaluation rule for a signal definition
type DynamicDetectionRule struct {
	// Threshold direction
	DynamicThresholdDirection string `pulumi:"dynamicThresholdDirection"`
	// ML model to use for dynamic thresholds
	DynamicThresholdModel string `pulumi:"dynamicThresholdModel"`
	// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
	ModelSensitivity float64 `pulumi:"modelSensitivity"`
	// Start time of the training in UTC.
	TrainingStartTime *string `pulumi:"trainingStartTime"`
}

// DynamicDetectionRuleInput is an input type that accepts DynamicDetectionRuleArgs and DynamicDetectionRuleOutput values.
// You can construct a concrete instance of `DynamicDetectionRuleInput` via:
//
//	DynamicDetectionRuleArgs{...}
type DynamicDetectionRuleInput interface {
	pulumi.Input

	ToDynamicDetectionRuleOutput() DynamicDetectionRuleOutput
	ToDynamicDetectionRuleOutputWithContext(context.Context) DynamicDetectionRuleOutput
}

// ML-based evaluation rule for a signal definition
type DynamicDetectionRuleArgs struct {
	// Threshold direction
	DynamicThresholdDirection pulumi.StringInput `pulumi:"dynamicThresholdDirection"`
	// ML model to use for dynamic thresholds
	DynamicThresholdModel pulumi.StringInput `pulumi:"dynamicThresholdModel"`
	// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
	ModelSensitivity pulumi.Float64Input `pulumi:"modelSensitivity"`
	// Start time of the training in UTC.
	TrainingStartTime pulumi.StringPtrInput `pulumi:"trainingStartTime"`
}

func (DynamicDetectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicDetectionRule)(nil)).Elem()
}

func (i DynamicDetectionRuleArgs) ToDynamicDetectionRuleOutput() DynamicDetectionRuleOutput {
	return i.ToDynamicDetectionRuleOutputWithContext(context.Background())
}

func (i DynamicDetectionRuleArgs) ToDynamicDetectionRuleOutputWithContext(ctx context.Context) DynamicDetectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicDetectionRuleOutput)
}

func (i DynamicDetectionRuleArgs) ToDynamicDetectionRulePtrOutput() DynamicDetectionRulePtrOutput {
	return i.ToDynamicDetectionRulePtrOutputWithContext(context.Background())
}

func (i DynamicDetectionRuleArgs) ToDynamicDetectionRulePtrOutputWithContext(ctx context.Context) DynamicDetectionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicDetectionRuleOutput).ToDynamicDetectionRulePtrOutputWithContext(ctx)
}

// DynamicDetectionRulePtrInput is an input type that accepts DynamicDetectionRuleArgs, DynamicDetectionRulePtr and DynamicDetectionRulePtrOutput values.
// You can construct a concrete instance of `DynamicDetectionRulePtrInput` via:
//
//	        DynamicDetectionRuleArgs{...}
//
//	or:
//
//	        nil
type DynamicDetectionRulePtrInput interface {
	pulumi.Input

	ToDynamicDetectionRulePtrOutput() DynamicDetectionRulePtrOutput
	ToDynamicDetectionRulePtrOutputWithContext(context.Context) DynamicDetectionRulePtrOutput
}

type dynamicDetectionRulePtrType DynamicDetectionRuleArgs

func DynamicDetectionRulePtr(v *DynamicDetectionRuleArgs) DynamicDetectionRulePtrInput {
	return (*dynamicDetectionRulePtrType)(v)
}

func (*dynamicDetectionRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicDetectionRule)(nil)).Elem()
}

func (i *dynamicDetectionRulePtrType) ToDynamicDetectionRulePtrOutput() DynamicDetectionRulePtrOutput {
	return i.ToDynamicDetectionRulePtrOutputWithContext(context.Background())
}

func (i *dynamicDetectionRulePtrType) ToDynamicDetectionRulePtrOutputWithContext(ctx context.Context) DynamicDetectionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicDetectionRulePtrOutput)
}

// ML-based evaluation rule for a signal definition
type DynamicDetectionRuleOutput struct{ *pulumi.OutputState }

func (DynamicDetectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicDetectionRule)(nil)).Elem()
}

func (o DynamicDetectionRuleOutput) ToDynamicDetectionRuleOutput() DynamicDetectionRuleOutput {
	return o
}

func (o DynamicDetectionRuleOutput) ToDynamicDetectionRuleOutputWithContext(ctx context.Context) DynamicDetectionRuleOutput {
	return o
}

func (o DynamicDetectionRuleOutput) ToDynamicDetectionRulePtrOutput() DynamicDetectionRulePtrOutput {
	return o.ToDynamicDetectionRulePtrOutputWithContext(context.Background())
}

func (o DynamicDetectionRuleOutput) ToDynamicDetectionRulePtrOutputWithContext(ctx context.Context) DynamicDetectionRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicDetectionRule) *DynamicDetectionRule {
		return &v
	}).(DynamicDetectionRulePtrOutput)
}

// Threshold direction
func (o DynamicDetectionRuleOutput) DynamicThresholdDirection() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicDetectionRule) string { return v.DynamicThresholdDirection }).(pulumi.StringOutput)
}

// ML model to use for dynamic thresholds
func (o DynamicDetectionRuleOutput) DynamicThresholdModel() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicDetectionRule) string { return v.DynamicThresholdModel }).(pulumi.StringOutput)
}

// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
func (o DynamicDetectionRuleOutput) ModelSensitivity() pulumi.Float64Output {
	return o.ApplyT(func(v DynamicDetectionRule) float64 { return v.ModelSensitivity }).(pulumi.Float64Output)
}

// Start time of the training in UTC.
func (o DynamicDetectionRuleOutput) TrainingStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicDetectionRule) *string { return v.TrainingStartTime }).(pulumi.StringPtrOutput)
}

type DynamicDetectionRulePtrOutput struct{ *pulumi.OutputState }

func (DynamicDetectionRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicDetectionRule)(nil)).Elem()
}

func (o DynamicDetectionRulePtrOutput) ToDynamicDetectionRulePtrOutput() DynamicDetectionRulePtrOutput {
	return o
}

func (o DynamicDetectionRulePtrOutput) ToDynamicDetectionRulePtrOutputWithContext(ctx context.Context) DynamicDetectionRulePtrOutput {
	return o
}

func (o DynamicDetectionRulePtrOutput) Elem() DynamicDetectionRuleOutput {
	return o.ApplyT(func(v *DynamicDetectionRule) DynamicDetectionRule {
		if v != nil {
			return *v
		}
		var ret DynamicDetectionRule
		return ret
	}).(DynamicDetectionRuleOutput)
}

// Threshold direction
func (o DynamicDetectionRulePtrOutput) DynamicThresholdDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRule) *string {
		if v == nil {
			return nil
		}
		return &v.DynamicThresholdDirection
	}).(pulumi.StringPtrOutput)
}

// ML model to use for dynamic thresholds
func (o DynamicDetectionRulePtrOutput) DynamicThresholdModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRule) *string {
		if v == nil {
			return nil
		}
		return &v.DynamicThresholdModel
	}).(pulumi.StringPtrOutput)
}

// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
func (o DynamicDetectionRulePtrOutput) ModelSensitivity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRule) *float64 {
		if v == nil {
			return nil
		}
		return &v.ModelSensitivity
	}).(pulumi.Float64PtrOutput)
}

// Start time of the training in UTC.
func (o DynamicDetectionRulePtrOutput) TrainingStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRule) *string {
		if v == nil {
			return nil
		}
		return v.TrainingStartTime
	}).(pulumi.StringPtrOutput)
}

// ML-based evaluation rule for a signal definition
type DynamicDetectionRuleResponse struct {
	// Threshold direction
	DynamicThresholdDirection string `pulumi:"dynamicThresholdDirection"`
	// ML model to use for dynamic thresholds
	DynamicThresholdModel string `pulumi:"dynamicThresholdModel"`
	// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
	ModelSensitivity float64 `pulumi:"modelSensitivity"`
	// Start time of the training in UTC.
	TrainingStartTime *string `pulumi:"trainingStartTime"`
}

// ML-based evaluation rule for a signal definition
type DynamicDetectionRuleResponseOutput struct{ *pulumi.OutputState }

func (DynamicDetectionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicDetectionRuleResponse)(nil)).Elem()
}

func (o DynamicDetectionRuleResponseOutput) ToDynamicDetectionRuleResponseOutput() DynamicDetectionRuleResponseOutput {
	return o
}

func (o DynamicDetectionRuleResponseOutput) ToDynamicDetectionRuleResponseOutputWithContext(ctx context.Context) DynamicDetectionRuleResponseOutput {
	return o
}

// Threshold direction
func (o DynamicDetectionRuleResponseOutput) DynamicThresholdDirection() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicDetectionRuleResponse) string { return v.DynamicThresholdDirection }).(pulumi.StringOutput)
}

// ML model to use for dynamic thresholds
func (o DynamicDetectionRuleResponseOutput) DynamicThresholdModel() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicDetectionRuleResponse) string { return v.DynamicThresholdModel }).(pulumi.StringOutput)
}

// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
func (o DynamicDetectionRuleResponseOutput) ModelSensitivity() pulumi.Float64Output {
	return o.ApplyT(func(v DynamicDetectionRuleResponse) float64 { return v.ModelSensitivity }).(pulumi.Float64Output)
}

// Start time of the training in UTC.
func (o DynamicDetectionRuleResponseOutput) TrainingStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicDetectionRuleResponse) *string { return v.TrainingStartTime }).(pulumi.StringPtrOutput)
}

type DynamicDetectionRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (DynamicDetectionRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicDetectionRuleResponse)(nil)).Elem()
}

func (o DynamicDetectionRuleResponsePtrOutput) ToDynamicDetectionRuleResponsePtrOutput() DynamicDetectionRuleResponsePtrOutput {
	return o
}

func (o DynamicDetectionRuleResponsePtrOutput) ToDynamicDetectionRuleResponsePtrOutputWithContext(ctx context.Context) DynamicDetectionRuleResponsePtrOutput {
	return o
}

func (o DynamicDetectionRuleResponsePtrOutput) Elem() DynamicDetectionRuleResponseOutput {
	return o.ApplyT(func(v *DynamicDetectionRuleResponse) DynamicDetectionRuleResponse {
		if v != nil {
			return *v
		}
		var ret DynamicDetectionRuleResponse
		return ret
	}).(DynamicDetectionRuleResponseOutput)
}

// Threshold direction
func (o DynamicDetectionRuleResponsePtrOutput) DynamicThresholdDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRuleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DynamicThresholdDirection
	}).(pulumi.StringPtrOutput)
}

// ML model to use for dynamic thresholds
func (o DynamicDetectionRuleResponsePtrOutput) DynamicThresholdModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRuleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DynamicThresholdModel
	}).(pulumi.StringPtrOutput)
}

// ML model sensitivity. Lowest value = high sensitivity. Supported step size = 0.5
func (o DynamicDetectionRuleResponsePtrOutput) ModelSensitivity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRuleResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ModelSensitivity
	}).(pulumi.Float64PtrOutput)
}

// Start time of the training in UTC.
func (o DynamicDetectionRuleResponsePtrOutput) TrainingStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicDetectionRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrainingStartTime
	}).(pulumi.StringPtrOutput)
}

// Alert configuration for an entity
type EntityAlerts struct {
	// Alert to be triggered on state change to degraded
	Degraded *AlertConfiguration `pulumi:"degraded"`
	// Alert to be triggered on state change to unhealthy
	Unhealthy *AlertConfiguration `pulumi:"unhealthy"`
}

// EntityAlertsInput is an input type that accepts EntityAlertsArgs and EntityAlertsOutput values.
// You can construct a concrete instance of `EntityAlertsInput` via:
//
//	EntityAlertsArgs{...}
type EntityAlertsInput interface {
	pulumi.Input

	ToEntityAlertsOutput() EntityAlertsOutput
	ToEntityAlertsOutputWithContext(context.Context) EntityAlertsOutput
}

// Alert configuration for an entity
type EntityAlertsArgs struct {
	// Alert to be triggered on state change to degraded
	Degraded AlertConfigurationPtrInput `pulumi:"degraded"`
	// Alert to be triggered on state change to unhealthy
	Unhealthy AlertConfigurationPtrInput `pulumi:"unhealthy"`
}

func (EntityAlertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityAlerts)(nil)).Elem()
}

func (i EntityAlertsArgs) ToEntityAlertsOutput() EntityAlertsOutput {
	return i.ToEntityAlertsOutputWithContext(context.Background())
}

func (i EntityAlertsArgs) ToEntityAlertsOutputWithContext(ctx context.Context) EntityAlertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityAlertsOutput)
}

func (i EntityAlertsArgs) ToEntityAlertsPtrOutput() EntityAlertsPtrOutput {
	return i.ToEntityAlertsPtrOutputWithContext(context.Background())
}

func (i EntityAlertsArgs) ToEntityAlertsPtrOutputWithContext(ctx context.Context) EntityAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityAlertsOutput).ToEntityAlertsPtrOutputWithContext(ctx)
}

// EntityAlertsPtrInput is an input type that accepts EntityAlertsArgs, EntityAlertsPtr and EntityAlertsPtrOutput values.
// You can construct a concrete instance of `EntityAlertsPtrInput` via:
//
//	        EntityAlertsArgs{...}
//
//	or:
//
//	        nil
type EntityAlertsPtrInput interface {
	pulumi.Input

	ToEntityAlertsPtrOutput() EntityAlertsPtrOutput
	ToEntityAlertsPtrOutputWithContext(context.Context) EntityAlertsPtrOutput
}

type entityAlertsPtrType EntityAlertsArgs

func EntityAlertsPtr(v *EntityAlertsArgs) EntityAlertsPtrInput {
	return (*entityAlertsPtrType)(v)
}

func (*entityAlertsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityAlerts)(nil)).Elem()
}

func (i *entityAlertsPtrType) ToEntityAlertsPtrOutput() EntityAlertsPtrOutput {
	return i.ToEntityAlertsPtrOutputWithContext(context.Background())
}

func (i *entityAlertsPtrType) ToEntityAlertsPtrOutputWithContext(ctx context.Context) EntityAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityAlertsPtrOutput)
}

// Alert configuration for an entity
type EntityAlertsOutput struct{ *pulumi.OutputState }

func (EntityAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityAlerts)(nil)).Elem()
}

func (o EntityAlertsOutput) ToEntityAlertsOutput() EntityAlertsOutput {
	return o
}

func (o EntityAlertsOutput) ToEntityAlertsOutputWithContext(ctx context.Context) EntityAlertsOutput {
	return o
}

func (o EntityAlertsOutput) ToEntityAlertsPtrOutput() EntityAlertsPtrOutput {
	return o.ToEntityAlertsPtrOutputWithContext(context.Background())
}

func (o EntityAlertsOutput) ToEntityAlertsPtrOutputWithContext(ctx context.Context) EntityAlertsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityAlerts) *EntityAlerts {
		return &v
	}).(EntityAlertsPtrOutput)
}

// Alert to be triggered on state change to degraded
func (o EntityAlertsOutput) Degraded() AlertConfigurationPtrOutput {
	return o.ApplyT(func(v EntityAlerts) *AlertConfiguration { return v.Degraded }).(AlertConfigurationPtrOutput)
}

// Alert to be triggered on state change to unhealthy
func (o EntityAlertsOutput) Unhealthy() AlertConfigurationPtrOutput {
	return o.ApplyT(func(v EntityAlerts) *AlertConfiguration { return v.Unhealthy }).(AlertConfigurationPtrOutput)
}

type EntityAlertsPtrOutput struct{ *pulumi.OutputState }

func (EntityAlertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityAlerts)(nil)).Elem()
}

func (o EntityAlertsPtrOutput) ToEntityAlertsPtrOutput() EntityAlertsPtrOutput {
	return o
}

func (o EntityAlertsPtrOutput) ToEntityAlertsPtrOutputWithContext(ctx context.Context) EntityAlertsPtrOutput {
	return o
}

func (o EntityAlertsPtrOutput) Elem() EntityAlertsOutput {
	return o.ApplyT(func(v *EntityAlerts) EntityAlerts {
		if v != nil {
			return *v
		}
		var ret EntityAlerts
		return ret
	}).(EntityAlertsOutput)
}

// Alert to be triggered on state change to degraded
func (o EntityAlertsPtrOutput) Degraded() AlertConfigurationPtrOutput {
	return o.ApplyT(func(v *EntityAlerts) *AlertConfiguration {
		if v == nil {
			return nil
		}
		return v.Degraded
	}).(AlertConfigurationPtrOutput)
}

// Alert to be triggered on state change to unhealthy
func (o EntityAlertsPtrOutput) Unhealthy() AlertConfigurationPtrOutput {
	return o.ApplyT(func(v *EntityAlerts) *AlertConfiguration {
		if v == nil {
			return nil
		}
		return v.Unhealthy
	}).(AlertConfigurationPtrOutput)
}

// Alert configuration for an entity
type EntityAlertsResponse struct {
	// Alert to be triggered on state change to degraded
	Degraded *AlertConfigurationResponse `pulumi:"degraded"`
	// Alert to be triggered on state change to unhealthy
	Unhealthy *AlertConfigurationResponse `pulumi:"unhealthy"`
}

// Alert configuration for an entity
type EntityAlertsResponseOutput struct{ *pulumi.OutputState }

func (EntityAlertsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityAlertsResponse)(nil)).Elem()
}

func (o EntityAlertsResponseOutput) ToEntityAlertsResponseOutput() EntityAlertsResponseOutput {
	return o
}

func (o EntityAlertsResponseOutput) ToEntityAlertsResponseOutputWithContext(ctx context.Context) EntityAlertsResponseOutput {
	return o
}

// Alert to be triggered on state change to degraded
func (o EntityAlertsResponseOutput) Degraded() AlertConfigurationResponsePtrOutput {
	return o.ApplyT(func(v EntityAlertsResponse) *AlertConfigurationResponse { return v.Degraded }).(AlertConfigurationResponsePtrOutput)
}

// Alert to be triggered on state change to unhealthy
func (o EntityAlertsResponseOutput) Unhealthy() AlertConfigurationResponsePtrOutput {
	return o.ApplyT(func(v EntityAlertsResponse) *AlertConfigurationResponse { return v.Unhealthy }).(AlertConfigurationResponsePtrOutput)
}

type EntityAlertsResponsePtrOutput struct{ *pulumi.OutputState }

func (EntityAlertsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityAlertsResponse)(nil)).Elem()
}

func (o EntityAlertsResponsePtrOutput) ToEntityAlertsResponsePtrOutput() EntityAlertsResponsePtrOutput {
	return o
}

func (o EntityAlertsResponsePtrOutput) ToEntityAlertsResponsePtrOutputWithContext(ctx context.Context) EntityAlertsResponsePtrOutput {
	return o
}

func (o EntityAlertsResponsePtrOutput) Elem() EntityAlertsResponseOutput {
	return o.ApplyT(func(v *EntityAlertsResponse) EntityAlertsResponse {
		if v != nil {
			return *v
		}
		var ret EntityAlertsResponse
		return ret
	}).(EntityAlertsResponseOutput)
}

// Alert to be triggered on state change to degraded
func (o EntityAlertsResponsePtrOutput) Degraded() AlertConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *EntityAlertsResponse) *AlertConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Degraded
	}).(AlertConfigurationResponsePtrOutput)
}

// Alert to be triggered on state change to unhealthy
func (o EntityAlertsResponsePtrOutput) Unhealthy() AlertConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *EntityAlertsResponse) *AlertConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Unhealthy
	}).(AlertConfigurationResponsePtrOutput)
}

// Visual position of the entity
type EntityCoordinates struct {
	// X Coordinate
	X float64 `pulumi:"x"`
	// Y Coordinate
	Y float64 `pulumi:"y"`
}

// EntityCoordinatesInput is an input type that accepts EntityCoordinatesArgs and EntityCoordinatesOutput values.
// You can construct a concrete instance of `EntityCoordinatesInput` via:
//
//	EntityCoordinatesArgs{...}
type EntityCoordinatesInput interface {
	pulumi.Input

	ToEntityCoordinatesOutput() EntityCoordinatesOutput
	ToEntityCoordinatesOutputWithContext(context.Context) EntityCoordinatesOutput
}

// Visual position of the entity
type EntityCoordinatesArgs struct {
	// X Coordinate
	X pulumi.Float64Input `pulumi:"x"`
	// Y Coordinate
	Y pulumi.Float64Input `pulumi:"y"`
}

func (EntityCoordinatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityCoordinates)(nil)).Elem()
}

func (i EntityCoordinatesArgs) ToEntityCoordinatesOutput() EntityCoordinatesOutput {
	return i.ToEntityCoordinatesOutputWithContext(context.Background())
}

func (i EntityCoordinatesArgs) ToEntityCoordinatesOutputWithContext(ctx context.Context) EntityCoordinatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityCoordinatesOutput)
}

func (i EntityCoordinatesArgs) ToEntityCoordinatesPtrOutput() EntityCoordinatesPtrOutput {
	return i.ToEntityCoordinatesPtrOutputWithContext(context.Background())
}

func (i EntityCoordinatesArgs) ToEntityCoordinatesPtrOutputWithContext(ctx context.Context) EntityCoordinatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityCoordinatesOutput).ToEntityCoordinatesPtrOutputWithContext(ctx)
}

// EntityCoordinatesPtrInput is an input type that accepts EntityCoordinatesArgs, EntityCoordinatesPtr and EntityCoordinatesPtrOutput values.
// You can construct a concrete instance of `EntityCoordinatesPtrInput` via:
//
//	        EntityCoordinatesArgs{...}
//
//	or:
//
//	        nil
type EntityCoordinatesPtrInput interface {
	pulumi.Input

	ToEntityCoordinatesPtrOutput() EntityCoordinatesPtrOutput
	ToEntityCoordinatesPtrOutputWithContext(context.Context) EntityCoordinatesPtrOutput
}

type entityCoordinatesPtrType EntityCoordinatesArgs

func EntityCoordinatesPtr(v *EntityCoordinatesArgs) EntityCoordinatesPtrInput {
	return (*entityCoordinatesPtrType)(v)
}

func (*entityCoordinatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityCoordinates)(nil)).Elem()
}

func (i *entityCoordinatesPtrType) ToEntityCoordinatesPtrOutput() EntityCoordinatesPtrOutput {
	return i.ToEntityCoordinatesPtrOutputWithContext(context.Background())
}

func (i *entityCoordinatesPtrType) ToEntityCoordinatesPtrOutputWithContext(ctx context.Context) EntityCoordinatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityCoordinatesPtrOutput)
}

// Visual position of the entity
type EntityCoordinatesOutput struct{ *pulumi.OutputState }

func (EntityCoordinatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityCoordinates)(nil)).Elem()
}

func (o EntityCoordinatesOutput) ToEntityCoordinatesOutput() EntityCoordinatesOutput {
	return o
}

func (o EntityCoordinatesOutput) ToEntityCoordinatesOutputWithContext(ctx context.Context) EntityCoordinatesOutput {
	return o
}

func (o EntityCoordinatesOutput) ToEntityCoordinatesPtrOutput() EntityCoordinatesPtrOutput {
	return o.ToEntityCoordinatesPtrOutputWithContext(context.Background())
}

func (o EntityCoordinatesOutput) ToEntityCoordinatesPtrOutputWithContext(ctx context.Context) EntityCoordinatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityCoordinates) *EntityCoordinates {
		return &v
	}).(EntityCoordinatesPtrOutput)
}

// X Coordinate
func (o EntityCoordinatesOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v EntityCoordinates) float64 { return v.X }).(pulumi.Float64Output)
}

// Y Coordinate
func (o EntityCoordinatesOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v EntityCoordinates) float64 { return v.Y }).(pulumi.Float64Output)
}

type EntityCoordinatesPtrOutput struct{ *pulumi.OutputState }

func (EntityCoordinatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityCoordinates)(nil)).Elem()
}

func (o EntityCoordinatesPtrOutput) ToEntityCoordinatesPtrOutput() EntityCoordinatesPtrOutput {
	return o
}

func (o EntityCoordinatesPtrOutput) ToEntityCoordinatesPtrOutputWithContext(ctx context.Context) EntityCoordinatesPtrOutput {
	return o
}

func (o EntityCoordinatesPtrOutput) Elem() EntityCoordinatesOutput {
	return o.ApplyT(func(v *EntityCoordinates) EntityCoordinates {
		if v != nil {
			return *v
		}
		var ret EntityCoordinates
		return ret
	}).(EntityCoordinatesOutput)
}

// X Coordinate
func (o EntityCoordinatesPtrOutput) X() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EntityCoordinates) *float64 {
		if v == nil {
			return nil
		}
		return &v.X
	}).(pulumi.Float64PtrOutput)
}

// Y Coordinate
func (o EntityCoordinatesPtrOutput) Y() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EntityCoordinates) *float64 {
		if v == nil {
			return nil
		}
		return &v.Y
	}).(pulumi.Float64PtrOutput)
}

// Visual position of the entity
type EntityCoordinatesResponse struct {
	// X Coordinate
	X float64 `pulumi:"x"`
	// Y Coordinate
	Y float64 `pulumi:"y"`
}

// Visual position of the entity
type EntityCoordinatesResponseOutput struct{ *pulumi.OutputState }

func (EntityCoordinatesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityCoordinatesResponse)(nil)).Elem()
}

func (o EntityCoordinatesResponseOutput) ToEntityCoordinatesResponseOutput() EntityCoordinatesResponseOutput {
	return o
}

func (o EntityCoordinatesResponseOutput) ToEntityCoordinatesResponseOutputWithContext(ctx context.Context) EntityCoordinatesResponseOutput {
	return o
}

// X Coordinate
func (o EntityCoordinatesResponseOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v EntityCoordinatesResponse) float64 { return v.X }).(pulumi.Float64Output)
}

// Y Coordinate
func (o EntityCoordinatesResponseOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v EntityCoordinatesResponse) float64 { return v.Y }).(pulumi.Float64Output)
}

type EntityCoordinatesResponsePtrOutput struct{ *pulumi.OutputState }

func (EntityCoordinatesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityCoordinatesResponse)(nil)).Elem()
}

func (o EntityCoordinatesResponsePtrOutput) ToEntityCoordinatesResponsePtrOutput() EntityCoordinatesResponsePtrOutput {
	return o
}

func (o EntityCoordinatesResponsePtrOutput) ToEntityCoordinatesResponsePtrOutputWithContext(ctx context.Context) EntityCoordinatesResponsePtrOutput {
	return o
}

func (o EntityCoordinatesResponsePtrOutput) Elem() EntityCoordinatesResponseOutput {
	return o.ApplyT(func(v *EntityCoordinatesResponse) EntityCoordinatesResponse {
		if v != nil {
			return *v
		}
		var ret EntityCoordinatesResponse
		return ret
	}).(EntityCoordinatesResponseOutput)
}

// X Coordinate
func (o EntityCoordinatesResponsePtrOutput) X() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EntityCoordinatesResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.X
	}).(pulumi.Float64PtrOutput)
}

// Y Coordinate
func (o EntityCoordinatesResponsePtrOutput) Y() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EntityCoordinatesResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Y
	}).(pulumi.Float64PtrOutput)
}

// Properties which are common across all kinds of entities
type EntityProperties struct {
	// Alert configuration for this entity
	Alerts *EntityAlerts `pulumi:"alerts"`
	// Positioning of the entity on the model canvas
	CanvasPosition *EntityCoordinates `pulumi:"canvasPosition"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Health objective as a percentage of time the entity should be healthy.
	HealthObjective *float64 `pulumi:"healthObjective"`
	// Visual icon definition. If not set, a default icon is used.
	Icon *IconDefinition `pulumi:"icon"`
	// Impact of the entity in health state propagation
	Impact *string `pulumi:"impact"`
	// Entity kind
	Kind *string `pulumi:"kind"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Signal groups which are assigned to this entity
	Signals *SignalGroup `pulumi:"signals"`
}

// Defaults sets the appropriate defaults for EntityProperties
func (val *EntityProperties) Defaults() *EntityProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Impact == nil {
		impact_ := "Standard"
		tmp.Impact = &impact_
	}
	if tmp.Kind == nil {
		kind_ := "Default"
		tmp.Kind = &kind_
	}
	tmp.Signals = tmp.Signals.Defaults()

	return &tmp
}

// EntityPropertiesInput is an input type that accepts EntityPropertiesArgs and EntityPropertiesOutput values.
// You can construct a concrete instance of `EntityPropertiesInput` via:
//
//	EntityPropertiesArgs{...}
type EntityPropertiesInput interface {
	pulumi.Input

	ToEntityPropertiesOutput() EntityPropertiesOutput
	ToEntityPropertiesOutputWithContext(context.Context) EntityPropertiesOutput
}

// Properties which are common across all kinds of entities
type EntityPropertiesArgs struct {
	// Alert configuration for this entity
	Alerts EntityAlertsPtrInput `pulumi:"alerts"`
	// Positioning of the entity on the model canvas
	CanvasPosition EntityCoordinatesPtrInput `pulumi:"canvasPosition"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Health objective as a percentage of time the entity should be healthy.
	HealthObjective pulumi.Float64PtrInput `pulumi:"healthObjective"`
	// Visual icon definition. If not set, a default icon is used.
	Icon IconDefinitionPtrInput `pulumi:"icon"`
	// Impact of the entity in health state propagation
	Impact pulumi.StringPtrInput `pulumi:"impact"`
	// Entity kind
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Optional set of labels (key-value pairs)
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Signal groups which are assigned to this entity
	Signals SignalGroupPtrInput `pulumi:"signals"`
}

// Defaults sets the appropriate defaults for EntityPropertiesArgs
func (val *EntityPropertiesArgs) Defaults() *EntityPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Impact == nil {
		tmp.Impact = pulumi.StringPtr("Standard")
	}
	if tmp.Kind == nil {
		tmp.Kind = pulumi.StringPtr("Default")
	}

	return &tmp
}
func (EntityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityProperties)(nil)).Elem()
}

func (i EntityPropertiesArgs) ToEntityPropertiesOutput() EntityPropertiesOutput {
	return i.ToEntityPropertiesOutputWithContext(context.Background())
}

func (i EntityPropertiesArgs) ToEntityPropertiesOutputWithContext(ctx context.Context) EntityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesOutput)
}

func (i EntityPropertiesArgs) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return i.ToEntityPropertiesPtrOutputWithContext(context.Background())
}

func (i EntityPropertiesArgs) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesOutput).ToEntityPropertiesPtrOutputWithContext(ctx)
}

// EntityPropertiesPtrInput is an input type that accepts EntityPropertiesArgs, EntityPropertiesPtr and EntityPropertiesPtrOutput values.
// You can construct a concrete instance of `EntityPropertiesPtrInput` via:
//
//	        EntityPropertiesArgs{...}
//
//	or:
//
//	        nil
type EntityPropertiesPtrInput interface {
	pulumi.Input

	ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput
	ToEntityPropertiesPtrOutputWithContext(context.Context) EntityPropertiesPtrOutput
}

type entityPropertiesPtrType EntityPropertiesArgs

func EntityPropertiesPtr(v *EntityPropertiesArgs) EntityPropertiesPtrInput {
	return (*entityPropertiesPtrType)(v)
}

func (*entityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityProperties)(nil)).Elem()
}

func (i *entityPropertiesPtrType) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return i.ToEntityPropertiesPtrOutputWithContext(context.Background())
}

func (i *entityPropertiesPtrType) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesPtrOutput)
}

// Properties which are common across all kinds of entities
type EntityPropertiesOutput struct{ *pulumi.OutputState }

func (EntityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityProperties)(nil)).Elem()
}

func (o EntityPropertiesOutput) ToEntityPropertiesOutput() EntityPropertiesOutput {
	return o
}

func (o EntityPropertiesOutput) ToEntityPropertiesOutputWithContext(ctx context.Context) EntityPropertiesOutput {
	return o
}

func (o EntityPropertiesOutput) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return o.ToEntityPropertiesPtrOutputWithContext(context.Background())
}

func (o EntityPropertiesOutput) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityProperties) *EntityProperties {
		return &v
	}).(EntityPropertiesPtrOutput)
}

// Alert configuration for this entity
func (o EntityPropertiesOutput) Alerts() EntityAlertsPtrOutput {
	return o.ApplyT(func(v EntityProperties) *EntityAlerts { return v.Alerts }).(EntityAlertsPtrOutput)
}

// Positioning of the entity on the model canvas
func (o EntityPropertiesOutput) CanvasPosition() EntityCoordinatesPtrOutput {
	return o.ApplyT(func(v EntityProperties) *EntityCoordinates { return v.CanvasPosition }).(EntityCoordinatesPtrOutput)
}

// Display name
func (o EntityPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Health objective as a percentage of time the entity should be healthy.
func (o EntityPropertiesOutput) HealthObjective() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EntityProperties) *float64 { return v.HealthObjective }).(pulumi.Float64PtrOutput)
}

// Visual icon definition. If not set, a default icon is used.
func (o EntityPropertiesOutput) Icon() IconDefinitionPtrOutput {
	return o.ApplyT(func(v EntityProperties) *IconDefinition { return v.Icon }).(IconDefinitionPtrOutput)
}

// Impact of the entity in health state propagation
func (o EntityPropertiesOutput) Impact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityProperties) *string { return v.Impact }).(pulumi.StringPtrOutput)
}

// Entity kind
func (o EntityPropertiesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityProperties) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Optional set of labels (key-value pairs)
func (o EntityPropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v EntityProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Signal groups which are assigned to this entity
func (o EntityPropertiesOutput) Signals() SignalGroupPtrOutput {
	return o.ApplyT(func(v EntityProperties) *SignalGroup { return v.Signals }).(SignalGroupPtrOutput)
}

type EntityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EntityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityProperties)(nil)).Elem()
}

func (o EntityPropertiesPtrOutput) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return o
}

func (o EntityPropertiesPtrOutput) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return o
}

func (o EntityPropertiesPtrOutput) Elem() EntityPropertiesOutput {
	return o.ApplyT(func(v *EntityProperties) EntityProperties {
		if v != nil {
			return *v
		}
		var ret EntityProperties
		return ret
	}).(EntityPropertiesOutput)
}

// Alert configuration for this entity
func (o EntityPropertiesPtrOutput) Alerts() EntityAlertsPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *EntityAlerts {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(EntityAlertsPtrOutput)
}

// Positioning of the entity on the model canvas
func (o EntityPropertiesPtrOutput) CanvasPosition() EntityCoordinatesPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *EntityCoordinates {
		if v == nil {
			return nil
		}
		return v.CanvasPosition
	}).(EntityCoordinatesPtrOutput)
}

// Display name
func (o EntityPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Health objective as a percentage of time the entity should be healthy.
func (o EntityPropertiesPtrOutput) HealthObjective() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EntityProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.HealthObjective
	}).(pulumi.Float64PtrOutput)
}

// Visual icon definition. If not set, a default icon is used.
func (o EntityPropertiesPtrOutput) Icon() IconDefinitionPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *IconDefinition {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(IconDefinitionPtrOutput)
}

// Impact of the entity in health state propagation
func (o EntityPropertiesPtrOutput) Impact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Impact
	}).(pulumi.StringPtrOutput)
}

// Entity kind
func (o EntityPropertiesPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Optional set of labels (key-value pairs)
func (o EntityPropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EntityProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Signal groups which are assigned to this entity
func (o EntityPropertiesPtrOutput) Signals() SignalGroupPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *SignalGroup {
		if v == nil {
			return nil
		}
		return v.Signals
	}).(SignalGroupPtrOutput)
}

// Properties which are common across all kinds of entities
type EntityPropertiesResponse struct {
	// Alert configuration for this entity
	Alerts *EntityAlertsResponse `pulumi:"alerts"`
	// Positioning of the entity on the model canvas
	CanvasPosition *EntityCoordinatesResponse `pulumi:"canvasPosition"`
	// Date when the entity was (soft-)deleted
	DeletionDate string `pulumi:"deletionDate"`
	// Discovered by which discovery rule. If set, the entity cannot be deleted manually.
	DiscoveredBy string `pulumi:"discoveredBy"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Health objective as a percentage of time the entity should be healthy.
	HealthObjective *float64 `pulumi:"healthObjective"`
	// Health state of this entity
	HealthState string `pulumi:"healthState"`
	// Visual icon definition. If not set, a default icon is used.
	Icon *IconDefinitionResponse `pulumi:"icon"`
	// Impact of the entity in health state propagation
	Impact *string `pulumi:"impact"`
	// Entity kind
	Kind *string `pulumi:"kind"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Signal groups which are assigned to this entity
	Signals *SignalGroupResponse `pulumi:"signals"`
}

// Defaults sets the appropriate defaults for EntityPropertiesResponse
func (val *EntityPropertiesResponse) Defaults() *EntityPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Impact == nil {
		impact_ := "Standard"
		tmp.Impact = &impact_
	}
	if tmp.Kind == nil {
		kind_ := "Default"
		tmp.Kind = &kind_
	}
	tmp.Signals = tmp.Signals.Defaults()

	return &tmp
}

// Properties which are common across all kinds of entities
type EntityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EntityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityPropertiesResponse)(nil)).Elem()
}

func (o EntityPropertiesResponseOutput) ToEntityPropertiesResponseOutput() EntityPropertiesResponseOutput {
	return o
}

func (o EntityPropertiesResponseOutput) ToEntityPropertiesResponseOutputWithContext(ctx context.Context) EntityPropertiesResponseOutput {
	return o
}

// Alert configuration for this entity
func (o EntityPropertiesResponseOutput) Alerts() EntityAlertsResponsePtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *EntityAlertsResponse { return v.Alerts }).(EntityAlertsResponsePtrOutput)
}

// Positioning of the entity on the model canvas
func (o EntityPropertiesResponseOutput) CanvasPosition() EntityCoordinatesResponsePtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *EntityCoordinatesResponse { return v.CanvasPosition }).(EntityCoordinatesResponsePtrOutput)
}

// Date when the entity was (soft-)deleted
func (o EntityPropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

// Discovered by which discovery rule. If set, the entity cannot be deleted manually.
func (o EntityPropertiesResponseOutput) DiscoveredBy() pulumi.StringOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) string { return v.DiscoveredBy }).(pulumi.StringOutput)
}

// Display name
func (o EntityPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Health objective as a percentage of time the entity should be healthy.
func (o EntityPropertiesResponseOutput) HealthObjective() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *float64 { return v.HealthObjective }).(pulumi.Float64PtrOutput)
}

// Health state of this entity
func (o EntityPropertiesResponseOutput) HealthState() pulumi.StringOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) string { return v.HealthState }).(pulumi.StringOutput)
}

// Visual icon definition. If not set, a default icon is used.
func (o EntityPropertiesResponseOutput) Icon() IconDefinitionResponsePtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *IconDefinitionResponse { return v.Icon }).(IconDefinitionResponsePtrOutput)
}

// Impact of the entity in health state propagation
func (o EntityPropertiesResponseOutput) Impact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *string { return v.Impact }).(pulumi.StringPtrOutput)
}

// Entity kind
func (o EntityPropertiesResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Optional set of labels (key-value pairs)
func (o EntityPropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o EntityPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Signal groups which are assigned to this entity
func (o EntityPropertiesResponseOutput) Signals() SignalGroupResponsePtrOutput {
	return o.ApplyT(func(v EntityPropertiesResponse) *SignalGroupResponse { return v.Signals }).(SignalGroupResponsePtrOutput)
}

// Evaluation rule for a signal definition
type EvaluationRule struct {
	// Degraded rule with static threshold. When used, dynamicDetectionRule must not be set.
	DegradedRule *ThresholdRule `pulumi:"degradedRule"`
	// Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set.
	DynamicDetectionRule *DynamicDetectionRule `pulumi:"dynamicDetectionRule"`
	// Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set.
	UnhealthyRule *ThresholdRule `pulumi:"unhealthyRule"`
}

// EvaluationRuleInput is an input type that accepts EvaluationRuleArgs and EvaluationRuleOutput values.
// You can construct a concrete instance of `EvaluationRuleInput` via:
//
//	EvaluationRuleArgs{...}
type EvaluationRuleInput interface {
	pulumi.Input

	ToEvaluationRuleOutput() EvaluationRuleOutput
	ToEvaluationRuleOutputWithContext(context.Context) EvaluationRuleOutput
}

// Evaluation rule for a signal definition
type EvaluationRuleArgs struct {
	// Degraded rule with static threshold. When used, dynamicDetectionRule must not be set.
	DegradedRule ThresholdRulePtrInput `pulumi:"degradedRule"`
	// Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set.
	DynamicDetectionRule DynamicDetectionRulePtrInput `pulumi:"dynamicDetectionRule"`
	// Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set.
	UnhealthyRule ThresholdRulePtrInput `pulumi:"unhealthyRule"`
}

func (EvaluationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationRule)(nil)).Elem()
}

func (i EvaluationRuleArgs) ToEvaluationRuleOutput() EvaluationRuleOutput {
	return i.ToEvaluationRuleOutputWithContext(context.Background())
}

func (i EvaluationRuleArgs) ToEvaluationRuleOutputWithContext(ctx context.Context) EvaluationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationRuleOutput)
}

func (i EvaluationRuleArgs) ToEvaluationRulePtrOutput() EvaluationRulePtrOutput {
	return i.ToEvaluationRulePtrOutputWithContext(context.Background())
}

func (i EvaluationRuleArgs) ToEvaluationRulePtrOutputWithContext(ctx context.Context) EvaluationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationRuleOutput).ToEvaluationRulePtrOutputWithContext(ctx)
}

// EvaluationRulePtrInput is an input type that accepts EvaluationRuleArgs, EvaluationRulePtr and EvaluationRulePtrOutput values.
// You can construct a concrete instance of `EvaluationRulePtrInput` via:
//
//	        EvaluationRuleArgs{...}
//
//	or:
//
//	        nil
type EvaluationRulePtrInput interface {
	pulumi.Input

	ToEvaluationRulePtrOutput() EvaluationRulePtrOutput
	ToEvaluationRulePtrOutputWithContext(context.Context) EvaluationRulePtrOutput
}

type evaluationRulePtrType EvaluationRuleArgs

func EvaluationRulePtr(v *EvaluationRuleArgs) EvaluationRulePtrInput {
	return (*evaluationRulePtrType)(v)
}

func (*evaluationRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationRule)(nil)).Elem()
}

func (i *evaluationRulePtrType) ToEvaluationRulePtrOutput() EvaluationRulePtrOutput {
	return i.ToEvaluationRulePtrOutputWithContext(context.Background())
}

func (i *evaluationRulePtrType) ToEvaluationRulePtrOutputWithContext(ctx context.Context) EvaluationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationRulePtrOutput)
}

// Evaluation rule for a signal definition
type EvaluationRuleOutput struct{ *pulumi.OutputState }

func (EvaluationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationRule)(nil)).Elem()
}

func (o EvaluationRuleOutput) ToEvaluationRuleOutput() EvaluationRuleOutput {
	return o
}

func (o EvaluationRuleOutput) ToEvaluationRuleOutputWithContext(ctx context.Context) EvaluationRuleOutput {
	return o
}

func (o EvaluationRuleOutput) ToEvaluationRulePtrOutput() EvaluationRulePtrOutput {
	return o.ToEvaluationRulePtrOutputWithContext(context.Background())
}

func (o EvaluationRuleOutput) ToEvaluationRulePtrOutputWithContext(ctx context.Context) EvaluationRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationRule) *EvaluationRule {
		return &v
	}).(EvaluationRulePtrOutput)
}

// Degraded rule with static threshold. When used, dynamicDetectionRule must not be set.
func (o EvaluationRuleOutput) DegradedRule() ThresholdRulePtrOutput {
	return o.ApplyT(func(v EvaluationRule) *ThresholdRule { return v.DegradedRule }).(ThresholdRulePtrOutput)
}

// Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set.
func (o EvaluationRuleOutput) DynamicDetectionRule() DynamicDetectionRulePtrOutput {
	return o.ApplyT(func(v EvaluationRule) *DynamicDetectionRule { return v.DynamicDetectionRule }).(DynamicDetectionRulePtrOutput)
}

// Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set.
func (o EvaluationRuleOutput) UnhealthyRule() ThresholdRulePtrOutput {
	return o.ApplyT(func(v EvaluationRule) *ThresholdRule { return v.UnhealthyRule }).(ThresholdRulePtrOutput)
}

type EvaluationRulePtrOutput struct{ *pulumi.OutputState }

func (EvaluationRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationRule)(nil)).Elem()
}

func (o EvaluationRulePtrOutput) ToEvaluationRulePtrOutput() EvaluationRulePtrOutput {
	return o
}

func (o EvaluationRulePtrOutput) ToEvaluationRulePtrOutputWithContext(ctx context.Context) EvaluationRulePtrOutput {
	return o
}

func (o EvaluationRulePtrOutput) Elem() EvaluationRuleOutput {
	return o.ApplyT(func(v *EvaluationRule) EvaluationRule {
		if v != nil {
			return *v
		}
		var ret EvaluationRule
		return ret
	}).(EvaluationRuleOutput)
}

// Degraded rule with static threshold. When used, dynamicDetectionRule must not be set.
func (o EvaluationRulePtrOutput) DegradedRule() ThresholdRulePtrOutput {
	return o.ApplyT(func(v *EvaluationRule) *ThresholdRule {
		if v == nil {
			return nil
		}
		return v.DegradedRule
	}).(ThresholdRulePtrOutput)
}

// Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set.
func (o EvaluationRulePtrOutput) DynamicDetectionRule() DynamicDetectionRulePtrOutput {
	return o.ApplyT(func(v *EvaluationRule) *DynamicDetectionRule {
		if v == nil {
			return nil
		}
		return v.DynamicDetectionRule
	}).(DynamicDetectionRulePtrOutput)
}

// Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set.
func (o EvaluationRulePtrOutput) UnhealthyRule() ThresholdRulePtrOutput {
	return o.ApplyT(func(v *EvaluationRule) *ThresholdRule {
		if v == nil {
			return nil
		}
		return v.UnhealthyRule
	}).(ThresholdRulePtrOutput)
}

// Evaluation rule for a signal definition
type EvaluationRuleResponse struct {
	// Degraded rule with static threshold. When used, dynamicDetectionRule must not be set.
	DegradedRule *ThresholdRuleResponse `pulumi:"degradedRule"`
	// Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set.
	DynamicDetectionRule *DynamicDetectionRuleResponse `pulumi:"dynamicDetectionRule"`
	// Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set.
	UnhealthyRule *ThresholdRuleResponse `pulumi:"unhealthyRule"`
}

// Evaluation rule for a signal definition
type EvaluationRuleResponseOutput struct{ *pulumi.OutputState }

func (EvaluationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationRuleResponse)(nil)).Elem()
}

func (o EvaluationRuleResponseOutput) ToEvaluationRuleResponseOutput() EvaluationRuleResponseOutput {
	return o
}

func (o EvaluationRuleResponseOutput) ToEvaluationRuleResponseOutputWithContext(ctx context.Context) EvaluationRuleResponseOutput {
	return o
}

// Degraded rule with static threshold. When used, dynamicDetectionRule must not be set.
func (o EvaluationRuleResponseOutput) DegradedRule() ThresholdRuleResponsePtrOutput {
	return o.ApplyT(func(v EvaluationRuleResponse) *ThresholdRuleResponse { return v.DegradedRule }).(ThresholdRuleResponsePtrOutput)
}

// Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set.
func (o EvaluationRuleResponseOutput) DynamicDetectionRule() DynamicDetectionRuleResponsePtrOutput {
	return o.ApplyT(func(v EvaluationRuleResponse) *DynamicDetectionRuleResponse { return v.DynamicDetectionRule }).(DynamicDetectionRuleResponsePtrOutput)
}

// Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set.
func (o EvaluationRuleResponseOutput) UnhealthyRule() ThresholdRuleResponsePtrOutput {
	return o.ApplyT(func(v EvaluationRuleResponse) *ThresholdRuleResponse { return v.UnhealthyRule }).(ThresholdRuleResponsePtrOutput)
}

// HealthModel properties
type HealthModelProperties struct {
	// Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model.
	Discovery *ModelDiscoverySettings `pulumi:"discovery"`
}

// HealthModelPropertiesInput is an input type that accepts HealthModelPropertiesArgs and HealthModelPropertiesOutput values.
// You can construct a concrete instance of `HealthModelPropertiesInput` via:
//
//	HealthModelPropertiesArgs{...}
type HealthModelPropertiesInput interface {
	pulumi.Input

	ToHealthModelPropertiesOutput() HealthModelPropertiesOutput
	ToHealthModelPropertiesOutputWithContext(context.Context) HealthModelPropertiesOutput
}

// HealthModel properties
type HealthModelPropertiesArgs struct {
	// Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model.
	Discovery ModelDiscoverySettingsPtrInput `pulumi:"discovery"`
}

func (HealthModelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthModelProperties)(nil)).Elem()
}

func (i HealthModelPropertiesArgs) ToHealthModelPropertiesOutput() HealthModelPropertiesOutput {
	return i.ToHealthModelPropertiesOutputWithContext(context.Background())
}

func (i HealthModelPropertiesArgs) ToHealthModelPropertiesOutputWithContext(ctx context.Context) HealthModelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthModelPropertiesOutput)
}

func (i HealthModelPropertiesArgs) ToHealthModelPropertiesPtrOutput() HealthModelPropertiesPtrOutput {
	return i.ToHealthModelPropertiesPtrOutputWithContext(context.Background())
}

func (i HealthModelPropertiesArgs) ToHealthModelPropertiesPtrOutputWithContext(ctx context.Context) HealthModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthModelPropertiesOutput).ToHealthModelPropertiesPtrOutputWithContext(ctx)
}

// HealthModelPropertiesPtrInput is an input type that accepts HealthModelPropertiesArgs, HealthModelPropertiesPtr and HealthModelPropertiesPtrOutput values.
// You can construct a concrete instance of `HealthModelPropertiesPtrInput` via:
//
//	        HealthModelPropertiesArgs{...}
//
//	or:
//
//	        nil
type HealthModelPropertiesPtrInput interface {
	pulumi.Input

	ToHealthModelPropertiesPtrOutput() HealthModelPropertiesPtrOutput
	ToHealthModelPropertiesPtrOutputWithContext(context.Context) HealthModelPropertiesPtrOutput
}

type healthModelPropertiesPtrType HealthModelPropertiesArgs

func HealthModelPropertiesPtr(v *HealthModelPropertiesArgs) HealthModelPropertiesPtrInput {
	return (*healthModelPropertiesPtrType)(v)
}

func (*healthModelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthModelProperties)(nil)).Elem()
}

func (i *healthModelPropertiesPtrType) ToHealthModelPropertiesPtrOutput() HealthModelPropertiesPtrOutput {
	return i.ToHealthModelPropertiesPtrOutputWithContext(context.Background())
}

func (i *healthModelPropertiesPtrType) ToHealthModelPropertiesPtrOutputWithContext(ctx context.Context) HealthModelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthModelPropertiesPtrOutput)
}

// HealthModel properties
type HealthModelPropertiesOutput struct{ *pulumi.OutputState }

func (HealthModelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthModelProperties)(nil)).Elem()
}

func (o HealthModelPropertiesOutput) ToHealthModelPropertiesOutput() HealthModelPropertiesOutput {
	return o
}

func (o HealthModelPropertiesOutput) ToHealthModelPropertiesOutputWithContext(ctx context.Context) HealthModelPropertiesOutput {
	return o
}

func (o HealthModelPropertiesOutput) ToHealthModelPropertiesPtrOutput() HealthModelPropertiesPtrOutput {
	return o.ToHealthModelPropertiesPtrOutputWithContext(context.Background())
}

func (o HealthModelPropertiesOutput) ToHealthModelPropertiesPtrOutputWithContext(ctx context.Context) HealthModelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthModelProperties) *HealthModelProperties {
		return &v
	}).(HealthModelPropertiesPtrOutput)
}

// Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model.
func (o HealthModelPropertiesOutput) Discovery() ModelDiscoverySettingsPtrOutput {
	return o.ApplyT(func(v HealthModelProperties) *ModelDiscoverySettings { return v.Discovery }).(ModelDiscoverySettingsPtrOutput)
}

type HealthModelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HealthModelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthModelProperties)(nil)).Elem()
}

func (o HealthModelPropertiesPtrOutput) ToHealthModelPropertiesPtrOutput() HealthModelPropertiesPtrOutput {
	return o
}

func (o HealthModelPropertiesPtrOutput) ToHealthModelPropertiesPtrOutputWithContext(ctx context.Context) HealthModelPropertiesPtrOutput {
	return o
}

func (o HealthModelPropertiesPtrOutput) Elem() HealthModelPropertiesOutput {
	return o.ApplyT(func(v *HealthModelProperties) HealthModelProperties {
		if v != nil {
			return *v
		}
		var ret HealthModelProperties
		return ret
	}).(HealthModelPropertiesOutput)
}

// Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model.
func (o HealthModelPropertiesPtrOutput) Discovery() ModelDiscoverySettingsPtrOutput {
	return o.ApplyT(func(v *HealthModelProperties) *ModelDiscoverySettings {
		if v == nil {
			return nil
		}
		return v.Discovery
	}).(ModelDiscoverySettingsPtrOutput)
}

// HealthModel properties
type HealthModelPropertiesResponse struct {
	// The data plane endpoint for interacting with health data
	DataplaneEndpoint string `pulumi:"dataplaneEndpoint"`
	// Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model.
	Discovery *ModelDiscoverySettingsResponse `pulumi:"discovery"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// HealthModel properties
type HealthModelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HealthModelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthModelPropertiesResponse)(nil)).Elem()
}

func (o HealthModelPropertiesResponseOutput) ToHealthModelPropertiesResponseOutput() HealthModelPropertiesResponseOutput {
	return o
}

func (o HealthModelPropertiesResponseOutput) ToHealthModelPropertiesResponseOutputWithContext(ctx context.Context) HealthModelPropertiesResponseOutput {
	return o
}

// The data plane endpoint for interacting with health data
func (o HealthModelPropertiesResponseOutput) DataplaneEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v HealthModelPropertiesResponse) string { return v.DataplaneEndpoint }).(pulumi.StringOutput)
}

// Configure to automatically discover entities from a given scope, such as a Service Group. The discovered entities will be linked to the root entity of the health model.
func (o HealthModelPropertiesResponseOutput) Discovery() ModelDiscoverySettingsResponsePtrOutput {
	return o.ApplyT(func(v HealthModelPropertiesResponse) *ModelDiscoverySettingsResponse { return v.Discovery }).(ModelDiscoverySettingsResponsePtrOutput)
}

// The status of the last operation.
func (o HealthModelPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HealthModelPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Visual icon definition of an entity
type IconDefinition struct {
	// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
	CustomData *string `pulumi:"customData"`
	// Name of the built-in icon, or 'Custom' to use customData
	IconName string `pulumi:"iconName"`
}

// IconDefinitionInput is an input type that accepts IconDefinitionArgs and IconDefinitionOutput values.
// You can construct a concrete instance of `IconDefinitionInput` via:
//
//	IconDefinitionArgs{...}
type IconDefinitionInput interface {
	pulumi.Input

	ToIconDefinitionOutput() IconDefinitionOutput
	ToIconDefinitionOutputWithContext(context.Context) IconDefinitionOutput
}

// Visual icon definition of an entity
type IconDefinitionArgs struct {
	// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// Name of the built-in icon, or 'Custom' to use customData
	IconName pulumi.StringInput `pulumi:"iconName"`
}

func (IconDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IconDefinition)(nil)).Elem()
}

func (i IconDefinitionArgs) ToIconDefinitionOutput() IconDefinitionOutput {
	return i.ToIconDefinitionOutputWithContext(context.Background())
}

func (i IconDefinitionArgs) ToIconDefinitionOutputWithContext(ctx context.Context) IconDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconDefinitionOutput)
}

func (i IconDefinitionArgs) ToIconDefinitionPtrOutput() IconDefinitionPtrOutput {
	return i.ToIconDefinitionPtrOutputWithContext(context.Background())
}

func (i IconDefinitionArgs) ToIconDefinitionPtrOutputWithContext(ctx context.Context) IconDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconDefinitionOutput).ToIconDefinitionPtrOutputWithContext(ctx)
}

// IconDefinitionPtrInput is an input type that accepts IconDefinitionArgs, IconDefinitionPtr and IconDefinitionPtrOutput values.
// You can construct a concrete instance of `IconDefinitionPtrInput` via:
//
//	        IconDefinitionArgs{...}
//
//	or:
//
//	        nil
type IconDefinitionPtrInput interface {
	pulumi.Input

	ToIconDefinitionPtrOutput() IconDefinitionPtrOutput
	ToIconDefinitionPtrOutputWithContext(context.Context) IconDefinitionPtrOutput
}

type iconDefinitionPtrType IconDefinitionArgs

func IconDefinitionPtr(v *IconDefinitionArgs) IconDefinitionPtrInput {
	return (*iconDefinitionPtrType)(v)
}

func (*iconDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IconDefinition)(nil)).Elem()
}

func (i *iconDefinitionPtrType) ToIconDefinitionPtrOutput() IconDefinitionPtrOutput {
	return i.ToIconDefinitionPtrOutputWithContext(context.Background())
}

func (i *iconDefinitionPtrType) ToIconDefinitionPtrOutputWithContext(ctx context.Context) IconDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconDefinitionPtrOutput)
}

// Visual icon definition of an entity
type IconDefinitionOutput struct{ *pulumi.OutputState }

func (IconDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IconDefinition)(nil)).Elem()
}

func (o IconDefinitionOutput) ToIconDefinitionOutput() IconDefinitionOutput {
	return o
}

func (o IconDefinitionOutput) ToIconDefinitionOutputWithContext(ctx context.Context) IconDefinitionOutput {
	return o
}

func (o IconDefinitionOutput) ToIconDefinitionPtrOutput() IconDefinitionPtrOutput {
	return o.ToIconDefinitionPtrOutputWithContext(context.Background())
}

func (o IconDefinitionOutput) ToIconDefinitionPtrOutputWithContext(ctx context.Context) IconDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IconDefinition) *IconDefinition {
		return &v
	}).(IconDefinitionPtrOutput)
}

// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
func (o IconDefinitionOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconDefinition) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Name of the built-in icon, or 'Custom' to use customData
func (o IconDefinitionOutput) IconName() pulumi.StringOutput {
	return o.ApplyT(func(v IconDefinition) string { return v.IconName }).(pulumi.StringOutput)
}

type IconDefinitionPtrOutput struct{ *pulumi.OutputState }

func (IconDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IconDefinition)(nil)).Elem()
}

func (o IconDefinitionPtrOutput) ToIconDefinitionPtrOutput() IconDefinitionPtrOutput {
	return o
}

func (o IconDefinitionPtrOutput) ToIconDefinitionPtrOutputWithContext(ctx context.Context) IconDefinitionPtrOutput {
	return o
}

func (o IconDefinitionPtrOutput) Elem() IconDefinitionOutput {
	return o.ApplyT(func(v *IconDefinition) IconDefinition {
		if v != nil {
			return *v
		}
		var ret IconDefinition
		return ret
	}).(IconDefinitionOutput)
}

// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
func (o IconDefinitionPtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// Name of the built-in icon, or 'Custom' to use customData
func (o IconDefinitionPtrOutput) IconName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.IconName
	}).(pulumi.StringPtrOutput)
}

// Visual icon definition of an entity
type IconDefinitionResponse struct {
	// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
	CustomData *string `pulumi:"customData"`
	// Name of the built-in icon, or 'Custom' to use customData
	IconName string `pulumi:"iconName"`
}

// Visual icon definition of an entity
type IconDefinitionResponseOutput struct{ *pulumi.OutputState }

func (IconDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IconDefinitionResponse)(nil)).Elem()
}

func (o IconDefinitionResponseOutput) ToIconDefinitionResponseOutput() IconDefinitionResponseOutput {
	return o
}

func (o IconDefinitionResponseOutput) ToIconDefinitionResponseOutputWithContext(ctx context.Context) IconDefinitionResponseOutput {
	return o
}

// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
func (o IconDefinitionResponseOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconDefinitionResponse) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Name of the built-in icon, or 'Custom' to use customData
func (o IconDefinitionResponseOutput) IconName() pulumi.StringOutput {
	return o.ApplyT(func(v IconDefinitionResponse) string { return v.IconName }).(pulumi.StringOutput)
}

type IconDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (IconDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IconDefinitionResponse)(nil)).Elem()
}

func (o IconDefinitionResponsePtrOutput) ToIconDefinitionResponsePtrOutput() IconDefinitionResponsePtrOutput {
	return o
}

func (o IconDefinitionResponsePtrOutput) ToIconDefinitionResponsePtrOutputWithContext(ctx context.Context) IconDefinitionResponsePtrOutput {
	return o
}

func (o IconDefinitionResponsePtrOutput) Elem() IconDefinitionResponseOutput {
	return o.ApplyT(func(v *IconDefinitionResponse) IconDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret IconDefinitionResponse
		return ret
	}).(IconDefinitionResponseOutput)
}

// Custom data. Base64-encoded SVG data. If set, this overrides the built-in icon.
func (o IconDefinitionResponsePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// Name of the built-in icon, or 'Custom' to use customData
func (o IconDefinitionResponsePtrOutput) IconName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IconDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IconName
	}).(pulumi.StringPtrOutput)
}

// Log Analytics Query Signal Definition properties
type LogAnalyticsQuerySignalDefinitionProperties struct {
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit *string `pulumi:"dataUnit"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRule `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Query text in KQL syntax
	QueryText string `pulumi:"queryText"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval *string `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'LogAnalyticsQuery'.
	SignalKind string `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.
	TimeGrain *string `pulumi:"timeGrain"`
	// Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.
	ValueColumnName *string `pulumi:"valueColumnName"`
}

// Defaults sets the appropriate defaults for LogAnalyticsQuerySignalDefinitionProperties
func (val *LogAnalyticsQuerySignalDefinitionProperties) Defaults() *LogAnalyticsQuerySignalDefinitionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "PT1M"
		tmp.RefreshInterval = &refreshInterval_
	}
	return &tmp
}

// LogAnalyticsQuerySignalDefinitionPropertiesInput is an input type that accepts LogAnalyticsQuerySignalDefinitionPropertiesArgs and LogAnalyticsQuerySignalDefinitionPropertiesOutput values.
// You can construct a concrete instance of `LogAnalyticsQuerySignalDefinitionPropertiesInput` via:
//
//	LogAnalyticsQuerySignalDefinitionPropertiesArgs{...}
type LogAnalyticsQuerySignalDefinitionPropertiesInput interface {
	pulumi.Input

	ToLogAnalyticsQuerySignalDefinitionPropertiesOutput() LogAnalyticsQuerySignalDefinitionPropertiesOutput
	ToLogAnalyticsQuerySignalDefinitionPropertiesOutputWithContext(context.Context) LogAnalyticsQuerySignalDefinitionPropertiesOutput
}

// Log Analytics Query Signal Definition properties
type LogAnalyticsQuerySignalDefinitionPropertiesArgs struct {
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit pulumi.StringPtrInput `pulumi:"dataUnit"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRuleInput `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Query text in KQL syntax
	QueryText pulumi.StringInput `pulumi:"queryText"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval pulumi.StringPtrInput `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'LogAnalyticsQuery'.
	SignalKind pulumi.StringInput `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.
	TimeGrain pulumi.StringPtrInput `pulumi:"timeGrain"`
	// Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.
	ValueColumnName pulumi.StringPtrInput `pulumi:"valueColumnName"`
}

// Defaults sets the appropriate defaults for LogAnalyticsQuerySignalDefinitionPropertiesArgs
func (val *LogAnalyticsQuerySignalDefinitionPropertiesArgs) Defaults() *LogAnalyticsQuerySignalDefinitionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		tmp.RefreshInterval = pulumi.StringPtr("PT1M")
	}
	return &tmp
}
func (LogAnalyticsQuerySignalDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsQuerySignalDefinitionProperties)(nil)).Elem()
}

func (i LogAnalyticsQuerySignalDefinitionPropertiesArgs) ToLogAnalyticsQuerySignalDefinitionPropertiesOutput() LogAnalyticsQuerySignalDefinitionPropertiesOutput {
	return i.ToLogAnalyticsQuerySignalDefinitionPropertiesOutputWithContext(context.Background())
}

func (i LogAnalyticsQuerySignalDefinitionPropertiesArgs) ToLogAnalyticsQuerySignalDefinitionPropertiesOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsQuerySignalDefinitionPropertiesOutput)
}

func (i LogAnalyticsQuerySignalDefinitionPropertiesArgs) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutput() LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return i.ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i LogAnalyticsQuerySignalDefinitionPropertiesArgs) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsQuerySignalDefinitionPropertiesOutput).ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(ctx)
}

// LogAnalyticsQuerySignalDefinitionPropertiesPtrInput is an input type that accepts LogAnalyticsQuerySignalDefinitionPropertiesArgs, LogAnalyticsQuerySignalDefinitionPropertiesPtr and LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `LogAnalyticsQuerySignalDefinitionPropertiesPtrInput` via:
//
//	        LogAnalyticsQuerySignalDefinitionPropertiesArgs{...}
//
//	or:
//
//	        nil
type LogAnalyticsQuerySignalDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutput() LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput
	ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(context.Context) LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput
}

type logAnalyticsQuerySignalDefinitionPropertiesPtrType LogAnalyticsQuerySignalDefinitionPropertiesArgs

func LogAnalyticsQuerySignalDefinitionPropertiesPtr(v *LogAnalyticsQuerySignalDefinitionPropertiesArgs) LogAnalyticsQuerySignalDefinitionPropertiesPtrInput {
	return (*logAnalyticsQuerySignalDefinitionPropertiesPtrType)(v)
}

func (*logAnalyticsQuerySignalDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsQuerySignalDefinitionProperties)(nil)).Elem()
}

func (i *logAnalyticsQuerySignalDefinitionPropertiesPtrType) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutput() LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return i.ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *logAnalyticsQuerySignalDefinitionPropertiesPtrType) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput)
}

// Log Analytics Query Signal Definition properties
type LogAnalyticsQuerySignalDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (LogAnalyticsQuerySignalDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsQuerySignalDefinitionProperties)(nil)).Elem()
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesOutput() LogAnalyticsQuerySignalDefinitionPropertiesOutput {
	return o
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesOutput {
	return o
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutput() LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return o.ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogAnalyticsQuerySignalDefinitionProperties) *LogAnalyticsQuerySignalDefinitionProperties {
		return &v
	}).(LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) *string { return v.DataUnit }).(pulumi.StringPtrOutput)
}

// Display name
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) EvaluationRules() EvaluationRuleOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) EvaluationRule { return v.EvaluationRules }).(EvaluationRuleOutput)
}

// Optional set of labels (key-value pairs)
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Query text in KQL syntax
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) QueryText() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) string { return v.QueryText }).(pulumi.StringOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'LogAnalyticsQuery'.
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) SignalKind() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) string { return v.SignalKind }).(pulumi.StringOutput)
}

// Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) *string { return v.TimeGrain }).(pulumi.StringPtrOutput)
}

// Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.
func (o LogAnalyticsQuerySignalDefinitionPropertiesOutput) ValueColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionProperties) *string { return v.ValueColumnName }).(pulumi.StringPtrOutput)
}

type LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsQuerySignalDefinitionProperties)(nil)).Elem()
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutput() LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return o
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput {
	return o
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) Elem() LogAnalyticsQuerySignalDefinitionPropertiesOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) LogAnalyticsQuerySignalDefinitionProperties {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsQuerySignalDefinitionProperties
		return ret
	}).(LogAnalyticsQuerySignalDefinitionPropertiesOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataUnit
	}).(pulumi.StringPtrOutput)
}

// Display name
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) EvaluationRules() EvaluationRulePtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *EvaluationRule {
		if v == nil {
			return nil
		}
		return &v.EvaluationRules
	}).(EvaluationRulePtrOutput)
}

// Optional set of labels (key-value pairs)
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Query text in KQL syntax
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) QueryText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.QueryText
	}).(pulumi.StringPtrOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'LogAnalyticsQuery'.
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) SignalKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SignalKind
	}).(pulumi.StringPtrOutput)
}

// Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeGrain
	}).(pulumi.StringPtrOutput)
}

// Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.
func (o LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput) ValueColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsQuerySignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ValueColumnName
	}).(pulumi.StringPtrOutput)
}

// Log Analytics Query Signal Definition properties
type LogAnalyticsQuerySignalDefinitionPropertiesResponse struct {
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit *string `pulumi:"dataUnit"`
	// Date when the signal definition was (soft-)deleted
	DeletionDate string `pulumi:"deletionDate"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRuleResponse `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Query text in KQL syntax
	QueryText string `pulumi:"queryText"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval *string `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'LogAnalyticsQuery'.
	SignalKind string `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.
	TimeGrain *string `pulumi:"timeGrain"`
	// Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.
	ValueColumnName *string `pulumi:"valueColumnName"`
}

// Defaults sets the appropriate defaults for LogAnalyticsQuerySignalDefinitionPropertiesResponse
func (val *LogAnalyticsQuerySignalDefinitionPropertiesResponse) Defaults() *LogAnalyticsQuerySignalDefinitionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "PT1M"
		tmp.RefreshInterval = &refreshInterval_
	}
	return &tmp
}

// Log Analytics Query Signal Definition properties
type LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsQuerySignalDefinitionPropertiesResponse)(nil)).Elem()
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesResponseOutput() LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput {
	return o
}

func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) ToLogAnalyticsQuerySignalDefinitionPropertiesResponseOutputWithContext(ctx context.Context) LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput {
	return o
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) *string { return v.DataUnit }).(pulumi.StringPtrOutput)
}

// Date when the signal definition was (soft-)deleted
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

// Display name
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) EvaluationRules() EvaluationRuleResponseOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) EvaluationRuleResponse {
		return v.EvaluationRules
	}).(EvaluationRuleResponseOutput)
}

// Optional set of labels (key-value pairs)
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Query text in KQL syntax
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) QueryText() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) string { return v.QueryText }).(pulumi.StringOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'LogAnalyticsQuery'.
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) SignalKind() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) string { return v.SignalKind }).(pulumi.StringOutput)
}

// Time range of signal. ISO duration format like PT10M. If not specified, the KQL query must define a time range.
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) *string { return v.TimeGrain }).(pulumi.StringPtrOutput)
}

// Name of the column in the result set to evaluate against the thresholds. Defaults to the first column in the result set if not specified. The column must be numeric.
func (o LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput) ValueColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsQuerySignalDefinitionPropertiesResponse) *string { return v.ValueColumnName }).(pulumi.StringPtrOutput)
}

// A grouping of signal assignments for a Log Analytics Workspace
type LogAnalyticsSignalGroup struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Log Analytics Workspace resource ID
	LogAnalyticsWorkspaceResourceId string `pulumi:"logAnalyticsWorkspaceResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments []SignalAssignment `pulumi:"signalAssignments"`
}

// LogAnalyticsSignalGroupInput is an input type that accepts LogAnalyticsSignalGroupArgs and LogAnalyticsSignalGroupOutput values.
// You can construct a concrete instance of `LogAnalyticsSignalGroupInput` via:
//
//	LogAnalyticsSignalGroupArgs{...}
type LogAnalyticsSignalGroupInput interface {
	pulumi.Input

	ToLogAnalyticsSignalGroupOutput() LogAnalyticsSignalGroupOutput
	ToLogAnalyticsSignalGroupOutputWithContext(context.Context) LogAnalyticsSignalGroupOutput
}

// A grouping of signal assignments for a Log Analytics Workspace
type LogAnalyticsSignalGroupArgs struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting pulumi.StringInput `pulumi:"authenticationSetting"`
	// Log Analytics Workspace resource ID
	LogAnalyticsWorkspaceResourceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments SignalAssignmentArrayInput `pulumi:"signalAssignments"`
}

func (LogAnalyticsSignalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsSignalGroup)(nil)).Elem()
}

func (i LogAnalyticsSignalGroupArgs) ToLogAnalyticsSignalGroupOutput() LogAnalyticsSignalGroupOutput {
	return i.ToLogAnalyticsSignalGroupOutputWithContext(context.Background())
}

func (i LogAnalyticsSignalGroupArgs) ToLogAnalyticsSignalGroupOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsSignalGroupOutput)
}

func (i LogAnalyticsSignalGroupArgs) ToLogAnalyticsSignalGroupPtrOutput() LogAnalyticsSignalGroupPtrOutput {
	return i.ToLogAnalyticsSignalGroupPtrOutputWithContext(context.Background())
}

func (i LogAnalyticsSignalGroupArgs) ToLogAnalyticsSignalGroupPtrOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsSignalGroupOutput).ToLogAnalyticsSignalGroupPtrOutputWithContext(ctx)
}

// LogAnalyticsSignalGroupPtrInput is an input type that accepts LogAnalyticsSignalGroupArgs, LogAnalyticsSignalGroupPtr and LogAnalyticsSignalGroupPtrOutput values.
// You can construct a concrete instance of `LogAnalyticsSignalGroupPtrInput` via:
//
//	        LogAnalyticsSignalGroupArgs{...}
//
//	or:
//
//	        nil
type LogAnalyticsSignalGroupPtrInput interface {
	pulumi.Input

	ToLogAnalyticsSignalGroupPtrOutput() LogAnalyticsSignalGroupPtrOutput
	ToLogAnalyticsSignalGroupPtrOutputWithContext(context.Context) LogAnalyticsSignalGroupPtrOutput
}

type logAnalyticsSignalGroupPtrType LogAnalyticsSignalGroupArgs

func LogAnalyticsSignalGroupPtr(v *LogAnalyticsSignalGroupArgs) LogAnalyticsSignalGroupPtrInput {
	return (*logAnalyticsSignalGroupPtrType)(v)
}

func (*logAnalyticsSignalGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsSignalGroup)(nil)).Elem()
}

func (i *logAnalyticsSignalGroupPtrType) ToLogAnalyticsSignalGroupPtrOutput() LogAnalyticsSignalGroupPtrOutput {
	return i.ToLogAnalyticsSignalGroupPtrOutputWithContext(context.Background())
}

func (i *logAnalyticsSignalGroupPtrType) ToLogAnalyticsSignalGroupPtrOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsSignalGroupPtrOutput)
}

// A grouping of signal assignments for a Log Analytics Workspace
type LogAnalyticsSignalGroupOutput struct{ *pulumi.OutputState }

func (LogAnalyticsSignalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsSignalGroup)(nil)).Elem()
}

func (o LogAnalyticsSignalGroupOutput) ToLogAnalyticsSignalGroupOutput() LogAnalyticsSignalGroupOutput {
	return o
}

func (o LogAnalyticsSignalGroupOutput) ToLogAnalyticsSignalGroupOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupOutput {
	return o
}

func (o LogAnalyticsSignalGroupOutput) ToLogAnalyticsSignalGroupPtrOutput() LogAnalyticsSignalGroupPtrOutput {
	return o.ToLogAnalyticsSignalGroupPtrOutputWithContext(context.Background())
}

func (o LogAnalyticsSignalGroupOutput) ToLogAnalyticsSignalGroupPtrOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogAnalyticsSignalGroup) *LogAnalyticsSignalGroup {
		return &v
	}).(LogAnalyticsSignalGroupPtrOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o LogAnalyticsSignalGroupOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsSignalGroup) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Log Analytics Workspace resource ID
func (o LogAnalyticsSignalGroupOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsSignalGroup) string { return v.LogAnalyticsWorkspaceResourceId }).(pulumi.StringOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o LogAnalyticsSignalGroupOutput) SignalAssignments() SignalAssignmentArrayOutput {
	return o.ApplyT(func(v LogAnalyticsSignalGroup) []SignalAssignment { return v.SignalAssignments }).(SignalAssignmentArrayOutput)
}

type LogAnalyticsSignalGroupPtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsSignalGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsSignalGroup)(nil)).Elem()
}

func (o LogAnalyticsSignalGroupPtrOutput) ToLogAnalyticsSignalGroupPtrOutput() LogAnalyticsSignalGroupPtrOutput {
	return o
}

func (o LogAnalyticsSignalGroupPtrOutput) ToLogAnalyticsSignalGroupPtrOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupPtrOutput {
	return o
}

func (o LogAnalyticsSignalGroupPtrOutput) Elem() LogAnalyticsSignalGroupOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroup) LogAnalyticsSignalGroup {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsSignalGroup
		return ret
	}).(LogAnalyticsSignalGroupOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o LogAnalyticsSignalGroupPtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Log Analytics Workspace resource ID
func (o LogAnalyticsSignalGroupPtrOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroup) *string {
		if v == nil {
			return nil
		}
		return &v.LogAnalyticsWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o LogAnalyticsSignalGroupPtrOutput) SignalAssignments() SignalAssignmentArrayOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroup) []SignalAssignment {
		if v == nil {
			return nil
		}
		return v.SignalAssignments
	}).(SignalAssignmentArrayOutput)
}

// A grouping of signal assignments for a Log Analytics Workspace
type LogAnalyticsSignalGroupResponse struct {
	// Reference to the name of the authentication setting which is used for querying the data source
	AuthenticationSetting string `pulumi:"authenticationSetting"`
	// Log Analytics Workspace resource ID
	LogAnalyticsWorkspaceResourceId string `pulumi:"logAnalyticsWorkspaceResourceId"`
	// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
	SignalAssignments []SignalAssignmentResponse `pulumi:"signalAssignments"`
}

// A grouping of signal assignments for a Log Analytics Workspace
type LogAnalyticsSignalGroupResponseOutput struct{ *pulumi.OutputState }

func (LogAnalyticsSignalGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsSignalGroupResponse)(nil)).Elem()
}

func (o LogAnalyticsSignalGroupResponseOutput) ToLogAnalyticsSignalGroupResponseOutput() LogAnalyticsSignalGroupResponseOutput {
	return o
}

func (o LogAnalyticsSignalGroupResponseOutput) ToLogAnalyticsSignalGroupResponseOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupResponseOutput {
	return o
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o LogAnalyticsSignalGroupResponseOutput) AuthenticationSetting() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsSignalGroupResponse) string { return v.AuthenticationSetting }).(pulumi.StringOutput)
}

// Log Analytics Workspace resource ID
func (o LogAnalyticsSignalGroupResponseOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LogAnalyticsSignalGroupResponse) string { return v.LogAnalyticsWorkspaceResourceId }).(pulumi.StringOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o LogAnalyticsSignalGroupResponseOutput) SignalAssignments() SignalAssignmentResponseArrayOutput {
	return o.ApplyT(func(v LogAnalyticsSignalGroupResponse) []SignalAssignmentResponse { return v.SignalAssignments }).(SignalAssignmentResponseArrayOutput)
}

type LogAnalyticsSignalGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsSignalGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsSignalGroupResponse)(nil)).Elem()
}

func (o LogAnalyticsSignalGroupResponsePtrOutput) ToLogAnalyticsSignalGroupResponsePtrOutput() LogAnalyticsSignalGroupResponsePtrOutput {
	return o
}

func (o LogAnalyticsSignalGroupResponsePtrOutput) ToLogAnalyticsSignalGroupResponsePtrOutputWithContext(ctx context.Context) LogAnalyticsSignalGroupResponsePtrOutput {
	return o
}

func (o LogAnalyticsSignalGroupResponsePtrOutput) Elem() LogAnalyticsSignalGroupResponseOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroupResponse) LogAnalyticsSignalGroupResponse {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsSignalGroupResponse
		return ret
	}).(LogAnalyticsSignalGroupResponseOutput)
}

// Reference to the name of the authentication setting which is used for querying the data source
func (o LogAnalyticsSignalGroupResponsePtrOutput) AuthenticationSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationSetting
	}).(pulumi.StringPtrOutput)
}

// Log Analytics Workspace resource ID
func (o LogAnalyticsSignalGroupResponsePtrOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LogAnalyticsWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Signal definitions which are assigned to this signal group. All assignments are combined with an OR operator.
func (o LogAnalyticsSignalGroupResponsePtrOutput) SignalAssignments() SignalAssignmentResponseArrayOutput {
	return o.ApplyT(func(v *LogAnalyticsSignalGroupResponse) []SignalAssignmentResponse {
		if v == nil {
			return nil
		}
		return v.SignalAssignments
	}).(SignalAssignmentResponseArrayOutput)
}

// Authentication setting properties for Azure Managed Identity
type ManagedIdentityAuthenticationSettingProperties struct {
	// Supported kinds of authentication settings as discriminator
	// Expected value is 'ManagedIdentity'.
	AuthenticationKind string `pulumi:"authenticationKind"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.
	ManagedIdentityName string `pulumi:"managedIdentityName"`
}

// ManagedIdentityAuthenticationSettingPropertiesInput is an input type that accepts ManagedIdentityAuthenticationSettingPropertiesArgs and ManagedIdentityAuthenticationSettingPropertiesOutput values.
// You can construct a concrete instance of `ManagedIdentityAuthenticationSettingPropertiesInput` via:
//
//	ManagedIdentityAuthenticationSettingPropertiesArgs{...}
type ManagedIdentityAuthenticationSettingPropertiesInput interface {
	pulumi.Input

	ToManagedIdentityAuthenticationSettingPropertiesOutput() ManagedIdentityAuthenticationSettingPropertiesOutput
	ToManagedIdentityAuthenticationSettingPropertiesOutputWithContext(context.Context) ManagedIdentityAuthenticationSettingPropertiesOutput
}

// Authentication setting properties for Azure Managed Identity
type ManagedIdentityAuthenticationSettingPropertiesArgs struct {
	// Supported kinds of authentication settings as discriminator
	// Expected value is 'ManagedIdentity'.
	AuthenticationKind pulumi.StringInput `pulumi:"authenticationKind"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.
	ManagedIdentityName pulumi.StringInput `pulumi:"managedIdentityName"`
}

func (ManagedIdentityAuthenticationSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityAuthenticationSettingProperties)(nil)).Elem()
}

func (i ManagedIdentityAuthenticationSettingPropertiesArgs) ToManagedIdentityAuthenticationSettingPropertiesOutput() ManagedIdentityAuthenticationSettingPropertiesOutput {
	return i.ToManagedIdentityAuthenticationSettingPropertiesOutputWithContext(context.Background())
}

func (i ManagedIdentityAuthenticationSettingPropertiesArgs) ToManagedIdentityAuthenticationSettingPropertiesOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityAuthenticationSettingPropertiesOutput)
}

func (i ManagedIdentityAuthenticationSettingPropertiesArgs) ToManagedIdentityAuthenticationSettingPropertiesPtrOutput() ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return i.ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedIdentityAuthenticationSettingPropertiesArgs) ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityAuthenticationSettingPropertiesOutput).ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(ctx)
}

// ManagedIdentityAuthenticationSettingPropertiesPtrInput is an input type that accepts ManagedIdentityAuthenticationSettingPropertiesArgs, ManagedIdentityAuthenticationSettingPropertiesPtr and ManagedIdentityAuthenticationSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedIdentityAuthenticationSettingPropertiesPtrInput` via:
//
//	        ManagedIdentityAuthenticationSettingPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityAuthenticationSettingPropertiesPtrInput interface {
	pulumi.Input

	ToManagedIdentityAuthenticationSettingPropertiesPtrOutput() ManagedIdentityAuthenticationSettingPropertiesPtrOutput
	ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(context.Context) ManagedIdentityAuthenticationSettingPropertiesPtrOutput
}

type managedIdentityAuthenticationSettingPropertiesPtrType ManagedIdentityAuthenticationSettingPropertiesArgs

func ManagedIdentityAuthenticationSettingPropertiesPtr(v *ManagedIdentityAuthenticationSettingPropertiesArgs) ManagedIdentityAuthenticationSettingPropertiesPtrInput {
	return (*managedIdentityAuthenticationSettingPropertiesPtrType)(v)
}

func (*managedIdentityAuthenticationSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityAuthenticationSettingProperties)(nil)).Elem()
}

func (i *managedIdentityAuthenticationSettingPropertiesPtrType) ToManagedIdentityAuthenticationSettingPropertiesPtrOutput() ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return i.ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedIdentityAuthenticationSettingPropertiesPtrType) ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityAuthenticationSettingPropertiesPtrOutput)
}

// Authentication setting properties for Azure Managed Identity
type ManagedIdentityAuthenticationSettingPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedIdentityAuthenticationSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityAuthenticationSettingProperties)(nil)).Elem()
}

func (o ManagedIdentityAuthenticationSettingPropertiesOutput) ToManagedIdentityAuthenticationSettingPropertiesOutput() ManagedIdentityAuthenticationSettingPropertiesOutput {
	return o
}

func (o ManagedIdentityAuthenticationSettingPropertiesOutput) ToManagedIdentityAuthenticationSettingPropertiesOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesOutput {
	return o
}

func (o ManagedIdentityAuthenticationSettingPropertiesOutput) ToManagedIdentityAuthenticationSettingPropertiesPtrOutput() ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return o.ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityAuthenticationSettingPropertiesOutput) ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityAuthenticationSettingProperties) *ManagedIdentityAuthenticationSettingProperties {
		return &v
	}).(ManagedIdentityAuthenticationSettingPropertiesPtrOutput)
}

// Supported kinds of authentication settings as discriminator
// Expected value is 'ManagedIdentity'.
func (o ManagedIdentityAuthenticationSettingPropertiesOutput) AuthenticationKind() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingProperties) string { return v.AuthenticationKind }).(pulumi.StringOutput)
}

// Display name
func (o ManagedIdentityAuthenticationSettingPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.
func (o ManagedIdentityAuthenticationSettingPropertiesOutput) ManagedIdentityName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingProperties) string { return v.ManagedIdentityName }).(pulumi.StringOutput)
}

type ManagedIdentityAuthenticationSettingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityAuthenticationSettingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityAuthenticationSettingProperties)(nil)).Elem()
}

func (o ManagedIdentityAuthenticationSettingPropertiesPtrOutput) ToManagedIdentityAuthenticationSettingPropertiesPtrOutput() ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return o
}

func (o ManagedIdentityAuthenticationSettingPropertiesPtrOutput) ToManagedIdentityAuthenticationSettingPropertiesPtrOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesPtrOutput {
	return o
}

func (o ManagedIdentityAuthenticationSettingPropertiesPtrOutput) Elem() ManagedIdentityAuthenticationSettingPropertiesOutput {
	return o.ApplyT(func(v *ManagedIdentityAuthenticationSettingProperties) ManagedIdentityAuthenticationSettingProperties {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityAuthenticationSettingProperties
		return ret
	}).(ManagedIdentityAuthenticationSettingPropertiesOutput)
}

// Supported kinds of authentication settings as discriminator
// Expected value is 'ManagedIdentity'.
func (o ManagedIdentityAuthenticationSettingPropertiesPtrOutput) AuthenticationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityAuthenticationSettingProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationKind
	}).(pulumi.StringPtrOutput)
}

// Display name
func (o ManagedIdentityAuthenticationSettingPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityAuthenticationSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.
func (o ManagedIdentityAuthenticationSettingPropertiesPtrOutput) ManagedIdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityAuthenticationSettingProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedIdentityName
	}).(pulumi.StringPtrOutput)
}

// Authentication setting properties for Azure Managed Identity
type ManagedIdentityAuthenticationSettingPropertiesResponse struct {
	// Supported kinds of authentication settings as discriminator
	// Expected value is 'ManagedIdentity'.
	AuthenticationKind string `pulumi:"authenticationKind"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.
	ManagedIdentityName string `pulumi:"managedIdentityName"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Authentication setting properties for Azure Managed Identity
type ManagedIdentityAuthenticationSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityAuthenticationSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityAuthenticationSettingPropertiesResponse)(nil)).Elem()
}

func (o ManagedIdentityAuthenticationSettingPropertiesResponseOutput) ToManagedIdentityAuthenticationSettingPropertiesResponseOutput() ManagedIdentityAuthenticationSettingPropertiesResponseOutput {
	return o
}

func (o ManagedIdentityAuthenticationSettingPropertiesResponseOutput) ToManagedIdentityAuthenticationSettingPropertiesResponseOutputWithContext(ctx context.Context) ManagedIdentityAuthenticationSettingPropertiesResponseOutput {
	return o
}

// Supported kinds of authentication settings as discriminator
// Expected value is 'ManagedIdentity'.
func (o ManagedIdentityAuthenticationSettingPropertiesResponseOutput) AuthenticationKind() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingPropertiesResponse) string { return v.AuthenticationKind }).(pulumi.StringOutput)
}

// Display name
func (o ManagedIdentityAuthenticationSettingPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Name of the managed identity to use. Either 'SystemAssigned' or the resourceId of a user-assigned identity.
func (o ManagedIdentityAuthenticationSettingPropertiesResponseOutput) ManagedIdentityName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingPropertiesResponse) string { return v.ManagedIdentityName }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o ManagedIdentityAuthenticationSettingPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthenticationSettingPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Settings for automatically discovering entities for the health model.
type ModelDiscoverySettings struct {
	// Whether to add all recommended signals to the discovered entities.
	AddRecommendedSignals string `pulumi:"addRecommendedSignals"`
	// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
	Identity *string `pulumi:"identity"`
	// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
	Scope string `pulumi:"scope"`
}

// ModelDiscoverySettingsInput is an input type that accepts ModelDiscoverySettingsArgs and ModelDiscoverySettingsOutput values.
// You can construct a concrete instance of `ModelDiscoverySettingsInput` via:
//
//	ModelDiscoverySettingsArgs{...}
type ModelDiscoverySettingsInput interface {
	pulumi.Input

	ToModelDiscoverySettingsOutput() ModelDiscoverySettingsOutput
	ToModelDiscoverySettingsOutputWithContext(context.Context) ModelDiscoverySettingsOutput
}

// Settings for automatically discovering entities for the health model.
type ModelDiscoverySettingsArgs struct {
	// Whether to add all recommended signals to the discovered entities.
	AddRecommendedSignals pulumi.StringInput `pulumi:"addRecommendedSignals"`
	// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (ModelDiscoverySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDiscoverySettings)(nil)).Elem()
}

func (i ModelDiscoverySettingsArgs) ToModelDiscoverySettingsOutput() ModelDiscoverySettingsOutput {
	return i.ToModelDiscoverySettingsOutputWithContext(context.Background())
}

func (i ModelDiscoverySettingsArgs) ToModelDiscoverySettingsOutputWithContext(ctx context.Context) ModelDiscoverySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDiscoverySettingsOutput)
}

func (i ModelDiscoverySettingsArgs) ToModelDiscoverySettingsPtrOutput() ModelDiscoverySettingsPtrOutput {
	return i.ToModelDiscoverySettingsPtrOutputWithContext(context.Background())
}

func (i ModelDiscoverySettingsArgs) ToModelDiscoverySettingsPtrOutputWithContext(ctx context.Context) ModelDiscoverySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDiscoverySettingsOutput).ToModelDiscoverySettingsPtrOutputWithContext(ctx)
}

// ModelDiscoverySettingsPtrInput is an input type that accepts ModelDiscoverySettingsArgs, ModelDiscoverySettingsPtr and ModelDiscoverySettingsPtrOutput values.
// You can construct a concrete instance of `ModelDiscoverySettingsPtrInput` via:
//
//	        ModelDiscoverySettingsArgs{...}
//
//	or:
//
//	        nil
type ModelDiscoverySettingsPtrInput interface {
	pulumi.Input

	ToModelDiscoverySettingsPtrOutput() ModelDiscoverySettingsPtrOutput
	ToModelDiscoverySettingsPtrOutputWithContext(context.Context) ModelDiscoverySettingsPtrOutput
}

type modelDiscoverySettingsPtrType ModelDiscoverySettingsArgs

func ModelDiscoverySettingsPtr(v *ModelDiscoverySettingsArgs) ModelDiscoverySettingsPtrInput {
	return (*modelDiscoverySettingsPtrType)(v)
}

func (*modelDiscoverySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDiscoverySettings)(nil)).Elem()
}

func (i *modelDiscoverySettingsPtrType) ToModelDiscoverySettingsPtrOutput() ModelDiscoverySettingsPtrOutput {
	return i.ToModelDiscoverySettingsPtrOutputWithContext(context.Background())
}

func (i *modelDiscoverySettingsPtrType) ToModelDiscoverySettingsPtrOutputWithContext(ctx context.Context) ModelDiscoverySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDiscoverySettingsPtrOutput)
}

// Settings for automatically discovering entities for the health model.
type ModelDiscoverySettingsOutput struct{ *pulumi.OutputState }

func (ModelDiscoverySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDiscoverySettings)(nil)).Elem()
}

func (o ModelDiscoverySettingsOutput) ToModelDiscoverySettingsOutput() ModelDiscoverySettingsOutput {
	return o
}

func (o ModelDiscoverySettingsOutput) ToModelDiscoverySettingsOutputWithContext(ctx context.Context) ModelDiscoverySettingsOutput {
	return o
}

func (o ModelDiscoverySettingsOutput) ToModelDiscoverySettingsPtrOutput() ModelDiscoverySettingsPtrOutput {
	return o.ToModelDiscoverySettingsPtrOutputWithContext(context.Background())
}

func (o ModelDiscoverySettingsOutput) ToModelDiscoverySettingsPtrOutputWithContext(ctx context.Context) ModelDiscoverySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelDiscoverySettings) *ModelDiscoverySettings {
		return &v
	}).(ModelDiscoverySettingsPtrOutput)
}

// Whether to add all recommended signals to the discovered entities.
func (o ModelDiscoverySettingsOutput) AddRecommendedSignals() pulumi.StringOutput {
	return o.ApplyT(func(v ModelDiscoverySettings) string { return v.AddRecommendedSignals }).(pulumi.StringOutput)
}

// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
func (o ModelDiscoverySettingsOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDiscoverySettings) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
func (o ModelDiscoverySettingsOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v ModelDiscoverySettings) string { return v.Scope }).(pulumi.StringOutput)
}

type ModelDiscoverySettingsPtrOutput struct{ *pulumi.OutputState }

func (ModelDiscoverySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDiscoverySettings)(nil)).Elem()
}

func (o ModelDiscoverySettingsPtrOutput) ToModelDiscoverySettingsPtrOutput() ModelDiscoverySettingsPtrOutput {
	return o
}

func (o ModelDiscoverySettingsPtrOutput) ToModelDiscoverySettingsPtrOutputWithContext(ctx context.Context) ModelDiscoverySettingsPtrOutput {
	return o
}

func (o ModelDiscoverySettingsPtrOutput) Elem() ModelDiscoverySettingsOutput {
	return o.ApplyT(func(v *ModelDiscoverySettings) ModelDiscoverySettings {
		if v != nil {
			return *v
		}
		var ret ModelDiscoverySettings
		return ret
	}).(ModelDiscoverySettingsOutput)
}

// Whether to add all recommended signals to the discovered entities.
func (o ModelDiscoverySettingsPtrOutput) AddRecommendedSignals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDiscoverySettings) *string {
		if v == nil {
			return nil
		}
		return &v.AddRecommendedSignals
	}).(pulumi.StringPtrOutput)
}

// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
func (o ModelDiscoverySettingsPtrOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDiscoverySettings) *string {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(pulumi.StringPtrOutput)
}

// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
func (o ModelDiscoverySettingsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDiscoverySettings) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

// Settings for automatically discovering entities for the health model.
type ModelDiscoverySettingsResponse struct {
	// Whether to add all recommended signals to the discovered entities.
	AddRecommendedSignals string `pulumi:"addRecommendedSignals"`
	// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
	Identity *string `pulumi:"identity"`
	// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
	Scope string `pulumi:"scope"`
}

// Settings for automatically discovering entities for the health model.
type ModelDiscoverySettingsResponseOutput struct{ *pulumi.OutputState }

func (ModelDiscoverySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDiscoverySettingsResponse)(nil)).Elem()
}

func (o ModelDiscoverySettingsResponseOutput) ToModelDiscoverySettingsResponseOutput() ModelDiscoverySettingsResponseOutput {
	return o
}

func (o ModelDiscoverySettingsResponseOutput) ToModelDiscoverySettingsResponseOutputWithContext(ctx context.Context) ModelDiscoverySettingsResponseOutput {
	return o
}

// Whether to add all recommended signals to the discovered entities.
func (o ModelDiscoverySettingsResponseOutput) AddRecommendedSignals() pulumi.StringOutput {
	return o.ApplyT(func(v ModelDiscoverySettingsResponse) string { return v.AddRecommendedSignals }).(pulumi.StringOutput)
}

// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
func (o ModelDiscoverySettingsResponseOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelDiscoverySettingsResponse) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
func (o ModelDiscoverySettingsResponseOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v ModelDiscoverySettingsResponse) string { return v.Scope }).(pulumi.StringOutput)
}

type ModelDiscoverySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ModelDiscoverySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDiscoverySettingsResponse)(nil)).Elem()
}

func (o ModelDiscoverySettingsResponsePtrOutput) ToModelDiscoverySettingsResponsePtrOutput() ModelDiscoverySettingsResponsePtrOutput {
	return o
}

func (o ModelDiscoverySettingsResponsePtrOutput) ToModelDiscoverySettingsResponsePtrOutputWithContext(ctx context.Context) ModelDiscoverySettingsResponsePtrOutput {
	return o
}

func (o ModelDiscoverySettingsResponsePtrOutput) Elem() ModelDiscoverySettingsResponseOutput {
	return o.ApplyT(func(v *ModelDiscoverySettingsResponse) ModelDiscoverySettingsResponse {
		if v != nil {
			return *v
		}
		var ret ModelDiscoverySettingsResponse
		return ret
	}).(ModelDiscoverySettingsResponseOutput)
}

// Whether to add all recommended signals to the discovered entities.
func (o ModelDiscoverySettingsResponsePtrOutput) AddRecommendedSignals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDiscoverySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AddRecommendedSignals
	}).(pulumi.StringPtrOutput)
}

// Which Managed Identity of the health model to use for discovery. Defaults to SystemAssigned, if not set. Can be set to 'SystemAssigned' or to the resource id of a user-assigned managed identity which is linked to the health model.
func (o ModelDiscoverySettingsResponsePtrOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDiscoverySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(pulumi.StringPtrOutput)
}

// The scope from which entities should be automatically discovered. For example, the resource id of a Service Group.
func (o ModelDiscoverySettingsResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelDiscoverySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

// Prometheus Metrics Signal Definition properties
type PrometheusMetricsSignalDefinitionProperties struct {
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit *string `pulumi:"dataUnit"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRule `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Query text in PromQL syntax
	QueryText string `pulumi:"queryText"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval *string `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'PrometheusMetricsQuery'.
	SignalKind string `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M.
	TimeGrain *string `pulumi:"timeGrain"`
}

// Defaults sets the appropriate defaults for PrometheusMetricsSignalDefinitionProperties
func (val *PrometheusMetricsSignalDefinitionProperties) Defaults() *PrometheusMetricsSignalDefinitionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "PT1M"
		tmp.RefreshInterval = &refreshInterval_
	}
	return &tmp
}

// PrometheusMetricsSignalDefinitionPropertiesInput is an input type that accepts PrometheusMetricsSignalDefinitionPropertiesArgs and PrometheusMetricsSignalDefinitionPropertiesOutput values.
// You can construct a concrete instance of `PrometheusMetricsSignalDefinitionPropertiesInput` via:
//
//	PrometheusMetricsSignalDefinitionPropertiesArgs{...}
type PrometheusMetricsSignalDefinitionPropertiesInput interface {
	pulumi.Input

	ToPrometheusMetricsSignalDefinitionPropertiesOutput() PrometheusMetricsSignalDefinitionPropertiesOutput
	ToPrometheusMetricsSignalDefinitionPropertiesOutputWithContext(context.Context) PrometheusMetricsSignalDefinitionPropertiesOutput
}

// Prometheus Metrics Signal Definition properties
type PrometheusMetricsSignalDefinitionPropertiesArgs struct {
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit pulumi.StringPtrInput `pulumi:"dataUnit"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRuleInput `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Query text in PromQL syntax
	QueryText pulumi.StringInput `pulumi:"queryText"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval pulumi.StringPtrInput `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'PrometheusMetricsQuery'.
	SignalKind pulumi.StringInput `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M.
	TimeGrain pulumi.StringPtrInput `pulumi:"timeGrain"`
}

// Defaults sets the appropriate defaults for PrometheusMetricsSignalDefinitionPropertiesArgs
func (val *PrometheusMetricsSignalDefinitionPropertiesArgs) Defaults() *PrometheusMetricsSignalDefinitionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		tmp.RefreshInterval = pulumi.StringPtr("PT1M")
	}
	return &tmp
}
func (PrometheusMetricsSignalDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusMetricsSignalDefinitionProperties)(nil)).Elem()
}

func (i PrometheusMetricsSignalDefinitionPropertiesArgs) ToPrometheusMetricsSignalDefinitionPropertiesOutput() PrometheusMetricsSignalDefinitionPropertiesOutput {
	return i.ToPrometheusMetricsSignalDefinitionPropertiesOutputWithContext(context.Background())
}

func (i PrometheusMetricsSignalDefinitionPropertiesArgs) ToPrometheusMetricsSignalDefinitionPropertiesOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusMetricsSignalDefinitionPropertiesOutput)
}

func (i PrometheusMetricsSignalDefinitionPropertiesArgs) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutput() PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return i.ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i PrometheusMetricsSignalDefinitionPropertiesArgs) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusMetricsSignalDefinitionPropertiesOutput).ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(ctx)
}

// PrometheusMetricsSignalDefinitionPropertiesPtrInput is an input type that accepts PrometheusMetricsSignalDefinitionPropertiesArgs, PrometheusMetricsSignalDefinitionPropertiesPtr and PrometheusMetricsSignalDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `PrometheusMetricsSignalDefinitionPropertiesPtrInput` via:
//
//	        PrometheusMetricsSignalDefinitionPropertiesArgs{...}
//
//	or:
//
//	        nil
type PrometheusMetricsSignalDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToPrometheusMetricsSignalDefinitionPropertiesPtrOutput() PrometheusMetricsSignalDefinitionPropertiesPtrOutput
	ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(context.Context) PrometheusMetricsSignalDefinitionPropertiesPtrOutput
}

type prometheusMetricsSignalDefinitionPropertiesPtrType PrometheusMetricsSignalDefinitionPropertiesArgs

func PrometheusMetricsSignalDefinitionPropertiesPtr(v *PrometheusMetricsSignalDefinitionPropertiesArgs) PrometheusMetricsSignalDefinitionPropertiesPtrInput {
	return (*prometheusMetricsSignalDefinitionPropertiesPtrType)(v)
}

func (*prometheusMetricsSignalDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusMetricsSignalDefinitionProperties)(nil)).Elem()
}

func (i *prometheusMetricsSignalDefinitionPropertiesPtrType) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutput() PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return i.ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *prometheusMetricsSignalDefinitionPropertiesPtrType) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusMetricsSignalDefinitionPropertiesPtrOutput)
}

// Prometheus Metrics Signal Definition properties
type PrometheusMetricsSignalDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (PrometheusMetricsSignalDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusMetricsSignalDefinitionProperties)(nil)).Elem()
}

func (o PrometheusMetricsSignalDefinitionPropertiesOutput) ToPrometheusMetricsSignalDefinitionPropertiesOutput() PrometheusMetricsSignalDefinitionPropertiesOutput {
	return o
}

func (o PrometheusMetricsSignalDefinitionPropertiesOutput) ToPrometheusMetricsSignalDefinitionPropertiesOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesOutput {
	return o
}

func (o PrometheusMetricsSignalDefinitionPropertiesOutput) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutput() PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return o.ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o PrometheusMetricsSignalDefinitionPropertiesOutput) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrometheusMetricsSignalDefinitionProperties) *PrometheusMetricsSignalDefinitionProperties {
		return &v
	}).(PrometheusMetricsSignalDefinitionPropertiesPtrOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) *string { return v.DataUnit }).(pulumi.StringPtrOutput)
}

// Display name
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) EvaluationRules() EvaluationRuleOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) EvaluationRule { return v.EvaluationRules }).(EvaluationRuleOutput)
}

// Optional set of labels (key-value pairs)
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Query text in PromQL syntax
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) QueryText() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) string { return v.QueryText }).(pulumi.StringOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'PrometheusMetricsQuery'.
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) SignalKind() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) string { return v.SignalKind }).(pulumi.StringOutput)
}

// Time range of signal. ISO duration format like PT10M.
func (o PrometheusMetricsSignalDefinitionPropertiesOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionProperties) *string { return v.TimeGrain }).(pulumi.StringPtrOutput)
}

type PrometheusMetricsSignalDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrometheusMetricsSignalDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusMetricsSignalDefinitionProperties)(nil)).Elem()
}

func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutput() PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return o
}

func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) ToPrometheusMetricsSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesPtrOutput {
	return o
}

func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) Elem() PrometheusMetricsSignalDefinitionPropertiesOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) PrometheusMetricsSignalDefinitionProperties {
		if v != nil {
			return *v
		}
		var ret PrometheusMetricsSignalDefinitionProperties
		return ret
	}).(PrometheusMetricsSignalDefinitionPropertiesOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataUnit
	}).(pulumi.StringPtrOutput)
}

// Display name
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) EvaluationRules() EvaluationRulePtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *EvaluationRule {
		if v == nil {
			return nil
		}
		return &v.EvaluationRules
	}).(EvaluationRulePtrOutput)
}

// Optional set of labels (key-value pairs)
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Query text in PromQL syntax
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) QueryText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.QueryText
	}).(pulumi.StringPtrOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'PrometheusMetricsQuery'.
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) SignalKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SignalKind
	}).(pulumi.StringPtrOutput)
}

// Time range of signal. ISO duration format like PT10M.
func (o PrometheusMetricsSignalDefinitionPropertiesPtrOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusMetricsSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeGrain
	}).(pulumi.StringPtrOutput)
}

// Prometheus Metrics Signal Definition properties
type PrometheusMetricsSignalDefinitionPropertiesResponse struct {
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit *string `pulumi:"dataUnit"`
	// Date when the signal definition was (soft-)deleted
	DeletionDate string `pulumi:"deletionDate"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRuleResponse `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Query text in PromQL syntax
	QueryText string `pulumi:"queryText"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval *string `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'PrometheusMetricsQuery'.
	SignalKind string `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M.
	TimeGrain *string `pulumi:"timeGrain"`
}

// Defaults sets the appropriate defaults for PrometheusMetricsSignalDefinitionPropertiesResponse
func (val *PrometheusMetricsSignalDefinitionPropertiesResponse) Defaults() *PrometheusMetricsSignalDefinitionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "PT1M"
		tmp.RefreshInterval = &refreshInterval_
	}
	return &tmp
}

// Prometheus Metrics Signal Definition properties
type PrometheusMetricsSignalDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrometheusMetricsSignalDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusMetricsSignalDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) ToPrometheusMetricsSignalDefinitionPropertiesResponseOutput() PrometheusMetricsSignalDefinitionPropertiesResponseOutput {
	return o
}

func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) ToPrometheusMetricsSignalDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PrometheusMetricsSignalDefinitionPropertiesResponseOutput {
	return o
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) *string { return v.DataUnit }).(pulumi.StringPtrOutput)
}

// Date when the signal definition was (soft-)deleted
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

// Display name
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) EvaluationRules() EvaluationRuleResponseOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) EvaluationRuleResponse {
		return v.EvaluationRules
	}).(EvaluationRuleResponseOutput)
}

// Optional set of labels (key-value pairs)
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The status of the last operation.
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Query text in PromQL syntax
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) QueryText() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) string { return v.QueryText }).(pulumi.StringOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'PrometheusMetricsQuery'.
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) SignalKind() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) string { return v.SignalKind }).(pulumi.StringOutput)
}

// Time range of signal. ISO duration format like PT10M.
func (o PrometheusMetricsSignalDefinitionPropertiesResponseOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusMetricsSignalDefinitionPropertiesResponse) *string { return v.TimeGrain }).(pulumi.StringPtrOutput)
}

// Relationship properties
type RelationshipProperties struct {
	// Resource name of the child entity
	ChildEntityName string `pulumi:"childEntityName"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the parent entity
	ParentEntityName string `pulumi:"parentEntityName"`
}

// RelationshipPropertiesInput is an input type that accepts RelationshipPropertiesArgs and RelationshipPropertiesOutput values.
// You can construct a concrete instance of `RelationshipPropertiesInput` via:
//
//	RelationshipPropertiesArgs{...}
type RelationshipPropertiesInput interface {
	pulumi.Input

	ToRelationshipPropertiesOutput() RelationshipPropertiesOutput
	ToRelationshipPropertiesOutputWithContext(context.Context) RelationshipPropertiesOutput
}

// Relationship properties
type RelationshipPropertiesArgs struct {
	// Resource name of the child entity
	ChildEntityName pulumi.StringInput `pulumi:"childEntityName"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Optional set of labels (key-value pairs)
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Resource name of the parent entity
	ParentEntityName pulumi.StringInput `pulumi:"parentEntityName"`
}

func (RelationshipPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationshipProperties)(nil)).Elem()
}

func (i RelationshipPropertiesArgs) ToRelationshipPropertiesOutput() RelationshipPropertiesOutput {
	return i.ToRelationshipPropertiesOutputWithContext(context.Background())
}

func (i RelationshipPropertiesArgs) ToRelationshipPropertiesOutputWithContext(ctx context.Context) RelationshipPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationshipPropertiesOutput)
}

func (i RelationshipPropertiesArgs) ToRelationshipPropertiesPtrOutput() RelationshipPropertiesPtrOutput {
	return i.ToRelationshipPropertiesPtrOutputWithContext(context.Background())
}

func (i RelationshipPropertiesArgs) ToRelationshipPropertiesPtrOutputWithContext(ctx context.Context) RelationshipPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationshipPropertiesOutput).ToRelationshipPropertiesPtrOutputWithContext(ctx)
}

// RelationshipPropertiesPtrInput is an input type that accepts RelationshipPropertiesArgs, RelationshipPropertiesPtr and RelationshipPropertiesPtrOutput values.
// You can construct a concrete instance of `RelationshipPropertiesPtrInput` via:
//
//	        RelationshipPropertiesArgs{...}
//
//	or:
//
//	        nil
type RelationshipPropertiesPtrInput interface {
	pulumi.Input

	ToRelationshipPropertiesPtrOutput() RelationshipPropertiesPtrOutput
	ToRelationshipPropertiesPtrOutputWithContext(context.Context) RelationshipPropertiesPtrOutput
}

type relationshipPropertiesPtrType RelationshipPropertiesArgs

func RelationshipPropertiesPtr(v *RelationshipPropertiesArgs) RelationshipPropertiesPtrInput {
	return (*relationshipPropertiesPtrType)(v)
}

func (*relationshipPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RelationshipProperties)(nil)).Elem()
}

func (i *relationshipPropertiesPtrType) ToRelationshipPropertiesPtrOutput() RelationshipPropertiesPtrOutput {
	return i.ToRelationshipPropertiesPtrOutputWithContext(context.Background())
}

func (i *relationshipPropertiesPtrType) ToRelationshipPropertiesPtrOutputWithContext(ctx context.Context) RelationshipPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelationshipPropertiesPtrOutput)
}

// Relationship properties
type RelationshipPropertiesOutput struct{ *pulumi.OutputState }

func (RelationshipPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationshipProperties)(nil)).Elem()
}

func (o RelationshipPropertiesOutput) ToRelationshipPropertiesOutput() RelationshipPropertiesOutput {
	return o
}

func (o RelationshipPropertiesOutput) ToRelationshipPropertiesOutputWithContext(ctx context.Context) RelationshipPropertiesOutput {
	return o
}

func (o RelationshipPropertiesOutput) ToRelationshipPropertiesPtrOutput() RelationshipPropertiesPtrOutput {
	return o.ToRelationshipPropertiesPtrOutputWithContext(context.Background())
}

func (o RelationshipPropertiesOutput) ToRelationshipPropertiesPtrOutputWithContext(ctx context.Context) RelationshipPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RelationshipProperties) *RelationshipProperties {
		return &v
	}).(RelationshipPropertiesPtrOutput)
}

// Resource name of the child entity
func (o RelationshipPropertiesOutput) ChildEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipProperties) string { return v.ChildEntityName }).(pulumi.StringOutput)
}

// Display name
func (o RelationshipPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelationshipProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Optional set of labels (key-value pairs)
func (o RelationshipPropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v RelationshipProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the parent entity
func (o RelationshipPropertiesOutput) ParentEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipProperties) string { return v.ParentEntityName }).(pulumi.StringOutput)
}

type RelationshipPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RelationshipPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RelationshipProperties)(nil)).Elem()
}

func (o RelationshipPropertiesPtrOutput) ToRelationshipPropertiesPtrOutput() RelationshipPropertiesPtrOutput {
	return o
}

func (o RelationshipPropertiesPtrOutput) ToRelationshipPropertiesPtrOutputWithContext(ctx context.Context) RelationshipPropertiesPtrOutput {
	return o
}

func (o RelationshipPropertiesPtrOutput) Elem() RelationshipPropertiesOutput {
	return o.ApplyT(func(v *RelationshipProperties) RelationshipProperties {
		if v != nil {
			return *v
		}
		var ret RelationshipProperties
		return ret
	}).(RelationshipPropertiesOutput)
}

// Resource name of the child entity
func (o RelationshipPropertiesPtrOutput) ChildEntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelationshipProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ChildEntityName
	}).(pulumi.StringPtrOutput)
}

// Display name
func (o RelationshipPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelationshipProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Optional set of labels (key-value pairs)
func (o RelationshipPropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RelationshipProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Resource name of the parent entity
func (o RelationshipPropertiesPtrOutput) ParentEntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelationshipProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ParentEntityName
	}).(pulumi.StringPtrOutput)
}

// Relationship properties
type RelationshipPropertiesResponse struct {
	// Resource name of the child entity
	ChildEntityName string `pulumi:"childEntityName"`
	// Date when the relationship was (soft-)deleted
	DeletionDate string `pulumi:"deletionDate"`
	// Discovered by which discovery rule. If set, the relationship cannot be deleted manually.
	DiscoveredBy string `pulumi:"discoveredBy"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the parent entity
	ParentEntityName string `pulumi:"parentEntityName"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Relationship properties
type RelationshipPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RelationshipPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelationshipPropertiesResponse)(nil)).Elem()
}

func (o RelationshipPropertiesResponseOutput) ToRelationshipPropertiesResponseOutput() RelationshipPropertiesResponseOutput {
	return o
}

func (o RelationshipPropertiesResponseOutput) ToRelationshipPropertiesResponseOutputWithContext(ctx context.Context) RelationshipPropertiesResponseOutput {
	return o
}

// Resource name of the child entity
func (o RelationshipPropertiesResponseOutput) ChildEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) string { return v.ChildEntityName }).(pulumi.StringOutput)
}

// Date when the relationship was (soft-)deleted
func (o RelationshipPropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

// Discovered by which discovery rule. If set, the relationship cannot be deleted manually.
func (o RelationshipPropertiesResponseOutput) DiscoveredBy() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) string { return v.DiscoveredBy }).(pulumi.StringOutput)
}

// Display name
func (o RelationshipPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Optional set of labels (key-value pairs)
func (o RelationshipPropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the parent entity
func (o RelationshipPropertiesResponseOutput) ParentEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) string { return v.ParentEntityName }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o RelationshipPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RelationshipPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Metric Signal Definition properties
type ResourceMetricSignalDefinitionProperties struct {
	// Type of aggregation to apply to the metric
	AggregationType string `pulumi:"aggregationType"`
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit *string `pulumi:"dataUnit"`
	// Optional: Dimension to split by
	Dimension *string `pulumi:"dimension"`
	// Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.
	DimensionFilter *string `pulumi:"dimensionFilter"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRule `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Name of the metric
	MetricName string `pulumi:"metricName"`
	// Metric namespace
	MetricNamespace string `pulumi:"metricNamespace"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval *string `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'AzureResourceMetric'.
	SignalKind string `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M.
	TimeGrain string `pulumi:"timeGrain"`
}

// Defaults sets the appropriate defaults for ResourceMetricSignalDefinitionProperties
func (val *ResourceMetricSignalDefinitionProperties) Defaults() *ResourceMetricSignalDefinitionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "PT1M"
		tmp.RefreshInterval = &refreshInterval_
	}
	return &tmp
}

// ResourceMetricSignalDefinitionPropertiesInput is an input type that accepts ResourceMetricSignalDefinitionPropertiesArgs and ResourceMetricSignalDefinitionPropertiesOutput values.
// You can construct a concrete instance of `ResourceMetricSignalDefinitionPropertiesInput` via:
//
//	ResourceMetricSignalDefinitionPropertiesArgs{...}
type ResourceMetricSignalDefinitionPropertiesInput interface {
	pulumi.Input

	ToResourceMetricSignalDefinitionPropertiesOutput() ResourceMetricSignalDefinitionPropertiesOutput
	ToResourceMetricSignalDefinitionPropertiesOutputWithContext(context.Context) ResourceMetricSignalDefinitionPropertiesOutput
}

// Azure Resource Metric Signal Definition properties
type ResourceMetricSignalDefinitionPropertiesArgs struct {
	// Type of aggregation to apply to the metric
	AggregationType pulumi.StringInput `pulumi:"aggregationType"`
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit pulumi.StringPtrInput `pulumi:"dataUnit"`
	// Optional: Dimension to split by
	Dimension pulumi.StringPtrInput `pulumi:"dimension"`
	// Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.
	DimensionFilter pulumi.StringPtrInput `pulumi:"dimensionFilter"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRuleInput `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the metric
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Metric namespace
	MetricNamespace pulumi.StringInput `pulumi:"metricNamespace"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval pulumi.StringPtrInput `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'AzureResourceMetric'.
	SignalKind pulumi.StringInput `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M.
	TimeGrain pulumi.StringInput `pulumi:"timeGrain"`
}

// Defaults sets the appropriate defaults for ResourceMetricSignalDefinitionPropertiesArgs
func (val *ResourceMetricSignalDefinitionPropertiesArgs) Defaults() *ResourceMetricSignalDefinitionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		tmp.RefreshInterval = pulumi.StringPtr("PT1M")
	}
	return &tmp
}
func (ResourceMetricSignalDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMetricSignalDefinitionProperties)(nil)).Elem()
}

func (i ResourceMetricSignalDefinitionPropertiesArgs) ToResourceMetricSignalDefinitionPropertiesOutput() ResourceMetricSignalDefinitionPropertiesOutput {
	return i.ToResourceMetricSignalDefinitionPropertiesOutputWithContext(context.Background())
}

func (i ResourceMetricSignalDefinitionPropertiesArgs) ToResourceMetricSignalDefinitionPropertiesOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMetricSignalDefinitionPropertiesOutput)
}

func (i ResourceMetricSignalDefinitionPropertiesArgs) ToResourceMetricSignalDefinitionPropertiesPtrOutput() ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return i.ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i ResourceMetricSignalDefinitionPropertiesArgs) ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMetricSignalDefinitionPropertiesOutput).ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(ctx)
}

// ResourceMetricSignalDefinitionPropertiesPtrInput is an input type that accepts ResourceMetricSignalDefinitionPropertiesArgs, ResourceMetricSignalDefinitionPropertiesPtr and ResourceMetricSignalDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `ResourceMetricSignalDefinitionPropertiesPtrInput` via:
//
//	        ResourceMetricSignalDefinitionPropertiesArgs{...}
//
//	or:
//
//	        nil
type ResourceMetricSignalDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToResourceMetricSignalDefinitionPropertiesPtrOutput() ResourceMetricSignalDefinitionPropertiesPtrOutput
	ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(context.Context) ResourceMetricSignalDefinitionPropertiesPtrOutput
}

type resourceMetricSignalDefinitionPropertiesPtrType ResourceMetricSignalDefinitionPropertiesArgs

func ResourceMetricSignalDefinitionPropertiesPtr(v *ResourceMetricSignalDefinitionPropertiesArgs) ResourceMetricSignalDefinitionPropertiesPtrInput {
	return (*resourceMetricSignalDefinitionPropertiesPtrType)(v)
}

func (*resourceMetricSignalDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMetricSignalDefinitionProperties)(nil)).Elem()
}

func (i *resourceMetricSignalDefinitionPropertiesPtrType) ToResourceMetricSignalDefinitionPropertiesPtrOutput() ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return i.ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *resourceMetricSignalDefinitionPropertiesPtrType) ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMetricSignalDefinitionPropertiesPtrOutput)
}

// Azure Resource Metric Signal Definition properties
type ResourceMetricSignalDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (ResourceMetricSignalDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMetricSignalDefinitionProperties)(nil)).Elem()
}

func (o ResourceMetricSignalDefinitionPropertiesOutput) ToResourceMetricSignalDefinitionPropertiesOutput() ResourceMetricSignalDefinitionPropertiesOutput {
	return o
}

func (o ResourceMetricSignalDefinitionPropertiesOutput) ToResourceMetricSignalDefinitionPropertiesOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesOutput {
	return o
}

func (o ResourceMetricSignalDefinitionPropertiesOutput) ToResourceMetricSignalDefinitionPropertiesPtrOutput() ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return o.ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o ResourceMetricSignalDefinitionPropertiesOutput) ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceMetricSignalDefinitionProperties) *ResourceMetricSignalDefinitionProperties {
		return &v
	}).(ResourceMetricSignalDefinitionPropertiesPtrOutput)
}

// Type of aggregation to apply to the metric
func (o ResourceMetricSignalDefinitionPropertiesOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o ResourceMetricSignalDefinitionPropertiesOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) *string { return v.DataUnit }).(pulumi.StringPtrOutput)
}

// Optional: Dimension to split by
func (o ResourceMetricSignalDefinitionPropertiesOutput) Dimension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) *string { return v.Dimension }).(pulumi.StringPtrOutput)
}

// Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.
func (o ResourceMetricSignalDefinitionPropertiesOutput) DimensionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) *string { return v.DimensionFilter }).(pulumi.StringPtrOutput)
}

// Display name
func (o ResourceMetricSignalDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o ResourceMetricSignalDefinitionPropertiesOutput) EvaluationRules() EvaluationRuleOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) EvaluationRule { return v.EvaluationRules }).(EvaluationRuleOutput)
}

// Optional set of labels (key-value pairs)
func (o ResourceMetricSignalDefinitionPropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the metric
func (o ResourceMetricSignalDefinitionPropertiesOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) string { return v.MetricName }).(pulumi.StringOutput)
}

// Metric namespace
func (o ResourceMetricSignalDefinitionPropertiesOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o ResourceMetricSignalDefinitionPropertiesOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'AzureResourceMetric'.
func (o ResourceMetricSignalDefinitionPropertiesOutput) SignalKind() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) string { return v.SignalKind }).(pulumi.StringOutput)
}

// Time range of signal. ISO duration format like PT10M.
func (o ResourceMetricSignalDefinitionPropertiesOutput) TimeGrain() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionProperties) string { return v.TimeGrain }).(pulumi.StringOutput)
}

type ResourceMetricSignalDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ResourceMetricSignalDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMetricSignalDefinitionProperties)(nil)).Elem()
}

func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) ToResourceMetricSignalDefinitionPropertiesPtrOutput() ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return o
}

func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) ToResourceMetricSignalDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesPtrOutput {
	return o
}

func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) Elem() ResourceMetricSignalDefinitionPropertiesOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) ResourceMetricSignalDefinitionProperties {
		if v != nil {
			return *v
		}
		var ret ResourceMetricSignalDefinitionProperties
		return ret
	}).(ResourceMetricSignalDefinitionPropertiesOutput)
}

// Type of aggregation to apply to the metric
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationType
	}).(pulumi.StringPtrOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataUnit
	}).(pulumi.StringPtrOutput)
}

// Optional: Dimension to split by
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) Dimension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Dimension
	}).(pulumi.StringPtrOutput)
}

// Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) DimensionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DimensionFilter
	}).(pulumi.StringPtrOutput)
}

// Display name
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) EvaluationRules() EvaluationRulePtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *EvaluationRule {
		if v == nil {
			return nil
		}
		return &v.EvaluationRules
	}).(EvaluationRulePtrOutput)
}

// Optional set of labels (key-value pairs)
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Name of the metric
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

// Metric namespace
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MetricNamespace
	}).(pulumi.StringPtrOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'AzureResourceMetric'.
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) SignalKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SignalKind
	}).(pulumi.StringPtrOutput)
}

// Time range of signal. ISO duration format like PT10M.
func (o ResourceMetricSignalDefinitionPropertiesPtrOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMetricSignalDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TimeGrain
	}).(pulumi.StringPtrOutput)
}

// Azure Resource Metric Signal Definition properties
type ResourceMetricSignalDefinitionPropertiesResponse struct {
	// Type of aggregation to apply to the metric
	AggregationType string `pulumi:"aggregationType"`
	// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
	DataUnit *string `pulumi:"dataUnit"`
	// Date when the signal definition was (soft-)deleted
	DeletionDate string `pulumi:"deletionDate"`
	// Optional: Dimension to split by
	Dimension *string `pulumi:"dimension"`
	// Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.
	DimensionFilter *string `pulumi:"dimensionFilter"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Evaluation rules for the signal definition
	EvaluationRules EvaluationRuleResponse `pulumi:"evaluationRules"`
	// Optional set of labels (key-value pairs)
	Labels map[string]string `pulumi:"labels"`
	// Name of the metric
	MetricName string `pulumi:"metricName"`
	// Metric namespace
	MetricNamespace string `pulumi:"metricNamespace"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
	RefreshInterval *string `pulumi:"refreshInterval"`
	// Supported signal kinds as discriminator
	// Expected value is 'AzureResourceMetric'.
	SignalKind string `pulumi:"signalKind"`
	// Time range of signal. ISO duration format like PT10M.
	TimeGrain string `pulumi:"timeGrain"`
}

// Defaults sets the appropriate defaults for ResourceMetricSignalDefinitionPropertiesResponse
func (val *ResourceMetricSignalDefinitionPropertiesResponse) Defaults() *ResourceMetricSignalDefinitionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "PT1M"
		tmp.RefreshInterval = &refreshInterval_
	}
	return &tmp
}

// Azure Resource Metric Signal Definition properties
type ResourceMetricSignalDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ResourceMetricSignalDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMetricSignalDefinitionPropertiesResponse)(nil)).Elem()
}

func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) ToResourceMetricSignalDefinitionPropertiesResponseOutput() ResourceMetricSignalDefinitionPropertiesResponseOutput {
	return o
}

func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) ToResourceMetricSignalDefinitionPropertiesResponseOutputWithContext(ctx context.Context) ResourceMetricSignalDefinitionPropertiesResponseOutput {
	return o
}

// Type of aggregation to apply to the metric
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Unit of the signal result (e.g. Bytes, MilliSeconds, Percent, Count))
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) *string { return v.DataUnit }).(pulumi.StringPtrOutput)
}

// Date when the signal definition was (soft-)deleted
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

// Optional: Dimension to split by
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) Dimension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) *string { return v.Dimension }).(pulumi.StringPtrOutput)
}

// Optional: Dimension filter to apply to the dimension. Must only be set if also Dimension is set.
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) DimensionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) *string { return v.DimensionFilter }).(pulumi.StringPtrOutput)
}

// Display name
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Evaluation rules for the signal definition
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) EvaluationRules() EvaluationRuleResponseOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) EvaluationRuleResponse {
		return v.EvaluationRules
	}).(EvaluationRuleResponseOutput)
}

// Optional set of labels (key-value pairs)
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the metric
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.MetricName }).(pulumi.StringOutput)
}

// Metric namespace
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Interval in which the signal is being evaluated. Defaults to PT1M (1 minute).
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// Supported signal kinds as discriminator
// Expected value is 'AzureResourceMetric'.
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) SignalKind() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.SignalKind }).(pulumi.StringOutput)
}

// Time range of signal. ISO duration format like PT10M.
func (o ResourceMetricSignalDefinitionPropertiesResponseOutput) TimeGrain() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetricSignalDefinitionPropertiesResponse) string { return v.TimeGrain }).(pulumi.StringOutput)
}

// Group of signal definition assignments
type SignalAssignment struct {
	// Signal definitions referenced by their names. All definitions are combined with an AND operator.
	SignalDefinitions []string `pulumi:"signalDefinitions"`
}

// SignalAssignmentInput is an input type that accepts SignalAssignmentArgs and SignalAssignmentOutput values.
// You can construct a concrete instance of `SignalAssignmentInput` via:
//
//	SignalAssignmentArgs{...}
type SignalAssignmentInput interface {
	pulumi.Input

	ToSignalAssignmentOutput() SignalAssignmentOutput
	ToSignalAssignmentOutputWithContext(context.Context) SignalAssignmentOutput
}

// Group of signal definition assignments
type SignalAssignmentArgs struct {
	// Signal definitions referenced by their names. All definitions are combined with an AND operator.
	SignalDefinitions pulumi.StringArrayInput `pulumi:"signalDefinitions"`
}

func (SignalAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalAssignment)(nil)).Elem()
}

func (i SignalAssignmentArgs) ToSignalAssignmentOutput() SignalAssignmentOutput {
	return i.ToSignalAssignmentOutputWithContext(context.Background())
}

func (i SignalAssignmentArgs) ToSignalAssignmentOutputWithContext(ctx context.Context) SignalAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignalAssignmentOutput)
}

// SignalAssignmentArrayInput is an input type that accepts SignalAssignmentArray and SignalAssignmentArrayOutput values.
// You can construct a concrete instance of `SignalAssignmentArrayInput` via:
//
//	SignalAssignmentArray{ SignalAssignmentArgs{...} }
type SignalAssignmentArrayInput interface {
	pulumi.Input

	ToSignalAssignmentArrayOutput() SignalAssignmentArrayOutput
	ToSignalAssignmentArrayOutputWithContext(context.Context) SignalAssignmentArrayOutput
}

type SignalAssignmentArray []SignalAssignmentInput

func (SignalAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignalAssignment)(nil)).Elem()
}

func (i SignalAssignmentArray) ToSignalAssignmentArrayOutput() SignalAssignmentArrayOutput {
	return i.ToSignalAssignmentArrayOutputWithContext(context.Background())
}

func (i SignalAssignmentArray) ToSignalAssignmentArrayOutputWithContext(ctx context.Context) SignalAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignalAssignmentArrayOutput)
}

// Group of signal definition assignments
type SignalAssignmentOutput struct{ *pulumi.OutputState }

func (SignalAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalAssignment)(nil)).Elem()
}

func (o SignalAssignmentOutput) ToSignalAssignmentOutput() SignalAssignmentOutput {
	return o
}

func (o SignalAssignmentOutput) ToSignalAssignmentOutputWithContext(ctx context.Context) SignalAssignmentOutput {
	return o
}

// Signal definitions referenced by their names. All definitions are combined with an AND operator.
func (o SignalAssignmentOutput) SignalDefinitions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SignalAssignment) []string { return v.SignalDefinitions }).(pulumi.StringArrayOutput)
}

type SignalAssignmentArrayOutput struct{ *pulumi.OutputState }

func (SignalAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignalAssignment)(nil)).Elem()
}

func (o SignalAssignmentArrayOutput) ToSignalAssignmentArrayOutput() SignalAssignmentArrayOutput {
	return o
}

func (o SignalAssignmentArrayOutput) ToSignalAssignmentArrayOutputWithContext(ctx context.Context) SignalAssignmentArrayOutput {
	return o
}

func (o SignalAssignmentArrayOutput) Index(i pulumi.IntInput) SignalAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SignalAssignment {
		return vs[0].([]SignalAssignment)[vs[1].(int)]
	}).(SignalAssignmentOutput)
}

// Group of signal definition assignments
type SignalAssignmentResponse struct {
	// Signal definitions referenced by their names. All definitions are combined with an AND operator.
	SignalDefinitions []string `pulumi:"signalDefinitions"`
}

// Group of signal definition assignments
type SignalAssignmentResponseOutput struct{ *pulumi.OutputState }

func (SignalAssignmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalAssignmentResponse)(nil)).Elem()
}

func (o SignalAssignmentResponseOutput) ToSignalAssignmentResponseOutput() SignalAssignmentResponseOutput {
	return o
}

func (o SignalAssignmentResponseOutput) ToSignalAssignmentResponseOutputWithContext(ctx context.Context) SignalAssignmentResponseOutput {
	return o
}

// Signal definitions referenced by their names. All definitions are combined with an AND operator.
func (o SignalAssignmentResponseOutput) SignalDefinitions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SignalAssignmentResponse) []string { return v.SignalDefinitions }).(pulumi.StringArrayOutput)
}

type SignalAssignmentResponseArrayOutput struct{ *pulumi.OutputState }

func (SignalAssignmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignalAssignmentResponse)(nil)).Elem()
}

func (o SignalAssignmentResponseArrayOutput) ToSignalAssignmentResponseArrayOutput() SignalAssignmentResponseArrayOutput {
	return o
}

func (o SignalAssignmentResponseArrayOutput) ToSignalAssignmentResponseArrayOutputWithContext(ctx context.Context) SignalAssignmentResponseArrayOutput {
	return o
}

func (o SignalAssignmentResponseArrayOutput) Index(i pulumi.IntInput) SignalAssignmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SignalAssignmentResponse {
		return vs[0].([]SignalAssignmentResponse)[vs[1].(int)]
	}).(SignalAssignmentResponseOutput)
}

// Contains various signal groups that can be assigned to an entity
type SignalGroup struct {
	// Log Analytics Signal Group
	AzureLogAnalytics *LogAnalyticsSignalGroup `pulumi:"azureLogAnalytics"`
	// Azure Monitor Workspace Signal Group
	AzureMonitorWorkspace *AzureMonitorWorkspaceSignalGroup `pulumi:"azureMonitorWorkspace"`
	// Azure Resource Signal Group
	AzureResource *AzureResourceSignalGroup `pulumi:"azureResource"`
	// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
	Dependencies *DependenciesSignalGroup `pulumi:"dependencies"`
}

// Defaults sets the appropriate defaults for SignalGroup
func (val *SignalGroup) Defaults() *SignalGroup {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Dependencies = tmp.Dependencies.Defaults()

	return &tmp
}

// SignalGroupInput is an input type that accepts SignalGroupArgs and SignalGroupOutput values.
// You can construct a concrete instance of `SignalGroupInput` via:
//
//	SignalGroupArgs{...}
type SignalGroupInput interface {
	pulumi.Input

	ToSignalGroupOutput() SignalGroupOutput
	ToSignalGroupOutputWithContext(context.Context) SignalGroupOutput
}

// Contains various signal groups that can be assigned to an entity
type SignalGroupArgs struct {
	// Log Analytics Signal Group
	AzureLogAnalytics LogAnalyticsSignalGroupPtrInput `pulumi:"azureLogAnalytics"`
	// Azure Monitor Workspace Signal Group
	AzureMonitorWorkspace AzureMonitorWorkspaceSignalGroupPtrInput `pulumi:"azureMonitorWorkspace"`
	// Azure Resource Signal Group
	AzureResource AzureResourceSignalGroupPtrInput `pulumi:"azureResource"`
	// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
	Dependencies DependenciesSignalGroupPtrInput `pulumi:"dependencies"`
}

// Defaults sets the appropriate defaults for SignalGroupArgs
func (val *SignalGroupArgs) Defaults() *SignalGroupArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (SignalGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalGroup)(nil)).Elem()
}

func (i SignalGroupArgs) ToSignalGroupOutput() SignalGroupOutput {
	return i.ToSignalGroupOutputWithContext(context.Background())
}

func (i SignalGroupArgs) ToSignalGroupOutputWithContext(ctx context.Context) SignalGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignalGroupOutput)
}

func (i SignalGroupArgs) ToSignalGroupPtrOutput() SignalGroupPtrOutput {
	return i.ToSignalGroupPtrOutputWithContext(context.Background())
}

func (i SignalGroupArgs) ToSignalGroupPtrOutputWithContext(ctx context.Context) SignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignalGroupOutput).ToSignalGroupPtrOutputWithContext(ctx)
}

// SignalGroupPtrInput is an input type that accepts SignalGroupArgs, SignalGroupPtr and SignalGroupPtrOutput values.
// You can construct a concrete instance of `SignalGroupPtrInput` via:
//
//	        SignalGroupArgs{...}
//
//	or:
//
//	        nil
type SignalGroupPtrInput interface {
	pulumi.Input

	ToSignalGroupPtrOutput() SignalGroupPtrOutput
	ToSignalGroupPtrOutputWithContext(context.Context) SignalGroupPtrOutput
}

type signalGroupPtrType SignalGroupArgs

func SignalGroupPtr(v *SignalGroupArgs) SignalGroupPtrInput {
	return (*signalGroupPtrType)(v)
}

func (*signalGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalGroup)(nil)).Elem()
}

func (i *signalGroupPtrType) ToSignalGroupPtrOutput() SignalGroupPtrOutput {
	return i.ToSignalGroupPtrOutputWithContext(context.Background())
}

func (i *signalGroupPtrType) ToSignalGroupPtrOutputWithContext(ctx context.Context) SignalGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignalGroupPtrOutput)
}

// Contains various signal groups that can be assigned to an entity
type SignalGroupOutput struct{ *pulumi.OutputState }

func (SignalGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalGroup)(nil)).Elem()
}

func (o SignalGroupOutput) ToSignalGroupOutput() SignalGroupOutput {
	return o
}

func (o SignalGroupOutput) ToSignalGroupOutputWithContext(ctx context.Context) SignalGroupOutput {
	return o
}

func (o SignalGroupOutput) ToSignalGroupPtrOutput() SignalGroupPtrOutput {
	return o.ToSignalGroupPtrOutputWithContext(context.Background())
}

func (o SignalGroupOutput) ToSignalGroupPtrOutputWithContext(ctx context.Context) SignalGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SignalGroup) *SignalGroup {
		return &v
	}).(SignalGroupPtrOutput)
}

// Log Analytics Signal Group
func (o SignalGroupOutput) AzureLogAnalytics() LogAnalyticsSignalGroupPtrOutput {
	return o.ApplyT(func(v SignalGroup) *LogAnalyticsSignalGroup { return v.AzureLogAnalytics }).(LogAnalyticsSignalGroupPtrOutput)
}

// Azure Monitor Workspace Signal Group
func (o SignalGroupOutput) AzureMonitorWorkspace() AzureMonitorWorkspaceSignalGroupPtrOutput {
	return o.ApplyT(func(v SignalGroup) *AzureMonitorWorkspaceSignalGroup { return v.AzureMonitorWorkspace }).(AzureMonitorWorkspaceSignalGroupPtrOutput)
}

// Azure Resource Signal Group
func (o SignalGroupOutput) AzureResource() AzureResourceSignalGroupPtrOutput {
	return o.ApplyT(func(v SignalGroup) *AzureResourceSignalGroup { return v.AzureResource }).(AzureResourceSignalGroupPtrOutput)
}

// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
func (o SignalGroupOutput) Dependencies() DependenciesSignalGroupPtrOutput {
	return o.ApplyT(func(v SignalGroup) *DependenciesSignalGroup { return v.Dependencies }).(DependenciesSignalGroupPtrOutput)
}

type SignalGroupPtrOutput struct{ *pulumi.OutputState }

func (SignalGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalGroup)(nil)).Elem()
}

func (o SignalGroupPtrOutput) ToSignalGroupPtrOutput() SignalGroupPtrOutput {
	return o
}

func (o SignalGroupPtrOutput) ToSignalGroupPtrOutputWithContext(ctx context.Context) SignalGroupPtrOutput {
	return o
}

func (o SignalGroupPtrOutput) Elem() SignalGroupOutput {
	return o.ApplyT(func(v *SignalGroup) SignalGroup {
		if v != nil {
			return *v
		}
		var ret SignalGroup
		return ret
	}).(SignalGroupOutput)
}

// Log Analytics Signal Group
func (o SignalGroupPtrOutput) AzureLogAnalytics() LogAnalyticsSignalGroupPtrOutput {
	return o.ApplyT(func(v *SignalGroup) *LogAnalyticsSignalGroup {
		if v == nil {
			return nil
		}
		return v.AzureLogAnalytics
	}).(LogAnalyticsSignalGroupPtrOutput)
}

// Azure Monitor Workspace Signal Group
func (o SignalGroupPtrOutput) AzureMonitorWorkspace() AzureMonitorWorkspaceSignalGroupPtrOutput {
	return o.ApplyT(func(v *SignalGroup) *AzureMonitorWorkspaceSignalGroup {
		if v == nil {
			return nil
		}
		return v.AzureMonitorWorkspace
	}).(AzureMonitorWorkspaceSignalGroupPtrOutput)
}

// Azure Resource Signal Group
func (o SignalGroupPtrOutput) AzureResource() AzureResourceSignalGroupPtrOutput {
	return o.ApplyT(func(v *SignalGroup) *AzureResourceSignalGroup {
		if v == nil {
			return nil
		}
		return v.AzureResource
	}).(AzureResourceSignalGroupPtrOutput)
}

// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
func (o SignalGroupPtrOutput) Dependencies() DependenciesSignalGroupPtrOutput {
	return o.ApplyT(func(v *SignalGroup) *DependenciesSignalGroup {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(DependenciesSignalGroupPtrOutput)
}

// Contains various signal groups that can be assigned to an entity
type SignalGroupResponse struct {
	// Log Analytics Signal Group
	AzureLogAnalytics *LogAnalyticsSignalGroupResponse `pulumi:"azureLogAnalytics"`
	// Azure Monitor Workspace Signal Group
	AzureMonitorWorkspace *AzureMonitorWorkspaceSignalGroupResponse `pulumi:"azureMonitorWorkspace"`
	// Azure Resource Signal Group
	AzureResource *AzureResourceSignalGroupResponse `pulumi:"azureResource"`
	// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
	Dependencies *DependenciesSignalGroupResponse `pulumi:"dependencies"`
}

// Defaults sets the appropriate defaults for SignalGroupResponse
func (val *SignalGroupResponse) Defaults() *SignalGroupResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Dependencies = tmp.Dependencies.Defaults()

	return &tmp
}

// Contains various signal groups that can be assigned to an entity
type SignalGroupResponseOutput struct{ *pulumi.OutputState }

func (SignalGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalGroupResponse)(nil)).Elem()
}

func (o SignalGroupResponseOutput) ToSignalGroupResponseOutput() SignalGroupResponseOutput {
	return o
}

func (o SignalGroupResponseOutput) ToSignalGroupResponseOutputWithContext(ctx context.Context) SignalGroupResponseOutput {
	return o
}

// Log Analytics Signal Group
func (o SignalGroupResponseOutput) AzureLogAnalytics() LogAnalyticsSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v SignalGroupResponse) *LogAnalyticsSignalGroupResponse { return v.AzureLogAnalytics }).(LogAnalyticsSignalGroupResponsePtrOutput)
}

// Azure Monitor Workspace Signal Group
func (o SignalGroupResponseOutput) AzureMonitorWorkspace() AzureMonitorWorkspaceSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v SignalGroupResponse) *AzureMonitorWorkspaceSignalGroupResponse { return v.AzureMonitorWorkspace }).(AzureMonitorWorkspaceSignalGroupResponsePtrOutput)
}

// Azure Resource Signal Group
func (o SignalGroupResponseOutput) AzureResource() AzureResourceSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v SignalGroupResponse) *AzureResourceSignalGroupResponse { return v.AzureResource }).(AzureResourceSignalGroupResponsePtrOutput)
}

// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
func (o SignalGroupResponseOutput) Dependencies() DependenciesSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v SignalGroupResponse) *DependenciesSignalGroupResponse { return v.Dependencies }).(DependenciesSignalGroupResponsePtrOutput)
}

type SignalGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (SignalGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalGroupResponse)(nil)).Elem()
}

func (o SignalGroupResponsePtrOutput) ToSignalGroupResponsePtrOutput() SignalGroupResponsePtrOutput {
	return o
}

func (o SignalGroupResponsePtrOutput) ToSignalGroupResponsePtrOutputWithContext(ctx context.Context) SignalGroupResponsePtrOutput {
	return o
}

func (o SignalGroupResponsePtrOutput) Elem() SignalGroupResponseOutput {
	return o.ApplyT(func(v *SignalGroupResponse) SignalGroupResponse {
		if v != nil {
			return *v
		}
		var ret SignalGroupResponse
		return ret
	}).(SignalGroupResponseOutput)
}

// Log Analytics Signal Group
func (o SignalGroupResponsePtrOutput) AzureLogAnalytics() LogAnalyticsSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v *SignalGroupResponse) *LogAnalyticsSignalGroupResponse {
		if v == nil {
			return nil
		}
		return v.AzureLogAnalytics
	}).(LogAnalyticsSignalGroupResponsePtrOutput)
}

// Azure Monitor Workspace Signal Group
func (o SignalGroupResponsePtrOutput) AzureMonitorWorkspace() AzureMonitorWorkspaceSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v *SignalGroupResponse) *AzureMonitorWorkspaceSignalGroupResponse {
		if v == nil {
			return nil
		}
		return v.AzureMonitorWorkspace
	}).(AzureMonitorWorkspaceSignalGroupResponsePtrOutput)
}

// Azure Resource Signal Group
func (o SignalGroupResponsePtrOutput) AzureResource() AzureResourceSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v *SignalGroupResponse) *AzureResourceSignalGroupResponse {
		if v == nil {
			return nil
		}
		return v.AzureResource
	}).(AzureResourceSignalGroupResponsePtrOutput)
}

// Settings for dependency signals to control how the health state of child entities influences the health state of the parent entity.
func (o SignalGroupResponsePtrOutput) Dependencies() DependenciesSignalGroupResponsePtrOutput {
	return o.ApplyT(func(v *SignalGroupResponse) *DependenciesSignalGroupResponse {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(DependenciesSignalGroupResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Threshold-based evaluation rule for a signal definition
type ThresholdRule struct {
	// Operator how to compare the signal value with the threshold
	Operator string `pulumi:"operator"`
	// Threshold value
	Threshold string `pulumi:"threshold"`
}

// ThresholdRuleInput is an input type that accepts ThresholdRuleArgs and ThresholdRuleOutput values.
// You can construct a concrete instance of `ThresholdRuleInput` via:
//
//	ThresholdRuleArgs{...}
type ThresholdRuleInput interface {
	pulumi.Input

	ToThresholdRuleOutput() ThresholdRuleOutput
	ToThresholdRuleOutputWithContext(context.Context) ThresholdRuleOutput
}

// Threshold-based evaluation rule for a signal definition
type ThresholdRuleArgs struct {
	// Operator how to compare the signal value with the threshold
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value
	Threshold pulumi.StringInput `pulumi:"threshold"`
}

func (ThresholdRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThresholdRule)(nil)).Elem()
}

func (i ThresholdRuleArgs) ToThresholdRuleOutput() ThresholdRuleOutput {
	return i.ToThresholdRuleOutputWithContext(context.Background())
}

func (i ThresholdRuleArgs) ToThresholdRuleOutputWithContext(ctx context.Context) ThresholdRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThresholdRuleOutput)
}

func (i ThresholdRuleArgs) ToThresholdRulePtrOutput() ThresholdRulePtrOutput {
	return i.ToThresholdRulePtrOutputWithContext(context.Background())
}

func (i ThresholdRuleArgs) ToThresholdRulePtrOutputWithContext(ctx context.Context) ThresholdRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThresholdRuleOutput).ToThresholdRulePtrOutputWithContext(ctx)
}

// ThresholdRulePtrInput is an input type that accepts ThresholdRuleArgs, ThresholdRulePtr and ThresholdRulePtrOutput values.
// You can construct a concrete instance of `ThresholdRulePtrInput` via:
//
//	        ThresholdRuleArgs{...}
//
//	or:
//
//	        nil
type ThresholdRulePtrInput interface {
	pulumi.Input

	ToThresholdRulePtrOutput() ThresholdRulePtrOutput
	ToThresholdRulePtrOutputWithContext(context.Context) ThresholdRulePtrOutput
}

type thresholdRulePtrType ThresholdRuleArgs

func ThresholdRulePtr(v *ThresholdRuleArgs) ThresholdRulePtrInput {
	return (*thresholdRulePtrType)(v)
}

func (*thresholdRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThresholdRule)(nil)).Elem()
}

func (i *thresholdRulePtrType) ToThresholdRulePtrOutput() ThresholdRulePtrOutput {
	return i.ToThresholdRulePtrOutputWithContext(context.Background())
}

func (i *thresholdRulePtrType) ToThresholdRulePtrOutputWithContext(ctx context.Context) ThresholdRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThresholdRulePtrOutput)
}

// Threshold-based evaluation rule for a signal definition
type ThresholdRuleOutput struct{ *pulumi.OutputState }

func (ThresholdRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThresholdRule)(nil)).Elem()
}

func (o ThresholdRuleOutput) ToThresholdRuleOutput() ThresholdRuleOutput {
	return o
}

func (o ThresholdRuleOutput) ToThresholdRuleOutputWithContext(ctx context.Context) ThresholdRuleOutput {
	return o
}

func (o ThresholdRuleOutput) ToThresholdRulePtrOutput() ThresholdRulePtrOutput {
	return o.ToThresholdRulePtrOutputWithContext(context.Background())
}

func (o ThresholdRuleOutput) ToThresholdRulePtrOutputWithContext(ctx context.Context) ThresholdRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThresholdRule) *ThresholdRule {
		return &v
	}).(ThresholdRulePtrOutput)
}

// Operator how to compare the signal value with the threshold
func (o ThresholdRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ThresholdRule) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value
func (o ThresholdRuleOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v ThresholdRule) string { return v.Threshold }).(pulumi.StringOutput)
}

type ThresholdRulePtrOutput struct{ *pulumi.OutputState }

func (ThresholdRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThresholdRule)(nil)).Elem()
}

func (o ThresholdRulePtrOutput) ToThresholdRulePtrOutput() ThresholdRulePtrOutput {
	return o
}

func (o ThresholdRulePtrOutput) ToThresholdRulePtrOutputWithContext(ctx context.Context) ThresholdRulePtrOutput {
	return o
}

func (o ThresholdRulePtrOutput) Elem() ThresholdRuleOutput {
	return o.ApplyT(func(v *ThresholdRule) ThresholdRule {
		if v != nil {
			return *v
		}
		var ret ThresholdRule
		return ret
	}).(ThresholdRuleOutput)
}

// Operator how to compare the signal value with the threshold
func (o ThresholdRulePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThresholdRule) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value
func (o ThresholdRulePtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThresholdRule) *string {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Threshold-based evaluation rule for a signal definition
type ThresholdRuleResponse struct {
	// Operator how to compare the signal value with the threshold
	Operator string `pulumi:"operator"`
	// Threshold value
	Threshold string `pulumi:"threshold"`
}

// Threshold-based evaluation rule for a signal definition
type ThresholdRuleResponseOutput struct{ *pulumi.OutputState }

func (ThresholdRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThresholdRuleResponse)(nil)).Elem()
}

func (o ThresholdRuleResponseOutput) ToThresholdRuleResponseOutput() ThresholdRuleResponseOutput {
	return o
}

func (o ThresholdRuleResponseOutput) ToThresholdRuleResponseOutputWithContext(ctx context.Context) ThresholdRuleResponseOutput {
	return o
}

// Operator how to compare the signal value with the threshold
func (o ThresholdRuleResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ThresholdRuleResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value
func (o ThresholdRuleResponseOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v ThresholdRuleResponse) string { return v.Threshold }).(pulumi.StringOutput)
}

type ThresholdRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (ThresholdRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThresholdRuleResponse)(nil)).Elem()
}

func (o ThresholdRuleResponsePtrOutput) ToThresholdRuleResponsePtrOutput() ThresholdRuleResponsePtrOutput {
	return o
}

func (o ThresholdRuleResponsePtrOutput) ToThresholdRuleResponsePtrOutputWithContext(ctx context.Context) ThresholdRuleResponsePtrOutput {
	return o
}

func (o ThresholdRuleResponsePtrOutput) Elem() ThresholdRuleResponseOutput {
	return o.ApplyT(func(v *ThresholdRuleResponse) ThresholdRuleResponse {
		if v != nil {
			return *v
		}
		var ret ThresholdRuleResponse
		return ret
	}).(ThresholdRuleResponseOutput)
}

// Operator how to compare the signal value with the threshold
func (o ThresholdRuleResponsePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThresholdRuleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value
func (o ThresholdRuleResponsePtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThresholdRuleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AlertConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceSignalGroupOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceSignalGroupPtrOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceSignalGroupResponseOutput{})
	pulumi.RegisterOutputType(AzureMonitorWorkspaceSignalGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureResourceSignalGroupOutput{})
	pulumi.RegisterOutputType(AzureResourceSignalGroupPtrOutput{})
	pulumi.RegisterOutputType(AzureResourceSignalGroupResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceSignalGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(DependenciesSignalGroupOutput{})
	pulumi.RegisterOutputType(DependenciesSignalGroupPtrOutput{})
	pulumi.RegisterOutputType(DependenciesSignalGroupResponseOutput{})
	pulumi.RegisterOutputType(DependenciesSignalGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(DiscoveryRulePropertiesOutput{})
	pulumi.RegisterOutputType(DiscoveryRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryRulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DynamicDetectionRuleOutput{})
	pulumi.RegisterOutputType(DynamicDetectionRulePtrOutput{})
	pulumi.RegisterOutputType(DynamicDetectionRuleResponseOutput{})
	pulumi.RegisterOutputType(DynamicDetectionRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityAlertsOutput{})
	pulumi.RegisterOutputType(EntityAlertsPtrOutput{})
	pulumi.RegisterOutputType(EntityAlertsResponseOutput{})
	pulumi.RegisterOutputType(EntityAlertsResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityCoordinatesOutput{})
	pulumi.RegisterOutputType(EntityCoordinatesPtrOutput{})
	pulumi.RegisterOutputType(EntityCoordinatesResponseOutput{})
	pulumi.RegisterOutputType(EntityCoordinatesResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityPropertiesOutput{})
	pulumi.RegisterOutputType(EntityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EntityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EvaluationRuleOutput{})
	pulumi.RegisterOutputType(EvaluationRulePtrOutput{})
	pulumi.RegisterOutputType(EvaluationRuleResponseOutput{})
	pulumi.RegisterOutputType(HealthModelPropertiesOutput{})
	pulumi.RegisterOutputType(HealthModelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HealthModelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IconDefinitionOutput{})
	pulumi.RegisterOutputType(IconDefinitionPtrOutput{})
	pulumi.RegisterOutputType(IconDefinitionResponseOutput{})
	pulumi.RegisterOutputType(IconDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsQuerySignalDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(LogAnalyticsQuerySignalDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsQuerySignalDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LogAnalyticsSignalGroupOutput{})
	pulumi.RegisterOutputType(LogAnalyticsSignalGroupPtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsSignalGroupResponseOutput{})
	pulumi.RegisterOutputType(LogAnalyticsSignalGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityAuthenticationSettingPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedIdentityAuthenticationSettingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityAuthenticationSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ModelDiscoverySettingsOutput{})
	pulumi.RegisterOutputType(ModelDiscoverySettingsPtrOutput{})
	pulumi.RegisterOutputType(ModelDiscoverySettingsResponseOutput{})
	pulumi.RegisterOutputType(ModelDiscoverySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrometheusMetricsSignalDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(PrometheusMetricsSignalDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrometheusMetricsSignalDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RelationshipPropertiesOutput{})
	pulumi.RegisterOutputType(RelationshipPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RelationshipPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ResourceMetricSignalDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(ResourceMetricSignalDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ResourceMetricSignalDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SignalAssignmentOutput{})
	pulumi.RegisterOutputType(SignalAssignmentArrayOutput{})
	pulumi.RegisterOutputType(SignalAssignmentResponseOutput{})
	pulumi.RegisterOutputType(SignalAssignmentResponseArrayOutput{})
	pulumi.RegisterOutputType(SignalGroupOutput{})
	pulumi.RegisterOutputType(SignalGroupPtrOutput{})
	pulumi.RegisterOutputType(SignalGroupResponseOutput{})
	pulumi.RegisterOutputType(SignalGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(ThresholdRuleOutput{})
	pulumi.RegisterOutputType(ThresholdRulePtrOutput{})
	pulumi.RegisterOutputType(ThresholdRuleResponseOutput{})
	pulumi.RegisterOutputType(ThresholdRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
