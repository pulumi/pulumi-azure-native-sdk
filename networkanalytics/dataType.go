// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkanalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The data type resource.
// Azure REST API version: 2023-11-15.
type DataType struct {
	pulumi.CustomResourceState

	// Field for database cache retention in days.
	DatabaseCacheRetention pulumi.IntPtrOutput `pulumi:"databaseCacheRetention"`
	// Field for database data retention in days.
	DatabaseRetention pulumi.IntPtrOutput `pulumi:"databaseRetention"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Latest provisioning state  of data product.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// State of data type.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Reason for the state of data type.
	StateReason pulumi.StringOutput `pulumi:"stateReason"`
	// Field for storage output retention in days.
	StorageOutputRetention pulumi.IntPtrOutput `pulumi:"storageOutputRetention"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Url for data visualization.
	VisualizationUrl pulumi.StringOutput `pulumi:"visualizationUrl"`
}

// NewDataType registers a new resource with the given unique name, arguments, and options.
func NewDataType(ctx *pulumi.Context,
	name string, args *DataTypeArgs, opts ...pulumi.ResourceOption) (*DataType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataProductName == nil {
		return nil, errors.New("invalid value for required argument 'DataProductName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:networkanalytics/v20231115:DataType"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DataType
	err := ctx.RegisterResource("azure-native:networkanalytics:DataType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataType gets an existing DataType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataTypeState, opts ...pulumi.ResourceOption) (*DataType, error) {
	var resource DataType
	err := ctx.ReadResource("azure-native:networkanalytics:DataType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataType resources.
type dataTypeState struct {
}

type DataTypeState struct {
}

func (DataTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataTypeState)(nil)).Elem()
}

type dataTypeArgs struct {
	// The data product resource name
	DataProductName string `pulumi:"dataProductName"`
	// The data type name.
	DataTypeName *string `pulumi:"dataTypeName"`
	// Field for database cache retention in days.
	DatabaseCacheRetention *int `pulumi:"databaseCacheRetention"`
	// Field for database data retention in days.
	DatabaseRetention *int `pulumi:"databaseRetention"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// State of data type.
	State *string `pulumi:"state"`
	// Field for storage output retention in days.
	StorageOutputRetention *int `pulumi:"storageOutputRetention"`
}

// The set of arguments for constructing a DataType resource.
type DataTypeArgs struct {
	// The data product resource name
	DataProductName pulumi.StringInput
	// The data type name.
	DataTypeName pulumi.StringPtrInput
	// Field for database cache retention in days.
	DatabaseCacheRetention pulumi.IntPtrInput
	// Field for database data retention in days.
	DatabaseRetention pulumi.IntPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// State of data type.
	State pulumi.StringPtrInput
	// Field for storage output retention in days.
	StorageOutputRetention pulumi.IntPtrInput
}

func (DataTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataTypeArgs)(nil)).Elem()
}

type DataTypeInput interface {
	pulumi.Input

	ToDataTypeOutput() DataTypeOutput
	ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput
}

func (*DataType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataType)(nil)).Elem()
}

func (i *DataType) ToDataTypeOutput() DataTypeOutput {
	return i.ToDataTypeOutputWithContext(context.Background())
}

func (i *DataType) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataTypeOutput)
}

type DataTypeOutput struct{ *pulumi.OutputState }

func (DataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataType)(nil)).Elem()
}

func (o DataTypeOutput) ToDataTypeOutput() DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return o
}

// Field for database cache retention in days.
func (o DataTypeOutput) DatabaseCacheRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataType) pulumi.IntPtrOutput { return v.DatabaseCacheRetention }).(pulumi.IntPtrOutput)
}

// Field for database data retention in days.
func (o DataTypeOutput) DatabaseRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataType) pulumi.IntPtrOutput { return v.DatabaseRetention }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o DataTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Latest provisioning state  of data product.
func (o DataTypeOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DataType) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// State of data type.
func (o DataTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataType) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// Reason for the state of data type.
func (o DataTypeOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v *DataType) pulumi.StringOutput { return v.StateReason }).(pulumi.StringOutput)
}

// Field for storage output retention in days.
func (o DataTypeOutput) StorageOutputRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataType) pulumi.IntPtrOutput { return v.StorageOutputRetention }).(pulumi.IntPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DataTypeOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DataType) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DataTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DataType) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Url for data visualization.
func (o DataTypeOutput) VisualizationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DataType) pulumi.StringOutput { return v.VisualizationUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DataTypeOutput{})
}
