// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Flag to enable or disable redundancy for data product.
type ControlState string

const (
	// Field to enable a setting.
	ControlStateEnabled = ControlState("Enabled")
	// Field to disable a setting.
	ControlStateDisabled = ControlState("Disabled")
)

func (ControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlState)(nil)).Elem()
}

func (e ControlState) ToControlStateOutput() ControlStateOutput {
	return pulumi.ToOutput(e).(ControlStateOutput)
}

func (e ControlState) ToControlStateOutputWithContext(ctx context.Context) ControlStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ControlStateOutput)
}

func (e ControlState) ToControlStatePtrOutput() ControlStatePtrOutput {
	return e.ToControlStatePtrOutputWithContext(context.Background())
}

func (e ControlState) ToControlStatePtrOutputWithContext(ctx context.Context) ControlStatePtrOutput {
	return ControlState(e).ToControlStateOutputWithContext(ctx).ToControlStatePtrOutputWithContext(ctx)
}

func (e ControlState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ControlState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ControlState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ControlState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ControlStateOutput struct{ *pulumi.OutputState }

func (ControlStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlState)(nil)).Elem()
}

func (o ControlStateOutput) ToControlStateOutput() ControlStateOutput {
	return o
}

func (o ControlStateOutput) ToControlStateOutputWithContext(ctx context.Context) ControlStateOutput {
	return o
}

func (o ControlStateOutput) ToControlStatePtrOutput() ControlStatePtrOutput {
	return o.ToControlStatePtrOutputWithContext(context.Background())
}

func (o ControlStateOutput) ToControlStatePtrOutputWithContext(ctx context.Context) ControlStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ControlState) *ControlState {
		return &v
	}).(ControlStatePtrOutput)
}

func (o ControlStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ControlStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ControlState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ControlStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ControlStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ControlState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ControlStatePtrOutput struct{ *pulumi.OutputState }

func (ControlStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlState)(nil)).Elem()
}

func (o ControlStatePtrOutput) ToControlStatePtrOutput() ControlStatePtrOutput {
	return o
}

func (o ControlStatePtrOutput) ToControlStatePtrOutputWithContext(ctx context.Context) ControlStatePtrOutput {
	return o
}

func (o ControlStatePtrOutput) Elem() ControlStateOutput {
	return o.ApplyT(func(v *ControlState) ControlState {
		if v != nil {
			return *v
		}
		var ret ControlState
		return ret
	}).(ControlStateOutput)
}

func (o ControlStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ControlStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ControlState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ControlStateInput is an input type that accepts values of the ControlState enum
// A concrete instance of `ControlStateInput` can be one of the following:
//
//	ControlStateEnabled
//	ControlStateDisabled
type ControlStateInput interface {
	pulumi.Input

	ToControlStateOutput() ControlStateOutput
	ToControlStateOutputWithContext(context.Context) ControlStateOutput
}

var controlStatePtrType = reflect.TypeOf((**ControlState)(nil)).Elem()

type ControlStatePtrInput interface {
	pulumi.Input

	ToControlStatePtrOutput() ControlStatePtrOutput
	ToControlStatePtrOutputWithContext(context.Context) ControlStatePtrOutput
}

type controlStatePtr string

func ControlStatePtr(v string) ControlStatePtrInput {
	return (*controlStatePtr)(&v)
}

func (*controlStatePtr) ElementType() reflect.Type {
	return controlStatePtrType
}

func (in *controlStatePtr) ToControlStatePtrOutput() ControlStatePtrOutput {
	return pulumi.ToOutput(in).(ControlStatePtrOutput)
}

func (in *controlStatePtr) ToControlStatePtrOutputWithContext(ctx context.Context) ControlStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ControlStatePtrOutput)
}

func (in *controlStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ControlState] {
	return pulumix.Output[*ControlState]{
		OutputState: in.ToControlStatePtrOutputWithContext(ctx).OutputState,
	}
}

// State of data type.
type DataTypeStateEnum string

const (
	// Field to specify stopped state.
	DataTypeStateEnumStopped = DataTypeStateEnum("Stopped")
	// Field to specify running state.
	DataTypeStateEnumRunning = DataTypeStateEnum("Running")
)

func (DataTypeStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTypeStateEnum)(nil)).Elem()
}

func (e DataTypeStateEnum) ToDataTypeStateEnumOutput() DataTypeStateEnumOutput {
	return pulumi.ToOutput(e).(DataTypeStateEnumOutput)
}

func (e DataTypeStateEnum) ToDataTypeStateEnumOutputWithContext(ctx context.Context) DataTypeStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataTypeStateEnumOutput)
}

func (e DataTypeStateEnum) ToDataTypeStateEnumPtrOutput() DataTypeStateEnumPtrOutput {
	return e.ToDataTypeStateEnumPtrOutputWithContext(context.Background())
}

func (e DataTypeStateEnum) ToDataTypeStateEnumPtrOutputWithContext(ctx context.Context) DataTypeStateEnumPtrOutput {
	return DataTypeStateEnum(e).ToDataTypeStateEnumOutputWithContext(ctx).ToDataTypeStateEnumPtrOutputWithContext(ctx)
}

func (e DataTypeStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataTypeStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataTypeStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataTypeStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataTypeStateEnumOutput struct{ *pulumi.OutputState }

func (DataTypeStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTypeStateEnum)(nil)).Elem()
}

func (o DataTypeStateEnumOutput) ToDataTypeStateEnumOutput() DataTypeStateEnumOutput {
	return o
}

func (o DataTypeStateEnumOutput) ToDataTypeStateEnumOutputWithContext(ctx context.Context) DataTypeStateEnumOutput {
	return o
}

func (o DataTypeStateEnumOutput) ToDataTypeStateEnumPtrOutput() DataTypeStateEnumPtrOutput {
	return o.ToDataTypeStateEnumPtrOutputWithContext(context.Background())
}

func (o DataTypeStateEnumOutput) ToDataTypeStateEnumPtrOutputWithContext(ctx context.Context) DataTypeStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataTypeStateEnum) *DataTypeStateEnum {
		return &v
	}).(DataTypeStateEnumPtrOutput)
}

func (o DataTypeStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataTypeStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataTypeStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataTypeStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataTypeStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataTypeStateEnumPtrOutput struct{ *pulumi.OutputState }

func (DataTypeStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataTypeStateEnum)(nil)).Elem()
}

func (o DataTypeStateEnumPtrOutput) ToDataTypeStateEnumPtrOutput() DataTypeStateEnumPtrOutput {
	return o
}

func (o DataTypeStateEnumPtrOutput) ToDataTypeStateEnumPtrOutputWithContext(ctx context.Context) DataTypeStateEnumPtrOutput {
	return o
}

func (o DataTypeStateEnumPtrOutput) Elem() DataTypeStateEnumOutput {
	return o.ApplyT(func(v *DataTypeStateEnum) DataTypeStateEnum {
		if v != nil {
			return *v
		}
		var ret DataTypeStateEnum
		return ret
	}).(DataTypeStateEnumOutput)
}

func (o DataTypeStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataTypeStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataTypeStateEnumInput is an input type that accepts values of the DataTypeStateEnum enum
// A concrete instance of `DataTypeStateEnumInput` can be one of the following:
//
//	DataTypeStateEnumStopped
//	DataTypeStateEnumRunning
type DataTypeStateEnumInput interface {
	pulumi.Input

	ToDataTypeStateEnumOutput() DataTypeStateEnumOutput
	ToDataTypeStateEnumOutputWithContext(context.Context) DataTypeStateEnumOutput
}

var dataTypeStateEnumPtrType = reflect.TypeOf((**DataTypeStateEnum)(nil)).Elem()

type DataTypeStateEnumPtrInput interface {
	pulumi.Input

	ToDataTypeStateEnumPtrOutput() DataTypeStateEnumPtrOutput
	ToDataTypeStateEnumPtrOutputWithContext(context.Context) DataTypeStateEnumPtrOutput
}

type dataTypeStateEnumPtr string

func DataTypeStateEnumPtr(v string) DataTypeStateEnumPtrInput {
	return (*dataTypeStateEnumPtr)(&v)
}

func (*dataTypeStateEnumPtr) ElementType() reflect.Type {
	return dataTypeStateEnumPtrType
}

func (in *dataTypeStateEnumPtr) ToDataTypeStateEnumPtrOutput() DataTypeStateEnumPtrOutput {
	return pulumi.ToOutput(in).(DataTypeStateEnumPtrOutput)
}

func (in *dataTypeStateEnumPtr) ToDataTypeStateEnumPtrOutputWithContext(ctx context.Context) DataTypeStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataTypeStateEnumPtrOutput)
}

func (in *dataTypeStateEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*DataTypeStateEnum] {
	return pulumix.Output[*DataTypeStateEnum]{
		OutputState: in.ToDataTypeStateEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// Default Action
type DefaultAction string

const (
	// Represents allow action.
	DefaultActionAllow = DefaultAction("Allow")
	// Represents deny action.
	DefaultActionDeny = DefaultAction("Deny")
)

func (DefaultAction) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultAction)(nil)).Elem()
}

func (e DefaultAction) ToDefaultActionOutput() DefaultActionOutput {
	return pulumi.ToOutput(e).(DefaultActionOutput)
}

func (e DefaultAction) ToDefaultActionOutputWithContext(ctx context.Context) DefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DefaultActionOutput)
}

func (e DefaultAction) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return e.ToDefaultActionPtrOutputWithContext(context.Background())
}

func (e DefaultAction) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return DefaultAction(e).ToDefaultActionOutputWithContext(ctx).ToDefaultActionPtrOutputWithContext(ctx)
}

func (e DefaultAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DefaultAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DefaultActionOutput struct{ *pulumi.OutputState }

func (DefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultAction)(nil)).Elem()
}

func (o DefaultActionOutput) ToDefaultActionOutput() DefaultActionOutput {
	return o
}

func (o DefaultActionOutput) ToDefaultActionOutputWithContext(ctx context.Context) DefaultActionOutput {
	return o
}

func (o DefaultActionOutput) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return o.ToDefaultActionPtrOutputWithContext(context.Background())
}

func (o DefaultActionOutput) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefaultAction) *DefaultAction {
		return &v
	}).(DefaultActionPtrOutput)
}

func (o DefaultActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DefaultActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DefaultActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DefaultActionPtrOutput struct{ *pulumi.OutputState }

func (DefaultActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultAction)(nil)).Elem()
}

func (o DefaultActionPtrOutput) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return o
}

func (o DefaultActionPtrOutput) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return o
}

func (o DefaultActionPtrOutput) Elem() DefaultActionOutput {
	return o.ApplyT(func(v *DefaultAction) DefaultAction {
		if v != nil {
			return *v
		}
		var ret DefaultAction
		return ret
	}).(DefaultActionOutput)
}

func (o DefaultActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DefaultAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DefaultActionInput is an input type that accepts values of the DefaultAction enum
// A concrete instance of `DefaultActionInput` can be one of the following:
//
//	DefaultActionAllow
//	DefaultActionDeny
type DefaultActionInput interface {
	pulumi.Input

	ToDefaultActionOutput() DefaultActionOutput
	ToDefaultActionOutputWithContext(context.Context) DefaultActionOutput
}

var defaultActionPtrType = reflect.TypeOf((**DefaultAction)(nil)).Elem()

type DefaultActionPtrInput interface {
	pulumi.Input

	ToDefaultActionPtrOutput() DefaultActionPtrOutput
	ToDefaultActionPtrOutputWithContext(context.Context) DefaultActionPtrOutput
}

type defaultActionPtr string

func DefaultActionPtr(v string) DefaultActionPtrInput {
	return (*defaultActionPtr)(&v)
}

func (*defaultActionPtr) ElementType() reflect.Type {
	return defaultActionPtrType
}

func (in *defaultActionPtr) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return pulumi.ToOutput(in).(DefaultActionPtrOutput)
}

func (in *defaultActionPtr) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DefaultActionPtrOutput)
}

func (in *defaultActionPtr) ToOutput(ctx context.Context) pulumix.Output[*DefaultAction] {
	return pulumix.Output[*DefaultAction]{
		OutputState: in.ToDefaultActionPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentityType] {
	return pulumix.Output[*ManagedServiceIdentityType]{
		OutputState: in.ToManagedServiceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(ControlStateOutput{})
	pulumi.RegisterOutputType(ControlStatePtrOutput{})
	pulumi.RegisterOutputType(DataTypeStateEnumOutput{})
	pulumi.RegisterOutputType(DataTypeStateEnumPtrOutput{})
	pulumi.RegisterOutputType(DefaultActionOutput{})
	pulumi.RegisterOutputType(DefaultActionPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
}
