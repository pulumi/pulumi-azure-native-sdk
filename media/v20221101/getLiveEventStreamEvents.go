// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get stream events telemetry of a live event.
func GetLiveEventStreamEvents(ctx *pulumi.Context, args *GetLiveEventStreamEventsArgs, opts ...pulumi.InvokeOption) (*GetLiveEventStreamEventsResult, error) {
	var rv GetLiveEventStreamEventsResult
	err := ctx.Invoke("azure-native:media/v20221101:getLiveEventStreamEvents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetLiveEventStreamEventsArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The name of the live event, maximum length is 32.
	LiveEventName string `pulumi:"liveEventName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Get live event stream events result.
type GetLiveEventStreamEventsResult struct {
	// The result of the get live event stream events.
	Value []LiveEventStreamEventResponse `pulumi:"value"`
}

func GetLiveEventStreamEventsOutput(ctx *pulumi.Context, args GetLiveEventStreamEventsOutputArgs, opts ...pulumi.InvokeOption) GetLiveEventStreamEventsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLiveEventStreamEventsResult, error) {
			args := v.(GetLiveEventStreamEventsArgs)
			r, err := GetLiveEventStreamEvents(ctx, &args, opts...)
			var s GetLiveEventStreamEventsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLiveEventStreamEventsResultOutput)
}

type GetLiveEventStreamEventsOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the live event, maximum length is 32.
	LiveEventName pulumi.StringInput `pulumi:"liveEventName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetLiveEventStreamEventsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveEventStreamEventsArgs)(nil)).Elem()
}

// Get live event stream events result.
type GetLiveEventStreamEventsResultOutput struct{ *pulumi.OutputState }

func (GetLiveEventStreamEventsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLiveEventStreamEventsResult)(nil)).Elem()
}

func (o GetLiveEventStreamEventsResultOutput) ToGetLiveEventStreamEventsResultOutput() GetLiveEventStreamEventsResultOutput {
	return o
}

func (o GetLiveEventStreamEventsResultOutput) ToGetLiveEventStreamEventsResultOutputWithContext(ctx context.Context) GetLiveEventStreamEventsResultOutput {
	return o
}

// The result of the get live event stream events.
func (o GetLiveEventStreamEventsResultOutput) Value() LiveEventStreamEventResponseArrayOutput {
	return o.ApplyT(func(v GetLiveEventStreamEventsResult) []LiveEventStreamEventResponse { return v.Value }).(LiveEventStreamEventResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLiveEventStreamEventsResultOutput{})
}
