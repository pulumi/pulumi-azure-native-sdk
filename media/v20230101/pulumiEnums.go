// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The type of key used to encrypt the Account Key.
type AccountEncryptionKeyType string

const (
	// The Account Key is encrypted with a System Key.
	AccountEncryptionKeyTypeSystemKey = AccountEncryptionKeyType("SystemKey")
	// The Account Key is encrypted with a Customer Key.
	AccountEncryptionKeyTypeCustomerKey = AccountEncryptionKeyType("CustomerKey")
)

func (AccountEncryptionKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryptionKeyType)(nil)).Elem()
}

func (e AccountEncryptionKeyType) ToAccountEncryptionKeyTypeOutput() AccountEncryptionKeyTypeOutput {
	return pulumi.ToOutput(e).(AccountEncryptionKeyTypeOutput)
}

func (e AccountEncryptionKeyType) ToAccountEncryptionKeyTypeOutputWithContext(ctx context.Context) AccountEncryptionKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccountEncryptionKeyTypeOutput)
}

func (e AccountEncryptionKeyType) ToAccountEncryptionKeyTypePtrOutput() AccountEncryptionKeyTypePtrOutput {
	return e.ToAccountEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (e AccountEncryptionKeyType) ToAccountEncryptionKeyTypePtrOutputWithContext(ctx context.Context) AccountEncryptionKeyTypePtrOutput {
	return AccountEncryptionKeyType(e).ToAccountEncryptionKeyTypeOutputWithContext(ctx).ToAccountEncryptionKeyTypePtrOutputWithContext(ctx)
}

func (e AccountEncryptionKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccountEncryptionKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccountEncryptionKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccountEncryptionKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccountEncryptionKeyTypeOutput struct{ *pulumi.OutputState }

func (AccountEncryptionKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryptionKeyType)(nil)).Elem()
}

func (o AccountEncryptionKeyTypeOutput) ToAccountEncryptionKeyTypeOutput() AccountEncryptionKeyTypeOutput {
	return o
}

func (o AccountEncryptionKeyTypeOutput) ToAccountEncryptionKeyTypeOutputWithContext(ctx context.Context) AccountEncryptionKeyTypeOutput {
	return o
}

func (o AccountEncryptionKeyTypeOutput) ToAccountEncryptionKeyTypePtrOutput() AccountEncryptionKeyTypePtrOutput {
	return o.ToAccountEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (o AccountEncryptionKeyTypeOutput) ToAccountEncryptionKeyTypePtrOutputWithContext(ctx context.Context) AccountEncryptionKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountEncryptionKeyType) *AccountEncryptionKeyType {
		return &v
	}).(AccountEncryptionKeyTypePtrOutput)
}

func (o AccountEncryptionKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccountEncryptionKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccountEncryptionKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccountEncryptionKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccountEncryptionKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccountEncryptionKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccountEncryptionKeyTypePtrOutput struct{ *pulumi.OutputState }

func (AccountEncryptionKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryptionKeyType)(nil)).Elem()
}

func (o AccountEncryptionKeyTypePtrOutput) ToAccountEncryptionKeyTypePtrOutput() AccountEncryptionKeyTypePtrOutput {
	return o
}

func (o AccountEncryptionKeyTypePtrOutput) ToAccountEncryptionKeyTypePtrOutputWithContext(ctx context.Context) AccountEncryptionKeyTypePtrOutput {
	return o
}

func (o AccountEncryptionKeyTypePtrOutput) Elem() AccountEncryptionKeyTypeOutput {
	return o.ApplyT(func(v *AccountEncryptionKeyType) AccountEncryptionKeyType {
		if v != nil {
			return *v
		}
		var ret AccountEncryptionKeyType
		return ret
	}).(AccountEncryptionKeyTypeOutput)
}

func (o AccountEncryptionKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccountEncryptionKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccountEncryptionKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccountEncryptionKeyTypeInput is an input type that accepts values of the AccountEncryptionKeyType enum
// A concrete instance of `AccountEncryptionKeyTypeInput` can be one of the following:
//
//	AccountEncryptionKeyTypeSystemKey
//	AccountEncryptionKeyTypeCustomerKey
type AccountEncryptionKeyTypeInput interface {
	pulumi.Input

	ToAccountEncryptionKeyTypeOutput() AccountEncryptionKeyTypeOutput
	ToAccountEncryptionKeyTypeOutputWithContext(context.Context) AccountEncryptionKeyTypeOutput
}

var accountEncryptionKeyTypePtrType = reflect.TypeOf((**AccountEncryptionKeyType)(nil)).Elem()

type AccountEncryptionKeyTypePtrInput interface {
	pulumi.Input

	ToAccountEncryptionKeyTypePtrOutput() AccountEncryptionKeyTypePtrOutput
	ToAccountEncryptionKeyTypePtrOutputWithContext(context.Context) AccountEncryptionKeyTypePtrOutput
}

type accountEncryptionKeyTypePtr string

func AccountEncryptionKeyTypePtr(v string) AccountEncryptionKeyTypePtrInput {
	return (*accountEncryptionKeyTypePtr)(&v)
}

func (*accountEncryptionKeyTypePtr) ElementType() reflect.Type {
	return accountEncryptionKeyTypePtrType
}

func (in *accountEncryptionKeyTypePtr) ToAccountEncryptionKeyTypePtrOutput() AccountEncryptionKeyTypePtrOutput {
	return pulumi.ToOutput(in).(AccountEncryptionKeyTypePtrOutput)
}

func (in *accountEncryptionKeyTypePtr) ToAccountEncryptionKeyTypePtrOutputWithContext(ctx context.Context) AccountEncryptionKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccountEncryptionKeyTypePtrOutput)
}

func (in *accountEncryptionKeyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AccountEncryptionKeyType] {
	return pulumix.Output[*AccountEncryptionKeyType]{
		OutputState: in.ToAccountEncryptionKeyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The permissions to set on the SAS URL.
type AssetContainerPermission string

const (
	// The SAS URL will allow read access to the container.
	AssetContainerPermissionRead = AssetContainerPermission("Read")
	// The SAS URL will allow read and write access to the container.
	AssetContainerPermissionReadWrite = AssetContainerPermission("ReadWrite")
	// The SAS URL will allow read, write and delete access to the container.
	AssetContainerPermissionReadWriteDelete = AssetContainerPermission("ReadWriteDelete")
)

func (AssetContainerPermission) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetContainerPermission)(nil)).Elem()
}

func (e AssetContainerPermission) ToAssetContainerPermissionOutput() AssetContainerPermissionOutput {
	return pulumi.ToOutput(e).(AssetContainerPermissionOutput)
}

func (e AssetContainerPermission) ToAssetContainerPermissionOutputWithContext(ctx context.Context) AssetContainerPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssetContainerPermissionOutput)
}

func (e AssetContainerPermission) ToAssetContainerPermissionPtrOutput() AssetContainerPermissionPtrOutput {
	return e.ToAssetContainerPermissionPtrOutputWithContext(context.Background())
}

func (e AssetContainerPermission) ToAssetContainerPermissionPtrOutputWithContext(ctx context.Context) AssetContainerPermissionPtrOutput {
	return AssetContainerPermission(e).ToAssetContainerPermissionOutputWithContext(ctx).ToAssetContainerPermissionPtrOutputWithContext(ctx)
}

func (e AssetContainerPermission) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetContainerPermission) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetContainerPermission) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssetContainerPermission) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssetContainerPermissionOutput struct{ *pulumi.OutputState }

func (AssetContainerPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetContainerPermission)(nil)).Elem()
}

func (o AssetContainerPermissionOutput) ToAssetContainerPermissionOutput() AssetContainerPermissionOutput {
	return o
}

func (o AssetContainerPermissionOutput) ToAssetContainerPermissionOutputWithContext(ctx context.Context) AssetContainerPermissionOutput {
	return o
}

func (o AssetContainerPermissionOutput) ToAssetContainerPermissionPtrOutput() AssetContainerPermissionPtrOutput {
	return o.ToAssetContainerPermissionPtrOutputWithContext(context.Background())
}

func (o AssetContainerPermissionOutput) ToAssetContainerPermissionPtrOutputWithContext(ctx context.Context) AssetContainerPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssetContainerPermission) *AssetContainerPermission {
		return &v
	}).(AssetContainerPermissionPtrOutput)
}

func (o AssetContainerPermissionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssetContainerPermissionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetContainerPermission) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssetContainerPermissionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetContainerPermissionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetContainerPermission) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssetContainerPermissionPtrOutput struct{ *pulumi.OutputState }

func (AssetContainerPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetContainerPermission)(nil)).Elem()
}

func (o AssetContainerPermissionPtrOutput) ToAssetContainerPermissionPtrOutput() AssetContainerPermissionPtrOutput {
	return o
}

func (o AssetContainerPermissionPtrOutput) ToAssetContainerPermissionPtrOutputWithContext(ctx context.Context) AssetContainerPermissionPtrOutput {
	return o
}

func (o AssetContainerPermissionPtrOutput) Elem() AssetContainerPermissionOutput {
	return o.ApplyT(func(v *AssetContainerPermission) AssetContainerPermission {
		if v != nil {
			return *v
		}
		var ret AssetContainerPermission
		return ret
	}).(AssetContainerPermissionOutput)
}

func (o AssetContainerPermissionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetContainerPermissionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssetContainerPermission) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssetContainerPermissionInput is an input type that accepts values of the AssetContainerPermission enum
// A concrete instance of `AssetContainerPermissionInput` can be one of the following:
//
//	AssetContainerPermissionRead
//	AssetContainerPermissionReadWrite
//	AssetContainerPermissionReadWriteDelete
type AssetContainerPermissionInput interface {
	pulumi.Input

	ToAssetContainerPermissionOutput() AssetContainerPermissionOutput
	ToAssetContainerPermissionOutputWithContext(context.Context) AssetContainerPermissionOutput
}

var assetContainerPermissionPtrType = reflect.TypeOf((**AssetContainerPermission)(nil)).Elem()

type AssetContainerPermissionPtrInput interface {
	pulumi.Input

	ToAssetContainerPermissionPtrOutput() AssetContainerPermissionPtrOutput
	ToAssetContainerPermissionPtrOutputWithContext(context.Context) AssetContainerPermissionPtrOutput
}

type assetContainerPermissionPtr string

func AssetContainerPermissionPtr(v string) AssetContainerPermissionPtrInput {
	return (*assetContainerPermissionPtr)(&v)
}

func (*assetContainerPermissionPtr) ElementType() reflect.Type {
	return assetContainerPermissionPtrType
}

func (in *assetContainerPermissionPtr) ToAssetContainerPermissionPtrOutput() AssetContainerPermissionPtrOutput {
	return pulumi.ToOutput(in).(AssetContainerPermissionPtrOutput)
}

func (in *assetContainerPermissionPtr) ToAssetContainerPermissionPtrOutputWithContext(ctx context.Context) AssetContainerPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssetContainerPermissionPtrOutput)
}

func (in *assetContainerPermissionPtr) ToOutput(ctx context.Context) pulumix.Output[*AssetContainerPermission] {
	return pulumix.Output[*AssetContainerPermission]{
		OutputState: in.ToAssetContainerPermissionPtrOutputWithContext(ctx).OutputState,
	}
}

// The rental and lease key type.
type ContentKeyPolicyFairPlayRentalAndLeaseKeyType string

const (
	// Represents a ContentKeyPolicyFairPlayRentalAndLeaseKeyType that is unavailable in current API version.
	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeUnknown = ContentKeyPolicyFairPlayRentalAndLeaseKeyType("Unknown")
	// Key duration is not specified.
	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeUndefined = ContentKeyPolicyFairPlayRentalAndLeaseKeyType("Undefined")
	// Dual expiry for offline rental.
	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeDualExpiry = ContentKeyPolicyFairPlayRentalAndLeaseKeyType("DualExpiry")
	// Content key can be persisted with an unlimited duration
	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePersistentUnlimited = ContentKeyPolicyFairPlayRentalAndLeaseKeyType("PersistentUnlimited")
	// Content key can be persisted and the valid duration is limited by the Rental Duration value
	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePersistentLimited = ContentKeyPolicyFairPlayRentalAndLeaseKeyType("PersistentLimited")
)

func (ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyFairPlayRentalAndLeaseKeyType)(nil)).Elem()
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput {
	return pulumi.ToOutput(e).(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput)
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutputWithContext(ctx context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput)
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return e.ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return ContentKeyPolicyFairPlayRentalAndLeaseKeyType(e).ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutputWithContext(ctx).ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(ctx)
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyFairPlayRentalAndLeaseKeyType)(nil)).Elem()
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput {
	return o
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutputWithContext(ctx context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput {
	return o
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return o.ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentKeyPolicyFairPlayRentalAndLeaseKeyType) *ContentKeyPolicyFairPlayRentalAndLeaseKeyType {
		return &v
	}).(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput)
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyFairPlayRentalAndLeaseKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentKeyPolicyFairPlayRentalAndLeaseKeyType)(nil)).Elem()
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return o
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return o
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput) Elem() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput {
	return o.ApplyT(func(v *ContentKeyPolicyFairPlayRentalAndLeaseKeyType) ContentKeyPolicyFairPlayRentalAndLeaseKeyType {
		if v != nil {
			return *v
		}
		var ret ContentKeyPolicyFairPlayRentalAndLeaseKeyType
		return ret
	}).(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput)
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentKeyPolicyFairPlayRentalAndLeaseKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeInput is an input type that accepts values of the ContentKeyPolicyFairPlayRentalAndLeaseKeyType enum
// A concrete instance of `ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeInput` can be one of the following:
//
//	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeUnknown
//	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeUndefined
//	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeDualExpiry
//	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePersistentUnlimited
//	ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePersistentLimited
type ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeInput interface {
	pulumi.Input

	ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput
	ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutputWithContext(context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput
}

var contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrType = reflect.TypeOf((**ContentKeyPolicyFairPlayRentalAndLeaseKeyType)(nil)).Elem()

type ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrInput interface {
	pulumi.Input

	ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput
	ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput
}

type contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr string

func ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr(v string) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrInput {
	return (*contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr)(&v)
}

func (*contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr) ElementType() reflect.Type {
	return contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrType
}

func (in *contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput() ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return pulumi.ToOutput(in).(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput)
}

func (in *contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr) ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput)
}

func (in *contentKeyPolicyFairPlayRentalAndLeaseKeyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ContentKeyPolicyFairPlayRentalAndLeaseKeyType] {
	return pulumix.Output[*ContentKeyPolicyFairPlayRentalAndLeaseKeyType]{
		OutputState: in.ToContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The PlayReady content type.
type ContentKeyPolicyPlayReadyContentType string

const (
	// Represents a ContentKeyPolicyPlayReadyContentType that is unavailable in current API version.
	ContentKeyPolicyPlayReadyContentTypeUnknown = ContentKeyPolicyPlayReadyContentType("Unknown")
	// Unspecified content type.
	ContentKeyPolicyPlayReadyContentTypeUnspecified = ContentKeyPolicyPlayReadyContentType("Unspecified")
	// Ultraviolet download content type.
	ContentKeyPolicyPlayReadyContentTypeUltraVioletDownload = ContentKeyPolicyPlayReadyContentType("UltraVioletDownload")
	// Ultraviolet streaming content type.
	ContentKeyPolicyPlayReadyContentTypeUltraVioletStreaming = ContentKeyPolicyPlayReadyContentType("UltraVioletStreaming")
)

func (ContentKeyPolicyPlayReadyContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyPlayReadyContentType)(nil)).Elem()
}

func (e ContentKeyPolicyPlayReadyContentType) ToContentKeyPolicyPlayReadyContentTypeOutput() ContentKeyPolicyPlayReadyContentTypeOutput {
	return pulumi.ToOutput(e).(ContentKeyPolicyPlayReadyContentTypeOutput)
}

func (e ContentKeyPolicyPlayReadyContentType) ToContentKeyPolicyPlayReadyContentTypeOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentKeyPolicyPlayReadyContentTypeOutput)
}

func (e ContentKeyPolicyPlayReadyContentType) ToContentKeyPolicyPlayReadyContentTypePtrOutput() ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return e.ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyPlayReadyContentType) ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return ContentKeyPolicyPlayReadyContentType(e).ToContentKeyPolicyPlayReadyContentTypeOutputWithContext(ctx).ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(ctx)
}

func (e ContentKeyPolicyPlayReadyContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyPlayReadyContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyPlayReadyContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyPlayReadyContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentKeyPolicyPlayReadyContentTypeOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyPlayReadyContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyPlayReadyContentType)(nil)).Elem()
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToContentKeyPolicyPlayReadyContentTypeOutput() ContentKeyPolicyPlayReadyContentTypeOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToContentKeyPolicyPlayReadyContentTypeOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyContentTypeOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToContentKeyPolicyPlayReadyContentTypePtrOutput() ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return o.ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentKeyPolicyPlayReadyContentType) *ContentKeyPolicyPlayReadyContentType {
		return &v
	}).(ContentKeyPolicyPlayReadyContentTypePtrOutput)
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyPlayReadyContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyPlayReadyContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentKeyPolicyPlayReadyContentTypePtrOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyPlayReadyContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentKeyPolicyPlayReadyContentType)(nil)).Elem()
}

func (o ContentKeyPolicyPlayReadyContentTypePtrOutput) ToContentKeyPolicyPlayReadyContentTypePtrOutput() ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyContentTypePtrOutput) ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyContentTypePtrOutput) Elem() ContentKeyPolicyPlayReadyContentTypeOutput {
	return o.ApplyT(func(v *ContentKeyPolicyPlayReadyContentType) ContentKeyPolicyPlayReadyContentType {
		if v != nil {
			return *v
		}
		var ret ContentKeyPolicyPlayReadyContentType
		return ret
	}).(ContentKeyPolicyPlayReadyContentTypeOutput)
}

func (o ContentKeyPolicyPlayReadyContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentKeyPolicyPlayReadyContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentKeyPolicyPlayReadyContentTypeInput is an input type that accepts values of the ContentKeyPolicyPlayReadyContentType enum
// A concrete instance of `ContentKeyPolicyPlayReadyContentTypeInput` can be one of the following:
//
//	ContentKeyPolicyPlayReadyContentTypeUnknown
//	ContentKeyPolicyPlayReadyContentTypeUnspecified
//	ContentKeyPolicyPlayReadyContentTypeUltraVioletDownload
//	ContentKeyPolicyPlayReadyContentTypeUltraVioletStreaming
type ContentKeyPolicyPlayReadyContentTypeInput interface {
	pulumi.Input

	ToContentKeyPolicyPlayReadyContentTypeOutput() ContentKeyPolicyPlayReadyContentTypeOutput
	ToContentKeyPolicyPlayReadyContentTypeOutputWithContext(context.Context) ContentKeyPolicyPlayReadyContentTypeOutput
}

var contentKeyPolicyPlayReadyContentTypePtrType = reflect.TypeOf((**ContentKeyPolicyPlayReadyContentType)(nil)).Elem()

type ContentKeyPolicyPlayReadyContentTypePtrInput interface {
	pulumi.Input

	ToContentKeyPolicyPlayReadyContentTypePtrOutput() ContentKeyPolicyPlayReadyContentTypePtrOutput
	ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(context.Context) ContentKeyPolicyPlayReadyContentTypePtrOutput
}

type contentKeyPolicyPlayReadyContentTypePtr string

func ContentKeyPolicyPlayReadyContentTypePtr(v string) ContentKeyPolicyPlayReadyContentTypePtrInput {
	return (*contentKeyPolicyPlayReadyContentTypePtr)(&v)
}

func (*contentKeyPolicyPlayReadyContentTypePtr) ElementType() reflect.Type {
	return contentKeyPolicyPlayReadyContentTypePtrType
}

func (in *contentKeyPolicyPlayReadyContentTypePtr) ToContentKeyPolicyPlayReadyContentTypePtrOutput() ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return pulumi.ToOutput(in).(ContentKeyPolicyPlayReadyContentTypePtrOutput)
}

func (in *contentKeyPolicyPlayReadyContentTypePtr) ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentKeyPolicyPlayReadyContentTypePtrOutput)
}

func (in *contentKeyPolicyPlayReadyContentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ContentKeyPolicyPlayReadyContentType] {
	return pulumix.Output[*ContentKeyPolicyPlayReadyContentType]{
		OutputState: in.ToContentKeyPolicyPlayReadyContentTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The license type.
type ContentKeyPolicyPlayReadyLicenseType string

const (
	// Represents a ContentKeyPolicyPlayReadyLicenseType that is unavailable in current API version.
	ContentKeyPolicyPlayReadyLicenseTypeUnknown = ContentKeyPolicyPlayReadyLicenseType("Unknown")
	// Non persistent license.
	ContentKeyPolicyPlayReadyLicenseTypeNonPersistent = ContentKeyPolicyPlayReadyLicenseType("NonPersistent")
	// Persistent license. Allows offline playback.
	ContentKeyPolicyPlayReadyLicenseTypePersistent = ContentKeyPolicyPlayReadyLicenseType("Persistent")
)

func (ContentKeyPolicyPlayReadyLicenseType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyPlayReadyLicenseType)(nil)).Elem()
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToContentKeyPolicyPlayReadyLicenseTypeOutput() ContentKeyPolicyPlayReadyLicenseTypeOutput {
	return pulumi.ToOutput(e).(ContentKeyPolicyPlayReadyLicenseTypeOutput)
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToContentKeyPolicyPlayReadyLicenseTypeOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyLicenseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentKeyPolicyPlayReadyLicenseTypeOutput)
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToContentKeyPolicyPlayReadyLicenseTypePtrOutput() ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return e.ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return ContentKeyPolicyPlayReadyLicenseType(e).ToContentKeyPolicyPlayReadyLicenseTypeOutputWithContext(ctx).ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(ctx)
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyPlayReadyLicenseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentKeyPolicyPlayReadyLicenseTypeOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyPlayReadyLicenseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyPlayReadyLicenseType)(nil)).Elem()
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToContentKeyPolicyPlayReadyLicenseTypeOutput() ContentKeyPolicyPlayReadyLicenseTypeOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToContentKeyPolicyPlayReadyLicenseTypeOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyLicenseTypeOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToContentKeyPolicyPlayReadyLicenseTypePtrOutput() ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return o.ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentKeyPolicyPlayReadyLicenseType) *ContentKeyPolicyPlayReadyLicenseType {
		return &v
	}).(ContentKeyPolicyPlayReadyLicenseTypePtrOutput)
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyPlayReadyLicenseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyLicenseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyPlayReadyLicenseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentKeyPolicyPlayReadyLicenseTypePtrOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyPlayReadyLicenseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentKeyPolicyPlayReadyLicenseType)(nil)).Elem()
}

func (o ContentKeyPolicyPlayReadyLicenseTypePtrOutput) ToContentKeyPolicyPlayReadyLicenseTypePtrOutput() ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyLicenseTypePtrOutput) ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyLicenseTypePtrOutput) Elem() ContentKeyPolicyPlayReadyLicenseTypeOutput {
	return o.ApplyT(func(v *ContentKeyPolicyPlayReadyLicenseType) ContentKeyPolicyPlayReadyLicenseType {
		if v != nil {
			return *v
		}
		var ret ContentKeyPolicyPlayReadyLicenseType
		return ret
	}).(ContentKeyPolicyPlayReadyLicenseTypeOutput)
}

func (o ContentKeyPolicyPlayReadyLicenseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyLicenseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentKeyPolicyPlayReadyLicenseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentKeyPolicyPlayReadyLicenseTypeInput is an input type that accepts values of the ContentKeyPolicyPlayReadyLicenseType enum
// A concrete instance of `ContentKeyPolicyPlayReadyLicenseTypeInput` can be one of the following:
//
//	ContentKeyPolicyPlayReadyLicenseTypeUnknown
//	ContentKeyPolicyPlayReadyLicenseTypeNonPersistent
//	ContentKeyPolicyPlayReadyLicenseTypePersistent
type ContentKeyPolicyPlayReadyLicenseTypeInput interface {
	pulumi.Input

	ToContentKeyPolicyPlayReadyLicenseTypeOutput() ContentKeyPolicyPlayReadyLicenseTypeOutput
	ToContentKeyPolicyPlayReadyLicenseTypeOutputWithContext(context.Context) ContentKeyPolicyPlayReadyLicenseTypeOutput
}

var contentKeyPolicyPlayReadyLicenseTypePtrType = reflect.TypeOf((**ContentKeyPolicyPlayReadyLicenseType)(nil)).Elem()

type ContentKeyPolicyPlayReadyLicenseTypePtrInput interface {
	pulumi.Input

	ToContentKeyPolicyPlayReadyLicenseTypePtrOutput() ContentKeyPolicyPlayReadyLicenseTypePtrOutput
	ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(context.Context) ContentKeyPolicyPlayReadyLicenseTypePtrOutput
}

type contentKeyPolicyPlayReadyLicenseTypePtr string

func ContentKeyPolicyPlayReadyLicenseTypePtr(v string) ContentKeyPolicyPlayReadyLicenseTypePtrInput {
	return (*contentKeyPolicyPlayReadyLicenseTypePtr)(&v)
}

func (*contentKeyPolicyPlayReadyLicenseTypePtr) ElementType() reflect.Type {
	return contentKeyPolicyPlayReadyLicenseTypePtrType
}

func (in *contentKeyPolicyPlayReadyLicenseTypePtr) ToContentKeyPolicyPlayReadyLicenseTypePtrOutput() ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return pulumi.ToOutput(in).(ContentKeyPolicyPlayReadyLicenseTypePtrOutput)
}

func (in *contentKeyPolicyPlayReadyLicenseTypePtr) ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyLicenseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentKeyPolicyPlayReadyLicenseTypePtrOutput)
}

func (in *contentKeyPolicyPlayReadyLicenseTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ContentKeyPolicyPlayReadyLicenseType] {
	return pulumix.Output[*ContentKeyPolicyPlayReadyLicenseType]{
		OutputState: in.ToContentKeyPolicyPlayReadyLicenseTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Configures Unknown output handling settings of the license.
type ContentKeyPolicyPlayReadyUnknownOutputPassingOption string

const (
	// Represents a ContentKeyPolicyPlayReadyUnknownOutputPassingOption that is unavailable in current API version.
	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionUnknown = ContentKeyPolicyPlayReadyUnknownOutputPassingOption("Unknown")
	// Passing the video portion of protected content to an Unknown Output is not allowed.
	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionNotAllowed = ContentKeyPolicyPlayReadyUnknownOutputPassingOption("NotAllowed")
	// Passing the video portion of protected content to an Unknown Output is allowed.
	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionAllowed = ContentKeyPolicyPlayReadyUnknownOutputPassingOption("Allowed")
	// Passing the video portion of protected content to an Unknown Output is allowed but with constrained resolution.
	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionAllowedWithVideoConstriction = ContentKeyPolicyPlayReadyUnknownOutputPassingOption("AllowedWithVideoConstriction")
)

func (ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyPlayReadyUnknownOutputPassingOption)(nil)).Elem()
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput {
	return pulumi.ToOutput(e).(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput)
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput)
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return e.ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return ContentKeyPolicyPlayReadyUnknownOutputPassingOption(e).ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutputWithContext(ctx).ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(ctx)
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyPlayReadyUnknownOutputPassingOption)(nil)).Elem()
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return o.ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentKeyPolicyPlayReadyUnknownOutputPassingOption) *ContentKeyPolicyPlayReadyUnknownOutputPassingOption {
		return &v
	}).(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput)
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyPlayReadyUnknownOutputPassingOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentKeyPolicyPlayReadyUnknownOutputPassingOption)(nil)).Elem()
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return o
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput) Elem() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput {
	return o.ApplyT(func(v *ContentKeyPolicyPlayReadyUnknownOutputPassingOption) ContentKeyPolicyPlayReadyUnknownOutputPassingOption {
		if v != nil {
			return *v
		}
		var ret ContentKeyPolicyPlayReadyUnknownOutputPassingOption
		return ret
	}).(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput)
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentKeyPolicyPlayReadyUnknownOutputPassingOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentKeyPolicyPlayReadyUnknownOutputPassingOptionInput is an input type that accepts values of the ContentKeyPolicyPlayReadyUnknownOutputPassingOption enum
// A concrete instance of `ContentKeyPolicyPlayReadyUnknownOutputPassingOptionInput` can be one of the following:
//
//	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionUnknown
//	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionNotAllowed
//	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionAllowed
//	ContentKeyPolicyPlayReadyUnknownOutputPassingOptionAllowedWithVideoConstriction
type ContentKeyPolicyPlayReadyUnknownOutputPassingOptionInput interface {
	pulumi.Input

	ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput
	ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutputWithContext(context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput
}

var contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrType = reflect.TypeOf((**ContentKeyPolicyPlayReadyUnknownOutputPassingOption)(nil)).Elem()

type ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrInput interface {
	pulumi.Input

	ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput
	ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput
}

type contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr string

func ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr(v string) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrInput {
	return (*contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr)(&v)
}

func (*contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr) ElementType() reflect.Type {
	return contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrType
}

func (in *contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput() ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return pulumi.ToOutput(in).(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput)
}

func (in *contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr) ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(ctx context.Context) ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput)
}

func (in *contentKeyPolicyPlayReadyUnknownOutputPassingOptionPtr) ToOutput(ctx context.Context) pulumix.Output[*ContentKeyPolicyPlayReadyUnknownOutputPassingOption] {
	return pulumix.Output[*ContentKeyPolicyPlayReadyUnknownOutputPassingOption]{
		OutputState: in.ToContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of token.
type ContentKeyPolicyRestrictionTokenType string

const (
	// Represents a ContentKeyPolicyRestrictionTokenType that is unavailable in current API version.
	ContentKeyPolicyRestrictionTokenTypeUnknown = ContentKeyPolicyRestrictionTokenType("Unknown")
	// Simple Web Token.
	ContentKeyPolicyRestrictionTokenTypeSwt = ContentKeyPolicyRestrictionTokenType("Swt")
	// JSON Web Token.
	ContentKeyPolicyRestrictionTokenTypeJwt = ContentKeyPolicyRestrictionTokenType("Jwt")
)

func (ContentKeyPolicyRestrictionTokenType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyRestrictionTokenType)(nil)).Elem()
}

func (e ContentKeyPolicyRestrictionTokenType) ToContentKeyPolicyRestrictionTokenTypeOutput() ContentKeyPolicyRestrictionTokenTypeOutput {
	return pulumi.ToOutput(e).(ContentKeyPolicyRestrictionTokenTypeOutput)
}

func (e ContentKeyPolicyRestrictionTokenType) ToContentKeyPolicyRestrictionTokenTypeOutputWithContext(ctx context.Context) ContentKeyPolicyRestrictionTokenTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentKeyPolicyRestrictionTokenTypeOutput)
}

func (e ContentKeyPolicyRestrictionTokenType) ToContentKeyPolicyRestrictionTokenTypePtrOutput() ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return e.ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyRestrictionTokenType) ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return ContentKeyPolicyRestrictionTokenType(e).ToContentKeyPolicyRestrictionTokenTypeOutputWithContext(ctx).ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(ctx)
}

func (e ContentKeyPolicyRestrictionTokenType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyRestrictionTokenType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentKeyPolicyRestrictionTokenType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentKeyPolicyRestrictionTokenType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentKeyPolicyRestrictionTokenTypeOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyRestrictionTokenTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentKeyPolicyRestrictionTokenType)(nil)).Elem()
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToContentKeyPolicyRestrictionTokenTypeOutput() ContentKeyPolicyRestrictionTokenTypeOutput {
	return o
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToContentKeyPolicyRestrictionTokenTypeOutputWithContext(ctx context.Context) ContentKeyPolicyRestrictionTokenTypeOutput {
	return o
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToContentKeyPolicyRestrictionTokenTypePtrOutput() ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return o.ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentKeyPolicyRestrictionTokenType) *ContentKeyPolicyRestrictionTokenType {
		return &v
	}).(ContentKeyPolicyRestrictionTokenTypePtrOutput)
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyRestrictionTokenType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyRestrictionTokenTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentKeyPolicyRestrictionTokenType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentKeyPolicyRestrictionTokenTypePtrOutput struct{ *pulumi.OutputState }

func (ContentKeyPolicyRestrictionTokenTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentKeyPolicyRestrictionTokenType)(nil)).Elem()
}

func (o ContentKeyPolicyRestrictionTokenTypePtrOutput) ToContentKeyPolicyRestrictionTokenTypePtrOutput() ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return o
}

func (o ContentKeyPolicyRestrictionTokenTypePtrOutput) ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return o
}

func (o ContentKeyPolicyRestrictionTokenTypePtrOutput) Elem() ContentKeyPolicyRestrictionTokenTypeOutput {
	return o.ApplyT(func(v *ContentKeyPolicyRestrictionTokenType) ContentKeyPolicyRestrictionTokenType {
		if v != nil {
			return *v
		}
		var ret ContentKeyPolicyRestrictionTokenType
		return ret
	}).(ContentKeyPolicyRestrictionTokenTypeOutput)
}

func (o ContentKeyPolicyRestrictionTokenTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentKeyPolicyRestrictionTokenTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentKeyPolicyRestrictionTokenType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentKeyPolicyRestrictionTokenTypeInput is an input type that accepts values of the ContentKeyPolicyRestrictionTokenType enum
// A concrete instance of `ContentKeyPolicyRestrictionTokenTypeInput` can be one of the following:
//
//	ContentKeyPolicyRestrictionTokenTypeUnknown
//	ContentKeyPolicyRestrictionTokenTypeSwt
//	ContentKeyPolicyRestrictionTokenTypeJwt
type ContentKeyPolicyRestrictionTokenTypeInput interface {
	pulumi.Input

	ToContentKeyPolicyRestrictionTokenTypeOutput() ContentKeyPolicyRestrictionTokenTypeOutput
	ToContentKeyPolicyRestrictionTokenTypeOutputWithContext(context.Context) ContentKeyPolicyRestrictionTokenTypeOutput
}

var contentKeyPolicyRestrictionTokenTypePtrType = reflect.TypeOf((**ContentKeyPolicyRestrictionTokenType)(nil)).Elem()

type ContentKeyPolicyRestrictionTokenTypePtrInput interface {
	pulumi.Input

	ToContentKeyPolicyRestrictionTokenTypePtrOutput() ContentKeyPolicyRestrictionTokenTypePtrOutput
	ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(context.Context) ContentKeyPolicyRestrictionTokenTypePtrOutput
}

type contentKeyPolicyRestrictionTokenTypePtr string

func ContentKeyPolicyRestrictionTokenTypePtr(v string) ContentKeyPolicyRestrictionTokenTypePtrInput {
	return (*contentKeyPolicyRestrictionTokenTypePtr)(&v)
}

func (*contentKeyPolicyRestrictionTokenTypePtr) ElementType() reflect.Type {
	return contentKeyPolicyRestrictionTokenTypePtrType
}

func (in *contentKeyPolicyRestrictionTokenTypePtr) ToContentKeyPolicyRestrictionTokenTypePtrOutput() ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return pulumi.ToOutput(in).(ContentKeyPolicyRestrictionTokenTypePtrOutput)
}

func (in *contentKeyPolicyRestrictionTokenTypePtr) ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(ctx context.Context) ContentKeyPolicyRestrictionTokenTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentKeyPolicyRestrictionTokenTypePtrOutput)
}

func (in *contentKeyPolicyRestrictionTokenTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ContentKeyPolicyRestrictionTokenType] {
	return pulumix.Output[*ContentKeyPolicyRestrictionTokenType]{
		OutputState: in.ToContentKeyPolicyRestrictionTokenTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The behavior for IP access control in Key Delivery.
type DefaultAction string

const (
	// All public IP addresses are allowed.
	DefaultActionAllow = DefaultAction("Allow")
	// Public IP addresses are blocked.
	DefaultActionDeny = DefaultAction("Deny")
)

func (DefaultAction) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultAction)(nil)).Elem()
}

func (e DefaultAction) ToDefaultActionOutput() DefaultActionOutput {
	return pulumi.ToOutput(e).(DefaultActionOutput)
}

func (e DefaultAction) ToDefaultActionOutputWithContext(ctx context.Context) DefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DefaultActionOutput)
}

func (e DefaultAction) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return e.ToDefaultActionPtrOutputWithContext(context.Background())
}

func (e DefaultAction) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return DefaultAction(e).ToDefaultActionOutputWithContext(ctx).ToDefaultActionPtrOutputWithContext(ctx)
}

func (e DefaultAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DefaultAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DefaultActionOutput struct{ *pulumi.OutputState }

func (DefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultAction)(nil)).Elem()
}

func (o DefaultActionOutput) ToDefaultActionOutput() DefaultActionOutput {
	return o
}

func (o DefaultActionOutput) ToDefaultActionOutputWithContext(ctx context.Context) DefaultActionOutput {
	return o
}

func (o DefaultActionOutput) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return o.ToDefaultActionPtrOutputWithContext(context.Background())
}

func (o DefaultActionOutput) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefaultAction) *DefaultAction {
		return &v
	}).(DefaultActionPtrOutput)
}

func (o DefaultActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DefaultActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DefaultActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DefaultActionPtrOutput struct{ *pulumi.OutputState }

func (DefaultActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultAction)(nil)).Elem()
}

func (o DefaultActionPtrOutput) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return o
}

func (o DefaultActionPtrOutput) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return o
}

func (o DefaultActionPtrOutput) Elem() DefaultActionOutput {
	return o.ApplyT(func(v *DefaultAction) DefaultAction {
		if v != nil {
			return *v
		}
		var ret DefaultAction
		return ret
	}).(DefaultActionOutput)
}

func (o DefaultActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DefaultAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DefaultActionInput is an input type that accepts values of the DefaultAction enum
// A concrete instance of `DefaultActionInput` can be one of the following:
//
//	DefaultActionAllow
//	DefaultActionDeny
type DefaultActionInput interface {
	pulumi.Input

	ToDefaultActionOutput() DefaultActionOutput
	ToDefaultActionOutputWithContext(context.Context) DefaultActionOutput
}

var defaultActionPtrType = reflect.TypeOf((**DefaultAction)(nil)).Elem()

type DefaultActionPtrInput interface {
	pulumi.Input

	ToDefaultActionPtrOutput() DefaultActionPtrOutput
	ToDefaultActionPtrOutputWithContext(context.Context) DefaultActionPtrOutput
}

type defaultActionPtr string

func DefaultActionPtr(v string) DefaultActionPtrInput {
	return (*defaultActionPtr)(&v)
}

func (*defaultActionPtr) ElementType() reflect.Type {
	return defaultActionPtrType
}

func (in *defaultActionPtr) ToDefaultActionPtrOutput() DefaultActionPtrOutput {
	return pulumi.ToOutput(in).(DefaultActionPtrOutput)
}

func (in *defaultActionPtr) ToDefaultActionPtrOutputWithContext(ctx context.Context) DefaultActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DefaultActionPtrOutput)
}

func (in *defaultActionPtr) ToOutput(ctx context.Context) pulumix.Output[*DefaultAction] {
	return pulumix.Output[*DefaultAction]{
		OutputState: in.ToDefaultActionPtrOutputWithContext(ctx).OutputState,
	}
}

// The track property condition operation.
type FilterTrackPropertyCompareOperation string

const (
	// The equal operation.
	FilterTrackPropertyCompareOperationEqual = FilterTrackPropertyCompareOperation("Equal")
	// The not equal operation.
	FilterTrackPropertyCompareOperationNotEqual = FilterTrackPropertyCompareOperation("NotEqual")
)

func (FilterTrackPropertyCompareOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTrackPropertyCompareOperation)(nil)).Elem()
}

func (e FilterTrackPropertyCompareOperation) ToFilterTrackPropertyCompareOperationOutput() FilterTrackPropertyCompareOperationOutput {
	return pulumi.ToOutput(e).(FilterTrackPropertyCompareOperationOutput)
}

func (e FilterTrackPropertyCompareOperation) ToFilterTrackPropertyCompareOperationOutputWithContext(ctx context.Context) FilterTrackPropertyCompareOperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FilterTrackPropertyCompareOperationOutput)
}

func (e FilterTrackPropertyCompareOperation) ToFilterTrackPropertyCompareOperationPtrOutput() FilterTrackPropertyCompareOperationPtrOutput {
	return e.ToFilterTrackPropertyCompareOperationPtrOutputWithContext(context.Background())
}

func (e FilterTrackPropertyCompareOperation) ToFilterTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) FilterTrackPropertyCompareOperationPtrOutput {
	return FilterTrackPropertyCompareOperation(e).ToFilterTrackPropertyCompareOperationOutputWithContext(ctx).ToFilterTrackPropertyCompareOperationPtrOutputWithContext(ctx)
}

func (e FilterTrackPropertyCompareOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FilterTrackPropertyCompareOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FilterTrackPropertyCompareOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FilterTrackPropertyCompareOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FilterTrackPropertyCompareOperationOutput struct{ *pulumi.OutputState }

func (FilterTrackPropertyCompareOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTrackPropertyCompareOperation)(nil)).Elem()
}

func (o FilterTrackPropertyCompareOperationOutput) ToFilterTrackPropertyCompareOperationOutput() FilterTrackPropertyCompareOperationOutput {
	return o
}

func (o FilterTrackPropertyCompareOperationOutput) ToFilterTrackPropertyCompareOperationOutputWithContext(ctx context.Context) FilterTrackPropertyCompareOperationOutput {
	return o
}

func (o FilterTrackPropertyCompareOperationOutput) ToFilterTrackPropertyCompareOperationPtrOutput() FilterTrackPropertyCompareOperationPtrOutput {
	return o.ToFilterTrackPropertyCompareOperationPtrOutputWithContext(context.Background())
}

func (o FilterTrackPropertyCompareOperationOutput) ToFilterTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) FilterTrackPropertyCompareOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterTrackPropertyCompareOperation) *FilterTrackPropertyCompareOperation {
		return &v
	}).(FilterTrackPropertyCompareOperationPtrOutput)
}

func (o FilterTrackPropertyCompareOperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FilterTrackPropertyCompareOperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FilterTrackPropertyCompareOperation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FilterTrackPropertyCompareOperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FilterTrackPropertyCompareOperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FilterTrackPropertyCompareOperation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FilterTrackPropertyCompareOperationPtrOutput struct{ *pulumi.OutputState }

func (FilterTrackPropertyCompareOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterTrackPropertyCompareOperation)(nil)).Elem()
}

func (o FilterTrackPropertyCompareOperationPtrOutput) ToFilterTrackPropertyCompareOperationPtrOutput() FilterTrackPropertyCompareOperationPtrOutput {
	return o
}

func (o FilterTrackPropertyCompareOperationPtrOutput) ToFilterTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) FilterTrackPropertyCompareOperationPtrOutput {
	return o
}

func (o FilterTrackPropertyCompareOperationPtrOutput) Elem() FilterTrackPropertyCompareOperationOutput {
	return o.ApplyT(func(v *FilterTrackPropertyCompareOperation) FilterTrackPropertyCompareOperation {
		if v != nil {
			return *v
		}
		var ret FilterTrackPropertyCompareOperation
		return ret
	}).(FilterTrackPropertyCompareOperationOutput)
}

func (o FilterTrackPropertyCompareOperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FilterTrackPropertyCompareOperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FilterTrackPropertyCompareOperation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FilterTrackPropertyCompareOperationInput is an input type that accepts values of the FilterTrackPropertyCompareOperation enum
// A concrete instance of `FilterTrackPropertyCompareOperationInput` can be one of the following:
//
//	FilterTrackPropertyCompareOperationEqual
//	FilterTrackPropertyCompareOperationNotEqual
type FilterTrackPropertyCompareOperationInput interface {
	pulumi.Input

	ToFilterTrackPropertyCompareOperationOutput() FilterTrackPropertyCompareOperationOutput
	ToFilterTrackPropertyCompareOperationOutputWithContext(context.Context) FilterTrackPropertyCompareOperationOutput
}

var filterTrackPropertyCompareOperationPtrType = reflect.TypeOf((**FilterTrackPropertyCompareOperation)(nil)).Elem()

type FilterTrackPropertyCompareOperationPtrInput interface {
	pulumi.Input

	ToFilterTrackPropertyCompareOperationPtrOutput() FilterTrackPropertyCompareOperationPtrOutput
	ToFilterTrackPropertyCompareOperationPtrOutputWithContext(context.Context) FilterTrackPropertyCompareOperationPtrOutput
}

type filterTrackPropertyCompareOperationPtr string

func FilterTrackPropertyCompareOperationPtr(v string) FilterTrackPropertyCompareOperationPtrInput {
	return (*filterTrackPropertyCompareOperationPtr)(&v)
}

func (*filterTrackPropertyCompareOperationPtr) ElementType() reflect.Type {
	return filterTrackPropertyCompareOperationPtrType
}

func (in *filterTrackPropertyCompareOperationPtr) ToFilterTrackPropertyCompareOperationPtrOutput() FilterTrackPropertyCompareOperationPtrOutput {
	return pulumi.ToOutput(in).(FilterTrackPropertyCompareOperationPtrOutput)
}

func (in *filterTrackPropertyCompareOperationPtr) ToFilterTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) FilterTrackPropertyCompareOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FilterTrackPropertyCompareOperationPtrOutput)
}

func (in *filterTrackPropertyCompareOperationPtr) ToOutput(ctx context.Context) pulumix.Output[*FilterTrackPropertyCompareOperation] {
	return pulumix.Output[*FilterTrackPropertyCompareOperation]{
		OutputState: in.ToFilterTrackPropertyCompareOperationPtrOutputWithContext(ctx).OutputState,
	}
}

// The track property type.
type FilterTrackPropertyType string

const (
	// The unknown track property type.
	FilterTrackPropertyTypeUnknown = FilterTrackPropertyType("Unknown")
	// The type.
	FilterTrackPropertyTypeType = FilterTrackPropertyType("Type")
	// The name.
	FilterTrackPropertyTypeName = FilterTrackPropertyType("Name")
	// The language.
	FilterTrackPropertyTypeLanguage = FilterTrackPropertyType("Language")
	// The fourCC.
	FilterTrackPropertyTypeFourCC = FilterTrackPropertyType("FourCC")
	// The bitrate.
	FilterTrackPropertyTypeBitrate = FilterTrackPropertyType("Bitrate")
)

func (FilterTrackPropertyType) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTrackPropertyType)(nil)).Elem()
}

func (e FilterTrackPropertyType) ToFilterTrackPropertyTypeOutput() FilterTrackPropertyTypeOutput {
	return pulumi.ToOutput(e).(FilterTrackPropertyTypeOutput)
}

func (e FilterTrackPropertyType) ToFilterTrackPropertyTypeOutputWithContext(ctx context.Context) FilterTrackPropertyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FilterTrackPropertyTypeOutput)
}

func (e FilterTrackPropertyType) ToFilterTrackPropertyTypePtrOutput() FilterTrackPropertyTypePtrOutput {
	return e.ToFilterTrackPropertyTypePtrOutputWithContext(context.Background())
}

func (e FilterTrackPropertyType) ToFilterTrackPropertyTypePtrOutputWithContext(ctx context.Context) FilterTrackPropertyTypePtrOutput {
	return FilterTrackPropertyType(e).ToFilterTrackPropertyTypeOutputWithContext(ctx).ToFilterTrackPropertyTypePtrOutputWithContext(ctx)
}

func (e FilterTrackPropertyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FilterTrackPropertyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FilterTrackPropertyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FilterTrackPropertyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FilterTrackPropertyTypeOutput struct{ *pulumi.OutputState }

func (FilterTrackPropertyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTrackPropertyType)(nil)).Elem()
}

func (o FilterTrackPropertyTypeOutput) ToFilterTrackPropertyTypeOutput() FilterTrackPropertyTypeOutput {
	return o
}

func (o FilterTrackPropertyTypeOutput) ToFilterTrackPropertyTypeOutputWithContext(ctx context.Context) FilterTrackPropertyTypeOutput {
	return o
}

func (o FilterTrackPropertyTypeOutput) ToFilterTrackPropertyTypePtrOutput() FilterTrackPropertyTypePtrOutput {
	return o.ToFilterTrackPropertyTypePtrOutputWithContext(context.Background())
}

func (o FilterTrackPropertyTypeOutput) ToFilterTrackPropertyTypePtrOutputWithContext(ctx context.Context) FilterTrackPropertyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterTrackPropertyType) *FilterTrackPropertyType {
		return &v
	}).(FilterTrackPropertyTypePtrOutput)
}

func (o FilterTrackPropertyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FilterTrackPropertyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FilterTrackPropertyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FilterTrackPropertyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FilterTrackPropertyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FilterTrackPropertyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FilterTrackPropertyTypePtrOutput struct{ *pulumi.OutputState }

func (FilterTrackPropertyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterTrackPropertyType)(nil)).Elem()
}

func (o FilterTrackPropertyTypePtrOutput) ToFilterTrackPropertyTypePtrOutput() FilterTrackPropertyTypePtrOutput {
	return o
}

func (o FilterTrackPropertyTypePtrOutput) ToFilterTrackPropertyTypePtrOutputWithContext(ctx context.Context) FilterTrackPropertyTypePtrOutput {
	return o
}

func (o FilterTrackPropertyTypePtrOutput) Elem() FilterTrackPropertyTypeOutput {
	return o.ApplyT(func(v *FilterTrackPropertyType) FilterTrackPropertyType {
		if v != nil {
			return *v
		}
		var ret FilterTrackPropertyType
		return ret
	}).(FilterTrackPropertyTypeOutput)
}

func (o FilterTrackPropertyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FilterTrackPropertyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FilterTrackPropertyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FilterTrackPropertyTypeInput is an input type that accepts values of the FilterTrackPropertyType enum
// A concrete instance of `FilterTrackPropertyTypeInput` can be one of the following:
//
//	FilterTrackPropertyTypeUnknown
//	FilterTrackPropertyTypeType
//	FilterTrackPropertyTypeName
//	FilterTrackPropertyTypeLanguage
//	FilterTrackPropertyTypeFourCC
//	FilterTrackPropertyTypeBitrate
type FilterTrackPropertyTypeInput interface {
	pulumi.Input

	ToFilterTrackPropertyTypeOutput() FilterTrackPropertyTypeOutput
	ToFilterTrackPropertyTypeOutputWithContext(context.Context) FilterTrackPropertyTypeOutput
}

var filterTrackPropertyTypePtrType = reflect.TypeOf((**FilterTrackPropertyType)(nil)).Elem()

type FilterTrackPropertyTypePtrInput interface {
	pulumi.Input

	ToFilterTrackPropertyTypePtrOutput() FilterTrackPropertyTypePtrOutput
	ToFilterTrackPropertyTypePtrOutputWithContext(context.Context) FilterTrackPropertyTypePtrOutput
}

type filterTrackPropertyTypePtr string

func FilterTrackPropertyTypePtr(v string) FilterTrackPropertyTypePtrInput {
	return (*filterTrackPropertyTypePtr)(&v)
}

func (*filterTrackPropertyTypePtr) ElementType() reflect.Type {
	return filterTrackPropertyTypePtrType
}

func (in *filterTrackPropertyTypePtr) ToFilterTrackPropertyTypePtrOutput() FilterTrackPropertyTypePtrOutput {
	return pulumi.ToOutput(in).(FilterTrackPropertyTypePtrOutput)
}

func (in *filterTrackPropertyTypePtr) ToFilterTrackPropertyTypePtrOutputWithContext(ctx context.Context) FilterTrackPropertyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FilterTrackPropertyTypePtrOutput)
}

func (in *filterTrackPropertyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*FilterTrackPropertyType] {
	return pulumix.Output[*FilterTrackPropertyType]{
		OutputState: in.ToFilterTrackPropertyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The minimum TLS version allowed for this account's requests. This is an optional property. If unspecified, a secure default value will be used.
type MinimumTlsVersion string

const (
	// Minimum TLS version is TLS 1.0.
	MinimumTlsVersionTls10 = MinimumTlsVersion("Tls10")
	// Minimum TLS version is TLS 1.1.
	MinimumTlsVersionTls11 = MinimumTlsVersion("Tls11")
	// Minimum TLS version is TLS 1.2.
	MinimumTlsVersionTls12 = MinimumTlsVersion("Tls12")
	// Minimum TLS version is TLS 1.3.
	MinimumTlsVersionTls13 = MinimumTlsVersion("Tls13")
)

func (MinimumTlsVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*MinimumTlsVersion)(nil)).Elem()
}

func (e MinimumTlsVersion) ToMinimumTlsVersionOutput() MinimumTlsVersionOutput {
	return pulumi.ToOutput(e).(MinimumTlsVersionOutput)
}

func (e MinimumTlsVersion) ToMinimumTlsVersionOutputWithContext(ctx context.Context) MinimumTlsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MinimumTlsVersionOutput)
}

func (e MinimumTlsVersion) ToMinimumTlsVersionPtrOutput() MinimumTlsVersionPtrOutput {
	return e.ToMinimumTlsVersionPtrOutputWithContext(context.Background())
}

func (e MinimumTlsVersion) ToMinimumTlsVersionPtrOutputWithContext(ctx context.Context) MinimumTlsVersionPtrOutput {
	return MinimumTlsVersion(e).ToMinimumTlsVersionOutputWithContext(ctx).ToMinimumTlsVersionPtrOutputWithContext(ctx)
}

func (e MinimumTlsVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MinimumTlsVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MinimumTlsVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MinimumTlsVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MinimumTlsVersionOutput struct{ *pulumi.OutputState }

func (MinimumTlsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MinimumTlsVersion)(nil)).Elem()
}

func (o MinimumTlsVersionOutput) ToMinimumTlsVersionOutput() MinimumTlsVersionOutput {
	return o
}

func (o MinimumTlsVersionOutput) ToMinimumTlsVersionOutputWithContext(ctx context.Context) MinimumTlsVersionOutput {
	return o
}

func (o MinimumTlsVersionOutput) ToMinimumTlsVersionPtrOutput() MinimumTlsVersionPtrOutput {
	return o.ToMinimumTlsVersionPtrOutputWithContext(context.Background())
}

func (o MinimumTlsVersionOutput) ToMinimumTlsVersionPtrOutputWithContext(ctx context.Context) MinimumTlsVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MinimumTlsVersion) *MinimumTlsVersion {
		return &v
	}).(MinimumTlsVersionPtrOutput)
}

func (o MinimumTlsVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MinimumTlsVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MinimumTlsVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MinimumTlsVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MinimumTlsVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MinimumTlsVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MinimumTlsVersionPtrOutput struct{ *pulumi.OutputState }

func (MinimumTlsVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MinimumTlsVersion)(nil)).Elem()
}

func (o MinimumTlsVersionPtrOutput) ToMinimumTlsVersionPtrOutput() MinimumTlsVersionPtrOutput {
	return o
}

func (o MinimumTlsVersionPtrOutput) ToMinimumTlsVersionPtrOutputWithContext(ctx context.Context) MinimumTlsVersionPtrOutput {
	return o
}

func (o MinimumTlsVersionPtrOutput) Elem() MinimumTlsVersionOutput {
	return o.ApplyT(func(v *MinimumTlsVersion) MinimumTlsVersion {
		if v != nil {
			return *v
		}
		var ret MinimumTlsVersion
		return ret
	}).(MinimumTlsVersionOutput)
}

func (o MinimumTlsVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MinimumTlsVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MinimumTlsVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MinimumTlsVersionInput is an input type that accepts values of the MinimumTlsVersion enum
// A concrete instance of `MinimumTlsVersionInput` can be one of the following:
//
//	MinimumTlsVersionTls10
//	MinimumTlsVersionTls11
//	MinimumTlsVersionTls12
//	MinimumTlsVersionTls13
type MinimumTlsVersionInput interface {
	pulumi.Input

	ToMinimumTlsVersionOutput() MinimumTlsVersionOutput
	ToMinimumTlsVersionOutputWithContext(context.Context) MinimumTlsVersionOutput
}

var minimumTlsVersionPtrType = reflect.TypeOf((**MinimumTlsVersion)(nil)).Elem()

type MinimumTlsVersionPtrInput interface {
	pulumi.Input

	ToMinimumTlsVersionPtrOutput() MinimumTlsVersionPtrOutput
	ToMinimumTlsVersionPtrOutputWithContext(context.Context) MinimumTlsVersionPtrOutput
}

type minimumTlsVersionPtr string

func MinimumTlsVersionPtr(v string) MinimumTlsVersionPtrInput {
	return (*minimumTlsVersionPtr)(&v)
}

func (*minimumTlsVersionPtr) ElementType() reflect.Type {
	return minimumTlsVersionPtrType
}

func (in *minimumTlsVersionPtr) ToMinimumTlsVersionPtrOutput() MinimumTlsVersionPtrOutput {
	return pulumi.ToOutput(in).(MinimumTlsVersionPtrOutput)
}

func (in *minimumTlsVersionPtr) ToMinimumTlsVersionPtrOutputWithContext(ctx context.Context) MinimumTlsVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MinimumTlsVersionPtrOutput)
}

func (in *minimumTlsVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*MinimumTlsVersion] {
	return pulumix.Output[*MinimumTlsVersion]{
		OutputState: in.ToMinimumTlsVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts values of the PrivateEndpointServiceConnectionStatus enum
// A concrete instance of `PrivateEndpointServiceConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointServiceConnectionStatusPending
//	PrivateEndpointServiceConnectionStatusApproved
//	PrivateEndpointServiceConnectionStatusRejected
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*PrivateEndpointServiceConnectionStatus] {
	return pulumix.Output[*PrivateEndpointServiceConnectionStatus]{
		OutputState: in.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Whether or not public network access is allowed for resources under the Media Services account.
type PublicNetworkAccess string

const (
	// Public network access is enabled.
	PublicNetworkAccessEnabled = PublicNetworkAccess("Enabled")
	// Public network access is disabled.
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*PublicNetworkAccess] {
	return pulumix.Output[*PublicNetworkAccess]{
		OutputState: in.ToPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// The security level.
type SecurityLevel string

const (
	// Represents a SecurityLevel that is unavailable in current API version.
	SecurityLevelUnknown = SecurityLevel("Unknown")
	// For clients under development or test. No protection against unauthorized use.
	SecurityLevelSL150 = SecurityLevel("SL150")
	// For hardened devices and applications consuming commercial content. Software or hardware protection.
	SecurityLevelSL2000 = SecurityLevel("SL2000")
	// For hardened devices only. Hardware protection.
	SecurityLevelSL3000 = SecurityLevel("SL3000")
)

func (SecurityLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityLevel)(nil)).Elem()
}

func (e SecurityLevel) ToSecurityLevelOutput() SecurityLevelOutput {
	return pulumi.ToOutput(e).(SecurityLevelOutput)
}

func (e SecurityLevel) ToSecurityLevelOutputWithContext(ctx context.Context) SecurityLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityLevelOutput)
}

func (e SecurityLevel) ToSecurityLevelPtrOutput() SecurityLevelPtrOutput {
	return e.ToSecurityLevelPtrOutputWithContext(context.Background())
}

func (e SecurityLevel) ToSecurityLevelPtrOutputWithContext(ctx context.Context) SecurityLevelPtrOutput {
	return SecurityLevel(e).ToSecurityLevelOutputWithContext(ctx).ToSecurityLevelPtrOutputWithContext(ctx)
}

func (e SecurityLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityLevelOutput struct{ *pulumi.OutputState }

func (SecurityLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityLevel)(nil)).Elem()
}

func (o SecurityLevelOutput) ToSecurityLevelOutput() SecurityLevelOutput {
	return o
}

func (o SecurityLevelOutput) ToSecurityLevelOutputWithContext(ctx context.Context) SecurityLevelOutput {
	return o
}

func (o SecurityLevelOutput) ToSecurityLevelPtrOutput() SecurityLevelPtrOutput {
	return o.ToSecurityLevelPtrOutputWithContext(context.Background())
}

func (o SecurityLevelOutput) ToSecurityLevelPtrOutputWithContext(ctx context.Context) SecurityLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityLevel) *SecurityLevel {
		return &v
	}).(SecurityLevelPtrOutput)
}

func (o SecurityLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityLevelPtrOutput struct{ *pulumi.OutputState }

func (SecurityLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityLevel)(nil)).Elem()
}

func (o SecurityLevelPtrOutput) ToSecurityLevelPtrOutput() SecurityLevelPtrOutput {
	return o
}

func (o SecurityLevelPtrOutput) ToSecurityLevelPtrOutputWithContext(ctx context.Context) SecurityLevelPtrOutput {
	return o
}

func (o SecurityLevelPtrOutput) Elem() SecurityLevelOutput {
	return o.ApplyT(func(v *SecurityLevel) SecurityLevel {
		if v != nil {
			return *v
		}
		var ret SecurityLevel
		return ret
	}).(SecurityLevelOutput)
}

func (o SecurityLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityLevelInput is an input type that accepts values of the SecurityLevel enum
// A concrete instance of `SecurityLevelInput` can be one of the following:
//
//	SecurityLevelUnknown
//	SecurityLevelSL150
//	SecurityLevelSL2000
//	SecurityLevelSL3000
type SecurityLevelInput interface {
	pulumi.Input

	ToSecurityLevelOutput() SecurityLevelOutput
	ToSecurityLevelOutputWithContext(context.Context) SecurityLevelOutput
}

var securityLevelPtrType = reflect.TypeOf((**SecurityLevel)(nil)).Elem()

type SecurityLevelPtrInput interface {
	pulumi.Input

	ToSecurityLevelPtrOutput() SecurityLevelPtrOutput
	ToSecurityLevelPtrOutputWithContext(context.Context) SecurityLevelPtrOutput
}

type securityLevelPtr string

func SecurityLevelPtr(v string) SecurityLevelPtrInput {
	return (*securityLevelPtr)(&v)
}

func (*securityLevelPtr) ElementType() reflect.Type {
	return securityLevelPtrType
}

func (in *securityLevelPtr) ToSecurityLevelPtrOutput() SecurityLevelPtrOutput {
	return pulumi.ToOutput(in).(SecurityLevelPtrOutput)
}

func (in *securityLevelPtr) ToSecurityLevelPtrOutputWithContext(ctx context.Context) SecurityLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityLevelPtrOutput)
}

func (in *securityLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*SecurityLevel] {
	return pulumix.Output[*SecurityLevel]{
		OutputState: in.ToSecurityLevelPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the storage account.
type StorageAccountType string

const (
	// The primary storage account for the Media Services account.
	StorageAccountTypePrimary = StorageAccountType("Primary")
	// A secondary storage account for the Media Services account.
	StorageAccountTypeSecondary = StorageAccountType("Secondary")
)

func (StorageAccountType) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (e StorageAccountType) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return pulumi.ToOutput(e).(StorageAccountTypeOutput)
}

func (e StorageAccountType) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageAccountTypeOutput)
}

func (e StorageAccountType) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return e.ToStorageAccountTypePtrOutputWithContext(context.Background())
}

func (e StorageAccountType) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return StorageAccountType(e).ToStorageAccountTypeOutputWithContext(ctx).ToStorageAccountTypePtrOutputWithContext(ctx)
}

func (e StorageAccountType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAccountType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAccountType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageAccountType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageAccountTypeOutput struct{ *pulumi.OutputState }

func (StorageAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return o
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return o
}

func (o StorageAccountTypeOutput) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return o.ToStorageAccountTypePtrOutputWithContext(context.Background())
}

func (o StorageAccountTypeOutput) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageAccountType) *StorageAccountType {
		return &v
	}).(StorageAccountTypePtrOutput)
}

func (o StorageAccountTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageAccountTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAccountType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageAccountTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAccountType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageAccountTypePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountType)(nil)).Elem()
}

func (o StorageAccountTypePtrOutput) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return o
}

func (o StorageAccountTypePtrOutput) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return o
}

func (o StorageAccountTypePtrOutput) Elem() StorageAccountTypeOutput {
	return o.ApplyT(func(v *StorageAccountType) StorageAccountType {
		if v != nil {
			return *v
		}
		var ret StorageAccountType
		return ret
	}).(StorageAccountTypeOutput)
}

func (o StorageAccountTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageAccountType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageAccountTypeInput is an input type that accepts values of the StorageAccountType enum
// A concrete instance of `StorageAccountTypeInput` can be one of the following:
//
//	StorageAccountTypePrimary
//	StorageAccountTypeSecondary
type StorageAccountTypeInput interface {
	pulumi.Input

	ToStorageAccountTypeOutput() StorageAccountTypeOutput
	ToStorageAccountTypeOutputWithContext(context.Context) StorageAccountTypeOutput
}

var storageAccountTypePtrType = reflect.TypeOf((**StorageAccountType)(nil)).Elem()

type StorageAccountTypePtrInput interface {
	pulumi.Input

	ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput
	ToStorageAccountTypePtrOutputWithContext(context.Context) StorageAccountTypePtrOutput
}

type storageAccountTypePtr string

func StorageAccountTypePtr(v string) StorageAccountTypePtrInput {
	return (*storageAccountTypePtr)(&v)
}

func (*storageAccountTypePtr) ElementType() reflect.Type {
	return storageAccountTypePtrType
}

func (in *storageAccountTypePtr) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return pulumi.ToOutput(in).(StorageAccountTypePtrOutput)
}

func (in *storageAccountTypePtr) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageAccountTypePtrOutput)
}

func (in *storageAccountTypePtr) ToOutput(ctx context.Context) pulumix.Output[*StorageAccountType] {
	return pulumix.Output[*StorageAccountType]{
		OutputState: in.ToStorageAccountTypePtrOutputWithContext(ctx).OutputState,
	}
}

type StorageAuthentication string

const (
	// System authentication.
	StorageAuthenticationSystem = StorageAuthentication("System")
	// Managed Identity authentication.
	StorageAuthenticationManagedIdentity = StorageAuthentication("ManagedIdentity")
)

func (StorageAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAuthentication)(nil)).Elem()
}

func (e StorageAuthentication) ToStorageAuthenticationOutput() StorageAuthenticationOutput {
	return pulumi.ToOutput(e).(StorageAuthenticationOutput)
}

func (e StorageAuthentication) ToStorageAuthenticationOutputWithContext(ctx context.Context) StorageAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageAuthenticationOutput)
}

func (e StorageAuthentication) ToStorageAuthenticationPtrOutput() StorageAuthenticationPtrOutput {
	return e.ToStorageAuthenticationPtrOutputWithContext(context.Background())
}

func (e StorageAuthentication) ToStorageAuthenticationPtrOutputWithContext(ctx context.Context) StorageAuthenticationPtrOutput {
	return StorageAuthentication(e).ToStorageAuthenticationOutputWithContext(ctx).ToStorageAuthenticationPtrOutputWithContext(ctx)
}

func (e StorageAuthentication) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAuthentication) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAuthentication) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageAuthentication) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageAuthenticationOutput struct{ *pulumi.OutputState }

func (StorageAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAuthentication)(nil)).Elem()
}

func (o StorageAuthenticationOutput) ToStorageAuthenticationOutput() StorageAuthenticationOutput {
	return o
}

func (o StorageAuthenticationOutput) ToStorageAuthenticationOutputWithContext(ctx context.Context) StorageAuthenticationOutput {
	return o
}

func (o StorageAuthenticationOutput) ToStorageAuthenticationPtrOutput() StorageAuthenticationPtrOutput {
	return o.ToStorageAuthenticationPtrOutputWithContext(context.Background())
}

func (o StorageAuthenticationOutput) ToStorageAuthenticationPtrOutputWithContext(ctx context.Context) StorageAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageAuthentication) *StorageAuthentication {
		return &v
	}).(StorageAuthenticationPtrOutput)
}

func (o StorageAuthenticationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageAuthenticationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAuthentication) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageAuthenticationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAuthenticationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAuthentication) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (StorageAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAuthentication)(nil)).Elem()
}

func (o StorageAuthenticationPtrOutput) ToStorageAuthenticationPtrOutput() StorageAuthenticationPtrOutput {
	return o
}

func (o StorageAuthenticationPtrOutput) ToStorageAuthenticationPtrOutputWithContext(ctx context.Context) StorageAuthenticationPtrOutput {
	return o
}

func (o StorageAuthenticationPtrOutput) Elem() StorageAuthenticationOutput {
	return o.ApplyT(func(v *StorageAuthentication) StorageAuthentication {
		if v != nil {
			return *v
		}
		var ret StorageAuthentication
		return ret
	}).(StorageAuthenticationOutput)
}

func (o StorageAuthenticationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAuthenticationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageAuthentication) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageAuthenticationInput is an input type that accepts values of the StorageAuthentication enum
// A concrete instance of `StorageAuthenticationInput` can be one of the following:
//
//	StorageAuthenticationSystem
//	StorageAuthenticationManagedIdentity
type StorageAuthenticationInput interface {
	pulumi.Input

	ToStorageAuthenticationOutput() StorageAuthenticationOutput
	ToStorageAuthenticationOutputWithContext(context.Context) StorageAuthenticationOutput
}

var storageAuthenticationPtrType = reflect.TypeOf((**StorageAuthentication)(nil)).Elem()

type StorageAuthenticationPtrInput interface {
	pulumi.Input

	ToStorageAuthenticationPtrOutput() StorageAuthenticationPtrOutput
	ToStorageAuthenticationPtrOutputWithContext(context.Context) StorageAuthenticationPtrOutput
}

type storageAuthenticationPtr string

func StorageAuthenticationPtr(v string) StorageAuthenticationPtrInput {
	return (*storageAuthenticationPtr)(&v)
}

func (*storageAuthenticationPtr) ElementType() reflect.Type {
	return storageAuthenticationPtrType
}

func (in *storageAuthenticationPtr) ToStorageAuthenticationPtrOutput() StorageAuthenticationPtrOutput {
	return pulumi.ToOutput(in).(StorageAuthenticationPtrOutput)
}

func (in *storageAuthenticationPtr) ToStorageAuthenticationPtrOutputWithContext(ctx context.Context) StorageAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageAuthenticationPtrOutput)
}

func (in *storageAuthenticationPtr) ToOutput(ctx context.Context) pulumix.Output[*StorageAuthentication] {
	return pulumix.Output[*StorageAuthentication]{
		OutputState: in.ToStorageAuthenticationPtrOutputWithContext(ctx).OutputState,
	}
}

// Track property condition operation
type TrackPropertyCompareOperation string

const (
	// Unknown track property compare operation
	TrackPropertyCompareOperationUnknown = TrackPropertyCompareOperation("Unknown")
	// Equal operation
	TrackPropertyCompareOperationEqual = TrackPropertyCompareOperation("Equal")
)

func (TrackPropertyCompareOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackPropertyCompareOperation)(nil)).Elem()
}

func (e TrackPropertyCompareOperation) ToTrackPropertyCompareOperationOutput() TrackPropertyCompareOperationOutput {
	return pulumi.ToOutput(e).(TrackPropertyCompareOperationOutput)
}

func (e TrackPropertyCompareOperation) ToTrackPropertyCompareOperationOutputWithContext(ctx context.Context) TrackPropertyCompareOperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrackPropertyCompareOperationOutput)
}

func (e TrackPropertyCompareOperation) ToTrackPropertyCompareOperationPtrOutput() TrackPropertyCompareOperationPtrOutput {
	return e.ToTrackPropertyCompareOperationPtrOutputWithContext(context.Background())
}

func (e TrackPropertyCompareOperation) ToTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) TrackPropertyCompareOperationPtrOutput {
	return TrackPropertyCompareOperation(e).ToTrackPropertyCompareOperationOutputWithContext(ctx).ToTrackPropertyCompareOperationPtrOutputWithContext(ctx)
}

func (e TrackPropertyCompareOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrackPropertyCompareOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrackPropertyCompareOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrackPropertyCompareOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrackPropertyCompareOperationOutput struct{ *pulumi.OutputState }

func (TrackPropertyCompareOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackPropertyCompareOperation)(nil)).Elem()
}

func (o TrackPropertyCompareOperationOutput) ToTrackPropertyCompareOperationOutput() TrackPropertyCompareOperationOutput {
	return o
}

func (o TrackPropertyCompareOperationOutput) ToTrackPropertyCompareOperationOutputWithContext(ctx context.Context) TrackPropertyCompareOperationOutput {
	return o
}

func (o TrackPropertyCompareOperationOutput) ToTrackPropertyCompareOperationPtrOutput() TrackPropertyCompareOperationPtrOutput {
	return o.ToTrackPropertyCompareOperationPtrOutputWithContext(context.Background())
}

func (o TrackPropertyCompareOperationOutput) ToTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) TrackPropertyCompareOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrackPropertyCompareOperation) *TrackPropertyCompareOperation {
		return &v
	}).(TrackPropertyCompareOperationPtrOutput)
}

func (o TrackPropertyCompareOperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrackPropertyCompareOperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrackPropertyCompareOperation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrackPropertyCompareOperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrackPropertyCompareOperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrackPropertyCompareOperation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrackPropertyCompareOperationPtrOutput struct{ *pulumi.OutputState }

func (TrackPropertyCompareOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrackPropertyCompareOperation)(nil)).Elem()
}

func (o TrackPropertyCompareOperationPtrOutput) ToTrackPropertyCompareOperationPtrOutput() TrackPropertyCompareOperationPtrOutput {
	return o
}

func (o TrackPropertyCompareOperationPtrOutput) ToTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) TrackPropertyCompareOperationPtrOutput {
	return o
}

func (o TrackPropertyCompareOperationPtrOutput) Elem() TrackPropertyCompareOperationOutput {
	return o.ApplyT(func(v *TrackPropertyCompareOperation) TrackPropertyCompareOperation {
		if v != nil {
			return *v
		}
		var ret TrackPropertyCompareOperation
		return ret
	}).(TrackPropertyCompareOperationOutput)
}

func (o TrackPropertyCompareOperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrackPropertyCompareOperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrackPropertyCompareOperation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrackPropertyCompareOperationInput is an input type that accepts values of the TrackPropertyCompareOperation enum
// A concrete instance of `TrackPropertyCompareOperationInput` can be one of the following:
//
//	TrackPropertyCompareOperationUnknown
//	TrackPropertyCompareOperationEqual
type TrackPropertyCompareOperationInput interface {
	pulumi.Input

	ToTrackPropertyCompareOperationOutput() TrackPropertyCompareOperationOutput
	ToTrackPropertyCompareOperationOutputWithContext(context.Context) TrackPropertyCompareOperationOutput
}

var trackPropertyCompareOperationPtrType = reflect.TypeOf((**TrackPropertyCompareOperation)(nil)).Elem()

type TrackPropertyCompareOperationPtrInput interface {
	pulumi.Input

	ToTrackPropertyCompareOperationPtrOutput() TrackPropertyCompareOperationPtrOutput
	ToTrackPropertyCompareOperationPtrOutputWithContext(context.Context) TrackPropertyCompareOperationPtrOutput
}

type trackPropertyCompareOperationPtr string

func TrackPropertyCompareOperationPtr(v string) TrackPropertyCompareOperationPtrInput {
	return (*trackPropertyCompareOperationPtr)(&v)
}

func (*trackPropertyCompareOperationPtr) ElementType() reflect.Type {
	return trackPropertyCompareOperationPtrType
}

func (in *trackPropertyCompareOperationPtr) ToTrackPropertyCompareOperationPtrOutput() TrackPropertyCompareOperationPtrOutput {
	return pulumi.ToOutput(in).(TrackPropertyCompareOperationPtrOutput)
}

func (in *trackPropertyCompareOperationPtr) ToTrackPropertyCompareOperationPtrOutputWithContext(ctx context.Context) TrackPropertyCompareOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrackPropertyCompareOperationPtrOutput)
}

func (in *trackPropertyCompareOperationPtr) ToOutput(ctx context.Context) pulumix.Output[*TrackPropertyCompareOperation] {
	return pulumix.Output[*TrackPropertyCompareOperation]{
		OutputState: in.ToTrackPropertyCompareOperationPtrOutputWithContext(ctx).OutputState,
	}
}

// Track property type
type TrackPropertyType string

const (
	// Unknown track property
	TrackPropertyTypeUnknown = TrackPropertyType("Unknown")
	// Track FourCC
	TrackPropertyTypeFourCC = TrackPropertyType("FourCC")
)

func (TrackPropertyType) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackPropertyType)(nil)).Elem()
}

func (e TrackPropertyType) ToTrackPropertyTypeOutput() TrackPropertyTypeOutput {
	return pulumi.ToOutput(e).(TrackPropertyTypeOutput)
}

func (e TrackPropertyType) ToTrackPropertyTypeOutputWithContext(ctx context.Context) TrackPropertyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrackPropertyTypeOutput)
}

func (e TrackPropertyType) ToTrackPropertyTypePtrOutput() TrackPropertyTypePtrOutput {
	return e.ToTrackPropertyTypePtrOutputWithContext(context.Background())
}

func (e TrackPropertyType) ToTrackPropertyTypePtrOutputWithContext(ctx context.Context) TrackPropertyTypePtrOutput {
	return TrackPropertyType(e).ToTrackPropertyTypeOutputWithContext(ctx).ToTrackPropertyTypePtrOutputWithContext(ctx)
}

func (e TrackPropertyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrackPropertyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrackPropertyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrackPropertyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrackPropertyTypeOutput struct{ *pulumi.OutputState }

func (TrackPropertyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackPropertyType)(nil)).Elem()
}

func (o TrackPropertyTypeOutput) ToTrackPropertyTypeOutput() TrackPropertyTypeOutput {
	return o
}

func (o TrackPropertyTypeOutput) ToTrackPropertyTypeOutputWithContext(ctx context.Context) TrackPropertyTypeOutput {
	return o
}

func (o TrackPropertyTypeOutput) ToTrackPropertyTypePtrOutput() TrackPropertyTypePtrOutput {
	return o.ToTrackPropertyTypePtrOutputWithContext(context.Background())
}

func (o TrackPropertyTypeOutput) ToTrackPropertyTypePtrOutputWithContext(ctx context.Context) TrackPropertyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrackPropertyType) *TrackPropertyType {
		return &v
	}).(TrackPropertyTypePtrOutput)
}

func (o TrackPropertyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrackPropertyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrackPropertyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrackPropertyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrackPropertyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrackPropertyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrackPropertyTypePtrOutput struct{ *pulumi.OutputState }

func (TrackPropertyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrackPropertyType)(nil)).Elem()
}

func (o TrackPropertyTypePtrOutput) ToTrackPropertyTypePtrOutput() TrackPropertyTypePtrOutput {
	return o
}

func (o TrackPropertyTypePtrOutput) ToTrackPropertyTypePtrOutputWithContext(ctx context.Context) TrackPropertyTypePtrOutput {
	return o
}

func (o TrackPropertyTypePtrOutput) Elem() TrackPropertyTypeOutput {
	return o.ApplyT(func(v *TrackPropertyType) TrackPropertyType {
		if v != nil {
			return *v
		}
		var ret TrackPropertyType
		return ret
	}).(TrackPropertyTypeOutput)
}

func (o TrackPropertyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrackPropertyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrackPropertyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrackPropertyTypeInput is an input type that accepts values of the TrackPropertyType enum
// A concrete instance of `TrackPropertyTypeInput` can be one of the following:
//
//	TrackPropertyTypeUnknown
//	TrackPropertyTypeFourCC
type TrackPropertyTypeInput interface {
	pulumi.Input

	ToTrackPropertyTypeOutput() TrackPropertyTypeOutput
	ToTrackPropertyTypeOutputWithContext(context.Context) TrackPropertyTypeOutput
}

var trackPropertyTypePtrType = reflect.TypeOf((**TrackPropertyType)(nil)).Elem()

type TrackPropertyTypePtrInput interface {
	pulumi.Input

	ToTrackPropertyTypePtrOutput() TrackPropertyTypePtrOutput
	ToTrackPropertyTypePtrOutputWithContext(context.Context) TrackPropertyTypePtrOutput
}

type trackPropertyTypePtr string

func TrackPropertyTypePtr(v string) TrackPropertyTypePtrInput {
	return (*trackPropertyTypePtr)(&v)
}

func (*trackPropertyTypePtr) ElementType() reflect.Type {
	return trackPropertyTypePtrType
}

func (in *trackPropertyTypePtr) ToTrackPropertyTypePtrOutput() TrackPropertyTypePtrOutput {
	return pulumi.ToOutput(in).(TrackPropertyTypePtrOutput)
}

func (in *trackPropertyTypePtr) ToTrackPropertyTypePtrOutputWithContext(ctx context.Context) TrackPropertyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrackPropertyTypePtrOutput)
}

func (in *trackPropertyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TrackPropertyType] {
	return pulumix.Output[*TrackPropertyType]{
		OutputState: in.ToTrackPropertyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// When PlayerVisibility is set to "Visible", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to "Hidden", the text will not be available to the client. The default value is "Visible".
type Visibility string

const (
	// The track is hidden to video player.
	VisibilityHidden = Visibility("Hidden")
	// The track is visible to video player.
	VisibilityVisible = Visibility("Visible")
)

func (Visibility) ElementType() reflect.Type {
	return reflect.TypeOf((*Visibility)(nil)).Elem()
}

func (e Visibility) ToVisibilityOutput() VisibilityOutput {
	return pulumi.ToOutput(e).(VisibilityOutput)
}

func (e Visibility) ToVisibilityOutputWithContext(ctx context.Context) VisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VisibilityOutput)
}

func (e Visibility) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return e.ToVisibilityPtrOutputWithContext(context.Background())
}

func (e Visibility) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return Visibility(e).ToVisibilityOutputWithContext(ctx).ToVisibilityPtrOutputWithContext(ctx)
}

func (e Visibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Visibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VisibilityOutput struct{ *pulumi.OutputState }

func (VisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Visibility)(nil)).Elem()
}

func (o VisibilityOutput) ToVisibilityOutput() VisibilityOutput {
	return o
}

func (o VisibilityOutput) ToVisibilityOutputWithContext(ctx context.Context) VisibilityOutput {
	return o
}

func (o VisibilityOutput) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return o.ToVisibilityPtrOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Visibility) *Visibility {
		return &v
	}).(VisibilityPtrOutput)
}

func (o VisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Visibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Visibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VisibilityPtrOutput struct{ *pulumi.OutputState }

func (VisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Visibility)(nil)).Elem()
}

func (o VisibilityPtrOutput) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return o
}

func (o VisibilityPtrOutput) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return o
}

func (o VisibilityPtrOutput) Elem() VisibilityOutput {
	return o.ApplyT(func(v *Visibility) Visibility {
		if v != nil {
			return *v
		}
		var ret Visibility
		return ret
	}).(VisibilityOutput)
}

func (o VisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Visibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VisibilityInput is an input type that accepts values of the Visibility enum
// A concrete instance of `VisibilityInput` can be one of the following:
//
//	VisibilityHidden
//	VisibilityVisible
type VisibilityInput interface {
	pulumi.Input

	ToVisibilityOutput() VisibilityOutput
	ToVisibilityOutputWithContext(context.Context) VisibilityOutput
}

var visibilityPtrType = reflect.TypeOf((**Visibility)(nil)).Elem()

type VisibilityPtrInput interface {
	pulumi.Input

	ToVisibilityPtrOutput() VisibilityPtrOutput
	ToVisibilityPtrOutputWithContext(context.Context) VisibilityPtrOutput
}

type visibilityPtr string

func VisibilityPtr(v string) VisibilityPtrInput {
	return (*visibilityPtr)(&v)
}

func (*visibilityPtr) ElementType() reflect.Type {
	return visibilityPtrType
}

func (in *visibilityPtr) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return pulumi.ToOutput(in).(VisibilityPtrOutput)
}

func (in *visibilityPtr) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VisibilityPtrOutput)
}

func (in *visibilityPtr) ToOutput(ctx context.Context) pulumix.Output[*Visibility] {
	return pulumix.Output[*Visibility]{
		OutputState: in.ToVisibilityPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AccountEncryptionKeyTypeOutput{})
	pulumi.RegisterOutputType(AccountEncryptionKeyTypePtrOutput{})
	pulumi.RegisterOutputType(AssetContainerPermissionOutput{})
	pulumi.RegisterOutputType(AssetContainerPermissionPtrOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypeOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyFairPlayRentalAndLeaseKeyTypePtrOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyPlayReadyContentTypeOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyPlayReadyContentTypePtrOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyPlayReadyLicenseTypeOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyPlayReadyLicenseTypePtrOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyPlayReadyUnknownOutputPassingOptionPtrOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyRestrictionTokenTypeOutput{})
	pulumi.RegisterOutputType(ContentKeyPolicyRestrictionTokenTypePtrOutput{})
	pulumi.RegisterOutputType(DefaultActionOutput{})
	pulumi.RegisterOutputType(DefaultActionPtrOutput{})
	pulumi.RegisterOutputType(FilterTrackPropertyCompareOperationOutput{})
	pulumi.RegisterOutputType(FilterTrackPropertyCompareOperationPtrOutput{})
	pulumi.RegisterOutputType(FilterTrackPropertyTypeOutput{})
	pulumi.RegisterOutputType(FilterTrackPropertyTypePtrOutput{})
	pulumi.RegisterOutputType(MinimumTlsVersionOutput{})
	pulumi.RegisterOutputType(MinimumTlsVersionPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(SecurityLevelOutput{})
	pulumi.RegisterOutputType(SecurityLevelPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountTypeOutput{})
	pulumi.RegisterOutputType(StorageAccountTypePtrOutput{})
	pulumi.RegisterOutputType(StorageAuthenticationOutput{})
	pulumi.RegisterOutputType(StorageAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(TrackPropertyCompareOperationOutput{})
	pulumi.RegisterOutputType(TrackPropertyCompareOperationPtrOutput{})
	pulumi.RegisterOutputType(TrackPropertyTypeOutput{})
	pulumi.RegisterOutputType(TrackPropertyTypePtrOutput{})
	pulumi.RegisterOutputType(VisibilityOutput{})
	pulumi.RegisterOutputType(VisibilityPtrOutput{})
}
