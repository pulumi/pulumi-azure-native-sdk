// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AgentPoolMode represents mode of an agent pool
type AgentPoolMode string

const (
	AgentPoolModeSystem = AgentPoolMode("System")
	AgentPoolModeUser   = AgentPoolMode("User")
)

func (AgentPoolMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolMode)(nil)).Elem()
}

func (e AgentPoolMode) ToAgentPoolModeOutput() AgentPoolModeOutput {
	return pulumi.ToOutput(e).(AgentPoolModeOutput)
}

func (e AgentPoolMode) ToAgentPoolModeOutputWithContext(ctx context.Context) AgentPoolModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AgentPoolModeOutput)
}

func (e AgentPoolMode) ToAgentPoolModePtrOutput() AgentPoolModePtrOutput {
	return e.ToAgentPoolModePtrOutputWithContext(context.Background())
}

func (e AgentPoolMode) ToAgentPoolModePtrOutputWithContext(ctx context.Context) AgentPoolModePtrOutput {
	return AgentPoolMode(e).ToAgentPoolModeOutputWithContext(ctx).ToAgentPoolModePtrOutputWithContext(ctx)
}

func (e AgentPoolMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentPoolMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentPoolMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AgentPoolMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AgentPoolModeOutput struct{ *pulumi.OutputState }

func (AgentPoolModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolMode)(nil)).Elem()
}

func (o AgentPoolModeOutput) ToAgentPoolModeOutput() AgentPoolModeOutput {
	return o
}

func (o AgentPoolModeOutput) ToAgentPoolModeOutputWithContext(ctx context.Context) AgentPoolModeOutput {
	return o
}

func (o AgentPoolModeOutput) ToAgentPoolModePtrOutput() AgentPoolModePtrOutput {
	return o.ToAgentPoolModePtrOutputWithContext(context.Background())
}

func (o AgentPoolModeOutput) ToAgentPoolModePtrOutputWithContext(ctx context.Context) AgentPoolModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPoolMode) *AgentPoolMode {
		return &v
	}).(AgentPoolModePtrOutput)
}

func (o AgentPoolModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AgentPoolModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentPoolMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AgentPoolModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentPoolModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentPoolMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AgentPoolModePtrOutput struct{ *pulumi.OutputState }

func (AgentPoolModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolMode)(nil)).Elem()
}

func (o AgentPoolModePtrOutput) ToAgentPoolModePtrOutput() AgentPoolModePtrOutput {
	return o
}

func (o AgentPoolModePtrOutput) ToAgentPoolModePtrOutputWithContext(ctx context.Context) AgentPoolModePtrOutput {
	return o
}

func (o AgentPoolModePtrOutput) Elem() AgentPoolModeOutput {
	return o.ApplyT(func(v *AgentPoolMode) AgentPoolMode {
		if v != nil {
			return *v
		}
		var ret AgentPoolMode
		return ret
	}).(AgentPoolModeOutput)
}

func (o AgentPoolModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentPoolModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AgentPoolMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AgentPoolModeInput is an input type that accepts values of the AgentPoolMode enum
// A concrete instance of `AgentPoolModeInput` can be one of the following:
//
//	AgentPoolModeSystem
//	AgentPoolModeUser
type AgentPoolModeInput interface {
	pulumi.Input

	ToAgentPoolModeOutput() AgentPoolModeOutput
	ToAgentPoolModeOutputWithContext(context.Context) AgentPoolModeOutput
}

var agentPoolModePtrType = reflect.TypeOf((**AgentPoolMode)(nil)).Elem()

type AgentPoolModePtrInput interface {
	pulumi.Input

	ToAgentPoolModePtrOutput() AgentPoolModePtrOutput
	ToAgentPoolModePtrOutputWithContext(context.Context) AgentPoolModePtrOutput
}

type agentPoolModePtr string

func AgentPoolModePtr(v string) AgentPoolModePtrInput {
	return (*agentPoolModePtr)(&v)
}

func (*agentPoolModePtr) ElementType() reflect.Type {
	return agentPoolModePtrType
}

func (in *agentPoolModePtr) ToAgentPoolModePtrOutput() AgentPoolModePtrOutput {
	return pulumi.ToOutput(in).(AgentPoolModePtrOutput)
}

func (in *agentPoolModePtr) ToAgentPoolModePtrOutputWithContext(ctx context.Context) AgentPoolModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AgentPoolModePtrOutput)
}

// AgentPoolType represents types of an agent pool
type AgentPoolType string

const (
	AgentPoolTypeVirtualMachineScaleSets = AgentPoolType("VirtualMachineScaleSets")
	AgentPoolTypeAvailabilitySet         = AgentPoolType("AvailabilitySet")
)

func (AgentPoolType) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolType)(nil)).Elem()
}

func (e AgentPoolType) ToAgentPoolTypeOutput() AgentPoolTypeOutput {
	return pulumi.ToOutput(e).(AgentPoolTypeOutput)
}

func (e AgentPoolType) ToAgentPoolTypeOutputWithContext(ctx context.Context) AgentPoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AgentPoolTypeOutput)
}

func (e AgentPoolType) ToAgentPoolTypePtrOutput() AgentPoolTypePtrOutput {
	return e.ToAgentPoolTypePtrOutputWithContext(context.Background())
}

func (e AgentPoolType) ToAgentPoolTypePtrOutputWithContext(ctx context.Context) AgentPoolTypePtrOutput {
	return AgentPoolType(e).ToAgentPoolTypeOutputWithContext(ctx).ToAgentPoolTypePtrOutputWithContext(ctx)
}

func (e AgentPoolType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentPoolType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentPoolType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AgentPoolType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AgentPoolTypeOutput struct{ *pulumi.OutputState }

func (AgentPoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolType)(nil)).Elem()
}

func (o AgentPoolTypeOutput) ToAgentPoolTypeOutput() AgentPoolTypeOutput {
	return o
}

func (o AgentPoolTypeOutput) ToAgentPoolTypeOutputWithContext(ctx context.Context) AgentPoolTypeOutput {
	return o
}

func (o AgentPoolTypeOutput) ToAgentPoolTypePtrOutput() AgentPoolTypePtrOutput {
	return o.ToAgentPoolTypePtrOutputWithContext(context.Background())
}

func (o AgentPoolTypeOutput) ToAgentPoolTypePtrOutputWithContext(ctx context.Context) AgentPoolTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPoolType) *AgentPoolType {
		return &v
	}).(AgentPoolTypePtrOutput)
}

func (o AgentPoolTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AgentPoolTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentPoolType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AgentPoolTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentPoolTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentPoolType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AgentPoolTypePtrOutput struct{ *pulumi.OutputState }

func (AgentPoolTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolType)(nil)).Elem()
}

func (o AgentPoolTypePtrOutput) ToAgentPoolTypePtrOutput() AgentPoolTypePtrOutput {
	return o
}

func (o AgentPoolTypePtrOutput) ToAgentPoolTypePtrOutputWithContext(ctx context.Context) AgentPoolTypePtrOutput {
	return o
}

func (o AgentPoolTypePtrOutput) Elem() AgentPoolTypeOutput {
	return o.ApplyT(func(v *AgentPoolType) AgentPoolType {
		if v != nil {
			return *v
		}
		var ret AgentPoolType
		return ret
	}).(AgentPoolTypeOutput)
}

func (o AgentPoolTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentPoolTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AgentPoolType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AgentPoolTypeInput is an input type that accepts values of the AgentPoolType enum
// A concrete instance of `AgentPoolTypeInput` can be one of the following:
//
//	AgentPoolTypeVirtualMachineScaleSets
//	AgentPoolTypeAvailabilitySet
type AgentPoolTypeInput interface {
	pulumi.Input

	ToAgentPoolTypeOutput() AgentPoolTypeOutput
	ToAgentPoolTypeOutputWithContext(context.Context) AgentPoolTypeOutput
}

var agentPoolTypePtrType = reflect.TypeOf((**AgentPoolType)(nil)).Elem()

type AgentPoolTypePtrInput interface {
	pulumi.Input

	ToAgentPoolTypePtrOutput() AgentPoolTypePtrOutput
	ToAgentPoolTypePtrOutputWithContext(context.Context) AgentPoolTypePtrOutput
}

type agentPoolTypePtr string

func AgentPoolTypePtr(v string) AgentPoolTypePtrInput {
	return (*agentPoolTypePtr)(&v)
}

func (*agentPoolTypePtr) ElementType() reflect.Type {
	return agentPoolTypePtrType
}

func (in *agentPoolTypePtr) ToAgentPoolTypePtrOutput() AgentPoolTypePtrOutput {
	return pulumi.ToOutput(in).(AgentPoolTypePtrOutput)
}

func (in *agentPoolTypePtr) ToAgentPoolTypePtrOutputWithContext(ctx context.Context) AgentPoolTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AgentPoolTypePtrOutput)
}

// Size of agent VMs.
type ContainerServiceVMSizeTypes string

const (
	ContainerServiceVMSizeTypes_Standard_A1            = ContainerServiceVMSizeTypes("Standard_A1")
	ContainerServiceVMSizeTypes_Standard_A10           = ContainerServiceVMSizeTypes("Standard_A10")
	ContainerServiceVMSizeTypes_Standard_A11           = ContainerServiceVMSizeTypes("Standard_A11")
	ContainerServiceVMSizeTypes_Standard_A1_v2         = ContainerServiceVMSizeTypes("Standard_A1_v2")
	ContainerServiceVMSizeTypes_Standard_A2            = ContainerServiceVMSizeTypes("Standard_A2")
	ContainerServiceVMSizeTypes_Standard_A2_v2         = ContainerServiceVMSizeTypes("Standard_A2_v2")
	ContainerServiceVMSizeTypes_Standard_A2m_v2        = ContainerServiceVMSizeTypes("Standard_A2m_v2")
	ContainerServiceVMSizeTypes_Standard_A3            = ContainerServiceVMSizeTypes("Standard_A3")
	ContainerServiceVMSizeTypes_Standard_A4            = ContainerServiceVMSizeTypes("Standard_A4")
	ContainerServiceVMSizeTypes_Standard_A4_v2         = ContainerServiceVMSizeTypes("Standard_A4_v2")
	ContainerServiceVMSizeTypes_Standard_A4m_v2        = ContainerServiceVMSizeTypes("Standard_A4m_v2")
	ContainerServiceVMSizeTypes_Standard_A5            = ContainerServiceVMSizeTypes("Standard_A5")
	ContainerServiceVMSizeTypes_Standard_A6            = ContainerServiceVMSizeTypes("Standard_A6")
	ContainerServiceVMSizeTypes_Standard_A7            = ContainerServiceVMSizeTypes("Standard_A7")
	ContainerServiceVMSizeTypes_Standard_A8            = ContainerServiceVMSizeTypes("Standard_A8")
	ContainerServiceVMSizeTypes_Standard_A8_v2         = ContainerServiceVMSizeTypes("Standard_A8_v2")
	ContainerServiceVMSizeTypes_Standard_A8m_v2        = ContainerServiceVMSizeTypes("Standard_A8m_v2")
	ContainerServiceVMSizeTypes_Standard_A9            = ContainerServiceVMSizeTypes("Standard_A9")
	ContainerServiceVMSizeTypes_Standard_B2ms          = ContainerServiceVMSizeTypes("Standard_B2ms")
	ContainerServiceVMSizeTypes_Standard_B2s           = ContainerServiceVMSizeTypes("Standard_B2s")
	ContainerServiceVMSizeTypes_Standard_B4ms          = ContainerServiceVMSizeTypes("Standard_B4ms")
	ContainerServiceVMSizeTypes_Standard_B8ms          = ContainerServiceVMSizeTypes("Standard_B8ms")
	ContainerServiceVMSizeTypes_Standard_D1            = ContainerServiceVMSizeTypes("Standard_D1")
	ContainerServiceVMSizeTypes_Standard_D11           = ContainerServiceVMSizeTypes("Standard_D11")
	ContainerServiceVMSizeTypes_Standard_D11_v2        = ContainerServiceVMSizeTypes("Standard_D11_v2")
	ContainerServiceVMSizeTypes_Standard_D11_v2_Promo  = ContainerServiceVMSizeTypes("Standard_D11_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D12           = ContainerServiceVMSizeTypes("Standard_D12")
	ContainerServiceVMSizeTypes_Standard_D12_v2        = ContainerServiceVMSizeTypes("Standard_D12_v2")
	ContainerServiceVMSizeTypes_Standard_D12_v2_Promo  = ContainerServiceVMSizeTypes("Standard_D12_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D13           = ContainerServiceVMSizeTypes("Standard_D13")
	ContainerServiceVMSizeTypes_Standard_D13_v2        = ContainerServiceVMSizeTypes("Standard_D13_v2")
	ContainerServiceVMSizeTypes_Standard_D13_v2_Promo  = ContainerServiceVMSizeTypes("Standard_D13_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D14           = ContainerServiceVMSizeTypes("Standard_D14")
	ContainerServiceVMSizeTypes_Standard_D14_v2        = ContainerServiceVMSizeTypes("Standard_D14_v2")
	ContainerServiceVMSizeTypes_Standard_D14_v2_Promo  = ContainerServiceVMSizeTypes("Standard_D14_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D15_v2        = ContainerServiceVMSizeTypes("Standard_D15_v2")
	ContainerServiceVMSizeTypes_Standard_D16_v3        = ContainerServiceVMSizeTypes("Standard_D16_v3")
	ContainerServiceVMSizeTypes_Standard_D16s_v3       = ContainerServiceVMSizeTypes("Standard_D16s_v3")
	ContainerServiceVMSizeTypes_Standard_D1_v2         = ContainerServiceVMSizeTypes("Standard_D1_v2")
	ContainerServiceVMSizeTypes_Standard_D2            = ContainerServiceVMSizeTypes("Standard_D2")
	ContainerServiceVMSizeTypes_Standard_D2_v2         = ContainerServiceVMSizeTypes("Standard_D2_v2")
	ContainerServiceVMSizeTypes_Standard_D2_v2_Promo   = ContainerServiceVMSizeTypes("Standard_D2_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D2_v3         = ContainerServiceVMSizeTypes("Standard_D2_v3")
	ContainerServiceVMSizeTypes_Standard_D2s_v3        = ContainerServiceVMSizeTypes("Standard_D2s_v3")
	ContainerServiceVMSizeTypes_Standard_D3            = ContainerServiceVMSizeTypes("Standard_D3")
	ContainerServiceVMSizeTypes_Standard_D32_v3        = ContainerServiceVMSizeTypes("Standard_D32_v3")
	ContainerServiceVMSizeTypes_Standard_D32s_v3       = ContainerServiceVMSizeTypes("Standard_D32s_v3")
	ContainerServiceVMSizeTypes_Standard_D3_v2         = ContainerServiceVMSizeTypes("Standard_D3_v2")
	ContainerServiceVMSizeTypes_Standard_D3_v2_Promo   = ContainerServiceVMSizeTypes("Standard_D3_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D4            = ContainerServiceVMSizeTypes("Standard_D4")
	ContainerServiceVMSizeTypes_Standard_D4_v2         = ContainerServiceVMSizeTypes("Standard_D4_v2")
	ContainerServiceVMSizeTypes_Standard_D4_v2_Promo   = ContainerServiceVMSizeTypes("Standard_D4_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D4_v3         = ContainerServiceVMSizeTypes("Standard_D4_v3")
	ContainerServiceVMSizeTypes_Standard_D4s_v3        = ContainerServiceVMSizeTypes("Standard_D4s_v3")
	ContainerServiceVMSizeTypes_Standard_D5_v2         = ContainerServiceVMSizeTypes("Standard_D5_v2")
	ContainerServiceVMSizeTypes_Standard_D5_v2_Promo   = ContainerServiceVMSizeTypes("Standard_D5_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_D64_v3        = ContainerServiceVMSizeTypes("Standard_D64_v3")
	ContainerServiceVMSizeTypes_Standard_D64s_v3       = ContainerServiceVMSizeTypes("Standard_D64s_v3")
	ContainerServiceVMSizeTypes_Standard_D8_v3         = ContainerServiceVMSizeTypes("Standard_D8_v3")
	ContainerServiceVMSizeTypes_Standard_D8s_v3        = ContainerServiceVMSizeTypes("Standard_D8s_v3")
	ContainerServiceVMSizeTypes_Standard_DS1           = ContainerServiceVMSizeTypes("Standard_DS1")
	ContainerServiceVMSizeTypes_Standard_DS11          = ContainerServiceVMSizeTypes("Standard_DS11")
	ContainerServiceVMSizeTypes_Standard_DS11_v2       = ContainerServiceVMSizeTypes("Standard_DS11_v2")
	ContainerServiceVMSizeTypes_Standard_DS11_v2_Promo = ContainerServiceVMSizeTypes("Standard_DS11_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS12          = ContainerServiceVMSizeTypes("Standard_DS12")
	ContainerServiceVMSizeTypes_Standard_DS12_v2       = ContainerServiceVMSizeTypes("Standard_DS12_v2")
	ContainerServiceVMSizeTypes_Standard_DS12_v2_Promo = ContainerServiceVMSizeTypes("Standard_DS12_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS13          = ContainerServiceVMSizeTypes("Standard_DS13")
	ContainerServiceVMSizeTypes_Standard_DS13_2_v2     = ContainerServiceVMSizeTypes("Standard_DS13-2_v2")
	ContainerServiceVMSizeTypes_Standard_DS13_4_v2     = ContainerServiceVMSizeTypes("Standard_DS13-4_v2")
	ContainerServiceVMSizeTypes_Standard_DS13_v2       = ContainerServiceVMSizeTypes("Standard_DS13_v2")
	ContainerServiceVMSizeTypes_Standard_DS13_v2_Promo = ContainerServiceVMSizeTypes("Standard_DS13_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS14          = ContainerServiceVMSizeTypes("Standard_DS14")
	ContainerServiceVMSizeTypes_Standard_DS14_4_v2     = ContainerServiceVMSizeTypes("Standard_DS14-4_v2")
	ContainerServiceVMSizeTypes_Standard_DS14_8_v2     = ContainerServiceVMSizeTypes("Standard_DS14-8_v2")
	ContainerServiceVMSizeTypes_Standard_DS14_v2       = ContainerServiceVMSizeTypes("Standard_DS14_v2")
	ContainerServiceVMSizeTypes_Standard_DS14_v2_Promo = ContainerServiceVMSizeTypes("Standard_DS14_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS15_v2       = ContainerServiceVMSizeTypes("Standard_DS15_v2")
	ContainerServiceVMSizeTypes_Standard_DS1_v2        = ContainerServiceVMSizeTypes("Standard_DS1_v2")
	ContainerServiceVMSizeTypes_Standard_DS2           = ContainerServiceVMSizeTypes("Standard_DS2")
	ContainerServiceVMSizeTypes_Standard_DS2_v2        = ContainerServiceVMSizeTypes("Standard_DS2_v2")
	ContainerServiceVMSizeTypes_Standard_DS2_v2_Promo  = ContainerServiceVMSizeTypes("Standard_DS2_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS3           = ContainerServiceVMSizeTypes("Standard_DS3")
	ContainerServiceVMSizeTypes_Standard_DS3_v2        = ContainerServiceVMSizeTypes("Standard_DS3_v2")
	ContainerServiceVMSizeTypes_Standard_DS3_v2_Promo  = ContainerServiceVMSizeTypes("Standard_DS3_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS4           = ContainerServiceVMSizeTypes("Standard_DS4")
	ContainerServiceVMSizeTypes_Standard_DS4_v2        = ContainerServiceVMSizeTypes("Standard_DS4_v2")
	ContainerServiceVMSizeTypes_Standard_DS4_v2_Promo  = ContainerServiceVMSizeTypes("Standard_DS4_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_DS5_v2        = ContainerServiceVMSizeTypes("Standard_DS5_v2")
	ContainerServiceVMSizeTypes_Standard_DS5_v2_Promo  = ContainerServiceVMSizeTypes("Standard_DS5_v2_Promo")
	ContainerServiceVMSizeTypes_Standard_E16_v3        = ContainerServiceVMSizeTypes("Standard_E16_v3")
	ContainerServiceVMSizeTypes_Standard_E16s_v3       = ContainerServiceVMSizeTypes("Standard_E16s_v3")
	ContainerServiceVMSizeTypes_Standard_E2_v3         = ContainerServiceVMSizeTypes("Standard_E2_v3")
	ContainerServiceVMSizeTypes_Standard_E2s_v3        = ContainerServiceVMSizeTypes("Standard_E2s_v3")
	ContainerServiceVMSizeTypes_Standard_E32_16s_v3    = ContainerServiceVMSizeTypes("Standard_E32-16s_v3")
	ContainerServiceVMSizeTypes_Standard_E32_8s_v3     = ContainerServiceVMSizeTypes("Standard_E32-8s_v3")
	ContainerServiceVMSizeTypes_Standard_E32_v3        = ContainerServiceVMSizeTypes("Standard_E32_v3")
	ContainerServiceVMSizeTypes_Standard_E32s_v3       = ContainerServiceVMSizeTypes("Standard_E32s_v3")
	ContainerServiceVMSizeTypes_Standard_E4_v3         = ContainerServiceVMSizeTypes("Standard_E4_v3")
	ContainerServiceVMSizeTypes_Standard_E4s_v3        = ContainerServiceVMSizeTypes("Standard_E4s_v3")
	ContainerServiceVMSizeTypes_Standard_E64_16s_v3    = ContainerServiceVMSizeTypes("Standard_E64-16s_v3")
	ContainerServiceVMSizeTypes_Standard_E64_32s_v3    = ContainerServiceVMSizeTypes("Standard_E64-32s_v3")
	ContainerServiceVMSizeTypes_Standard_E64_v3        = ContainerServiceVMSizeTypes("Standard_E64_v3")
	ContainerServiceVMSizeTypes_Standard_E64s_v3       = ContainerServiceVMSizeTypes("Standard_E64s_v3")
	ContainerServiceVMSizeTypes_Standard_E8_v3         = ContainerServiceVMSizeTypes("Standard_E8_v3")
	ContainerServiceVMSizeTypes_Standard_E8s_v3        = ContainerServiceVMSizeTypes("Standard_E8s_v3")
	ContainerServiceVMSizeTypes_Standard_F1            = ContainerServiceVMSizeTypes("Standard_F1")
	ContainerServiceVMSizeTypes_Standard_F16           = ContainerServiceVMSizeTypes("Standard_F16")
	ContainerServiceVMSizeTypes_Standard_F16s          = ContainerServiceVMSizeTypes("Standard_F16s")
	ContainerServiceVMSizeTypes_Standard_F16s_v2       = ContainerServiceVMSizeTypes("Standard_F16s_v2")
	ContainerServiceVMSizeTypes_Standard_F1s           = ContainerServiceVMSizeTypes("Standard_F1s")
	ContainerServiceVMSizeTypes_Standard_F2            = ContainerServiceVMSizeTypes("Standard_F2")
	ContainerServiceVMSizeTypes_Standard_F2s           = ContainerServiceVMSizeTypes("Standard_F2s")
	ContainerServiceVMSizeTypes_Standard_F2s_v2        = ContainerServiceVMSizeTypes("Standard_F2s_v2")
	ContainerServiceVMSizeTypes_Standard_F32s_v2       = ContainerServiceVMSizeTypes("Standard_F32s_v2")
	ContainerServiceVMSizeTypes_Standard_F4            = ContainerServiceVMSizeTypes("Standard_F4")
	ContainerServiceVMSizeTypes_Standard_F4s           = ContainerServiceVMSizeTypes("Standard_F4s")
	ContainerServiceVMSizeTypes_Standard_F4s_v2        = ContainerServiceVMSizeTypes("Standard_F4s_v2")
	ContainerServiceVMSizeTypes_Standard_F64s_v2       = ContainerServiceVMSizeTypes("Standard_F64s_v2")
	ContainerServiceVMSizeTypes_Standard_F72s_v2       = ContainerServiceVMSizeTypes("Standard_F72s_v2")
	ContainerServiceVMSizeTypes_Standard_F8            = ContainerServiceVMSizeTypes("Standard_F8")
	ContainerServiceVMSizeTypes_Standard_F8s           = ContainerServiceVMSizeTypes("Standard_F8s")
	ContainerServiceVMSizeTypes_Standard_F8s_v2        = ContainerServiceVMSizeTypes("Standard_F8s_v2")
	ContainerServiceVMSizeTypes_Standard_G1            = ContainerServiceVMSizeTypes("Standard_G1")
	ContainerServiceVMSizeTypes_Standard_G2            = ContainerServiceVMSizeTypes("Standard_G2")
	ContainerServiceVMSizeTypes_Standard_G3            = ContainerServiceVMSizeTypes("Standard_G3")
	ContainerServiceVMSizeTypes_Standard_G4            = ContainerServiceVMSizeTypes("Standard_G4")
	ContainerServiceVMSizeTypes_Standard_G5            = ContainerServiceVMSizeTypes("Standard_G5")
	ContainerServiceVMSizeTypes_Standard_GS1           = ContainerServiceVMSizeTypes("Standard_GS1")
	ContainerServiceVMSizeTypes_Standard_GS2           = ContainerServiceVMSizeTypes("Standard_GS2")
	ContainerServiceVMSizeTypes_Standard_GS3           = ContainerServiceVMSizeTypes("Standard_GS3")
	ContainerServiceVMSizeTypes_Standard_GS4           = ContainerServiceVMSizeTypes("Standard_GS4")
	ContainerServiceVMSizeTypes_Standard_GS4_4         = ContainerServiceVMSizeTypes("Standard_GS4-4")
	ContainerServiceVMSizeTypes_Standard_GS4_8         = ContainerServiceVMSizeTypes("Standard_GS4-8")
	ContainerServiceVMSizeTypes_Standard_GS5           = ContainerServiceVMSizeTypes("Standard_GS5")
	ContainerServiceVMSizeTypes_Standard_GS5_16        = ContainerServiceVMSizeTypes("Standard_GS5-16")
	ContainerServiceVMSizeTypes_Standard_GS5_8         = ContainerServiceVMSizeTypes("Standard_GS5-8")
	ContainerServiceVMSizeTypes_Standard_H16           = ContainerServiceVMSizeTypes("Standard_H16")
	ContainerServiceVMSizeTypes_Standard_H16m          = ContainerServiceVMSizeTypes("Standard_H16m")
	ContainerServiceVMSizeTypes_Standard_H16mr         = ContainerServiceVMSizeTypes("Standard_H16mr")
	ContainerServiceVMSizeTypes_Standard_H16r          = ContainerServiceVMSizeTypes("Standard_H16r")
	ContainerServiceVMSizeTypes_Standard_H8            = ContainerServiceVMSizeTypes("Standard_H8")
	ContainerServiceVMSizeTypes_Standard_H8m           = ContainerServiceVMSizeTypes("Standard_H8m")
	ContainerServiceVMSizeTypes_Standard_L16s          = ContainerServiceVMSizeTypes("Standard_L16s")
	ContainerServiceVMSizeTypes_Standard_L32s          = ContainerServiceVMSizeTypes("Standard_L32s")
	ContainerServiceVMSizeTypes_Standard_L4s           = ContainerServiceVMSizeTypes("Standard_L4s")
	ContainerServiceVMSizeTypes_Standard_L8s           = ContainerServiceVMSizeTypes("Standard_L8s")
	ContainerServiceVMSizeTypes_Standard_M128_32ms     = ContainerServiceVMSizeTypes("Standard_M128-32ms")
	ContainerServiceVMSizeTypes_Standard_M128_64ms     = ContainerServiceVMSizeTypes("Standard_M128-64ms")
	ContainerServiceVMSizeTypes_Standard_M128ms        = ContainerServiceVMSizeTypes("Standard_M128ms")
	ContainerServiceVMSizeTypes_Standard_M128s         = ContainerServiceVMSizeTypes("Standard_M128s")
	ContainerServiceVMSizeTypes_Standard_M64_16ms      = ContainerServiceVMSizeTypes("Standard_M64-16ms")
	ContainerServiceVMSizeTypes_Standard_M64_32ms      = ContainerServiceVMSizeTypes("Standard_M64-32ms")
	ContainerServiceVMSizeTypes_Standard_M64ms         = ContainerServiceVMSizeTypes("Standard_M64ms")
	ContainerServiceVMSizeTypes_Standard_M64s          = ContainerServiceVMSizeTypes("Standard_M64s")
	ContainerServiceVMSizeTypes_Standard_NC12          = ContainerServiceVMSizeTypes("Standard_NC12")
	ContainerServiceVMSizeTypes_Standard_NC12s_v2      = ContainerServiceVMSizeTypes("Standard_NC12s_v2")
	ContainerServiceVMSizeTypes_Standard_NC12s_v3      = ContainerServiceVMSizeTypes("Standard_NC12s_v3")
	ContainerServiceVMSizeTypes_Standard_NC24          = ContainerServiceVMSizeTypes("Standard_NC24")
	ContainerServiceVMSizeTypes_Standard_NC24r         = ContainerServiceVMSizeTypes("Standard_NC24r")
	ContainerServiceVMSizeTypes_Standard_NC24rs_v2     = ContainerServiceVMSizeTypes("Standard_NC24rs_v2")
	ContainerServiceVMSizeTypes_Standard_NC24rs_v3     = ContainerServiceVMSizeTypes("Standard_NC24rs_v3")
	ContainerServiceVMSizeTypes_Standard_NC24s_v2      = ContainerServiceVMSizeTypes("Standard_NC24s_v2")
	ContainerServiceVMSizeTypes_Standard_NC24s_v3      = ContainerServiceVMSizeTypes("Standard_NC24s_v3")
	ContainerServiceVMSizeTypes_Standard_NC6           = ContainerServiceVMSizeTypes("Standard_NC6")
	ContainerServiceVMSizeTypes_Standard_NC6s_v2       = ContainerServiceVMSizeTypes("Standard_NC6s_v2")
	ContainerServiceVMSizeTypes_Standard_NC6s_v3       = ContainerServiceVMSizeTypes("Standard_NC6s_v3")
	ContainerServiceVMSizeTypes_Standard_ND12s         = ContainerServiceVMSizeTypes("Standard_ND12s")
	ContainerServiceVMSizeTypes_Standard_ND24rs        = ContainerServiceVMSizeTypes("Standard_ND24rs")
	ContainerServiceVMSizeTypes_Standard_ND24s         = ContainerServiceVMSizeTypes("Standard_ND24s")
	ContainerServiceVMSizeTypes_Standard_ND6s          = ContainerServiceVMSizeTypes("Standard_ND6s")
	ContainerServiceVMSizeTypes_Standard_NV12          = ContainerServiceVMSizeTypes("Standard_NV12")
	ContainerServiceVMSizeTypes_Standard_NV24          = ContainerServiceVMSizeTypes("Standard_NV24")
	ContainerServiceVMSizeTypes_Standard_NV6           = ContainerServiceVMSizeTypes("Standard_NV6")
)

func (ContainerServiceVMSizeTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceVMSizeTypes)(nil)).Elem()
}

func (e ContainerServiceVMSizeTypes) ToContainerServiceVMSizeTypesOutput() ContainerServiceVMSizeTypesOutput {
	return pulumi.ToOutput(e).(ContainerServiceVMSizeTypesOutput)
}

func (e ContainerServiceVMSizeTypes) ToContainerServiceVMSizeTypesOutputWithContext(ctx context.Context) ContainerServiceVMSizeTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContainerServiceVMSizeTypesOutput)
}

func (e ContainerServiceVMSizeTypes) ToContainerServiceVMSizeTypesPtrOutput() ContainerServiceVMSizeTypesPtrOutput {
	return e.ToContainerServiceVMSizeTypesPtrOutputWithContext(context.Background())
}

func (e ContainerServiceVMSizeTypes) ToContainerServiceVMSizeTypesPtrOutputWithContext(ctx context.Context) ContainerServiceVMSizeTypesPtrOutput {
	return ContainerServiceVMSizeTypes(e).ToContainerServiceVMSizeTypesOutputWithContext(ctx).ToContainerServiceVMSizeTypesPtrOutputWithContext(ctx)
}

func (e ContainerServiceVMSizeTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerServiceVMSizeTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerServiceVMSizeTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerServiceVMSizeTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContainerServiceVMSizeTypesOutput struct{ *pulumi.OutputState }

func (ContainerServiceVMSizeTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceVMSizeTypes)(nil)).Elem()
}

func (o ContainerServiceVMSizeTypesOutput) ToContainerServiceVMSizeTypesOutput() ContainerServiceVMSizeTypesOutput {
	return o
}

func (o ContainerServiceVMSizeTypesOutput) ToContainerServiceVMSizeTypesOutputWithContext(ctx context.Context) ContainerServiceVMSizeTypesOutput {
	return o
}

func (o ContainerServiceVMSizeTypesOutput) ToContainerServiceVMSizeTypesPtrOutput() ContainerServiceVMSizeTypesPtrOutput {
	return o.ToContainerServiceVMSizeTypesPtrOutputWithContext(context.Background())
}

func (o ContainerServiceVMSizeTypesOutput) ToContainerServiceVMSizeTypesPtrOutputWithContext(ctx context.Context) ContainerServiceVMSizeTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceVMSizeTypes) *ContainerServiceVMSizeTypes {
		return &v
	}).(ContainerServiceVMSizeTypesPtrOutput)
}

func (o ContainerServiceVMSizeTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContainerServiceVMSizeTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerServiceVMSizeTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContainerServiceVMSizeTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerServiceVMSizeTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerServiceVMSizeTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContainerServiceVMSizeTypesPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceVMSizeTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceVMSizeTypes)(nil)).Elem()
}

func (o ContainerServiceVMSizeTypesPtrOutput) ToContainerServiceVMSizeTypesPtrOutput() ContainerServiceVMSizeTypesPtrOutput {
	return o
}

func (o ContainerServiceVMSizeTypesPtrOutput) ToContainerServiceVMSizeTypesPtrOutputWithContext(ctx context.Context) ContainerServiceVMSizeTypesPtrOutput {
	return o
}

func (o ContainerServiceVMSizeTypesPtrOutput) Elem() ContainerServiceVMSizeTypesOutput {
	return o.ApplyT(func(v *ContainerServiceVMSizeTypes) ContainerServiceVMSizeTypes {
		if v != nil {
			return *v
		}
		var ret ContainerServiceVMSizeTypes
		return ret
	}).(ContainerServiceVMSizeTypesOutput)
}

func (o ContainerServiceVMSizeTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerServiceVMSizeTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContainerServiceVMSizeTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContainerServiceVMSizeTypesInput is an input type that accepts values of the ContainerServiceVMSizeTypes enum
// A concrete instance of `ContainerServiceVMSizeTypesInput` can be one of the following:
//
//	ContainerServiceVMSizeTypes_Standard_A1
//	ContainerServiceVMSizeTypes_Standard_A10
//	ContainerServiceVMSizeTypes_Standard_A11
//	ContainerServiceVMSizeTypes_Standard_A1_v2
//	ContainerServiceVMSizeTypes_Standard_A2
//	ContainerServiceVMSizeTypes_Standard_A2_v2
//	ContainerServiceVMSizeTypes_Standard_A2m_v2
//	ContainerServiceVMSizeTypes_Standard_A3
//	ContainerServiceVMSizeTypes_Standard_A4
//	ContainerServiceVMSizeTypes_Standard_A4_v2
//	ContainerServiceVMSizeTypes_Standard_A4m_v2
//	ContainerServiceVMSizeTypes_Standard_A5
//	ContainerServiceVMSizeTypes_Standard_A6
//	ContainerServiceVMSizeTypes_Standard_A7
//	ContainerServiceVMSizeTypes_Standard_A8
//	ContainerServiceVMSizeTypes_Standard_A8_v2
//	ContainerServiceVMSizeTypes_Standard_A8m_v2
//	ContainerServiceVMSizeTypes_Standard_A9
//	ContainerServiceVMSizeTypes_Standard_B2ms
//	ContainerServiceVMSizeTypes_Standard_B2s
//	ContainerServiceVMSizeTypes_Standard_B4ms
//	ContainerServiceVMSizeTypes_Standard_B8ms
//	ContainerServiceVMSizeTypes_Standard_D1
//	ContainerServiceVMSizeTypes_Standard_D11
//	ContainerServiceVMSizeTypes_Standard_D11_v2
//	ContainerServiceVMSizeTypes_Standard_D11_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D12
//	ContainerServiceVMSizeTypes_Standard_D12_v2
//	ContainerServiceVMSizeTypes_Standard_D12_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D13
//	ContainerServiceVMSizeTypes_Standard_D13_v2
//	ContainerServiceVMSizeTypes_Standard_D13_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D14
//	ContainerServiceVMSizeTypes_Standard_D14_v2
//	ContainerServiceVMSizeTypes_Standard_D14_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D15_v2
//	ContainerServiceVMSizeTypes_Standard_D16_v3
//	ContainerServiceVMSizeTypes_Standard_D16s_v3
//	ContainerServiceVMSizeTypes_Standard_D1_v2
//	ContainerServiceVMSizeTypes_Standard_D2
//	ContainerServiceVMSizeTypes_Standard_D2_v2
//	ContainerServiceVMSizeTypes_Standard_D2_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D2_v3
//	ContainerServiceVMSizeTypes_Standard_D2s_v3
//	ContainerServiceVMSizeTypes_Standard_D3
//	ContainerServiceVMSizeTypes_Standard_D32_v3
//	ContainerServiceVMSizeTypes_Standard_D32s_v3
//	ContainerServiceVMSizeTypes_Standard_D3_v2
//	ContainerServiceVMSizeTypes_Standard_D3_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D4
//	ContainerServiceVMSizeTypes_Standard_D4_v2
//	ContainerServiceVMSizeTypes_Standard_D4_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D4_v3
//	ContainerServiceVMSizeTypes_Standard_D4s_v3
//	ContainerServiceVMSizeTypes_Standard_D5_v2
//	ContainerServiceVMSizeTypes_Standard_D5_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_D64_v3
//	ContainerServiceVMSizeTypes_Standard_D64s_v3
//	ContainerServiceVMSizeTypes_Standard_D8_v3
//	ContainerServiceVMSizeTypes_Standard_D8s_v3
//	ContainerServiceVMSizeTypes_Standard_DS1
//	ContainerServiceVMSizeTypes_Standard_DS11
//	ContainerServiceVMSizeTypes_Standard_DS11_v2
//	ContainerServiceVMSizeTypes_Standard_DS11_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS12
//	ContainerServiceVMSizeTypes_Standard_DS12_v2
//	ContainerServiceVMSizeTypes_Standard_DS12_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS13
//	ContainerServiceVMSizeTypes_Standard_DS13_2_v2
//	ContainerServiceVMSizeTypes_Standard_DS13_4_v2
//	ContainerServiceVMSizeTypes_Standard_DS13_v2
//	ContainerServiceVMSizeTypes_Standard_DS13_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS14
//	ContainerServiceVMSizeTypes_Standard_DS14_4_v2
//	ContainerServiceVMSizeTypes_Standard_DS14_8_v2
//	ContainerServiceVMSizeTypes_Standard_DS14_v2
//	ContainerServiceVMSizeTypes_Standard_DS14_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS15_v2
//	ContainerServiceVMSizeTypes_Standard_DS1_v2
//	ContainerServiceVMSizeTypes_Standard_DS2
//	ContainerServiceVMSizeTypes_Standard_DS2_v2
//	ContainerServiceVMSizeTypes_Standard_DS2_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS3
//	ContainerServiceVMSizeTypes_Standard_DS3_v2
//	ContainerServiceVMSizeTypes_Standard_DS3_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS4
//	ContainerServiceVMSizeTypes_Standard_DS4_v2
//	ContainerServiceVMSizeTypes_Standard_DS4_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_DS5_v2
//	ContainerServiceVMSizeTypes_Standard_DS5_v2_Promo
//	ContainerServiceVMSizeTypes_Standard_E16_v3
//	ContainerServiceVMSizeTypes_Standard_E16s_v3
//	ContainerServiceVMSizeTypes_Standard_E2_v3
//	ContainerServiceVMSizeTypes_Standard_E2s_v3
//	ContainerServiceVMSizeTypes_Standard_E32_16s_v3
//	ContainerServiceVMSizeTypes_Standard_E32_8s_v3
//	ContainerServiceVMSizeTypes_Standard_E32_v3
//	ContainerServiceVMSizeTypes_Standard_E32s_v3
//	ContainerServiceVMSizeTypes_Standard_E4_v3
//	ContainerServiceVMSizeTypes_Standard_E4s_v3
//	ContainerServiceVMSizeTypes_Standard_E64_16s_v3
//	ContainerServiceVMSizeTypes_Standard_E64_32s_v3
//	ContainerServiceVMSizeTypes_Standard_E64_v3
//	ContainerServiceVMSizeTypes_Standard_E64s_v3
//	ContainerServiceVMSizeTypes_Standard_E8_v3
//	ContainerServiceVMSizeTypes_Standard_E8s_v3
//	ContainerServiceVMSizeTypes_Standard_F1
//	ContainerServiceVMSizeTypes_Standard_F16
//	ContainerServiceVMSizeTypes_Standard_F16s
//	ContainerServiceVMSizeTypes_Standard_F16s_v2
//	ContainerServiceVMSizeTypes_Standard_F1s
//	ContainerServiceVMSizeTypes_Standard_F2
//	ContainerServiceVMSizeTypes_Standard_F2s
//	ContainerServiceVMSizeTypes_Standard_F2s_v2
//	ContainerServiceVMSizeTypes_Standard_F32s_v2
//	ContainerServiceVMSizeTypes_Standard_F4
//	ContainerServiceVMSizeTypes_Standard_F4s
//	ContainerServiceVMSizeTypes_Standard_F4s_v2
//	ContainerServiceVMSizeTypes_Standard_F64s_v2
//	ContainerServiceVMSizeTypes_Standard_F72s_v2
//	ContainerServiceVMSizeTypes_Standard_F8
//	ContainerServiceVMSizeTypes_Standard_F8s
//	ContainerServiceVMSizeTypes_Standard_F8s_v2
//	ContainerServiceVMSizeTypes_Standard_G1
//	ContainerServiceVMSizeTypes_Standard_G2
//	ContainerServiceVMSizeTypes_Standard_G3
//	ContainerServiceVMSizeTypes_Standard_G4
//	ContainerServiceVMSizeTypes_Standard_G5
//	ContainerServiceVMSizeTypes_Standard_GS1
//	ContainerServiceVMSizeTypes_Standard_GS2
//	ContainerServiceVMSizeTypes_Standard_GS3
//	ContainerServiceVMSizeTypes_Standard_GS4
//	ContainerServiceVMSizeTypes_Standard_GS4_4
//	ContainerServiceVMSizeTypes_Standard_GS4_8
//	ContainerServiceVMSizeTypes_Standard_GS5
//	ContainerServiceVMSizeTypes_Standard_GS5_16
//	ContainerServiceVMSizeTypes_Standard_GS5_8
//	ContainerServiceVMSizeTypes_Standard_H16
//	ContainerServiceVMSizeTypes_Standard_H16m
//	ContainerServiceVMSizeTypes_Standard_H16mr
//	ContainerServiceVMSizeTypes_Standard_H16r
//	ContainerServiceVMSizeTypes_Standard_H8
//	ContainerServiceVMSizeTypes_Standard_H8m
//	ContainerServiceVMSizeTypes_Standard_L16s
//	ContainerServiceVMSizeTypes_Standard_L32s
//	ContainerServiceVMSizeTypes_Standard_L4s
//	ContainerServiceVMSizeTypes_Standard_L8s
//	ContainerServiceVMSizeTypes_Standard_M128_32ms
//	ContainerServiceVMSizeTypes_Standard_M128_64ms
//	ContainerServiceVMSizeTypes_Standard_M128ms
//	ContainerServiceVMSizeTypes_Standard_M128s
//	ContainerServiceVMSizeTypes_Standard_M64_16ms
//	ContainerServiceVMSizeTypes_Standard_M64_32ms
//	ContainerServiceVMSizeTypes_Standard_M64ms
//	ContainerServiceVMSizeTypes_Standard_M64s
//	ContainerServiceVMSizeTypes_Standard_NC12
//	ContainerServiceVMSizeTypes_Standard_NC12s_v2
//	ContainerServiceVMSizeTypes_Standard_NC12s_v3
//	ContainerServiceVMSizeTypes_Standard_NC24
//	ContainerServiceVMSizeTypes_Standard_NC24r
//	ContainerServiceVMSizeTypes_Standard_NC24rs_v2
//	ContainerServiceVMSizeTypes_Standard_NC24rs_v3
//	ContainerServiceVMSizeTypes_Standard_NC24s_v2
//	ContainerServiceVMSizeTypes_Standard_NC24s_v3
//	ContainerServiceVMSizeTypes_Standard_NC6
//	ContainerServiceVMSizeTypes_Standard_NC6s_v2
//	ContainerServiceVMSizeTypes_Standard_NC6s_v3
//	ContainerServiceVMSizeTypes_Standard_ND12s
//	ContainerServiceVMSizeTypes_Standard_ND24rs
//	ContainerServiceVMSizeTypes_Standard_ND24s
//	ContainerServiceVMSizeTypes_Standard_ND6s
//	ContainerServiceVMSizeTypes_Standard_NV12
//	ContainerServiceVMSizeTypes_Standard_NV24
//	ContainerServiceVMSizeTypes_Standard_NV6
type ContainerServiceVMSizeTypesInput interface {
	pulumi.Input

	ToContainerServiceVMSizeTypesOutput() ContainerServiceVMSizeTypesOutput
	ToContainerServiceVMSizeTypesOutputWithContext(context.Context) ContainerServiceVMSizeTypesOutput
}

var containerServiceVMSizeTypesPtrType = reflect.TypeOf((**ContainerServiceVMSizeTypes)(nil)).Elem()

type ContainerServiceVMSizeTypesPtrInput interface {
	pulumi.Input

	ToContainerServiceVMSizeTypesPtrOutput() ContainerServiceVMSizeTypesPtrOutput
	ToContainerServiceVMSizeTypesPtrOutputWithContext(context.Context) ContainerServiceVMSizeTypesPtrOutput
}

type containerServiceVMSizeTypesPtr string

func ContainerServiceVMSizeTypesPtr(v string) ContainerServiceVMSizeTypesPtrInput {
	return (*containerServiceVMSizeTypesPtr)(&v)
}

func (*containerServiceVMSizeTypesPtr) ElementType() reflect.Type {
	return containerServiceVMSizeTypesPtrType
}

func (in *containerServiceVMSizeTypesPtr) ToContainerServiceVMSizeTypesPtrOutput() ContainerServiceVMSizeTypesPtrOutput {
	return pulumi.ToOutput(in).(ContainerServiceVMSizeTypesPtrOutput)
}

func (in *containerServiceVMSizeTypesPtr) ToContainerServiceVMSizeTypesPtrOutputWithContext(ctx context.Context) ContainerServiceVMSizeTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContainerServiceVMSizeTypesPtrOutput)
}

// KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Currently allows one value, OS, resulting in Kubelet using the OS disk for data.
type KubeletDiskType string

const (
	KubeletDiskTypeOS        = KubeletDiskType("OS")
	KubeletDiskTypeTemporary = KubeletDiskType("Temporary")
)

func (KubeletDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletDiskType)(nil)).Elem()
}

func (e KubeletDiskType) ToKubeletDiskTypeOutput() KubeletDiskTypeOutput {
	return pulumi.ToOutput(e).(KubeletDiskTypeOutput)
}

func (e KubeletDiskType) ToKubeletDiskTypeOutputWithContext(ctx context.Context) KubeletDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KubeletDiskTypeOutput)
}

func (e KubeletDiskType) ToKubeletDiskTypePtrOutput() KubeletDiskTypePtrOutput {
	return e.ToKubeletDiskTypePtrOutputWithContext(context.Background())
}

func (e KubeletDiskType) ToKubeletDiskTypePtrOutputWithContext(ctx context.Context) KubeletDiskTypePtrOutput {
	return KubeletDiskType(e).ToKubeletDiskTypeOutputWithContext(ctx).ToKubeletDiskTypePtrOutputWithContext(ctx)
}

func (e KubeletDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KubeletDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KubeletDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KubeletDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KubeletDiskTypeOutput struct{ *pulumi.OutputState }

func (KubeletDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletDiskType)(nil)).Elem()
}

func (o KubeletDiskTypeOutput) ToKubeletDiskTypeOutput() KubeletDiskTypeOutput {
	return o
}

func (o KubeletDiskTypeOutput) ToKubeletDiskTypeOutputWithContext(ctx context.Context) KubeletDiskTypeOutput {
	return o
}

func (o KubeletDiskTypeOutput) ToKubeletDiskTypePtrOutput() KubeletDiskTypePtrOutput {
	return o.ToKubeletDiskTypePtrOutputWithContext(context.Background())
}

func (o KubeletDiskTypeOutput) ToKubeletDiskTypePtrOutputWithContext(ctx context.Context) KubeletDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubeletDiskType) *KubeletDiskType {
		return &v
	}).(KubeletDiskTypePtrOutput)
}

func (o KubeletDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KubeletDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KubeletDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KubeletDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KubeletDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KubeletDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KubeletDiskTypePtrOutput struct{ *pulumi.OutputState }

func (KubeletDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeletDiskType)(nil)).Elem()
}

func (o KubeletDiskTypePtrOutput) ToKubeletDiskTypePtrOutput() KubeletDiskTypePtrOutput {
	return o
}

func (o KubeletDiskTypePtrOutput) ToKubeletDiskTypePtrOutputWithContext(ctx context.Context) KubeletDiskTypePtrOutput {
	return o
}

func (o KubeletDiskTypePtrOutput) Elem() KubeletDiskTypeOutput {
	return o.ApplyT(func(v *KubeletDiskType) KubeletDiskType {
		if v != nil {
			return *v
		}
		var ret KubeletDiskType
		return ret
	}).(KubeletDiskTypeOutput)
}

func (o KubeletDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KubeletDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KubeletDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KubeletDiskTypeInput is an input type that accepts values of the KubeletDiskType enum
// A concrete instance of `KubeletDiskTypeInput` can be one of the following:
//
//	KubeletDiskTypeOS
//	KubeletDiskTypeTemporary
type KubeletDiskTypeInput interface {
	pulumi.Input

	ToKubeletDiskTypeOutput() KubeletDiskTypeOutput
	ToKubeletDiskTypeOutputWithContext(context.Context) KubeletDiskTypeOutput
}

var kubeletDiskTypePtrType = reflect.TypeOf((**KubeletDiskType)(nil)).Elem()

type KubeletDiskTypePtrInput interface {
	pulumi.Input

	ToKubeletDiskTypePtrOutput() KubeletDiskTypePtrOutput
	ToKubeletDiskTypePtrOutputWithContext(context.Context) KubeletDiskTypePtrOutput
}

type kubeletDiskTypePtr string

func KubeletDiskTypePtr(v string) KubeletDiskTypePtrInput {
	return (*kubeletDiskTypePtr)(&v)
}

func (*kubeletDiskTypePtr) ElementType() reflect.Type {
	return kubeletDiskTypePtrType
}

func (in *kubeletDiskTypePtr) ToKubeletDiskTypePtrOutput() KubeletDiskTypePtrOutput {
	return pulumi.ToOutput(in).(KubeletDiskTypePtrOutput)
}

func (in *kubeletDiskTypePtr) ToKubeletDiskTypePtrOutputWithContext(ctx context.Context) KubeletDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KubeletDiskTypePtrOutput)
}

// OS disk type to be used for machines in a given agent pool. Allowed values are 'Ephemeral' and 'Managed'. If unspecified, defaults to 'Ephemeral' when the VM supports ephemeral OS and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation.
type OSDiskType string

const (
	OSDiskTypeManaged   = OSDiskType("Managed")
	OSDiskTypeEphemeral = OSDiskType("Ephemeral")
)

func (OSDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskType)(nil)).Elem()
}

func (e OSDiskType) ToOSDiskTypeOutput() OSDiskTypeOutput {
	return pulumi.ToOutput(e).(OSDiskTypeOutput)
}

func (e OSDiskType) ToOSDiskTypeOutputWithContext(ctx context.Context) OSDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSDiskTypeOutput)
}

func (e OSDiskType) ToOSDiskTypePtrOutput() OSDiskTypePtrOutput {
	return e.ToOSDiskTypePtrOutputWithContext(context.Background())
}

func (e OSDiskType) ToOSDiskTypePtrOutputWithContext(ctx context.Context) OSDiskTypePtrOutput {
	return OSDiskType(e).ToOSDiskTypeOutputWithContext(ctx).ToOSDiskTypePtrOutputWithContext(ctx)
}

func (e OSDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSDiskTypeOutput struct{ *pulumi.OutputState }

func (OSDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskType)(nil)).Elem()
}

func (o OSDiskTypeOutput) ToOSDiskTypeOutput() OSDiskTypeOutput {
	return o
}

func (o OSDiskTypeOutput) ToOSDiskTypeOutputWithContext(ctx context.Context) OSDiskTypeOutput {
	return o
}

func (o OSDiskTypeOutput) ToOSDiskTypePtrOutput() OSDiskTypePtrOutput {
	return o.ToOSDiskTypePtrOutputWithContext(context.Background())
}

func (o OSDiskTypeOutput) ToOSDiskTypePtrOutputWithContext(ctx context.Context) OSDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSDiskType) *OSDiskType {
		return &v
	}).(OSDiskTypePtrOutput)
}

func (o OSDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSDiskTypePtrOutput struct{ *pulumi.OutputState }

func (OSDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskType)(nil)).Elem()
}

func (o OSDiskTypePtrOutput) ToOSDiskTypePtrOutput() OSDiskTypePtrOutput {
	return o
}

func (o OSDiskTypePtrOutput) ToOSDiskTypePtrOutputWithContext(ctx context.Context) OSDiskTypePtrOutput {
	return o
}

func (o OSDiskTypePtrOutput) Elem() OSDiskTypeOutput {
	return o.ApplyT(func(v *OSDiskType) OSDiskType {
		if v != nil {
			return *v
		}
		var ret OSDiskType
		return ret
	}).(OSDiskTypeOutput)
}

func (o OSDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSDiskTypeInput is an input type that accepts values of the OSDiskType enum
// A concrete instance of `OSDiskTypeInput` can be one of the following:
//
//	OSDiskTypeManaged
//	OSDiskTypeEphemeral
type OSDiskTypeInput interface {
	pulumi.Input

	ToOSDiskTypeOutput() OSDiskTypeOutput
	ToOSDiskTypeOutputWithContext(context.Context) OSDiskTypeOutput
}

var osdiskTypePtrType = reflect.TypeOf((**OSDiskType)(nil)).Elem()

type OSDiskTypePtrInput interface {
	pulumi.Input

	ToOSDiskTypePtrOutput() OSDiskTypePtrOutput
	ToOSDiskTypePtrOutputWithContext(context.Context) OSDiskTypePtrOutput
}

type osdiskTypePtr string

func OSDiskTypePtr(v string) OSDiskTypePtrInput {
	return (*osdiskTypePtr)(&v)
}

func (*osdiskTypePtr) ElementType() reflect.Type {
	return osdiskTypePtrType
}

func (in *osdiskTypePtr) ToOSDiskTypePtrOutput() OSDiskTypePtrOutput {
	return pulumi.ToOutput(in).(OSDiskTypePtrOutput)
}

func (in *osdiskTypePtr) ToOSDiskTypePtrOutputWithContext(ctx context.Context) OSDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSDiskTypePtrOutput)
}

// OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.
type OSType string

const (
	OSTypeLinux   = OSType("Linux")
	OSTypeWindows = OSType("Windows")
)

func (OSType) ElementType() reflect.Type {
	return reflect.TypeOf((*OSType)(nil)).Elem()
}

func (e OSType) ToOSTypeOutput() OSTypeOutput {
	return pulumi.ToOutput(e).(OSTypeOutput)
}

func (e OSType) ToOSTypeOutputWithContext(ctx context.Context) OSTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSTypeOutput)
}

func (e OSType) ToOSTypePtrOutput() OSTypePtrOutput {
	return e.ToOSTypePtrOutputWithContext(context.Background())
}

func (e OSType) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return OSType(e).ToOSTypeOutputWithContext(ctx).ToOSTypePtrOutputWithContext(ctx)
}

func (e OSType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSTypeOutput struct{ *pulumi.OutputState }

func (OSTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSType)(nil)).Elem()
}

func (o OSTypeOutput) ToOSTypeOutput() OSTypeOutput {
	return o
}

func (o OSTypeOutput) ToOSTypeOutputWithContext(ctx context.Context) OSTypeOutput {
	return o
}

func (o OSTypeOutput) ToOSTypePtrOutput() OSTypePtrOutput {
	return o.ToOSTypePtrOutputWithContext(context.Background())
}

func (o OSTypeOutput) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSType) *OSType {
		return &v
	}).(OSTypePtrOutput)
}

func (o OSTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSTypePtrOutput struct{ *pulumi.OutputState }

func (OSTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSType)(nil)).Elem()
}

func (o OSTypePtrOutput) ToOSTypePtrOutput() OSTypePtrOutput {
	return o
}

func (o OSTypePtrOutput) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return o
}

func (o OSTypePtrOutput) Elem() OSTypeOutput {
	return o.ApplyT(func(v *OSType) OSType {
		if v != nil {
			return *v
		}
		var ret OSType
		return ret
	}).(OSTypeOutput)
}

func (o OSTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSTypeInput is an input type that accepts values of the OSType enum
// A concrete instance of `OSTypeInput` can be one of the following:
//
//	OSTypeLinux
//	OSTypeWindows
type OSTypeInput interface {
	pulumi.Input

	ToOSTypeOutput() OSTypeOutput
	ToOSTypeOutputWithContext(context.Context) OSTypeOutput
}

var ostypePtrType = reflect.TypeOf((**OSType)(nil)).Elem()

type OSTypePtrInput interface {
	pulumi.Input

	ToOSTypePtrOutput() OSTypePtrOutput
	ToOSTypePtrOutputWithContext(context.Context) OSTypePtrOutput
}

type ostypePtr string

func OSTypePtr(v string) OSTypePtrInput {
	return (*ostypePtr)(&v)
}

func (*ostypePtr) ElementType() reflect.Type {
	return ostypePtrType
}

func (in *ostypePtr) ToOSTypePtrOutput() OSTypePtrOutput {
	return pulumi.ToOutput(in).(OSTypePtrOutput)
}

func (in *ostypePtr) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSTypePtrOutput)
}

// ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete.
type ScaleSetEvictionPolicy string

const (
	ScaleSetEvictionPolicyDelete     = ScaleSetEvictionPolicy("Delete")
	ScaleSetEvictionPolicyDeallocate = ScaleSetEvictionPolicy("Deallocate")
)

func (ScaleSetEvictionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetEvictionPolicy)(nil)).Elem()
}

func (e ScaleSetEvictionPolicy) ToScaleSetEvictionPolicyOutput() ScaleSetEvictionPolicyOutput {
	return pulumi.ToOutput(e).(ScaleSetEvictionPolicyOutput)
}

func (e ScaleSetEvictionPolicy) ToScaleSetEvictionPolicyOutputWithContext(ctx context.Context) ScaleSetEvictionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScaleSetEvictionPolicyOutput)
}

func (e ScaleSetEvictionPolicy) ToScaleSetEvictionPolicyPtrOutput() ScaleSetEvictionPolicyPtrOutput {
	return e.ToScaleSetEvictionPolicyPtrOutputWithContext(context.Background())
}

func (e ScaleSetEvictionPolicy) ToScaleSetEvictionPolicyPtrOutputWithContext(ctx context.Context) ScaleSetEvictionPolicyPtrOutput {
	return ScaleSetEvictionPolicy(e).ToScaleSetEvictionPolicyOutputWithContext(ctx).ToScaleSetEvictionPolicyPtrOutputWithContext(ctx)
}

func (e ScaleSetEvictionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleSetEvictionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleSetEvictionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScaleSetEvictionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScaleSetEvictionPolicyOutput struct{ *pulumi.OutputState }

func (ScaleSetEvictionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetEvictionPolicy)(nil)).Elem()
}

func (o ScaleSetEvictionPolicyOutput) ToScaleSetEvictionPolicyOutput() ScaleSetEvictionPolicyOutput {
	return o
}

func (o ScaleSetEvictionPolicyOutput) ToScaleSetEvictionPolicyOutputWithContext(ctx context.Context) ScaleSetEvictionPolicyOutput {
	return o
}

func (o ScaleSetEvictionPolicyOutput) ToScaleSetEvictionPolicyPtrOutput() ScaleSetEvictionPolicyPtrOutput {
	return o.ToScaleSetEvictionPolicyPtrOutputWithContext(context.Background())
}

func (o ScaleSetEvictionPolicyOutput) ToScaleSetEvictionPolicyPtrOutputWithContext(ctx context.Context) ScaleSetEvictionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleSetEvictionPolicy) *ScaleSetEvictionPolicy {
		return &v
	}).(ScaleSetEvictionPolicyPtrOutput)
}

func (o ScaleSetEvictionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScaleSetEvictionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleSetEvictionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScaleSetEvictionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleSetEvictionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleSetEvictionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScaleSetEvictionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetEvictionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetEvictionPolicy)(nil)).Elem()
}

func (o ScaleSetEvictionPolicyPtrOutput) ToScaleSetEvictionPolicyPtrOutput() ScaleSetEvictionPolicyPtrOutput {
	return o
}

func (o ScaleSetEvictionPolicyPtrOutput) ToScaleSetEvictionPolicyPtrOutputWithContext(ctx context.Context) ScaleSetEvictionPolicyPtrOutput {
	return o
}

func (o ScaleSetEvictionPolicyPtrOutput) Elem() ScaleSetEvictionPolicyOutput {
	return o.ApplyT(func(v *ScaleSetEvictionPolicy) ScaleSetEvictionPolicy {
		if v != nil {
			return *v
		}
		var ret ScaleSetEvictionPolicy
		return ret
	}).(ScaleSetEvictionPolicyOutput)
}

func (o ScaleSetEvictionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleSetEvictionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScaleSetEvictionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScaleSetEvictionPolicyInput is an input type that accepts values of the ScaleSetEvictionPolicy enum
// A concrete instance of `ScaleSetEvictionPolicyInput` can be one of the following:
//
//	ScaleSetEvictionPolicyDelete
//	ScaleSetEvictionPolicyDeallocate
type ScaleSetEvictionPolicyInput interface {
	pulumi.Input

	ToScaleSetEvictionPolicyOutput() ScaleSetEvictionPolicyOutput
	ToScaleSetEvictionPolicyOutputWithContext(context.Context) ScaleSetEvictionPolicyOutput
}

var scaleSetEvictionPolicyPtrType = reflect.TypeOf((**ScaleSetEvictionPolicy)(nil)).Elem()

type ScaleSetEvictionPolicyPtrInput interface {
	pulumi.Input

	ToScaleSetEvictionPolicyPtrOutput() ScaleSetEvictionPolicyPtrOutput
	ToScaleSetEvictionPolicyPtrOutputWithContext(context.Context) ScaleSetEvictionPolicyPtrOutput
}

type scaleSetEvictionPolicyPtr string

func ScaleSetEvictionPolicyPtr(v string) ScaleSetEvictionPolicyPtrInput {
	return (*scaleSetEvictionPolicyPtr)(&v)
}

func (*scaleSetEvictionPolicyPtr) ElementType() reflect.Type {
	return scaleSetEvictionPolicyPtrType
}

func (in *scaleSetEvictionPolicyPtr) ToScaleSetEvictionPolicyPtrOutput() ScaleSetEvictionPolicyPtrOutput {
	return pulumi.ToOutput(in).(ScaleSetEvictionPolicyPtrOutput)
}

func (in *scaleSetEvictionPolicyPtr) ToScaleSetEvictionPolicyPtrOutputWithContext(ctx context.Context) ScaleSetEvictionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScaleSetEvictionPolicyPtrOutput)
}

// ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.
type ScaleSetPriority string

const (
	ScaleSetPrioritySpot    = ScaleSetPriority("Spot")
	ScaleSetPriorityRegular = ScaleSetPriority("Regular")
)

func (ScaleSetPriority) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetPriority)(nil)).Elem()
}

func (e ScaleSetPriority) ToScaleSetPriorityOutput() ScaleSetPriorityOutput {
	return pulumi.ToOutput(e).(ScaleSetPriorityOutput)
}

func (e ScaleSetPriority) ToScaleSetPriorityOutputWithContext(ctx context.Context) ScaleSetPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScaleSetPriorityOutput)
}

func (e ScaleSetPriority) ToScaleSetPriorityPtrOutput() ScaleSetPriorityPtrOutput {
	return e.ToScaleSetPriorityPtrOutputWithContext(context.Background())
}

func (e ScaleSetPriority) ToScaleSetPriorityPtrOutputWithContext(ctx context.Context) ScaleSetPriorityPtrOutput {
	return ScaleSetPriority(e).ToScaleSetPriorityOutputWithContext(ctx).ToScaleSetPriorityPtrOutputWithContext(ctx)
}

func (e ScaleSetPriority) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleSetPriority) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleSetPriority) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScaleSetPriority) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScaleSetPriorityOutput struct{ *pulumi.OutputState }

func (ScaleSetPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetPriority)(nil)).Elem()
}

func (o ScaleSetPriorityOutput) ToScaleSetPriorityOutput() ScaleSetPriorityOutput {
	return o
}

func (o ScaleSetPriorityOutput) ToScaleSetPriorityOutputWithContext(ctx context.Context) ScaleSetPriorityOutput {
	return o
}

func (o ScaleSetPriorityOutput) ToScaleSetPriorityPtrOutput() ScaleSetPriorityPtrOutput {
	return o.ToScaleSetPriorityPtrOutputWithContext(context.Background())
}

func (o ScaleSetPriorityOutput) ToScaleSetPriorityPtrOutputWithContext(ctx context.Context) ScaleSetPriorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleSetPriority) *ScaleSetPriority {
		return &v
	}).(ScaleSetPriorityPtrOutput)
}

func (o ScaleSetPriorityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScaleSetPriorityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleSetPriority) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScaleSetPriorityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleSetPriorityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleSetPriority) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScaleSetPriorityPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetPriorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetPriority)(nil)).Elem()
}

func (o ScaleSetPriorityPtrOutput) ToScaleSetPriorityPtrOutput() ScaleSetPriorityPtrOutput {
	return o
}

func (o ScaleSetPriorityPtrOutput) ToScaleSetPriorityPtrOutputWithContext(ctx context.Context) ScaleSetPriorityPtrOutput {
	return o
}

func (o ScaleSetPriorityPtrOutput) Elem() ScaleSetPriorityOutput {
	return o.ApplyT(func(v *ScaleSetPriority) ScaleSetPriority {
		if v != nil {
			return *v
		}
		var ret ScaleSetPriority
		return ret
	}).(ScaleSetPriorityOutput)
}

func (o ScaleSetPriorityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleSetPriorityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScaleSetPriority) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScaleSetPriorityInput is an input type that accepts values of the ScaleSetPriority enum
// A concrete instance of `ScaleSetPriorityInput` can be one of the following:
//
//	ScaleSetPrioritySpot
//	ScaleSetPriorityRegular
type ScaleSetPriorityInput interface {
	pulumi.Input

	ToScaleSetPriorityOutput() ScaleSetPriorityOutput
	ToScaleSetPriorityOutputWithContext(context.Context) ScaleSetPriorityOutput
}

var scaleSetPriorityPtrType = reflect.TypeOf((**ScaleSetPriority)(nil)).Elem()

type ScaleSetPriorityPtrInput interface {
	pulumi.Input

	ToScaleSetPriorityPtrOutput() ScaleSetPriorityPtrOutput
	ToScaleSetPriorityPtrOutputWithContext(context.Context) ScaleSetPriorityPtrOutput
}

type scaleSetPriorityPtr string

func ScaleSetPriorityPtr(v string) ScaleSetPriorityPtrInput {
	return (*scaleSetPriorityPtr)(&v)
}

func (*scaleSetPriorityPtr) ElementType() reflect.Type {
	return scaleSetPriorityPtrType
}

func (in *scaleSetPriorityPtr) ToScaleSetPriorityPtrOutput() ScaleSetPriorityPtrOutput {
	return pulumi.ToOutput(in).(ScaleSetPriorityPtrOutput)
}

func (in *scaleSetPriorityPtr) ToScaleSetPriorityPtrOutputWithContext(ctx context.Context) ScaleSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScaleSetPriorityPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentPoolModeOutput{})
	pulumi.RegisterOutputType(AgentPoolModePtrOutput{})
	pulumi.RegisterOutputType(AgentPoolTypeOutput{})
	pulumi.RegisterOutputType(AgentPoolTypePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceVMSizeTypesOutput{})
	pulumi.RegisterOutputType(ContainerServiceVMSizeTypesPtrOutput{})
	pulumi.RegisterOutputType(KubeletDiskTypeOutput{})
	pulumi.RegisterOutputType(KubeletDiskTypePtrOutput{})
	pulumi.RegisterOutputType(OSDiskTypeOutput{})
	pulumi.RegisterOutputType(OSDiskTypePtrOutput{})
	pulumi.RegisterOutputType(OSTypeOutput{})
	pulumi.RegisterOutputType(OSTypePtrOutput{})
	pulumi.RegisterOutputType(ScaleSetEvictionPolicyOutput{})
	pulumi.RegisterOutputType(ScaleSetEvictionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetPriorityOutput{})
	pulumi.RegisterOutputType(ScaleSetPriorityPtrOutput{})
}
