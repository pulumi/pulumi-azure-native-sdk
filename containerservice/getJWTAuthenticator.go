// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configuration for JWT authenticator in the managed cluster.
//
// Uses Azure REST API version 2025-07-02-preview.
func LookupJWTAuthenticator(ctx *pulumi.Context, args *LookupJWTAuthenticatorArgs, opts ...pulumi.InvokeOption) (*LookupJWTAuthenticatorResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupJWTAuthenticatorResult
	err := ctx.Invoke("azure-native:containerservice:getJWTAuthenticator", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupJWTAuthenticatorArgs struct {
	// The name of the JWT authenticator.
	JwtAuthenticatorName string `pulumi:"jwtAuthenticatorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName string `pulumi:"resourceName"`
}

// Configuration for JWT authenticator in the managed cluster.
type LookupJWTAuthenticatorResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
	Properties JWTAuthenticatorPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupJWTAuthenticatorOutput(ctx *pulumi.Context, args LookupJWTAuthenticatorOutputArgs, opts ...pulumi.InvokeOption) LookupJWTAuthenticatorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupJWTAuthenticatorResultOutput, error) {
			args := v.(LookupJWTAuthenticatorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerservice:getJWTAuthenticator", args, LookupJWTAuthenticatorResultOutput{}, options).(LookupJWTAuthenticatorResultOutput), nil
		}).(LookupJWTAuthenticatorResultOutput)
}

type LookupJWTAuthenticatorOutputArgs struct {
	// The name of the JWT authenticator.
	JwtAuthenticatorName pulumi.StringInput `pulumi:"jwtAuthenticatorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupJWTAuthenticatorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJWTAuthenticatorArgs)(nil)).Elem()
}

// Configuration for JWT authenticator in the managed cluster.
type LookupJWTAuthenticatorResultOutput struct{ *pulumi.OutputState }

func (LookupJWTAuthenticatorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJWTAuthenticatorResult)(nil)).Elem()
}

func (o LookupJWTAuthenticatorResultOutput) ToLookupJWTAuthenticatorResultOutput() LookupJWTAuthenticatorResultOutput {
	return o
}

func (o LookupJWTAuthenticatorResultOutput) ToLookupJWTAuthenticatorResultOutputWithContext(ctx context.Context) LookupJWTAuthenticatorResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupJWTAuthenticatorResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJWTAuthenticatorResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupJWTAuthenticatorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJWTAuthenticatorResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupJWTAuthenticatorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJWTAuthenticatorResult) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
func (o LookupJWTAuthenticatorResultOutput) Properties() JWTAuthenticatorPropertiesResponseOutput {
	return o.ApplyT(func(v LookupJWTAuthenticatorResult) JWTAuthenticatorPropertiesResponse { return v.Properties }).(JWTAuthenticatorPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupJWTAuthenticatorResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupJWTAuthenticatorResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupJWTAuthenticatorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJWTAuthenticatorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJWTAuthenticatorResultOutput{})
}
