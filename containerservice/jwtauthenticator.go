// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configuration for JWT authenticator in the managed cluster.
//
// Uses Azure REST API version 2025-07-02-preview.
type JWTAuthenticator struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
	Properties JWTAuthenticatorPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJWTAuthenticator registers a new resource with the given unique name, arguments, and options.
func NewJWTAuthenticator(ctx *pulumi.Context,
	name string, args *JWTAuthenticatorArgs, opts ...pulumi.ResourceOption) (*JWTAuthenticator, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:containerservice/v20250702preview:JWTAuthenticator"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource JWTAuthenticator
	err := ctx.RegisterResource("azure-native:containerservice:JWTAuthenticator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJWTAuthenticator gets an existing JWTAuthenticator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJWTAuthenticator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JWTAuthenticatorState, opts ...pulumi.ResourceOption) (*JWTAuthenticator, error) {
	var resource JWTAuthenticator
	err := ctx.ReadResource("azure-native:containerservice:JWTAuthenticator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JWTAuthenticator resources.
type jwtauthenticatorState struct {
}

type JWTAuthenticatorState struct {
}

func (JWTAuthenticatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*jwtauthenticatorState)(nil)).Elem()
}

type jwtauthenticatorArgs struct {
	// The name of the JWT authenticator.
	JwtAuthenticatorName *string `pulumi:"jwtAuthenticatorName"`
	// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
	Properties JWTAuthenticatorProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName string `pulumi:"resourceName"`
}

// The set of arguments for constructing a JWTAuthenticator resource.
type JWTAuthenticatorArgs struct {
	// The name of the JWT authenticator.
	JwtAuthenticatorName pulumi.StringPtrInput
	// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
	Properties JWTAuthenticatorPropertiesInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the managed cluster resource.
	ResourceName pulumi.StringInput
}

func (JWTAuthenticatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jwtauthenticatorArgs)(nil)).Elem()
}

type JWTAuthenticatorInput interface {
	pulumi.Input

	ToJWTAuthenticatorOutput() JWTAuthenticatorOutput
	ToJWTAuthenticatorOutputWithContext(ctx context.Context) JWTAuthenticatorOutput
}

func (*JWTAuthenticator) ElementType() reflect.Type {
	return reflect.TypeOf((**JWTAuthenticator)(nil)).Elem()
}

func (i *JWTAuthenticator) ToJWTAuthenticatorOutput() JWTAuthenticatorOutput {
	return i.ToJWTAuthenticatorOutputWithContext(context.Background())
}

func (i *JWTAuthenticator) ToJWTAuthenticatorOutputWithContext(ctx context.Context) JWTAuthenticatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JWTAuthenticatorOutput)
}

type JWTAuthenticatorOutput struct{ *pulumi.OutputState }

func (JWTAuthenticatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JWTAuthenticator)(nil)).Elem()
}

func (o JWTAuthenticatorOutput) ToJWTAuthenticatorOutput() JWTAuthenticatorOutput {
	return o
}

func (o JWTAuthenticatorOutput) ToJWTAuthenticatorOutputWithContext(ctx context.Context) JWTAuthenticatorOutput {
	return o
}

// The Azure API version of the resource.
func (o JWTAuthenticatorOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *JWTAuthenticator) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o JWTAuthenticatorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JWTAuthenticator) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The properties of JWTAuthenticator. For details on how to configure the properties of a JWT authenticator, please refer to the Kubernetes documentation: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#using-authentication-configuration. Please note that not all fields available in the Kubernetes documentation are supported by AKS. For troubleshooting, please see https://aka.ms/aks-external-issuers-docs.
func (o JWTAuthenticatorOutput) Properties() JWTAuthenticatorPropertiesResponseOutput {
	return o.ApplyT(func(v *JWTAuthenticator) JWTAuthenticatorPropertiesResponseOutput { return v.Properties }).(JWTAuthenticatorPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o JWTAuthenticatorOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *JWTAuthenticator) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o JWTAuthenticatorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *JWTAuthenticator) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(JWTAuthenticatorOutput{})
}
