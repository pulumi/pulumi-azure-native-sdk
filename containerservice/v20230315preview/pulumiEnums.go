// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230315preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The upgrade type.
// Full requires the KubernetesVersion property to be set.
// NodeImageOnly requires the KubernetesVersion property not to be set.
type ManagedClusterUpgradeType string

const (
	// Full upgrades the control plane and all agent pools of the target ManagedClusters.
	ManagedClusterUpgradeTypeFull = ManagedClusterUpgradeType("Full")
	// NodeImageOnly upgrades only the node images of the target ManagedClusters.
	ManagedClusterUpgradeTypeNodeImageOnly = ManagedClusterUpgradeType("NodeImageOnly")
)

func (ManagedClusterUpgradeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterUpgradeType)(nil)).Elem()
}

func (e ManagedClusterUpgradeType) ToManagedClusterUpgradeTypeOutput() ManagedClusterUpgradeTypeOutput {
	return pulumi.ToOutput(e).(ManagedClusterUpgradeTypeOutput)
}

func (e ManagedClusterUpgradeType) ToManagedClusterUpgradeTypeOutputWithContext(ctx context.Context) ManagedClusterUpgradeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedClusterUpgradeTypeOutput)
}

func (e ManagedClusterUpgradeType) ToManagedClusterUpgradeTypePtrOutput() ManagedClusterUpgradeTypePtrOutput {
	return e.ToManagedClusterUpgradeTypePtrOutputWithContext(context.Background())
}

func (e ManagedClusterUpgradeType) ToManagedClusterUpgradeTypePtrOutputWithContext(ctx context.Context) ManagedClusterUpgradeTypePtrOutput {
	return ManagedClusterUpgradeType(e).ToManagedClusterUpgradeTypeOutputWithContext(ctx).ToManagedClusterUpgradeTypePtrOutputWithContext(ctx)
}

func (e ManagedClusterUpgradeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedClusterUpgradeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedClusterUpgradeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedClusterUpgradeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedClusterUpgradeTypeOutput struct{ *pulumi.OutputState }

func (ManagedClusterUpgradeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterUpgradeType)(nil)).Elem()
}

func (o ManagedClusterUpgradeTypeOutput) ToManagedClusterUpgradeTypeOutput() ManagedClusterUpgradeTypeOutput {
	return o
}

func (o ManagedClusterUpgradeTypeOutput) ToManagedClusterUpgradeTypeOutputWithContext(ctx context.Context) ManagedClusterUpgradeTypeOutput {
	return o
}

func (o ManagedClusterUpgradeTypeOutput) ToManagedClusterUpgradeTypePtrOutput() ManagedClusterUpgradeTypePtrOutput {
	return o.ToManagedClusterUpgradeTypePtrOutputWithContext(context.Background())
}

func (o ManagedClusterUpgradeTypeOutput) ToManagedClusterUpgradeTypePtrOutputWithContext(ctx context.Context) ManagedClusterUpgradeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterUpgradeType) *ManagedClusterUpgradeType {
		return &v
	}).(ManagedClusterUpgradeTypePtrOutput)
}

func (o ManagedClusterUpgradeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedClusterUpgradeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedClusterUpgradeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedClusterUpgradeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedClusterUpgradeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedClusterUpgradeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedClusterUpgradeTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterUpgradeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterUpgradeType)(nil)).Elem()
}

func (o ManagedClusterUpgradeTypePtrOutput) ToManagedClusterUpgradeTypePtrOutput() ManagedClusterUpgradeTypePtrOutput {
	return o
}

func (o ManagedClusterUpgradeTypePtrOutput) ToManagedClusterUpgradeTypePtrOutputWithContext(ctx context.Context) ManagedClusterUpgradeTypePtrOutput {
	return o
}

func (o ManagedClusterUpgradeTypePtrOutput) Elem() ManagedClusterUpgradeTypeOutput {
	return o.ApplyT(func(v *ManagedClusterUpgradeType) ManagedClusterUpgradeType {
		if v != nil {
			return *v
		}
		var ret ManagedClusterUpgradeType
		return ret
	}).(ManagedClusterUpgradeTypeOutput)
}

func (o ManagedClusterUpgradeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedClusterUpgradeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedClusterUpgradeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedClusterUpgradeTypeInput is an input type that accepts values of the ManagedClusterUpgradeType enum
// A concrete instance of `ManagedClusterUpgradeTypeInput` can be one of the following:
//
//	ManagedClusterUpgradeTypeFull
//	ManagedClusterUpgradeTypeNodeImageOnly
type ManagedClusterUpgradeTypeInput interface {
	pulumi.Input

	ToManagedClusterUpgradeTypeOutput() ManagedClusterUpgradeTypeOutput
	ToManagedClusterUpgradeTypeOutputWithContext(context.Context) ManagedClusterUpgradeTypeOutput
}

var managedClusterUpgradeTypePtrType = reflect.TypeOf((**ManagedClusterUpgradeType)(nil)).Elem()

type ManagedClusterUpgradeTypePtrInput interface {
	pulumi.Input

	ToManagedClusterUpgradeTypePtrOutput() ManagedClusterUpgradeTypePtrOutput
	ToManagedClusterUpgradeTypePtrOutputWithContext(context.Context) ManagedClusterUpgradeTypePtrOutput
}

type managedClusterUpgradeTypePtr string

func ManagedClusterUpgradeTypePtr(v string) ManagedClusterUpgradeTypePtrInput {
	return (*managedClusterUpgradeTypePtr)(&v)
}

func (*managedClusterUpgradeTypePtr) ElementType() reflect.Type {
	return managedClusterUpgradeTypePtrType
}

func (in *managedClusterUpgradeTypePtr) ToManagedClusterUpgradeTypePtrOutput() ManagedClusterUpgradeTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedClusterUpgradeTypePtrOutput)
}

func (in *managedClusterUpgradeTypePtr) ToManagedClusterUpgradeTypePtrOutputWithContext(ctx context.Context) ManagedClusterUpgradeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedClusterUpgradeTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedClusterUpgradeTypeOutput{})
	pulumi.RegisterOutputType(ManagedClusterUpgradeTypePtrOutput{})
}
