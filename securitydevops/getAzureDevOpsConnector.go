// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitydevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Azure REST API version: 2022-09-01-preview.
func LookupAzureDevOpsConnector(ctx *pulumi.Context, args *LookupAzureDevOpsConnectorArgs, opts ...pulumi.InvokeOption) (*LookupAzureDevOpsConnectorResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAzureDevOpsConnectorResult
	err := ctx.Invoke("azure-native:securitydevops:getAzureDevOpsConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAzureDevOpsConnectorArgs struct {
	// Name of the AzureDevOps Connector.
	AzureDevOpsConnectorName string `pulumi:"azureDevOpsConnectorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

type LookupAzureDevOpsConnectorResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name       string                                 `pulumi:"name"`
	Properties AzureDevOpsConnectorPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAzureDevOpsConnectorOutput(ctx *pulumi.Context, args LookupAzureDevOpsConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupAzureDevOpsConnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAzureDevOpsConnectorResult, error) {
			args := v.(LookupAzureDevOpsConnectorArgs)
			r, err := LookupAzureDevOpsConnector(ctx, &args, opts...)
			var s LookupAzureDevOpsConnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAzureDevOpsConnectorResultOutput)
}

type LookupAzureDevOpsConnectorOutputArgs struct {
	// Name of the AzureDevOps Connector.
	AzureDevOpsConnectorName pulumi.StringInput `pulumi:"azureDevOpsConnectorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAzureDevOpsConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureDevOpsConnectorArgs)(nil)).Elem()
}

type LookupAzureDevOpsConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupAzureDevOpsConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureDevOpsConnectorResult)(nil)).Elem()
}

func (o LookupAzureDevOpsConnectorResultOutput) ToLookupAzureDevOpsConnectorResultOutput() LookupAzureDevOpsConnectorResultOutput {
	return o
}

func (o LookupAzureDevOpsConnectorResultOutput) ToLookupAzureDevOpsConnectorResultOutputWithContext(ctx context.Context) LookupAzureDevOpsConnectorResultOutput {
	return o
}

func (o LookupAzureDevOpsConnectorResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAzureDevOpsConnectorResult] {
	return pulumix.Output[LookupAzureDevOpsConnectorResult]{
		OutputState: o.OutputState,
	}
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAzureDevOpsConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupAzureDevOpsConnectorResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAzureDevOpsConnectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAzureDevOpsConnectorResultOutput) Properties() AzureDevOpsConnectorPropertiesResponseOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) AzureDevOpsConnectorPropertiesResponse { return v.Properties }).(AzureDevOpsConnectorPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupAzureDevOpsConnectorResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupAzureDevOpsConnectorResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAzureDevOpsConnectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureDevOpsConnectorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureDevOpsConnectorResultOutput{})
}
