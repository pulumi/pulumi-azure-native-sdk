// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type ResourceModelWithAllowedPropertySetIdentity struct {
	// The identity type.
	Type *ResourceIdentityType `pulumi:"type"`
}

// ResourceModelWithAllowedPropertySetIdentityInput is an input type that accepts ResourceModelWithAllowedPropertySetIdentityArgs and ResourceModelWithAllowedPropertySetIdentityOutput values.
// You can construct a concrete instance of `ResourceModelWithAllowedPropertySetIdentityInput` via:
//
//	ResourceModelWithAllowedPropertySetIdentityArgs{...}
type ResourceModelWithAllowedPropertySetIdentityInput interface {
	pulumi.Input

	ToResourceModelWithAllowedPropertySetIdentityOutput() ResourceModelWithAllowedPropertySetIdentityOutput
	ToResourceModelWithAllowedPropertySetIdentityOutputWithContext(context.Context) ResourceModelWithAllowedPropertySetIdentityOutput
}

type ResourceModelWithAllowedPropertySetIdentityArgs struct {
	// The identity type.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
}

func (ResourceModelWithAllowedPropertySetIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetIdentity)(nil)).Elem()
}

func (i ResourceModelWithAllowedPropertySetIdentityArgs) ToResourceModelWithAllowedPropertySetIdentityOutput() ResourceModelWithAllowedPropertySetIdentityOutput {
	return i.ToResourceModelWithAllowedPropertySetIdentityOutputWithContext(context.Background())
}

func (i ResourceModelWithAllowedPropertySetIdentityArgs) ToResourceModelWithAllowedPropertySetIdentityOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetIdentityOutput)
}

func (i ResourceModelWithAllowedPropertySetIdentityArgs) ToResourceModelWithAllowedPropertySetIdentityPtrOutput() ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return i.ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceModelWithAllowedPropertySetIdentityArgs) ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetIdentityOutput).ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(ctx)
}

// ResourceModelWithAllowedPropertySetIdentityPtrInput is an input type that accepts ResourceModelWithAllowedPropertySetIdentityArgs, ResourceModelWithAllowedPropertySetIdentityPtr and ResourceModelWithAllowedPropertySetIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceModelWithAllowedPropertySetIdentityPtrInput` via:
//
//	        ResourceModelWithAllowedPropertySetIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceModelWithAllowedPropertySetIdentityPtrInput interface {
	pulumi.Input

	ToResourceModelWithAllowedPropertySetIdentityPtrOutput() ResourceModelWithAllowedPropertySetIdentityPtrOutput
	ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(context.Context) ResourceModelWithAllowedPropertySetIdentityPtrOutput
}

type resourceModelWithAllowedPropertySetIdentityPtrType ResourceModelWithAllowedPropertySetIdentityArgs

func ResourceModelWithAllowedPropertySetIdentityPtr(v *ResourceModelWithAllowedPropertySetIdentityArgs) ResourceModelWithAllowedPropertySetIdentityPtrInput {
	return (*resourceModelWithAllowedPropertySetIdentityPtrType)(v)
}

func (*resourceModelWithAllowedPropertySetIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetIdentity)(nil)).Elem()
}

func (i *resourceModelWithAllowedPropertySetIdentityPtrType) ToResourceModelWithAllowedPropertySetIdentityPtrOutput() ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return i.ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceModelWithAllowedPropertySetIdentityPtrType) ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetIdentityPtrOutput)
}

type ResourceModelWithAllowedPropertySetIdentityOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetIdentity)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetIdentityOutput) ToResourceModelWithAllowedPropertySetIdentityOutput() ResourceModelWithAllowedPropertySetIdentityOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetIdentityOutput) ToResourceModelWithAllowedPropertySetIdentityOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetIdentityOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetIdentityOutput) ToResourceModelWithAllowedPropertySetIdentityPtrOutput() ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return o.ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceModelWithAllowedPropertySetIdentityOutput) ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceModelWithAllowedPropertySetIdentity) *ResourceModelWithAllowedPropertySetIdentity {
		return &v
	}).(ResourceModelWithAllowedPropertySetIdentityPtrOutput)
}

// The identity type.
func (o ResourceModelWithAllowedPropertySetIdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetIdentity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

type ResourceModelWithAllowedPropertySetIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetIdentity)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetIdentityPtrOutput) ToResourceModelWithAllowedPropertySetIdentityPtrOutput() ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetIdentityPtrOutput) ToResourceModelWithAllowedPropertySetIdentityPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetIdentityPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetIdentityPtrOutput) Elem() ResourceModelWithAllowedPropertySetIdentityOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetIdentity) ResourceModelWithAllowedPropertySetIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceModelWithAllowedPropertySetIdentity
		return ret
	}).(ResourceModelWithAllowedPropertySetIdentityOutput)
}

// The identity type.
func (o ResourceModelWithAllowedPropertySetIdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetIdentity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

type ResourceModelWithAllowedPropertySetPlan struct {
	// A user defined name of the 3rd Party Artifact that is being procured.
	Name string `pulumi:"name"`
	// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
	Product string `pulumi:"product"`
	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher string `pulumi:"publisher"`
	// The version of the desired product/artifact.
	Version *string `pulumi:"version"`
}

// ResourceModelWithAllowedPropertySetPlanInput is an input type that accepts ResourceModelWithAllowedPropertySetPlanArgs and ResourceModelWithAllowedPropertySetPlanOutput values.
// You can construct a concrete instance of `ResourceModelWithAllowedPropertySetPlanInput` via:
//
//	ResourceModelWithAllowedPropertySetPlanArgs{...}
type ResourceModelWithAllowedPropertySetPlanInput interface {
	pulumi.Input

	ToResourceModelWithAllowedPropertySetPlanOutput() ResourceModelWithAllowedPropertySetPlanOutput
	ToResourceModelWithAllowedPropertySetPlanOutputWithContext(context.Context) ResourceModelWithAllowedPropertySetPlanOutput
}

type ResourceModelWithAllowedPropertySetPlanArgs struct {
	// A user defined name of the 3rd Party Artifact that is being procured.
	Name pulumi.StringInput `pulumi:"name"`
	// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
	Product pulumi.StringInput `pulumi:"product"`
	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The version of the desired product/artifact.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ResourceModelWithAllowedPropertySetPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetPlan)(nil)).Elem()
}

func (i ResourceModelWithAllowedPropertySetPlanArgs) ToResourceModelWithAllowedPropertySetPlanOutput() ResourceModelWithAllowedPropertySetPlanOutput {
	return i.ToResourceModelWithAllowedPropertySetPlanOutputWithContext(context.Background())
}

func (i ResourceModelWithAllowedPropertySetPlanArgs) ToResourceModelWithAllowedPropertySetPlanOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetPlanOutput)
}

func (i ResourceModelWithAllowedPropertySetPlanArgs) ToResourceModelWithAllowedPropertySetPlanPtrOutput() ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return i.ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(context.Background())
}

func (i ResourceModelWithAllowedPropertySetPlanArgs) ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetPlanOutput).ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(ctx)
}

// ResourceModelWithAllowedPropertySetPlanPtrInput is an input type that accepts ResourceModelWithAllowedPropertySetPlanArgs, ResourceModelWithAllowedPropertySetPlanPtr and ResourceModelWithAllowedPropertySetPlanPtrOutput values.
// You can construct a concrete instance of `ResourceModelWithAllowedPropertySetPlanPtrInput` via:
//
//	        ResourceModelWithAllowedPropertySetPlanArgs{...}
//
//	or:
//
//	        nil
type ResourceModelWithAllowedPropertySetPlanPtrInput interface {
	pulumi.Input

	ToResourceModelWithAllowedPropertySetPlanPtrOutput() ResourceModelWithAllowedPropertySetPlanPtrOutput
	ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(context.Context) ResourceModelWithAllowedPropertySetPlanPtrOutput
}

type resourceModelWithAllowedPropertySetPlanPtrType ResourceModelWithAllowedPropertySetPlanArgs

func ResourceModelWithAllowedPropertySetPlanPtr(v *ResourceModelWithAllowedPropertySetPlanArgs) ResourceModelWithAllowedPropertySetPlanPtrInput {
	return (*resourceModelWithAllowedPropertySetPlanPtrType)(v)
}

func (*resourceModelWithAllowedPropertySetPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetPlan)(nil)).Elem()
}

func (i *resourceModelWithAllowedPropertySetPlanPtrType) ToResourceModelWithAllowedPropertySetPlanPtrOutput() ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return i.ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(context.Background())
}

func (i *resourceModelWithAllowedPropertySetPlanPtrType) ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetPlanPtrOutput)
}

type ResourceModelWithAllowedPropertySetPlanOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetPlan)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetPlanOutput) ToResourceModelWithAllowedPropertySetPlanOutput() ResourceModelWithAllowedPropertySetPlanOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetPlanOutput) ToResourceModelWithAllowedPropertySetPlanOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetPlanOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetPlanOutput) ToResourceModelWithAllowedPropertySetPlanPtrOutput() ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return o.ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(context.Background())
}

func (o ResourceModelWithAllowedPropertySetPlanOutput) ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceModelWithAllowedPropertySetPlan) *ResourceModelWithAllowedPropertySetPlan {
		return &v
	}).(ResourceModelWithAllowedPropertySetPlanPtrOutput)
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o ResourceModelWithAllowedPropertySetPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetPlan) string { return v.Name }).(pulumi.StringOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o ResourceModelWithAllowedPropertySetPlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetPlan) string { return v.Product }).(pulumi.StringOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o ResourceModelWithAllowedPropertySetPlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetPlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o ResourceModelWithAllowedPropertySetPlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetPlan) string { return v.Publisher }).(pulumi.StringOutput)
}

// The version of the desired product/artifact.
func (o ResourceModelWithAllowedPropertySetPlanOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetPlan) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetPlanPtrOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetPlan)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) ToResourceModelWithAllowedPropertySetPlanPtrOutput() ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) ToResourceModelWithAllowedPropertySetPlanPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetPlanPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) Elem() ResourceModelWithAllowedPropertySetPlanOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetPlan) ResourceModelWithAllowedPropertySetPlan {
		if v != nil {
			return *v
		}
		var ret ResourceModelWithAllowedPropertySetPlan
		return ret
	}).(ResourceModelWithAllowedPropertySetPlanOutput)
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetPlan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The version of the desired product/artifact.
func (o ResourceModelWithAllowedPropertySetPlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetPlan) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetResponseIdentity struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
}

type ResourceModelWithAllowedPropertySetResponseIdentityOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetResponseIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetResponseIdentity)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetResponseIdentityOutput) ToResourceModelWithAllowedPropertySetResponseIdentityOutput() ResourceModelWithAllowedPropertySetResponseIdentityOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponseIdentityOutput) ToResourceModelWithAllowedPropertySetResponseIdentityOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetResponseIdentityOutput {
	return o
}

// The principal ID of resource identity.
func (o ResourceModelWithAllowedPropertySetResponseIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o ResourceModelWithAllowedPropertySetResponseIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o ResourceModelWithAllowedPropertySetResponseIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetResponseIdentity)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) ToResourceModelWithAllowedPropertySetResponseIdentityPtrOutput() ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) ToResourceModelWithAllowedPropertySetResponseIdentityPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) Elem() ResourceModelWithAllowedPropertySetResponseIdentityOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseIdentity) ResourceModelWithAllowedPropertySetResponseIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceModelWithAllowedPropertySetResponseIdentity
		return ret
	}).(ResourceModelWithAllowedPropertySetResponseIdentityOutput)
}

// The principal ID of resource identity.
func (o ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetResponsePlan struct {
	// A user defined name of the 3rd Party Artifact that is being procured.
	Name string `pulumi:"name"`
	// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
	Product string `pulumi:"product"`
	// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
	Publisher string `pulumi:"publisher"`
	// The version of the desired product/artifact.
	Version *string `pulumi:"version"`
}

type ResourceModelWithAllowedPropertySetResponsePlanOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetResponsePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetResponsePlan)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) ToResourceModelWithAllowedPropertySetResponsePlanOutput() ResourceModelWithAllowedPropertySetResponsePlanOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) ToResourceModelWithAllowedPropertySetResponsePlanOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetResponsePlanOutput {
	return o
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponsePlan) string { return v.Name }).(pulumi.StringOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponsePlan) string { return v.Product }).(pulumi.StringOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponsePlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponsePlan) string { return v.Publisher }).(pulumi.StringOutput)
}

// The version of the desired product/artifact.
func (o ResourceModelWithAllowedPropertySetResponsePlanOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponsePlan) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetResponsePlanPtrOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetResponsePlan)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) ToResourceModelWithAllowedPropertySetResponsePlanPtrOutput() ResourceModelWithAllowedPropertySetResponsePlanPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) ToResourceModelWithAllowedPropertySetResponsePlanPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetResponsePlanPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) Elem() ResourceModelWithAllowedPropertySetResponsePlanOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponsePlan) ResourceModelWithAllowedPropertySetResponsePlan {
		if v != nil {
			return *v
		}
		var ret ResourceModelWithAllowedPropertySetResponsePlan
		return ret
	}).(ResourceModelWithAllowedPropertySetResponsePlanOutput)
}

// A user defined name of the 3rd Party Artifact that is being procured.
func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponsePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponsePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponsePlan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponsePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The version of the desired product/artifact.
func (o ResourceModelWithAllowedPropertySetResponsePlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponsePlan) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetResponseSku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

type ResourceModelWithAllowedPropertySetResponseSkuOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetResponseSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetResponseSku)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) ToResourceModelWithAllowedPropertySetResponseSkuOutput() ResourceModelWithAllowedPropertySetResponseSkuOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) ToResourceModelWithAllowedPropertySetResponseSkuOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetResponseSkuOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseSku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o ResourceModelWithAllowedPropertySetResponseSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetResponseSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetResponseSkuPtrOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetResponseSku)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) ToResourceModelWithAllowedPropertySetResponseSkuPtrOutput() ResourceModelWithAllowedPropertySetResponseSkuPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) ToResourceModelWithAllowedPropertySetResponseSkuPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetResponseSkuPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) Elem() ResourceModelWithAllowedPropertySetResponseSkuOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseSku) ResourceModelWithAllowedPropertySetResponseSku {
		if v != nil {
			return *v
		}
		var ret ResourceModelWithAllowedPropertySetResponseSku
		return ret
	}).(ResourceModelWithAllowedPropertySetResponseSkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o ResourceModelWithAllowedPropertySetResponseSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetResponseSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type ResourceModelWithAllowedPropertySetSku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *SkuTier `pulumi:"tier"`
}

// ResourceModelWithAllowedPropertySetSkuInput is an input type that accepts ResourceModelWithAllowedPropertySetSkuArgs and ResourceModelWithAllowedPropertySetSkuOutput values.
// You can construct a concrete instance of `ResourceModelWithAllowedPropertySetSkuInput` via:
//
//	ResourceModelWithAllowedPropertySetSkuArgs{...}
type ResourceModelWithAllowedPropertySetSkuInput interface {
	pulumi.Input

	ToResourceModelWithAllowedPropertySetSkuOutput() ResourceModelWithAllowedPropertySetSkuOutput
	ToResourceModelWithAllowedPropertySetSkuOutputWithContext(context.Context) ResourceModelWithAllowedPropertySetSkuOutput
}

type ResourceModelWithAllowedPropertySetSkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier SkuTierPtrInput `pulumi:"tier"`
}

func (ResourceModelWithAllowedPropertySetSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetSku)(nil)).Elem()
}

func (i ResourceModelWithAllowedPropertySetSkuArgs) ToResourceModelWithAllowedPropertySetSkuOutput() ResourceModelWithAllowedPropertySetSkuOutput {
	return i.ToResourceModelWithAllowedPropertySetSkuOutputWithContext(context.Background())
}

func (i ResourceModelWithAllowedPropertySetSkuArgs) ToResourceModelWithAllowedPropertySetSkuOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetSkuOutput)
}

func (i ResourceModelWithAllowedPropertySetSkuArgs) ToResourceModelWithAllowedPropertySetSkuPtrOutput() ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return i.ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(context.Background())
}

func (i ResourceModelWithAllowedPropertySetSkuArgs) ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetSkuOutput).ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(ctx)
}

// ResourceModelWithAllowedPropertySetSkuPtrInput is an input type that accepts ResourceModelWithAllowedPropertySetSkuArgs, ResourceModelWithAllowedPropertySetSkuPtr and ResourceModelWithAllowedPropertySetSkuPtrOutput values.
// You can construct a concrete instance of `ResourceModelWithAllowedPropertySetSkuPtrInput` via:
//
//	        ResourceModelWithAllowedPropertySetSkuArgs{...}
//
//	or:
//
//	        nil
type ResourceModelWithAllowedPropertySetSkuPtrInput interface {
	pulumi.Input

	ToResourceModelWithAllowedPropertySetSkuPtrOutput() ResourceModelWithAllowedPropertySetSkuPtrOutput
	ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(context.Context) ResourceModelWithAllowedPropertySetSkuPtrOutput
}

type resourceModelWithAllowedPropertySetSkuPtrType ResourceModelWithAllowedPropertySetSkuArgs

func ResourceModelWithAllowedPropertySetSkuPtr(v *ResourceModelWithAllowedPropertySetSkuArgs) ResourceModelWithAllowedPropertySetSkuPtrInput {
	return (*resourceModelWithAllowedPropertySetSkuPtrType)(v)
}

func (*resourceModelWithAllowedPropertySetSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetSku)(nil)).Elem()
}

func (i *resourceModelWithAllowedPropertySetSkuPtrType) ToResourceModelWithAllowedPropertySetSkuPtrOutput() ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return i.ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(context.Background())
}

func (i *resourceModelWithAllowedPropertySetSkuPtrType) ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceModelWithAllowedPropertySetSkuPtrOutput)
}

type ResourceModelWithAllowedPropertySetSkuOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceModelWithAllowedPropertySetSku)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetSkuOutput) ToResourceModelWithAllowedPropertySetSkuOutput() ResourceModelWithAllowedPropertySetSkuOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetSkuOutput) ToResourceModelWithAllowedPropertySetSkuOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetSkuOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetSkuOutput) ToResourceModelWithAllowedPropertySetSkuPtrOutput() ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return o.ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(context.Background())
}

func (o ResourceModelWithAllowedPropertySetSkuOutput) ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceModelWithAllowedPropertySetSku) *ResourceModelWithAllowedPropertySetSku {
		return &v
	}).(ResourceModelWithAllowedPropertySetSkuPtrOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o ResourceModelWithAllowedPropertySetSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o ResourceModelWithAllowedPropertySetSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o ResourceModelWithAllowedPropertySetSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetSku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o ResourceModelWithAllowedPropertySetSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o ResourceModelWithAllowedPropertySetSkuOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v ResourceModelWithAllowedPropertySetSku) *SkuTier { return v.Tier }).(SkuTierPtrOutput)
}

type ResourceModelWithAllowedPropertySetSkuPtrOutput struct{ *pulumi.OutputState }

func (ResourceModelWithAllowedPropertySetSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceModelWithAllowedPropertySetSku)(nil)).Elem()
}

func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) ToResourceModelWithAllowedPropertySetSkuPtrOutput() ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) ToResourceModelWithAllowedPropertySetSkuPtrOutputWithContext(ctx context.Context) ResourceModelWithAllowedPropertySetSkuPtrOutput {
	return o
}

func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) Elem() ResourceModelWithAllowedPropertySetSkuOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetSku) ResourceModelWithAllowedPropertySetSku {
		if v != nil {
			return *v
		}
		var ret ResourceModelWithAllowedPropertySetSku
		return ret
	}).(ResourceModelWithAllowedPropertySetSkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o ResourceModelWithAllowedPropertySetSkuPtrOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v *ResourceModelWithAllowedPropertySetSku) *SkuTier {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(SkuTierPtrOutput)
}

// Scaling plan reference to hostpool.
type ScalingHostPoolReference struct {
	// Arm path of referenced hostpool.
	HostPoolArmPath *string `pulumi:"hostPoolArmPath"`
	// Is the scaling plan enabled for this hostpool.
	ScalingPlanEnabled *bool `pulumi:"scalingPlanEnabled"`
}

// ScalingHostPoolReferenceInput is an input type that accepts ScalingHostPoolReferenceArgs and ScalingHostPoolReferenceOutput values.
// You can construct a concrete instance of `ScalingHostPoolReferenceInput` via:
//
//	ScalingHostPoolReferenceArgs{...}
type ScalingHostPoolReferenceInput interface {
	pulumi.Input

	ToScalingHostPoolReferenceOutput() ScalingHostPoolReferenceOutput
	ToScalingHostPoolReferenceOutputWithContext(context.Context) ScalingHostPoolReferenceOutput
}

// Scaling plan reference to hostpool.
type ScalingHostPoolReferenceArgs struct {
	// Arm path of referenced hostpool.
	HostPoolArmPath pulumi.StringPtrInput `pulumi:"hostPoolArmPath"`
	// Is the scaling plan enabled for this hostpool.
	ScalingPlanEnabled pulumi.BoolPtrInput `pulumi:"scalingPlanEnabled"`
}

func (ScalingHostPoolReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingHostPoolReference)(nil)).Elem()
}

func (i ScalingHostPoolReferenceArgs) ToScalingHostPoolReferenceOutput() ScalingHostPoolReferenceOutput {
	return i.ToScalingHostPoolReferenceOutputWithContext(context.Background())
}

func (i ScalingHostPoolReferenceArgs) ToScalingHostPoolReferenceOutputWithContext(ctx context.Context) ScalingHostPoolReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingHostPoolReferenceOutput)
}

// ScalingHostPoolReferenceArrayInput is an input type that accepts ScalingHostPoolReferenceArray and ScalingHostPoolReferenceArrayOutput values.
// You can construct a concrete instance of `ScalingHostPoolReferenceArrayInput` via:
//
//	ScalingHostPoolReferenceArray{ ScalingHostPoolReferenceArgs{...} }
type ScalingHostPoolReferenceArrayInput interface {
	pulumi.Input

	ToScalingHostPoolReferenceArrayOutput() ScalingHostPoolReferenceArrayOutput
	ToScalingHostPoolReferenceArrayOutputWithContext(context.Context) ScalingHostPoolReferenceArrayOutput
}

type ScalingHostPoolReferenceArray []ScalingHostPoolReferenceInput

func (ScalingHostPoolReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingHostPoolReference)(nil)).Elem()
}

func (i ScalingHostPoolReferenceArray) ToScalingHostPoolReferenceArrayOutput() ScalingHostPoolReferenceArrayOutput {
	return i.ToScalingHostPoolReferenceArrayOutputWithContext(context.Background())
}

func (i ScalingHostPoolReferenceArray) ToScalingHostPoolReferenceArrayOutputWithContext(ctx context.Context) ScalingHostPoolReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingHostPoolReferenceArrayOutput)
}

// Scaling plan reference to hostpool.
type ScalingHostPoolReferenceOutput struct{ *pulumi.OutputState }

func (ScalingHostPoolReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingHostPoolReference)(nil)).Elem()
}

func (o ScalingHostPoolReferenceOutput) ToScalingHostPoolReferenceOutput() ScalingHostPoolReferenceOutput {
	return o
}

func (o ScalingHostPoolReferenceOutput) ToScalingHostPoolReferenceOutputWithContext(ctx context.Context) ScalingHostPoolReferenceOutput {
	return o
}

// Arm path of referenced hostpool.
func (o ScalingHostPoolReferenceOutput) HostPoolArmPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingHostPoolReference) *string { return v.HostPoolArmPath }).(pulumi.StringPtrOutput)
}

// Is the scaling plan enabled for this hostpool.
func (o ScalingHostPoolReferenceOutput) ScalingPlanEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingHostPoolReference) *bool { return v.ScalingPlanEnabled }).(pulumi.BoolPtrOutput)
}

type ScalingHostPoolReferenceArrayOutput struct{ *pulumi.OutputState }

func (ScalingHostPoolReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingHostPoolReference)(nil)).Elem()
}

func (o ScalingHostPoolReferenceArrayOutput) ToScalingHostPoolReferenceArrayOutput() ScalingHostPoolReferenceArrayOutput {
	return o
}

func (o ScalingHostPoolReferenceArrayOutput) ToScalingHostPoolReferenceArrayOutputWithContext(ctx context.Context) ScalingHostPoolReferenceArrayOutput {
	return o
}

func (o ScalingHostPoolReferenceArrayOutput) Index(i pulumi.IntInput) ScalingHostPoolReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingHostPoolReference {
		return vs[0].([]ScalingHostPoolReference)[vs[1].(int)]
	}).(ScalingHostPoolReferenceOutput)
}

// Scaling plan reference to hostpool.
type ScalingHostPoolReferenceResponse struct {
	// Arm path of referenced hostpool.
	HostPoolArmPath *string `pulumi:"hostPoolArmPath"`
	// Is the scaling plan enabled for this hostpool.
	ScalingPlanEnabled *bool `pulumi:"scalingPlanEnabled"`
}

// Scaling plan reference to hostpool.
type ScalingHostPoolReferenceResponseOutput struct{ *pulumi.OutputState }

func (ScalingHostPoolReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingHostPoolReferenceResponse)(nil)).Elem()
}

func (o ScalingHostPoolReferenceResponseOutput) ToScalingHostPoolReferenceResponseOutput() ScalingHostPoolReferenceResponseOutput {
	return o
}

func (o ScalingHostPoolReferenceResponseOutput) ToScalingHostPoolReferenceResponseOutputWithContext(ctx context.Context) ScalingHostPoolReferenceResponseOutput {
	return o
}

// Arm path of referenced hostpool.
func (o ScalingHostPoolReferenceResponseOutput) HostPoolArmPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingHostPoolReferenceResponse) *string { return v.HostPoolArmPath }).(pulumi.StringPtrOutput)
}

// Is the scaling plan enabled for this hostpool.
func (o ScalingHostPoolReferenceResponseOutput) ScalingPlanEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingHostPoolReferenceResponse) *bool { return v.ScalingPlanEnabled }).(pulumi.BoolPtrOutput)
}

type ScalingHostPoolReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ScalingHostPoolReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingHostPoolReferenceResponse)(nil)).Elem()
}

func (o ScalingHostPoolReferenceResponseArrayOutput) ToScalingHostPoolReferenceResponseArrayOutput() ScalingHostPoolReferenceResponseArrayOutput {
	return o
}

func (o ScalingHostPoolReferenceResponseArrayOutput) ToScalingHostPoolReferenceResponseArrayOutputWithContext(ctx context.Context) ScalingHostPoolReferenceResponseArrayOutput {
	return o
}

func (o ScalingHostPoolReferenceResponseArrayOutput) Index(i pulumi.IntInput) ScalingHostPoolReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingHostPoolReferenceResponse {
		return vs[0].([]ScalingHostPoolReferenceResponse)[vs[1].(int)]
	}).(ScalingHostPoolReferenceResponseOutput)
}

// Scaling plan schedule.
type ScalingSchedule struct {
	// Set of days of the week on which this schedule is active.
	DaysOfWeek []string `pulumi:"daysOfWeek"`
	// Name of the scaling schedule.
	Name *string `pulumi:"name"`
	// Load balancing algorithm for off-peak period.
	OffPeakLoadBalancingAlgorithm *string `pulumi:"offPeakLoadBalancingAlgorithm"`
	// Starting time for off-peak period.
	OffPeakStartTime *string `pulumi:"offPeakStartTime"`
	// Load balancing algorithm for peak period.
	PeakLoadBalancingAlgorithm *string `pulumi:"peakLoadBalancingAlgorithm"`
	// Starting time for peak period.
	PeakStartTime *string `pulumi:"peakStartTime"`
	// Capacity threshold for ramp down period.
	RampDownCapacityThresholdPct *int `pulumi:"rampDownCapacityThresholdPct"`
	// Should users be logged off forcefully from hosts.
	RampDownForceLogoffUsers *bool `pulumi:"rampDownForceLogoffUsers"`
	// Load balancing algorithm for ramp down period.
	RampDownLoadBalancingAlgorithm *string `pulumi:"rampDownLoadBalancingAlgorithm"`
	// Minimum host percentage for ramp down period.
	RampDownMinimumHostsPct *int `pulumi:"rampDownMinimumHostsPct"`
	// Notification message for users during ramp down period.
	RampDownNotificationMessage *string `pulumi:"rampDownNotificationMessage"`
	// Starting time for ramp down period.
	RampDownStartTime *string `pulumi:"rampDownStartTime"`
	// Specifies when to stop hosts during ramp down period.
	RampDownStopHostsWhen *string `pulumi:"rampDownStopHostsWhen"`
	// Number of minutes to wait to stop hosts during ramp down period.
	RampDownWaitTimeMinutes *int `pulumi:"rampDownWaitTimeMinutes"`
	// Capacity threshold for ramp up period.
	RampUpCapacityThresholdPct *int `pulumi:"rampUpCapacityThresholdPct"`
	// Load balancing algorithm for ramp up period.
	RampUpLoadBalancingAlgorithm *string `pulumi:"rampUpLoadBalancingAlgorithm"`
	// Minimum host percentage for ramp up period.
	RampUpMinimumHostsPct *int `pulumi:"rampUpMinimumHostsPct"`
	// Starting time for ramp up period.
	RampUpStartTime *string `pulumi:"rampUpStartTime"`
}

// ScalingScheduleInput is an input type that accepts ScalingScheduleArgs and ScalingScheduleOutput values.
// You can construct a concrete instance of `ScalingScheduleInput` via:
//
//	ScalingScheduleArgs{...}
type ScalingScheduleInput interface {
	pulumi.Input

	ToScalingScheduleOutput() ScalingScheduleOutput
	ToScalingScheduleOutputWithContext(context.Context) ScalingScheduleOutput
}

// Scaling plan schedule.
type ScalingScheduleArgs struct {
	// Set of days of the week on which this schedule is active.
	DaysOfWeek pulumi.StringArrayInput `pulumi:"daysOfWeek"`
	// Name of the scaling schedule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Load balancing algorithm for off-peak period.
	OffPeakLoadBalancingAlgorithm pulumi.StringPtrInput `pulumi:"offPeakLoadBalancingAlgorithm"`
	// Starting time for off-peak period.
	OffPeakStartTime pulumi.StringPtrInput `pulumi:"offPeakStartTime"`
	// Load balancing algorithm for peak period.
	PeakLoadBalancingAlgorithm pulumi.StringPtrInput `pulumi:"peakLoadBalancingAlgorithm"`
	// Starting time for peak period.
	PeakStartTime pulumi.StringPtrInput `pulumi:"peakStartTime"`
	// Capacity threshold for ramp down period.
	RampDownCapacityThresholdPct pulumi.IntPtrInput `pulumi:"rampDownCapacityThresholdPct"`
	// Should users be logged off forcefully from hosts.
	RampDownForceLogoffUsers pulumi.BoolPtrInput `pulumi:"rampDownForceLogoffUsers"`
	// Load balancing algorithm for ramp down period.
	RampDownLoadBalancingAlgorithm pulumi.StringPtrInput `pulumi:"rampDownLoadBalancingAlgorithm"`
	// Minimum host percentage for ramp down period.
	RampDownMinimumHostsPct pulumi.IntPtrInput `pulumi:"rampDownMinimumHostsPct"`
	// Notification message for users during ramp down period.
	RampDownNotificationMessage pulumi.StringPtrInput `pulumi:"rampDownNotificationMessage"`
	// Starting time for ramp down period.
	RampDownStartTime pulumi.StringPtrInput `pulumi:"rampDownStartTime"`
	// Specifies when to stop hosts during ramp down period.
	RampDownStopHostsWhen pulumi.StringPtrInput `pulumi:"rampDownStopHostsWhen"`
	// Number of minutes to wait to stop hosts during ramp down period.
	RampDownWaitTimeMinutes pulumi.IntPtrInput `pulumi:"rampDownWaitTimeMinutes"`
	// Capacity threshold for ramp up period.
	RampUpCapacityThresholdPct pulumi.IntPtrInput `pulumi:"rampUpCapacityThresholdPct"`
	// Load balancing algorithm for ramp up period.
	RampUpLoadBalancingAlgorithm pulumi.StringPtrInput `pulumi:"rampUpLoadBalancingAlgorithm"`
	// Minimum host percentage for ramp up period.
	RampUpMinimumHostsPct pulumi.IntPtrInput `pulumi:"rampUpMinimumHostsPct"`
	// Starting time for ramp up period.
	RampUpStartTime pulumi.StringPtrInput `pulumi:"rampUpStartTime"`
}

func (ScalingScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingSchedule)(nil)).Elem()
}

func (i ScalingScheduleArgs) ToScalingScheduleOutput() ScalingScheduleOutput {
	return i.ToScalingScheduleOutputWithContext(context.Background())
}

func (i ScalingScheduleArgs) ToScalingScheduleOutputWithContext(ctx context.Context) ScalingScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingScheduleOutput)
}

// ScalingScheduleArrayInput is an input type that accepts ScalingScheduleArray and ScalingScheduleArrayOutput values.
// You can construct a concrete instance of `ScalingScheduleArrayInput` via:
//
//	ScalingScheduleArray{ ScalingScheduleArgs{...} }
type ScalingScheduleArrayInput interface {
	pulumi.Input

	ToScalingScheduleArrayOutput() ScalingScheduleArrayOutput
	ToScalingScheduleArrayOutputWithContext(context.Context) ScalingScheduleArrayOutput
}

type ScalingScheduleArray []ScalingScheduleInput

func (ScalingScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingSchedule)(nil)).Elem()
}

func (i ScalingScheduleArray) ToScalingScheduleArrayOutput() ScalingScheduleArrayOutput {
	return i.ToScalingScheduleArrayOutputWithContext(context.Background())
}

func (i ScalingScheduleArray) ToScalingScheduleArrayOutputWithContext(ctx context.Context) ScalingScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingScheduleArrayOutput)
}

// Scaling plan schedule.
type ScalingScheduleOutput struct{ *pulumi.OutputState }

func (ScalingScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingSchedule)(nil)).Elem()
}

func (o ScalingScheduleOutput) ToScalingScheduleOutput() ScalingScheduleOutput {
	return o
}

func (o ScalingScheduleOutput) ToScalingScheduleOutputWithContext(ctx context.Context) ScalingScheduleOutput {
	return o
}

// Set of days of the week on which this schedule is active.
func (o ScalingScheduleOutput) DaysOfWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalingSchedule) []string { return v.DaysOfWeek }).(pulumi.StringArrayOutput)
}

// Name of the scaling schedule.
func (o ScalingScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Load balancing algorithm for off-peak period.
func (o ScalingScheduleOutput) OffPeakLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.OffPeakLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Starting time for off-peak period.
func (o ScalingScheduleOutput) OffPeakStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.OffPeakStartTime }).(pulumi.StringPtrOutput)
}

// Load balancing algorithm for peak period.
func (o ScalingScheduleOutput) PeakLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.PeakLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Starting time for peak period.
func (o ScalingScheduleOutput) PeakStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.PeakStartTime }).(pulumi.StringPtrOutput)
}

// Capacity threshold for ramp down period.
func (o ScalingScheduleOutput) RampDownCapacityThresholdPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *int { return v.RampDownCapacityThresholdPct }).(pulumi.IntPtrOutput)
}

// Should users be logged off forcefully from hosts.
func (o ScalingScheduleOutput) RampDownForceLogoffUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *bool { return v.RampDownForceLogoffUsers }).(pulumi.BoolPtrOutput)
}

// Load balancing algorithm for ramp down period.
func (o ScalingScheduleOutput) RampDownLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.RampDownLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Minimum host percentage for ramp down period.
func (o ScalingScheduleOutput) RampDownMinimumHostsPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *int { return v.RampDownMinimumHostsPct }).(pulumi.IntPtrOutput)
}

// Notification message for users during ramp down period.
func (o ScalingScheduleOutput) RampDownNotificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.RampDownNotificationMessage }).(pulumi.StringPtrOutput)
}

// Starting time for ramp down period.
func (o ScalingScheduleOutput) RampDownStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.RampDownStartTime }).(pulumi.StringPtrOutput)
}

// Specifies when to stop hosts during ramp down period.
func (o ScalingScheduleOutput) RampDownStopHostsWhen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.RampDownStopHostsWhen }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait to stop hosts during ramp down period.
func (o ScalingScheduleOutput) RampDownWaitTimeMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *int { return v.RampDownWaitTimeMinutes }).(pulumi.IntPtrOutput)
}

// Capacity threshold for ramp up period.
func (o ScalingScheduleOutput) RampUpCapacityThresholdPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *int { return v.RampUpCapacityThresholdPct }).(pulumi.IntPtrOutput)
}

// Load balancing algorithm for ramp up period.
func (o ScalingScheduleOutput) RampUpLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.RampUpLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Minimum host percentage for ramp up period.
func (o ScalingScheduleOutput) RampUpMinimumHostsPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *int { return v.RampUpMinimumHostsPct }).(pulumi.IntPtrOutput)
}

// Starting time for ramp up period.
func (o ScalingScheduleOutput) RampUpStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingSchedule) *string { return v.RampUpStartTime }).(pulumi.StringPtrOutput)
}

type ScalingScheduleArrayOutput struct{ *pulumi.OutputState }

func (ScalingScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingSchedule)(nil)).Elem()
}

func (o ScalingScheduleArrayOutput) ToScalingScheduleArrayOutput() ScalingScheduleArrayOutput {
	return o
}

func (o ScalingScheduleArrayOutput) ToScalingScheduleArrayOutputWithContext(ctx context.Context) ScalingScheduleArrayOutput {
	return o
}

func (o ScalingScheduleArrayOutput) Index(i pulumi.IntInput) ScalingScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingSchedule {
		return vs[0].([]ScalingSchedule)[vs[1].(int)]
	}).(ScalingScheduleOutput)
}

// Scaling plan schedule.
type ScalingScheduleResponse struct {
	// Set of days of the week on which this schedule is active.
	DaysOfWeek []string `pulumi:"daysOfWeek"`
	// Name of the scaling schedule.
	Name *string `pulumi:"name"`
	// Load balancing algorithm for off-peak period.
	OffPeakLoadBalancingAlgorithm *string `pulumi:"offPeakLoadBalancingAlgorithm"`
	// Starting time for off-peak period.
	OffPeakStartTime *string `pulumi:"offPeakStartTime"`
	// Load balancing algorithm for peak period.
	PeakLoadBalancingAlgorithm *string `pulumi:"peakLoadBalancingAlgorithm"`
	// Starting time for peak period.
	PeakStartTime *string `pulumi:"peakStartTime"`
	// Capacity threshold for ramp down period.
	RampDownCapacityThresholdPct *int `pulumi:"rampDownCapacityThresholdPct"`
	// Should users be logged off forcefully from hosts.
	RampDownForceLogoffUsers *bool `pulumi:"rampDownForceLogoffUsers"`
	// Load balancing algorithm for ramp down period.
	RampDownLoadBalancingAlgorithm *string `pulumi:"rampDownLoadBalancingAlgorithm"`
	// Minimum host percentage for ramp down period.
	RampDownMinimumHostsPct *int `pulumi:"rampDownMinimumHostsPct"`
	// Notification message for users during ramp down period.
	RampDownNotificationMessage *string `pulumi:"rampDownNotificationMessage"`
	// Starting time for ramp down period.
	RampDownStartTime *string `pulumi:"rampDownStartTime"`
	// Specifies when to stop hosts during ramp down period.
	RampDownStopHostsWhen *string `pulumi:"rampDownStopHostsWhen"`
	// Number of minutes to wait to stop hosts during ramp down period.
	RampDownWaitTimeMinutes *int `pulumi:"rampDownWaitTimeMinutes"`
	// Capacity threshold for ramp up period.
	RampUpCapacityThresholdPct *int `pulumi:"rampUpCapacityThresholdPct"`
	// Load balancing algorithm for ramp up period.
	RampUpLoadBalancingAlgorithm *string `pulumi:"rampUpLoadBalancingAlgorithm"`
	// Minimum host percentage for ramp up period.
	RampUpMinimumHostsPct *int `pulumi:"rampUpMinimumHostsPct"`
	// Starting time for ramp up period.
	RampUpStartTime *string `pulumi:"rampUpStartTime"`
}

// Scaling plan schedule.
type ScalingScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScalingScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingScheduleResponse)(nil)).Elem()
}

func (o ScalingScheduleResponseOutput) ToScalingScheduleResponseOutput() ScalingScheduleResponseOutput {
	return o
}

func (o ScalingScheduleResponseOutput) ToScalingScheduleResponseOutputWithContext(ctx context.Context) ScalingScheduleResponseOutput {
	return o
}

// Set of days of the week on which this schedule is active.
func (o ScalingScheduleResponseOutput) DaysOfWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) []string { return v.DaysOfWeek }).(pulumi.StringArrayOutput)
}

// Name of the scaling schedule.
func (o ScalingScheduleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Load balancing algorithm for off-peak period.
func (o ScalingScheduleResponseOutput) OffPeakLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.OffPeakLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Starting time for off-peak period.
func (o ScalingScheduleResponseOutput) OffPeakStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.OffPeakStartTime }).(pulumi.StringPtrOutput)
}

// Load balancing algorithm for peak period.
func (o ScalingScheduleResponseOutput) PeakLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.PeakLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Starting time for peak period.
func (o ScalingScheduleResponseOutput) PeakStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.PeakStartTime }).(pulumi.StringPtrOutput)
}

// Capacity threshold for ramp down period.
func (o ScalingScheduleResponseOutput) RampDownCapacityThresholdPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *int { return v.RampDownCapacityThresholdPct }).(pulumi.IntPtrOutput)
}

// Should users be logged off forcefully from hosts.
func (o ScalingScheduleResponseOutput) RampDownForceLogoffUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *bool { return v.RampDownForceLogoffUsers }).(pulumi.BoolPtrOutput)
}

// Load balancing algorithm for ramp down period.
func (o ScalingScheduleResponseOutput) RampDownLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.RampDownLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Minimum host percentage for ramp down period.
func (o ScalingScheduleResponseOutput) RampDownMinimumHostsPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *int { return v.RampDownMinimumHostsPct }).(pulumi.IntPtrOutput)
}

// Notification message for users during ramp down period.
func (o ScalingScheduleResponseOutput) RampDownNotificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.RampDownNotificationMessage }).(pulumi.StringPtrOutput)
}

// Starting time for ramp down period.
func (o ScalingScheduleResponseOutput) RampDownStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.RampDownStartTime }).(pulumi.StringPtrOutput)
}

// Specifies when to stop hosts during ramp down period.
func (o ScalingScheduleResponseOutput) RampDownStopHostsWhen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.RampDownStopHostsWhen }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait to stop hosts during ramp down period.
func (o ScalingScheduleResponseOutput) RampDownWaitTimeMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *int { return v.RampDownWaitTimeMinutes }).(pulumi.IntPtrOutput)
}

// Capacity threshold for ramp up period.
func (o ScalingScheduleResponseOutput) RampUpCapacityThresholdPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *int { return v.RampUpCapacityThresholdPct }).(pulumi.IntPtrOutput)
}

// Load balancing algorithm for ramp up period.
func (o ScalingScheduleResponseOutput) RampUpLoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.RampUpLoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// Minimum host percentage for ramp up period.
func (o ScalingScheduleResponseOutput) RampUpMinimumHostsPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *int { return v.RampUpMinimumHostsPct }).(pulumi.IntPtrOutput)
}

// Starting time for ramp up period.
func (o ScalingScheduleResponseOutput) RampUpStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingScheduleResponse) *string { return v.RampUpStartTime }).(pulumi.StringPtrOutput)
}

type ScalingScheduleResponseArrayOutput struct{ *pulumi.OutputState }

func (ScalingScheduleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingScheduleResponse)(nil)).Elem()
}

func (o ScalingScheduleResponseArrayOutput) ToScalingScheduleResponseArrayOutput() ScalingScheduleResponseArrayOutput {
	return o
}

func (o ScalingScheduleResponseArrayOutput) ToScalingScheduleResponseArrayOutputWithContext(ctx context.Context) ScalingScheduleResponseArrayOutput {
	return o
}

func (o ScalingScheduleResponseArrayOutput) Index(i pulumi.IntInput) ScalingScheduleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingScheduleResponse {
		return vs[0].([]ScalingScheduleResponse)[vs[1].(int)]
	}).(ScalingScheduleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetIdentityOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetPlanOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetPlanPtrOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetResponseIdentityOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetResponsePlanOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetResponsePlanPtrOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetResponseSkuOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetResponseSkuPtrOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetSkuOutput{})
	pulumi.RegisterOutputType(ResourceModelWithAllowedPropertySetSkuPtrOutput{})
	pulumi.RegisterOutputType(ScalingHostPoolReferenceOutput{})
	pulumi.RegisterOutputType(ScalingHostPoolReferenceArrayOutput{})
	pulumi.RegisterOutputType(ScalingHostPoolReferenceResponseOutput{})
	pulumi.RegisterOutputType(ScalingHostPoolReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ScalingScheduleOutput{})
	pulumi.RegisterOutputType(ScalingScheduleArrayOutput{})
	pulumi.RegisterOutputType(ScalingScheduleResponseOutput{})
	pulumi.RegisterOutputType(ScalingScheduleResponseArrayOutput{})
}
