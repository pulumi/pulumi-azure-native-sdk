// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// HostPool type for desktop.
type HostPoolType string

const (
	// Users will be assigned a SessionHost either by administrators (PersonalDesktopAssignmentType = Direct) or upon connecting to the pool (PersonalDesktopAssignmentType = Automatic). They will always be redirected to their assigned SessionHost.
	HostPoolTypePersonal = HostPoolType("Personal")
	// Users get a new (random) SessionHost every time it connects to the HostPool.
	HostPoolTypePooled = HostPoolType("Pooled")
	// Users assign their own machines, load balancing logic remains the same as Personal. PersonalDesktopAssignmentType must be Direct.
	HostPoolTypeBYODesktop = HostPoolType("BYODesktop")
)

func (HostPoolType) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPoolType)(nil)).Elem()
}

func (e HostPoolType) ToHostPoolTypeOutput() HostPoolTypeOutput {
	return pulumi.ToOutput(e).(HostPoolTypeOutput)
}

func (e HostPoolType) ToHostPoolTypeOutputWithContext(ctx context.Context) HostPoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HostPoolTypeOutput)
}

func (e HostPoolType) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return e.ToHostPoolTypePtrOutputWithContext(context.Background())
}

func (e HostPoolType) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return HostPoolType(e).ToHostPoolTypeOutputWithContext(ctx).ToHostPoolTypePtrOutputWithContext(ctx)
}

func (e HostPoolType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostPoolType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostPoolType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HostPoolType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HostPoolTypeOutput struct{ *pulumi.OutputState }

func (HostPoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPoolType)(nil)).Elem()
}

func (o HostPoolTypeOutput) ToHostPoolTypeOutput() HostPoolTypeOutput {
	return o
}

func (o HostPoolTypeOutput) ToHostPoolTypeOutputWithContext(ctx context.Context) HostPoolTypeOutput {
	return o
}

func (o HostPoolTypeOutput) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return o.ToHostPoolTypePtrOutputWithContext(context.Background())
}

func (o HostPoolTypeOutput) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostPoolType) *HostPoolType {
		return &v
	}).(HostPoolTypePtrOutput)
}

func (o HostPoolTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HostPoolTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostPoolType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HostPoolTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostPoolTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostPoolType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HostPoolTypePtrOutput struct{ *pulumi.OutputState }

func (HostPoolTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostPoolType)(nil)).Elem()
}

func (o HostPoolTypePtrOutput) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return o
}

func (o HostPoolTypePtrOutput) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return o
}

func (o HostPoolTypePtrOutput) Elem() HostPoolTypeOutput {
	return o.ApplyT(func(v *HostPoolType) HostPoolType {
		if v != nil {
			return *v
		}
		var ret HostPoolType
		return ret
	}).(HostPoolTypeOutput)
}

func (o HostPoolTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostPoolTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HostPoolType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HostPoolTypeInput is an input type that accepts values of the HostPoolType enum
// A concrete instance of `HostPoolTypeInput` can be one of the following:
//
//	HostPoolTypePersonal
//	HostPoolTypePooled
//	HostPoolTypeBYODesktop
type HostPoolTypeInput interface {
	pulumi.Input

	ToHostPoolTypeOutput() HostPoolTypeOutput
	ToHostPoolTypeOutputWithContext(context.Context) HostPoolTypeOutput
}

var hostPoolTypePtrType = reflect.TypeOf((**HostPoolType)(nil)).Elem()

type HostPoolTypePtrInput interface {
	pulumi.Input

	ToHostPoolTypePtrOutput() HostPoolTypePtrOutput
	ToHostPoolTypePtrOutputWithContext(context.Context) HostPoolTypePtrOutput
}

type hostPoolTypePtr string

func HostPoolTypePtr(v string) HostPoolTypePtrInput {
	return (*hostPoolTypePtr)(&v)
}

func (*hostPoolTypePtr) ElementType() reflect.Type {
	return hostPoolTypePtrType
}

func (in *hostPoolTypePtr) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return pulumi.ToOutput(in).(HostPoolTypePtrOutput)
}

func (in *hostPoolTypePtr) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HostPoolTypePtrOutput)
}

func (in *hostPoolTypePtr) ToOutput(ctx context.Context) pulumix.Output[*HostPoolType] {
	return pulumix.Output[*HostPoolType]{
		OutputState: in.ToHostPoolTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The identity type.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceIdentityType] {
	return pulumix.Output[*ResourceIdentityType]{
		OutputState: in.ToResourceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Load balancing algorithm for ramp up period.
type SessionHostLoadBalancingAlgorithm string

const (
	SessionHostLoadBalancingAlgorithmBreadthFirst = SessionHostLoadBalancingAlgorithm("BreadthFirst")
	SessionHostLoadBalancingAlgorithmDepthFirst   = SessionHostLoadBalancingAlgorithm("DepthFirst")
)

func (SessionHostLoadBalancingAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionHostLoadBalancingAlgorithm)(nil)).Elem()
}

func (e SessionHostLoadBalancingAlgorithm) ToSessionHostLoadBalancingAlgorithmOutput() SessionHostLoadBalancingAlgorithmOutput {
	return pulumi.ToOutput(e).(SessionHostLoadBalancingAlgorithmOutput)
}

func (e SessionHostLoadBalancingAlgorithm) ToSessionHostLoadBalancingAlgorithmOutputWithContext(ctx context.Context) SessionHostLoadBalancingAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SessionHostLoadBalancingAlgorithmOutput)
}

func (e SessionHostLoadBalancingAlgorithm) ToSessionHostLoadBalancingAlgorithmPtrOutput() SessionHostLoadBalancingAlgorithmPtrOutput {
	return e.ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(context.Background())
}

func (e SessionHostLoadBalancingAlgorithm) ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) SessionHostLoadBalancingAlgorithmPtrOutput {
	return SessionHostLoadBalancingAlgorithm(e).ToSessionHostLoadBalancingAlgorithmOutputWithContext(ctx).ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(ctx)
}

func (e SessionHostLoadBalancingAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SessionHostLoadBalancingAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SessionHostLoadBalancingAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SessionHostLoadBalancingAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SessionHostLoadBalancingAlgorithmOutput struct{ *pulumi.OutputState }

func (SessionHostLoadBalancingAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionHostLoadBalancingAlgorithm)(nil)).Elem()
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToSessionHostLoadBalancingAlgorithmOutput() SessionHostLoadBalancingAlgorithmOutput {
	return o
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToSessionHostLoadBalancingAlgorithmOutputWithContext(ctx context.Context) SessionHostLoadBalancingAlgorithmOutput {
	return o
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToSessionHostLoadBalancingAlgorithmPtrOutput() SessionHostLoadBalancingAlgorithmPtrOutput {
	return o.ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(context.Background())
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) SessionHostLoadBalancingAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionHostLoadBalancingAlgorithm) *SessionHostLoadBalancingAlgorithm {
		return &v
	}).(SessionHostLoadBalancingAlgorithmPtrOutput)
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SessionHostLoadBalancingAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SessionHostLoadBalancingAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SessionHostLoadBalancingAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SessionHostLoadBalancingAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (SessionHostLoadBalancingAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionHostLoadBalancingAlgorithm)(nil)).Elem()
}

func (o SessionHostLoadBalancingAlgorithmPtrOutput) ToSessionHostLoadBalancingAlgorithmPtrOutput() SessionHostLoadBalancingAlgorithmPtrOutput {
	return o
}

func (o SessionHostLoadBalancingAlgorithmPtrOutput) ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) SessionHostLoadBalancingAlgorithmPtrOutput {
	return o
}

func (o SessionHostLoadBalancingAlgorithmPtrOutput) Elem() SessionHostLoadBalancingAlgorithmOutput {
	return o.ApplyT(func(v *SessionHostLoadBalancingAlgorithm) SessionHostLoadBalancingAlgorithm {
		if v != nil {
			return *v
		}
		var ret SessionHostLoadBalancingAlgorithm
		return ret
	}).(SessionHostLoadBalancingAlgorithmOutput)
}

func (o SessionHostLoadBalancingAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SessionHostLoadBalancingAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SessionHostLoadBalancingAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SessionHostLoadBalancingAlgorithmInput is an input type that accepts values of the SessionHostLoadBalancingAlgorithm enum
// A concrete instance of `SessionHostLoadBalancingAlgorithmInput` can be one of the following:
//
//	SessionHostLoadBalancingAlgorithmBreadthFirst
//	SessionHostLoadBalancingAlgorithmDepthFirst
type SessionHostLoadBalancingAlgorithmInput interface {
	pulumi.Input

	ToSessionHostLoadBalancingAlgorithmOutput() SessionHostLoadBalancingAlgorithmOutput
	ToSessionHostLoadBalancingAlgorithmOutputWithContext(context.Context) SessionHostLoadBalancingAlgorithmOutput
}

var sessionHostLoadBalancingAlgorithmPtrType = reflect.TypeOf((**SessionHostLoadBalancingAlgorithm)(nil)).Elem()

type SessionHostLoadBalancingAlgorithmPtrInput interface {
	pulumi.Input

	ToSessionHostLoadBalancingAlgorithmPtrOutput() SessionHostLoadBalancingAlgorithmPtrOutput
	ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(context.Context) SessionHostLoadBalancingAlgorithmPtrOutput
}

type sessionHostLoadBalancingAlgorithmPtr string

func SessionHostLoadBalancingAlgorithmPtr(v string) SessionHostLoadBalancingAlgorithmPtrInput {
	return (*sessionHostLoadBalancingAlgorithmPtr)(&v)
}

func (*sessionHostLoadBalancingAlgorithmPtr) ElementType() reflect.Type {
	return sessionHostLoadBalancingAlgorithmPtrType
}

func (in *sessionHostLoadBalancingAlgorithmPtr) ToSessionHostLoadBalancingAlgorithmPtrOutput() SessionHostLoadBalancingAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(SessionHostLoadBalancingAlgorithmPtrOutput)
}

func (in *sessionHostLoadBalancingAlgorithmPtr) ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) SessionHostLoadBalancingAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SessionHostLoadBalancingAlgorithmPtrOutput)
}

func (in *sessionHostLoadBalancingAlgorithmPtr) ToOutput(ctx context.Context) pulumix.Output[*SessionHostLoadBalancingAlgorithm] {
	return pulumix.Output[*SessionHostLoadBalancingAlgorithm]{
		OutputState: in.ToSessionHostLoadBalancingAlgorithmPtrOutputWithContext(ctx).OutputState,
	}
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*SkuTier] {
	return pulumix.Output[*SkuTier]{
		OutputState: in.ToSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies when to stop hosts during ramp down period.
type StopHostsWhen string

const (
	StopHostsWhenZeroSessions       = StopHostsWhen("ZeroSessions")
	StopHostsWhenZeroActiveSessions = StopHostsWhen("ZeroActiveSessions")
)

func (StopHostsWhen) ElementType() reflect.Type {
	return reflect.TypeOf((*StopHostsWhen)(nil)).Elem()
}

func (e StopHostsWhen) ToStopHostsWhenOutput() StopHostsWhenOutput {
	return pulumi.ToOutput(e).(StopHostsWhenOutput)
}

func (e StopHostsWhen) ToStopHostsWhenOutputWithContext(ctx context.Context) StopHostsWhenOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StopHostsWhenOutput)
}

func (e StopHostsWhen) ToStopHostsWhenPtrOutput() StopHostsWhenPtrOutput {
	return e.ToStopHostsWhenPtrOutputWithContext(context.Background())
}

func (e StopHostsWhen) ToStopHostsWhenPtrOutputWithContext(ctx context.Context) StopHostsWhenPtrOutput {
	return StopHostsWhen(e).ToStopHostsWhenOutputWithContext(ctx).ToStopHostsWhenPtrOutputWithContext(ctx)
}

func (e StopHostsWhen) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StopHostsWhen) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StopHostsWhen) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StopHostsWhen) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StopHostsWhenOutput struct{ *pulumi.OutputState }

func (StopHostsWhenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StopHostsWhen)(nil)).Elem()
}

func (o StopHostsWhenOutput) ToStopHostsWhenOutput() StopHostsWhenOutput {
	return o
}

func (o StopHostsWhenOutput) ToStopHostsWhenOutputWithContext(ctx context.Context) StopHostsWhenOutput {
	return o
}

func (o StopHostsWhenOutput) ToStopHostsWhenPtrOutput() StopHostsWhenPtrOutput {
	return o.ToStopHostsWhenPtrOutputWithContext(context.Background())
}

func (o StopHostsWhenOutput) ToStopHostsWhenPtrOutputWithContext(ctx context.Context) StopHostsWhenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StopHostsWhen) *StopHostsWhen {
		return &v
	}).(StopHostsWhenPtrOutput)
}

func (o StopHostsWhenOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StopHostsWhenOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StopHostsWhen) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StopHostsWhenOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StopHostsWhenOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StopHostsWhen) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StopHostsWhenPtrOutput struct{ *pulumi.OutputState }

func (StopHostsWhenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StopHostsWhen)(nil)).Elem()
}

func (o StopHostsWhenPtrOutput) ToStopHostsWhenPtrOutput() StopHostsWhenPtrOutput {
	return o
}

func (o StopHostsWhenPtrOutput) ToStopHostsWhenPtrOutputWithContext(ctx context.Context) StopHostsWhenPtrOutput {
	return o
}

func (o StopHostsWhenPtrOutput) Elem() StopHostsWhenOutput {
	return o.ApplyT(func(v *StopHostsWhen) StopHostsWhen {
		if v != nil {
			return *v
		}
		var ret StopHostsWhen
		return ret
	}).(StopHostsWhenOutput)
}

func (o StopHostsWhenPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StopHostsWhenPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StopHostsWhen) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StopHostsWhenInput is an input type that accepts values of the StopHostsWhen enum
// A concrete instance of `StopHostsWhenInput` can be one of the following:
//
//	StopHostsWhenZeroSessions
//	StopHostsWhenZeroActiveSessions
type StopHostsWhenInput interface {
	pulumi.Input

	ToStopHostsWhenOutput() StopHostsWhenOutput
	ToStopHostsWhenOutputWithContext(context.Context) StopHostsWhenOutput
}

var stopHostsWhenPtrType = reflect.TypeOf((**StopHostsWhen)(nil)).Elem()

type StopHostsWhenPtrInput interface {
	pulumi.Input

	ToStopHostsWhenPtrOutput() StopHostsWhenPtrOutput
	ToStopHostsWhenPtrOutputWithContext(context.Context) StopHostsWhenPtrOutput
}

type stopHostsWhenPtr string

func StopHostsWhenPtr(v string) StopHostsWhenPtrInput {
	return (*stopHostsWhenPtr)(&v)
}

func (*stopHostsWhenPtr) ElementType() reflect.Type {
	return stopHostsWhenPtrType
}

func (in *stopHostsWhenPtr) ToStopHostsWhenPtrOutput() StopHostsWhenPtrOutput {
	return pulumi.ToOutput(in).(StopHostsWhenPtrOutput)
}

func (in *stopHostsWhenPtr) ToStopHostsWhenPtrOutputWithContext(ctx context.Context) StopHostsWhenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StopHostsWhenPtrOutput)
}

func (in *stopHostsWhenPtr) ToOutput(ctx context.Context) pulumix.Output[*StopHostsWhen] {
	return pulumix.Output[*StopHostsWhen]{
		OutputState: in.ToStopHostsWhenPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(HostPoolTypeOutput{})
	pulumi.RegisterOutputType(HostPoolTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SessionHostLoadBalancingAlgorithmOutput{})
	pulumi.RegisterOutputType(SessionHostLoadBalancingAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(StopHostsWhenOutput{})
	pulumi.RegisterOutputType(StopHostsWhenPtrOutput{})
}
