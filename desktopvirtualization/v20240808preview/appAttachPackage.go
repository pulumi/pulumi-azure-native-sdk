// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240808preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for App Attach Package properties.
type AppAttachPackage struct {
	pulumi.CustomResourceState

	// Field that can be populated with custom data and filtered on in list GET calls
	CustomData pulumi.StringPtrOutput `pulumi:"customData"`
	// Parameter indicating how the health check should behave if this package fails staging
	FailHealthCheckOnStagingFailure pulumi.StringPtrOutput `pulumi:"failHealthCheckOnStagingFailure"`
	// List of Hostpool resource Ids.
	HostPoolReferences pulumi.StringArrayOutput `pulumi:"hostPoolReferences"`
	// Detailed properties for App Attach Package
	Image AppAttachPackageInfoPropertiesResponsePtrOutput `pulumi:"image"`
	// URL path to certificate name located in keyVault
	KeyVaultURL pulumi.StringPtrOutput `pulumi:"keyVaultURL"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Lookback url to third party control plane, is null for native app attach packages
	PackageLookbackUrl pulumi.StringPtrOutput `pulumi:"packageLookbackUrl"`
	// Specific name of package owner, is "AppAttach" for native app attach packages
	PackageOwnerName pulumi.StringPtrOutput `pulumi:"packageOwnerName"`
	// The provisioning state of the App Attach Package.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAppAttachPackage registers a new resource with the given unique name, arguments, and options.
func NewAppAttachPackage(ctx *pulumi.Context,
	name string, args *AppAttachPackageArgs, opts ...pulumi.ResourceOption) (*AppAttachPackage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20231004preview:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20231101preview:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20240116preview:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20240306preview:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20240403:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20240408preview:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20241101preview:AppAttachPackage"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization:AppAttachPackage"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AppAttachPackage
	err := ctx.RegisterResource("azure-native:desktopvirtualization/v20240808preview:AppAttachPackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppAttachPackage gets an existing AppAttachPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppAttachPackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppAttachPackageState, opts ...pulumi.ResourceOption) (*AppAttachPackage, error) {
	var resource AppAttachPackage
	err := ctx.ReadResource("azure-native:desktopvirtualization/v20240808preview:AppAttachPackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppAttachPackage resources.
type appAttachPackageState struct {
}

type AppAttachPackageState struct {
}

func (AppAttachPackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*appAttachPackageState)(nil)).Elem()
}

type appAttachPackageArgs struct {
	// The name of the App Attach package
	AppAttachPackageName *string `pulumi:"appAttachPackageName"`
	// Field that can be populated with custom data and filtered on in list GET calls
	CustomData *string `pulumi:"customData"`
	// Parameter indicating how the health check should behave if this package fails staging
	FailHealthCheckOnStagingFailure *string `pulumi:"failHealthCheckOnStagingFailure"`
	// List of Hostpool resource Ids.
	HostPoolReferences []string `pulumi:"hostPoolReferences"`
	// Detailed properties for App Attach Package
	Image *AppAttachPackageInfoProperties `pulumi:"image"`
	// URL path to certificate name located in keyVault
	KeyVaultURL *string `pulumi:"keyVaultURL"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Lookback url to third party control plane, is null for native app attach packages
	PackageLookbackUrl *string `pulumi:"packageLookbackUrl"`
	// Specific name of package owner, is "AppAttach" for native app attach packages
	PackageOwnerName *string `pulumi:"packageOwnerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AppAttachPackage resource.
type AppAttachPackageArgs struct {
	// The name of the App Attach package
	AppAttachPackageName pulumi.StringPtrInput
	// Field that can be populated with custom data and filtered on in list GET calls
	CustomData pulumi.StringPtrInput
	// Parameter indicating how the health check should behave if this package fails staging
	FailHealthCheckOnStagingFailure pulumi.StringPtrInput
	// List of Hostpool resource Ids.
	HostPoolReferences pulumi.StringArrayInput
	// Detailed properties for App Attach Package
	Image AppAttachPackageInfoPropertiesPtrInput
	// URL path to certificate name located in keyVault
	KeyVaultURL pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Lookback url to third party control plane, is null for native app attach packages
	PackageLookbackUrl pulumi.StringPtrInput
	// Specific name of package owner, is "AppAttach" for native app attach packages
	PackageOwnerName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (AppAttachPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appAttachPackageArgs)(nil)).Elem()
}

type AppAttachPackageInput interface {
	pulumi.Input

	ToAppAttachPackageOutput() AppAttachPackageOutput
	ToAppAttachPackageOutputWithContext(ctx context.Context) AppAttachPackageOutput
}

func (*AppAttachPackage) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAttachPackage)(nil)).Elem()
}

func (i *AppAttachPackage) ToAppAttachPackageOutput() AppAttachPackageOutput {
	return i.ToAppAttachPackageOutputWithContext(context.Background())
}

func (i *AppAttachPackage) ToAppAttachPackageOutputWithContext(ctx context.Context) AppAttachPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAttachPackageOutput)
}

type AppAttachPackageOutput struct{ *pulumi.OutputState }

func (AppAttachPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAttachPackage)(nil)).Elem()
}

func (o AppAttachPackageOutput) ToAppAttachPackageOutput() AppAttachPackageOutput {
	return o
}

func (o AppAttachPackageOutput) ToAppAttachPackageOutputWithContext(ctx context.Context) AppAttachPackageOutput {
	return o
}

// Field that can be populated with custom data and filtered on in list GET calls
func (o AppAttachPackageOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringPtrOutput { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Parameter indicating how the health check should behave if this package fails staging
func (o AppAttachPackageOutput) FailHealthCheckOnStagingFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringPtrOutput { return v.FailHealthCheckOnStagingFailure }).(pulumi.StringPtrOutput)
}

// List of Hostpool resource Ids.
func (o AppAttachPackageOutput) HostPoolReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringArrayOutput { return v.HostPoolReferences }).(pulumi.StringArrayOutput)
}

// Detailed properties for App Attach Package
func (o AppAttachPackageOutput) Image() AppAttachPackageInfoPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AppAttachPackage) AppAttachPackageInfoPropertiesResponsePtrOutput { return v.Image }).(AppAttachPackageInfoPropertiesResponsePtrOutput)
}

// URL path to certificate name located in keyVault
func (o AppAttachPackageOutput) KeyVaultURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringPtrOutput { return v.KeyVaultURL }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o AppAttachPackageOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o AppAttachPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Lookback url to third party control plane, is null for native app attach packages
func (o AppAttachPackageOutput) PackageLookbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringPtrOutput { return v.PackageLookbackUrl }).(pulumi.StringPtrOutput)
}

// Specific name of package owner, is "AppAttach" for native app attach packages
func (o AppAttachPackageOutput) PackageOwnerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringPtrOutput { return v.PackageOwnerName }).(pulumi.StringPtrOutput)
}

// The provisioning state of the App Attach Package.
func (o AppAttachPackageOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AppAttachPackageOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AppAttachPackage) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AppAttachPackageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AppAttachPackageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAttachPackage) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AppAttachPackageOutput{})
}
