// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// settings for compression.
type CompressionSettings struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
}

// CompressionSettingsInput is an input type that accepts CompressionSettingsArgs and CompressionSettingsOutput values.
// You can construct a concrete instance of `CompressionSettingsInput` via:
//
//	CompressionSettingsArgs{...}
type CompressionSettingsInput interface {
	pulumi.Input

	ToCompressionSettingsOutput() CompressionSettingsOutput
	ToCompressionSettingsOutputWithContext(context.Context) CompressionSettingsOutput
}

// settings for compression.
type CompressionSettingsArgs struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress pulumi.StringArrayInput `pulumi:"contentTypesToCompress"`
	// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled pulumi.BoolPtrInput `pulumi:"isCompressionEnabled"`
}

func (CompressionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionSettings)(nil)).Elem()
}

func (i CompressionSettingsArgs) ToCompressionSettingsOutput() CompressionSettingsOutput {
	return i.ToCompressionSettingsOutputWithContext(context.Background())
}

func (i CompressionSettingsArgs) ToCompressionSettingsOutputWithContext(ctx context.Context) CompressionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionSettingsOutput)
}

func (i CompressionSettingsArgs) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return i.ToCompressionSettingsPtrOutputWithContext(context.Background())
}

func (i CompressionSettingsArgs) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionSettingsOutput).ToCompressionSettingsPtrOutputWithContext(ctx)
}

// CompressionSettingsPtrInput is an input type that accepts CompressionSettingsArgs, CompressionSettingsPtr and CompressionSettingsPtrOutput values.
// You can construct a concrete instance of `CompressionSettingsPtrInput` via:
//
//	        CompressionSettingsArgs{...}
//
//	or:
//
//	        nil
type CompressionSettingsPtrInput interface {
	pulumi.Input

	ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput
	ToCompressionSettingsPtrOutputWithContext(context.Context) CompressionSettingsPtrOutput
}

type compressionSettingsPtrType CompressionSettingsArgs

func CompressionSettingsPtr(v *CompressionSettingsArgs) CompressionSettingsPtrInput {
	return (*compressionSettingsPtrType)(v)
}

func (*compressionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionSettings)(nil)).Elem()
}

func (i *compressionSettingsPtrType) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return i.ToCompressionSettingsPtrOutputWithContext(context.Background())
}

func (i *compressionSettingsPtrType) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionSettingsPtrOutput)
}

// settings for compression.
type CompressionSettingsOutput struct{ *pulumi.OutputState }

func (CompressionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionSettings)(nil)).Elem()
}

func (o CompressionSettingsOutput) ToCompressionSettingsOutput() CompressionSettingsOutput {
	return o
}

func (o CompressionSettingsOutput) ToCompressionSettingsOutputWithContext(ctx context.Context) CompressionSettingsOutput {
	return o
}

func (o CompressionSettingsOutput) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return o.ToCompressionSettingsPtrOutputWithContext(context.Background())
}

func (o CompressionSettingsOutput) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompressionSettings) *CompressionSettings {
		return &v
	}).(CompressionSettingsPtrOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CompressionSettings) []string { return v.ContentTypesToCompress }).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CompressionSettings) *bool { return v.IsCompressionEnabled }).(pulumi.BoolPtrOutput)
}

type CompressionSettingsPtrOutput struct{ *pulumi.OutputState }

func (CompressionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionSettings)(nil)).Elem()
}

func (o CompressionSettingsPtrOutput) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return o
}

func (o CompressionSettingsPtrOutput) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return o
}

func (o CompressionSettingsPtrOutput) Elem() CompressionSettingsOutput {
	return o.ApplyT(func(v *CompressionSettings) CompressionSettings {
		if v != nil {
			return *v
		}
		var ret CompressionSettings
		return ret
	}).(CompressionSettingsOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsPtrOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompressionSettings) []string {
		if v == nil {
			return nil
		}
		return v.ContentTypesToCompress
	}).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsPtrOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CompressionSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.BoolPtrOutput)
}

// settings for compression.
type CompressionSettingsResponse struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
}

// settings for compression.
type CompressionSettingsResponseOutput struct{ *pulumi.OutputState }

func (CompressionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionSettingsResponse)(nil)).Elem()
}

func (o CompressionSettingsResponseOutput) ToCompressionSettingsResponseOutput() CompressionSettingsResponseOutput {
	return o
}

func (o CompressionSettingsResponseOutput) ToCompressionSettingsResponseOutputWithContext(ctx context.Context) CompressionSettingsResponseOutput {
	return o
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsResponseOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CompressionSettingsResponse) []string { return v.ContentTypesToCompress }).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsResponseOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CompressionSettingsResponse) *bool { return v.IsCompressionEnabled }).(pulumi.BoolPtrOutput)
}

type CompressionSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CompressionSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionSettingsResponse)(nil)).Elem()
}

func (o CompressionSettingsResponsePtrOutput) ToCompressionSettingsResponsePtrOutput() CompressionSettingsResponsePtrOutput {
	return o
}

func (o CompressionSettingsResponsePtrOutput) ToCompressionSettingsResponsePtrOutputWithContext(ctx context.Context) CompressionSettingsResponsePtrOutput {
	return o
}

func (o CompressionSettingsResponsePtrOutput) Elem() CompressionSettingsResponseOutput {
	return o.ApplyT(func(v *CompressionSettingsResponse) CompressionSettingsResponse {
		if v != nil {
			return *v
		}
		var ret CompressionSettingsResponse
		return ret
	}).(CompressionSettingsResponseOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsResponsePtrOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompressionSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContentTypesToCompress
	}).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsResponsePtrOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CompressionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.BoolPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParameters struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *ProbeProtocol `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *HealthProbeRequestType `pulumi:"probeRequestType"`
}

// HealthProbeParametersInput is an input type that accepts HealthProbeParametersArgs and HealthProbeParametersOutput values.
// You can construct a concrete instance of `HealthProbeParametersInput` via:
//
//	HealthProbeParametersArgs{...}
type HealthProbeParametersInput interface {
	pulumi.Input

	ToHealthProbeParametersOutput() HealthProbeParametersOutput
	ToHealthProbeParametersOutputWithContext(context.Context) HealthProbeParametersOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol ProbeProtocolPtrInput `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType HealthProbeRequestTypePtrInput `pulumi:"probeRequestType"`
}

func (HealthProbeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return i.ToHealthProbeParametersOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput)
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput).ToHealthProbeParametersPtrOutputWithContext(ctx)
}

// HealthProbeParametersPtrInput is an input type that accepts HealthProbeParametersArgs, HealthProbeParametersPtr and HealthProbeParametersPtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersPtrInput` via:
//
//	        HealthProbeParametersArgs{...}
//
//	or:
//
//	        nil
type HealthProbeParametersPtrInput interface {
	pulumi.Input

	ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput
	ToHealthProbeParametersPtrOutputWithContext(context.Context) HealthProbeParametersPtrOutput
}

type healthProbeParametersPtrType HealthProbeParametersArgs

func HealthProbeParametersPtr(v *HealthProbeParametersArgs) HealthProbeParametersPtrInput {
	return (*healthProbeParametersPtrType)(v)
}

func (*healthProbeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthProbeParameters) *HealthProbeParameters {
		return &v
	}).(HealthProbeParametersPtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersOutput) ProbeProtocol() ProbeProtocolPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *ProbeProtocol { return v.ProbeProtocol }).(ProbeProtocolPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersOutput) ProbeRequestType() HealthProbeRequestTypePtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *HealthProbeRequestType { return v.ProbeRequestType }).(HealthProbeRequestTypePtrOutput)
}

type HealthProbeParametersPtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) Elem() HealthProbeParametersOutput {
	return o.ApplyT(func(v *HealthProbeParameters) HealthProbeParameters {
		if v != nil {
			return *v
		}
		var ret HealthProbeParameters
		return ret
	}).(HealthProbeParametersOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersPtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersPtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersPtrOutput) ProbeProtocol() ProbeProtocolPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *ProbeProtocol {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(ProbeProtocolPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersPtrOutput) ProbeRequestType() HealthProbeRequestTypePtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *HealthProbeRequestType {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(HealthProbeRequestTypePtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponse struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutputWithContext(ctx context.Context) HealthProbeParametersResponseOutput {
	return o
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponseOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponseOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponseOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) Elem() HealthProbeParametersResponseOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) HealthProbeParametersResponse {
		if v != nil {
			return *v
		}
		var ret HealthProbeParametersResponse
		return ret
	}).(HealthProbeParametersResponseOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponsePtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponsePtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponsePtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParameters struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersInput is an input type that accepts HttpErrorRangeParametersArgs and HttpErrorRangeParametersOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInput` via:
//
//	HttpErrorRangeParametersArgs{...}
type HttpErrorRangeParametersInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput
	ToHttpErrorRangeParametersOutputWithContext(context.Context) HttpErrorRangeParametersOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return i.ToHttpErrorRangeParametersOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersOutput)
}

// HttpErrorRangeParametersArrayInput is an input type that accepts HttpErrorRangeParametersArray and HttpErrorRangeParametersArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersArrayInput` via:
//
//	HttpErrorRangeParametersArray{ HttpErrorRangeParametersArgs{...} }
type HttpErrorRangeParametersArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput
	ToHttpErrorRangeParametersArrayOutputWithContext(context.Context) HttpErrorRangeParametersArrayOutput
}

type HttpErrorRangeParametersArray []HttpErrorRangeParametersInput

func (HttpErrorRangeParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return i.ToHttpErrorRangeParametersArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return o
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParameters {
		return vs[0].([]HttpErrorRangeParameters)[vs[1].(int)]
	}).(HttpErrorRangeParametersOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponse struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput {
	return o
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersResponseArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParametersResponse {
		return vs[0].([]HttpErrorRangeParametersResponse)[vs[1].(int)]
	}).(HttpErrorRangeParametersResponseOutput)
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParameters struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyInMilliseconds *int `pulumi:"additionalLatencyInMilliseconds"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
}

// LoadBalancingSettingsParametersInput is an input type that accepts LoadBalancingSettingsParametersArgs and LoadBalancingSettingsParametersOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsParametersInput` via:
//
//	LoadBalancingSettingsParametersArgs{...}
type LoadBalancingSettingsParametersInput interface {
	pulumi.Input

	ToLoadBalancingSettingsParametersOutput() LoadBalancingSettingsParametersOutput
	ToLoadBalancingSettingsParametersOutputWithContext(context.Context) LoadBalancingSettingsParametersOutput
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersArgs struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyInMilliseconds pulumi.IntPtrInput `pulumi:"additionalLatencyInMilliseconds"`
	// The number of samples to consider for load balancing decisions
	SampleSize pulumi.IntPtrInput `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired pulumi.IntPtrInput `pulumi:"successfulSamplesRequired"`
}

func (LoadBalancingSettingsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsParameters)(nil)).Elem()
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersOutput() LoadBalancingSettingsParametersOutput {
	return i.ToLoadBalancingSettingsParametersOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsParametersOutput)
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return i.ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsParametersOutput).ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx)
}

// LoadBalancingSettingsParametersPtrInput is an input type that accepts LoadBalancingSettingsParametersArgs, LoadBalancingSettingsParametersPtr and LoadBalancingSettingsParametersPtrOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsParametersPtrInput` via:
//
//	        LoadBalancingSettingsParametersArgs{...}
//
//	or:
//
//	        nil
type LoadBalancingSettingsParametersPtrInput interface {
	pulumi.Input

	ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput
	ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Context) LoadBalancingSettingsParametersPtrOutput
}

type loadBalancingSettingsParametersPtrType LoadBalancingSettingsParametersArgs

func LoadBalancingSettingsParametersPtr(v *LoadBalancingSettingsParametersArgs) LoadBalancingSettingsParametersPtrInput {
	return (*loadBalancingSettingsParametersPtrType)(v)
}

func (*loadBalancingSettingsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingSettingsParameters)(nil)).Elem()
}

func (i *loadBalancingSettingsParametersPtrType) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return i.ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Background())
}

func (i *loadBalancingSettingsParametersPtrType) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsParametersPtrOutput)
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsParameters)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersOutput() LoadBalancingSettingsParametersOutput {
	return o
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersOutput {
	return o
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return o.ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Background())
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancingSettingsParameters) *LoadBalancingSettingsParameters {
		return &v
	}).(LoadBalancingSettingsParametersPtrOutput)
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParameters) *int { return v.AdditionalLatencyInMilliseconds }).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParameters) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParameters) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

type LoadBalancingSettingsParametersPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingSettingsParameters)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersPtrOutput) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersPtrOutput) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersPtrOutput) Elem() LoadBalancingSettingsParametersOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) LoadBalancingSettingsParameters {
		if v != nil {
			return *v
		}
		var ret LoadBalancingSettingsParameters
		return ret
	}).(LoadBalancingSettingsParametersOutput)
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersPtrOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalLatencyInMilliseconds
	}).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersPtrOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) *int {
		if v == nil {
			return nil
		}
		return v.SampleSize
	}).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersPtrOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) *int {
		if v == nil {
			return nil
		}
		return v.SuccessfulSamplesRequired
	}).(pulumi.IntPtrOutput)
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersResponse struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyInMilliseconds *int `pulumi:"additionalLatencyInMilliseconds"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsParametersResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersResponseOutput) ToLoadBalancingSettingsParametersResponseOutput() LoadBalancingSettingsParametersResponseOutput {
	return o
}

func (o LoadBalancingSettingsParametersResponseOutput) ToLoadBalancingSettingsParametersResponseOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersResponseOutput {
	return o
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersResponseOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParametersResponse) *int { return v.AdditionalLatencyInMilliseconds }).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersResponseOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParametersResponse) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersResponseOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParametersResponse) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

type LoadBalancingSettingsParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingSettingsParametersResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersResponsePtrOutput) ToLoadBalancingSettingsParametersResponsePtrOutput() LoadBalancingSettingsParametersResponsePtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersResponsePtrOutput) ToLoadBalancingSettingsParametersResponsePtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersResponsePtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersResponsePtrOutput) Elem() LoadBalancingSettingsParametersResponseOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) LoadBalancingSettingsParametersResponse {
		if v != nil {
			return *v
		}
		var ret LoadBalancingSettingsParametersResponse
		return ret
	}).(LoadBalancingSettingsParametersResponseOutput)
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersResponsePtrOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalLatencyInMilliseconds
	}).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersResponsePtrOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.SampleSize
	}).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersResponsePtrOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.SuccessfulSamplesRequired
	}).(pulumi.IntPtrOutput)
}

// Reference to another resource.
type ResourceReference struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//	ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// Reference to another resource.
type ResourceReferenceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//	ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// Reference to another resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

// Resource ID.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// Reference to another resource.
type ResourceReferenceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// Resource ID.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParameters struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *ResponseBasedDetectedErrorTypes `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs and ResponseBasedOriginErrorDetectionParametersOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInput` via:
//
//	ResponseBasedOriginErrorDetectionParametersArgs{...}
type ResponseBasedOriginErrorDetectionParametersInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput
	ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes ResponseBasedDetectedErrorTypesPtrInput `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput).ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersPtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs, ResponseBasedOriginErrorDetectionParametersPtr and ResponseBasedOriginErrorDetectionParametersPtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersPtrInput` via:
//
//	        ResponseBasedOriginErrorDetectionParametersArgs{...}
//
//	or:
//
//	        nil
type ResponseBasedOriginErrorDetectionParametersPtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput
	ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput
}

type responseBasedOriginErrorDetectionParametersPtrType ResponseBasedOriginErrorDetectionParametersArgs

func ResponseBasedOriginErrorDetectionParametersPtr(v *ResponseBasedOriginErrorDetectionParametersArgs) ResponseBasedOriginErrorDetectionParametersPtrInput {
	return (*responseBasedOriginErrorDetectionParametersPtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedOriginErrorDetectionParameters {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedDetectedErrorTypes() ResponseBasedDetectedErrorTypesPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedDetectedErrorTypes {
		return v.ResponseBasedDetectedErrorTypes
	}).(ResponseBasedDetectedErrorTypesPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersPtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) ResponseBasedOriginErrorDetectionParameters {
		if v != nil {
			return *v
		}
		var ret ResponseBasedOriginErrorDetectionParameters
		return ret
	}).(ResponseBasedOriginErrorDetectionParametersOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedDetectedErrorTypes() ResponseBasedDetectedErrorTypesPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *ResponseBasedDetectedErrorTypes {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(ResponseBasedDetectedErrorTypesPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponse struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParametersResponse `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponseOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *string {
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) ResponseBasedOriginErrorDetectionParametersResponse {
		if v != nil {
			return *v
		}
		var ret ResponseBasedOriginErrorDetectionParametersResponse
		return ret
	}).(ResponseBasedOriginErrorDetectionParametersResponseOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Read only system data
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC)
	CreatedAt *string `pulumi:"createdAt"`
	// An identifier for the identity that created the resource
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// An identifier for the identity that last modified the resource
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Read only system data
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC)
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// An identifier for the identity that created the resource
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// An identifier for the identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CompressionSettingsOutput{})
	pulumi.RegisterOutputType(CompressionSettingsPtrOutput{})
	pulumi.RegisterOutputType(CompressionSettingsResponseOutput{})
	pulumi.RegisterOutputType(CompressionSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersPtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersArrayOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersPtrOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
