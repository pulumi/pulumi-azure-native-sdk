// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a knowledge source with the specified name within a web agent.
//
// Uses Azure REST API version 2025-09-01-preview.
func LookupKnowledgeSource(ctx *pulumi.Context, args *LookupKnowledgeSourceArgs, opts ...pulumi.InvokeOption) (*LookupKnowledgeSourceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupKnowledgeSourceResult
	err := ctx.Invoke("azure-native:cdn:getKnowledgeSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKnowledgeSourceArgs struct {
	// The name of the knowledge source.
	KnowledgeSourceName string `pulumi:"knowledgeSourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the web agent.
	WebAgentName string `pulumi:"webAgentName"`
}

// Defines a knowledge source resource for a web agent.
type LookupKnowledgeSourceResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Description of the knowledge source.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The last time the knowledge source was updated.
	LastRefreshedTime string `pulumi:"lastRefreshedTime"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning status of the knowledge source.
	ProvisioningState string `pulumi:"provisioningState"`
	// Format or origin of the knowledge source.
	SourceType string `pulumi:"sourceType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Specifies the units of time for scheduling update intervals for the knowledge source.
	UpdateFrequency *string `pulumi:"updateFrequency"`
	// Endpoint or location of the knowledge source.
	Url string `pulumi:"url"`
}

func LookupKnowledgeSourceOutput(ctx *pulumi.Context, args LookupKnowledgeSourceOutputArgs, opts ...pulumi.InvokeOption) LookupKnowledgeSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKnowledgeSourceResultOutput, error) {
			args := v.(LookupKnowledgeSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cdn:getKnowledgeSource", args, LookupKnowledgeSourceResultOutput{}, options).(LookupKnowledgeSourceResultOutput), nil
		}).(LookupKnowledgeSourceResultOutput)
}

type LookupKnowledgeSourceOutputArgs struct {
	// The name of the knowledge source.
	KnowledgeSourceName pulumi.StringInput `pulumi:"knowledgeSourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the web agent.
	WebAgentName pulumi.StringInput `pulumi:"webAgentName"`
}

func (LookupKnowledgeSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKnowledgeSourceArgs)(nil)).Elem()
}

// Defines a knowledge source resource for a web agent.
type LookupKnowledgeSourceResultOutput struct{ *pulumi.OutputState }

func (LookupKnowledgeSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKnowledgeSourceResult)(nil)).Elem()
}

func (o LookupKnowledgeSourceResultOutput) ToLookupKnowledgeSourceResultOutput() LookupKnowledgeSourceResultOutput {
	return o
}

func (o LookupKnowledgeSourceResultOutput) ToLookupKnowledgeSourceResultOutputWithContext(ctx context.Context) LookupKnowledgeSourceResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupKnowledgeSourceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Description of the knowledge source.
func (o LookupKnowledgeSourceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupKnowledgeSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The last time the knowledge source was updated.
func (o LookupKnowledgeSourceResultOutput) LastRefreshedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.LastRefreshedTime }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupKnowledgeSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning status of the knowledge source.
func (o LookupKnowledgeSourceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Format or origin of the knowledge source.
func (o LookupKnowledgeSourceResultOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.SourceType }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupKnowledgeSourceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupKnowledgeSourceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the units of time for scheduling update intervals for the knowledge source.
func (o LookupKnowledgeSourceResultOutput) UpdateFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) *string { return v.UpdateFrequency }).(pulumi.StringPtrOutput)
}

// Endpoint or location of the knowledge source.
func (o LookupKnowledgeSourceResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKnowledgeSourceResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKnowledgeSourceResultOutput{})
}
