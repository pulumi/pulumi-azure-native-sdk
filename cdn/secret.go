// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Friendly Secret name mapping to the any Secret or secret related information.
//
// Uses Azure REST API version 2025-06-01. In version 2.x of the Azure Native provider, it used API version 2023-05-01.
//
// Other available API versions: 2023-05-01, 2023-07-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-09-01, 2025-01-01-preview, 2025-04-15, 2025-07-01-preview, 2025-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cdn [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type Secret struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion  pulumi.StringOutput `pulumi:"azureApiVersion"`
	DeploymentStatus pulumi.StringOutput `pulumi:"deploymentStatus"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// object which contains secret parameters
	Parameters pulumi.AnyOutput `pulumi:"parameters"`
	// The name of the profile which holds the secret.
	ProfileName pulumi.StringOutput `pulumi:"profileName"`
	// Provisioning status
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecret registers a new resource with the given unique name, arguments, and options.
func NewSecret(ctx *pulumi.Context,
	name string, args *SecretArgs, opts ...pulumi.ResourceOption) (*Secret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileName == nil {
		return nil, errors.New("invalid value for required argument 'ProfileName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cdn/v20200901:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20210601:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20220501preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20221101preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20230501:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20230701preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240201:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240501preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240601preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240901:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250101preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250415:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250601:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250701preview:Secret"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250901preview:Secret"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Secret
	err := ctx.RegisterResource("azure-native:cdn:Secret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecret gets an existing Secret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretState, opts ...pulumi.ResourceOption) (*Secret, error) {
	var resource Secret
	err := ctx.ReadResource("azure-native:cdn:Secret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Secret resources.
type secretState struct {
}

type SecretState struct {
}

func (SecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretState)(nil)).Elem()
}

type secretArgs struct {
	// object which contains secret parameters
	Parameters interface{} `pulumi:"parameters"`
	// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
	ProfileName string `pulumi:"profileName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the Secret under the profile.
	SecretName *string `pulumi:"secretName"`
}

// The set of arguments for constructing a Secret resource.
type SecretArgs struct {
	// object which contains secret parameters
	Parameters pulumi.Input
	// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
	ProfileName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the Secret under the profile.
	SecretName pulumi.StringPtrInput
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretArgs)(nil)).Elem()
}

type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(ctx context.Context) SecretOutput
}

func (*Secret) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (i *Secret) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i *Secret) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// The Azure API version of the resource.
func (o SecretOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

func (o SecretOutput) DeploymentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.DeploymentStatus }).(pulumi.StringOutput)
}

// The name of the resource
func (o SecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// object which contains secret parameters
func (o SecretOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *Secret) pulumi.AnyOutput { return v.Parameters }).(pulumi.AnyOutput)
}

// The name of the profile which holds the secret.
func (o SecretOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.ProfileName }).(pulumi.StringOutput)
}

// Provisioning status
func (o SecretOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SecretOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Secret) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SecretOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SecretOutput{})
}
