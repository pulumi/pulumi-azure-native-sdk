// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AFDTargetGroup comprises a list of Endpoints that is used for tunnelling protocols to allow certain traffic.
// Azure REST API version: 2024-06-01-preview.
type AFDTargetGroup struct {
	pulumi.CustomResourceState

	DeploymentStatus pulumi.StringOutput `pulumi:"deploymentStatus"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning status
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Read only system data
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// TargetEndpoint list referenced by this target group.
	TargetEndpoints TargetEndpointResponseArrayOutput `pulumi:"targetEndpoints"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAFDTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewAFDTargetGroup(ctx *pulumi.Context,
	name string, args *AFDTargetGroupArgs, opts ...pulumi.ResourceOption) (*AFDTargetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileName == nil {
		return nil, errors.New("invalid value for required argument 'ProfileName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TargetEndpoints == nil {
		return nil, errors.New("invalid value for required argument 'TargetEndpoints'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cdn/v20240601preview:AFDTargetGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AFDTargetGroup
	err := ctx.RegisterResource("azure-native:cdn:AFDTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAFDTargetGroup gets an existing AFDTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAFDTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AFDTargetGroupState, opts ...pulumi.ResourceOption) (*AFDTargetGroup, error) {
	var resource AFDTargetGroup
	err := ctx.ReadResource("azure-native:cdn:AFDTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AFDTargetGroup resources.
type afdtargetGroupState struct {
}

type AFDTargetGroupState struct {
}

func (AFDTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*afdtargetGroupState)(nil)).Elem()
}

type afdtargetGroupArgs struct {
	// Name of the Azure Front Door Standard or Azure Front Door Premium which is unique within the resource group.
	ProfileName string `pulumi:"profileName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// TargetEndpoint list referenced by this target group.
	TargetEndpoints []TargetEndpoint `pulumi:"targetEndpoints"`
	// Name of the Target Group under the profile.
	TargetGroupName *string `pulumi:"targetGroupName"`
}

// The set of arguments for constructing a AFDTargetGroup resource.
type AFDTargetGroupArgs struct {
	// Name of the Azure Front Door Standard or Azure Front Door Premium which is unique within the resource group.
	ProfileName pulumi.StringInput
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// TargetEndpoint list referenced by this target group.
	TargetEndpoints TargetEndpointArrayInput
	// Name of the Target Group under the profile.
	TargetGroupName pulumi.StringPtrInput
}

func (AFDTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*afdtargetGroupArgs)(nil)).Elem()
}

type AFDTargetGroupInput interface {
	pulumi.Input

	ToAFDTargetGroupOutput() AFDTargetGroupOutput
	ToAFDTargetGroupOutputWithContext(ctx context.Context) AFDTargetGroupOutput
}

func (*AFDTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AFDTargetGroup)(nil)).Elem()
}

func (i *AFDTargetGroup) ToAFDTargetGroupOutput() AFDTargetGroupOutput {
	return i.ToAFDTargetGroupOutputWithContext(context.Background())
}

func (i *AFDTargetGroup) ToAFDTargetGroupOutputWithContext(ctx context.Context) AFDTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AFDTargetGroupOutput)
}

type AFDTargetGroupOutput struct{ *pulumi.OutputState }

func (AFDTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AFDTargetGroup)(nil)).Elem()
}

func (o AFDTargetGroupOutput) ToAFDTargetGroupOutput() AFDTargetGroupOutput {
	return o
}

func (o AFDTargetGroupOutput) ToAFDTargetGroupOutputWithContext(ctx context.Context) AFDTargetGroupOutput {
	return o
}

func (o AFDTargetGroupOutput) DeploymentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *AFDTargetGroup) pulumi.StringOutput { return v.DeploymentStatus }).(pulumi.StringOutput)
}

// Resource name.
func (o AFDTargetGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AFDTargetGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning status
func (o AFDTargetGroupOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AFDTargetGroup) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Read only system data
func (o AFDTargetGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AFDTargetGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// TargetEndpoint list referenced by this target group.
func (o AFDTargetGroupOutput) TargetEndpoints() TargetEndpointResponseArrayOutput {
	return o.ApplyT(func(v *AFDTargetGroup) TargetEndpointResponseArrayOutput { return v.TargetEndpoints }).(TargetEndpointResponseArrayOutput)
}

// Resource type.
func (o AFDTargetGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AFDTargetGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AFDTargetGroupOutput{})
}
