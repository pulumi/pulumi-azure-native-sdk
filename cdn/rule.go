// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Friendly Rules name mapping to the any Rules or secret related information.
//
// Uses Azure REST API version 2025-06-01. In version 2.x of the Azure Native provider, it used API version 2023-05-01.
//
// Other available API versions: 2023-05-01, 2023-07-01-preview, 2024-02-01, 2024-05-01-preview, 2024-06-01-preview, 2024-09-01, 2025-01-01-preview, 2025-04-15, 2025-07-01-preview, 2025-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cdn [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type Rule struct {
	pulumi.CustomResourceState

	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayOutput `pulumi:"actions"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions       pulumi.ArrayOutput  `pulumi:"conditions"`
	DeploymentStatus pulumi.StringOutput `pulumi:"deploymentStatus"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior pulumi.StringPtrOutput `pulumi:"matchProcessingBehavior"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntPtrOutput `pulumi:"order"`
	// Provisioning status
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The name of the rule set containing the rule.
	RuleSetName pulumi.StringOutput `pulumi:"ruleSetName"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRule registers a new resource with the given unique name, arguments, and options.
func NewRule(ctx *pulumi.Context,
	name string, args *RuleArgs, opts ...pulumi.ResourceOption) (*Rule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileName == nil {
		return nil, errors.New("invalid value for required argument 'ProfileName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RuleSetName == nil {
		return nil, errors.New("invalid value for required argument 'RuleSetName'")
	}
	if args.MatchProcessingBehavior == nil {
		args.MatchProcessingBehavior = pulumi.StringPtr("Continue")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cdn/v20200901:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20210601:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20220501preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20221101preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20230501:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20230701preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240201:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240501preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240601preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20240901:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250101preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250415:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250601:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250701preview:Rule"),
		},
		{
			Type: pulumi.String("azure-native:cdn/v20250901preview:Rule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Rule
	err := ctx.RegisterResource("azure-native:cdn:Rule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRule gets an existing Rule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleState, opts ...pulumi.ResourceOption) (*Rule, error) {
	var resource Rule
	err := ctx.ReadResource("azure-native:cdn:Rule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Rule resources.
type ruleState struct {
}

type RuleState struct {
}

func (RuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleState)(nil)).Elem()
}

type ruleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior *string `pulumi:"matchProcessingBehavior"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order *int `pulumi:"order"`
	// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
	ProfileName string `pulumi:"profileName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the delivery rule which is unique within the endpoint.
	RuleName *string `pulumi:"ruleName"`
	// Name of the rule set under the profile which is unique globally.
	RuleSetName string `pulumi:"ruleSetName"`
}

// The set of arguments for constructing a Rule resource.
type RuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior pulumi.StringPtrInput
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntPtrInput
	// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
	ProfileName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the delivery rule which is unique within the endpoint.
	RuleName pulumi.StringPtrInput
	// Name of the rule set under the profile which is unique globally.
	RuleSetName pulumi.StringInput
}

func (RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleArgs)(nil)).Elem()
}

type RuleInput interface {
	pulumi.Input

	ToRuleOutput() RuleOutput
	ToRuleOutputWithContext(ctx context.Context) RuleOutput
}

func (*Rule) ElementType() reflect.Type {
	return reflect.TypeOf((**Rule)(nil)).Elem()
}

func (i *Rule) ToRuleOutput() RuleOutput {
	return i.ToRuleOutputWithContext(context.Background())
}

func (i *Rule) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOutput)
}

type RuleOutput struct{ *pulumi.OutputState }

func (RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Rule)(nil)).Elem()
}

func (o RuleOutput) ToRuleOutput() RuleOutput {
	return o
}

func (o RuleOutput) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o RuleOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v *Rule) pulumi.ArrayOutput { return v.Actions }).(pulumi.ArrayOutput)
}

// The Azure API version of the resource.
func (o RuleOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o RuleOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v *Rule) pulumi.ArrayOutput { return v.Conditions }).(pulumi.ArrayOutput)
}

func (o RuleOutput) DeploymentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.DeploymentStatus }).(pulumi.StringOutput)
}

// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
func (o RuleOutput) MatchProcessingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringPtrOutput { return v.MatchProcessingBehavior }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o RuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o RuleOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Rule) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

// Provisioning status
func (o RuleOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the rule set containing the rule.
func (o RuleOutput) RuleSetName() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.RuleSetName }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o RuleOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Rule) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o RuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Rule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RuleOutput{})
}
