// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240722preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get EdgeActionVersion resource
func LookupEdgeActionVersion(ctx *pulumi.Context, args *LookupEdgeActionVersionArgs, opts ...pulumi.InvokeOption) (*LookupEdgeActionVersionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEdgeActionVersionResult
	err := ctx.Invoke("azure-native:cdn/v20240722preview:getEdgeActionVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEdgeActionVersionArgs struct {
	// The name of the Edge Action
	EdgeActionName string `pulumi:"edgeActionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Edge Action version
	Version string `pulumi:"version"`
}

// Concrete tracked resource types can be created by aliasing this type using a specific property type.
type LookupEdgeActionVersionResult struct {
	// The deployment type
	DeploymentType string `pulumi:"deploymentType"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The active state
	IsDefaultVersion string `pulumi:"isDefaultVersion"`
	// The last update time in UTC for package update
	LastPackageUpdateTime string `pulumi:"lastPackageUpdateTime"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The validation status
	ValidationStatus string `pulumi:"validationStatus"`
}

func LookupEdgeActionVersionOutput(ctx *pulumi.Context, args LookupEdgeActionVersionOutputArgs, opts ...pulumi.InvokeOption) LookupEdgeActionVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEdgeActionVersionResultOutput, error) {
			args := v.(LookupEdgeActionVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cdn/v20240722preview:getEdgeActionVersion", args, LookupEdgeActionVersionResultOutput{}, options).(LookupEdgeActionVersionResultOutput), nil
		}).(LookupEdgeActionVersionResultOutput)
}

type LookupEdgeActionVersionOutputArgs struct {
	// The name of the Edge Action
	EdgeActionName pulumi.StringInput `pulumi:"edgeActionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Edge Action version
	Version pulumi.StringInput `pulumi:"version"`
}

func (LookupEdgeActionVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeActionVersionArgs)(nil)).Elem()
}

// Concrete tracked resource types can be created by aliasing this type using a specific property type.
type LookupEdgeActionVersionResultOutput struct{ *pulumi.OutputState }

func (LookupEdgeActionVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeActionVersionResult)(nil)).Elem()
}

func (o LookupEdgeActionVersionResultOutput) ToLookupEdgeActionVersionResultOutput() LookupEdgeActionVersionResultOutput {
	return o
}

func (o LookupEdgeActionVersionResultOutput) ToLookupEdgeActionVersionResultOutputWithContext(ctx context.Context) LookupEdgeActionVersionResultOutput {
	return o
}

// The deployment type
func (o LookupEdgeActionVersionResultOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupEdgeActionVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The active state
func (o LookupEdgeActionVersionResultOutput) IsDefaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.IsDefaultVersion }).(pulumi.StringOutput)
}

// The last update time in UTC for package update
func (o LookupEdgeActionVersionResultOutput) LastPackageUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.LastPackageUpdateTime }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupEdgeActionVersionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEdgeActionVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state
func (o LookupEdgeActionVersionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupEdgeActionVersionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupEdgeActionVersionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEdgeActionVersionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.Type }).(pulumi.StringOutput)
}

// The validation status
func (o LookupEdgeActionVersionResultOutput) ValidationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeActionVersionResult) string { return v.ValidationStatus }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEdgeActionVersionResultOutput{})
}
