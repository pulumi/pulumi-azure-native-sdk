// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240722preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Concrete tracked resource types can be created by aliasing this type using a specific property type.
type EdgeAction struct {
	pulumi.CustomResourceState

	// A list of attachments for the edge action
	Attachments EdgeActionAttachmentResponseArrayOutput `pulumi:"attachments"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the edge action
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The sku type of the edge action
	Sku SkuTypeResponseOutput `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewEdgeAction registers a new resource with the given unique name, arguments, and options.
func NewEdgeAction(ctx *pulumi.Context,
	name string, args *EdgeActionArgs, opts ...pulumi.ResourceOption) (*EdgeAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource EdgeAction
	err := ctx.RegisterResource("azure-native:cdn/v20240722preview:EdgeAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeAction gets an existing EdgeAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeActionState, opts ...pulumi.ResourceOption) (*EdgeAction, error) {
	var resource EdgeAction
	err := ctx.ReadResource("azure-native:cdn/v20240722preview:EdgeAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeAction resources.
type edgeActionState struct {
}

type EdgeActionState struct {
}

func (EdgeActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeActionState)(nil)).Elem()
}

type edgeActionArgs struct {
	// The name of the Edge Action
	EdgeActionName *string `pulumi:"edgeActionName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sku type of the edge action
	Sku SkuType `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EdgeAction resource.
type EdgeActionArgs struct {
	// The name of the Edge Action
	EdgeActionName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The sku type of the edge action
	Sku SkuTypeInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (EdgeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeActionArgs)(nil)).Elem()
}

type EdgeActionInput interface {
	pulumi.Input

	ToEdgeActionOutput() EdgeActionOutput
	ToEdgeActionOutputWithContext(ctx context.Context) EdgeActionOutput
}

func (*EdgeAction) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeAction)(nil)).Elem()
}

func (i *EdgeAction) ToEdgeActionOutput() EdgeActionOutput {
	return i.ToEdgeActionOutputWithContext(context.Background())
}

func (i *EdgeAction) ToEdgeActionOutputWithContext(ctx context.Context) EdgeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeActionOutput)
}

type EdgeActionOutput struct{ *pulumi.OutputState }

func (EdgeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeAction)(nil)).Elem()
}

func (o EdgeActionOutput) ToEdgeActionOutput() EdgeActionOutput {
	return o
}

func (o EdgeActionOutput) ToEdgeActionOutputWithContext(ctx context.Context) EdgeActionOutput {
	return o
}

// A list of attachments for the edge action
func (o EdgeActionOutput) Attachments() EdgeActionAttachmentResponseArrayOutput {
	return o.ApplyT(func(v *EdgeAction) EdgeActionAttachmentResponseArrayOutput { return v.Attachments }).(EdgeActionAttachmentResponseArrayOutput)
}

// The geo-location where the resource lives
func (o EdgeActionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeAction) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o EdgeActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeAction) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the edge action
func (o EdgeActionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeAction) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The sku type of the edge action
func (o EdgeActionOutput) Sku() SkuTypeResponseOutput {
	return o.ApplyT(func(v *EdgeAction) SkuTypeResponseOutput { return v.Sku }).(SkuTypeResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o EdgeActionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *EdgeAction) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o EdgeActionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgeAction) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o EdgeActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeAction) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(EdgeActionOutput{})
}
