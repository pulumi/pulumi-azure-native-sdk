// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The JSON object that contains the properties to secure a domain.
type AFDDomainHttpsParameters struct {
	// Defines the source of the SSL certificate.
	CertificateType string `pulumi:"certificateType"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *AfdMinimumTlsVersion `pulumi:"minimumTlsVersion"`
	// Resource reference to the secret. ie. subs/rg/profile/secret
	Secret *ResourceReference `pulumi:"secret"`
}

// AFDDomainHttpsParametersInput is an input type that accepts AFDDomainHttpsParametersArgs and AFDDomainHttpsParametersOutput values.
// You can construct a concrete instance of `AFDDomainHttpsParametersInput` via:
//
//	AFDDomainHttpsParametersArgs{...}
type AFDDomainHttpsParametersInput interface {
	pulumi.Input

	ToAFDDomainHttpsParametersOutput() AFDDomainHttpsParametersOutput
	ToAFDDomainHttpsParametersOutputWithContext(context.Context) AFDDomainHttpsParametersOutput
}

// The JSON object that contains the properties to secure a domain.
type AFDDomainHttpsParametersArgs struct {
	// Defines the source of the SSL certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion AfdMinimumTlsVersionPtrInput `pulumi:"minimumTlsVersion"`
	// Resource reference to the secret. ie. subs/rg/profile/secret
	Secret ResourceReferencePtrInput `pulumi:"secret"`
}

func (AFDDomainHttpsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AFDDomainHttpsParameters)(nil)).Elem()
}

func (i AFDDomainHttpsParametersArgs) ToAFDDomainHttpsParametersOutput() AFDDomainHttpsParametersOutput {
	return i.ToAFDDomainHttpsParametersOutputWithContext(context.Background())
}

func (i AFDDomainHttpsParametersArgs) ToAFDDomainHttpsParametersOutputWithContext(ctx context.Context) AFDDomainHttpsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AFDDomainHttpsParametersOutput)
}

func (i AFDDomainHttpsParametersArgs) ToAFDDomainHttpsParametersPtrOutput() AFDDomainHttpsParametersPtrOutput {
	return i.ToAFDDomainHttpsParametersPtrOutputWithContext(context.Background())
}

func (i AFDDomainHttpsParametersArgs) ToAFDDomainHttpsParametersPtrOutputWithContext(ctx context.Context) AFDDomainHttpsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AFDDomainHttpsParametersOutput).ToAFDDomainHttpsParametersPtrOutputWithContext(ctx)
}

// AFDDomainHttpsParametersPtrInput is an input type that accepts AFDDomainHttpsParametersArgs, AFDDomainHttpsParametersPtr and AFDDomainHttpsParametersPtrOutput values.
// You can construct a concrete instance of `AFDDomainHttpsParametersPtrInput` via:
//
//	        AFDDomainHttpsParametersArgs{...}
//
//	or:
//
//	        nil
type AFDDomainHttpsParametersPtrInput interface {
	pulumi.Input

	ToAFDDomainHttpsParametersPtrOutput() AFDDomainHttpsParametersPtrOutput
	ToAFDDomainHttpsParametersPtrOutputWithContext(context.Context) AFDDomainHttpsParametersPtrOutput
}

type afddomainHttpsParametersPtrType AFDDomainHttpsParametersArgs

func AFDDomainHttpsParametersPtr(v *AFDDomainHttpsParametersArgs) AFDDomainHttpsParametersPtrInput {
	return (*afddomainHttpsParametersPtrType)(v)
}

func (*afddomainHttpsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AFDDomainHttpsParameters)(nil)).Elem()
}

func (i *afddomainHttpsParametersPtrType) ToAFDDomainHttpsParametersPtrOutput() AFDDomainHttpsParametersPtrOutput {
	return i.ToAFDDomainHttpsParametersPtrOutputWithContext(context.Background())
}

func (i *afddomainHttpsParametersPtrType) ToAFDDomainHttpsParametersPtrOutputWithContext(ctx context.Context) AFDDomainHttpsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AFDDomainHttpsParametersPtrOutput)
}

// The JSON object that contains the properties to secure a domain.
type AFDDomainHttpsParametersOutput struct{ *pulumi.OutputState }

func (AFDDomainHttpsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AFDDomainHttpsParameters)(nil)).Elem()
}

func (o AFDDomainHttpsParametersOutput) ToAFDDomainHttpsParametersOutput() AFDDomainHttpsParametersOutput {
	return o
}

func (o AFDDomainHttpsParametersOutput) ToAFDDomainHttpsParametersOutputWithContext(ctx context.Context) AFDDomainHttpsParametersOutput {
	return o
}

func (o AFDDomainHttpsParametersOutput) ToAFDDomainHttpsParametersPtrOutput() AFDDomainHttpsParametersPtrOutput {
	return o.ToAFDDomainHttpsParametersPtrOutputWithContext(context.Background())
}

func (o AFDDomainHttpsParametersOutput) ToAFDDomainHttpsParametersPtrOutputWithContext(ctx context.Context) AFDDomainHttpsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AFDDomainHttpsParameters) *AFDDomainHttpsParameters {
		return &v
	}).(AFDDomainHttpsParametersPtrOutput)
}

// Defines the source of the SSL certificate.
func (o AFDDomainHttpsParametersOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v AFDDomainHttpsParameters) string { return v.CertificateType }).(pulumi.StringOutput)
}

// TLS protocol version that will be used for Https
func (o AFDDomainHttpsParametersOutput) MinimumTlsVersion() AfdMinimumTlsVersionPtrOutput {
	return o.ApplyT(func(v AFDDomainHttpsParameters) *AfdMinimumTlsVersion { return v.MinimumTlsVersion }).(AfdMinimumTlsVersionPtrOutput)
}

// Resource reference to the secret. ie. subs/rg/profile/secret
func (o AFDDomainHttpsParametersOutput) Secret() ResourceReferencePtrOutput {
	return o.ApplyT(func(v AFDDomainHttpsParameters) *ResourceReference { return v.Secret }).(ResourceReferencePtrOutput)
}

type AFDDomainHttpsParametersPtrOutput struct{ *pulumi.OutputState }

func (AFDDomainHttpsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AFDDomainHttpsParameters)(nil)).Elem()
}

func (o AFDDomainHttpsParametersPtrOutput) ToAFDDomainHttpsParametersPtrOutput() AFDDomainHttpsParametersPtrOutput {
	return o
}

func (o AFDDomainHttpsParametersPtrOutput) ToAFDDomainHttpsParametersPtrOutputWithContext(ctx context.Context) AFDDomainHttpsParametersPtrOutput {
	return o
}

func (o AFDDomainHttpsParametersPtrOutput) Elem() AFDDomainHttpsParametersOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParameters) AFDDomainHttpsParameters {
		if v != nil {
			return *v
		}
		var ret AFDDomainHttpsParameters
		return ret
	}).(AFDDomainHttpsParametersOutput)
}

// Defines the source of the SSL certificate.
func (o AFDDomainHttpsParametersPtrOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateType
	}).(pulumi.StringPtrOutput)
}

// TLS protocol version that will be used for Https
func (o AFDDomainHttpsParametersPtrOutput) MinimumTlsVersion() AfdMinimumTlsVersionPtrOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParameters) *AfdMinimumTlsVersion {
		if v == nil {
			return nil
		}
		return v.MinimumTlsVersion
	}).(AfdMinimumTlsVersionPtrOutput)
}

// Resource reference to the secret. ie. subs/rg/profile/secret
func (o AFDDomainHttpsParametersPtrOutput) Secret() ResourceReferencePtrOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParameters) *ResourceReference {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(ResourceReferencePtrOutput)
}

// The JSON object that contains the properties to secure a domain.
type AFDDomainHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	CertificateType string `pulumi:"certificateType"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Resource reference to the secret. ie. subs/rg/profile/secret
	Secret *ResourceReferenceResponse `pulumi:"secret"`
}

// The JSON object that contains the properties to secure a domain.
type AFDDomainHttpsParametersResponseOutput struct{ *pulumi.OutputState }

func (AFDDomainHttpsParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AFDDomainHttpsParametersResponse)(nil)).Elem()
}

func (o AFDDomainHttpsParametersResponseOutput) ToAFDDomainHttpsParametersResponseOutput() AFDDomainHttpsParametersResponseOutput {
	return o
}

func (o AFDDomainHttpsParametersResponseOutput) ToAFDDomainHttpsParametersResponseOutputWithContext(ctx context.Context) AFDDomainHttpsParametersResponseOutput {
	return o
}

// Defines the source of the SSL certificate.
func (o AFDDomainHttpsParametersResponseOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v AFDDomainHttpsParametersResponse) string { return v.CertificateType }).(pulumi.StringOutput)
}

// TLS protocol version that will be used for Https
func (o AFDDomainHttpsParametersResponseOutput) MinimumTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AFDDomainHttpsParametersResponse) *string { return v.MinimumTlsVersion }).(pulumi.StringPtrOutput)
}

// Resource reference to the secret. ie. subs/rg/profile/secret
func (o AFDDomainHttpsParametersResponseOutput) Secret() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v AFDDomainHttpsParametersResponse) *ResourceReferenceResponse { return v.Secret }).(ResourceReferenceResponsePtrOutput)
}

type AFDDomainHttpsParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (AFDDomainHttpsParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AFDDomainHttpsParametersResponse)(nil)).Elem()
}

func (o AFDDomainHttpsParametersResponsePtrOutput) ToAFDDomainHttpsParametersResponsePtrOutput() AFDDomainHttpsParametersResponsePtrOutput {
	return o
}

func (o AFDDomainHttpsParametersResponsePtrOutput) ToAFDDomainHttpsParametersResponsePtrOutputWithContext(ctx context.Context) AFDDomainHttpsParametersResponsePtrOutput {
	return o
}

func (o AFDDomainHttpsParametersResponsePtrOutput) Elem() AFDDomainHttpsParametersResponseOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParametersResponse) AFDDomainHttpsParametersResponse {
		if v != nil {
			return *v
		}
		var ret AFDDomainHttpsParametersResponse
		return ret
	}).(AFDDomainHttpsParametersResponseOutput)
}

// Defines the source of the SSL certificate.
func (o AFDDomainHttpsParametersResponsePtrOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateType
	}).(pulumi.StringPtrOutput)
}

// TLS protocol version that will be used for Https
func (o AFDDomainHttpsParametersResponsePtrOutput) MinimumTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinimumTlsVersion
	}).(pulumi.StringPtrOutput)
}

// Resource reference to the secret. ie. subs/rg/profile/secret
func (o AFDDomainHttpsParametersResponsePtrOutput) Secret() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *AFDDomainHttpsParametersResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(ResourceReferenceResponsePtrOutput)
}

// Reference to another resource along with its state.
type ActivatedResourceReference struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ActivatedResourceReferenceInput is an input type that accepts ActivatedResourceReferenceArgs and ActivatedResourceReferenceOutput values.
// You can construct a concrete instance of `ActivatedResourceReferenceInput` via:
//
//	ActivatedResourceReferenceArgs{...}
type ActivatedResourceReferenceInput interface {
	pulumi.Input

	ToActivatedResourceReferenceOutput() ActivatedResourceReferenceOutput
	ToActivatedResourceReferenceOutputWithContext(context.Context) ActivatedResourceReferenceOutput
}

// Reference to another resource along with its state.
type ActivatedResourceReferenceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ActivatedResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivatedResourceReference)(nil)).Elem()
}

func (i ActivatedResourceReferenceArgs) ToActivatedResourceReferenceOutput() ActivatedResourceReferenceOutput {
	return i.ToActivatedResourceReferenceOutputWithContext(context.Background())
}

func (i ActivatedResourceReferenceArgs) ToActivatedResourceReferenceOutputWithContext(ctx context.Context) ActivatedResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivatedResourceReferenceOutput)
}

// ActivatedResourceReferenceArrayInput is an input type that accepts ActivatedResourceReferenceArray and ActivatedResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ActivatedResourceReferenceArrayInput` via:
//
//	ActivatedResourceReferenceArray{ ActivatedResourceReferenceArgs{...} }
type ActivatedResourceReferenceArrayInput interface {
	pulumi.Input

	ToActivatedResourceReferenceArrayOutput() ActivatedResourceReferenceArrayOutput
	ToActivatedResourceReferenceArrayOutputWithContext(context.Context) ActivatedResourceReferenceArrayOutput
}

type ActivatedResourceReferenceArray []ActivatedResourceReferenceInput

func (ActivatedResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivatedResourceReference)(nil)).Elem()
}

func (i ActivatedResourceReferenceArray) ToActivatedResourceReferenceArrayOutput() ActivatedResourceReferenceArrayOutput {
	return i.ToActivatedResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ActivatedResourceReferenceArray) ToActivatedResourceReferenceArrayOutputWithContext(ctx context.Context) ActivatedResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivatedResourceReferenceArrayOutput)
}

// Reference to another resource along with its state.
type ActivatedResourceReferenceOutput struct{ *pulumi.OutputState }

func (ActivatedResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivatedResourceReference)(nil)).Elem()
}

func (o ActivatedResourceReferenceOutput) ToActivatedResourceReferenceOutput() ActivatedResourceReferenceOutput {
	return o
}

func (o ActivatedResourceReferenceOutput) ToActivatedResourceReferenceOutputWithContext(ctx context.Context) ActivatedResourceReferenceOutput {
	return o
}

// Resource ID.
func (o ActivatedResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivatedResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ActivatedResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ActivatedResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivatedResourceReference)(nil)).Elem()
}

func (o ActivatedResourceReferenceArrayOutput) ToActivatedResourceReferenceArrayOutput() ActivatedResourceReferenceArrayOutput {
	return o
}

func (o ActivatedResourceReferenceArrayOutput) ToActivatedResourceReferenceArrayOutputWithContext(ctx context.Context) ActivatedResourceReferenceArrayOutput {
	return o
}

func (o ActivatedResourceReferenceArrayOutput) Index(i pulumi.IntInput) ActivatedResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivatedResourceReference {
		return vs[0].([]ActivatedResourceReference)[vs[1].(int)]
	}).(ActivatedResourceReferenceOutput)
}

// Reference to another resource along with its state.
type ActivatedResourceReferenceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the resource is active or inactive
	IsActive bool `pulumi:"isActive"`
}

// Reference to another resource along with its state.
type ActivatedResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ActivatedResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivatedResourceReferenceResponse)(nil)).Elem()
}

func (o ActivatedResourceReferenceResponseOutput) ToActivatedResourceReferenceResponseOutput() ActivatedResourceReferenceResponseOutput {
	return o
}

func (o ActivatedResourceReferenceResponseOutput) ToActivatedResourceReferenceResponseOutputWithContext(ctx context.Context) ActivatedResourceReferenceResponseOutput {
	return o
}

// Resource ID.
func (o ActivatedResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivatedResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the resource is active or inactive
func (o ActivatedResourceReferenceResponseOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v ActivatedResourceReferenceResponse) bool { return v.IsActive }).(pulumi.BoolOutput)
}

type ActivatedResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ActivatedResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActivatedResourceReferenceResponse)(nil)).Elem()
}

func (o ActivatedResourceReferenceResponseArrayOutput) ToActivatedResourceReferenceResponseArrayOutput() ActivatedResourceReferenceResponseArrayOutput {
	return o
}

func (o ActivatedResourceReferenceResponseArrayOutput) ToActivatedResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ActivatedResourceReferenceResponseArrayOutput {
	return o
}

func (o ActivatedResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ActivatedResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActivatedResourceReferenceResponse {
		return vs[0].([]ActivatedResourceReferenceResponse)[vs[1].(int)]
	}).(ActivatedResourceReferenceResponseOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type AfdRouteCacheConfiguration struct {
	// compression settings.
	CompressionSettings *CompressionSettings `pulumi:"compressionSettings"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
	QueryStringCachingBehavior *string `pulumi:"queryStringCachingBehavior"`
}

// AfdRouteCacheConfigurationInput is an input type that accepts AfdRouteCacheConfigurationArgs and AfdRouteCacheConfigurationOutput values.
// You can construct a concrete instance of `AfdRouteCacheConfigurationInput` via:
//
//	AfdRouteCacheConfigurationArgs{...}
type AfdRouteCacheConfigurationInput interface {
	pulumi.Input

	ToAfdRouteCacheConfigurationOutput() AfdRouteCacheConfigurationOutput
	ToAfdRouteCacheConfigurationOutputWithContext(context.Context) AfdRouteCacheConfigurationOutput
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type AfdRouteCacheConfigurationArgs struct {
	// compression settings.
	CompressionSettings CompressionSettingsPtrInput `pulumi:"compressionSettings"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
	QueryStringCachingBehavior pulumi.StringPtrInput `pulumi:"queryStringCachingBehavior"`
}

func (AfdRouteCacheConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AfdRouteCacheConfiguration)(nil)).Elem()
}

func (i AfdRouteCacheConfigurationArgs) ToAfdRouteCacheConfigurationOutput() AfdRouteCacheConfigurationOutput {
	return i.ToAfdRouteCacheConfigurationOutputWithContext(context.Background())
}

func (i AfdRouteCacheConfigurationArgs) ToAfdRouteCacheConfigurationOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AfdRouteCacheConfigurationOutput)
}

func (i AfdRouteCacheConfigurationArgs) ToAfdRouteCacheConfigurationPtrOutput() AfdRouteCacheConfigurationPtrOutput {
	return i.ToAfdRouteCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i AfdRouteCacheConfigurationArgs) ToAfdRouteCacheConfigurationPtrOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AfdRouteCacheConfigurationOutput).ToAfdRouteCacheConfigurationPtrOutputWithContext(ctx)
}

// AfdRouteCacheConfigurationPtrInput is an input type that accepts AfdRouteCacheConfigurationArgs, AfdRouteCacheConfigurationPtr and AfdRouteCacheConfigurationPtrOutput values.
// You can construct a concrete instance of `AfdRouteCacheConfigurationPtrInput` via:
//
//	        AfdRouteCacheConfigurationArgs{...}
//
//	or:
//
//	        nil
type AfdRouteCacheConfigurationPtrInput interface {
	pulumi.Input

	ToAfdRouteCacheConfigurationPtrOutput() AfdRouteCacheConfigurationPtrOutput
	ToAfdRouteCacheConfigurationPtrOutputWithContext(context.Context) AfdRouteCacheConfigurationPtrOutput
}

type afdRouteCacheConfigurationPtrType AfdRouteCacheConfigurationArgs

func AfdRouteCacheConfigurationPtr(v *AfdRouteCacheConfigurationArgs) AfdRouteCacheConfigurationPtrInput {
	return (*afdRouteCacheConfigurationPtrType)(v)
}

func (*afdRouteCacheConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AfdRouteCacheConfiguration)(nil)).Elem()
}

func (i *afdRouteCacheConfigurationPtrType) ToAfdRouteCacheConfigurationPtrOutput() AfdRouteCacheConfigurationPtrOutput {
	return i.ToAfdRouteCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i *afdRouteCacheConfigurationPtrType) ToAfdRouteCacheConfigurationPtrOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AfdRouteCacheConfigurationPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type AfdRouteCacheConfigurationOutput struct{ *pulumi.OutputState }

func (AfdRouteCacheConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AfdRouteCacheConfiguration)(nil)).Elem()
}

func (o AfdRouteCacheConfigurationOutput) ToAfdRouteCacheConfigurationOutput() AfdRouteCacheConfigurationOutput {
	return o
}

func (o AfdRouteCacheConfigurationOutput) ToAfdRouteCacheConfigurationOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationOutput {
	return o
}

func (o AfdRouteCacheConfigurationOutput) ToAfdRouteCacheConfigurationPtrOutput() AfdRouteCacheConfigurationPtrOutput {
	return o.ToAfdRouteCacheConfigurationPtrOutputWithContext(context.Background())
}

func (o AfdRouteCacheConfigurationOutput) ToAfdRouteCacheConfigurationPtrOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AfdRouteCacheConfiguration) *AfdRouteCacheConfiguration {
		return &v
	}).(AfdRouteCacheConfigurationPtrOutput)
}

// compression settings.
func (o AfdRouteCacheConfigurationOutput) CompressionSettings() CompressionSettingsPtrOutput {
	return o.ApplyT(func(v AfdRouteCacheConfiguration) *CompressionSettings { return v.CompressionSettings }).(CompressionSettingsPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o AfdRouteCacheConfigurationOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AfdRouteCacheConfiguration) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o AfdRouteCacheConfigurationOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AfdRouteCacheConfiguration) *string { return v.QueryStringCachingBehavior }).(pulumi.StringPtrOutput)
}

type AfdRouteCacheConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AfdRouteCacheConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AfdRouteCacheConfiguration)(nil)).Elem()
}

func (o AfdRouteCacheConfigurationPtrOutput) ToAfdRouteCacheConfigurationPtrOutput() AfdRouteCacheConfigurationPtrOutput {
	return o
}

func (o AfdRouteCacheConfigurationPtrOutput) ToAfdRouteCacheConfigurationPtrOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationPtrOutput {
	return o
}

func (o AfdRouteCacheConfigurationPtrOutput) Elem() AfdRouteCacheConfigurationOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfiguration) AfdRouteCacheConfiguration {
		if v != nil {
			return *v
		}
		var ret AfdRouteCacheConfiguration
		return ret
	}).(AfdRouteCacheConfigurationOutput)
}

// compression settings.
func (o AfdRouteCacheConfigurationPtrOutput) CompressionSettings() CompressionSettingsPtrOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfiguration) *CompressionSettings {
		if v == nil {
			return nil
		}
		return v.CompressionSettings
	}).(CompressionSettingsPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o AfdRouteCacheConfigurationPtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o AfdRouteCacheConfigurationPtrOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryStringCachingBehavior
	}).(pulumi.StringPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type AfdRouteCacheConfigurationResponse struct {
	// compression settings.
	CompressionSettings *CompressionSettingsResponse `pulumi:"compressionSettings"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
	QueryStringCachingBehavior *string `pulumi:"queryStringCachingBehavior"`
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type AfdRouteCacheConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AfdRouteCacheConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AfdRouteCacheConfigurationResponse)(nil)).Elem()
}

func (o AfdRouteCacheConfigurationResponseOutput) ToAfdRouteCacheConfigurationResponseOutput() AfdRouteCacheConfigurationResponseOutput {
	return o
}

func (o AfdRouteCacheConfigurationResponseOutput) ToAfdRouteCacheConfigurationResponseOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationResponseOutput {
	return o
}

// compression settings.
func (o AfdRouteCacheConfigurationResponseOutput) CompressionSettings() CompressionSettingsResponsePtrOutput {
	return o.ApplyT(func(v AfdRouteCacheConfigurationResponse) *CompressionSettingsResponse { return v.CompressionSettings }).(CompressionSettingsResponsePtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o AfdRouteCacheConfigurationResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AfdRouteCacheConfigurationResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o AfdRouteCacheConfigurationResponseOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AfdRouteCacheConfigurationResponse) *string { return v.QueryStringCachingBehavior }).(pulumi.StringPtrOutput)
}

type AfdRouteCacheConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AfdRouteCacheConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AfdRouteCacheConfigurationResponse)(nil)).Elem()
}

func (o AfdRouteCacheConfigurationResponsePtrOutput) ToAfdRouteCacheConfigurationResponsePtrOutput() AfdRouteCacheConfigurationResponsePtrOutput {
	return o
}

func (o AfdRouteCacheConfigurationResponsePtrOutput) ToAfdRouteCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) AfdRouteCacheConfigurationResponsePtrOutput {
	return o
}

func (o AfdRouteCacheConfigurationResponsePtrOutput) Elem() AfdRouteCacheConfigurationResponseOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfigurationResponse) AfdRouteCacheConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AfdRouteCacheConfigurationResponse
		return ret
	}).(AfdRouteCacheConfigurationResponseOutput)
}

// compression settings.
func (o AfdRouteCacheConfigurationResponsePtrOutput) CompressionSettings() CompressionSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfigurationResponse) *CompressionSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CompressionSettings
	}).(CompressionSettingsResponsePtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o AfdRouteCacheConfigurationResponsePtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o AfdRouteCacheConfigurationResponsePtrOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AfdRouteCacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryStringCachingBehavior
	}).(pulumi.StringPtrOutput)
}

// Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
type AzureFirstPartyManagedCertificateParameters struct {
	// The list of SANs.
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
	// The type of the secret resource.
	// Expected value is 'AzureFirstPartyManagedCertificate'.
	Type string `pulumi:"type"`
}

// AzureFirstPartyManagedCertificateParametersInput is an input type that accepts AzureFirstPartyManagedCertificateParametersArgs and AzureFirstPartyManagedCertificateParametersOutput values.
// You can construct a concrete instance of `AzureFirstPartyManagedCertificateParametersInput` via:
//
//	AzureFirstPartyManagedCertificateParametersArgs{...}
type AzureFirstPartyManagedCertificateParametersInput interface {
	pulumi.Input

	ToAzureFirstPartyManagedCertificateParametersOutput() AzureFirstPartyManagedCertificateParametersOutput
	ToAzureFirstPartyManagedCertificateParametersOutputWithContext(context.Context) AzureFirstPartyManagedCertificateParametersOutput
}

// Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
type AzureFirstPartyManagedCertificateParametersArgs struct {
	// The list of SANs.
	SubjectAlternativeNames pulumi.StringArrayInput `pulumi:"subjectAlternativeNames"`
	// The type of the secret resource.
	// Expected value is 'AzureFirstPartyManagedCertificate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureFirstPartyManagedCertificateParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirstPartyManagedCertificateParameters)(nil)).Elem()
}

func (i AzureFirstPartyManagedCertificateParametersArgs) ToAzureFirstPartyManagedCertificateParametersOutput() AzureFirstPartyManagedCertificateParametersOutput {
	return i.ToAzureFirstPartyManagedCertificateParametersOutputWithContext(context.Background())
}

func (i AzureFirstPartyManagedCertificateParametersArgs) ToAzureFirstPartyManagedCertificateParametersOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirstPartyManagedCertificateParametersOutput)
}

func (i AzureFirstPartyManagedCertificateParametersArgs) ToAzureFirstPartyManagedCertificateParametersPtrOutput() AzureFirstPartyManagedCertificateParametersPtrOutput {
	return i.ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(context.Background())
}

func (i AzureFirstPartyManagedCertificateParametersArgs) ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirstPartyManagedCertificateParametersOutput).ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(ctx)
}

// AzureFirstPartyManagedCertificateParametersPtrInput is an input type that accepts AzureFirstPartyManagedCertificateParametersArgs, AzureFirstPartyManagedCertificateParametersPtr and AzureFirstPartyManagedCertificateParametersPtrOutput values.
// You can construct a concrete instance of `AzureFirstPartyManagedCertificateParametersPtrInput` via:
//
//	        AzureFirstPartyManagedCertificateParametersArgs{...}
//
//	or:
//
//	        nil
type AzureFirstPartyManagedCertificateParametersPtrInput interface {
	pulumi.Input

	ToAzureFirstPartyManagedCertificateParametersPtrOutput() AzureFirstPartyManagedCertificateParametersPtrOutput
	ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(context.Context) AzureFirstPartyManagedCertificateParametersPtrOutput
}

type azureFirstPartyManagedCertificateParametersPtrType AzureFirstPartyManagedCertificateParametersArgs

func AzureFirstPartyManagedCertificateParametersPtr(v *AzureFirstPartyManagedCertificateParametersArgs) AzureFirstPartyManagedCertificateParametersPtrInput {
	return (*azureFirstPartyManagedCertificateParametersPtrType)(v)
}

func (*azureFirstPartyManagedCertificateParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirstPartyManagedCertificateParameters)(nil)).Elem()
}

func (i *azureFirstPartyManagedCertificateParametersPtrType) ToAzureFirstPartyManagedCertificateParametersPtrOutput() AzureFirstPartyManagedCertificateParametersPtrOutput {
	return i.ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(context.Background())
}

func (i *azureFirstPartyManagedCertificateParametersPtrType) ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirstPartyManagedCertificateParametersPtrOutput)
}

// Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
type AzureFirstPartyManagedCertificateParametersOutput struct{ *pulumi.OutputState }

func (AzureFirstPartyManagedCertificateParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirstPartyManagedCertificateParameters)(nil)).Elem()
}

func (o AzureFirstPartyManagedCertificateParametersOutput) ToAzureFirstPartyManagedCertificateParametersOutput() AzureFirstPartyManagedCertificateParametersOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersOutput) ToAzureFirstPartyManagedCertificateParametersOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersOutput) ToAzureFirstPartyManagedCertificateParametersPtrOutput() AzureFirstPartyManagedCertificateParametersPtrOutput {
	return o.ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(context.Background())
}

func (o AzureFirstPartyManagedCertificateParametersOutput) ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFirstPartyManagedCertificateParameters) *AzureFirstPartyManagedCertificateParameters {
		return &v
	}).(AzureFirstPartyManagedCertificateParametersPtrOutput)
}

// The list of SANs.
func (o AzureFirstPartyManagedCertificateParametersOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParameters) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

// The type of the secret resource.
// Expected value is 'AzureFirstPartyManagedCertificate'.
func (o AzureFirstPartyManagedCertificateParametersOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParameters) string { return v.Type }).(pulumi.StringOutput)
}

type AzureFirstPartyManagedCertificateParametersPtrOutput struct{ *pulumi.OutputState }

func (AzureFirstPartyManagedCertificateParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirstPartyManagedCertificateParameters)(nil)).Elem()
}

func (o AzureFirstPartyManagedCertificateParametersPtrOutput) ToAzureFirstPartyManagedCertificateParametersPtrOutput() AzureFirstPartyManagedCertificateParametersPtrOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersPtrOutput) ToAzureFirstPartyManagedCertificateParametersPtrOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersPtrOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersPtrOutput) Elem() AzureFirstPartyManagedCertificateParametersOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParameters) AzureFirstPartyManagedCertificateParameters {
		if v != nil {
			return *v
		}
		var ret AzureFirstPartyManagedCertificateParameters
		return ret
	}).(AzureFirstPartyManagedCertificateParametersOutput)
}

// The list of SANs.
func (o AzureFirstPartyManagedCertificateParametersPtrOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParameters) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(pulumi.StringArrayOutput)
}

// The type of the secret resource.
// Expected value is 'AzureFirstPartyManagedCertificate'.
func (o AzureFirstPartyManagedCertificateParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
type AzureFirstPartyManagedCertificateParametersResponse struct {
	// Certificate issuing authority.
	CertificateAuthority string `pulumi:"certificateAuthority"`
	// Certificate expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReferenceResponse `pulumi:"secretSource"`
	// Subject name in the certificate.
	Subject string `pulumi:"subject"`
	// The list of SANs.
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
	// Certificate thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// The type of the secret resource.
	// Expected value is 'AzureFirstPartyManagedCertificate'.
	Type string `pulumi:"type"`
}

// Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.
type AzureFirstPartyManagedCertificateParametersResponseOutput struct{ *pulumi.OutputState }

func (AzureFirstPartyManagedCertificateParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirstPartyManagedCertificateParametersResponse)(nil)).Elem()
}

func (o AzureFirstPartyManagedCertificateParametersResponseOutput) ToAzureFirstPartyManagedCertificateParametersResponseOutput() AzureFirstPartyManagedCertificateParametersResponseOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersResponseOutput) ToAzureFirstPartyManagedCertificateParametersResponseOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersResponseOutput {
	return o
}

// Certificate issuing authority.
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) CertificateAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) string { return v.CertificateAuthority }).(pulumi.StringOutput)
}

// Certificate expiration date.
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) SecretSource() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) ResourceReferenceResponse {
		return v.SecretSource
	}).(ResourceReferenceResponseOutput)
}

// Subject name in the certificate.
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The list of SANs.
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

// Certificate thumbprint.
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The type of the secret resource.
// Expected value is 'AzureFirstPartyManagedCertificate'.
func (o AzureFirstPartyManagedCertificateParametersResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirstPartyManagedCertificateParametersResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AzureFirstPartyManagedCertificateParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirstPartyManagedCertificateParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirstPartyManagedCertificateParametersResponse)(nil)).Elem()
}

func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) ToAzureFirstPartyManagedCertificateParametersResponsePtrOutput() AzureFirstPartyManagedCertificateParametersResponsePtrOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) ToAzureFirstPartyManagedCertificateParametersResponsePtrOutputWithContext(ctx context.Context) AzureFirstPartyManagedCertificateParametersResponsePtrOutput {
	return o
}

func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) Elem() AzureFirstPartyManagedCertificateParametersResponseOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) AzureFirstPartyManagedCertificateParametersResponse {
		if v != nil {
			return *v
		}
		var ret AzureFirstPartyManagedCertificateParametersResponse
		return ret
	}).(AzureFirstPartyManagedCertificateParametersResponseOutput)
}

// Certificate issuing authority.
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateAuthority
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration date.
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) SecretSource() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return &v.SecretSource
	}).(ResourceReferenceResponsePtrOutput)
}

// Subject name in the certificate.
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The list of SANs.
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(pulumi.StringArrayOutput)
}

// Certificate thumbprint.
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'AzureFirstPartyManagedCertificate'.
func (o AzureFirstPartyManagedCertificateParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirstPartyManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfiguration struct {
	// Caching behavior for the requests
	CacheBehavior *string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *string `pulumi:"isCompressionEnabled"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
	QueryStringCachingBehavior *string `pulumi:"queryStringCachingBehavior"`
}

// CacheConfigurationInput is an input type that accepts CacheConfigurationArgs and CacheConfigurationOutput values.
// You can construct a concrete instance of `CacheConfigurationInput` via:
//
//	CacheConfigurationArgs{...}
type CacheConfigurationInput interface {
	pulumi.Input

	ToCacheConfigurationOutput() CacheConfigurationOutput
	ToCacheConfigurationOutputWithContext(context.Context) CacheConfigurationOutput
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationArgs struct {
	// Caching behavior for the requests
	CacheBehavior pulumi.StringPtrInput `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled pulumi.StringPtrInput `pulumi:"isCompressionEnabled"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
	QueryStringCachingBehavior pulumi.StringPtrInput `pulumi:"queryStringCachingBehavior"`
}

func (CacheConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfiguration)(nil)).Elem()
}

func (i CacheConfigurationArgs) ToCacheConfigurationOutput() CacheConfigurationOutput {
	return i.ToCacheConfigurationOutputWithContext(context.Background())
}

func (i CacheConfigurationArgs) ToCacheConfigurationOutputWithContext(ctx context.Context) CacheConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationOutput)
}

func (i CacheConfigurationArgs) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return i.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i CacheConfigurationArgs) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationOutput).ToCacheConfigurationPtrOutputWithContext(ctx)
}

// CacheConfigurationPtrInput is an input type that accepts CacheConfigurationArgs, CacheConfigurationPtr and CacheConfigurationPtrOutput values.
// You can construct a concrete instance of `CacheConfigurationPtrInput` via:
//
//	        CacheConfigurationArgs{...}
//
//	or:
//
//	        nil
type CacheConfigurationPtrInput interface {
	pulumi.Input

	ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput
	ToCacheConfigurationPtrOutputWithContext(context.Context) CacheConfigurationPtrOutput
}

type cacheConfigurationPtrType CacheConfigurationArgs

func CacheConfigurationPtr(v *CacheConfigurationArgs) CacheConfigurationPtrInput {
	return (*cacheConfigurationPtrType)(v)
}

func (*cacheConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfiguration)(nil)).Elem()
}

func (i *cacheConfigurationPtrType) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return i.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i *cacheConfigurationPtrType) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationOutput struct{ *pulumi.OutputState }

func (CacheConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfiguration)(nil)).Elem()
}

func (o CacheConfigurationOutput) ToCacheConfigurationOutput() CacheConfigurationOutput {
	return o
}

func (o CacheConfigurationOutput) ToCacheConfigurationOutputWithContext(ctx context.Context) CacheConfigurationOutput {
	return o
}

func (o CacheConfigurationOutput) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return o.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (o CacheConfigurationOutput) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CacheConfiguration) *CacheConfiguration {
		return &v
	}).(CacheConfigurationPtrOutput)
}

// Caching behavior for the requests
func (o CacheConfigurationOutput) CacheBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.CacheBehavior }).(pulumi.StringPtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheConfigurationOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CacheConfigurationOutput) IsCompressionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.IsCompressionEnabled }).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o CacheConfigurationOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.QueryStringCachingBehavior }).(pulumi.StringPtrOutput)
}

type CacheConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CacheConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfiguration)(nil)).Elem()
}

func (o CacheConfigurationPtrOutput) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return o
}

func (o CacheConfigurationPtrOutput) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return o
}

func (o CacheConfigurationPtrOutput) Elem() CacheConfigurationOutput {
	return o.ApplyT(func(v *CacheConfiguration) CacheConfiguration {
		if v != nil {
			return *v
		}
		var ret CacheConfiguration
		return ret
	}).(CacheConfigurationOutput)
}

// Caching behavior for the requests
func (o CacheConfigurationPtrOutput) CacheBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CacheBehavior
	}).(pulumi.StringPtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheConfigurationPtrOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CacheDuration
	}).(pulumi.StringPtrOutput)
}

// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CacheConfigurationPtrOutput) IsCompressionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationPtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o CacheConfigurationPtrOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryStringCachingBehavior
	}).(pulumi.StringPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponse struct {
	// Caching behavior for the requests
	CacheBehavior *string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *string `pulumi:"isCompressionEnabled"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
	QueryStringCachingBehavior *string `pulumi:"queryStringCachingBehavior"`
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CacheConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfigurationResponse)(nil)).Elem()
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponseOutput() CacheConfigurationResponseOutput {
	return o
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponseOutputWithContext(ctx context.Context) CacheConfigurationResponseOutput {
	return o
}

// Caching behavior for the requests
func (o CacheConfigurationResponseOutput) CacheBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.CacheBehavior }).(pulumi.StringPtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheConfigurationResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CacheConfigurationResponseOutput) IsCompressionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.IsCompressionEnabled }).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o CacheConfigurationResponseOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.QueryStringCachingBehavior }).(pulumi.StringPtrOutput)
}

type CacheConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (CacheConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfigurationResponse)(nil)).Elem()
}

func (o CacheConfigurationResponsePtrOutput) ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput {
	return o
}

func (o CacheConfigurationResponsePtrOutput) ToCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) CacheConfigurationResponsePtrOutput {
	return o
}

func (o CacheConfigurationResponsePtrOutput) Elem() CacheConfigurationResponseOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) CacheConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret CacheConfigurationResponse
		return ret
	}).(CacheConfigurationResponseOutput)
}

// Caching behavior for the requests
func (o CacheConfigurationResponsePtrOutput) CacheBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CacheBehavior
	}).(pulumi.StringPtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheConfigurationResponsePtrOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CacheDuration
	}).(pulumi.StringPtrOutput)
}

// Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CacheConfigurationResponsePtrOutput) IsCompressionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationResponsePtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.
func (o CacheConfigurationResponsePtrOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryStringCachingBehavior
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParameters struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	TypeName  string `pulumi:"typeName"`
}

// CacheExpirationActionParametersInput is an input type that accepts CacheExpirationActionParametersArgs and CacheExpirationActionParametersOutput values.
// You can construct a concrete instance of `CacheExpirationActionParametersInput` via:
//
//	CacheExpirationActionParametersArgs{...}
type CacheExpirationActionParametersInput interface {
	pulumi.Input

	ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput
	ToCacheExpirationActionParametersOutputWithContext(context.Context) CacheExpirationActionParametersOutput
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersArgs struct {
	// Caching behavior for the requests
	CacheBehavior pulumi.StringInput `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType pulumi.StringInput `pulumi:"cacheType"`
	TypeName  pulumi.StringInput `pulumi:"typeName"`
}

func (CacheExpirationActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParameters)(nil)).Elem()
}

func (i CacheExpirationActionParametersArgs) ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput {
	return i.ToCacheExpirationActionParametersOutputWithContext(context.Background())
}

func (i CacheExpirationActionParametersArgs) ToCacheExpirationActionParametersOutputWithContext(ctx context.Context) CacheExpirationActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheExpirationActionParametersOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersOutput struct{ *pulumi.OutputState }

func (CacheExpirationActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParameters)(nil)).Elem()
}

func (o CacheExpirationActionParametersOutput) ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput {
	return o
}

func (o CacheExpirationActionParametersOutput) ToCacheExpirationActionParametersOutputWithContext(ctx context.Context) CacheExpirationActionParametersOutput {
	return o
}

// Caching behavior for the requests
func (o CacheExpirationActionParametersOutput) CacheBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) string { return v.CacheBehavior }).(pulumi.StringOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheExpirationActionParametersOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// The level at which the content needs to be cached.
func (o CacheExpirationActionParametersOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) string { return v.CacheType }).(pulumi.StringOutput)
}

func (o CacheExpirationActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponse struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	TypeName  string `pulumi:"typeName"`
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponseOutput struct{ *pulumi.OutputState }

func (CacheExpirationActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParametersResponse)(nil)).Elem()
}

func (o CacheExpirationActionParametersResponseOutput) ToCacheExpirationActionParametersResponseOutput() CacheExpirationActionParametersResponseOutput {
	return o
}

func (o CacheExpirationActionParametersResponseOutput) ToCacheExpirationActionParametersResponseOutputWithContext(ctx context.Context) CacheExpirationActionParametersResponseOutput {
	return o
}

// Caching behavior for the requests
func (o CacheExpirationActionParametersResponseOutput) CacheBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.CacheBehavior }).(pulumi.StringOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheExpirationActionParametersResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// The level at which the content needs to be cached.
func (o CacheExpirationActionParametersResponseOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.CacheType }).(pulumi.StringOutput)
}

func (o CacheExpirationActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParameters struct {
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
	TypeName            string `pulumi:"typeName"`
}

// CacheKeyQueryStringActionParametersInput is an input type that accepts CacheKeyQueryStringActionParametersArgs and CacheKeyQueryStringActionParametersOutput values.
// You can construct a concrete instance of `CacheKeyQueryStringActionParametersInput` via:
//
//	CacheKeyQueryStringActionParametersArgs{...}
type CacheKeyQueryStringActionParametersInput interface {
	pulumi.Input

	ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput
	ToCacheKeyQueryStringActionParametersOutputWithContext(context.Context) CacheKeyQueryStringActionParametersOutput
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersArgs struct {
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior pulumi.StringInput `pulumi:"queryStringBehavior"`
	TypeName            pulumi.StringInput `pulumi:"typeName"`
}

func (CacheKeyQueryStringActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParameters)(nil)).Elem()
}

func (i CacheKeyQueryStringActionParametersArgs) ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput {
	return i.ToCacheKeyQueryStringActionParametersOutputWithContext(context.Background())
}

func (i CacheKeyQueryStringActionParametersArgs) ToCacheKeyQueryStringActionParametersOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheKeyQueryStringActionParametersOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersOutput struct{ *pulumi.OutputState }

func (CacheKeyQueryStringActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParameters)(nil)).Elem()
}

func (o CacheKeyQueryStringActionParametersOutput) ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersOutput) ToCacheKeyQueryStringActionParametersOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersOutput {
	return o
}

// query parameters to include or exclude (comma separated).
func (o CacheKeyQueryStringActionParametersOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParameters) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Caching behavior for the requests
func (o CacheKeyQueryStringActionParametersOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParameters) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

func (o CacheKeyQueryStringActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponse struct {
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
	TypeName            string `pulumi:"typeName"`
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponseOutput struct{ *pulumi.OutputState }

func (CacheKeyQueryStringActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParametersResponse)(nil)).Elem()
}

func (o CacheKeyQueryStringActionParametersResponseOutput) ToCacheKeyQueryStringActionParametersResponseOutput() CacheKeyQueryStringActionParametersResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersResponseOutput) ToCacheKeyQueryStringActionParametersResponseOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersResponseOutput {
	return o
}

// query parameters to include or exclude (comma separated).
func (o CacheKeyQueryStringActionParametersResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Caching behavior for the requests
func (o CacheKeyQueryStringActionParametersResponseOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

func (o CacheKeyQueryStringActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for using CDN managed certificate for securing custom domain.
type CdnCertificateSourceParametersResponse struct {
	// Type of certificate used
	CertificateType string `pulumi:"certificateType"`
	TypeName        string `pulumi:"typeName"`
}

// Defines the parameters for using CDN managed certificate for securing custom domain.
type CdnCertificateSourceParametersResponseOutput struct{ *pulumi.OutputState }

func (CdnCertificateSourceParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnCertificateSourceParametersResponse)(nil)).Elem()
}

func (o CdnCertificateSourceParametersResponseOutput) ToCdnCertificateSourceParametersResponseOutput() CdnCertificateSourceParametersResponseOutput {
	return o
}

func (o CdnCertificateSourceParametersResponseOutput) ToCdnCertificateSourceParametersResponseOutputWithContext(ctx context.Context) CdnCertificateSourceParametersResponseOutput {
	return o
}

// Type of certificate used
func (o CdnCertificateSourceParametersResponseOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v CdnCertificateSourceParametersResponse) string { return v.CertificateType }).(pulumi.StringOutput)
}

func (o CdnCertificateSourceParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CdnCertificateSourceParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

type CdnCertificateSourceParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (CdnCertificateSourceParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CdnCertificateSourceParametersResponse)(nil)).Elem()
}

func (o CdnCertificateSourceParametersResponsePtrOutput) ToCdnCertificateSourceParametersResponsePtrOutput() CdnCertificateSourceParametersResponsePtrOutput {
	return o
}

func (o CdnCertificateSourceParametersResponsePtrOutput) ToCdnCertificateSourceParametersResponsePtrOutputWithContext(ctx context.Context) CdnCertificateSourceParametersResponsePtrOutput {
	return o
}

func (o CdnCertificateSourceParametersResponsePtrOutput) Elem() CdnCertificateSourceParametersResponseOutput {
	return o.ApplyT(func(v *CdnCertificateSourceParametersResponse) CdnCertificateSourceParametersResponse {
		if v != nil {
			return *v
		}
		var ret CdnCertificateSourceParametersResponse
		return ret
	}).(CdnCertificateSourceParametersResponseOutput)
}

// Type of certificate used
func (o CdnCertificateSourceParametersResponsePtrOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateType
	}).(pulumi.StringPtrOutput)
}

func (o CdnCertificateSourceParametersResponsePtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TypeName
	}).(pulumi.StringPtrOutput)
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponse struct {
	// ARM Resource ID string.
	Id *string `pulumi:"id"`
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponseOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutput() CdnEndpointResponseOutput {
	return o
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutputWithContext(ctx context.Context) CdnEndpointResponseOutput {
	return o
}

// ARM Resource ID string.
func (o CdnEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdnEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type CdnEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutput() CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutputWithContext(ctx context.Context) CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) Index(i pulumi.IntInput) CdnEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CdnEndpointResponse {
		return vs[0].([]CdnEndpointResponse)[vs[1].(int)]
	}).(CdnEndpointResponseOutput)
}

// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
type CdnManagedHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	// Expected value is 'Cdn'.
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
	CertificateSourceParameters CdnCertificateSourceParametersResponse `pulumi:"certificateSourceParameters"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery.
	ProtocolType string `pulumi:"protocolType"`
}

// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
type CdnManagedHttpsParametersResponseOutput struct{ *pulumi.OutputState }

func (CdnManagedHttpsParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnManagedHttpsParametersResponse)(nil)).Elem()
}

func (o CdnManagedHttpsParametersResponseOutput) ToCdnManagedHttpsParametersResponseOutput() CdnManagedHttpsParametersResponseOutput {
	return o
}

func (o CdnManagedHttpsParametersResponseOutput) ToCdnManagedHttpsParametersResponseOutputWithContext(ctx context.Context) CdnManagedHttpsParametersResponseOutput {
	return o
}

// Defines the source of the SSL certificate.
// Expected value is 'Cdn'.
func (o CdnManagedHttpsParametersResponseOutput) CertificateSource() pulumi.StringOutput {
	return o.ApplyT(func(v CdnManagedHttpsParametersResponse) string { return v.CertificateSource }).(pulumi.StringOutput)
}

// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
func (o CdnManagedHttpsParametersResponseOutput) CertificateSourceParameters() CdnCertificateSourceParametersResponseOutput {
	return o.ApplyT(func(v CdnManagedHttpsParametersResponse) CdnCertificateSourceParametersResponse {
		return v.CertificateSourceParameters
	}).(CdnCertificateSourceParametersResponseOutput)
}

// TLS protocol version that will be used for Https
func (o CdnManagedHttpsParametersResponseOutput) MinimumTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdnManagedHttpsParametersResponse) *string { return v.MinimumTlsVersion }).(pulumi.StringPtrOutput)
}

// Defines the TLS extension protocol that is used for secure delivery.
func (o CdnManagedHttpsParametersResponseOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v CdnManagedHttpsParametersResponse) string { return v.ProtocolType }).(pulumi.StringOutput)
}

type CdnManagedHttpsParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (CdnManagedHttpsParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CdnManagedHttpsParametersResponse)(nil)).Elem()
}

func (o CdnManagedHttpsParametersResponsePtrOutput) ToCdnManagedHttpsParametersResponsePtrOutput() CdnManagedHttpsParametersResponsePtrOutput {
	return o
}

func (o CdnManagedHttpsParametersResponsePtrOutput) ToCdnManagedHttpsParametersResponsePtrOutputWithContext(ctx context.Context) CdnManagedHttpsParametersResponsePtrOutput {
	return o
}

func (o CdnManagedHttpsParametersResponsePtrOutput) Elem() CdnManagedHttpsParametersResponseOutput {
	return o.ApplyT(func(v *CdnManagedHttpsParametersResponse) CdnManagedHttpsParametersResponse {
		if v != nil {
			return *v
		}
		var ret CdnManagedHttpsParametersResponse
		return ret
	}).(CdnManagedHttpsParametersResponseOutput)
}

// Defines the source of the SSL certificate.
// Expected value is 'Cdn'.
func (o CdnManagedHttpsParametersResponsePtrOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnManagedHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateSource
	}).(pulumi.StringPtrOutput)
}

// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
func (o CdnManagedHttpsParametersResponsePtrOutput) CertificateSourceParameters() CdnCertificateSourceParametersResponsePtrOutput {
	return o.ApplyT(func(v *CdnManagedHttpsParametersResponse) *CdnCertificateSourceParametersResponse {
		if v == nil {
			return nil
		}
		return &v.CertificateSourceParameters
	}).(CdnCertificateSourceParametersResponsePtrOutput)
}

// TLS protocol version that will be used for Https
func (o CdnManagedHttpsParametersResponsePtrOutput) MinimumTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnManagedHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinimumTlsVersion
	}).(pulumi.StringPtrOutput)
}

// Defines the TLS extension protocol that is used for secure delivery.
func (o CdnManagedHttpsParametersResponsePtrOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnManagedHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProtocolType
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for ClientPort match conditions
type ClientPortMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for ClientPortMatchConditionParameters
func (val *ClientPortMatchConditionParameters) Defaults() *ClientPortMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// ClientPortMatchConditionParametersInput is an input type that accepts ClientPortMatchConditionParametersArgs and ClientPortMatchConditionParametersOutput values.
// You can construct a concrete instance of `ClientPortMatchConditionParametersInput` via:
//
//	ClientPortMatchConditionParametersArgs{...}
type ClientPortMatchConditionParametersInput interface {
	pulumi.Input

	ToClientPortMatchConditionParametersOutput() ClientPortMatchConditionParametersOutput
	ToClientPortMatchConditionParametersOutputWithContext(context.Context) ClientPortMatchConditionParametersOutput
}

// Defines the parameters for ClientPort match conditions
type ClientPortMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for ClientPortMatchConditionParametersArgs
func (val *ClientPortMatchConditionParametersArgs) Defaults() *ClientPortMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ClientPortMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPortMatchConditionParameters)(nil)).Elem()
}

func (i ClientPortMatchConditionParametersArgs) ToClientPortMatchConditionParametersOutput() ClientPortMatchConditionParametersOutput {
	return i.ToClientPortMatchConditionParametersOutputWithContext(context.Background())
}

func (i ClientPortMatchConditionParametersArgs) ToClientPortMatchConditionParametersOutputWithContext(ctx context.Context) ClientPortMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPortMatchConditionParametersOutput)
}

// Defines the parameters for ClientPort match conditions
type ClientPortMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (ClientPortMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPortMatchConditionParameters)(nil)).Elem()
}

func (o ClientPortMatchConditionParametersOutput) ToClientPortMatchConditionParametersOutput() ClientPortMatchConditionParametersOutput {
	return o
}

func (o ClientPortMatchConditionParametersOutput) ToClientPortMatchConditionParametersOutputWithContext(ctx context.Context) ClientPortMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o ClientPortMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o ClientPortMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o ClientPortMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o ClientPortMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o ClientPortMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for ClientPort match conditions
type ClientPortMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for ClientPortMatchConditionParametersResponse
func (val *ClientPortMatchConditionParametersResponse) Defaults() *ClientPortMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for ClientPort match conditions
type ClientPortMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (ClientPortMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPortMatchConditionParametersResponse)(nil)).Elem()
}

func (o ClientPortMatchConditionParametersResponseOutput) ToClientPortMatchConditionParametersResponseOutput() ClientPortMatchConditionParametersResponseOutput {
	return o
}

func (o ClientPortMatchConditionParametersResponseOutput) ToClientPortMatchConditionParametersResponseOutputWithContext(ctx context.Context) ClientPortMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o ClientPortMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o ClientPortMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o ClientPortMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o ClientPortMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o ClientPortMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v ClientPortMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// settings for compression.
type CompressionSettings struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
}

// CompressionSettingsInput is an input type that accepts CompressionSettingsArgs and CompressionSettingsOutput values.
// You can construct a concrete instance of `CompressionSettingsInput` via:
//
//	CompressionSettingsArgs{...}
type CompressionSettingsInput interface {
	pulumi.Input

	ToCompressionSettingsOutput() CompressionSettingsOutput
	ToCompressionSettingsOutputWithContext(context.Context) CompressionSettingsOutput
}

// settings for compression.
type CompressionSettingsArgs struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress pulumi.StringArrayInput `pulumi:"contentTypesToCompress"`
	// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled pulumi.BoolPtrInput `pulumi:"isCompressionEnabled"`
}

func (CompressionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionSettings)(nil)).Elem()
}

func (i CompressionSettingsArgs) ToCompressionSettingsOutput() CompressionSettingsOutput {
	return i.ToCompressionSettingsOutputWithContext(context.Background())
}

func (i CompressionSettingsArgs) ToCompressionSettingsOutputWithContext(ctx context.Context) CompressionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionSettingsOutput)
}

func (i CompressionSettingsArgs) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return i.ToCompressionSettingsPtrOutputWithContext(context.Background())
}

func (i CompressionSettingsArgs) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionSettingsOutput).ToCompressionSettingsPtrOutputWithContext(ctx)
}

// CompressionSettingsPtrInput is an input type that accepts CompressionSettingsArgs, CompressionSettingsPtr and CompressionSettingsPtrOutput values.
// You can construct a concrete instance of `CompressionSettingsPtrInput` via:
//
//	        CompressionSettingsArgs{...}
//
//	or:
//
//	        nil
type CompressionSettingsPtrInput interface {
	pulumi.Input

	ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput
	ToCompressionSettingsPtrOutputWithContext(context.Context) CompressionSettingsPtrOutput
}

type compressionSettingsPtrType CompressionSettingsArgs

func CompressionSettingsPtr(v *CompressionSettingsArgs) CompressionSettingsPtrInput {
	return (*compressionSettingsPtrType)(v)
}

func (*compressionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionSettings)(nil)).Elem()
}

func (i *compressionSettingsPtrType) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return i.ToCompressionSettingsPtrOutputWithContext(context.Background())
}

func (i *compressionSettingsPtrType) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionSettingsPtrOutput)
}

// settings for compression.
type CompressionSettingsOutput struct{ *pulumi.OutputState }

func (CompressionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionSettings)(nil)).Elem()
}

func (o CompressionSettingsOutput) ToCompressionSettingsOutput() CompressionSettingsOutput {
	return o
}

func (o CompressionSettingsOutput) ToCompressionSettingsOutputWithContext(ctx context.Context) CompressionSettingsOutput {
	return o
}

func (o CompressionSettingsOutput) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return o.ToCompressionSettingsPtrOutputWithContext(context.Background())
}

func (o CompressionSettingsOutput) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompressionSettings) *CompressionSettings {
		return &v
	}).(CompressionSettingsPtrOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CompressionSettings) []string { return v.ContentTypesToCompress }).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CompressionSettings) *bool { return v.IsCompressionEnabled }).(pulumi.BoolPtrOutput)
}

type CompressionSettingsPtrOutput struct{ *pulumi.OutputState }

func (CompressionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionSettings)(nil)).Elem()
}

func (o CompressionSettingsPtrOutput) ToCompressionSettingsPtrOutput() CompressionSettingsPtrOutput {
	return o
}

func (o CompressionSettingsPtrOutput) ToCompressionSettingsPtrOutputWithContext(ctx context.Context) CompressionSettingsPtrOutput {
	return o
}

func (o CompressionSettingsPtrOutput) Elem() CompressionSettingsOutput {
	return o.ApplyT(func(v *CompressionSettings) CompressionSettings {
		if v != nil {
			return *v
		}
		var ret CompressionSettings
		return ret
	}).(CompressionSettingsOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsPtrOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompressionSettings) []string {
		if v == nil {
			return nil
		}
		return v.ContentTypesToCompress
	}).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsPtrOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CompressionSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.BoolPtrOutput)
}

// settings for compression.
type CompressionSettingsResponse struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
}

// settings for compression.
type CompressionSettingsResponseOutput struct{ *pulumi.OutputState }

func (CompressionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionSettingsResponse)(nil)).Elem()
}

func (o CompressionSettingsResponseOutput) ToCompressionSettingsResponseOutput() CompressionSettingsResponseOutput {
	return o
}

func (o CompressionSettingsResponseOutput) ToCompressionSettingsResponseOutputWithContext(ctx context.Context) CompressionSettingsResponseOutput {
	return o
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsResponseOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CompressionSettingsResponse) []string { return v.ContentTypesToCompress }).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsResponseOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CompressionSettingsResponse) *bool { return v.IsCompressionEnabled }).(pulumi.BoolPtrOutput)
}

type CompressionSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CompressionSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionSettingsResponse)(nil)).Elem()
}

func (o CompressionSettingsResponsePtrOutput) ToCompressionSettingsResponsePtrOutput() CompressionSettingsResponsePtrOutput {
	return o
}

func (o CompressionSettingsResponsePtrOutput) ToCompressionSettingsResponsePtrOutputWithContext(ctx context.Context) CompressionSettingsResponsePtrOutput {
	return o
}

func (o CompressionSettingsResponsePtrOutput) Elem() CompressionSettingsResponseOutput {
	return o.ApplyT(func(v *CompressionSettingsResponse) CompressionSettingsResponse {
		if v != nil {
			return *v
		}
		var ret CompressionSettingsResponse
		return ret
	}).(CompressionSettingsResponseOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o CompressionSettingsResponsePtrOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompressionSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContentTypesToCompress
	}).(pulumi.StringArrayOutput)
}

// Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.
func (o CompressionSettingsResponsePtrOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CompressionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for CookiesMatchConditionParameters
func (val *CookiesMatchConditionParameters) Defaults() *CookiesMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// CookiesMatchConditionParametersInput is an input type that accepts CookiesMatchConditionParametersArgs and CookiesMatchConditionParametersOutput values.
// You can construct a concrete instance of `CookiesMatchConditionParametersInput` via:
//
//	CookiesMatchConditionParametersArgs{...}
type CookiesMatchConditionParametersInput interface {
	pulumi.Input

	ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput
	ToCookiesMatchConditionParametersOutputWithContext(context.Context) CookiesMatchConditionParametersOutput
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for CookiesMatchConditionParametersArgs
func (val *CookiesMatchConditionParametersArgs) Defaults() *CookiesMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (CookiesMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParameters)(nil)).Elem()
}

func (i CookiesMatchConditionParametersArgs) ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput {
	return i.ToCookiesMatchConditionParametersOutputWithContext(context.Background())
}

func (i CookiesMatchConditionParametersArgs) ToCookiesMatchConditionParametersOutputWithContext(ctx context.Context) CookiesMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookiesMatchConditionParametersOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (CookiesMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParameters)(nil)).Elem()
}

func (o CookiesMatchConditionParametersOutput) ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput {
	return o
}

func (o CookiesMatchConditionParametersOutput) ToCookiesMatchConditionParametersOutputWithContext(ctx context.Context) CookiesMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o CookiesMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o CookiesMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o CookiesMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Cookies to be matched
func (o CookiesMatchConditionParametersOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o CookiesMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o CookiesMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for CookiesMatchConditionParametersResponse
func (val *CookiesMatchConditionParametersResponse) Defaults() *CookiesMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (CookiesMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParametersResponse)(nil)).Elem()
}

func (o CookiesMatchConditionParametersResponseOutput) ToCookiesMatchConditionParametersResponseOutput() CookiesMatchConditionParametersResponseOutput {
	return o
}

func (o CookiesMatchConditionParametersResponseOutput) ToCookiesMatchConditionParametersResponseOutputWithContext(ctx context.Context) CookiesMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o CookiesMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o CookiesMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o CookiesMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Cookies to be matched
func (o CookiesMatchConditionParametersResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o CookiesMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o CookiesMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// CustomRuleInput is an input type that accepts CustomRuleArgs and CustomRuleOutput values.
// You can construct a concrete instance of `CustomRuleInput` via:
//
//	CustomRuleArgs{...}
type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(context.Context) CustomRuleOutput
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (i CustomRuleArgs) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i CustomRuleArgs) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//	CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleOutput struct{ *pulumi.OutputState }

func (CustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (o CustomRuleOutput) ToCustomRuleOutput() CustomRuleOutput {
	return o
}

func (o CustomRuleOutput) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v CustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) Index(i pulumi.IntInput) CustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRule {
		return vs[0].([]CustomRule)[vs[1].(int)]
	}).(CustomRuleOutput)
}

// Defines contents of custom rules
type CustomRuleList struct {
	// List of rules
	Rules []CustomRule `pulumi:"rules"`
}

// CustomRuleListInput is an input type that accepts CustomRuleListArgs and CustomRuleListOutput values.
// You can construct a concrete instance of `CustomRuleListInput` via:
//
//	CustomRuleListArgs{...}
type CustomRuleListInput interface {
	pulumi.Input

	ToCustomRuleListOutput() CustomRuleListOutput
	ToCustomRuleListOutputWithContext(context.Context) CustomRuleListOutput
}

// Defines contents of custom rules
type CustomRuleListArgs struct {
	// List of rules
	Rules CustomRuleArrayInput `pulumi:"rules"`
}

func (CustomRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (i CustomRuleListArgs) ToCustomRuleListOutput() CustomRuleListOutput {
	return i.ToCustomRuleListOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput)
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput).ToCustomRuleListPtrOutputWithContext(ctx)
}

// CustomRuleListPtrInput is an input type that accepts CustomRuleListArgs, CustomRuleListPtr and CustomRuleListPtrOutput values.
// You can construct a concrete instance of `CustomRuleListPtrInput` via:
//
//	        CustomRuleListArgs{...}
//
//	or:
//
//	        nil
type CustomRuleListPtrInput interface {
	pulumi.Input

	ToCustomRuleListPtrOutput() CustomRuleListPtrOutput
	ToCustomRuleListPtrOutputWithContext(context.Context) CustomRuleListPtrOutput
}

type customRuleListPtrType CustomRuleListArgs

func CustomRuleListPtr(v *CustomRuleListArgs) CustomRuleListPtrInput {
	return (*customRuleListPtrType)(v)
}

func (*customRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListPtrOutput)
}

// Defines contents of custom rules
type CustomRuleListOutput struct{ *pulumi.OutputState }

func (CustomRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListOutput) ToCustomRuleListOutput() CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomRuleList) *CustomRuleList {
		return &v
	}).(CustomRuleListPtrOutput)
}

// List of rules
func (o CustomRuleListOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v CustomRuleList) []CustomRule { return v.Rules }).(CustomRuleArrayOutput)
}

type CustomRuleListPtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) Elem() CustomRuleListOutput {
	return o.ApplyT(func(v *CustomRuleList) CustomRuleList {
		if v != nil {
			return *v
		}
		var ret CustomRuleList
		return ret
	}).(CustomRuleListOutput)
}

// List of rules
func (o CustomRuleListPtrOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v *CustomRuleList) []CustomRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleArrayOutput)
}

// Defines contents of custom rules
type CustomRuleListResponse struct {
	// List of rules
	Rules []CustomRuleResponse `pulumi:"rules"`
}

// Defines contents of custom rules
type CustomRuleListResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return o
}

// List of rules
func (o CustomRuleListResponseOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListResponse) []CustomRuleResponse { return v.Rules }).(CustomRuleResponseArrayOutput)
}

type CustomRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) Elem() CustomRuleListResponseOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) CustomRuleListResponse {
		if v != nil {
			return *v
		}
		var ret CustomRuleListResponse
		return ret
	}).(CustomRuleListResponseOutput)
}

// List of rules
func (o CustomRuleListResponsePtrOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) []CustomRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleResponseArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return o
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleResponse {
		return vs[0].([]CustomRuleResponse)[vs[1].(int)]
	}).(CustomRuleResponseOutput)
}

// Customer Certificate used for https
type CustomerCertificateParameters struct {
	// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReference `pulumi:"secretSource"`
	// Version of the secret to be used
	SecretVersion *string `pulumi:"secretVersion"`
	// The list of SANs.
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
	// The type of the secret resource.
	// Expected value is 'CustomerCertificate'.
	Type string `pulumi:"type"`
	// Whether to use the latest version for the certificate
	UseLatestVersion *bool `pulumi:"useLatestVersion"`
}

// CustomerCertificateParametersInput is an input type that accepts CustomerCertificateParametersArgs and CustomerCertificateParametersOutput values.
// You can construct a concrete instance of `CustomerCertificateParametersInput` via:
//
//	CustomerCertificateParametersArgs{...}
type CustomerCertificateParametersInput interface {
	pulumi.Input

	ToCustomerCertificateParametersOutput() CustomerCertificateParametersOutput
	ToCustomerCertificateParametersOutputWithContext(context.Context) CustomerCertificateParametersOutput
}

// Customer Certificate used for https
type CustomerCertificateParametersArgs struct {
	// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReferenceInput `pulumi:"secretSource"`
	// Version of the secret to be used
	SecretVersion pulumi.StringPtrInput `pulumi:"secretVersion"`
	// The list of SANs.
	SubjectAlternativeNames pulumi.StringArrayInput `pulumi:"subjectAlternativeNames"`
	// The type of the secret resource.
	// Expected value is 'CustomerCertificate'.
	Type pulumi.StringInput `pulumi:"type"`
	// Whether to use the latest version for the certificate
	UseLatestVersion pulumi.BoolPtrInput `pulumi:"useLatestVersion"`
}

func (CustomerCertificateParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerCertificateParameters)(nil)).Elem()
}

func (i CustomerCertificateParametersArgs) ToCustomerCertificateParametersOutput() CustomerCertificateParametersOutput {
	return i.ToCustomerCertificateParametersOutputWithContext(context.Background())
}

func (i CustomerCertificateParametersArgs) ToCustomerCertificateParametersOutputWithContext(ctx context.Context) CustomerCertificateParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerCertificateParametersOutput)
}

func (i CustomerCertificateParametersArgs) ToCustomerCertificateParametersPtrOutput() CustomerCertificateParametersPtrOutput {
	return i.ToCustomerCertificateParametersPtrOutputWithContext(context.Background())
}

func (i CustomerCertificateParametersArgs) ToCustomerCertificateParametersPtrOutputWithContext(ctx context.Context) CustomerCertificateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerCertificateParametersOutput).ToCustomerCertificateParametersPtrOutputWithContext(ctx)
}

// CustomerCertificateParametersPtrInput is an input type that accepts CustomerCertificateParametersArgs, CustomerCertificateParametersPtr and CustomerCertificateParametersPtrOutput values.
// You can construct a concrete instance of `CustomerCertificateParametersPtrInput` via:
//
//	        CustomerCertificateParametersArgs{...}
//
//	or:
//
//	        nil
type CustomerCertificateParametersPtrInput interface {
	pulumi.Input

	ToCustomerCertificateParametersPtrOutput() CustomerCertificateParametersPtrOutput
	ToCustomerCertificateParametersPtrOutputWithContext(context.Context) CustomerCertificateParametersPtrOutput
}

type customerCertificateParametersPtrType CustomerCertificateParametersArgs

func CustomerCertificateParametersPtr(v *CustomerCertificateParametersArgs) CustomerCertificateParametersPtrInput {
	return (*customerCertificateParametersPtrType)(v)
}

func (*customerCertificateParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerCertificateParameters)(nil)).Elem()
}

func (i *customerCertificateParametersPtrType) ToCustomerCertificateParametersPtrOutput() CustomerCertificateParametersPtrOutput {
	return i.ToCustomerCertificateParametersPtrOutputWithContext(context.Background())
}

func (i *customerCertificateParametersPtrType) ToCustomerCertificateParametersPtrOutputWithContext(ctx context.Context) CustomerCertificateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerCertificateParametersPtrOutput)
}

// Customer Certificate used for https
type CustomerCertificateParametersOutput struct{ *pulumi.OutputState }

func (CustomerCertificateParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerCertificateParameters)(nil)).Elem()
}

func (o CustomerCertificateParametersOutput) ToCustomerCertificateParametersOutput() CustomerCertificateParametersOutput {
	return o
}

func (o CustomerCertificateParametersOutput) ToCustomerCertificateParametersOutputWithContext(ctx context.Context) CustomerCertificateParametersOutput {
	return o
}

func (o CustomerCertificateParametersOutput) ToCustomerCertificateParametersPtrOutput() CustomerCertificateParametersPtrOutput {
	return o.ToCustomerCertificateParametersPtrOutputWithContext(context.Background())
}

func (o CustomerCertificateParametersOutput) ToCustomerCertificateParametersPtrOutputWithContext(ctx context.Context) CustomerCertificateParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerCertificateParameters) *CustomerCertificateParameters {
		return &v
	}).(CustomerCertificateParametersPtrOutput)
}

// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o CustomerCertificateParametersOutput) SecretSource() ResourceReferenceOutput {
	return o.ApplyT(func(v CustomerCertificateParameters) ResourceReference { return v.SecretSource }).(ResourceReferenceOutput)
}

// Version of the secret to be used
func (o CustomerCertificateParametersOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerCertificateParameters) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// The list of SANs.
func (o CustomerCertificateParametersOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomerCertificateParameters) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

// The type of the secret resource.
// Expected value is 'CustomerCertificate'.
func (o CustomerCertificateParametersOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerCertificateParameters) string { return v.Type }).(pulumi.StringOutput)
}

// Whether to use the latest version for the certificate
func (o CustomerCertificateParametersOutput) UseLatestVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomerCertificateParameters) *bool { return v.UseLatestVersion }).(pulumi.BoolPtrOutput)
}

type CustomerCertificateParametersPtrOutput struct{ *pulumi.OutputState }

func (CustomerCertificateParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerCertificateParameters)(nil)).Elem()
}

func (o CustomerCertificateParametersPtrOutput) ToCustomerCertificateParametersPtrOutput() CustomerCertificateParametersPtrOutput {
	return o
}

func (o CustomerCertificateParametersPtrOutput) ToCustomerCertificateParametersPtrOutputWithContext(ctx context.Context) CustomerCertificateParametersPtrOutput {
	return o
}

func (o CustomerCertificateParametersPtrOutput) Elem() CustomerCertificateParametersOutput {
	return o.ApplyT(func(v *CustomerCertificateParameters) CustomerCertificateParameters {
		if v != nil {
			return *v
		}
		var ret CustomerCertificateParameters
		return ret
	}).(CustomerCertificateParametersOutput)
}

// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o CustomerCertificateParametersPtrOutput) SecretSource() ResourceReferencePtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParameters) *ResourceReference {
		if v == nil {
			return nil
		}
		return &v.SecretSource
	}).(ResourceReferencePtrOutput)
}

// Version of the secret to be used
func (o CustomerCertificateParametersPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParameters) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

// The list of SANs.
func (o CustomerCertificateParametersPtrOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomerCertificateParameters) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(pulumi.StringArrayOutput)
}

// The type of the secret resource.
// Expected value is 'CustomerCertificate'.
func (o CustomerCertificateParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Whether to use the latest version for the certificate
func (o CustomerCertificateParametersPtrOutput) UseLatestVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParameters) *bool {
		if v == nil {
			return nil
		}
		return v.UseLatestVersion
	}).(pulumi.BoolPtrOutput)
}

// Customer Certificate used for https
type CustomerCertificateParametersResponse struct {
	// Certificate issuing authority.
	CertificateAuthority string `pulumi:"certificateAuthority"`
	// Certificate expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReferenceResponse `pulumi:"secretSource"`
	// Version of the secret to be used
	SecretVersion *string `pulumi:"secretVersion"`
	// Subject name in the certificate.
	Subject string `pulumi:"subject"`
	// The list of SANs.
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
	// Certificate thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// The type of the secret resource.
	// Expected value is 'CustomerCertificate'.
	Type string `pulumi:"type"`
	// Whether to use the latest version for the certificate
	UseLatestVersion *bool `pulumi:"useLatestVersion"`
}

// Customer Certificate used for https
type CustomerCertificateParametersResponseOutput struct{ *pulumi.OutputState }

func (CustomerCertificateParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerCertificateParametersResponse)(nil)).Elem()
}

func (o CustomerCertificateParametersResponseOutput) ToCustomerCertificateParametersResponseOutput() CustomerCertificateParametersResponseOutput {
	return o
}

func (o CustomerCertificateParametersResponseOutput) ToCustomerCertificateParametersResponseOutputWithContext(ctx context.Context) CustomerCertificateParametersResponseOutput {
	return o
}

// Certificate issuing authority.
func (o CustomerCertificateParametersResponseOutput) CertificateAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) string { return v.CertificateAuthority }).(pulumi.StringOutput)
}

// Certificate expiration date.
func (o CustomerCertificateParametersResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o CustomerCertificateParametersResponseOutput) SecretSource() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) ResourceReferenceResponse { return v.SecretSource }).(ResourceReferenceResponseOutput)
}

// Version of the secret to be used
func (o CustomerCertificateParametersResponseOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// Subject name in the certificate.
func (o CustomerCertificateParametersResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The list of SANs.
func (o CustomerCertificateParametersResponseOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

// Certificate thumbprint.
func (o CustomerCertificateParametersResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The type of the secret resource.
// Expected value is 'CustomerCertificate'.
func (o CustomerCertificateParametersResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Whether to use the latest version for the certificate
func (o CustomerCertificateParametersResponseOutput) UseLatestVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomerCertificateParametersResponse) *bool { return v.UseLatestVersion }).(pulumi.BoolPtrOutput)
}

type CustomerCertificateParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomerCertificateParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerCertificateParametersResponse)(nil)).Elem()
}

func (o CustomerCertificateParametersResponsePtrOutput) ToCustomerCertificateParametersResponsePtrOutput() CustomerCertificateParametersResponsePtrOutput {
	return o
}

func (o CustomerCertificateParametersResponsePtrOutput) ToCustomerCertificateParametersResponsePtrOutputWithContext(ctx context.Context) CustomerCertificateParametersResponsePtrOutput {
	return o
}

func (o CustomerCertificateParametersResponsePtrOutput) Elem() CustomerCertificateParametersResponseOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) CustomerCertificateParametersResponse {
		if v != nil {
			return *v
		}
		var ret CustomerCertificateParametersResponse
		return ret
	}).(CustomerCertificateParametersResponseOutput)
}

// Certificate issuing authority.
func (o CustomerCertificateParametersResponsePtrOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateAuthority
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration date.
func (o CustomerCertificateParametersResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o CustomerCertificateParametersResponsePtrOutput) SecretSource() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return &v.SecretSource
	}).(ResourceReferenceResponsePtrOutput)
}

// Version of the secret to be used
func (o CustomerCertificateParametersResponsePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

// Subject name in the certificate.
func (o CustomerCertificateParametersResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The list of SANs.
func (o CustomerCertificateParametersResponsePtrOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(pulumi.StringArrayOutput)
}

// Certificate thumbprint.
func (o CustomerCertificateParametersResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'CustomerCertificate'.
func (o CustomerCertificateParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Whether to use the latest version for the certificate
func (o CustomerCertificateParametersResponsePtrOutput) UseLatestVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomerCertificateParametersResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseLatestVersion
	}).(pulumi.BoolPtrOutput)
}

// Custom domains created on the CDN endpoint.
type DeepCreatedCustomDomainResponse struct {
	// The host name of the custom domain. Must be a domain name.
	HostName string `pulumi:"hostName"`
	// Custom domain name.
	Name string `pulumi:"name"`
	// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
	ValidationData *string `pulumi:"validationData"`
}

// Custom domains created on the CDN endpoint.
type DeepCreatedCustomDomainResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedCustomDomainResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedCustomDomainResponse)(nil)).Elem()
}

func (o DeepCreatedCustomDomainResponseOutput) ToDeepCreatedCustomDomainResponseOutput() DeepCreatedCustomDomainResponseOutput {
	return o
}

func (o DeepCreatedCustomDomainResponseOutput) ToDeepCreatedCustomDomainResponseOutputWithContext(ctx context.Context) DeepCreatedCustomDomainResponseOutput {
	return o
}

// The host name of the custom domain. Must be a domain name.
func (o DeepCreatedCustomDomainResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedCustomDomainResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Custom domain name.
func (o DeepCreatedCustomDomainResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedCustomDomainResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
func (o DeepCreatedCustomDomainResponseOutput) ValidationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedCustomDomainResponse) *string { return v.ValidationData }).(pulumi.StringPtrOutput)
}

type DeepCreatedCustomDomainResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedCustomDomainResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedCustomDomainResponse)(nil)).Elem()
}

func (o DeepCreatedCustomDomainResponseArrayOutput) ToDeepCreatedCustomDomainResponseArrayOutput() DeepCreatedCustomDomainResponseArrayOutput {
	return o
}

func (o DeepCreatedCustomDomainResponseArrayOutput) ToDeepCreatedCustomDomainResponseArrayOutputWithContext(ctx context.Context) DeepCreatedCustomDomainResponseArrayOutput {
	return o
}

func (o DeepCreatedCustomDomainResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedCustomDomainResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedCustomDomainResponse {
		return vs[0].([]DeepCreatedCustomDomainResponse)[vs[1].(int)]
	}).(DeepCreatedCustomDomainResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//	DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
	PrivateLinkAlias pulumi.StringPtrInput `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage pulumi.StringPtrInput `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation pulumi.StringPtrInput `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//	DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return o
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o DeepCreatedOriginOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
func (o DeepCreatedOriginOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link.
func (o DeepCreatedOriginOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o DeepCreatedOriginOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o DeepCreatedOriginOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOrigin {
		return vs[0].([]DeepCreatedOrigin)[vs[1].(int)]
	}).(DeepCreatedOriginOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroup struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParameters `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReference `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParameters `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// DeepCreatedOriginGroupInput is an input type that accepts DeepCreatedOriginGroupArgs and DeepCreatedOriginGroupOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupInput` via:
//
//	DeepCreatedOriginGroupArgs{...}
type DeepCreatedOriginGroupInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput
	ToDeepCreatedOriginGroupOutputWithContext(context.Context) DeepCreatedOriginGroupOutput
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupArgs struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings HealthProbeParametersPtrInput `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins ResourceReferenceArrayInput `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings ResponseBasedOriginErrorDetectionParametersPtrInput `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes pulumi.IntPtrInput `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

func (DeepCreatedOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return i.ToDeepCreatedOriginGroupOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupOutput)
}

// DeepCreatedOriginGroupArrayInput is an input type that accepts DeepCreatedOriginGroupArray and DeepCreatedOriginGroupArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupArrayInput` via:
//
//	DeepCreatedOriginGroupArray{ DeepCreatedOriginGroupArgs{...} }
type DeepCreatedOriginGroupArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput
	ToDeepCreatedOriginGroupArrayOutputWithContext(context.Context) DeepCreatedOriginGroupArrayOutput
}

type DeepCreatedOriginGroupArray []DeepCreatedOriginGroupInput

func (DeepCreatedOriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return i.ToDeepCreatedOriginGroupArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (o DeepCreatedOriginGroupOutput) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return o
}

func (o DeepCreatedOriginGroupOutput) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupOutput) HealthProbeSettings() HealthProbeParametersPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *HealthProbeParameters { return v.HealthProbeSettings }).(HealthProbeParametersPtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupOutput) Origins() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) []ResourceReference { return v.Origins }).(ResourceReferenceArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *ResponseBasedOriginErrorDetectionParameters {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *int { return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (o DeepCreatedOriginGroupArrayOutput) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupArrayOutput) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroup {
		return vs[0].([]DeepCreatedOriginGroup)[vs[1].(int)]
	}).(DeepCreatedOriginGroupOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponse struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParametersResponse `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReferenceResponse `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParametersResponse `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutput() DeepCreatedOriginGroupResponseOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupResponseOutput) HealthProbeSettings() HealthProbeParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *HealthProbeParametersResponse { return v.HealthProbeSettings }).(HealthProbeParametersResponsePtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupResponseOutput) Origins() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) []ResourceReferenceResponse { return v.Origins }).(ResourceReferenceResponseArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *ResponseBasedOriginErrorDetectionParametersResponse {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *int {
		return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutput() DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroupResponse {
		return vs[0].([]DeepCreatedOriginGroupResponse)[vs[1].(int)]
	}).(DeepCreatedOriginGroupResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// The approval status for the connection to the Private Link
	PrivateEndpointStatus string `pulumi:"privateEndpointStatus"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o DeepCreatedOriginResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The approval status for the connection to the Private Link
func (o DeepCreatedOriginResponseOutput) PrivateEndpointStatus() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.PrivateEndpointStatus }).(pulumi.StringOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
func (o DeepCreatedOriginResponseOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link.
func (o DeepCreatedOriginResponseOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o DeepCreatedOriginResponseOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o DeepCreatedOriginResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRule struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInput is an input type that accepts DeliveryRuleArgs and DeliveryRuleOutput values.
// You can construct a concrete instance of `DeliveryRuleInput` via:
//
//	DeliveryRuleArgs{...}
type DeliveryRuleInput interface {
	pulumi.Input

	ToDeliveryRuleOutput() DeliveryRuleOutput
	ToDeliveryRuleOutputWithContext(context.Context) DeliveryRuleOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return i.ToDeliveryRuleOutputWithContext(context.Background())
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleOutput)
}

// DeliveryRuleArrayInput is an input type that accepts DeliveryRuleArray and DeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleArrayInput` via:
//
//	DeliveryRuleArray{ DeliveryRuleArgs{...} }
type DeliveryRuleArrayInput interface {
	pulumi.Input

	ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput
	ToDeliveryRuleArrayOutputWithContext(context.Context) DeliveryRuleArrayOutput
}

type DeliveryRuleArray []DeliveryRuleInput

func (DeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return i.ToDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleOutput struct{ *pulumi.OutputState }

func (DeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return o
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRule) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) Index(i pulumi.IntInput) DeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRule {
		return vs[0].([]DeliveryRule)[vs[1].(int)]
	}).(DeliveryRuleOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParameters `pulumi:"parameters"`
}

// DeliveryRuleCacheExpirationActionInput is an input type that accepts DeliveryRuleCacheExpirationActionArgs and DeliveryRuleCacheExpirationActionOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheExpirationActionInput` via:
//
//	DeliveryRuleCacheExpirationActionArgs{...}
type DeliveryRuleCacheExpirationActionInput interface {
	pulumi.Input

	ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput
	ToDeliveryRuleCacheExpirationActionOutputWithContext(context.Context) DeliveryRuleCacheExpirationActionOutput
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheExpirationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationAction)(nil)).Elem()
}

func (i DeliveryRuleCacheExpirationActionArgs) ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput {
	return i.ToDeliveryRuleCacheExpirationActionOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheExpirationActionArgs) ToDeliveryRuleCacheExpirationActionOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheExpirationActionOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheExpirationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationAction)(nil)).Elem()
}

func (o DeliveryRuleCacheExpirationActionOutput) ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput {
	return o
}

func (o DeliveryRuleCacheExpirationActionOutput) ToDeliveryRuleCacheExpirationActionOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheExpiration'.
func (o DeliveryRuleCacheExpirationActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheExpirationActionOutput) Parameters() CacheExpirationActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationAction) CacheExpirationActionParameters { return v.Parameters }).(CacheExpirationActionParametersOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersResponse `pulumi:"parameters"`
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheExpirationActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationActionResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheExpirationActionResponseOutput) ToDeliveryRuleCacheExpirationActionResponseOutput() DeliveryRuleCacheExpirationActionResponseOutput {
	return o
}

func (o DeliveryRuleCacheExpirationActionResponseOutput) ToDeliveryRuleCacheExpirationActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheExpiration'.
func (o DeliveryRuleCacheExpirationActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheExpirationActionResponseOutput) Parameters() CacheExpirationActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionResponse) CacheExpirationActionParametersResponse {
		return v.Parameters
	}).(CacheExpirationActionParametersResponseOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParameters `pulumi:"parameters"`
}

// DeliveryRuleCacheKeyQueryStringActionInput is an input type that accepts DeliveryRuleCacheKeyQueryStringActionArgs and DeliveryRuleCacheKeyQueryStringActionOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheKeyQueryStringActionInput` via:
//
//	DeliveryRuleCacheKeyQueryStringActionArgs{...}
type DeliveryRuleCacheKeyQueryStringActionInput interface {
	pulumi.Input

	ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput
	ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(context.Context) DeliveryRuleCacheKeyQueryStringActionOutput
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheKeyQueryStringActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringAction)(nil)).Elem()
}

func (i DeliveryRuleCacheKeyQueryStringActionArgs) ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput {
	return i.ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheKeyQueryStringActionArgs) ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheKeyQueryStringActionOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheKeyQueryStringActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringAction)(nil)).Elem()
}

func (o DeliveryRuleCacheKeyQueryStringActionOutput) ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput {
	return o
}

func (o DeliveryRuleCacheKeyQueryStringActionOutput) ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheKeyQueryString'.
func (o DeliveryRuleCacheKeyQueryStringActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheKeyQueryStringActionOutput) Parameters() CacheKeyQueryStringActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringAction) CacheKeyQueryStringActionParameters { return v.Parameters }).(CacheKeyQueryStringActionParametersOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersResponse `pulumi:"parameters"`
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheKeyQueryStringActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringActionResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionResponseOutput() DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return o
}

func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheKeyQueryString'.
func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) Parameters() CacheKeyQueryStringActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionResponse) CacheKeyQueryStringActionParametersResponse {
		return v.Parameters
	}).(CacheKeyQueryStringActionParametersResponseOutput)
}

// Defines the ClientPort condition for the delivery rule.
type DeliveryRuleClientPortCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'ClientPort'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters ClientPortMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleClientPortCondition
func (val *DeliveryRuleClientPortCondition) Defaults() *DeliveryRuleClientPortCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleClientPortConditionInput is an input type that accepts DeliveryRuleClientPortConditionArgs and DeliveryRuleClientPortConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleClientPortConditionInput` via:
//
//	DeliveryRuleClientPortConditionArgs{...}
type DeliveryRuleClientPortConditionInput interface {
	pulumi.Input

	ToDeliveryRuleClientPortConditionOutput() DeliveryRuleClientPortConditionOutput
	ToDeliveryRuleClientPortConditionOutputWithContext(context.Context) DeliveryRuleClientPortConditionOutput
}

// Defines the ClientPort condition for the delivery rule.
type DeliveryRuleClientPortConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'ClientPort'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters ClientPortMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleClientPortConditionArgs
func (val *DeliveryRuleClientPortConditionArgs) Defaults() *DeliveryRuleClientPortConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleClientPortConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleClientPortCondition)(nil)).Elem()
}

func (i DeliveryRuleClientPortConditionArgs) ToDeliveryRuleClientPortConditionOutput() DeliveryRuleClientPortConditionOutput {
	return i.ToDeliveryRuleClientPortConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleClientPortConditionArgs) ToDeliveryRuleClientPortConditionOutputWithContext(ctx context.Context) DeliveryRuleClientPortConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleClientPortConditionOutput)
}

// Defines the ClientPort condition for the delivery rule.
type DeliveryRuleClientPortConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleClientPortConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleClientPortCondition)(nil)).Elem()
}

func (o DeliveryRuleClientPortConditionOutput) ToDeliveryRuleClientPortConditionOutput() DeliveryRuleClientPortConditionOutput {
	return o
}

func (o DeliveryRuleClientPortConditionOutput) ToDeliveryRuleClientPortConditionOutputWithContext(ctx context.Context) DeliveryRuleClientPortConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'ClientPort'.
func (o DeliveryRuleClientPortConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleClientPortCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleClientPortConditionOutput) Parameters() ClientPortMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleClientPortCondition) ClientPortMatchConditionParameters { return v.Parameters }).(ClientPortMatchConditionParametersOutput)
}

// Defines the ClientPort condition for the delivery rule.
type DeliveryRuleClientPortConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'ClientPort'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters ClientPortMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleClientPortConditionResponse
func (val *DeliveryRuleClientPortConditionResponse) Defaults() *DeliveryRuleClientPortConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the ClientPort condition for the delivery rule.
type DeliveryRuleClientPortConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleClientPortConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleClientPortConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleClientPortConditionResponseOutput) ToDeliveryRuleClientPortConditionResponseOutput() DeliveryRuleClientPortConditionResponseOutput {
	return o
}

func (o DeliveryRuleClientPortConditionResponseOutput) ToDeliveryRuleClientPortConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleClientPortConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'ClientPort'.
func (o DeliveryRuleClientPortConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleClientPortConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleClientPortConditionResponseOutput) Parameters() ClientPortMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleClientPortConditionResponse) ClientPortMatchConditionParametersResponse {
		return v.Parameters
	}).(ClientPortMatchConditionParametersResponseOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleCookiesCondition
func (val *DeliveryRuleCookiesCondition) Defaults() *DeliveryRuleCookiesCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleCookiesConditionInput is an input type that accepts DeliveryRuleCookiesConditionArgs and DeliveryRuleCookiesConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleCookiesConditionInput` via:
//
//	DeliveryRuleCookiesConditionArgs{...}
type DeliveryRuleCookiesConditionInput interface {
	pulumi.Input

	ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput
	ToDeliveryRuleCookiesConditionOutputWithContext(context.Context) DeliveryRuleCookiesConditionOutput
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleCookiesConditionArgs
func (val *DeliveryRuleCookiesConditionArgs) Defaults() *DeliveryRuleCookiesConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleCookiesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesCondition)(nil)).Elem()
}

func (i DeliveryRuleCookiesConditionArgs) ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput {
	return i.ToDeliveryRuleCookiesConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleCookiesConditionArgs) ToDeliveryRuleCookiesConditionOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCookiesConditionOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCookiesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesCondition)(nil)).Elem()
}

func (o DeliveryRuleCookiesConditionOutput) ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput {
	return o
}

func (o DeliveryRuleCookiesConditionOutput) ToDeliveryRuleCookiesConditionOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'Cookies'.
func (o DeliveryRuleCookiesConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleCookiesConditionOutput) Parameters() CookiesMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesCondition) CookiesMatchConditionParameters { return v.Parameters }).(CookiesMatchConditionParametersOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleCookiesConditionResponse
func (val *DeliveryRuleCookiesConditionResponse) Defaults() *DeliveryRuleCookiesConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCookiesConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleCookiesConditionResponseOutput) ToDeliveryRuleCookiesConditionResponseOutput() DeliveryRuleCookiesConditionResponseOutput {
	return o
}

func (o DeliveryRuleCookiesConditionResponseOutput) ToDeliveryRuleCookiesConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'Cookies'.
func (o DeliveryRuleCookiesConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleCookiesConditionResponseOutput) Parameters() CookiesMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionResponse) CookiesMatchConditionParametersResponse {
		return v.Parameters
	}).(CookiesMatchConditionParametersResponseOutput)
}

// Defines the HostName condition for the delivery rule.
type DeliveryRuleHostNameCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HostName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HostNameMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleHostNameCondition
func (val *DeliveryRuleHostNameCondition) Defaults() *DeliveryRuleHostNameCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleHostNameConditionInput is an input type that accepts DeliveryRuleHostNameConditionArgs and DeliveryRuleHostNameConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleHostNameConditionInput` via:
//
//	DeliveryRuleHostNameConditionArgs{...}
type DeliveryRuleHostNameConditionInput interface {
	pulumi.Input

	ToDeliveryRuleHostNameConditionOutput() DeliveryRuleHostNameConditionOutput
	ToDeliveryRuleHostNameConditionOutputWithContext(context.Context) DeliveryRuleHostNameConditionOutput
}

// Defines the HostName condition for the delivery rule.
type DeliveryRuleHostNameConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HostName'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HostNameMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleHostNameConditionArgs
func (val *DeliveryRuleHostNameConditionArgs) Defaults() *DeliveryRuleHostNameConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleHostNameConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHostNameCondition)(nil)).Elem()
}

func (i DeliveryRuleHostNameConditionArgs) ToDeliveryRuleHostNameConditionOutput() DeliveryRuleHostNameConditionOutput {
	return i.ToDeliveryRuleHostNameConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleHostNameConditionArgs) ToDeliveryRuleHostNameConditionOutputWithContext(ctx context.Context) DeliveryRuleHostNameConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleHostNameConditionOutput)
}

// Defines the HostName condition for the delivery rule.
type DeliveryRuleHostNameConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHostNameConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHostNameCondition)(nil)).Elem()
}

func (o DeliveryRuleHostNameConditionOutput) ToDeliveryRuleHostNameConditionOutput() DeliveryRuleHostNameConditionOutput {
	return o
}

func (o DeliveryRuleHostNameConditionOutput) ToDeliveryRuleHostNameConditionOutputWithContext(ctx context.Context) DeliveryRuleHostNameConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HostName'.
func (o DeliveryRuleHostNameConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHostNameCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHostNameConditionOutput) Parameters() HostNameMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleHostNameCondition) HostNameMatchConditionParameters { return v.Parameters }).(HostNameMatchConditionParametersOutput)
}

// Defines the HostName condition for the delivery rule.
type DeliveryRuleHostNameConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HostName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HostNameMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleHostNameConditionResponse
func (val *DeliveryRuleHostNameConditionResponse) Defaults() *DeliveryRuleHostNameConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the HostName condition for the delivery rule.
type DeliveryRuleHostNameConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHostNameConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHostNameConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleHostNameConditionResponseOutput) ToDeliveryRuleHostNameConditionResponseOutput() DeliveryRuleHostNameConditionResponseOutput {
	return o
}

func (o DeliveryRuleHostNameConditionResponseOutput) ToDeliveryRuleHostNameConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleHostNameConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HostName'.
func (o DeliveryRuleHostNameConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHostNameConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHostNameConditionResponseOutput) Parameters() HostNameMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleHostNameConditionResponse) HostNameMatchConditionParametersResponse {
		return v.Parameters
	}).(HostNameMatchConditionParametersResponseOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleHttpVersionCondition
func (val *DeliveryRuleHttpVersionCondition) Defaults() *DeliveryRuleHttpVersionCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleHttpVersionConditionInput is an input type that accepts DeliveryRuleHttpVersionConditionArgs and DeliveryRuleHttpVersionConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleHttpVersionConditionInput` via:
//
//	DeliveryRuleHttpVersionConditionArgs{...}
type DeliveryRuleHttpVersionConditionInput interface {
	pulumi.Input

	ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput
	ToDeliveryRuleHttpVersionConditionOutputWithContext(context.Context) DeliveryRuleHttpVersionConditionOutput
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleHttpVersionConditionArgs
func (val *DeliveryRuleHttpVersionConditionArgs) Defaults() *DeliveryRuleHttpVersionConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleHttpVersionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionCondition)(nil)).Elem()
}

func (i DeliveryRuleHttpVersionConditionArgs) ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput {
	return i.ToDeliveryRuleHttpVersionConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleHttpVersionConditionArgs) ToDeliveryRuleHttpVersionConditionOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleHttpVersionConditionOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHttpVersionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionCondition)(nil)).Elem()
}

func (o DeliveryRuleHttpVersionConditionOutput) ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput {
	return o
}

func (o DeliveryRuleHttpVersionConditionOutput) ToDeliveryRuleHttpVersionConditionOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HttpVersion'.
func (o DeliveryRuleHttpVersionConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHttpVersionConditionOutput) Parameters() HttpVersionMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionCondition) HttpVersionMatchConditionParameters { return v.Parameters }).(HttpVersionMatchConditionParametersOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleHttpVersionConditionResponse
func (val *DeliveryRuleHttpVersionConditionResponse) Defaults() *DeliveryRuleHttpVersionConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHttpVersionConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleHttpVersionConditionResponseOutput) ToDeliveryRuleHttpVersionConditionResponseOutput() DeliveryRuleHttpVersionConditionResponseOutput {
	return o
}

func (o DeliveryRuleHttpVersionConditionResponseOutput) ToDeliveryRuleHttpVersionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HttpVersion'.
func (o DeliveryRuleHttpVersionConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHttpVersionConditionResponseOutput) Parameters() HttpVersionMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionResponse) HttpVersionMatchConditionParametersResponse {
		return v.Parameters
	}).(HttpVersionMatchConditionParametersResponseOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleIsDeviceCondition
func (val *DeliveryRuleIsDeviceCondition) Defaults() *DeliveryRuleIsDeviceCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleIsDeviceConditionInput is an input type that accepts DeliveryRuleIsDeviceConditionArgs and DeliveryRuleIsDeviceConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleIsDeviceConditionInput` via:
//
//	DeliveryRuleIsDeviceConditionArgs{...}
type DeliveryRuleIsDeviceConditionInput interface {
	pulumi.Input

	ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput
	ToDeliveryRuleIsDeviceConditionOutputWithContext(context.Context) DeliveryRuleIsDeviceConditionOutput
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleIsDeviceConditionArgs
func (val *DeliveryRuleIsDeviceConditionArgs) Defaults() *DeliveryRuleIsDeviceConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleIsDeviceConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceCondition)(nil)).Elem()
}

func (i DeliveryRuleIsDeviceConditionArgs) ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput {
	return i.ToDeliveryRuleIsDeviceConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleIsDeviceConditionArgs) ToDeliveryRuleIsDeviceConditionOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleIsDeviceConditionOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleIsDeviceConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceCondition)(nil)).Elem()
}

func (o DeliveryRuleIsDeviceConditionOutput) ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput {
	return o
}

func (o DeliveryRuleIsDeviceConditionOutput) ToDeliveryRuleIsDeviceConditionOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'IsDevice'.
func (o DeliveryRuleIsDeviceConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleIsDeviceConditionOutput) Parameters() IsDeviceMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceCondition) IsDeviceMatchConditionParameters { return v.Parameters }).(IsDeviceMatchConditionParametersOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleIsDeviceConditionResponse
func (val *DeliveryRuleIsDeviceConditionResponse) Defaults() *DeliveryRuleIsDeviceConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleIsDeviceConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleIsDeviceConditionResponseOutput) ToDeliveryRuleIsDeviceConditionResponseOutput() DeliveryRuleIsDeviceConditionResponseOutput {
	return o
}

func (o DeliveryRuleIsDeviceConditionResponseOutput) ToDeliveryRuleIsDeviceConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'IsDevice'.
func (o DeliveryRuleIsDeviceConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleIsDeviceConditionResponseOutput) Parameters() IsDeviceMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionResponse) IsDeviceMatchConditionParametersResponse {
		return v.Parameters
	}).(IsDeviceMatchConditionParametersResponseOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRulePostArgsCondition
func (val *DeliveryRulePostArgsCondition) Defaults() *DeliveryRulePostArgsCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRulePostArgsConditionInput is an input type that accepts DeliveryRulePostArgsConditionArgs and DeliveryRulePostArgsConditionOutput values.
// You can construct a concrete instance of `DeliveryRulePostArgsConditionInput` via:
//
//	DeliveryRulePostArgsConditionArgs{...}
type DeliveryRulePostArgsConditionInput interface {
	pulumi.Input

	ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput
	ToDeliveryRulePostArgsConditionOutputWithContext(context.Context) DeliveryRulePostArgsConditionOutput
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRulePostArgsConditionArgs
func (val *DeliveryRulePostArgsConditionArgs) Defaults() *DeliveryRulePostArgsConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRulePostArgsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsCondition)(nil)).Elem()
}

func (i DeliveryRulePostArgsConditionArgs) ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput {
	return i.ToDeliveryRulePostArgsConditionOutputWithContext(context.Background())
}

func (i DeliveryRulePostArgsConditionArgs) ToDeliveryRulePostArgsConditionOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRulePostArgsConditionOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRulePostArgsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsCondition)(nil)).Elem()
}

func (o DeliveryRulePostArgsConditionOutput) ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput {
	return o
}

func (o DeliveryRulePostArgsConditionOutput) ToDeliveryRulePostArgsConditionOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'PostArgs'.
func (o DeliveryRulePostArgsConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRulePostArgsConditionOutput) Parameters() PostArgsMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsCondition) PostArgsMatchConditionParameters { return v.Parameters }).(PostArgsMatchConditionParametersOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRulePostArgsConditionResponse
func (val *DeliveryRulePostArgsConditionResponse) Defaults() *DeliveryRulePostArgsConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRulePostArgsConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsConditionResponse)(nil)).Elem()
}

func (o DeliveryRulePostArgsConditionResponseOutput) ToDeliveryRulePostArgsConditionResponseOutput() DeliveryRulePostArgsConditionResponseOutput {
	return o
}

func (o DeliveryRulePostArgsConditionResponseOutput) ToDeliveryRulePostArgsConditionResponseOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'PostArgs'.
func (o DeliveryRulePostArgsConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRulePostArgsConditionResponseOutput) Parameters() PostArgsMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionResponse) PostArgsMatchConditionParametersResponse {
		return v.Parameters
	}).(PostArgsMatchConditionParametersResponseOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleQueryStringCondition
func (val *DeliveryRuleQueryStringCondition) Defaults() *DeliveryRuleQueryStringCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleQueryStringConditionInput is an input type that accepts DeliveryRuleQueryStringConditionArgs and DeliveryRuleQueryStringConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleQueryStringConditionInput` via:
//
//	DeliveryRuleQueryStringConditionArgs{...}
type DeliveryRuleQueryStringConditionInput interface {
	pulumi.Input

	ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput
	ToDeliveryRuleQueryStringConditionOutputWithContext(context.Context) DeliveryRuleQueryStringConditionOutput
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleQueryStringConditionArgs
func (val *DeliveryRuleQueryStringConditionArgs) Defaults() *DeliveryRuleQueryStringConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleQueryStringConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringCondition)(nil)).Elem()
}

func (i DeliveryRuleQueryStringConditionArgs) ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput {
	return i.ToDeliveryRuleQueryStringConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleQueryStringConditionArgs) ToDeliveryRuleQueryStringConditionOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleQueryStringConditionOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleQueryStringConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringCondition)(nil)).Elem()
}

func (o DeliveryRuleQueryStringConditionOutput) ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput {
	return o
}

func (o DeliveryRuleQueryStringConditionOutput) ToDeliveryRuleQueryStringConditionOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'QueryString'.
func (o DeliveryRuleQueryStringConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleQueryStringConditionOutput) Parameters() QueryStringMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringCondition) QueryStringMatchConditionParameters { return v.Parameters }).(QueryStringMatchConditionParametersOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleQueryStringConditionResponse
func (val *DeliveryRuleQueryStringConditionResponse) Defaults() *DeliveryRuleQueryStringConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleQueryStringConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleQueryStringConditionResponseOutput) ToDeliveryRuleQueryStringConditionResponseOutput() DeliveryRuleQueryStringConditionResponseOutput {
	return o
}

func (o DeliveryRuleQueryStringConditionResponseOutput) ToDeliveryRuleQueryStringConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'QueryString'.
func (o DeliveryRuleQueryStringConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleQueryStringConditionResponseOutput) Parameters() QueryStringMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionResponse) QueryStringMatchConditionParametersResponse {
		return v.Parameters
	}).(QueryStringMatchConditionParametersResponseOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRemoteAddressCondition
func (val *DeliveryRuleRemoteAddressCondition) Defaults() *DeliveryRuleRemoteAddressCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleRemoteAddressConditionInput is an input type that accepts DeliveryRuleRemoteAddressConditionArgs and DeliveryRuleRemoteAddressConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRemoteAddressConditionInput` via:
//
//	DeliveryRuleRemoteAddressConditionArgs{...}
type DeliveryRuleRemoteAddressConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput
	ToDeliveryRuleRemoteAddressConditionOutputWithContext(context.Context) DeliveryRuleRemoteAddressConditionOutput
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRemoteAddressConditionArgs
func (val *DeliveryRuleRemoteAddressConditionArgs) Defaults() *DeliveryRuleRemoteAddressConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleRemoteAddressConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressCondition)(nil)).Elem()
}

func (i DeliveryRuleRemoteAddressConditionArgs) ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput {
	return i.ToDeliveryRuleRemoteAddressConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRemoteAddressConditionArgs) ToDeliveryRuleRemoteAddressConditionOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRemoteAddressConditionOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRemoteAddressConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressCondition)(nil)).Elem()
}

func (o DeliveryRuleRemoteAddressConditionOutput) ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput {
	return o
}

func (o DeliveryRuleRemoteAddressConditionOutput) ToDeliveryRuleRemoteAddressConditionOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RemoteAddress'.
func (o DeliveryRuleRemoteAddressConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRemoteAddressConditionOutput) Parameters() RemoteAddressMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressCondition) RemoteAddressMatchConditionParameters { return v.Parameters }).(RemoteAddressMatchConditionParametersOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRemoteAddressConditionResponse
func (val *DeliveryRuleRemoteAddressConditionResponse) Defaults() *DeliveryRuleRemoteAddressConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRemoteAddressConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRemoteAddressConditionResponseOutput) ToDeliveryRuleRemoteAddressConditionResponseOutput() DeliveryRuleRemoteAddressConditionResponseOutput {
	return o
}

func (o DeliveryRuleRemoteAddressConditionResponseOutput) ToDeliveryRuleRemoteAddressConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RemoteAddress'.
func (o DeliveryRuleRemoteAddressConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRemoteAddressConditionResponseOutput) Parameters() RemoteAddressMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionResponse) RemoteAddressMatchConditionParametersResponse {
		return v.Parameters
	}).(RemoteAddressMatchConditionParametersResponseOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestBodyCondition
func (val *DeliveryRuleRequestBodyCondition) Defaults() *DeliveryRuleRequestBodyCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleRequestBodyConditionInput is an input type that accepts DeliveryRuleRequestBodyConditionArgs and DeliveryRuleRequestBodyConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestBodyConditionInput` via:
//
//	DeliveryRuleRequestBodyConditionArgs{...}
type DeliveryRuleRequestBodyConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput
	ToDeliveryRuleRequestBodyConditionOutputWithContext(context.Context) DeliveryRuleRequestBodyConditionOutput
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestBodyConditionArgs
func (val *DeliveryRuleRequestBodyConditionArgs) Defaults() *DeliveryRuleRequestBodyConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleRequestBodyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestBodyConditionArgs) ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput {
	return i.ToDeliveryRuleRequestBodyConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestBodyConditionArgs) ToDeliveryRuleRequestBodyConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestBodyConditionOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestBodyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestBodyConditionOutput) ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput {
	return o
}

func (o DeliveryRuleRequestBodyConditionOutput) ToDeliveryRuleRequestBodyConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestBody'.
func (o DeliveryRuleRequestBodyConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestBodyConditionOutput) Parameters() RequestBodyMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyCondition) RequestBodyMatchConditionParameters { return v.Parameters }).(RequestBodyMatchConditionParametersOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestBodyConditionResponse
func (val *DeliveryRuleRequestBodyConditionResponse) Defaults() *DeliveryRuleRequestBodyConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestBodyConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestBodyConditionResponseOutput) ToDeliveryRuleRequestBodyConditionResponseOutput() DeliveryRuleRequestBodyConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestBodyConditionResponseOutput) ToDeliveryRuleRequestBodyConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestBody'.
func (o DeliveryRuleRequestBodyConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestBodyConditionResponseOutput) Parameters() RequestBodyMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionResponse) RequestBodyMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestBodyMatchConditionParametersResponseOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderActionInput is an input type that accepts DeliveryRuleRequestHeaderActionArgs and DeliveryRuleRequestHeaderActionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderActionInput` via:
//
//	DeliveryRuleRequestHeaderActionArgs{...}
type DeliveryRuleRequestHeaderActionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput
	ToDeliveryRuleRequestHeaderActionOutputWithContext(context.Context) DeliveryRuleRequestHeaderActionOutput
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderAction)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderActionArgs) ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput {
	return i.ToDeliveryRuleRequestHeaderActionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderActionArgs) ToDeliveryRuleRequestHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderActionOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderAction)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderActionOutput) ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput {
	return o
}

func (o DeliveryRuleRequestHeaderActionOutput) ToDeliveryRuleRequestHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyRequestHeader'.
func (o DeliveryRuleRequestHeaderActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRequestHeaderActionOutput) Parameters() HeaderActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderAction) HeaderActionParameters { return v.Parameters }).(HeaderActionParametersOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderActionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderActionResponseOutput) ToDeliveryRuleRequestHeaderActionResponseOutput() DeliveryRuleRequestHeaderActionResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderActionResponseOutput) ToDeliveryRuleRequestHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyRequestHeader'.
func (o DeliveryRuleRequestHeaderActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRequestHeaderActionResponseOutput) Parameters() HeaderActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionResponse) HeaderActionParametersResponse { return v.Parameters }).(HeaderActionParametersResponseOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestHeaderCondition
func (val *DeliveryRuleRequestHeaderCondition) Defaults() *DeliveryRuleRequestHeaderCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleRequestHeaderConditionInput is an input type that accepts DeliveryRuleRequestHeaderConditionArgs and DeliveryRuleRequestHeaderConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderConditionInput` via:
//
//	DeliveryRuleRequestHeaderConditionArgs{...}
type DeliveryRuleRequestHeaderConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput
	ToDeliveryRuleRequestHeaderConditionOutputWithContext(context.Context) DeliveryRuleRequestHeaderConditionOutput
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestHeaderConditionArgs
func (val *DeliveryRuleRequestHeaderConditionArgs) Defaults() *DeliveryRuleRequestHeaderConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleRequestHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderConditionArgs) ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput {
	return i.ToDeliveryRuleRequestHeaderConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderConditionArgs) ToDeliveryRuleRequestHeaderConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderConditionOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderConditionOutput) ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput {
	return o
}

func (o DeliveryRuleRequestHeaderConditionOutput) ToDeliveryRuleRequestHeaderConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestHeader'.
func (o DeliveryRuleRequestHeaderConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestHeaderConditionOutput) Parameters() RequestHeaderMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderCondition) RequestHeaderMatchConditionParameters { return v.Parameters }).(RequestHeaderMatchConditionParametersOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestHeaderConditionResponse
func (val *DeliveryRuleRequestHeaderConditionResponse) Defaults() *DeliveryRuleRequestHeaderConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderConditionResponseOutput) ToDeliveryRuleRequestHeaderConditionResponseOutput() DeliveryRuleRequestHeaderConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderConditionResponseOutput) ToDeliveryRuleRequestHeaderConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestHeader'.
func (o DeliveryRuleRequestHeaderConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestHeaderConditionResponseOutput) Parameters() RequestHeaderMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionResponse) RequestHeaderMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestHeaderMatchConditionParametersResponseOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestMethodCondition
func (val *DeliveryRuleRequestMethodCondition) Defaults() *DeliveryRuleRequestMethodCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleRequestMethodConditionInput is an input type that accepts DeliveryRuleRequestMethodConditionArgs and DeliveryRuleRequestMethodConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestMethodConditionInput` via:
//
//	DeliveryRuleRequestMethodConditionArgs{...}
type DeliveryRuleRequestMethodConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput
	ToDeliveryRuleRequestMethodConditionOutputWithContext(context.Context) DeliveryRuleRequestMethodConditionOutput
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestMethodConditionArgs
func (val *DeliveryRuleRequestMethodConditionArgs) Defaults() *DeliveryRuleRequestMethodConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleRequestMethodConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestMethodConditionArgs) ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput {
	return i.ToDeliveryRuleRequestMethodConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestMethodConditionArgs) ToDeliveryRuleRequestMethodConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestMethodConditionOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestMethodConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestMethodConditionOutput) ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput {
	return o
}

func (o DeliveryRuleRequestMethodConditionOutput) ToDeliveryRuleRequestMethodConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestMethod'.
func (o DeliveryRuleRequestMethodConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestMethodConditionOutput) Parameters() RequestMethodMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodCondition) RequestMethodMatchConditionParameters { return v.Parameters }).(RequestMethodMatchConditionParametersOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestMethodConditionResponse
func (val *DeliveryRuleRequestMethodConditionResponse) Defaults() *DeliveryRuleRequestMethodConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestMethodConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestMethodConditionResponseOutput) ToDeliveryRuleRequestMethodConditionResponseOutput() DeliveryRuleRequestMethodConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestMethodConditionResponseOutput) ToDeliveryRuleRequestMethodConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestMethod'.
func (o DeliveryRuleRequestMethodConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestMethodConditionResponseOutput) Parameters() RequestMethodMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionResponse) RequestMethodMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestMethodMatchConditionParametersResponseOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestSchemeCondition
func (val *DeliveryRuleRequestSchemeCondition) Defaults() *DeliveryRuleRequestSchemeCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleRequestSchemeConditionInput is an input type that accepts DeliveryRuleRequestSchemeConditionArgs and DeliveryRuleRequestSchemeConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestSchemeConditionInput` via:
//
//	DeliveryRuleRequestSchemeConditionArgs{...}
type DeliveryRuleRequestSchemeConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput
	ToDeliveryRuleRequestSchemeConditionOutputWithContext(context.Context) DeliveryRuleRequestSchemeConditionOutput
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestSchemeConditionArgs
func (val *DeliveryRuleRequestSchemeConditionArgs) Defaults() *DeliveryRuleRequestSchemeConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleRequestSchemeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestSchemeConditionArgs) ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput {
	return i.ToDeliveryRuleRequestSchemeConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestSchemeConditionArgs) ToDeliveryRuleRequestSchemeConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestSchemeConditionOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestSchemeConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestSchemeConditionOutput) ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput {
	return o
}

func (o DeliveryRuleRequestSchemeConditionOutput) ToDeliveryRuleRequestSchemeConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestScheme'.
func (o DeliveryRuleRequestSchemeConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestSchemeConditionOutput) Parameters() RequestSchemeMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeCondition) RequestSchemeMatchConditionParameters { return v.Parameters }).(RequestSchemeMatchConditionParametersOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestSchemeConditionResponse
func (val *DeliveryRuleRequestSchemeConditionResponse) Defaults() *DeliveryRuleRequestSchemeConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestSchemeConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestSchemeConditionResponseOutput) ToDeliveryRuleRequestSchemeConditionResponseOutput() DeliveryRuleRequestSchemeConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestSchemeConditionResponseOutput) ToDeliveryRuleRequestSchemeConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestScheme'.
func (o DeliveryRuleRequestSchemeConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestSchemeConditionResponseOutput) Parameters() RequestSchemeMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionResponse) RequestSchemeMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestSchemeMatchConditionParametersResponseOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestUriCondition
func (val *DeliveryRuleRequestUriCondition) Defaults() *DeliveryRuleRequestUriCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleRequestUriConditionInput is an input type that accepts DeliveryRuleRequestUriConditionArgs and DeliveryRuleRequestUriConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestUriConditionInput` via:
//
//	DeliveryRuleRequestUriConditionArgs{...}
type DeliveryRuleRequestUriConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput
	ToDeliveryRuleRequestUriConditionOutputWithContext(context.Context) DeliveryRuleRequestUriConditionOutput
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestUriConditionArgs
func (val *DeliveryRuleRequestUriConditionArgs) Defaults() *DeliveryRuleRequestUriConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleRequestUriConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestUriConditionArgs) ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput {
	return i.ToDeliveryRuleRequestUriConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestUriConditionArgs) ToDeliveryRuleRequestUriConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestUriConditionOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestUriConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestUriConditionOutput) ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput {
	return o
}

func (o DeliveryRuleRequestUriConditionOutput) ToDeliveryRuleRequestUriConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestUri'.
func (o DeliveryRuleRequestUriConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestUriConditionOutput) Parameters() RequestUriMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriCondition) RequestUriMatchConditionParameters { return v.Parameters }).(RequestUriMatchConditionParametersOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleRequestUriConditionResponse
func (val *DeliveryRuleRequestUriConditionResponse) Defaults() *DeliveryRuleRequestUriConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestUriConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestUriConditionResponseOutput) ToDeliveryRuleRequestUriConditionResponseOutput() DeliveryRuleRequestUriConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestUriConditionResponseOutput) ToDeliveryRuleRequestUriConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestUri'.
func (o DeliveryRuleRequestUriConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestUriConditionResponseOutput) Parameters() RequestUriMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionResponse) RequestUriMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestUriMatchConditionParametersResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return o
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleResponseOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleResponse {
		return vs[0].([]DeliveryRuleResponse)[vs[1].(int)]
	}).(DeliveryRuleResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// DeliveryRuleResponseHeaderActionInput is an input type that accepts DeliveryRuleResponseHeaderActionArgs and DeliveryRuleResponseHeaderActionOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseHeaderActionInput` via:
//
//	DeliveryRuleResponseHeaderActionArgs{...}
type DeliveryRuleResponseHeaderActionInput interface {
	pulumi.Input

	ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput
	ToDeliveryRuleResponseHeaderActionOutputWithContext(context.Context) DeliveryRuleResponseHeaderActionOutput
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleResponseHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderAction)(nil)).Elem()
}

func (i DeliveryRuleResponseHeaderActionArgs) ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput {
	return i.ToDeliveryRuleResponseHeaderActionOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseHeaderActionArgs) ToDeliveryRuleResponseHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseHeaderActionOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseHeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderAction)(nil)).Elem()
}

func (o DeliveryRuleResponseHeaderActionOutput) ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput {
	return o
}

func (o DeliveryRuleResponseHeaderActionOutput) ToDeliveryRuleResponseHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyResponseHeader'.
func (o DeliveryRuleResponseHeaderActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleResponseHeaderActionOutput) Parameters() HeaderActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderAction) HeaderActionParameters { return v.Parameters }).(HeaderActionParametersOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderActionResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseHeaderActionResponseOutput) ToDeliveryRuleResponseHeaderActionResponseOutput() DeliveryRuleResponseHeaderActionResponseOutput {
	return o
}

func (o DeliveryRuleResponseHeaderActionResponseOutput) ToDeliveryRuleResponseHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyResponseHeader'.
func (o DeliveryRuleResponseHeaderActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleResponseHeaderActionResponseOutput) Parameters() HeaderActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionResponse) HeaderActionParametersResponse { return v.Parameters }).(HeaderActionParametersResponseOutput)
}

// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
type DeliveryRuleRouteConfigurationOverrideAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'RouteConfigurationOverride'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters RouteConfigurationOverrideActionParameters `pulumi:"parameters"`
}

// DeliveryRuleRouteConfigurationOverrideActionInput is an input type that accepts DeliveryRuleRouteConfigurationOverrideActionArgs and DeliveryRuleRouteConfigurationOverrideActionOutput values.
// You can construct a concrete instance of `DeliveryRuleRouteConfigurationOverrideActionInput` via:
//
//	DeliveryRuleRouteConfigurationOverrideActionArgs{...}
type DeliveryRuleRouteConfigurationOverrideActionInput interface {
	pulumi.Input

	ToDeliveryRuleRouteConfigurationOverrideActionOutput() DeliveryRuleRouteConfigurationOverrideActionOutput
	ToDeliveryRuleRouteConfigurationOverrideActionOutputWithContext(context.Context) DeliveryRuleRouteConfigurationOverrideActionOutput
}

// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
type DeliveryRuleRouteConfigurationOverrideActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'RouteConfigurationOverride'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters RouteConfigurationOverrideActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRouteConfigurationOverrideActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRouteConfigurationOverrideAction)(nil)).Elem()
}

func (i DeliveryRuleRouteConfigurationOverrideActionArgs) ToDeliveryRuleRouteConfigurationOverrideActionOutput() DeliveryRuleRouteConfigurationOverrideActionOutput {
	return i.ToDeliveryRuleRouteConfigurationOverrideActionOutputWithContext(context.Background())
}

func (i DeliveryRuleRouteConfigurationOverrideActionArgs) ToDeliveryRuleRouteConfigurationOverrideActionOutputWithContext(ctx context.Context) DeliveryRuleRouteConfigurationOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRouteConfigurationOverrideActionOutput)
}

// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
type DeliveryRuleRouteConfigurationOverrideActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRouteConfigurationOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRouteConfigurationOverrideAction)(nil)).Elem()
}

func (o DeliveryRuleRouteConfigurationOverrideActionOutput) ToDeliveryRuleRouteConfigurationOverrideActionOutput() DeliveryRuleRouteConfigurationOverrideActionOutput {
	return o
}

func (o DeliveryRuleRouteConfigurationOverrideActionOutput) ToDeliveryRuleRouteConfigurationOverrideActionOutputWithContext(ctx context.Context) DeliveryRuleRouteConfigurationOverrideActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'RouteConfigurationOverride'.
func (o DeliveryRuleRouteConfigurationOverrideActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRouteConfigurationOverrideAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRouteConfigurationOverrideActionOutput) Parameters() RouteConfigurationOverrideActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRouteConfigurationOverrideAction) RouteConfigurationOverrideActionParameters {
		return v.Parameters
	}).(RouteConfigurationOverrideActionParametersOutput)
}

// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
type DeliveryRuleRouteConfigurationOverrideActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'RouteConfigurationOverride'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters RouteConfigurationOverrideActionParametersResponse `pulumi:"parameters"`
}

// Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.
type DeliveryRuleRouteConfigurationOverrideActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRouteConfigurationOverrideActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRouteConfigurationOverrideActionResponse)(nil)).Elem()
}

func (o DeliveryRuleRouteConfigurationOverrideActionResponseOutput) ToDeliveryRuleRouteConfigurationOverrideActionResponseOutput() DeliveryRuleRouteConfigurationOverrideActionResponseOutput {
	return o
}

func (o DeliveryRuleRouteConfigurationOverrideActionResponseOutput) ToDeliveryRuleRouteConfigurationOverrideActionResponseOutputWithContext(ctx context.Context) DeliveryRuleRouteConfigurationOverrideActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'RouteConfigurationOverride'.
func (o DeliveryRuleRouteConfigurationOverrideActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRouteConfigurationOverrideActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRouteConfigurationOverrideActionResponseOutput) Parameters() RouteConfigurationOverrideActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRouteConfigurationOverrideActionResponse) RouteConfigurationOverrideActionParametersResponse {
		return v.Parameters
	}).(RouteConfigurationOverrideActionParametersResponseOutput)
}

// Defines the ServerPort condition for the delivery rule.
type DeliveryRuleServerPortCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'ServerPort'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters ServerPortMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleServerPortCondition
func (val *DeliveryRuleServerPortCondition) Defaults() *DeliveryRuleServerPortCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleServerPortConditionInput is an input type that accepts DeliveryRuleServerPortConditionArgs and DeliveryRuleServerPortConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleServerPortConditionInput` via:
//
//	DeliveryRuleServerPortConditionArgs{...}
type DeliveryRuleServerPortConditionInput interface {
	pulumi.Input

	ToDeliveryRuleServerPortConditionOutput() DeliveryRuleServerPortConditionOutput
	ToDeliveryRuleServerPortConditionOutputWithContext(context.Context) DeliveryRuleServerPortConditionOutput
}

// Defines the ServerPort condition for the delivery rule.
type DeliveryRuleServerPortConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'ServerPort'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters ServerPortMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleServerPortConditionArgs
func (val *DeliveryRuleServerPortConditionArgs) Defaults() *DeliveryRuleServerPortConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleServerPortConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleServerPortCondition)(nil)).Elem()
}

func (i DeliveryRuleServerPortConditionArgs) ToDeliveryRuleServerPortConditionOutput() DeliveryRuleServerPortConditionOutput {
	return i.ToDeliveryRuleServerPortConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleServerPortConditionArgs) ToDeliveryRuleServerPortConditionOutputWithContext(ctx context.Context) DeliveryRuleServerPortConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleServerPortConditionOutput)
}

// Defines the ServerPort condition for the delivery rule.
type DeliveryRuleServerPortConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleServerPortConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleServerPortCondition)(nil)).Elem()
}

func (o DeliveryRuleServerPortConditionOutput) ToDeliveryRuleServerPortConditionOutput() DeliveryRuleServerPortConditionOutput {
	return o
}

func (o DeliveryRuleServerPortConditionOutput) ToDeliveryRuleServerPortConditionOutputWithContext(ctx context.Context) DeliveryRuleServerPortConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'ServerPort'.
func (o DeliveryRuleServerPortConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleServerPortCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleServerPortConditionOutput) Parameters() ServerPortMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleServerPortCondition) ServerPortMatchConditionParameters { return v.Parameters }).(ServerPortMatchConditionParametersOutput)
}

// Defines the ServerPort condition for the delivery rule.
type DeliveryRuleServerPortConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'ServerPort'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters ServerPortMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleServerPortConditionResponse
func (val *DeliveryRuleServerPortConditionResponse) Defaults() *DeliveryRuleServerPortConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the ServerPort condition for the delivery rule.
type DeliveryRuleServerPortConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleServerPortConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleServerPortConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleServerPortConditionResponseOutput) ToDeliveryRuleServerPortConditionResponseOutput() DeliveryRuleServerPortConditionResponseOutput {
	return o
}

func (o DeliveryRuleServerPortConditionResponseOutput) ToDeliveryRuleServerPortConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleServerPortConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'ServerPort'.
func (o DeliveryRuleServerPortConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleServerPortConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleServerPortConditionResponseOutput) Parameters() ServerPortMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleServerPortConditionResponse) ServerPortMatchConditionParametersResponse {
		return v.Parameters
	}).(ServerPortMatchConditionParametersResponseOutput)
}

// Defines the SocketAddress condition for the delivery rule.
type DeliveryRuleSocketAddrCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'SocketAddr'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters SocketAddrMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleSocketAddrCondition
func (val *DeliveryRuleSocketAddrCondition) Defaults() *DeliveryRuleSocketAddrCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleSocketAddrConditionInput is an input type that accepts DeliveryRuleSocketAddrConditionArgs and DeliveryRuleSocketAddrConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleSocketAddrConditionInput` via:
//
//	DeliveryRuleSocketAddrConditionArgs{...}
type DeliveryRuleSocketAddrConditionInput interface {
	pulumi.Input

	ToDeliveryRuleSocketAddrConditionOutput() DeliveryRuleSocketAddrConditionOutput
	ToDeliveryRuleSocketAddrConditionOutputWithContext(context.Context) DeliveryRuleSocketAddrConditionOutput
}

// Defines the SocketAddress condition for the delivery rule.
type DeliveryRuleSocketAddrConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'SocketAddr'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters SocketAddrMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleSocketAddrConditionArgs
func (val *DeliveryRuleSocketAddrConditionArgs) Defaults() *DeliveryRuleSocketAddrConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleSocketAddrConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleSocketAddrCondition)(nil)).Elem()
}

func (i DeliveryRuleSocketAddrConditionArgs) ToDeliveryRuleSocketAddrConditionOutput() DeliveryRuleSocketAddrConditionOutput {
	return i.ToDeliveryRuleSocketAddrConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleSocketAddrConditionArgs) ToDeliveryRuleSocketAddrConditionOutputWithContext(ctx context.Context) DeliveryRuleSocketAddrConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleSocketAddrConditionOutput)
}

// Defines the SocketAddress condition for the delivery rule.
type DeliveryRuleSocketAddrConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleSocketAddrConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleSocketAddrCondition)(nil)).Elem()
}

func (o DeliveryRuleSocketAddrConditionOutput) ToDeliveryRuleSocketAddrConditionOutput() DeliveryRuleSocketAddrConditionOutput {
	return o
}

func (o DeliveryRuleSocketAddrConditionOutput) ToDeliveryRuleSocketAddrConditionOutputWithContext(ctx context.Context) DeliveryRuleSocketAddrConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'SocketAddr'.
func (o DeliveryRuleSocketAddrConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleSocketAddrCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleSocketAddrConditionOutput) Parameters() SocketAddrMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleSocketAddrCondition) SocketAddrMatchConditionParameters { return v.Parameters }).(SocketAddrMatchConditionParametersOutput)
}

// Defines the SocketAddress condition for the delivery rule.
type DeliveryRuleSocketAddrConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'SocketAddr'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters SocketAddrMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleSocketAddrConditionResponse
func (val *DeliveryRuleSocketAddrConditionResponse) Defaults() *DeliveryRuleSocketAddrConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the SocketAddress condition for the delivery rule.
type DeliveryRuleSocketAddrConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleSocketAddrConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleSocketAddrConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleSocketAddrConditionResponseOutput) ToDeliveryRuleSocketAddrConditionResponseOutput() DeliveryRuleSocketAddrConditionResponseOutput {
	return o
}

func (o DeliveryRuleSocketAddrConditionResponseOutput) ToDeliveryRuleSocketAddrConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleSocketAddrConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'SocketAddr'.
func (o DeliveryRuleSocketAddrConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleSocketAddrConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleSocketAddrConditionResponseOutput) Parameters() SocketAddrMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleSocketAddrConditionResponse) SocketAddrMatchConditionParametersResponse {
		return v.Parameters
	}).(SocketAddrMatchConditionParametersResponseOutput)
}

// Defines the SslProtocol condition for the delivery rule.
type DeliveryRuleSslProtocolCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'SslProtocol'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters SslProtocolMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleSslProtocolCondition
func (val *DeliveryRuleSslProtocolCondition) Defaults() *DeliveryRuleSslProtocolCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleSslProtocolConditionInput is an input type that accepts DeliveryRuleSslProtocolConditionArgs and DeliveryRuleSslProtocolConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleSslProtocolConditionInput` via:
//
//	DeliveryRuleSslProtocolConditionArgs{...}
type DeliveryRuleSslProtocolConditionInput interface {
	pulumi.Input

	ToDeliveryRuleSslProtocolConditionOutput() DeliveryRuleSslProtocolConditionOutput
	ToDeliveryRuleSslProtocolConditionOutputWithContext(context.Context) DeliveryRuleSslProtocolConditionOutput
}

// Defines the SslProtocol condition for the delivery rule.
type DeliveryRuleSslProtocolConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'SslProtocol'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters SslProtocolMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleSslProtocolConditionArgs
func (val *DeliveryRuleSslProtocolConditionArgs) Defaults() *DeliveryRuleSslProtocolConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleSslProtocolConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleSslProtocolCondition)(nil)).Elem()
}

func (i DeliveryRuleSslProtocolConditionArgs) ToDeliveryRuleSslProtocolConditionOutput() DeliveryRuleSslProtocolConditionOutput {
	return i.ToDeliveryRuleSslProtocolConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleSslProtocolConditionArgs) ToDeliveryRuleSslProtocolConditionOutputWithContext(ctx context.Context) DeliveryRuleSslProtocolConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleSslProtocolConditionOutput)
}

// Defines the SslProtocol condition for the delivery rule.
type DeliveryRuleSslProtocolConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleSslProtocolConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleSslProtocolCondition)(nil)).Elem()
}

func (o DeliveryRuleSslProtocolConditionOutput) ToDeliveryRuleSslProtocolConditionOutput() DeliveryRuleSslProtocolConditionOutput {
	return o
}

func (o DeliveryRuleSslProtocolConditionOutput) ToDeliveryRuleSslProtocolConditionOutputWithContext(ctx context.Context) DeliveryRuleSslProtocolConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'SslProtocol'.
func (o DeliveryRuleSslProtocolConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleSslProtocolCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleSslProtocolConditionOutput) Parameters() SslProtocolMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleSslProtocolCondition) SslProtocolMatchConditionParameters { return v.Parameters }).(SslProtocolMatchConditionParametersOutput)
}

// Defines the SslProtocol condition for the delivery rule.
type DeliveryRuleSslProtocolConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'SslProtocol'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters SslProtocolMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleSslProtocolConditionResponse
func (val *DeliveryRuleSslProtocolConditionResponse) Defaults() *DeliveryRuleSslProtocolConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the SslProtocol condition for the delivery rule.
type DeliveryRuleSslProtocolConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleSslProtocolConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleSslProtocolConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleSslProtocolConditionResponseOutput) ToDeliveryRuleSslProtocolConditionResponseOutput() DeliveryRuleSslProtocolConditionResponseOutput {
	return o
}

func (o DeliveryRuleSslProtocolConditionResponseOutput) ToDeliveryRuleSslProtocolConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleSslProtocolConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'SslProtocol'.
func (o DeliveryRuleSslProtocolConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleSslProtocolConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleSslProtocolConditionResponseOutput) Parameters() SslProtocolMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleSslProtocolConditionResponse) SslProtocolMatchConditionParametersResponse {
		return v.Parameters
	}).(SslProtocolMatchConditionParametersResponseOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlFileExtensionCondition
func (val *DeliveryRuleUrlFileExtensionCondition) Defaults() *DeliveryRuleUrlFileExtensionCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleUrlFileExtensionConditionInput is an input type that accepts DeliveryRuleUrlFileExtensionConditionArgs and DeliveryRuleUrlFileExtensionConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileExtensionConditionInput` via:
//
//	DeliveryRuleUrlFileExtensionConditionArgs{...}
type DeliveryRuleUrlFileExtensionConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput
	ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(context.Context) DeliveryRuleUrlFileExtensionConditionOutput
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlFileExtensionConditionArgs
func (val *DeliveryRuleUrlFileExtensionConditionArgs) Defaults() *DeliveryRuleUrlFileExtensionConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleUrlFileExtensionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlFileExtensionConditionArgs) ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput {
	return i.ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileExtensionConditionArgs) ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileExtensionConditionOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileExtensionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionCondition)(nil)).Elem()
}

func (o DeliveryRuleUrlFileExtensionConditionOutput) ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput {
	return o
}

func (o DeliveryRuleUrlFileExtensionConditionOutput) ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileExtension'.
func (o DeliveryRuleUrlFileExtensionConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileExtensionConditionOutput) Parameters() UrlFileExtensionMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionCondition) UrlFileExtensionMatchConditionParameters {
		return v.Parameters
	}).(UrlFileExtensionMatchConditionParametersOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlFileExtensionConditionResponse
func (val *DeliveryRuleUrlFileExtensionConditionResponse) Defaults() *DeliveryRuleUrlFileExtensionConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileExtensionConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) ToDeliveryRuleUrlFileExtensionConditionResponseOutput() DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) ToDeliveryRuleUrlFileExtensionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileExtension'.
func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) Parameters() UrlFileExtensionMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionResponse) UrlFileExtensionMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlFileExtensionMatchConditionParametersResponseOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlFileNameCondition
func (val *DeliveryRuleUrlFileNameCondition) Defaults() *DeliveryRuleUrlFileNameCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleUrlFileNameConditionInput is an input type that accepts DeliveryRuleUrlFileNameConditionArgs and DeliveryRuleUrlFileNameConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileNameConditionInput` via:
//
//	DeliveryRuleUrlFileNameConditionArgs{...}
type DeliveryRuleUrlFileNameConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput
	ToDeliveryRuleUrlFileNameConditionOutputWithContext(context.Context) DeliveryRuleUrlFileNameConditionOutput
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlFileNameConditionArgs
func (val *DeliveryRuleUrlFileNameConditionArgs) Defaults() *DeliveryRuleUrlFileNameConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleUrlFileNameConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlFileNameConditionArgs) ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput {
	return i.ToDeliveryRuleUrlFileNameConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileNameConditionArgs) ToDeliveryRuleUrlFileNameConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileNameConditionOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileNameConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameCondition)(nil)).Elem()
}

func (o DeliveryRuleUrlFileNameConditionOutput) ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput {
	return o
}

func (o DeliveryRuleUrlFileNameConditionOutput) ToDeliveryRuleUrlFileNameConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileName'.
func (o DeliveryRuleUrlFileNameConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileNameConditionOutput) Parameters() UrlFileNameMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameCondition) UrlFileNameMatchConditionParameters { return v.Parameters }).(UrlFileNameMatchConditionParametersOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlFileNameConditionResponse
func (val *DeliveryRuleUrlFileNameConditionResponse) Defaults() *DeliveryRuleUrlFileNameConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileNameConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileNameConditionResponseOutput) ToDeliveryRuleUrlFileNameConditionResponseOutput() DeliveryRuleUrlFileNameConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileNameConditionResponseOutput) ToDeliveryRuleUrlFileNameConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileName'.
func (o DeliveryRuleUrlFileNameConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileNameConditionResponseOutput) Parameters() UrlFileNameMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionResponse) UrlFileNameMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlFileNameMatchConditionParametersResponseOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParameters `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlPathCondition
func (val *DeliveryRuleUrlPathCondition) Defaults() *DeliveryRuleUrlPathCondition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// DeliveryRuleUrlPathConditionInput is an input type that accepts DeliveryRuleUrlPathConditionArgs and DeliveryRuleUrlPathConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlPathConditionInput` via:
//
//	DeliveryRuleUrlPathConditionArgs{...}
type DeliveryRuleUrlPathConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput
	ToDeliveryRuleUrlPathConditionOutputWithContext(context.Context) DeliveryRuleUrlPathConditionOutput
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersInput `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlPathConditionArgs
func (val *DeliveryRuleUrlPathConditionArgs) Defaults() *DeliveryRuleUrlPathConditionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeliveryRuleUrlPathConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlPathConditionArgs) ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput {
	return i.ToDeliveryRuleUrlPathConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlPathConditionArgs) ToDeliveryRuleUrlPathConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlPathConditionOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlPathConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathCondition)(nil)).Elem()
}

func (o DeliveryRuleUrlPathConditionOutput) ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput {
	return o
}

func (o DeliveryRuleUrlPathConditionOutput) ToDeliveryRuleUrlPathConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlPath'.
func (o DeliveryRuleUrlPathConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlPathConditionOutput) Parameters() UrlPathMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathCondition) UrlPathMatchConditionParameters { return v.Parameters }).(UrlPathMatchConditionParametersOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defaults sets the appropriate defaults for DeliveryRuleUrlPathConditionResponse
func (val *DeliveryRuleUrlPathConditionResponse) Defaults() *DeliveryRuleUrlPathConditionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Parameters = *tmp.Parameters.Defaults()

	return &tmp
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlPathConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlPathConditionResponseOutput) ToDeliveryRuleUrlPathConditionResponseOutput() DeliveryRuleUrlPathConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlPathConditionResponseOutput) ToDeliveryRuleUrlPathConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlPath'.
func (o DeliveryRuleUrlPathConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlPathConditionResponseOutput) Parameters() UrlPathMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionResponse) UrlPathMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlPathMatchConditionParametersResponseOutput)
}

// The JSON object that contains the properties to validate a domain.
type DomainValidationPropertiesResponse struct {
	// The date time that the token expires
	ExpirationDate string `pulumi:"expirationDate"`
	// Challenge used for DNS TXT record or file based validation
	ValidationToken string `pulumi:"validationToken"`
}

// The JSON object that contains the properties to validate a domain.
type DomainValidationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DomainValidationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainValidationPropertiesResponse)(nil)).Elem()
}

func (o DomainValidationPropertiesResponseOutput) ToDomainValidationPropertiesResponseOutput() DomainValidationPropertiesResponseOutput {
	return o
}

func (o DomainValidationPropertiesResponseOutput) ToDomainValidationPropertiesResponseOutputWithContext(ctx context.Context) DomainValidationPropertiesResponseOutput {
	return o
}

// The date time that the token expires
func (o DomainValidationPropertiesResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v DomainValidationPropertiesResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Challenge used for DNS TXT record or file based validation
func (o DomainValidationPropertiesResponseOutput) ValidationToken() pulumi.StringOutput {
	return o.ApplyT(func(v DomainValidationPropertiesResponse) string { return v.ValidationToken }).(pulumi.StringOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRule `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs and EndpointPropertiesUpdateParametersDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyInput` via:
//
//	EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs, EndpointPropertiesUpdateParametersDeliveryPolicyPtr and EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput` via:
//
//	        EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
//
//	or:
//
//	        nil
type EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersDeliveryPolicyPtrType EndpointPropertiesUpdateParametersDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersDeliveryPolicyArgs) EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPropertiesUpdateParametersDeliveryPolicy) *EndpointPropertiesUpdateParametersDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule { return v.Rules }).(DeliveryRuleArrayOutput)
}

type EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) EndpointPropertiesUpdateParametersDeliveryPolicy {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersDeliveryPolicy
		return ret
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleResponse `pulumi:"rules"`
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersResponseDeliveryPolicy
		return ret
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink
		return ret
	}).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//	EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs, EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//	        EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//	or:
//
//	        nil
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs

func EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink
		return ret
	}).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActions `pulumi:"action"`
	// Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//	GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActionsInput `pulumi:"action"`
	// Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//	GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterOutput struct{ *pulumi.OutputState }

func (GeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (o GeoFilterOutput) ToGeoFilterOutput() GeoFilterOutput {
	return o
}

func (o GeoFilterOutput) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterOutput) Action() GeoFilterActionsOutput {
	return o.ApplyT(func(v GeoFilter) GeoFilterActions { return v.Action }).(GeoFilterActionsOutput)
}

// Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) Index(i pulumi.IntInput) GeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilter {
		return vs[0].([]GeoFilter)[vs[1].(int)]
	}).(GeoFilterOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParameters struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	TypeName   string `pulumi:"typeName"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// HeaderActionParametersInput is an input type that accepts HeaderActionParametersArgs and HeaderActionParametersOutput values.
// You can construct a concrete instance of `HeaderActionParametersInput` via:
//
//	HeaderActionParametersArgs{...}
type HeaderActionParametersInput interface {
	pulumi.Input

	ToHeaderActionParametersOutput() HeaderActionParametersOutput
	ToHeaderActionParametersOutputWithContext(context.Context) HeaderActionParametersOutput
}

// Defines the parameters for the request header action.
type HeaderActionParametersArgs struct {
	// Action to perform
	HeaderAction pulumi.StringInput `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	TypeName   pulumi.StringInput `pulumi:"typeName"`
	// Value for the specified action
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParameters)(nil)).Elem()
}

func (i HeaderActionParametersArgs) ToHeaderActionParametersOutput() HeaderActionParametersOutput {
	return i.ToHeaderActionParametersOutputWithContext(context.Background())
}

func (i HeaderActionParametersArgs) ToHeaderActionParametersOutputWithContext(ctx context.Context) HeaderActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionParametersOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersOutput struct{ *pulumi.OutputState }

func (HeaderActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParameters)(nil)).Elem()
}

func (o HeaderActionParametersOutput) ToHeaderActionParametersOutput() HeaderActionParametersOutput {
	return o
}

func (o HeaderActionParametersOutput) ToHeaderActionParametersOutputWithContext(ctx context.Context) HeaderActionParametersOutput {
	return o
}

// Action to perform
func (o HeaderActionParametersOutput) HeaderAction() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParameters) string { return v.HeaderAction }).(pulumi.StringOutput)
}

// Name of the header to modify
func (o HeaderActionParametersOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParameters) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o HeaderActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Value for the specified action
func (o HeaderActionParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponse struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	TypeName   string `pulumi:"typeName"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponseOutput struct{ *pulumi.OutputState }

func (HeaderActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParametersResponse)(nil)).Elem()
}

func (o HeaderActionParametersResponseOutput) ToHeaderActionParametersResponseOutput() HeaderActionParametersResponseOutput {
	return o
}

func (o HeaderActionParametersResponseOutput) ToHeaderActionParametersResponseOutputWithContext(ctx context.Context) HeaderActionParametersResponseOutput {
	return o
}

// Action to perform
func (o HeaderActionParametersResponseOutput) HeaderAction() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.HeaderAction }).(pulumi.StringOutput)
}

// Name of the header to modify
func (o HeaderActionParametersResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o HeaderActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Value for the specified action
func (o HeaderActionParametersResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParameters struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *ProbeProtocol `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *HealthProbeRequestType `pulumi:"probeRequestType"`
}

// HealthProbeParametersInput is an input type that accepts HealthProbeParametersArgs and HealthProbeParametersOutput values.
// You can construct a concrete instance of `HealthProbeParametersInput` via:
//
//	HealthProbeParametersArgs{...}
type HealthProbeParametersInput interface {
	pulumi.Input

	ToHealthProbeParametersOutput() HealthProbeParametersOutput
	ToHealthProbeParametersOutputWithContext(context.Context) HealthProbeParametersOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol ProbeProtocolPtrInput `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType HealthProbeRequestTypePtrInput `pulumi:"probeRequestType"`
}

func (HealthProbeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return i.ToHealthProbeParametersOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput)
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput).ToHealthProbeParametersPtrOutputWithContext(ctx)
}

// HealthProbeParametersPtrInput is an input type that accepts HealthProbeParametersArgs, HealthProbeParametersPtr and HealthProbeParametersPtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersPtrInput` via:
//
//	        HealthProbeParametersArgs{...}
//
//	or:
//
//	        nil
type HealthProbeParametersPtrInput interface {
	pulumi.Input

	ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput
	ToHealthProbeParametersPtrOutputWithContext(context.Context) HealthProbeParametersPtrOutput
}

type healthProbeParametersPtrType HealthProbeParametersArgs

func HealthProbeParametersPtr(v *HealthProbeParametersArgs) HealthProbeParametersPtrInput {
	return (*healthProbeParametersPtrType)(v)
}

func (*healthProbeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthProbeParameters) *HealthProbeParameters {
		return &v
	}).(HealthProbeParametersPtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersOutput) ProbeProtocol() ProbeProtocolPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *ProbeProtocol { return v.ProbeProtocol }).(ProbeProtocolPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersOutput) ProbeRequestType() HealthProbeRequestTypePtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *HealthProbeRequestType { return v.ProbeRequestType }).(HealthProbeRequestTypePtrOutput)
}

type HealthProbeParametersPtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) Elem() HealthProbeParametersOutput {
	return o.ApplyT(func(v *HealthProbeParameters) HealthProbeParameters {
		if v != nil {
			return *v
		}
		var ret HealthProbeParameters
		return ret
	}).(HealthProbeParametersOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersPtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersPtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersPtrOutput) ProbeProtocol() ProbeProtocolPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *ProbeProtocol {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(ProbeProtocolPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersPtrOutput) ProbeRequestType() HealthProbeRequestTypePtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *HealthProbeRequestType {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(HealthProbeRequestTypePtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponse struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutputWithContext(ctx context.Context) HealthProbeParametersResponseOutput {
	return o
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponseOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponseOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponseOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) Elem() HealthProbeParametersResponseOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) HealthProbeParametersResponse {
		if v != nil {
			return *v
		}
		var ret HealthProbeParametersResponse
		return ret
	}).(HealthProbeParametersResponseOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponsePtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponsePtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponsePtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for HostName match conditions
type HostNameMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for HostNameMatchConditionParameters
func (val *HostNameMatchConditionParameters) Defaults() *HostNameMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// HostNameMatchConditionParametersInput is an input type that accepts HostNameMatchConditionParametersArgs and HostNameMatchConditionParametersOutput values.
// You can construct a concrete instance of `HostNameMatchConditionParametersInput` via:
//
//	HostNameMatchConditionParametersArgs{...}
type HostNameMatchConditionParametersInput interface {
	pulumi.Input

	ToHostNameMatchConditionParametersOutput() HostNameMatchConditionParametersOutput
	ToHostNameMatchConditionParametersOutputWithContext(context.Context) HostNameMatchConditionParametersOutput
}

// Defines the parameters for HostName match conditions
type HostNameMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for HostNameMatchConditionParametersArgs
func (val *HostNameMatchConditionParametersArgs) Defaults() *HostNameMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (HostNameMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameMatchConditionParameters)(nil)).Elem()
}

func (i HostNameMatchConditionParametersArgs) ToHostNameMatchConditionParametersOutput() HostNameMatchConditionParametersOutput {
	return i.ToHostNameMatchConditionParametersOutputWithContext(context.Background())
}

func (i HostNameMatchConditionParametersArgs) ToHostNameMatchConditionParametersOutputWithContext(ctx context.Context) HostNameMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameMatchConditionParametersOutput)
}

// Defines the parameters for HostName match conditions
type HostNameMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (HostNameMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameMatchConditionParameters)(nil)).Elem()
}

func (o HostNameMatchConditionParametersOutput) ToHostNameMatchConditionParametersOutput() HostNameMatchConditionParametersOutput {
	return o
}

func (o HostNameMatchConditionParametersOutput) ToHostNameMatchConditionParametersOutputWithContext(ctx context.Context) HostNameMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HostNameMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostNameMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HostNameMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o HostNameMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o HostNameMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostNameMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o HostNameMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for HostName match conditions
type HostNameMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for HostNameMatchConditionParametersResponse
func (val *HostNameMatchConditionParametersResponse) Defaults() *HostNameMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for HostName match conditions
type HostNameMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (HostNameMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameMatchConditionParametersResponse)(nil)).Elem()
}

func (o HostNameMatchConditionParametersResponseOutput) ToHostNameMatchConditionParametersResponseOutput() HostNameMatchConditionParametersResponseOutput {
	return o
}

func (o HostNameMatchConditionParametersResponseOutput) ToHostNameMatchConditionParametersResponseOutputWithContext(ctx context.Context) HostNameMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HostNameMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostNameMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HostNameMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o HostNameMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o HostNameMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostNameMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o HostNameMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v HostNameMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParameters struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersInput is an input type that accepts HttpErrorRangeParametersArgs and HttpErrorRangeParametersOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInput` via:
//
//	HttpErrorRangeParametersArgs{...}
type HttpErrorRangeParametersInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput
	ToHttpErrorRangeParametersOutputWithContext(context.Context) HttpErrorRangeParametersOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return i.ToHttpErrorRangeParametersOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersOutput)
}

// HttpErrorRangeParametersArrayInput is an input type that accepts HttpErrorRangeParametersArray and HttpErrorRangeParametersArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersArrayInput` via:
//
//	HttpErrorRangeParametersArray{ HttpErrorRangeParametersArgs{...} }
type HttpErrorRangeParametersArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput
	ToHttpErrorRangeParametersArrayOutputWithContext(context.Context) HttpErrorRangeParametersArrayOutput
}

type HttpErrorRangeParametersArray []HttpErrorRangeParametersInput

func (HttpErrorRangeParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return i.ToHttpErrorRangeParametersArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return o
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParameters {
		return vs[0].([]HttpErrorRangeParameters)[vs[1].(int)]
	}).(HttpErrorRangeParametersOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponse struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput {
	return o
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersResponseArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParametersResponse {
		return vs[0].([]HttpErrorRangeParametersResponse)[vs[1].(int)]
	}).(HttpErrorRangeParametersResponseOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for HttpVersionMatchConditionParameters
func (val *HttpVersionMatchConditionParameters) Defaults() *HttpVersionMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// HttpVersionMatchConditionParametersInput is an input type that accepts HttpVersionMatchConditionParametersArgs and HttpVersionMatchConditionParametersOutput values.
// You can construct a concrete instance of `HttpVersionMatchConditionParametersInput` via:
//
//	HttpVersionMatchConditionParametersArgs{...}
type HttpVersionMatchConditionParametersInput interface {
	pulumi.Input

	ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput
	ToHttpVersionMatchConditionParametersOutputWithContext(context.Context) HttpVersionMatchConditionParametersOutput
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for HttpVersionMatchConditionParametersArgs
func (val *HttpVersionMatchConditionParametersArgs) Defaults() *HttpVersionMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (HttpVersionMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParameters)(nil)).Elem()
}

func (i HttpVersionMatchConditionParametersArgs) ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput {
	return i.ToHttpVersionMatchConditionParametersOutputWithContext(context.Background())
}

func (i HttpVersionMatchConditionParametersArgs) ToHttpVersionMatchConditionParametersOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpVersionMatchConditionParametersOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (HttpVersionMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParameters)(nil)).Elem()
}

func (o HttpVersionMatchConditionParametersOutput) ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput {
	return o
}

func (o HttpVersionMatchConditionParametersOutput) ToHttpVersionMatchConditionParametersOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HttpVersionMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HttpVersionMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o HttpVersionMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o HttpVersionMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o HttpVersionMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for HttpVersionMatchConditionParametersResponse
func (val *HttpVersionMatchConditionParametersResponse) Defaults() *HttpVersionMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpVersionMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParametersResponse)(nil)).Elem()
}

func (o HttpVersionMatchConditionParametersResponseOutput) ToHttpVersionMatchConditionParametersResponseOutput() HttpVersionMatchConditionParametersResponseOutput {
	return o
}

func (o HttpVersionMatchConditionParametersResponseOutput) ToHttpVersionMatchConditionParametersResponseOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HttpVersionMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HttpVersionMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o HttpVersionMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o HttpVersionMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o HttpVersionMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for IsDeviceMatchConditionParameters
func (val *IsDeviceMatchConditionParameters) Defaults() *IsDeviceMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// IsDeviceMatchConditionParametersInput is an input type that accepts IsDeviceMatchConditionParametersArgs and IsDeviceMatchConditionParametersOutput values.
// You can construct a concrete instance of `IsDeviceMatchConditionParametersInput` via:
//
//	IsDeviceMatchConditionParametersArgs{...}
type IsDeviceMatchConditionParametersInput interface {
	pulumi.Input

	ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput
	ToIsDeviceMatchConditionParametersOutputWithContext(context.Context) IsDeviceMatchConditionParametersOutput
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for IsDeviceMatchConditionParametersArgs
func (val *IsDeviceMatchConditionParametersArgs) Defaults() *IsDeviceMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (IsDeviceMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParameters)(nil)).Elem()
}

func (i IsDeviceMatchConditionParametersArgs) ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput {
	return i.ToIsDeviceMatchConditionParametersOutputWithContext(context.Background())
}

func (i IsDeviceMatchConditionParametersArgs) ToIsDeviceMatchConditionParametersOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsDeviceMatchConditionParametersOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (IsDeviceMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParameters)(nil)).Elem()
}

func (o IsDeviceMatchConditionParametersOutput) ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput {
	return o
}

func (o IsDeviceMatchConditionParametersOutput) ToIsDeviceMatchConditionParametersOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o IsDeviceMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o IsDeviceMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o IsDeviceMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o IsDeviceMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o IsDeviceMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for IsDeviceMatchConditionParametersResponse
func (val *IsDeviceMatchConditionParametersResponse) Defaults() *IsDeviceMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (IsDeviceMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParametersResponse)(nil)).Elem()
}

func (o IsDeviceMatchConditionParametersResponseOutput) ToIsDeviceMatchConditionParametersResponseOutput() IsDeviceMatchConditionParametersResponseOutput {
	return o
}

func (o IsDeviceMatchConditionParametersResponseOutput) ToIsDeviceMatchConditionParametersResponseOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o IsDeviceMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o IsDeviceMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o IsDeviceMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o IsDeviceMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o IsDeviceMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
type KeyVaultCertificateSourceParametersResponse struct {
	// Describes the action that shall be taken when the certificate is removed from Key Vault.
	DeleteRule string `pulumi:"deleteRule"`
	// Resource group of the user's Key Vault containing the SSL certificate
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of Key Vault Secret in Key Vault.
	SecretVersion *string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the SSL certificate
	SubscriptionId string `pulumi:"subscriptionId"`
	TypeName       string `pulumi:"typeName"`
	// Describes the action that shall be taken when the certificate is updated in Key Vault.
	UpdateRule string `pulumi:"updateRule"`
	// The name of the user's Key Vault containing the SSL certificate
	VaultName string `pulumi:"vaultName"`
}

// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
type KeyVaultCertificateSourceParametersResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificateSourceParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificateSourceParametersResponse)(nil)).Elem()
}

func (o KeyVaultCertificateSourceParametersResponseOutput) ToKeyVaultCertificateSourceParametersResponseOutput() KeyVaultCertificateSourceParametersResponseOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseOutput) ToKeyVaultCertificateSourceParametersResponseOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseOutput {
	return o
}

// Describes the action that shall be taken when the certificate is removed from Key Vault.
func (o KeyVaultCertificateSourceParametersResponseOutput) DeleteRule() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.DeleteRule }).(pulumi.StringOutput)
}

// Resource group of the user's Key Vault containing the SSL certificate
func (o KeyVaultCertificateSourceParametersResponseOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
func (o KeyVaultCertificateSourceParametersResponseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of Key Vault Secret in Key Vault.
func (o KeyVaultCertificateSourceParametersResponseOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// Subscription Id of the user's Key Vault containing the SSL certificate
func (o KeyVaultCertificateSourceParametersResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o KeyVaultCertificateSourceParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Describes the action that shall be taken when the certificate is updated in Key Vault.
func (o KeyVaultCertificateSourceParametersResponseOutput) UpdateRule() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.UpdateRule }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the SSL certificate
func (o KeyVaultCertificateSourceParametersResponseOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponse) string { return v.VaultName }).(pulumi.StringOutput)
}

type KeyVaultCertificateSourceParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificateSourceParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCertificateSourceParametersResponse)(nil)).Elem()
}

func (o KeyVaultCertificateSourceParametersResponsePtrOutput) ToKeyVaultCertificateSourceParametersResponsePtrOutput() KeyVaultCertificateSourceParametersResponsePtrOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponsePtrOutput) ToKeyVaultCertificateSourceParametersResponsePtrOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponsePtrOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponsePtrOutput) Elem() KeyVaultCertificateSourceParametersResponseOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) KeyVaultCertificateSourceParametersResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultCertificateSourceParametersResponse
		return ret
	}).(KeyVaultCertificateSourceParametersResponseOutput)
}

// Describes the action that shall be taken when the certificate is removed from Key Vault.
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) DeleteRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeleteRule
	}).(pulumi.StringPtrOutput)
}

// Resource group of the user's Key Vault containing the SSL certificate
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// The version(GUID) of Key Vault Secret in Key Vault.
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

// Subscription Id of the user's Key Vault containing the SSL certificate
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

func (o KeyVaultCertificateSourceParametersResponsePtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TypeName
	}).(pulumi.StringPtrOutput)
}

// Describes the action that shall be taken when the certificate is updated in Key Vault.
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) UpdateRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateRule
	}).(pulumi.StringPtrOutput)
}

// The name of the user's Key Vault containing the SSL certificate
func (o KeyVaultCertificateSourceParametersResponsePtrOutput) VaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VaultName
	}).(pulumi.StringPtrOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParameters struct {
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	TypeName       string `pulumi:"typeName"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// KeyVaultSigningKeyParametersInput is an input type that accepts KeyVaultSigningKeyParametersArgs and KeyVaultSigningKeyParametersOutput values.
// You can construct a concrete instance of `KeyVaultSigningKeyParametersInput` via:
//
//	KeyVaultSigningKeyParametersArgs{...}
type KeyVaultSigningKeyParametersInput interface {
	pulumi.Input

	ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput
	ToKeyVaultSigningKeyParametersOutputWithContext(context.Context) KeyVaultSigningKeyParametersOutput
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersArgs struct {
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	TypeName       pulumi.StringInput `pulumi:"typeName"`
	// The name of the user's Key Vault containing the secret
	VaultName pulumi.StringInput `pulumi:"vaultName"`
}

func (KeyVaultSigningKeyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParameters)(nil)).Elem()
}

func (i KeyVaultSigningKeyParametersArgs) ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput {
	return i.ToKeyVaultSigningKeyParametersOutputWithContext(context.Background())
}

func (i KeyVaultSigningKeyParametersArgs) ToKeyVaultSigningKeyParametersOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSigningKeyParametersOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersOutput struct{ *pulumi.OutputState }

func (KeyVaultSigningKeyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParameters)(nil)).Elem()
}

func (o KeyVaultSigningKeyParametersOutput) ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput {
	return o
}

func (o KeyVaultSigningKeyParametersOutput) ToKeyVaultSigningKeyParametersOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersOutput {
	return o
}

// Resource group of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of secret in Key Vault.
func (o KeyVaultSigningKeyParametersOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of secret in Key Vault.
func (o KeyVaultSigningKeyParametersOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.SecretVersion }).(pulumi.StringOutput)
}

// Subscription Id of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o KeyVaultSigningKeyParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.VaultName }).(pulumi.StringOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponse struct {
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	TypeName       string `pulumi:"typeName"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSigningKeyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParametersResponse)(nil)).Elem()
}

func (o KeyVaultSigningKeyParametersResponseOutput) ToKeyVaultSigningKeyParametersResponseOutput() KeyVaultSigningKeyParametersResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersResponseOutput) ToKeyVaultSigningKeyParametersResponseOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersResponseOutput {
	return o
}

// Resource group of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of secret in Key Vault.
func (o KeyVaultSigningKeyParametersResponseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of secret in Key Vault.
func (o KeyVaultSigningKeyParametersResponseOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SecretVersion }).(pulumi.StringOutput)
}

// Subscription Id of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o KeyVaultSigningKeyParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.VaultName }).(pulumi.StringOutput)
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParameters struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyInMilliseconds *int `pulumi:"additionalLatencyInMilliseconds"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
}

// LoadBalancingSettingsParametersInput is an input type that accepts LoadBalancingSettingsParametersArgs and LoadBalancingSettingsParametersOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsParametersInput` via:
//
//	LoadBalancingSettingsParametersArgs{...}
type LoadBalancingSettingsParametersInput interface {
	pulumi.Input

	ToLoadBalancingSettingsParametersOutput() LoadBalancingSettingsParametersOutput
	ToLoadBalancingSettingsParametersOutputWithContext(context.Context) LoadBalancingSettingsParametersOutput
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersArgs struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyInMilliseconds pulumi.IntPtrInput `pulumi:"additionalLatencyInMilliseconds"`
	// The number of samples to consider for load balancing decisions
	SampleSize pulumi.IntPtrInput `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired pulumi.IntPtrInput `pulumi:"successfulSamplesRequired"`
}

func (LoadBalancingSettingsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsParameters)(nil)).Elem()
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersOutput() LoadBalancingSettingsParametersOutput {
	return i.ToLoadBalancingSettingsParametersOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsParametersOutput)
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return i.ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsParametersArgs) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsParametersOutput).ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx)
}

// LoadBalancingSettingsParametersPtrInput is an input type that accepts LoadBalancingSettingsParametersArgs, LoadBalancingSettingsParametersPtr and LoadBalancingSettingsParametersPtrOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsParametersPtrInput` via:
//
//	        LoadBalancingSettingsParametersArgs{...}
//
//	or:
//
//	        nil
type LoadBalancingSettingsParametersPtrInput interface {
	pulumi.Input

	ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput
	ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Context) LoadBalancingSettingsParametersPtrOutput
}

type loadBalancingSettingsParametersPtrType LoadBalancingSettingsParametersArgs

func LoadBalancingSettingsParametersPtr(v *LoadBalancingSettingsParametersArgs) LoadBalancingSettingsParametersPtrInput {
	return (*loadBalancingSettingsParametersPtrType)(v)
}

func (*loadBalancingSettingsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingSettingsParameters)(nil)).Elem()
}

func (i *loadBalancingSettingsParametersPtrType) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return i.ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Background())
}

func (i *loadBalancingSettingsParametersPtrType) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsParametersPtrOutput)
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsParameters)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersOutput() LoadBalancingSettingsParametersOutput {
	return o
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersOutput {
	return o
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return o.ToLoadBalancingSettingsParametersPtrOutputWithContext(context.Background())
}

func (o LoadBalancingSettingsParametersOutput) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancingSettingsParameters) *LoadBalancingSettingsParameters {
		return &v
	}).(LoadBalancingSettingsParametersPtrOutput)
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParameters) *int { return v.AdditionalLatencyInMilliseconds }).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParameters) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParameters) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

type LoadBalancingSettingsParametersPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingSettingsParameters)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersPtrOutput) ToLoadBalancingSettingsParametersPtrOutput() LoadBalancingSettingsParametersPtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersPtrOutput) ToLoadBalancingSettingsParametersPtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersPtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersPtrOutput) Elem() LoadBalancingSettingsParametersOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) LoadBalancingSettingsParameters {
		if v != nil {
			return *v
		}
		var ret LoadBalancingSettingsParameters
		return ret
	}).(LoadBalancingSettingsParametersOutput)
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersPtrOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalLatencyInMilliseconds
	}).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersPtrOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) *int {
		if v == nil {
			return nil
		}
		return v.SampleSize
	}).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersPtrOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParameters) *int {
		if v == nil {
			return nil
		}
		return v.SuccessfulSamplesRequired
	}).(pulumi.IntPtrOutput)
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersResponse struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyInMilliseconds *int `pulumi:"additionalLatencyInMilliseconds"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
}

// Round-Robin load balancing settings for a backend pool
type LoadBalancingSettingsParametersResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsParametersResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersResponseOutput) ToLoadBalancingSettingsParametersResponseOutput() LoadBalancingSettingsParametersResponseOutput {
	return o
}

func (o LoadBalancingSettingsParametersResponseOutput) ToLoadBalancingSettingsParametersResponseOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersResponseOutput {
	return o
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersResponseOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParametersResponse) *int { return v.AdditionalLatencyInMilliseconds }).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersResponseOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParametersResponse) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersResponseOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsParametersResponse) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

type LoadBalancingSettingsParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingSettingsParametersResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsParametersResponsePtrOutput) ToLoadBalancingSettingsParametersResponsePtrOutput() LoadBalancingSettingsParametersResponsePtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersResponsePtrOutput) ToLoadBalancingSettingsParametersResponsePtrOutputWithContext(ctx context.Context) LoadBalancingSettingsParametersResponsePtrOutput {
	return o
}

func (o LoadBalancingSettingsParametersResponsePtrOutput) Elem() LoadBalancingSettingsParametersResponseOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) LoadBalancingSettingsParametersResponse {
		if v != nil {
			return *v
		}
		var ret LoadBalancingSettingsParametersResponse
		return ret
	}).(LoadBalancingSettingsParametersResponseOutput)
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsParametersResponsePtrOutput) AdditionalLatencyInMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalLatencyInMilliseconds
	}).(pulumi.IntPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsParametersResponsePtrOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.SampleSize
	}).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsParametersResponsePtrOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingSettingsParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.SuccessfulSamplesRequired
	}).(pulumi.IntPtrOutput)
}

// Managed Certificate used for https
type ManagedCertificateParameters struct {
	// The type of the secret resource.
	// Expected value is 'ManagedCertificate'.
	Type string `pulumi:"type"`
}

// ManagedCertificateParametersInput is an input type that accepts ManagedCertificateParametersArgs and ManagedCertificateParametersOutput values.
// You can construct a concrete instance of `ManagedCertificateParametersInput` via:
//
//	ManagedCertificateParametersArgs{...}
type ManagedCertificateParametersInput interface {
	pulumi.Input

	ToManagedCertificateParametersOutput() ManagedCertificateParametersOutput
	ToManagedCertificateParametersOutputWithContext(context.Context) ManagedCertificateParametersOutput
}

// Managed Certificate used for https
type ManagedCertificateParametersArgs struct {
	// The type of the secret resource.
	// Expected value is 'ManagedCertificate'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedCertificateParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCertificateParameters)(nil)).Elem()
}

func (i ManagedCertificateParametersArgs) ToManagedCertificateParametersOutput() ManagedCertificateParametersOutput {
	return i.ToManagedCertificateParametersOutputWithContext(context.Background())
}

func (i ManagedCertificateParametersArgs) ToManagedCertificateParametersOutputWithContext(ctx context.Context) ManagedCertificateParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedCertificateParametersOutput)
}

func (i ManagedCertificateParametersArgs) ToManagedCertificateParametersPtrOutput() ManagedCertificateParametersPtrOutput {
	return i.ToManagedCertificateParametersPtrOutputWithContext(context.Background())
}

func (i ManagedCertificateParametersArgs) ToManagedCertificateParametersPtrOutputWithContext(ctx context.Context) ManagedCertificateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedCertificateParametersOutput).ToManagedCertificateParametersPtrOutputWithContext(ctx)
}

// ManagedCertificateParametersPtrInput is an input type that accepts ManagedCertificateParametersArgs, ManagedCertificateParametersPtr and ManagedCertificateParametersPtrOutput values.
// You can construct a concrete instance of `ManagedCertificateParametersPtrInput` via:
//
//	        ManagedCertificateParametersArgs{...}
//
//	or:
//
//	        nil
type ManagedCertificateParametersPtrInput interface {
	pulumi.Input

	ToManagedCertificateParametersPtrOutput() ManagedCertificateParametersPtrOutput
	ToManagedCertificateParametersPtrOutputWithContext(context.Context) ManagedCertificateParametersPtrOutput
}

type managedCertificateParametersPtrType ManagedCertificateParametersArgs

func ManagedCertificateParametersPtr(v *ManagedCertificateParametersArgs) ManagedCertificateParametersPtrInput {
	return (*managedCertificateParametersPtrType)(v)
}

func (*managedCertificateParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCertificateParameters)(nil)).Elem()
}

func (i *managedCertificateParametersPtrType) ToManagedCertificateParametersPtrOutput() ManagedCertificateParametersPtrOutput {
	return i.ToManagedCertificateParametersPtrOutputWithContext(context.Background())
}

func (i *managedCertificateParametersPtrType) ToManagedCertificateParametersPtrOutputWithContext(ctx context.Context) ManagedCertificateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedCertificateParametersPtrOutput)
}

// Managed Certificate used for https
type ManagedCertificateParametersOutput struct{ *pulumi.OutputState }

func (ManagedCertificateParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCertificateParameters)(nil)).Elem()
}

func (o ManagedCertificateParametersOutput) ToManagedCertificateParametersOutput() ManagedCertificateParametersOutput {
	return o
}

func (o ManagedCertificateParametersOutput) ToManagedCertificateParametersOutputWithContext(ctx context.Context) ManagedCertificateParametersOutput {
	return o
}

func (o ManagedCertificateParametersOutput) ToManagedCertificateParametersPtrOutput() ManagedCertificateParametersPtrOutput {
	return o.ToManagedCertificateParametersPtrOutputWithContext(context.Background())
}

func (o ManagedCertificateParametersOutput) ToManagedCertificateParametersPtrOutputWithContext(ctx context.Context) ManagedCertificateParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedCertificateParameters) *ManagedCertificateParameters {
		return &v
	}).(ManagedCertificateParametersPtrOutput)
}

// The type of the secret resource.
// Expected value is 'ManagedCertificate'.
func (o ManagedCertificateParametersOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCertificateParameters) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedCertificateParametersPtrOutput struct{ *pulumi.OutputState }

func (ManagedCertificateParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCertificateParameters)(nil)).Elem()
}

func (o ManagedCertificateParametersPtrOutput) ToManagedCertificateParametersPtrOutput() ManagedCertificateParametersPtrOutput {
	return o
}

func (o ManagedCertificateParametersPtrOutput) ToManagedCertificateParametersPtrOutputWithContext(ctx context.Context) ManagedCertificateParametersPtrOutput {
	return o
}

func (o ManagedCertificateParametersPtrOutput) Elem() ManagedCertificateParametersOutput {
	return o.ApplyT(func(v *ManagedCertificateParameters) ManagedCertificateParameters {
		if v != nil {
			return *v
		}
		var ret ManagedCertificateParameters
		return ret
	}).(ManagedCertificateParametersOutput)
}

// The type of the secret resource.
// Expected value is 'ManagedCertificate'.
func (o ManagedCertificateParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCertificateParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Managed Certificate used for https
type ManagedCertificateParametersResponse struct {
	// Certificate expiration date.
	ExpirationDate string `pulumi:"expirationDate"`
	// Subject name in the certificate.
	Subject string `pulumi:"subject"`
	// The type of the secret resource.
	// Expected value is 'ManagedCertificate'.
	Type string `pulumi:"type"`
}

// Managed Certificate used for https
type ManagedCertificateParametersResponseOutput struct{ *pulumi.OutputState }

func (ManagedCertificateParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCertificateParametersResponse)(nil)).Elem()
}

func (o ManagedCertificateParametersResponseOutput) ToManagedCertificateParametersResponseOutput() ManagedCertificateParametersResponseOutput {
	return o
}

func (o ManagedCertificateParametersResponseOutput) ToManagedCertificateParametersResponseOutputWithContext(ctx context.Context) ManagedCertificateParametersResponseOutput {
	return o
}

// Certificate expiration date.
func (o ManagedCertificateParametersResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCertificateParametersResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Subject name in the certificate.
func (o ManagedCertificateParametersResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCertificateParametersResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The type of the secret resource.
// Expected value is 'ManagedCertificate'.
func (o ManagedCertificateParametersResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCertificateParametersResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedCertificateParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedCertificateParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCertificateParametersResponse)(nil)).Elem()
}

func (o ManagedCertificateParametersResponsePtrOutput) ToManagedCertificateParametersResponsePtrOutput() ManagedCertificateParametersResponsePtrOutput {
	return o
}

func (o ManagedCertificateParametersResponsePtrOutput) ToManagedCertificateParametersResponsePtrOutputWithContext(ctx context.Context) ManagedCertificateParametersResponsePtrOutput {
	return o
}

func (o ManagedCertificateParametersResponsePtrOutput) Elem() ManagedCertificateParametersResponseOutput {
	return o.ApplyT(func(v *ManagedCertificateParametersResponse) ManagedCertificateParametersResponse {
		if v != nil {
			return *v
		}
		var ret ManagedCertificateParametersResponse
		return ret
	}).(ManagedCertificateParametersResponseOutput)
}

// Certificate expiration date.
func (o ManagedCertificateParametersResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Subject name in the certificate.
func (o ManagedCertificateParametersResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'ManagedCertificate'.
func (o ManagedCertificateParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCertificateParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverride struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be enabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverride `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInput is an input type that accepts ManagedRuleGroupOverrideArgs and ManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInput` via:
//
//	ManagedRuleGroupOverrideArgs{...}
type ManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput
	ToManagedRuleGroupOverrideOutputWithContext(context.Context) ManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideArgs struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be enabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return i.ToManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideOutput)
}

// ManagedRuleGroupOverrideArrayInput is an input type that accepts ManagedRuleGroupOverrideArray and ManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideArrayInput` via:
//
//	ManagedRuleGroupOverrideArray{ ManagedRuleGroupOverrideArgs{...} }
type ManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput
	ToManagedRuleGroupOverrideArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideArrayOutput
}

type ManagedRuleGroupOverrideArray []ManagedRuleGroupOverrideInput

func (ManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return i.ToManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return o
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be enabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideOutput) Rules() ManagedRuleOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) []ManagedRuleOverride { return v.Rules }).(ManagedRuleOverrideArrayOutput)
}

type ManagedRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverride {
		return vs[0].([]ManagedRuleGroupOverride)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponse struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be enabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideResponse `pulumi:"rules"`
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be enabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideResponseOutput) Rules() ManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) []ManagedRuleOverrideResponse { return v.Rules }).(ManagedRuleOverrideResponseArrayOutput)
}

type ManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideResponse {
		return vs[0].([]ManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverride struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ManagedRuleOverrideInput is an input type that accepts ManagedRuleOverrideArgs and ManagedRuleOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInput` via:
//
//	ManagedRuleOverrideArgs{...}
type ManagedRuleOverrideInput interface {
	pulumi.Input

	ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput
	ToManagedRuleOverrideOutputWithContext(context.Context) ManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return i.ToManagedRuleOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideOutput)
}

// ManagedRuleOverrideArrayInput is an input type that accepts ManagedRuleOverrideArray and ManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideArrayInput` via:
//
//	ManagedRuleOverrideArray{ ManagedRuleOverrideArgs{...} }
type ManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput
	ToManagedRuleOverrideArrayOutputWithContext(context.Context) ManagedRuleOverrideArrayOutput
}

type ManagedRuleOverrideArray []ManagedRuleOverrideInput

func (ManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return i.ToManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return o
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverride) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverride {
		return vs[0].([]ManagedRuleOverride)[vs[1].(int)]
	}).(ManagedRuleOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return o
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideResponse {
		return vs[0].([]ManagedRuleOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type ManagedRuleSet struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInput is an input type that accepts ManagedRuleSetArgs and ManagedRuleSetOutput values.
// You can construct a concrete instance of `ManagedRuleSetInput` via:
//
//	ManagedRuleSetArgs{...}
type ManagedRuleSetInput interface {
	pulumi.Input

	ToManagedRuleSetOutput() ManagedRuleSetOutput
	ToManagedRuleSetOutputWithContext(context.Context) ManagedRuleSetOutput
}

// Defines a managed rule set.
type ManagedRuleSetArgs struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore pulumi.IntPtrInput `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return i.ToManagedRuleSetOutputWithContext(context.Background())
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetOutput)
}

// ManagedRuleSetArrayInput is an input type that accepts ManagedRuleSetArray and ManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetArrayInput` via:
//
//	ManagedRuleSetArray{ ManagedRuleSetArgs{...} }
type ManagedRuleSetArrayInput interface {
	pulumi.Input

	ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput
	ToManagedRuleSetArrayOutputWithContext(context.Context) ManagedRuleSetArrayOutput
}

type ManagedRuleSetArray []ManagedRuleSetInput

func (ManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return i.ToManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return o
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSet) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetOutput) RuleGroupOverrides() ManagedRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleSet) []ManagedRuleGroupOverride { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSet {
		return vs[0].([]ManagedRuleSet)[vs[1].(int)]
	}).(ManagedRuleSetOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetList struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInput is an input type that accepts ManagedRuleSetListArgs and ManagedRuleSetListOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInput` via:
//
//	ManagedRuleSetListArgs{...}
type ManagedRuleSetListInput interface {
	pulumi.Input

	ToManagedRuleSetListOutput() ManagedRuleSetListOutput
	ToManagedRuleSetListOutputWithContext(context.Context) ManagedRuleSetListOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return i.ToManagedRuleSetListOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput)
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput).ToManagedRuleSetListPtrOutputWithContext(ctx)
}

// ManagedRuleSetListPtrInput is an input type that accepts ManagedRuleSetListArgs, ManagedRuleSetListPtr and ManagedRuleSetListPtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListPtrInput` via:
//
//	        ManagedRuleSetListArgs{...}
//
//	or:
//
//	        nil
type ManagedRuleSetListPtrInput interface {
	pulumi.Input

	ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput
	ToManagedRuleSetListPtrOutputWithContext(context.Context) ManagedRuleSetListPtrOutput
}

type managedRuleSetListPtrType ManagedRuleSetListArgs

func ManagedRuleSetListPtr(v *ManagedRuleSetListArgs) ManagedRuleSetListPtrInput {
	return (*managedRuleSetListPtrType)(v)
}

func (*managedRuleSetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListPtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedRuleSetList) *ManagedRuleSetList {
		return &v
	}).(ManagedRuleSetListPtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetList) []ManagedRuleSet { return v.ManagedRuleSets }).(ManagedRuleSetArrayOutput)
}

type ManagedRuleSetListPtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) Elem() ManagedRuleSetListOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) ManagedRuleSetList {
		if v != nil {
			return *v
		}
		var ret ManagedRuleSetList
		return ret
	}).(ManagedRuleSetListOutput)
}

// List of rule sets.
func (o ManagedRuleSetListPtrOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) []ManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponse struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return o
}

// List of rule sets.
func (o ManagedRuleSetListResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

type ManagedRuleSetListResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) Elem() ManagedRuleSetListResponseOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) ManagedRuleSetListResponse {
		if v != nil {
			return *v
		}
		var ret ManagedRuleSetListResponse
		return ret
	}).(ManagedRuleSetListResponseOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponsePtrOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) []ManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponse struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Defines a managed rule set.
type ManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return o
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetResponseOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) []ManagedRuleGroupOverrideResponse { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetResponse {
		return vs[0].([]ManagedRuleSetResponse)[vs[1].(int)]
	}).(ManagedRuleSetResponseOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Define match conditions
type MatchCondition struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInput is an input type that accepts MatchConditionArgs and MatchConditionOutput values.
// You can construct a concrete instance of `MatchConditionInput` via:
//
//	MatchConditionArgs{...}
type MatchConditionInput interface {
	pulumi.Input

	ToMatchConditionOutput() MatchConditionOutput
	ToMatchConditionOutputWithContext(context.Context) MatchConditionOutput
}

// Define match conditions
type MatchConditionArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (i MatchConditionArgs) ToMatchConditionOutput() MatchConditionOutput {
	return i.ToMatchConditionOutputWithContext(context.Background())
}

func (i MatchConditionArgs) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionOutput)
}

// MatchConditionArrayInput is an input type that accepts MatchConditionArray and MatchConditionArrayOutput values.
// You can construct a concrete instance of `MatchConditionArrayInput` via:
//
//	MatchConditionArray{ MatchConditionArgs{...} }
type MatchConditionArrayInput interface {
	pulumi.Input

	ToMatchConditionArrayOutput() MatchConditionArrayOutput
	ToMatchConditionArrayOutputWithContext(context.Context) MatchConditionArrayOutput
}

type MatchConditionArray []MatchConditionInput

func (MatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (i MatchConditionArray) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return i.ToMatchConditionArrayOutputWithContext(context.Background())
}

func (i MatchConditionArray) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionArrayOutput)
}

// Define match conditions
type MatchConditionOutput struct{ *pulumi.OutputState }

func (MatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (o MatchConditionOutput) ToMatchConditionOutput() MatchConditionOutput {
	return o
}

func (o MatchConditionOutput) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return o
}

// List of possible match values.
func (o MatchConditionOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchCondition) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchCondition) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) Index(i pulumi.IntInput) MatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchCondition {
		return vs[0].([]MatchCondition)[vs[1].(int)]
	}).(MatchConditionOutput)
}

// Define match conditions
type MatchConditionResponse struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// Define match conditions
type MatchConditionResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return o
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return o
}

// List of possible match values.
func (o MatchConditionResponseOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionResponse {
		return vs[0].([]MatchConditionResponse)[vs[1].(int)]
	}).(MatchConditionResponseOutput)
}

// Defines the parameters for the origin group override configuration.
type OriginGroupOverride struct {
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	// defines the OriginGroup that would override the DefaultOriginGroup on route.
	OriginGroup *ResourceReference `pulumi:"originGroup"`
}

// OriginGroupOverrideInput is an input type that accepts OriginGroupOverrideArgs and OriginGroupOverrideOutput values.
// You can construct a concrete instance of `OriginGroupOverrideInput` via:
//
//	OriginGroupOverrideArgs{...}
type OriginGroupOverrideInput interface {
	pulumi.Input

	ToOriginGroupOverrideOutput() OriginGroupOverrideOutput
	ToOriginGroupOverrideOutputWithContext(context.Context) OriginGroupOverrideOutput
}

// Defines the parameters for the origin group override configuration.
type OriginGroupOverrideArgs struct {
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol pulumi.StringPtrInput `pulumi:"forwardingProtocol"`
	// defines the OriginGroup that would override the DefaultOriginGroup on route.
	OriginGroup ResourceReferencePtrInput `pulumi:"originGroup"`
}

func (OriginGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverride)(nil)).Elem()
}

func (i OriginGroupOverrideArgs) ToOriginGroupOverrideOutput() OriginGroupOverrideOutput {
	return i.ToOriginGroupOverrideOutputWithContext(context.Background())
}

func (i OriginGroupOverrideArgs) ToOriginGroupOverrideOutputWithContext(ctx context.Context) OriginGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOverrideOutput)
}

func (i OriginGroupOverrideArgs) ToOriginGroupOverridePtrOutput() OriginGroupOverridePtrOutput {
	return i.ToOriginGroupOverridePtrOutputWithContext(context.Background())
}

func (i OriginGroupOverrideArgs) ToOriginGroupOverridePtrOutputWithContext(ctx context.Context) OriginGroupOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOverrideOutput).ToOriginGroupOverridePtrOutputWithContext(ctx)
}

// OriginGroupOverridePtrInput is an input type that accepts OriginGroupOverrideArgs, OriginGroupOverridePtr and OriginGroupOverridePtrOutput values.
// You can construct a concrete instance of `OriginGroupOverridePtrInput` via:
//
//	        OriginGroupOverrideArgs{...}
//
//	or:
//
//	        nil
type OriginGroupOverridePtrInput interface {
	pulumi.Input

	ToOriginGroupOverridePtrOutput() OriginGroupOverridePtrOutput
	ToOriginGroupOverridePtrOutputWithContext(context.Context) OriginGroupOverridePtrOutput
}

type originGroupOverridePtrType OriginGroupOverrideArgs

func OriginGroupOverridePtr(v *OriginGroupOverrideArgs) OriginGroupOverridePtrInput {
	return (*originGroupOverridePtrType)(v)
}

func (*originGroupOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupOverride)(nil)).Elem()
}

func (i *originGroupOverridePtrType) ToOriginGroupOverridePtrOutput() OriginGroupOverridePtrOutput {
	return i.ToOriginGroupOverridePtrOutputWithContext(context.Background())
}

func (i *originGroupOverridePtrType) ToOriginGroupOverridePtrOutputWithContext(ctx context.Context) OriginGroupOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOverridePtrOutput)
}

// Defines the parameters for the origin group override configuration.
type OriginGroupOverrideOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverride)(nil)).Elem()
}

func (o OriginGroupOverrideOutput) ToOriginGroupOverrideOutput() OriginGroupOverrideOutput {
	return o
}

func (o OriginGroupOverrideOutput) ToOriginGroupOverrideOutputWithContext(ctx context.Context) OriginGroupOverrideOutput {
	return o
}

func (o OriginGroupOverrideOutput) ToOriginGroupOverridePtrOutput() OriginGroupOverridePtrOutput {
	return o.ToOriginGroupOverridePtrOutputWithContext(context.Background())
}

func (o OriginGroupOverrideOutput) ToOriginGroupOverridePtrOutputWithContext(ctx context.Context) OriginGroupOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginGroupOverride) *OriginGroupOverride {
		return &v
	}).(OriginGroupOverridePtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o OriginGroupOverrideOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupOverride) *string { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

// defines the OriginGroup that would override the DefaultOriginGroup on route.
func (o OriginGroupOverrideOutput) OriginGroup() ResourceReferencePtrOutput {
	return o.ApplyT(func(v OriginGroupOverride) *ResourceReference { return v.OriginGroup }).(ResourceReferencePtrOutput)
}

type OriginGroupOverridePtrOutput struct{ *pulumi.OutputState }

func (OriginGroupOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupOverride)(nil)).Elem()
}

func (o OriginGroupOverridePtrOutput) ToOriginGroupOverridePtrOutput() OriginGroupOverridePtrOutput {
	return o
}

func (o OriginGroupOverridePtrOutput) ToOriginGroupOverridePtrOutputWithContext(ctx context.Context) OriginGroupOverridePtrOutput {
	return o
}

func (o OriginGroupOverridePtrOutput) Elem() OriginGroupOverrideOutput {
	return o.ApplyT(func(v *OriginGroupOverride) OriginGroupOverride {
		if v != nil {
			return *v
		}
		var ret OriginGroupOverride
		return ret
	}).(OriginGroupOverrideOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o OriginGroupOverridePtrOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginGroupOverride) *string {
		if v == nil {
			return nil
		}
		return v.ForwardingProtocol
	}).(pulumi.StringPtrOutput)
}

// defines the OriginGroup that would override the DefaultOriginGroup on route.
func (o OriginGroupOverridePtrOutput) OriginGroup() ResourceReferencePtrOutput {
	return o.ApplyT(func(v *OriginGroupOverride) *ResourceReference {
		if v == nil {
			return nil
		}
		return v.OriginGroup
	}).(ResourceReferencePtrOutput)
}

// Defines the origin group override action for the delivery rule.
type OriginGroupOverrideAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'OriginGroupOverride'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters OriginGroupOverrideActionParameters `pulumi:"parameters"`
}

// OriginGroupOverrideActionInput is an input type that accepts OriginGroupOverrideActionArgs and OriginGroupOverrideActionOutput values.
// You can construct a concrete instance of `OriginGroupOverrideActionInput` via:
//
//	OriginGroupOverrideActionArgs{...}
type OriginGroupOverrideActionInput interface {
	pulumi.Input

	ToOriginGroupOverrideActionOutput() OriginGroupOverrideActionOutput
	ToOriginGroupOverrideActionOutputWithContext(context.Context) OriginGroupOverrideActionOutput
}

// Defines the origin group override action for the delivery rule.
type OriginGroupOverrideActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'OriginGroupOverride'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters OriginGroupOverrideActionParametersInput `pulumi:"parameters"`
}

func (OriginGroupOverrideActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideAction)(nil)).Elem()
}

func (i OriginGroupOverrideActionArgs) ToOriginGroupOverrideActionOutput() OriginGroupOverrideActionOutput {
	return i.ToOriginGroupOverrideActionOutputWithContext(context.Background())
}

func (i OriginGroupOverrideActionArgs) ToOriginGroupOverrideActionOutputWithContext(ctx context.Context) OriginGroupOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOverrideActionOutput)
}

// Defines the origin group override action for the delivery rule.
type OriginGroupOverrideActionOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideAction)(nil)).Elem()
}

func (o OriginGroupOverrideActionOutput) ToOriginGroupOverrideActionOutput() OriginGroupOverrideActionOutput {
	return o
}

func (o OriginGroupOverrideActionOutput) ToOriginGroupOverrideActionOutputWithContext(ctx context.Context) OriginGroupOverrideActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'OriginGroupOverride'.
func (o OriginGroupOverrideActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOverrideAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o OriginGroupOverrideActionOutput) Parameters() OriginGroupOverrideActionParametersOutput {
	return o.ApplyT(func(v OriginGroupOverrideAction) OriginGroupOverrideActionParameters { return v.Parameters }).(OriginGroupOverrideActionParametersOutput)
}

// Defines the parameters for the origin group override action.
type OriginGroupOverrideActionParameters struct {
	// defines the OriginGroup that would override the DefaultOriginGroup.
	OriginGroup ResourceReference `pulumi:"originGroup"`
	TypeName    string            `pulumi:"typeName"`
}

// OriginGroupOverrideActionParametersInput is an input type that accepts OriginGroupOverrideActionParametersArgs and OriginGroupOverrideActionParametersOutput values.
// You can construct a concrete instance of `OriginGroupOverrideActionParametersInput` via:
//
//	OriginGroupOverrideActionParametersArgs{...}
type OriginGroupOverrideActionParametersInput interface {
	pulumi.Input

	ToOriginGroupOverrideActionParametersOutput() OriginGroupOverrideActionParametersOutput
	ToOriginGroupOverrideActionParametersOutputWithContext(context.Context) OriginGroupOverrideActionParametersOutput
}

// Defines the parameters for the origin group override action.
type OriginGroupOverrideActionParametersArgs struct {
	// defines the OriginGroup that would override the DefaultOriginGroup.
	OriginGroup ResourceReferenceInput `pulumi:"originGroup"`
	TypeName    pulumi.StringInput     `pulumi:"typeName"`
}

func (OriginGroupOverrideActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideActionParameters)(nil)).Elem()
}

func (i OriginGroupOverrideActionParametersArgs) ToOriginGroupOverrideActionParametersOutput() OriginGroupOverrideActionParametersOutput {
	return i.ToOriginGroupOverrideActionParametersOutputWithContext(context.Background())
}

func (i OriginGroupOverrideActionParametersArgs) ToOriginGroupOverrideActionParametersOutputWithContext(ctx context.Context) OriginGroupOverrideActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOverrideActionParametersOutput)
}

// Defines the parameters for the origin group override action.
type OriginGroupOverrideActionParametersOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideActionParameters)(nil)).Elem()
}

func (o OriginGroupOverrideActionParametersOutput) ToOriginGroupOverrideActionParametersOutput() OriginGroupOverrideActionParametersOutput {
	return o
}

func (o OriginGroupOverrideActionParametersOutput) ToOriginGroupOverrideActionParametersOutputWithContext(ctx context.Context) OriginGroupOverrideActionParametersOutput {
	return o
}

// defines the OriginGroup that would override the DefaultOriginGroup.
func (o OriginGroupOverrideActionParametersOutput) OriginGroup() ResourceReferenceOutput {
	return o.ApplyT(func(v OriginGroupOverrideActionParameters) ResourceReference { return v.OriginGroup }).(ResourceReferenceOutput)
}

func (o OriginGroupOverrideActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOverrideActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the origin group override action.
type OriginGroupOverrideActionParametersResponse struct {
	// defines the OriginGroup that would override the DefaultOriginGroup.
	OriginGroup ResourceReferenceResponse `pulumi:"originGroup"`
	TypeName    string                    `pulumi:"typeName"`
}

// Defines the parameters for the origin group override action.
type OriginGroupOverrideActionParametersResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideActionParametersResponse)(nil)).Elem()
}

func (o OriginGroupOverrideActionParametersResponseOutput) ToOriginGroupOverrideActionParametersResponseOutput() OriginGroupOverrideActionParametersResponseOutput {
	return o
}

func (o OriginGroupOverrideActionParametersResponseOutput) ToOriginGroupOverrideActionParametersResponseOutputWithContext(ctx context.Context) OriginGroupOverrideActionParametersResponseOutput {
	return o
}

// defines the OriginGroup that would override the DefaultOriginGroup.
func (o OriginGroupOverrideActionParametersResponseOutput) OriginGroup() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v OriginGroupOverrideActionParametersResponse) ResourceReferenceResponse { return v.OriginGroup }).(ResourceReferenceResponseOutput)
}

func (o OriginGroupOverrideActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOverrideActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the origin group override action for the delivery rule.
type OriginGroupOverrideActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'OriginGroupOverride'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters OriginGroupOverrideActionParametersResponse `pulumi:"parameters"`
}

// Defines the origin group override action for the delivery rule.
type OriginGroupOverrideActionResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideActionResponse)(nil)).Elem()
}

func (o OriginGroupOverrideActionResponseOutput) ToOriginGroupOverrideActionResponseOutput() OriginGroupOverrideActionResponseOutput {
	return o
}

func (o OriginGroupOverrideActionResponseOutput) ToOriginGroupOverrideActionResponseOutputWithContext(ctx context.Context) OriginGroupOverrideActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'OriginGroupOverride'.
func (o OriginGroupOverrideActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOverrideActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o OriginGroupOverrideActionResponseOutput) Parameters() OriginGroupOverrideActionParametersResponseOutput {
	return o.ApplyT(func(v OriginGroupOverrideActionResponse) OriginGroupOverrideActionParametersResponse {
		return v.Parameters
	}).(OriginGroupOverrideActionParametersResponseOutput)
}

// Defines the parameters for the origin group override configuration.
type OriginGroupOverrideResponse struct {
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	// defines the OriginGroup that would override the DefaultOriginGroup on route.
	OriginGroup *ResourceReferenceResponse `pulumi:"originGroup"`
}

// Defines the parameters for the origin group override configuration.
type OriginGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOverrideResponse)(nil)).Elem()
}

func (o OriginGroupOverrideResponseOutput) ToOriginGroupOverrideResponseOutput() OriginGroupOverrideResponseOutput {
	return o
}

func (o OriginGroupOverrideResponseOutput) ToOriginGroupOverrideResponseOutputWithContext(ctx context.Context) OriginGroupOverrideResponseOutput {
	return o
}

// Protocol this rule will use when forwarding traffic to backends.
func (o OriginGroupOverrideResponseOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupOverrideResponse) *string { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

// defines the OriginGroup that would override the DefaultOriginGroup on route.
func (o OriginGroupOverrideResponseOutput) OriginGroup() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v OriginGroupOverrideResponse) *ResourceReferenceResponse { return v.OriginGroup }).(ResourceReferenceResponsePtrOutput)
}

type OriginGroupOverrideResponsePtrOutput struct{ *pulumi.OutputState }

func (OriginGroupOverrideResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroupOverrideResponse)(nil)).Elem()
}

func (o OriginGroupOverrideResponsePtrOutput) ToOriginGroupOverrideResponsePtrOutput() OriginGroupOverrideResponsePtrOutput {
	return o
}

func (o OriginGroupOverrideResponsePtrOutput) ToOriginGroupOverrideResponsePtrOutputWithContext(ctx context.Context) OriginGroupOverrideResponsePtrOutput {
	return o
}

func (o OriginGroupOverrideResponsePtrOutput) Elem() OriginGroupOverrideResponseOutput {
	return o.ApplyT(func(v *OriginGroupOverrideResponse) OriginGroupOverrideResponse {
		if v != nil {
			return *v
		}
		var ret OriginGroupOverrideResponse
		return ret
	}).(OriginGroupOverrideResponseOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o OriginGroupOverrideResponsePtrOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginGroupOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.ForwardingProtocol
	}).(pulumi.StringPtrOutput)
}

// defines the OriginGroup that would override the DefaultOriginGroup on route.
func (o OriginGroupOverrideResponsePtrOutput) OriginGroup() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *OriginGroupOverrideResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.OriginGroup
	}).(ResourceReferenceResponsePtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettings struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// PolicySettingsInput is an input type that accepts PolicySettingsArgs and PolicySettingsOutput values.
// You can construct a concrete instance of `PolicySettingsInput` via:
//
//	PolicySettingsArgs{...}
type PolicySettingsInput interface {
	pulumi.Input

	ToPolicySettingsOutput() PolicySettingsOutput
	ToPolicySettingsOutputWithContext(context.Context) PolicySettingsOutput
}

// Defines contents of a web application firewall global configuration
type PolicySettingsArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody pulumi.StringPtrInput `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl pulumi.StringPtrInput `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (i PolicySettingsArgs) ToPolicySettingsOutput() PolicySettingsOutput {
	return i.ToPolicySettingsOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput)
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput).ToPolicySettingsPtrOutputWithContext(ctx)
}

// PolicySettingsPtrInput is an input type that accepts PolicySettingsArgs, PolicySettingsPtr and PolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicySettingsPtrInput` via:
//
//	        PolicySettingsArgs{...}
//
//	or:
//
//	        nil
type PolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicySettingsPtrOutput() PolicySettingsPtrOutput
	ToPolicySettingsPtrOutputWithContext(context.Context) PolicySettingsPtrOutput
}

type policySettingsPtrType PolicySettingsArgs

func PolicySettingsPtr(v *PolicySettingsArgs) PolicySettingsPtrInput {
	return (*policySettingsPtrType)(v)
}

func (*policySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (o PolicySettingsOutput) ToPolicySettingsOutput() PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicySettings) *PolicySettings {
		return &v
	}).(PolicySettingsPtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) Elem() PolicySettingsOutput {
	return o.ApplyT(func(v *PolicySettings) PolicySettings {
		if v != nil {
			return *v
		}
		var ret PolicySettings
		return ret
	}).(PolicySettingsOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsPtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsPtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsPtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsPtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return o
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponseOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) Elem() PolicySettingsResponseOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) PolicySettingsResponse {
		if v != nil {
			return *v
		}
		var ret PolicySettingsResponse
		return ret
	}).(PolicySettingsResponseOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponsePtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponsePtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for PostArgsMatchConditionParameters
func (val *PostArgsMatchConditionParameters) Defaults() *PostArgsMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// PostArgsMatchConditionParametersInput is an input type that accepts PostArgsMatchConditionParametersArgs and PostArgsMatchConditionParametersOutput values.
// You can construct a concrete instance of `PostArgsMatchConditionParametersInput` via:
//
//	PostArgsMatchConditionParametersArgs{...}
type PostArgsMatchConditionParametersInput interface {
	pulumi.Input

	ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput
	ToPostArgsMatchConditionParametersOutputWithContext(context.Context) PostArgsMatchConditionParametersOutput
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for PostArgsMatchConditionParametersArgs
func (val *PostArgsMatchConditionParametersArgs) Defaults() *PostArgsMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (PostArgsMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParameters)(nil)).Elem()
}

func (i PostArgsMatchConditionParametersArgs) ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput {
	return i.ToPostArgsMatchConditionParametersOutputWithContext(context.Background())
}

func (i PostArgsMatchConditionParametersArgs) ToPostArgsMatchConditionParametersOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostArgsMatchConditionParametersOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (PostArgsMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParameters)(nil)).Elem()
}

func (o PostArgsMatchConditionParametersOutput) ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput {
	return o
}

func (o PostArgsMatchConditionParametersOutput) ToPostArgsMatchConditionParametersOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o PostArgsMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o PostArgsMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o PostArgsMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of PostArg to be matched
func (o PostArgsMatchConditionParametersOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o PostArgsMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o PostArgsMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for PostArgsMatchConditionParametersResponse
func (val *PostArgsMatchConditionParametersResponse) Defaults() *PostArgsMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (PostArgsMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParametersResponse)(nil)).Elem()
}

func (o PostArgsMatchConditionParametersResponseOutput) ToPostArgsMatchConditionParametersResponseOutput() PostArgsMatchConditionParametersResponseOutput {
	return o
}

func (o PostArgsMatchConditionParametersResponseOutput) ToPostArgsMatchConditionParametersResponseOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o PostArgsMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o PostArgsMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o PostArgsMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of PostArg to be matched
func (o PostArgsMatchConditionParametersResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o PostArgsMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o PostArgsMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for QueryStringMatchConditionParameters
func (val *QueryStringMatchConditionParameters) Defaults() *QueryStringMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// QueryStringMatchConditionParametersInput is an input type that accepts QueryStringMatchConditionParametersArgs and QueryStringMatchConditionParametersOutput values.
// You can construct a concrete instance of `QueryStringMatchConditionParametersInput` via:
//
//	QueryStringMatchConditionParametersArgs{...}
type QueryStringMatchConditionParametersInput interface {
	pulumi.Input

	ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput
	ToQueryStringMatchConditionParametersOutputWithContext(context.Context) QueryStringMatchConditionParametersOutput
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for QueryStringMatchConditionParametersArgs
func (val *QueryStringMatchConditionParametersArgs) Defaults() *QueryStringMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (QueryStringMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParameters)(nil)).Elem()
}

func (i QueryStringMatchConditionParametersArgs) ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput {
	return i.ToQueryStringMatchConditionParametersOutputWithContext(context.Background())
}

func (i QueryStringMatchConditionParametersArgs) ToQueryStringMatchConditionParametersOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryStringMatchConditionParametersOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (QueryStringMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParameters)(nil)).Elem()
}

func (o QueryStringMatchConditionParametersOutput) ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput {
	return o
}

func (o QueryStringMatchConditionParametersOutput) ToQueryStringMatchConditionParametersOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o QueryStringMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o QueryStringMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o QueryStringMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o QueryStringMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o QueryStringMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for QueryStringMatchConditionParametersResponse
func (val *QueryStringMatchConditionParametersResponse) Defaults() *QueryStringMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (QueryStringMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParametersResponse)(nil)).Elem()
}

func (o QueryStringMatchConditionParametersResponseOutput) ToQueryStringMatchConditionParametersResponseOutput() QueryStringMatchConditionParametersResponseOutput {
	return o
}

func (o QueryStringMatchConditionParametersResponseOutput) ToQueryStringMatchConditionParametersResponseOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o QueryStringMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o QueryStringMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o QueryStringMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o QueryStringMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o QueryStringMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// RateLimitRuleInput is an input type that accepts RateLimitRuleArgs and RateLimitRuleOutput values.
// You can construct a concrete instance of `RateLimitRuleInput` via:
//
//	RateLimitRuleArgs{...}
type RateLimitRuleInput interface {
	pulumi.Input

	ToRateLimitRuleOutput() RateLimitRuleOutput
	ToRateLimitRuleOutputWithContext(context.Context) RateLimitRuleOutput
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntInput `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold pulumi.IntInput `pulumi:"rateLimitThreshold"`
}

func (RateLimitRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return i.ToRateLimitRuleOutputWithContext(context.Background())
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleOutput)
}

// RateLimitRuleArrayInput is an input type that accepts RateLimitRuleArray and RateLimitRuleArrayOutput values.
// You can construct a concrete instance of `RateLimitRuleArrayInput` via:
//
//	RateLimitRuleArray{ RateLimitRuleArgs{...} }
type RateLimitRuleArrayInput interface {
	pulumi.Input

	ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput
	ToRateLimitRuleArrayOutputWithContext(context.Context) RateLimitRuleArrayOutput
}

type RateLimitRuleArray []RateLimitRuleInput

func (RateLimitRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return i.ToRateLimitRuleArrayOutputWithContext(context.Background())
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleOutput struct{ *pulumi.OutputState }

func (RateLimitRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (o RateLimitRuleOutput) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return o
}

func (o RateLimitRuleOutput) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v RateLimitRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (o RateLimitRuleArrayOutput) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return o
}

func (o RateLimitRuleArrayOutput) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return o
}

func (o RateLimitRuleArrayOutput) Index(i pulumi.IntInput) RateLimitRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRule {
		return vs[0].([]RateLimitRule)[vs[1].(int)]
	}).(RateLimitRuleOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleList struct {
	// List of rules
	Rules []RateLimitRule `pulumi:"rules"`
}

// RateLimitRuleListInput is an input type that accepts RateLimitRuleListArgs and RateLimitRuleListOutput values.
// You can construct a concrete instance of `RateLimitRuleListInput` via:
//
//	RateLimitRuleListArgs{...}
type RateLimitRuleListInput interface {
	pulumi.Input

	ToRateLimitRuleListOutput() RateLimitRuleListOutput
	ToRateLimitRuleListOutputWithContext(context.Context) RateLimitRuleListOutput
}

// Defines contents of rate limit rules
type RateLimitRuleListArgs struct {
	// List of rules
	Rules RateLimitRuleArrayInput `pulumi:"rules"`
}

func (RateLimitRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return i.ToRateLimitRuleListOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput)
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput).ToRateLimitRuleListPtrOutputWithContext(ctx)
}

// RateLimitRuleListPtrInput is an input type that accepts RateLimitRuleListArgs, RateLimitRuleListPtr and RateLimitRuleListPtrOutput values.
// You can construct a concrete instance of `RateLimitRuleListPtrInput` via:
//
//	        RateLimitRuleListArgs{...}
//
//	or:
//
//	        nil
type RateLimitRuleListPtrInput interface {
	pulumi.Input

	ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput
	ToRateLimitRuleListPtrOutputWithContext(context.Context) RateLimitRuleListPtrOutput
}

type rateLimitRuleListPtrType RateLimitRuleListArgs

func RateLimitRuleListPtr(v *RateLimitRuleListArgs) RateLimitRuleListPtrInput {
	return (*rateLimitRuleListPtrType)(v)
}

func (*rateLimitRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListPtrOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return o
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return o
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return o.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitRuleList) *RateLimitRuleList {
		return &v
	}).(RateLimitRuleListPtrOutput)
}

// List of rules
func (o RateLimitRuleListOutput) Rules() RateLimitRuleArrayOutput {
	return o.ApplyT(func(v RateLimitRuleList) []RateLimitRule { return v.Rules }).(RateLimitRuleArrayOutput)
}

type RateLimitRuleListPtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (o RateLimitRuleListPtrOutput) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return o
}

func (o RateLimitRuleListPtrOutput) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return o
}

func (o RateLimitRuleListPtrOutput) Elem() RateLimitRuleListOutput {
	return o.ApplyT(func(v *RateLimitRuleList) RateLimitRuleList {
		if v != nil {
			return *v
		}
		var ret RateLimitRuleList
		return ret
	}).(RateLimitRuleListOutput)
}

// List of rules
func (o RateLimitRuleListPtrOutput) Rules() RateLimitRuleArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleList) []RateLimitRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleArrayOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListResponse struct {
	// List of rules
	Rules []RateLimitRuleResponse `pulumi:"rules"`
}

// Defines contents of rate limit rules
type RateLimitRuleListResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutput() RateLimitRuleListResponseOutput {
	return o
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutputWithContext(ctx context.Context) RateLimitRuleListResponseOutput {
	return o
}

// List of rules
func (o RateLimitRuleListResponseOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleListResponse) []RateLimitRuleResponse { return v.Rules }).(RateLimitRuleResponseArrayOutput)
}

type RateLimitRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) Elem() RateLimitRuleListResponseOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) RateLimitRuleListResponse {
		if v != nil {
			return *v
		}
		var ret RateLimitRuleListResponse
		return ret
	}).(RateLimitRuleListResponseOutput)
}

// List of rules
func (o RateLimitRuleListResponsePtrOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) []RateLimitRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleResponseArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutput() RateLimitRuleResponseOutput {
	return o
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutputWithContext(ctx context.Context) RateLimitRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleResponseOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleResponseOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutput() RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) Index(i pulumi.IntInput) RateLimitRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRuleResponse {
		return vs[0].([]RateLimitRuleResponse)[vs[1].(int)]
	}).(RateLimitRuleResponseOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParameters struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RemoteAddressMatchConditionParameters
func (val *RemoteAddressMatchConditionParameters) Defaults() *RemoteAddressMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// RemoteAddressMatchConditionParametersInput is an input type that accepts RemoteAddressMatchConditionParametersArgs and RemoteAddressMatchConditionParametersOutput values.
// You can construct a concrete instance of `RemoteAddressMatchConditionParametersInput` via:
//
//	RemoteAddressMatchConditionParametersArgs{...}
type RemoteAddressMatchConditionParametersInput interface {
	pulumi.Input

	ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput
	ToRemoteAddressMatchConditionParametersOutputWithContext(context.Context) RemoteAddressMatchConditionParametersOutput
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersArgs struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RemoteAddressMatchConditionParametersArgs
func (val *RemoteAddressMatchConditionParametersArgs) Defaults() *RemoteAddressMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RemoteAddressMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParameters)(nil)).Elem()
}

func (i RemoteAddressMatchConditionParametersArgs) ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput {
	return i.ToRemoteAddressMatchConditionParametersOutputWithContext(context.Background())
}

func (i RemoteAddressMatchConditionParametersArgs) ToRemoteAddressMatchConditionParametersOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAddressMatchConditionParametersOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RemoteAddressMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParameters)(nil)).Elem()
}

func (o RemoteAddressMatchConditionParametersOutput) ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput {
	return o
}

func (o RemoteAddressMatchConditionParametersOutput) ToRemoteAddressMatchConditionParametersOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersOutput {
	return o
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RemoteAddressMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RemoteAddressMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RemoteAddressMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RemoteAddressMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RemoteAddressMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponse struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RemoteAddressMatchConditionParametersResponse
func (val *RemoteAddressMatchConditionParametersResponse) Defaults() *RemoteAddressMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RemoteAddressMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParametersResponse)(nil)).Elem()
}

func (o RemoteAddressMatchConditionParametersResponseOutput) ToRemoteAddressMatchConditionParametersResponseOutput() RemoteAddressMatchConditionParametersResponseOutput {
	return o
}

func (o RemoteAddressMatchConditionParametersResponseOutput) ToRemoteAddressMatchConditionParametersResponseOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersResponseOutput {
	return o
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RemoteAddressMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RemoteAddressMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RemoteAddressMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RemoteAddressMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RemoteAddressMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestBodyMatchConditionParameters
func (val *RequestBodyMatchConditionParameters) Defaults() *RequestBodyMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// RequestBodyMatchConditionParametersInput is an input type that accepts RequestBodyMatchConditionParametersArgs and RequestBodyMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestBodyMatchConditionParametersInput` via:
//
//	RequestBodyMatchConditionParametersArgs{...}
type RequestBodyMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput
	ToRequestBodyMatchConditionParametersOutputWithContext(context.Context) RequestBodyMatchConditionParametersOutput
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestBodyMatchConditionParametersArgs
func (val *RequestBodyMatchConditionParametersArgs) Defaults() *RequestBodyMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RequestBodyMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParameters)(nil)).Elem()
}

func (i RequestBodyMatchConditionParametersArgs) ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput {
	return i.ToRequestBodyMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestBodyMatchConditionParametersArgs) ToRequestBodyMatchConditionParametersOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestBodyMatchConditionParametersOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestBodyMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParameters)(nil)).Elem()
}

func (o RequestBodyMatchConditionParametersOutput) ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput {
	return o
}

func (o RequestBodyMatchConditionParametersOutput) ToRequestBodyMatchConditionParametersOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestBodyMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestBodyMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestBodyMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestBodyMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestBodyMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestBodyMatchConditionParametersResponse
func (val *RequestBodyMatchConditionParametersResponse) Defaults() *RequestBodyMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestBodyMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestBodyMatchConditionParametersResponseOutput) ToRequestBodyMatchConditionParametersResponseOutput() RequestBodyMatchConditionParametersResponseOutput {
	return o
}

func (o RequestBodyMatchConditionParametersResponseOutput) ToRequestBodyMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestBodyMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestBodyMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestBodyMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestBodyMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestBodyMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestHeaderMatchConditionParameters
func (val *RequestHeaderMatchConditionParameters) Defaults() *RequestHeaderMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// RequestHeaderMatchConditionParametersInput is an input type that accepts RequestHeaderMatchConditionParametersArgs and RequestHeaderMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestHeaderMatchConditionParametersInput` via:
//
//	RequestHeaderMatchConditionParametersArgs{...}
type RequestHeaderMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput
	ToRequestHeaderMatchConditionParametersOutputWithContext(context.Context) RequestHeaderMatchConditionParametersOutput
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Header to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestHeaderMatchConditionParametersArgs
func (val *RequestHeaderMatchConditionParametersArgs) Defaults() *RequestHeaderMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RequestHeaderMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParameters)(nil)).Elem()
}

func (i RequestHeaderMatchConditionParametersArgs) ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput {
	return i.ToRequestHeaderMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestHeaderMatchConditionParametersArgs) ToRequestHeaderMatchConditionParametersOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestHeaderMatchConditionParametersOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestHeaderMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParameters)(nil)).Elem()
}

func (o RequestHeaderMatchConditionParametersOutput) ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput {
	return o
}

func (o RequestHeaderMatchConditionParametersOutput) ToRequestHeaderMatchConditionParametersOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestHeaderMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestHeaderMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestHeaderMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Header to be matched
func (o RequestHeaderMatchConditionParametersOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RequestHeaderMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestHeaderMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestHeaderMatchConditionParametersResponse
func (val *RequestHeaderMatchConditionParametersResponse) Defaults() *RequestHeaderMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestHeaderMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestHeaderMatchConditionParametersResponseOutput) ToRequestHeaderMatchConditionParametersResponseOutput() RequestHeaderMatchConditionParametersResponseOutput {
	return o
}

func (o RequestHeaderMatchConditionParametersResponseOutput) ToRequestHeaderMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestHeaderMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestHeaderMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestHeaderMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Header to be matched
func (o RequestHeaderMatchConditionParametersResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RequestHeaderMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestHeaderMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestMethodMatchConditionParameters
func (val *RequestMethodMatchConditionParameters) Defaults() *RequestMethodMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// RequestMethodMatchConditionParametersInput is an input type that accepts RequestMethodMatchConditionParametersArgs and RequestMethodMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestMethodMatchConditionParametersInput` via:
//
//	RequestMethodMatchConditionParametersArgs{...}
type RequestMethodMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput
	ToRequestMethodMatchConditionParametersOutputWithContext(context.Context) RequestMethodMatchConditionParametersOutput
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestMethodMatchConditionParametersArgs
func (val *RequestMethodMatchConditionParametersArgs) Defaults() *RequestMethodMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RequestMethodMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParameters)(nil)).Elem()
}

func (i RequestMethodMatchConditionParametersArgs) ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput {
	return i.ToRequestMethodMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestMethodMatchConditionParametersArgs) ToRequestMethodMatchConditionParametersOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestMethodMatchConditionParametersOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestMethodMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParameters)(nil)).Elem()
}

func (o RequestMethodMatchConditionParametersOutput) ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput {
	return o
}

func (o RequestMethodMatchConditionParametersOutput) ToRequestMethodMatchConditionParametersOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestMethodMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestMethodMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestMethodMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestMethodMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestMethodMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestMethodMatchConditionParametersResponse
func (val *RequestMethodMatchConditionParametersResponse) Defaults() *RequestMethodMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestMethodMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestMethodMatchConditionParametersResponseOutput) ToRequestMethodMatchConditionParametersResponseOutput() RequestMethodMatchConditionParametersResponseOutput {
	return o
}

func (o RequestMethodMatchConditionParametersResponseOutput) ToRequestMethodMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestMethodMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestMethodMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestMethodMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestMethodMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestMethodMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestSchemeMatchConditionParameters
func (val *RequestSchemeMatchConditionParameters) Defaults() *RequestSchemeMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// RequestSchemeMatchConditionParametersInput is an input type that accepts RequestSchemeMatchConditionParametersArgs and RequestSchemeMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestSchemeMatchConditionParametersInput` via:
//
//	RequestSchemeMatchConditionParametersArgs{...}
type RequestSchemeMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput
	ToRequestSchemeMatchConditionParametersOutputWithContext(context.Context) RequestSchemeMatchConditionParametersOutput
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestSchemeMatchConditionParametersArgs
func (val *RequestSchemeMatchConditionParametersArgs) Defaults() *RequestSchemeMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RequestSchemeMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParameters)(nil)).Elem()
}

func (i RequestSchemeMatchConditionParametersArgs) ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput {
	return i.ToRequestSchemeMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestSchemeMatchConditionParametersArgs) ToRequestSchemeMatchConditionParametersOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSchemeMatchConditionParametersOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestSchemeMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParameters)(nil)).Elem()
}

func (o RequestSchemeMatchConditionParametersOutput) ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput {
	return o
}

func (o RequestSchemeMatchConditionParametersOutput) ToRequestSchemeMatchConditionParametersOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestSchemeMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestSchemeMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestSchemeMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestSchemeMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestSchemeMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestSchemeMatchConditionParametersResponse
func (val *RequestSchemeMatchConditionParametersResponse) Defaults() *RequestSchemeMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestSchemeMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestSchemeMatchConditionParametersResponseOutput) ToRequestSchemeMatchConditionParametersResponseOutput() RequestSchemeMatchConditionParametersResponseOutput {
	return o
}

func (o RequestSchemeMatchConditionParametersResponseOutput) ToRequestSchemeMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestSchemeMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestSchemeMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestSchemeMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestSchemeMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestSchemeMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestUriMatchConditionParameters
func (val *RequestUriMatchConditionParameters) Defaults() *RequestUriMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// RequestUriMatchConditionParametersInput is an input type that accepts RequestUriMatchConditionParametersArgs and RequestUriMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestUriMatchConditionParametersInput` via:
//
//	RequestUriMatchConditionParametersArgs{...}
type RequestUriMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput
	ToRequestUriMatchConditionParametersOutputWithContext(context.Context) RequestUriMatchConditionParametersOutput
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestUriMatchConditionParametersArgs
func (val *RequestUriMatchConditionParametersArgs) Defaults() *RequestUriMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (RequestUriMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParameters)(nil)).Elem()
}

func (i RequestUriMatchConditionParametersArgs) ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput {
	return i.ToRequestUriMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestUriMatchConditionParametersArgs) ToRequestUriMatchConditionParametersOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestUriMatchConditionParametersOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestUriMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParameters)(nil)).Elem()
}

func (o RequestUriMatchConditionParametersOutput) ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput {
	return o
}

func (o RequestUriMatchConditionParametersOutput) ToRequestUriMatchConditionParametersOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestUriMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestUriMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestUriMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestUriMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestUriMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for RequestUriMatchConditionParametersResponse
func (val *RequestUriMatchConditionParametersResponse) Defaults() *RequestUriMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestUriMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestUriMatchConditionParametersResponseOutput) ToRequestUriMatchConditionParametersResponseOutput() RequestUriMatchConditionParametersResponseOutput {
	return o
}

func (o RequestUriMatchConditionParametersResponseOutput) ToRequestUriMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestUriMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestUriMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o RequestUriMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestUriMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o RequestUriMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Reference to another resource.
type ResourceReference struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//	ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// Reference to another resource.
type ResourceReferenceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput).ToResourceReferencePtrOutputWithContext(ctx)
}

// ResourceReferencePtrInput is an input type that accepts ResourceReferenceArgs, ResourceReferencePtr and ResourceReferencePtrOutput values.
// You can construct a concrete instance of `ResourceReferencePtrInput` via:
//
//	        ResourceReferenceArgs{...}
//
//	or:
//
//	        nil
type ResourceReferencePtrInput interface {
	pulumi.Input

	ToResourceReferencePtrOutput() ResourceReferencePtrOutput
	ToResourceReferencePtrOutputWithContext(context.Context) ResourceReferencePtrOutput
}

type resourceReferencePtrType ResourceReferenceArgs

func ResourceReferencePtr(v *ResourceReferenceArgs) ResourceReferencePtrInput {
	return (*resourceReferencePtrType)(v)
}

func (*resourceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferencePtrOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//	ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// Reference to another resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return o.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (o ResourceReferenceOutput) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceReference) *ResourceReference {
		return &v
	}).(ResourceReferencePtrOutput)
}

// Resource ID.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferencePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (o ResourceReferencePtrOutput) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return o
}

func (o ResourceReferencePtrOutput) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return o
}

func (o ResourceReferencePtrOutput) Elem() ResourceReferenceOutput {
	return o.ApplyT(func(v *ResourceReference) ResourceReference {
		if v != nil {
			return *v
		}
		var ret ResourceReference
		return ret
	}).(ResourceReferenceOutput)
}

// Resource ID.
func (o ResourceReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// Reference to another resource.
type ResourceReferenceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// Resource ID.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) Elem() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) ResourceReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ResourceReferenceResponse
		return ret
	}).(ResourceReferenceResponseOutput)
}

// Resource ID.
func (o ResourceReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParameters struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *ResponseBasedDetectedErrorTypes `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs and ResponseBasedOriginErrorDetectionParametersOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInput` via:
//
//	ResponseBasedOriginErrorDetectionParametersArgs{...}
type ResponseBasedOriginErrorDetectionParametersInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput
	ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes ResponseBasedDetectedErrorTypesPtrInput `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput).ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersPtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs, ResponseBasedOriginErrorDetectionParametersPtr and ResponseBasedOriginErrorDetectionParametersPtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersPtrInput` via:
//
//	        ResponseBasedOriginErrorDetectionParametersArgs{...}
//
//	or:
//
//	        nil
type ResponseBasedOriginErrorDetectionParametersPtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput
	ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput
}

type responseBasedOriginErrorDetectionParametersPtrType ResponseBasedOriginErrorDetectionParametersArgs

func ResponseBasedOriginErrorDetectionParametersPtr(v *ResponseBasedOriginErrorDetectionParametersArgs) ResponseBasedOriginErrorDetectionParametersPtrInput {
	return (*responseBasedOriginErrorDetectionParametersPtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedOriginErrorDetectionParameters {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedDetectedErrorTypes() ResponseBasedDetectedErrorTypesPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedDetectedErrorTypes {
		return v.ResponseBasedDetectedErrorTypes
	}).(ResponseBasedDetectedErrorTypesPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersPtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) ResponseBasedOriginErrorDetectionParameters {
		if v != nil {
			return *v
		}
		var ret ResponseBasedOriginErrorDetectionParameters
		return ret
	}).(ResponseBasedOriginErrorDetectionParametersOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedDetectedErrorTypes() ResponseBasedDetectedErrorTypesPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *ResponseBasedDetectedErrorTypes {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(ResponseBasedDetectedErrorTypesPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponse struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParametersResponse `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponseOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *string {
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) ResponseBasedOriginErrorDetectionParametersResponse {
		if v != nil {
			return *v
		}
		var ret ResponseBasedOriginErrorDetectionParametersResponse
		return ret
	}).(ResponseBasedOriginErrorDetectionParametersResponseOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// Defines the parameters for the route configuration override action.
type RouteConfigurationOverrideActionParameters struct {
	// The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
	CacheConfiguration *CacheConfiguration `pulumi:"cacheConfiguration"`
	// A reference to the origin group override configuration. Leave empty to use the default origin group on route.
	OriginGroupOverride *OriginGroupOverride `pulumi:"originGroupOverride"`
	TypeName            string               `pulumi:"typeName"`
}

// RouteConfigurationOverrideActionParametersInput is an input type that accepts RouteConfigurationOverrideActionParametersArgs and RouteConfigurationOverrideActionParametersOutput values.
// You can construct a concrete instance of `RouteConfigurationOverrideActionParametersInput` via:
//
//	RouteConfigurationOverrideActionParametersArgs{...}
type RouteConfigurationOverrideActionParametersInput interface {
	pulumi.Input

	ToRouteConfigurationOverrideActionParametersOutput() RouteConfigurationOverrideActionParametersOutput
	ToRouteConfigurationOverrideActionParametersOutputWithContext(context.Context) RouteConfigurationOverrideActionParametersOutput
}

// Defines the parameters for the route configuration override action.
type RouteConfigurationOverrideActionParametersArgs struct {
	// The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
	CacheConfiguration CacheConfigurationPtrInput `pulumi:"cacheConfiguration"`
	// A reference to the origin group override configuration. Leave empty to use the default origin group on route.
	OriginGroupOverride OriginGroupOverridePtrInput `pulumi:"originGroupOverride"`
	TypeName            pulumi.StringInput          `pulumi:"typeName"`
}

func (RouteConfigurationOverrideActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteConfigurationOverrideActionParameters)(nil)).Elem()
}

func (i RouteConfigurationOverrideActionParametersArgs) ToRouteConfigurationOverrideActionParametersOutput() RouteConfigurationOverrideActionParametersOutput {
	return i.ToRouteConfigurationOverrideActionParametersOutputWithContext(context.Background())
}

func (i RouteConfigurationOverrideActionParametersArgs) ToRouteConfigurationOverrideActionParametersOutputWithContext(ctx context.Context) RouteConfigurationOverrideActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteConfigurationOverrideActionParametersOutput)
}

// Defines the parameters for the route configuration override action.
type RouteConfigurationOverrideActionParametersOutput struct{ *pulumi.OutputState }

func (RouteConfigurationOverrideActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteConfigurationOverrideActionParameters)(nil)).Elem()
}

func (o RouteConfigurationOverrideActionParametersOutput) ToRouteConfigurationOverrideActionParametersOutput() RouteConfigurationOverrideActionParametersOutput {
	return o
}

func (o RouteConfigurationOverrideActionParametersOutput) ToRouteConfigurationOverrideActionParametersOutputWithContext(ctx context.Context) RouteConfigurationOverrideActionParametersOutput {
	return o
}

// The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
func (o RouteConfigurationOverrideActionParametersOutput) CacheConfiguration() CacheConfigurationPtrOutput {
	return o.ApplyT(func(v RouteConfigurationOverrideActionParameters) *CacheConfiguration { return v.CacheConfiguration }).(CacheConfigurationPtrOutput)
}

// A reference to the origin group override configuration. Leave empty to use the default origin group on route.
func (o RouteConfigurationOverrideActionParametersOutput) OriginGroupOverride() OriginGroupOverridePtrOutput {
	return o.ApplyT(func(v RouteConfigurationOverrideActionParameters) *OriginGroupOverride { return v.OriginGroupOverride }).(OriginGroupOverridePtrOutput)
}

func (o RouteConfigurationOverrideActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteConfigurationOverrideActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the route configuration override action.
type RouteConfigurationOverrideActionParametersResponse struct {
	// The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
	CacheConfiguration *CacheConfigurationResponse `pulumi:"cacheConfiguration"`
	// A reference to the origin group override configuration. Leave empty to use the default origin group on route.
	OriginGroupOverride *OriginGroupOverrideResponse `pulumi:"originGroupOverride"`
	TypeName            string                       `pulumi:"typeName"`
}

// Defines the parameters for the route configuration override action.
type RouteConfigurationOverrideActionParametersResponseOutput struct{ *pulumi.OutputState }

func (RouteConfigurationOverrideActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteConfigurationOverrideActionParametersResponse)(nil)).Elem()
}

func (o RouteConfigurationOverrideActionParametersResponseOutput) ToRouteConfigurationOverrideActionParametersResponseOutput() RouteConfigurationOverrideActionParametersResponseOutput {
	return o
}

func (o RouteConfigurationOverrideActionParametersResponseOutput) ToRouteConfigurationOverrideActionParametersResponseOutputWithContext(ctx context.Context) RouteConfigurationOverrideActionParametersResponseOutput {
	return o
}

// The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object.
func (o RouteConfigurationOverrideActionParametersResponseOutput) CacheConfiguration() CacheConfigurationResponsePtrOutput {
	return o.ApplyT(func(v RouteConfigurationOverrideActionParametersResponse) *CacheConfigurationResponse {
		return v.CacheConfiguration
	}).(CacheConfigurationResponsePtrOutput)
}

// A reference to the origin group override configuration. Leave empty to use the default origin group on route.
func (o RouteConfigurationOverrideActionParametersResponseOutput) OriginGroupOverride() OriginGroupOverrideResponsePtrOutput {
	return o.ApplyT(func(v RouteConfigurationOverrideActionParametersResponse) *OriginGroupOverrideResponse {
		return v.OriginGroupOverride
	}).(OriginGroupOverrideResponsePtrOutput)
}

func (o RouteConfigurationOverrideActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteConfigurationOverrideActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// settings for security policy patterns to match
type SecurityPolicyWebApplicationFirewallAssociation struct {
	// List of domains.
	Domains []ActivatedResourceReference `pulumi:"domains"`
	// List of paths
	PatternsToMatch []string `pulumi:"patternsToMatch"`
}

// SecurityPolicyWebApplicationFirewallAssociationInput is an input type that accepts SecurityPolicyWebApplicationFirewallAssociationArgs and SecurityPolicyWebApplicationFirewallAssociationOutput values.
// You can construct a concrete instance of `SecurityPolicyWebApplicationFirewallAssociationInput` via:
//
//	SecurityPolicyWebApplicationFirewallAssociationArgs{...}
type SecurityPolicyWebApplicationFirewallAssociationInput interface {
	pulumi.Input

	ToSecurityPolicyWebApplicationFirewallAssociationOutput() SecurityPolicyWebApplicationFirewallAssociationOutput
	ToSecurityPolicyWebApplicationFirewallAssociationOutputWithContext(context.Context) SecurityPolicyWebApplicationFirewallAssociationOutput
}

// settings for security policy patterns to match
type SecurityPolicyWebApplicationFirewallAssociationArgs struct {
	// List of domains.
	Domains ActivatedResourceReferenceArrayInput `pulumi:"domains"`
	// List of paths
	PatternsToMatch pulumi.StringArrayInput `pulumi:"patternsToMatch"`
}

func (SecurityPolicyWebApplicationFirewallAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyWebApplicationFirewallAssociation)(nil)).Elem()
}

func (i SecurityPolicyWebApplicationFirewallAssociationArgs) ToSecurityPolicyWebApplicationFirewallAssociationOutput() SecurityPolicyWebApplicationFirewallAssociationOutput {
	return i.ToSecurityPolicyWebApplicationFirewallAssociationOutputWithContext(context.Background())
}

func (i SecurityPolicyWebApplicationFirewallAssociationArgs) ToSecurityPolicyWebApplicationFirewallAssociationOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyWebApplicationFirewallAssociationOutput)
}

// SecurityPolicyWebApplicationFirewallAssociationArrayInput is an input type that accepts SecurityPolicyWebApplicationFirewallAssociationArray and SecurityPolicyWebApplicationFirewallAssociationArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyWebApplicationFirewallAssociationArrayInput` via:
//
//	SecurityPolicyWebApplicationFirewallAssociationArray{ SecurityPolicyWebApplicationFirewallAssociationArgs{...} }
type SecurityPolicyWebApplicationFirewallAssociationArrayInput interface {
	pulumi.Input

	ToSecurityPolicyWebApplicationFirewallAssociationArrayOutput() SecurityPolicyWebApplicationFirewallAssociationArrayOutput
	ToSecurityPolicyWebApplicationFirewallAssociationArrayOutputWithContext(context.Context) SecurityPolicyWebApplicationFirewallAssociationArrayOutput
}

type SecurityPolicyWebApplicationFirewallAssociationArray []SecurityPolicyWebApplicationFirewallAssociationInput

func (SecurityPolicyWebApplicationFirewallAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyWebApplicationFirewallAssociation)(nil)).Elem()
}

func (i SecurityPolicyWebApplicationFirewallAssociationArray) ToSecurityPolicyWebApplicationFirewallAssociationArrayOutput() SecurityPolicyWebApplicationFirewallAssociationArrayOutput {
	return i.ToSecurityPolicyWebApplicationFirewallAssociationArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyWebApplicationFirewallAssociationArray) ToSecurityPolicyWebApplicationFirewallAssociationArrayOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyWebApplicationFirewallAssociationArrayOutput)
}

// settings for security policy patterns to match
type SecurityPolicyWebApplicationFirewallAssociationOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyWebApplicationFirewallAssociation)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallAssociationOutput) ToSecurityPolicyWebApplicationFirewallAssociationOutput() SecurityPolicyWebApplicationFirewallAssociationOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallAssociationOutput) ToSecurityPolicyWebApplicationFirewallAssociationOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallAssociationOutput {
	return o
}

// List of domains.
func (o SecurityPolicyWebApplicationFirewallAssociationOutput) Domains() ActivatedResourceReferenceArrayOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallAssociation) []ActivatedResourceReference { return v.Domains }).(ActivatedResourceReferenceArrayOutput)
}

// List of paths
func (o SecurityPolicyWebApplicationFirewallAssociationOutput) PatternsToMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallAssociation) []string { return v.PatternsToMatch }).(pulumi.StringArrayOutput)
}

type SecurityPolicyWebApplicationFirewallAssociationArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyWebApplicationFirewallAssociation)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallAssociationArrayOutput) ToSecurityPolicyWebApplicationFirewallAssociationArrayOutput() SecurityPolicyWebApplicationFirewallAssociationArrayOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallAssociationArrayOutput) ToSecurityPolicyWebApplicationFirewallAssociationArrayOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallAssociationArrayOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallAssociationArrayOutput) Index(i pulumi.IntInput) SecurityPolicyWebApplicationFirewallAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyWebApplicationFirewallAssociation {
		return vs[0].([]SecurityPolicyWebApplicationFirewallAssociation)[vs[1].(int)]
	}).(SecurityPolicyWebApplicationFirewallAssociationOutput)
}

// settings for security policy patterns to match
type SecurityPolicyWebApplicationFirewallAssociationResponse struct {
	// List of domains.
	Domains []ActivatedResourceReferenceResponse `pulumi:"domains"`
	// List of paths
	PatternsToMatch []string `pulumi:"patternsToMatch"`
}

// settings for security policy patterns to match
type SecurityPolicyWebApplicationFirewallAssociationResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallAssociationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyWebApplicationFirewallAssociationResponse)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallAssociationResponseOutput) ToSecurityPolicyWebApplicationFirewallAssociationResponseOutput() SecurityPolicyWebApplicationFirewallAssociationResponseOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallAssociationResponseOutput) ToSecurityPolicyWebApplicationFirewallAssociationResponseOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallAssociationResponseOutput {
	return o
}

// List of domains.
func (o SecurityPolicyWebApplicationFirewallAssociationResponseOutput) Domains() ActivatedResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallAssociationResponse) []ActivatedResourceReferenceResponse {
		return v.Domains
	}).(ActivatedResourceReferenceResponseArrayOutput)
}

// List of paths
func (o SecurityPolicyWebApplicationFirewallAssociationResponseOutput) PatternsToMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallAssociationResponse) []string { return v.PatternsToMatch }).(pulumi.StringArrayOutput)
}

type SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyWebApplicationFirewallAssociationResponse)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput) ToSecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput() SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput) ToSecurityPolicyWebApplicationFirewallAssociationResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyWebApplicationFirewallAssociationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyWebApplicationFirewallAssociationResponse {
		return vs[0].([]SecurityPolicyWebApplicationFirewallAssociationResponse)[vs[1].(int)]
	}).(SecurityPolicyWebApplicationFirewallAssociationResponseOutput)
}

// The json object containing security policy waf parameters
type SecurityPolicyWebApplicationFirewallParameters struct {
	// Waf associations
	Associations []SecurityPolicyWebApplicationFirewallAssociation `pulumi:"associations"`
	// The type of the Security policy to create.
	// Expected value is 'WebApplicationFirewall'.
	Type string `pulumi:"type"`
	// Resource ID.
	WafPolicy *ResourceReference `pulumi:"wafPolicy"`
}

// SecurityPolicyWebApplicationFirewallParametersInput is an input type that accepts SecurityPolicyWebApplicationFirewallParametersArgs and SecurityPolicyWebApplicationFirewallParametersOutput values.
// You can construct a concrete instance of `SecurityPolicyWebApplicationFirewallParametersInput` via:
//
//	SecurityPolicyWebApplicationFirewallParametersArgs{...}
type SecurityPolicyWebApplicationFirewallParametersInput interface {
	pulumi.Input

	ToSecurityPolicyWebApplicationFirewallParametersOutput() SecurityPolicyWebApplicationFirewallParametersOutput
	ToSecurityPolicyWebApplicationFirewallParametersOutputWithContext(context.Context) SecurityPolicyWebApplicationFirewallParametersOutput
}

// The json object containing security policy waf parameters
type SecurityPolicyWebApplicationFirewallParametersArgs struct {
	// Waf associations
	Associations SecurityPolicyWebApplicationFirewallAssociationArrayInput `pulumi:"associations"`
	// The type of the Security policy to create.
	// Expected value is 'WebApplicationFirewall'.
	Type pulumi.StringInput `pulumi:"type"`
	// Resource ID.
	WafPolicy ResourceReferencePtrInput `pulumi:"wafPolicy"`
}

func (SecurityPolicyWebApplicationFirewallParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyWebApplicationFirewallParameters)(nil)).Elem()
}

func (i SecurityPolicyWebApplicationFirewallParametersArgs) ToSecurityPolicyWebApplicationFirewallParametersOutput() SecurityPolicyWebApplicationFirewallParametersOutput {
	return i.ToSecurityPolicyWebApplicationFirewallParametersOutputWithContext(context.Background())
}

func (i SecurityPolicyWebApplicationFirewallParametersArgs) ToSecurityPolicyWebApplicationFirewallParametersOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyWebApplicationFirewallParametersOutput)
}

func (i SecurityPolicyWebApplicationFirewallParametersArgs) ToSecurityPolicyWebApplicationFirewallParametersPtrOutput() SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return i.ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyWebApplicationFirewallParametersArgs) ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyWebApplicationFirewallParametersOutput).ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(ctx)
}

// SecurityPolicyWebApplicationFirewallParametersPtrInput is an input type that accepts SecurityPolicyWebApplicationFirewallParametersArgs, SecurityPolicyWebApplicationFirewallParametersPtr and SecurityPolicyWebApplicationFirewallParametersPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyWebApplicationFirewallParametersPtrInput` via:
//
//	        SecurityPolicyWebApplicationFirewallParametersArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyWebApplicationFirewallParametersPtrInput interface {
	pulumi.Input

	ToSecurityPolicyWebApplicationFirewallParametersPtrOutput() SecurityPolicyWebApplicationFirewallParametersPtrOutput
	ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(context.Context) SecurityPolicyWebApplicationFirewallParametersPtrOutput
}

type securityPolicyWebApplicationFirewallParametersPtrType SecurityPolicyWebApplicationFirewallParametersArgs

func SecurityPolicyWebApplicationFirewallParametersPtr(v *SecurityPolicyWebApplicationFirewallParametersArgs) SecurityPolicyWebApplicationFirewallParametersPtrInput {
	return (*securityPolicyWebApplicationFirewallParametersPtrType)(v)
}

func (*securityPolicyWebApplicationFirewallParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyWebApplicationFirewallParameters)(nil)).Elem()
}

func (i *securityPolicyWebApplicationFirewallParametersPtrType) ToSecurityPolicyWebApplicationFirewallParametersPtrOutput() SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return i.ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(context.Background())
}

func (i *securityPolicyWebApplicationFirewallParametersPtrType) ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyWebApplicationFirewallParametersPtrOutput)
}

// The json object containing security policy waf parameters
type SecurityPolicyWebApplicationFirewallParametersOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyWebApplicationFirewallParameters)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallParametersOutput) ToSecurityPolicyWebApplicationFirewallParametersOutput() SecurityPolicyWebApplicationFirewallParametersOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersOutput) ToSecurityPolicyWebApplicationFirewallParametersOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersOutput) ToSecurityPolicyWebApplicationFirewallParametersPtrOutput() SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return o.ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyWebApplicationFirewallParametersOutput) ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyWebApplicationFirewallParameters) *SecurityPolicyWebApplicationFirewallParameters {
		return &v
	}).(SecurityPolicyWebApplicationFirewallParametersPtrOutput)
}

// Waf associations
func (o SecurityPolicyWebApplicationFirewallParametersOutput) Associations() SecurityPolicyWebApplicationFirewallAssociationArrayOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallParameters) []SecurityPolicyWebApplicationFirewallAssociation {
		return v.Associations
	}).(SecurityPolicyWebApplicationFirewallAssociationArrayOutput)
}

// The type of the Security policy to create.
// Expected value is 'WebApplicationFirewall'.
func (o SecurityPolicyWebApplicationFirewallParametersOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallParameters) string { return v.Type }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityPolicyWebApplicationFirewallParametersOutput) WafPolicy() ResourceReferencePtrOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallParameters) *ResourceReference { return v.WafPolicy }).(ResourceReferencePtrOutput)
}

type SecurityPolicyWebApplicationFirewallParametersPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyWebApplicationFirewallParameters)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallParametersPtrOutput) ToSecurityPolicyWebApplicationFirewallParametersPtrOutput() SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersPtrOutput) ToSecurityPolicyWebApplicationFirewallParametersPtrOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersPtrOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersPtrOutput) Elem() SecurityPolicyWebApplicationFirewallParametersOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParameters) SecurityPolicyWebApplicationFirewallParameters {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyWebApplicationFirewallParameters
		return ret
	}).(SecurityPolicyWebApplicationFirewallParametersOutput)
}

// Waf associations
func (o SecurityPolicyWebApplicationFirewallParametersPtrOutput) Associations() SecurityPolicyWebApplicationFirewallAssociationArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParameters) []SecurityPolicyWebApplicationFirewallAssociation {
		if v == nil {
			return nil
		}
		return v.Associations
	}).(SecurityPolicyWebApplicationFirewallAssociationArrayOutput)
}

// The type of the Security policy to create.
// Expected value is 'WebApplicationFirewall'.
func (o SecurityPolicyWebApplicationFirewallParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityPolicyWebApplicationFirewallParametersPtrOutput) WafPolicy() ResourceReferencePtrOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParameters) *ResourceReference {
		if v == nil {
			return nil
		}
		return v.WafPolicy
	}).(ResourceReferencePtrOutput)
}

// The json object containing security policy waf parameters
type SecurityPolicyWebApplicationFirewallParametersResponse struct {
	// Waf associations
	Associations []SecurityPolicyWebApplicationFirewallAssociationResponse `pulumi:"associations"`
	// The type of the Security policy to create.
	// Expected value is 'WebApplicationFirewall'.
	Type string `pulumi:"type"`
	// Resource ID.
	WafPolicy *ResourceReferenceResponse `pulumi:"wafPolicy"`
}

// The json object containing security policy waf parameters
type SecurityPolicyWebApplicationFirewallParametersResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyWebApplicationFirewallParametersResponse)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallParametersResponseOutput) ToSecurityPolicyWebApplicationFirewallParametersResponseOutput() SecurityPolicyWebApplicationFirewallParametersResponseOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersResponseOutput) ToSecurityPolicyWebApplicationFirewallParametersResponseOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersResponseOutput {
	return o
}

// Waf associations
func (o SecurityPolicyWebApplicationFirewallParametersResponseOutput) Associations() SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallParametersResponse) []SecurityPolicyWebApplicationFirewallAssociationResponse {
		return v.Associations
	}).(SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput)
}

// The type of the Security policy to create.
// Expected value is 'WebApplicationFirewall'.
func (o SecurityPolicyWebApplicationFirewallParametersResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallParametersResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityPolicyWebApplicationFirewallParametersResponseOutput) WafPolicy() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v SecurityPolicyWebApplicationFirewallParametersResponse) *ResourceReferenceResponse {
		return v.WafPolicy
	}).(ResourceReferenceResponsePtrOutput)
}

type SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyWebApplicationFirewallParametersResponse)(nil)).Elem()
}

func (o SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) ToSecurityPolicyWebApplicationFirewallParametersResponsePtrOutput() SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) ToSecurityPolicyWebApplicationFirewallParametersResponsePtrOutputWithContext(ctx context.Context) SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput {
	return o
}

func (o SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) Elem() SecurityPolicyWebApplicationFirewallParametersResponseOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParametersResponse) SecurityPolicyWebApplicationFirewallParametersResponse {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyWebApplicationFirewallParametersResponse
		return ret
	}).(SecurityPolicyWebApplicationFirewallParametersResponseOutput)
}

// Waf associations
func (o SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) Associations() SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParametersResponse) []SecurityPolicyWebApplicationFirewallAssociationResponse {
		if v == nil {
			return nil
		}
		return v.Associations
	}).(SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput)
}

// The type of the Security policy to create.
// Expected value is 'WebApplicationFirewall'.
func (o SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput) WafPolicy() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *SecurityPolicyWebApplicationFirewallParametersResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.WafPolicy
	}).(ResourceReferenceResponsePtrOutput)
}

// Defines the parameters for ServerPort match conditions
type ServerPortMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for ServerPortMatchConditionParameters
func (val *ServerPortMatchConditionParameters) Defaults() *ServerPortMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// ServerPortMatchConditionParametersInput is an input type that accepts ServerPortMatchConditionParametersArgs and ServerPortMatchConditionParametersOutput values.
// You can construct a concrete instance of `ServerPortMatchConditionParametersInput` via:
//
//	ServerPortMatchConditionParametersArgs{...}
type ServerPortMatchConditionParametersInput interface {
	pulumi.Input

	ToServerPortMatchConditionParametersOutput() ServerPortMatchConditionParametersOutput
	ToServerPortMatchConditionParametersOutputWithContext(context.Context) ServerPortMatchConditionParametersOutput
}

// Defines the parameters for ServerPort match conditions
type ServerPortMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for ServerPortMatchConditionParametersArgs
func (val *ServerPortMatchConditionParametersArgs) Defaults() *ServerPortMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ServerPortMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPortMatchConditionParameters)(nil)).Elem()
}

func (i ServerPortMatchConditionParametersArgs) ToServerPortMatchConditionParametersOutput() ServerPortMatchConditionParametersOutput {
	return i.ToServerPortMatchConditionParametersOutputWithContext(context.Background())
}

func (i ServerPortMatchConditionParametersArgs) ToServerPortMatchConditionParametersOutputWithContext(ctx context.Context) ServerPortMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPortMatchConditionParametersOutput)
}

// Defines the parameters for ServerPort match conditions
type ServerPortMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (ServerPortMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPortMatchConditionParameters)(nil)).Elem()
}

func (o ServerPortMatchConditionParametersOutput) ToServerPortMatchConditionParametersOutput() ServerPortMatchConditionParametersOutput {
	return o
}

func (o ServerPortMatchConditionParametersOutput) ToServerPortMatchConditionParametersOutputWithContext(ctx context.Context) ServerPortMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o ServerPortMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o ServerPortMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o ServerPortMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o ServerPortMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o ServerPortMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for ServerPort match conditions
type ServerPortMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for ServerPortMatchConditionParametersResponse
func (val *ServerPortMatchConditionParametersResponse) Defaults() *ServerPortMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for ServerPort match conditions
type ServerPortMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (ServerPortMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPortMatchConditionParametersResponse)(nil)).Elem()
}

func (o ServerPortMatchConditionParametersResponseOutput) ToServerPortMatchConditionParametersResponseOutput() ServerPortMatchConditionParametersResponseOutput {
	return o
}

func (o ServerPortMatchConditionParametersResponseOutput) ToServerPortMatchConditionParametersResponseOutputWithContext(ctx context.Context) ServerPortMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o ServerPortMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o ServerPortMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o ServerPortMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o ServerPortMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o ServerPortMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPortMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
type SharedPrivateLinkResourceProperties struct {
	// The group id from the provider of resource the shared private link resource is for.
	GroupId *string `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLink *ResourceReference `pulumi:"privateLink"`
	// The location of the shared private link resource
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage *string `pulumi:"requestMessage"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
	Status *SharedPrivateLinkResourceStatus `pulumi:"status"`
}

// SharedPrivateLinkResourcePropertiesInput is an input type that accepts SharedPrivateLinkResourcePropertiesArgs and SharedPrivateLinkResourcePropertiesOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourcePropertiesInput` via:
//
//	SharedPrivateLinkResourcePropertiesArgs{...}
type SharedPrivateLinkResourcePropertiesInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourcePropertiesOutput() SharedPrivateLinkResourcePropertiesOutput
	ToSharedPrivateLinkResourcePropertiesOutputWithContext(context.Context) SharedPrivateLinkResourcePropertiesOutput
}

// Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
type SharedPrivateLinkResourcePropertiesArgs struct {
	// The group id from the provider of resource the shared private link resource is for.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLink ResourceReferencePtrInput `pulumi:"privateLink"`
	// The location of the shared private link resource
	PrivateLinkLocation pulumi.StringPtrInput `pulumi:"privateLinkLocation"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
	Status SharedPrivateLinkResourceStatusPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesOutput() SharedPrivateLinkResourcePropertiesOutput {
	return i.ToSharedPrivateLinkResourcePropertiesOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourcePropertiesOutput)
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return i.ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourcePropertiesArgs) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourcePropertiesOutput).ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx)
}

// SharedPrivateLinkResourcePropertiesPtrInput is an input type that accepts SharedPrivateLinkResourcePropertiesArgs, SharedPrivateLinkResourcePropertiesPtr and SharedPrivateLinkResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourcePropertiesPtrInput` via:
//
//	        SharedPrivateLinkResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type SharedPrivateLinkResourcePropertiesPtrInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput
	ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Context) SharedPrivateLinkResourcePropertiesPtrOutput
}

type sharedPrivateLinkResourcePropertiesPtrType SharedPrivateLinkResourcePropertiesArgs

func SharedPrivateLinkResourcePropertiesPtr(v *SharedPrivateLinkResourcePropertiesArgs) SharedPrivateLinkResourcePropertiesPtrInput {
	return (*sharedPrivateLinkResourcePropertiesPtrType)(v)
}

func (*sharedPrivateLinkResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (i *sharedPrivateLinkResourcePropertiesPtrType) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return i.ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *sharedPrivateLinkResourcePropertiesPtrType) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourcePropertiesPtrOutput)
}

// Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
type SharedPrivateLinkResourcePropertiesOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesOutput() SharedPrivateLinkResourcePropertiesOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return o.ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o SharedPrivateLinkResourcePropertiesOutput) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SharedPrivateLinkResourceProperties) *SharedPrivateLinkResourceProperties {
		return &v
	}).(SharedPrivateLinkResourcePropertiesPtrOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesOutput) PrivateLink() ResourceReferencePtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *ResourceReference { return v.PrivateLink }).(ResourceReferencePtrOutput)
}

// The location of the shared private link resource
func (o SharedPrivateLinkResourcePropertiesOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
func (o SharedPrivateLinkResourcePropertiesOutput) Status() SharedPrivateLinkResourceStatusPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceProperties) *SharedPrivateLinkResourceStatus { return v.Status }).(SharedPrivateLinkResourceStatusPtrOutput)
}

type SharedPrivateLinkResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResourceProperties)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesPtrOutput) ToSharedPrivateLinkResourcePropertiesPtrOutput() SharedPrivateLinkResourcePropertiesPtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesPtrOutput) ToSharedPrivateLinkResourcePropertiesPtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesPtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesPtrOutput) Elem() SharedPrivateLinkResourcePropertiesOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) SharedPrivateLinkResourceProperties {
		if v != nil {
			return *v
		}
		var ret SharedPrivateLinkResourceProperties
		return ret
	}).(SharedPrivateLinkResourcePropertiesOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) PrivateLink() ResourceReferencePtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *ResourceReference {
		if v == nil {
			return nil
		}
		return v.PrivateLink
	}).(ResourceReferencePtrOutput)
}

// The location of the shared private link resource
func (o SharedPrivateLinkResourcePropertiesPtrOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkLocation
	}).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RequestMessage
	}).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
func (o SharedPrivateLinkResourcePropertiesPtrOutput) Status() SharedPrivateLinkResourceStatusPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourceProperties) *SharedPrivateLinkResourceStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SharedPrivateLinkResourceStatusPtrOutput)
}

// Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
type SharedPrivateLinkResourcePropertiesResponse struct {
	// The group id from the provider of resource the shared private link resource is for.
	GroupId *string `pulumi:"groupId"`
	// The resource id of the resource the shared private link resource is for.
	PrivateLink *ResourceReferenceResponse `pulumi:"privateLink"`
	// The location of the shared private link resource
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The request message for requesting approval of the shared private link resource.
	RequestMessage *string `pulumi:"requestMessage"`
	// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
	Status *string `pulumi:"status"`
}

// Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
type SharedPrivateLinkResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourcePropertiesResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesResponseOutput) ToSharedPrivateLinkResourcePropertiesResponseOutput() SharedPrivateLinkResourcePropertiesResponseOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesResponseOutput) ToSharedPrivateLinkResourcePropertiesResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesResponseOutput {
	return o
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) PrivateLink() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *ResourceReferenceResponse { return v.PrivateLink }).(ResourceReferenceResponsePtrOutput)
}

// The location of the shared private link resource
func (o SharedPrivateLinkResourcePropertiesResponseOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
func (o SharedPrivateLinkResourcePropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourcePropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedPrivateLinkResourcePropertiesResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) ToSharedPrivateLinkResourcePropertiesResponsePtrOutput() SharedPrivateLinkResourcePropertiesResponsePtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) ToSharedPrivateLinkResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) SharedPrivateLinkResourcePropertiesResponsePtrOutput {
	return o
}

func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) Elem() SharedPrivateLinkResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) SharedPrivateLinkResourcePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SharedPrivateLinkResourcePropertiesResponse
		return ret
	}).(SharedPrivateLinkResourcePropertiesResponseOutput)
}

// The group id from the provider of resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The resource id of the resource the shared private link resource is for.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) PrivateLink() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLink
	}).(ResourceReferenceResponsePtrOutput)
}

// The location of the shared private link resource
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkLocation
	}).(pulumi.StringPtrOutput)
}

// The request message for requesting approval of the shared private link resource.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestMessage
	}).(pulumi.StringPtrOutput)
}

// Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
func (o SharedPrivateLinkResourcePropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedPrivateLinkResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
// Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
// Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
// Standard_Akamai = The SKU name for an Akamai CDN profile.
// Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
// Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
// Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
// Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
// Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
// Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
// StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
// StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
// StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
// Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
// Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
// Standard_Akamai = The SKU name for an Akamai CDN profile.
// Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
// Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
// Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
// Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
// Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
// Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
// StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
// StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
// StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
// Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
// Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
// Standard_Akamai = The SKU name for an Akamai CDN profile.
// Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
// Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
// Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
// Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
// Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
// Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
// StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
// StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
// StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
// Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
// Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
// Standard_Akamai = The SKU name for an Akamai CDN profile.
// Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
// Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
// Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
// Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
// Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
// Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
// StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
// StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
// StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// Standard_Verizon = The SKU name for a Standard Verizon CDN profile.
// Premium_Verizon = The SKU name for a Premium Verizon CDN profile.
// Custom_Verizon = The SKU name for a Custom Verizon CDN profile.
// Standard_Akamai = The SKU name for an Akamai CDN profile.
// Standard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.
// Standard_Microsoft = The SKU name for a Standard Microsoft CDN profile.
// Standard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.
// Premium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.
// Standard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.
// Standard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.
// StandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.
// StandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.
// StandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines the parameters for SocketAddress match conditions
type SocketAddrMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for SocketAddrMatchConditionParameters
func (val *SocketAddrMatchConditionParameters) Defaults() *SocketAddrMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// SocketAddrMatchConditionParametersInput is an input type that accepts SocketAddrMatchConditionParametersArgs and SocketAddrMatchConditionParametersOutput values.
// You can construct a concrete instance of `SocketAddrMatchConditionParametersInput` via:
//
//	SocketAddrMatchConditionParametersArgs{...}
type SocketAddrMatchConditionParametersInput interface {
	pulumi.Input

	ToSocketAddrMatchConditionParametersOutput() SocketAddrMatchConditionParametersOutput
	ToSocketAddrMatchConditionParametersOutputWithContext(context.Context) SocketAddrMatchConditionParametersOutput
}

// Defines the parameters for SocketAddress match conditions
type SocketAddrMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for SocketAddrMatchConditionParametersArgs
func (val *SocketAddrMatchConditionParametersArgs) Defaults() *SocketAddrMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (SocketAddrMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SocketAddrMatchConditionParameters)(nil)).Elem()
}

func (i SocketAddrMatchConditionParametersArgs) ToSocketAddrMatchConditionParametersOutput() SocketAddrMatchConditionParametersOutput {
	return i.ToSocketAddrMatchConditionParametersOutputWithContext(context.Background())
}

func (i SocketAddrMatchConditionParametersArgs) ToSocketAddrMatchConditionParametersOutputWithContext(ctx context.Context) SocketAddrMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocketAddrMatchConditionParametersOutput)
}

// Defines the parameters for SocketAddress match conditions
type SocketAddrMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (SocketAddrMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SocketAddrMatchConditionParameters)(nil)).Elem()
}

func (o SocketAddrMatchConditionParametersOutput) ToSocketAddrMatchConditionParametersOutput() SocketAddrMatchConditionParametersOutput {
	return o
}

func (o SocketAddrMatchConditionParametersOutput) ToSocketAddrMatchConditionParametersOutputWithContext(ctx context.Context) SocketAddrMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o SocketAddrMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o SocketAddrMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o SocketAddrMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o SocketAddrMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o SocketAddrMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for SocketAddress match conditions
type SocketAddrMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for SocketAddrMatchConditionParametersResponse
func (val *SocketAddrMatchConditionParametersResponse) Defaults() *SocketAddrMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for SocketAddress match conditions
type SocketAddrMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (SocketAddrMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SocketAddrMatchConditionParametersResponse)(nil)).Elem()
}

func (o SocketAddrMatchConditionParametersResponseOutput) ToSocketAddrMatchConditionParametersResponseOutput() SocketAddrMatchConditionParametersResponseOutput {
	return o
}

func (o SocketAddrMatchConditionParametersResponseOutput) ToSocketAddrMatchConditionParametersResponseOutputWithContext(ctx context.Context) SocketAddrMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o SocketAddrMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o SocketAddrMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o SocketAddrMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o SocketAddrMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o SocketAddrMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v SocketAddrMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for SslProtocol match conditions
type SslProtocolMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for SslProtocolMatchConditionParameters
func (val *SslProtocolMatchConditionParameters) Defaults() *SslProtocolMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// SslProtocolMatchConditionParametersInput is an input type that accepts SslProtocolMatchConditionParametersArgs and SslProtocolMatchConditionParametersOutput values.
// You can construct a concrete instance of `SslProtocolMatchConditionParametersInput` via:
//
//	SslProtocolMatchConditionParametersArgs{...}
type SslProtocolMatchConditionParametersInput interface {
	pulumi.Input

	ToSslProtocolMatchConditionParametersOutput() SslProtocolMatchConditionParametersOutput
	ToSslProtocolMatchConditionParametersOutputWithContext(context.Context) SslProtocolMatchConditionParametersOutput
}

// Defines the parameters for SslProtocol match conditions
type SslProtocolMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for SslProtocolMatchConditionParametersArgs
func (val *SslProtocolMatchConditionParametersArgs) Defaults() *SslProtocolMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (SslProtocolMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslProtocolMatchConditionParameters)(nil)).Elem()
}

func (i SslProtocolMatchConditionParametersArgs) ToSslProtocolMatchConditionParametersOutput() SslProtocolMatchConditionParametersOutput {
	return i.ToSslProtocolMatchConditionParametersOutputWithContext(context.Background())
}

func (i SslProtocolMatchConditionParametersArgs) ToSslProtocolMatchConditionParametersOutputWithContext(ctx context.Context) SslProtocolMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslProtocolMatchConditionParametersOutput)
}

// Defines the parameters for SslProtocol match conditions
type SslProtocolMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (SslProtocolMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslProtocolMatchConditionParameters)(nil)).Elem()
}

func (o SslProtocolMatchConditionParametersOutput) ToSslProtocolMatchConditionParametersOutput() SslProtocolMatchConditionParametersOutput {
	return o
}

func (o SslProtocolMatchConditionParametersOutput) ToSslProtocolMatchConditionParametersOutputWithContext(ctx context.Context) SslProtocolMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o SslProtocolMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o SslProtocolMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o SslProtocolMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o SslProtocolMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o SslProtocolMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for SslProtocol match conditions
type SslProtocolMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for SslProtocolMatchConditionParametersResponse
func (val *SslProtocolMatchConditionParametersResponse) Defaults() *SslProtocolMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for SslProtocol match conditions
type SslProtocolMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (SslProtocolMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslProtocolMatchConditionParametersResponse)(nil)).Elem()
}

func (o SslProtocolMatchConditionParametersResponseOutput) ToSslProtocolMatchConditionParametersResponseOutput() SslProtocolMatchConditionParametersResponseOutput {
	return o
}

func (o SslProtocolMatchConditionParametersResponseOutput) ToSslProtocolMatchConditionParametersResponseOutputWithContext(ctx context.Context) SslProtocolMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o SslProtocolMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o SslProtocolMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o SslProtocolMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o SslProtocolMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o SslProtocolMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v SslProtocolMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Read only system data
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC)
	CreatedAt *string `pulumi:"createdAt"`
	// An identifier for the identity that created the resource
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// An identifier for the identity that last modified the resource
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Read only system data
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC)
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// An identifier for the identity that created the resource
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// An identifier for the identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlFileExtensionMatchConditionParameters
func (val *UrlFileExtensionMatchConditionParameters) Defaults() *UrlFileExtensionMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// UrlFileExtensionMatchConditionParametersInput is an input type that accepts UrlFileExtensionMatchConditionParametersArgs and UrlFileExtensionMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlFileExtensionMatchConditionParametersInput` via:
//
//	UrlFileExtensionMatchConditionParametersArgs{...}
type UrlFileExtensionMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput
	ToUrlFileExtensionMatchConditionParametersOutputWithContext(context.Context) UrlFileExtensionMatchConditionParametersOutput
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlFileExtensionMatchConditionParametersArgs
func (val *UrlFileExtensionMatchConditionParametersArgs) Defaults() *UrlFileExtensionMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (UrlFileExtensionMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParameters)(nil)).Elem()
}

func (i UrlFileExtensionMatchConditionParametersArgs) ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput {
	return i.ToUrlFileExtensionMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlFileExtensionMatchConditionParametersArgs) ToUrlFileExtensionMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileExtensionMatchConditionParametersOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (UrlFileExtensionMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParameters)(nil)).Elem()
}

func (o UrlFileExtensionMatchConditionParametersOutput) ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput {
	return o
}

func (o UrlFileExtensionMatchConditionParametersOutput) ToUrlFileExtensionMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileExtensionMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileExtensionMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o UrlFileExtensionMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileExtensionMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o UrlFileExtensionMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlFileExtensionMatchConditionParametersResponse
func (val *UrlFileExtensionMatchConditionParametersResponse) Defaults() *UrlFileExtensionMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlFileExtensionMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) ToUrlFileExtensionMatchConditionParametersResponseOutput() UrlFileExtensionMatchConditionParametersResponseOutput {
	return o
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) ToUrlFileExtensionMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileExtensionMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileExtensionMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o UrlFileExtensionMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileExtensionMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlFileNameMatchConditionParameters
func (val *UrlFileNameMatchConditionParameters) Defaults() *UrlFileNameMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// UrlFileNameMatchConditionParametersInput is an input type that accepts UrlFileNameMatchConditionParametersArgs and UrlFileNameMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlFileNameMatchConditionParametersInput` via:
//
//	UrlFileNameMatchConditionParametersArgs{...}
type UrlFileNameMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput
	ToUrlFileNameMatchConditionParametersOutputWithContext(context.Context) UrlFileNameMatchConditionParametersOutput
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlFileNameMatchConditionParametersArgs
func (val *UrlFileNameMatchConditionParametersArgs) Defaults() *UrlFileNameMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (UrlFileNameMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParameters)(nil)).Elem()
}

func (i UrlFileNameMatchConditionParametersArgs) ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput {
	return i.ToUrlFileNameMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlFileNameMatchConditionParametersArgs) ToUrlFileNameMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileNameMatchConditionParametersOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (UrlFileNameMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParameters)(nil)).Elem()
}

func (o UrlFileNameMatchConditionParametersOutput) ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput {
	return o
}

func (o UrlFileNameMatchConditionParametersOutput) ToUrlFileNameMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileNameMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileNameMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o UrlFileNameMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileNameMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o UrlFileNameMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlFileNameMatchConditionParametersResponse
func (val *UrlFileNameMatchConditionParametersResponse) Defaults() *UrlFileNameMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlFileNameMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlFileNameMatchConditionParametersResponseOutput) ToUrlFileNameMatchConditionParametersResponseOutput() UrlFileNameMatchConditionParametersResponseOutput {
	return o
}

func (o UrlFileNameMatchConditionParametersResponseOutput) ToUrlFileNameMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileNameMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileNameMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o UrlFileNameMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileNameMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o UrlFileNameMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlPathMatchConditionParameters
func (val *UrlPathMatchConditionParameters) Defaults() *UrlPathMatchConditionParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// UrlPathMatchConditionParametersInput is an input type that accepts UrlPathMatchConditionParametersArgs and UrlPathMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlPathMatchConditionParametersInput` via:
//
//	UrlPathMatchConditionParametersArgs{...}
type UrlPathMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput
	ToUrlPathMatchConditionParametersOutputWithContext(context.Context) UrlPathMatchConditionParametersOutput
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
	TypeName   pulumi.StringInput      `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlPathMatchConditionParametersArgs
func (val *UrlPathMatchConditionParametersArgs) Defaults() *UrlPathMatchConditionParametersArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		tmp.NegateCondition = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (UrlPathMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParameters)(nil)).Elem()
}

func (i UrlPathMatchConditionParametersArgs) ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput {
	return i.ToUrlPathMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlPathMatchConditionParametersArgs) ToUrlPathMatchConditionParametersOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPathMatchConditionParametersOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (UrlPathMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParameters)(nil)).Elem()
}

func (o UrlPathMatchConditionParametersOutput) ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput {
	return o
}

func (o UrlPathMatchConditionParametersOutput) ToUrlPathMatchConditionParametersOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlPathMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlPathMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o UrlPathMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlPathMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o UrlPathMatchConditionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
	TypeName   string   `pulumi:"typeName"`
}

// Defaults sets the appropriate defaults for UrlPathMatchConditionParametersResponse
func (val *UrlPathMatchConditionParametersResponse) Defaults() *UrlPathMatchConditionParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.NegateCondition == nil {
		negateCondition_ := false
		tmp.NegateCondition = &negateCondition_
	}
	return &tmp
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlPathMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlPathMatchConditionParametersResponseOutput) ToUrlPathMatchConditionParametersResponseOutput() UrlPathMatchConditionParametersResponseOutput {
	return o
}

func (o UrlPathMatchConditionParametersResponseOutput) ToUrlPathMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlPathMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlPathMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o UrlPathMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlPathMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

func (o UrlPathMatchConditionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParameters `pulumi:"parameters"`
}

// UrlRedirectActionInput is an input type that accepts UrlRedirectActionArgs and UrlRedirectActionOutput values.
// You can construct a concrete instance of `UrlRedirectActionInput` via:
//
//	UrlRedirectActionArgs{...}
type UrlRedirectActionInput interface {
	pulumi.Input

	ToUrlRedirectActionOutput() UrlRedirectActionOutput
	ToUrlRedirectActionOutputWithContext(context.Context) UrlRedirectActionOutput
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersInput `pulumi:"parameters"`
}

func (UrlRedirectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectAction)(nil)).Elem()
}

func (i UrlRedirectActionArgs) ToUrlRedirectActionOutput() UrlRedirectActionOutput {
	return i.ToUrlRedirectActionOutputWithContext(context.Background())
}

func (i UrlRedirectActionArgs) ToUrlRedirectActionOutputWithContext(ctx context.Context) UrlRedirectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectAction)(nil)).Elem()
}

func (o UrlRedirectActionOutput) ToUrlRedirectActionOutput() UrlRedirectActionOutput {
	return o
}

func (o UrlRedirectActionOutput) ToUrlRedirectActionOutputWithContext(ctx context.Context) UrlRedirectActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRedirect'.
func (o UrlRedirectActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRedirectActionOutput) Parameters() UrlRedirectActionParametersOutput {
	return o.ApplyT(func(v UrlRedirectAction) UrlRedirectActionParameters { return v.Parameters }).(UrlRedirectActionParametersOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParameters struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
	TypeName     string `pulumi:"typeName"`
}

// UrlRedirectActionParametersInput is an input type that accepts UrlRedirectActionParametersArgs and UrlRedirectActionParametersOutput values.
// You can construct a concrete instance of `UrlRedirectActionParametersInput` via:
//
//	UrlRedirectActionParametersArgs{...}
type UrlRedirectActionParametersInput interface {
	pulumi.Input

	ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput
	ToUrlRedirectActionParametersOutputWithContext(context.Context) UrlRedirectActionParametersOutput
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname pulumi.StringPtrInput `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol pulumi.StringPtrInput `pulumi:"destinationProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringInput `pulumi:"redirectType"`
	TypeName     pulumi.StringInput `pulumi:"typeName"`
}

func (UrlRedirectActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParameters)(nil)).Elem()
}

func (i UrlRedirectActionParametersArgs) ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput {
	return i.ToUrlRedirectActionParametersOutputWithContext(context.Background())
}

func (i UrlRedirectActionParametersArgs) ToUrlRedirectActionParametersOutputWithContext(ctx context.Context) UrlRedirectActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionParametersOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParameters)(nil)).Elem()
}

func (o UrlRedirectActionParametersOutput) ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput {
	return o
}

func (o UrlRedirectActionParametersOutput) ToUrlRedirectActionParametersOutputWithContext(ctx context.Context) UrlRedirectActionParametersOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o UrlRedirectActionParametersOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o UrlRedirectActionParametersOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o UrlRedirectActionParametersOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
func (o UrlRedirectActionParametersOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Protocol to use for the redirect. The default value is MatchRequest
func (o UrlRedirectActionParametersOutput) DestinationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.DestinationProtocol }).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o UrlRedirectActionParametersOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) string { return v.RedirectType }).(pulumi.StringOutput)
}

func (o UrlRedirectActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
	TypeName     string `pulumi:"typeName"`
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParametersResponse)(nil)).Elem()
}

func (o UrlRedirectActionParametersResponseOutput) ToUrlRedirectActionParametersResponseOutput() UrlRedirectActionParametersResponseOutput {
	return o
}

func (o UrlRedirectActionParametersResponseOutput) ToUrlRedirectActionParametersResponseOutputWithContext(ctx context.Context) UrlRedirectActionParametersResponseOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o UrlRedirectActionParametersResponseOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o UrlRedirectActionParametersResponseOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o UrlRedirectActionParametersResponseOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
func (o UrlRedirectActionParametersResponseOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Protocol to use for the redirect. The default value is MatchRequest
func (o UrlRedirectActionParametersResponseOutput) DestinationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.DestinationProtocol }).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o UrlRedirectActionParametersResponseOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) string { return v.RedirectType }).(pulumi.StringOutput)
}

func (o UrlRedirectActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersResponse `pulumi:"parameters"`
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionResponse)(nil)).Elem()
}

func (o UrlRedirectActionResponseOutput) ToUrlRedirectActionResponseOutput() UrlRedirectActionResponseOutput {
	return o
}

func (o UrlRedirectActionResponseOutput) ToUrlRedirectActionResponseOutputWithContext(ctx context.Context) UrlRedirectActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRedirect'.
func (o UrlRedirectActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRedirectActionResponseOutput) Parameters() UrlRedirectActionParametersResponseOutput {
	return o.ApplyT(func(v UrlRedirectActionResponse) UrlRedirectActionParametersResponse { return v.Parameters }).(UrlRedirectActionParametersResponseOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParameters `pulumi:"parameters"`
}

// UrlRewriteActionInput is an input type that accepts UrlRewriteActionArgs and UrlRewriteActionOutput values.
// You can construct a concrete instance of `UrlRewriteActionInput` via:
//
//	UrlRewriteActionArgs{...}
type UrlRewriteActionInput interface {
	pulumi.Input

	ToUrlRewriteActionOutput() UrlRewriteActionOutput
	ToUrlRewriteActionOutputWithContext(context.Context) UrlRewriteActionOutput
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersInput `pulumi:"parameters"`
}

func (UrlRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteAction)(nil)).Elem()
}

func (i UrlRewriteActionArgs) ToUrlRewriteActionOutput() UrlRewriteActionOutput {
	return i.ToUrlRewriteActionOutputWithContext(context.Background())
}

func (i UrlRewriteActionArgs) ToUrlRewriteActionOutputWithContext(ctx context.Context) UrlRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteAction)(nil)).Elem()
}

func (o UrlRewriteActionOutput) ToUrlRewriteActionOutput() UrlRewriteActionOutput {
	return o
}

func (o UrlRewriteActionOutput) ToUrlRewriteActionOutputWithContext(ctx context.Context) UrlRewriteActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRewrite'.
func (o UrlRewriteActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRewriteActionOutput) Parameters() UrlRewriteActionParametersOutput {
	return o.ApplyT(func(v UrlRewriteAction) UrlRewriteActionParameters { return v.Parameters }).(UrlRewriteActionParametersOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParameters struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
	TypeName      string `pulumi:"typeName"`
}

// UrlRewriteActionParametersInput is an input type that accepts UrlRewriteActionParametersArgs and UrlRewriteActionParametersOutput values.
// You can construct a concrete instance of `UrlRewriteActionParametersInput` via:
//
//	UrlRewriteActionParametersArgs{...}
type UrlRewriteActionParametersInput interface {
	pulumi.Input

	ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput
	ToUrlRewriteActionParametersOutputWithContext(context.Context) UrlRewriteActionParametersOutput
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersArgs struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath pulumi.BoolPtrInput `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern pulumi.StringInput `pulumi:"sourcePattern"`
	TypeName      pulumi.StringInput `pulumi:"typeName"`
}

func (UrlRewriteActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParameters)(nil)).Elem()
}

func (i UrlRewriteActionParametersArgs) ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput {
	return i.ToUrlRewriteActionParametersOutputWithContext(context.Background())
}

func (i UrlRewriteActionParametersArgs) ToUrlRewriteActionParametersOutputWithContext(ctx context.Context) UrlRewriteActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionParametersOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParameters)(nil)).Elem()
}

func (o UrlRewriteActionParametersOutput) ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput {
	return o
}

func (o UrlRewriteActionParametersOutput) ToUrlRewriteActionParametersOutputWithContext(ctx context.Context) UrlRewriteActionParametersOutput {
	return o
}

// Define the relative URL to which the above requests will be rewritten by.
func (o UrlRewriteActionParametersOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) string { return v.Destination }).(pulumi.StringOutput)
}

// Whether to preserve unmatched path. Default value is true.
func (o UrlRewriteActionParametersOutput) PreserveUnmatchedPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) *bool { return v.PreserveUnmatchedPath }).(pulumi.BoolPtrOutput)
}

// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
func (o UrlRewriteActionParametersOutput) SourcePattern() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) string { return v.SourcePattern }).(pulumi.StringOutput)
}

func (o UrlRewriteActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponse struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
	TypeName      string `pulumi:"typeName"`
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParametersResponse)(nil)).Elem()
}

func (o UrlRewriteActionParametersResponseOutput) ToUrlRewriteActionParametersResponseOutput() UrlRewriteActionParametersResponseOutput {
	return o
}

func (o UrlRewriteActionParametersResponseOutput) ToUrlRewriteActionParametersResponseOutputWithContext(ctx context.Context) UrlRewriteActionParametersResponseOutput {
	return o
}

// Define the relative URL to which the above requests will be rewritten by.
func (o UrlRewriteActionParametersResponseOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.Destination }).(pulumi.StringOutput)
}

// Whether to preserve unmatched path. Default value is true.
func (o UrlRewriteActionParametersResponseOutput) PreserveUnmatchedPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) *bool { return v.PreserveUnmatchedPath }).(pulumi.BoolPtrOutput)
}

// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
func (o UrlRewriteActionParametersResponseOutput) SourcePattern() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.SourcePattern }).(pulumi.StringOutput)
}

func (o UrlRewriteActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersResponse `pulumi:"parameters"`
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionResponse)(nil)).Elem()
}

func (o UrlRewriteActionResponseOutput) ToUrlRewriteActionResponseOutput() UrlRewriteActionResponseOutput {
	return o
}

func (o UrlRewriteActionResponseOutput) ToUrlRewriteActionResponseOutputWithContext(ctx context.Context) UrlRewriteActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRewrite'.
func (o UrlRewriteActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRewriteActionResponseOutput) Parameters() UrlRewriteActionParametersResponseOutput {
	return o.ApplyT(func(v UrlRewriteActionResponse) UrlRewriteActionParametersResponse { return v.Parameters }).(UrlRewriteActionParametersResponseOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParameters `pulumi:"parameters"`
}

// UrlSigningActionInput is an input type that accepts UrlSigningActionArgs and UrlSigningActionOutput values.
// You can construct a concrete instance of `UrlSigningActionInput` via:
//
//	UrlSigningActionArgs{...}
type UrlSigningActionInput interface {
	pulumi.Input

	ToUrlSigningActionOutput() UrlSigningActionOutput
	ToUrlSigningActionOutputWithContext(context.Context) UrlSigningActionOutput
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersInput `pulumi:"parameters"`
}

func (UrlSigningActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningAction)(nil)).Elem()
}

func (i UrlSigningActionArgs) ToUrlSigningActionOutput() UrlSigningActionOutput {
	return i.ToUrlSigningActionOutputWithContext(context.Background())
}

func (i UrlSigningActionArgs) ToUrlSigningActionOutputWithContext(ctx context.Context) UrlSigningActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionOutput struct{ *pulumi.OutputState }

func (UrlSigningActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningAction)(nil)).Elem()
}

func (o UrlSigningActionOutput) ToUrlSigningActionOutput() UrlSigningActionOutput {
	return o
}

func (o UrlSigningActionOutput) ToUrlSigningActionOutputWithContext(ctx context.Context) UrlSigningActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlSigning'.
func (o UrlSigningActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlSigningActionOutput) Parameters() UrlSigningActionParametersOutput {
	return o.ApplyT(func(v UrlSigningAction) UrlSigningActionParameters { return v.Parameters }).(UrlSigningActionParametersOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParameters struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifier `pulumi:"parameterNameOverride"`
	TypeName              string                      `pulumi:"typeName"`
}

// UrlSigningActionParametersInput is an input type that accepts UrlSigningActionParametersArgs and UrlSigningActionParametersOutput values.
// You can construct a concrete instance of `UrlSigningActionParametersInput` via:
//
//	UrlSigningActionParametersArgs{...}
type UrlSigningActionParametersInput interface {
	pulumi.Input

	ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput
	ToUrlSigningActionParametersOutputWithContext(context.Context) UrlSigningActionParametersOutput
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersArgs struct {
	// Algorithm to use for URL signing
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride UrlSigningParamIdentifierArrayInput `pulumi:"parameterNameOverride"`
	TypeName              pulumi.StringInput                  `pulumi:"typeName"`
}

func (UrlSigningActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParameters)(nil)).Elem()
}

func (i UrlSigningActionParametersArgs) ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput {
	return i.ToUrlSigningActionParametersOutputWithContext(context.Background())
}

func (i UrlSigningActionParametersArgs) ToUrlSigningActionParametersOutputWithContext(ctx context.Context) UrlSigningActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionParametersOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersOutput struct{ *pulumi.OutputState }

func (UrlSigningActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParameters)(nil)).Elem()
}

func (o UrlSigningActionParametersOutput) ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput {
	return o
}

func (o UrlSigningActionParametersOutput) ToUrlSigningActionParametersOutputWithContext(ctx context.Context) UrlSigningActionParametersOutput {
	return o
}

// Algorithm to use for URL signing
func (o UrlSigningActionParametersOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Defines which query string parameters in the url to be considered for expires, key id etc.
func (o UrlSigningActionParametersOutput) ParameterNameOverride() UrlSigningParamIdentifierArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) []UrlSigningParamIdentifier { return v.ParameterNameOverride }).(UrlSigningParamIdentifierArrayOutput)
}

func (o UrlSigningActionParametersOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponse struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifierResponse `pulumi:"parameterNameOverride"`
	TypeName              string                              `pulumi:"typeName"`
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParametersResponse)(nil)).Elem()
}

func (o UrlSigningActionParametersResponseOutput) ToUrlSigningActionParametersResponseOutput() UrlSigningActionParametersResponseOutput {
	return o
}

func (o UrlSigningActionParametersResponseOutput) ToUrlSigningActionParametersResponseOutputWithContext(ctx context.Context) UrlSigningActionParametersResponseOutput {
	return o
}

// Algorithm to use for URL signing
func (o UrlSigningActionParametersResponseOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Defines which query string parameters in the url to be considered for expires, key id etc.
func (o UrlSigningActionParametersResponseOutput) ParameterNameOverride() UrlSigningParamIdentifierResponseArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) []UrlSigningParamIdentifierResponse {
		return v.ParameterNameOverride
	}).(UrlSigningParamIdentifierResponseArrayOutput)
}

func (o UrlSigningActionParametersResponseOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) string { return v.TypeName }).(pulumi.StringOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersResponse `pulumi:"parameters"`
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionResponse)(nil)).Elem()
}

func (o UrlSigningActionResponseOutput) ToUrlSigningActionResponseOutput() UrlSigningActionResponseOutput {
	return o
}

func (o UrlSigningActionResponseOutput) ToUrlSigningActionResponseOutputWithContext(ctx context.Context) UrlSigningActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlSigning'.
func (o UrlSigningActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlSigningActionResponseOutput) Parameters() UrlSigningActionParametersResponseOutput {
	return o.ApplyT(func(v UrlSigningActionResponse) UrlSigningActionParametersResponse { return v.Parameters }).(UrlSigningActionParametersResponseOutput)
}

// Url signing key
type UrlSigningKey struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParameters `pulumi:"keySourceParameters"`
}

// UrlSigningKeyInput is an input type that accepts UrlSigningKeyArgs and UrlSigningKeyOutput values.
// You can construct a concrete instance of `UrlSigningKeyInput` via:
//
//	UrlSigningKeyArgs{...}
type UrlSigningKeyInput interface {
	pulumi.Input

	ToUrlSigningKeyOutput() UrlSigningKeyOutput
	ToUrlSigningKeyOutputWithContext(context.Context) UrlSigningKeyOutput
}

// Url signing key
type UrlSigningKeyArgs struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersInput `pulumi:"keySourceParameters"`
}

func (UrlSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKey)(nil)).Elem()
}

func (i UrlSigningKeyArgs) ToUrlSigningKeyOutput() UrlSigningKeyOutput {
	return i.ToUrlSigningKeyOutputWithContext(context.Background())
}

func (i UrlSigningKeyArgs) ToUrlSigningKeyOutputWithContext(ctx context.Context) UrlSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyOutput)
}

// UrlSigningKeyArrayInput is an input type that accepts UrlSigningKeyArray and UrlSigningKeyArrayOutput values.
// You can construct a concrete instance of `UrlSigningKeyArrayInput` via:
//
//	UrlSigningKeyArray{ UrlSigningKeyArgs{...} }
type UrlSigningKeyArrayInput interface {
	pulumi.Input

	ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput
	ToUrlSigningKeyArrayOutputWithContext(context.Context) UrlSigningKeyArrayOutput
}

type UrlSigningKeyArray []UrlSigningKeyInput

func (UrlSigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKey)(nil)).Elem()
}

func (i UrlSigningKeyArray) ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput {
	return i.ToUrlSigningKeyArrayOutputWithContext(context.Background())
}

func (i UrlSigningKeyArray) ToUrlSigningKeyArrayOutputWithContext(ctx context.Context) UrlSigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyArrayOutput)
}

// Url signing key
type UrlSigningKeyOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKey)(nil)).Elem()
}

func (o UrlSigningKeyOutput) ToUrlSigningKeyOutput() UrlSigningKeyOutput {
	return o
}

func (o UrlSigningKeyOutput) ToUrlSigningKeyOutputWithContext(ctx context.Context) UrlSigningKeyOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKey) string { return v.KeyId }).(pulumi.StringOutput)
}

// Defines the parameters for using customer key vault for Url Signing Key.
func (o UrlSigningKeyOutput) KeySourceParameters() KeyVaultSigningKeyParametersOutput {
	return o.ApplyT(func(v UrlSigningKey) KeyVaultSigningKeyParameters { return v.KeySourceParameters }).(KeyVaultSigningKeyParametersOutput)
}

type UrlSigningKeyArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKey)(nil)).Elem()
}

func (o UrlSigningKeyArrayOutput) ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput {
	return o
}

func (o UrlSigningKeyArrayOutput) ToUrlSigningKeyArrayOutputWithContext(ctx context.Context) UrlSigningKeyArrayOutput {
	return o
}

func (o UrlSigningKeyArrayOutput) Index(i pulumi.IntInput) UrlSigningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningKey {
		return vs[0].([]UrlSigningKey)[vs[1].(int)]
	}).(UrlSigningKeyOutput)
}

// Url signing key parameters
type UrlSigningKeyParameters struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReference `pulumi:"secretSource"`
	// Version of the secret to be used
	SecretVersion *string `pulumi:"secretVersion"`
	// The type of the secret resource.
	// Expected value is 'UrlSigningKey'.
	Type string `pulumi:"type"`
}

// UrlSigningKeyParametersInput is an input type that accepts UrlSigningKeyParametersArgs and UrlSigningKeyParametersOutput values.
// You can construct a concrete instance of `UrlSigningKeyParametersInput` via:
//
//	UrlSigningKeyParametersArgs{...}
type UrlSigningKeyParametersInput interface {
	pulumi.Input

	ToUrlSigningKeyParametersOutput() UrlSigningKeyParametersOutput
	ToUrlSigningKeyParametersOutputWithContext(context.Context) UrlSigningKeyParametersOutput
}

// Url signing key parameters
type UrlSigningKeyParametersArgs struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReferenceInput `pulumi:"secretSource"`
	// Version of the secret to be used
	SecretVersion pulumi.StringPtrInput `pulumi:"secretVersion"`
	// The type of the secret resource.
	// Expected value is 'UrlSigningKey'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (UrlSigningKeyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyParameters)(nil)).Elem()
}

func (i UrlSigningKeyParametersArgs) ToUrlSigningKeyParametersOutput() UrlSigningKeyParametersOutput {
	return i.ToUrlSigningKeyParametersOutputWithContext(context.Background())
}

func (i UrlSigningKeyParametersArgs) ToUrlSigningKeyParametersOutputWithContext(ctx context.Context) UrlSigningKeyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyParametersOutput)
}

func (i UrlSigningKeyParametersArgs) ToUrlSigningKeyParametersPtrOutput() UrlSigningKeyParametersPtrOutput {
	return i.ToUrlSigningKeyParametersPtrOutputWithContext(context.Background())
}

func (i UrlSigningKeyParametersArgs) ToUrlSigningKeyParametersPtrOutputWithContext(ctx context.Context) UrlSigningKeyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyParametersOutput).ToUrlSigningKeyParametersPtrOutputWithContext(ctx)
}

// UrlSigningKeyParametersPtrInput is an input type that accepts UrlSigningKeyParametersArgs, UrlSigningKeyParametersPtr and UrlSigningKeyParametersPtrOutput values.
// You can construct a concrete instance of `UrlSigningKeyParametersPtrInput` via:
//
//	        UrlSigningKeyParametersArgs{...}
//
//	or:
//
//	        nil
type UrlSigningKeyParametersPtrInput interface {
	pulumi.Input

	ToUrlSigningKeyParametersPtrOutput() UrlSigningKeyParametersPtrOutput
	ToUrlSigningKeyParametersPtrOutputWithContext(context.Context) UrlSigningKeyParametersPtrOutput
}

type urlSigningKeyParametersPtrType UrlSigningKeyParametersArgs

func UrlSigningKeyParametersPtr(v *UrlSigningKeyParametersArgs) UrlSigningKeyParametersPtrInput {
	return (*urlSigningKeyParametersPtrType)(v)
}

func (*urlSigningKeyParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlSigningKeyParameters)(nil)).Elem()
}

func (i *urlSigningKeyParametersPtrType) ToUrlSigningKeyParametersPtrOutput() UrlSigningKeyParametersPtrOutput {
	return i.ToUrlSigningKeyParametersPtrOutputWithContext(context.Background())
}

func (i *urlSigningKeyParametersPtrType) ToUrlSigningKeyParametersPtrOutputWithContext(ctx context.Context) UrlSigningKeyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyParametersPtrOutput)
}

// Url signing key parameters
type UrlSigningKeyParametersOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyParameters)(nil)).Elem()
}

func (o UrlSigningKeyParametersOutput) ToUrlSigningKeyParametersOutput() UrlSigningKeyParametersOutput {
	return o
}

func (o UrlSigningKeyParametersOutput) ToUrlSigningKeyParametersOutputWithContext(ctx context.Context) UrlSigningKeyParametersOutput {
	return o
}

func (o UrlSigningKeyParametersOutput) ToUrlSigningKeyParametersPtrOutput() UrlSigningKeyParametersPtrOutput {
	return o.ToUrlSigningKeyParametersPtrOutputWithContext(context.Background())
}

func (o UrlSigningKeyParametersOutput) ToUrlSigningKeyParametersPtrOutputWithContext(ctx context.Context) UrlSigningKeyParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UrlSigningKeyParameters) *UrlSigningKeyParameters {
		return &v
	}).(UrlSigningKeyParametersPtrOutput)
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyParametersOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyParameters) string { return v.KeyId }).(pulumi.StringOutput)
}

// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o UrlSigningKeyParametersOutput) SecretSource() ResourceReferenceOutput {
	return o.ApplyT(func(v UrlSigningKeyParameters) ResourceReference { return v.SecretSource }).(ResourceReferenceOutput)
}

// Version of the secret to be used
func (o UrlSigningKeyParametersOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningKeyParameters) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'UrlSigningKey'.
func (o UrlSigningKeyParametersOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyParameters) string { return v.Type }).(pulumi.StringOutput)
}

type UrlSigningKeyParametersPtrOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlSigningKeyParameters)(nil)).Elem()
}

func (o UrlSigningKeyParametersPtrOutput) ToUrlSigningKeyParametersPtrOutput() UrlSigningKeyParametersPtrOutput {
	return o
}

func (o UrlSigningKeyParametersPtrOutput) ToUrlSigningKeyParametersPtrOutputWithContext(ctx context.Context) UrlSigningKeyParametersPtrOutput {
	return o
}

func (o UrlSigningKeyParametersPtrOutput) Elem() UrlSigningKeyParametersOutput {
	return o.ApplyT(func(v *UrlSigningKeyParameters) UrlSigningKeyParameters {
		if v != nil {
			return *v
		}
		var ret UrlSigningKeyParameters
		return ret
	}).(UrlSigningKeyParametersOutput)
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyParametersPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParameters) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o UrlSigningKeyParametersPtrOutput) SecretSource() ResourceReferencePtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParameters) *ResourceReference {
		if v == nil {
			return nil
		}
		return &v.SecretSource
	}).(ResourceReferencePtrOutput)
}

// Version of the secret to be used
func (o UrlSigningKeyParametersPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParameters) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'UrlSigningKey'.
func (o UrlSigningKeyParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Url signing key parameters
type UrlSigningKeyParametersResponse struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
	SecretSource ResourceReferenceResponse `pulumi:"secretSource"`
	// Version of the secret to be used
	SecretVersion *string `pulumi:"secretVersion"`
	// The type of the secret resource.
	// Expected value is 'UrlSigningKey'.
	Type string `pulumi:"type"`
}

// Url signing key parameters
type UrlSigningKeyParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyParametersResponse)(nil)).Elem()
}

func (o UrlSigningKeyParametersResponseOutput) ToUrlSigningKeyParametersResponseOutput() UrlSigningKeyParametersResponseOutput {
	return o
}

func (o UrlSigningKeyParametersResponseOutput) ToUrlSigningKeyParametersResponseOutputWithContext(ctx context.Context) UrlSigningKeyParametersResponseOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyParametersResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyParametersResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o UrlSigningKeyParametersResponseOutput) SecretSource() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v UrlSigningKeyParametersResponse) ResourceReferenceResponse { return v.SecretSource }).(ResourceReferenceResponseOutput)
}

// Version of the secret to be used
func (o UrlSigningKeyParametersResponseOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningKeyParametersResponse) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'UrlSigningKey'.
func (o UrlSigningKeyParametersResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyParametersResponse) string { return v.Type }).(pulumi.StringOutput)
}

type UrlSigningKeyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlSigningKeyParametersResponse)(nil)).Elem()
}

func (o UrlSigningKeyParametersResponsePtrOutput) ToUrlSigningKeyParametersResponsePtrOutput() UrlSigningKeyParametersResponsePtrOutput {
	return o
}

func (o UrlSigningKeyParametersResponsePtrOutput) ToUrlSigningKeyParametersResponsePtrOutputWithContext(ctx context.Context) UrlSigningKeyParametersResponsePtrOutput {
	return o
}

func (o UrlSigningKeyParametersResponsePtrOutput) Elem() UrlSigningKeyParametersResponseOutput {
	return o.ApplyT(func(v *UrlSigningKeyParametersResponse) UrlSigningKeyParametersResponse {
		if v != nil {
			return *v
		}
		var ret UrlSigningKeyParametersResponse
		return ret
	}).(UrlSigningKeyParametersResponseOutput)
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyParametersResponsePtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
func (o UrlSigningKeyParametersResponsePtrOutput) SecretSource() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParametersResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return &v.SecretSource
	}).(ResourceReferenceResponsePtrOutput)
}

// Version of the secret to be used
func (o UrlSigningKeyParametersResponsePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

// The type of the secret resource.
// Expected value is 'UrlSigningKey'.
func (o UrlSigningKeyParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlSigningKeyParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Url signing key
type UrlSigningKeyResponse struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersResponse `pulumi:"keySourceParameters"`
}

// Url signing key
type UrlSigningKeyResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyResponse)(nil)).Elem()
}

func (o UrlSigningKeyResponseOutput) ToUrlSigningKeyResponseOutput() UrlSigningKeyResponseOutput {
	return o
}

func (o UrlSigningKeyResponseOutput) ToUrlSigningKeyResponseOutputWithContext(ctx context.Context) UrlSigningKeyResponseOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

// Defines the parameters for using customer key vault for Url Signing Key.
func (o UrlSigningKeyResponseOutput) KeySourceParameters() KeyVaultSigningKeyParametersResponseOutput {
	return o.ApplyT(func(v UrlSigningKeyResponse) KeyVaultSigningKeyParametersResponse { return v.KeySourceParameters }).(KeyVaultSigningKeyParametersResponseOutput)
}

type UrlSigningKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKeyResponse)(nil)).Elem()
}

func (o UrlSigningKeyResponseArrayOutput) ToUrlSigningKeyResponseArrayOutput() UrlSigningKeyResponseArrayOutput {
	return o
}

func (o UrlSigningKeyResponseArrayOutput) ToUrlSigningKeyResponseArrayOutputWithContext(ctx context.Context) UrlSigningKeyResponseArrayOutput {
	return o
}

func (o UrlSigningKeyResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningKeyResponse {
		return vs[0].([]UrlSigningKeyResponse)[vs[1].(int)]
	}).(UrlSigningKeyResponseOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifier struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// UrlSigningParamIdentifierInput is an input type that accepts UrlSigningParamIdentifierArgs and UrlSigningParamIdentifierOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierInput` via:
//
//	UrlSigningParamIdentifierArgs{...}
type UrlSigningParamIdentifierInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput
	ToUrlSigningParamIdentifierOutputWithContext(context.Context) UrlSigningParamIdentifierOutput
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierArgs struct {
	// Indicates the purpose of the parameter
	ParamIndicator pulumi.StringInput `pulumi:"paramIndicator"`
	// Parameter name
	ParamName pulumi.StringInput `pulumi:"paramName"`
}

func (UrlSigningParamIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifier)(nil)).Elem()
}

func (i UrlSigningParamIdentifierArgs) ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput {
	return i.ToUrlSigningParamIdentifierOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierArgs) ToUrlSigningParamIdentifierOutputWithContext(ctx context.Context) UrlSigningParamIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierOutput)
}

// UrlSigningParamIdentifierArrayInput is an input type that accepts UrlSigningParamIdentifierArray and UrlSigningParamIdentifierArrayOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierArrayInput` via:
//
//	UrlSigningParamIdentifierArray{ UrlSigningParamIdentifierArgs{...} }
type UrlSigningParamIdentifierArrayInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput
	ToUrlSigningParamIdentifierArrayOutputWithContext(context.Context) UrlSigningParamIdentifierArrayOutput
}

type UrlSigningParamIdentifierArray []UrlSigningParamIdentifierInput

func (UrlSigningParamIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifier)(nil)).Elem()
}

func (i UrlSigningParamIdentifierArray) ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput {
	return i.ToUrlSigningParamIdentifierArrayOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierArray) ToUrlSigningParamIdentifierArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierArrayOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifier)(nil)).Elem()
}

func (o UrlSigningParamIdentifierOutput) ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput {
	return o
}

func (o UrlSigningParamIdentifierOutput) ToUrlSigningParamIdentifierOutputWithContext(ctx context.Context) UrlSigningParamIdentifierOutput {
	return o
}

// Indicates the purpose of the parameter
func (o UrlSigningParamIdentifierOutput) ParamIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifier) string { return v.ParamIndicator }).(pulumi.StringOutput)
}

// Parameter name
func (o UrlSigningParamIdentifierOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifier) string { return v.ParamName }).(pulumi.StringOutput)
}

type UrlSigningParamIdentifierArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifier)(nil)).Elem()
}

func (o UrlSigningParamIdentifierArrayOutput) ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierArrayOutput) ToUrlSigningParamIdentifierArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierArrayOutput) Index(i pulumi.IntInput) UrlSigningParamIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningParamIdentifier {
		return vs[0].([]UrlSigningParamIdentifier)[vs[1].(int)]
	}).(UrlSigningParamIdentifierOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponse struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierResponseOutput) ToUrlSigningParamIdentifierResponseOutput() UrlSigningParamIdentifierResponseOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseOutput) ToUrlSigningParamIdentifierResponseOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseOutput {
	return o
}

// Indicates the purpose of the parameter
func (o UrlSigningParamIdentifierResponseOutput) ParamIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierResponse) string { return v.ParamIndicator }).(pulumi.StringOutput)
}

// Parameter name
func (o UrlSigningParamIdentifierResponseOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierResponse) string { return v.ParamName }).(pulumi.StringOutput)
}

type UrlSigningParamIdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierResponseArrayOutput) ToUrlSigningParamIdentifierResponseArrayOutput() UrlSigningParamIdentifierResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseArrayOutput) ToUrlSigningParamIdentifierResponseArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningParamIdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningParamIdentifierResponse {
		return vs[0].([]UrlSigningParamIdentifierResponse)[vs[1].(int)]
	}).(UrlSigningParamIdentifierResponseOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
type UserManagedHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	// Expected value is 'AzureKeyVault'.
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
	CertificateSourceParameters KeyVaultCertificateSourceParametersResponse `pulumi:"certificateSourceParameters"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery.
	ProtocolType string `pulumi:"protocolType"`
}

// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
type UserManagedHttpsParametersResponseOutput struct{ *pulumi.OutputState }

func (UserManagedHttpsParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserManagedHttpsParametersResponse)(nil)).Elem()
}

func (o UserManagedHttpsParametersResponseOutput) ToUserManagedHttpsParametersResponseOutput() UserManagedHttpsParametersResponseOutput {
	return o
}

func (o UserManagedHttpsParametersResponseOutput) ToUserManagedHttpsParametersResponseOutputWithContext(ctx context.Context) UserManagedHttpsParametersResponseOutput {
	return o
}

// Defines the source of the SSL certificate.
// Expected value is 'AzureKeyVault'.
func (o UserManagedHttpsParametersResponseOutput) CertificateSource() pulumi.StringOutput {
	return o.ApplyT(func(v UserManagedHttpsParametersResponse) string { return v.CertificateSource }).(pulumi.StringOutput)
}

// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
func (o UserManagedHttpsParametersResponseOutput) CertificateSourceParameters() KeyVaultCertificateSourceParametersResponseOutput {
	return o.ApplyT(func(v UserManagedHttpsParametersResponse) KeyVaultCertificateSourceParametersResponse {
		return v.CertificateSourceParameters
	}).(KeyVaultCertificateSourceParametersResponseOutput)
}

// TLS protocol version that will be used for Https
func (o UserManagedHttpsParametersResponseOutput) MinimumTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserManagedHttpsParametersResponse) *string { return v.MinimumTlsVersion }).(pulumi.StringPtrOutput)
}

// Defines the TLS extension protocol that is used for secure delivery.
func (o UserManagedHttpsParametersResponseOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v UserManagedHttpsParametersResponse) string { return v.ProtocolType }).(pulumi.StringOutput)
}

type UserManagedHttpsParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (UserManagedHttpsParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserManagedHttpsParametersResponse)(nil)).Elem()
}

func (o UserManagedHttpsParametersResponsePtrOutput) ToUserManagedHttpsParametersResponsePtrOutput() UserManagedHttpsParametersResponsePtrOutput {
	return o
}

func (o UserManagedHttpsParametersResponsePtrOutput) ToUserManagedHttpsParametersResponsePtrOutputWithContext(ctx context.Context) UserManagedHttpsParametersResponsePtrOutput {
	return o
}

func (o UserManagedHttpsParametersResponsePtrOutput) Elem() UserManagedHttpsParametersResponseOutput {
	return o.ApplyT(func(v *UserManagedHttpsParametersResponse) UserManagedHttpsParametersResponse {
		if v != nil {
			return *v
		}
		var ret UserManagedHttpsParametersResponse
		return ret
	}).(UserManagedHttpsParametersResponseOutput)
}

// Defines the source of the SSL certificate.
// Expected value is 'AzureKeyVault'.
func (o UserManagedHttpsParametersResponsePtrOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserManagedHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateSource
	}).(pulumi.StringPtrOutput)
}

// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
func (o UserManagedHttpsParametersResponsePtrOutput) CertificateSourceParameters() KeyVaultCertificateSourceParametersResponsePtrOutput {
	return o.ApplyT(func(v *UserManagedHttpsParametersResponse) *KeyVaultCertificateSourceParametersResponse {
		if v == nil {
			return nil
		}
		return &v.CertificateSourceParameters
	}).(KeyVaultCertificateSourceParametersResponsePtrOutput)
}

// TLS protocol version that will be used for Https
func (o UserManagedHttpsParametersResponsePtrOutput) MinimumTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserManagedHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinimumTlsVersion
	}).(pulumi.StringPtrOutput)
}

// Defines the TLS extension protocol that is used for secure delivery.
func (o UserManagedHttpsParametersResponsePtrOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserManagedHttpsParametersResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProtocolType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AFDDomainHttpsParametersOutput{})
	pulumi.RegisterOutputType(AFDDomainHttpsParametersPtrOutput{})
	pulumi.RegisterOutputType(AFDDomainHttpsParametersResponseOutput{})
	pulumi.RegisterOutputType(AFDDomainHttpsParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ActivatedResourceReferenceOutput{})
	pulumi.RegisterOutputType(ActivatedResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ActivatedResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ActivatedResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(AfdRouteCacheConfigurationOutput{})
	pulumi.RegisterOutputType(AfdRouteCacheConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AfdRouteCacheConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AfdRouteCacheConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirstPartyManagedCertificateParametersOutput{})
	pulumi.RegisterOutputType(AzureFirstPartyManagedCertificateParametersPtrOutput{})
	pulumi.RegisterOutputType(AzureFirstPartyManagedCertificateParametersResponseOutput{})
	pulumi.RegisterOutputType(AzureFirstPartyManagedCertificateParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(CacheConfigurationOutput{})
	pulumi.RegisterOutputType(CacheConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CacheConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CacheConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(CacheExpirationActionParametersOutput{})
	pulumi.RegisterOutputType(CacheExpirationActionParametersResponseOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersResponseOutput{})
	pulumi.RegisterOutputType(CdnCertificateSourceParametersResponseOutput{})
	pulumi.RegisterOutputType(CdnCertificateSourceParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(CdnManagedHttpsParametersResponseOutput{})
	pulumi.RegisterOutputType(CdnManagedHttpsParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientPortMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(ClientPortMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(CompressionSettingsOutput{})
	pulumi.RegisterOutputType(CompressionSettingsPtrOutput{})
	pulumi.RegisterOutputType(CompressionSettingsResponseOutput{})
	pulumi.RegisterOutputType(CompressionSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleListOutput{})
	pulumi.RegisterOutputType(CustomRuleListPtrOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomerCertificateParametersOutput{})
	pulumi.RegisterOutputType(CustomerCertificateParametersPtrOutput{})
	pulumi.RegisterOutputType(CustomerCertificateParametersResponseOutput{})
	pulumi.RegisterOutputType(CustomerCertificateParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(DeepCreatedCustomDomainResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedCustomDomainResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleOutput{})
	pulumi.RegisterOutputType(DeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleClientPortConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleClientPortConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHostNameConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHostNameConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRouteConfigurationOverrideActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRouteConfigurationOverrideActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleServerPortConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleServerPortConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleSocketAddrConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleSocketAddrConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleSslProtocolConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleSslProtocolConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionResponseOutput{})
	pulumi.RegisterOutputType(DomainValidationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersPtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(HostNameMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(HostNameMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersArrayOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseArrayOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificateSourceParametersResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificateSourceParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedCertificateParametersOutput{})
	pulumi.RegisterOutputType(ManagedCertificateParametersPtrOutput{})
	pulumi.RegisterOutputType(ManagedCertificateParametersResponseOutput{})
	pulumi.RegisterOutputType(ManagedCertificateParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListPtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MatchConditionOutput{})
	pulumi.RegisterOutputType(MatchConditionArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideOutput{})
	pulumi.RegisterOutputType(OriginGroupOverridePtrOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideActionOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideActionParametersOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideActionParametersResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideActionResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(OriginGroupOverrideResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleOutput{})
	pulumi.RegisterOutputType(RateLimitRuleArrayOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListPtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferencePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersPtrOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteConfigurationOverrideActionParametersOutput{})
	pulumi.RegisterOutputType(RouteConfigurationOverrideActionParametersResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallAssociationOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallAssociationArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallAssociationResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallAssociationResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallParametersOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallParametersPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallParametersResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyWebApplicationFirewallParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerPortMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(ServerPortMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SocketAddrMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(SocketAddrMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(SslProtocolMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(SslProtocolMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyParametersOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyParametersPtrOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserManagedHttpsParametersResponseOutput{})
	pulumi.RegisterOutputType(UserManagedHttpsParametersResponsePtrOutput{})
}
