// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// An API key used for authenticating with a configuration store endpoint.
type ApiKeyResponse struct {
	// A connection string that can be used by supporting clients for authentication.
	ConnectionString string `pulumi:"connectionString"`
	// The key ID.
	Id string `pulumi:"id"`
	// The last time any of the key's properties were modified.
	LastModified string `pulumi:"lastModified"`
	// A name for the key describing its usage.
	Name string `pulumi:"name"`
	// Whether this key can only be used for read operations.
	ReadOnly bool `pulumi:"readOnly"`
	// The value of the key that is used for authentication purposes.
	Value string `pulumi:"value"`
}

// An API key used for authenticating with a configuration store endpoint.
type ApiKeyResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyResponse)(nil)).Elem()
}

func (o ApiKeyResponseOutput) ToApiKeyResponseOutput() ApiKeyResponseOutput {
	return o
}

func (o ApiKeyResponseOutput) ToApiKeyResponseOutputWithContext(ctx context.Context) ApiKeyResponseOutput {
	return o
}

// A connection string that can be used by supporting clients for authentication.
func (o ApiKeyResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The key ID.
func (o ApiKeyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last time any of the key's properties were modified.
func (o ApiKeyResponseOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyResponse) string { return v.LastModified }).(pulumi.StringOutput)
}

// A name for the key describing its usage.
func (o ApiKeyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Whether this key can only be used for read operations.
func (o ApiKeyResponseOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiKeyResponse) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// The value of the key that is used for authentication purposes.
func (o ApiKeyResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ApiKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyResponse)(nil)).Elem()
}

func (o ApiKeyResponseArrayOutput) ToApiKeyResponseArrayOutput() ApiKeyResponseArrayOutput {
	return o
}

func (o ApiKeyResponseArrayOutput) ToApiKeyResponseArrayOutputWithContext(ctx context.Context) ApiKeyResponseArrayOutput {
	return o
}

func (o ApiKeyResponseArrayOutput) Index(i pulumi.IntInput) ApiKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiKeyResponse {
		return vs[0].([]ApiKeyResponse)[vs[1].(int)]
	}).(ApiKeyResponseOutput)
}

// The data plane proxy settings for a configuration store.
type DataPlaneProxyProperties struct {
	// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
	PrivateLinkDelegation *string `pulumi:"privateLinkDelegation"`
}

// DataPlaneProxyPropertiesInput is an input type that accepts DataPlaneProxyPropertiesArgs and DataPlaneProxyPropertiesOutput values.
// You can construct a concrete instance of `DataPlaneProxyPropertiesInput` via:
//
//	DataPlaneProxyPropertiesArgs{...}
type DataPlaneProxyPropertiesInput interface {
	pulumi.Input

	ToDataPlaneProxyPropertiesOutput() DataPlaneProxyPropertiesOutput
	ToDataPlaneProxyPropertiesOutputWithContext(context.Context) DataPlaneProxyPropertiesOutput
}

// The data plane proxy settings for a configuration store.
type DataPlaneProxyPropertiesArgs struct {
	// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
	PrivateLinkDelegation pulumi.StringPtrInput `pulumi:"privateLinkDelegation"`
}

func (DataPlaneProxyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneProxyProperties)(nil)).Elem()
}

func (i DataPlaneProxyPropertiesArgs) ToDataPlaneProxyPropertiesOutput() DataPlaneProxyPropertiesOutput {
	return i.ToDataPlaneProxyPropertiesOutputWithContext(context.Background())
}

func (i DataPlaneProxyPropertiesArgs) ToDataPlaneProxyPropertiesOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneProxyPropertiesOutput)
}

func (i DataPlaneProxyPropertiesArgs) ToDataPlaneProxyPropertiesPtrOutput() DataPlaneProxyPropertiesPtrOutput {
	return i.ToDataPlaneProxyPropertiesPtrOutputWithContext(context.Background())
}

func (i DataPlaneProxyPropertiesArgs) ToDataPlaneProxyPropertiesPtrOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneProxyPropertiesOutput).ToDataPlaneProxyPropertiesPtrOutputWithContext(ctx)
}

// DataPlaneProxyPropertiesPtrInput is an input type that accepts DataPlaneProxyPropertiesArgs, DataPlaneProxyPropertiesPtr and DataPlaneProxyPropertiesPtrOutput values.
// You can construct a concrete instance of `DataPlaneProxyPropertiesPtrInput` via:
//
//	        DataPlaneProxyPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataPlaneProxyPropertiesPtrInput interface {
	pulumi.Input

	ToDataPlaneProxyPropertiesPtrOutput() DataPlaneProxyPropertiesPtrOutput
	ToDataPlaneProxyPropertiesPtrOutputWithContext(context.Context) DataPlaneProxyPropertiesPtrOutput
}

type dataPlaneProxyPropertiesPtrType DataPlaneProxyPropertiesArgs

func DataPlaneProxyPropertiesPtr(v *DataPlaneProxyPropertiesArgs) DataPlaneProxyPropertiesPtrInput {
	return (*dataPlaneProxyPropertiesPtrType)(v)
}

func (*dataPlaneProxyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneProxyProperties)(nil)).Elem()
}

func (i *dataPlaneProxyPropertiesPtrType) ToDataPlaneProxyPropertiesPtrOutput() DataPlaneProxyPropertiesPtrOutput {
	return i.ToDataPlaneProxyPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataPlaneProxyPropertiesPtrType) ToDataPlaneProxyPropertiesPtrOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPlaneProxyPropertiesPtrOutput)
}

// The data plane proxy settings for a configuration store.
type DataPlaneProxyPropertiesOutput struct{ *pulumi.OutputState }

func (DataPlaneProxyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneProxyProperties)(nil)).Elem()
}

func (o DataPlaneProxyPropertiesOutput) ToDataPlaneProxyPropertiesOutput() DataPlaneProxyPropertiesOutput {
	return o
}

func (o DataPlaneProxyPropertiesOutput) ToDataPlaneProxyPropertiesOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesOutput {
	return o
}

func (o DataPlaneProxyPropertiesOutput) ToDataPlaneProxyPropertiesPtrOutput() DataPlaneProxyPropertiesPtrOutput {
	return o.ToDataPlaneProxyPropertiesPtrOutputWithContext(context.Background())
}

func (o DataPlaneProxyPropertiesOutput) ToDataPlaneProxyPropertiesPtrOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPlaneProxyProperties) *DataPlaneProxyProperties {
		return &v
	}).(DataPlaneProxyPropertiesPtrOutput)
}

// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
func (o DataPlaneProxyPropertiesOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPlaneProxyProperties) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
func (o DataPlaneProxyPropertiesOutput) PrivateLinkDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPlaneProxyProperties) *string { return v.PrivateLinkDelegation }).(pulumi.StringPtrOutput)
}

type DataPlaneProxyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataPlaneProxyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneProxyProperties)(nil)).Elem()
}

func (o DataPlaneProxyPropertiesPtrOutput) ToDataPlaneProxyPropertiesPtrOutput() DataPlaneProxyPropertiesPtrOutput {
	return o
}

func (o DataPlaneProxyPropertiesPtrOutput) ToDataPlaneProxyPropertiesPtrOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesPtrOutput {
	return o
}

func (o DataPlaneProxyPropertiesPtrOutput) Elem() DataPlaneProxyPropertiesOutput {
	return o.ApplyT(func(v *DataPlaneProxyProperties) DataPlaneProxyProperties {
		if v != nil {
			return *v
		}
		var ret DataPlaneProxyProperties
		return ret
	}).(DataPlaneProxyPropertiesOutput)
}

// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
func (o DataPlaneProxyPropertiesPtrOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPlaneProxyProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
func (o DataPlaneProxyPropertiesPtrOutput) PrivateLinkDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPlaneProxyProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkDelegation
	}).(pulumi.StringPtrOutput)
}

// The data plane proxy settings for a configuration store.
type DataPlaneProxyPropertiesResponse struct {
	// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
	PrivateLinkDelegation *string `pulumi:"privateLinkDelegation"`
}

// The data plane proxy settings for a configuration store.
type DataPlaneProxyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataPlaneProxyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPlaneProxyPropertiesResponse)(nil)).Elem()
}

func (o DataPlaneProxyPropertiesResponseOutput) ToDataPlaneProxyPropertiesResponseOutput() DataPlaneProxyPropertiesResponseOutput {
	return o
}

func (o DataPlaneProxyPropertiesResponseOutput) ToDataPlaneProxyPropertiesResponseOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesResponseOutput {
	return o
}

// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
func (o DataPlaneProxyPropertiesResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPlaneProxyPropertiesResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
func (o DataPlaneProxyPropertiesResponseOutput) PrivateLinkDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPlaneProxyPropertiesResponse) *string { return v.PrivateLinkDelegation }).(pulumi.StringPtrOutput)
}

type DataPlaneProxyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DataPlaneProxyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPlaneProxyPropertiesResponse)(nil)).Elem()
}

func (o DataPlaneProxyPropertiesResponsePtrOutput) ToDataPlaneProxyPropertiesResponsePtrOutput() DataPlaneProxyPropertiesResponsePtrOutput {
	return o
}

func (o DataPlaneProxyPropertiesResponsePtrOutput) ToDataPlaneProxyPropertiesResponsePtrOutputWithContext(ctx context.Context) DataPlaneProxyPropertiesResponsePtrOutput {
	return o
}

func (o DataPlaneProxyPropertiesResponsePtrOutput) Elem() DataPlaneProxyPropertiesResponseOutput {
	return o.ApplyT(func(v *DataPlaneProxyPropertiesResponse) DataPlaneProxyPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DataPlaneProxyPropertiesResponse
		return ret
	}).(DataPlaneProxyPropertiesResponseOutput)
}

// The data plane proxy authentication mode. This property manages the authentication mode of request to the data plane resources.
func (o DataPlaneProxyPropertiesResponsePtrOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPlaneProxyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// The data plane proxy private link delegation. This property manages if a request from delegated ARM private link is allowed when the data plane resource requires private link.
func (o DataPlaneProxyPropertiesResponsePtrOutput) PrivateLinkDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPlaneProxyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkDelegation
	}).(pulumi.StringPtrOutput)
}

// The encryption settings for a configuration store.
type EncryptionProperties struct {
	// Key vault properties.
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
}

// EncryptionPropertiesInput is an input type that accepts EncryptionPropertiesArgs and EncryptionPropertiesOutput values.
// You can construct a concrete instance of `EncryptionPropertiesInput` via:
//
//	EncryptionPropertiesArgs{...}
type EncryptionPropertiesInput interface {
	pulumi.Input

	ToEncryptionPropertiesOutput() EncryptionPropertiesOutput
	ToEncryptionPropertiesOutputWithContext(context.Context) EncryptionPropertiesOutput
}

// The encryption settings for a configuration store.
type EncryptionPropertiesArgs struct {
	// Key vault properties.
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
}

func (EncryptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperties)(nil)).Elem()
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesOutput() EncryptionPropertiesOutput {
	return i.ToEncryptionPropertiesOutputWithContext(context.Background())
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesOutputWithContext(ctx context.Context) EncryptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesOutput)
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return i.ToEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesOutput).ToEncryptionPropertiesPtrOutputWithContext(ctx)
}

// EncryptionPropertiesPtrInput is an input type that accepts EncryptionPropertiesArgs, EncryptionPropertiesPtr and EncryptionPropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionPropertiesPtrInput` via:
//
//	        EncryptionPropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionPropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput
	ToEncryptionPropertiesPtrOutputWithContext(context.Context) EncryptionPropertiesPtrOutput
}

type encryptionPropertiesPtrType EncryptionPropertiesArgs

func EncryptionPropertiesPtr(v *EncryptionPropertiesArgs) EncryptionPropertiesPtrInput {
	return (*encryptionPropertiesPtrType)(v)
}

func (*encryptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperties)(nil)).Elem()
}

func (i *encryptionPropertiesPtrType) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return i.ToEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionPropertiesPtrType) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesPtrOutput)
}

// The encryption settings for a configuration store.
type EncryptionPropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperties)(nil)).Elem()
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesOutput() EncryptionPropertiesOutput {
	return o
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesOutputWithContext(ctx context.Context) EncryptionPropertiesOutput {
	return o
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return o.ToEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionProperties) *EncryptionProperties {
		return &v
	}).(EncryptionPropertiesPtrOutput)
}

// Key vault properties.
func (o EncryptionPropertiesOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v EncryptionProperties) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

type EncryptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperties)(nil)).Elem()
}

func (o EncryptionPropertiesPtrOutput) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return o
}

func (o EncryptionPropertiesPtrOutput) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return o
}

func (o EncryptionPropertiesPtrOutput) Elem() EncryptionPropertiesOutput {
	return o.ApplyT(func(v *EncryptionProperties) EncryptionProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionProperties
		return ret
	}).(EncryptionPropertiesOutput)
}

// Key vault properties.
func (o EncryptionPropertiesPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *EncryptionProperties) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// The encryption settings for a configuration store.
type EncryptionPropertiesResponse struct {
	// Key vault properties.
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
}

// The encryption settings for a configuration store.
type EncryptionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertiesResponse)(nil)).Elem()
}

func (o EncryptionPropertiesResponseOutput) ToEncryptionPropertiesResponseOutput() EncryptionPropertiesResponseOutput {
	return o
}

func (o EncryptionPropertiesResponseOutput) ToEncryptionPropertiesResponseOutputWithContext(ctx context.Context) EncryptionPropertiesResponseOutput {
	return o
}

// Key vault properties.
func (o EncryptionPropertiesResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

type EncryptionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertiesResponse)(nil)).Elem()
}

func (o EncryptionPropertiesResponsePtrOutput) ToEncryptionPropertiesResponsePtrOutput() EncryptionPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionPropertiesResponsePtrOutput) ToEncryptionPropertiesResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionPropertiesResponsePtrOutput) Elem() EncryptionPropertiesResponseOutput {
	return o.ApplyT(func(v *EncryptionPropertiesResponse) EncryptionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionPropertiesResponse
		return ret
	}).(EncryptionPropertiesResponseOutput)
}

// Key vault properties.
func (o EncryptionPropertiesResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertiesResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// Experimentation settings
type ExperimentationProperties struct {
	// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
	DataPlaneEndpoint *string `pulumi:"dataPlaneEndpoint"`
	// Resource ID of a resource enabling experimentation
	ResourceId *string `pulumi:"resourceId"`
}

// ExperimentationPropertiesInput is an input type that accepts ExperimentationPropertiesArgs and ExperimentationPropertiesOutput values.
// You can construct a concrete instance of `ExperimentationPropertiesInput` via:
//
//	ExperimentationPropertiesArgs{...}
type ExperimentationPropertiesInput interface {
	pulumi.Input

	ToExperimentationPropertiesOutput() ExperimentationPropertiesOutput
	ToExperimentationPropertiesOutputWithContext(context.Context) ExperimentationPropertiesOutput
}

// Experimentation settings
type ExperimentationPropertiesArgs struct {
	// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
	DataPlaneEndpoint pulumi.StringPtrInput `pulumi:"dataPlaneEndpoint"`
	// Resource ID of a resource enabling experimentation
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ExperimentationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentationProperties)(nil)).Elem()
}

func (i ExperimentationPropertiesArgs) ToExperimentationPropertiesOutput() ExperimentationPropertiesOutput {
	return i.ToExperimentationPropertiesOutputWithContext(context.Background())
}

func (i ExperimentationPropertiesArgs) ToExperimentationPropertiesOutputWithContext(ctx context.Context) ExperimentationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentationPropertiesOutput)
}

func (i ExperimentationPropertiesArgs) ToExperimentationPropertiesPtrOutput() ExperimentationPropertiesPtrOutput {
	return i.ToExperimentationPropertiesPtrOutputWithContext(context.Background())
}

func (i ExperimentationPropertiesArgs) ToExperimentationPropertiesPtrOutputWithContext(ctx context.Context) ExperimentationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentationPropertiesOutput).ToExperimentationPropertiesPtrOutputWithContext(ctx)
}

// ExperimentationPropertiesPtrInput is an input type that accepts ExperimentationPropertiesArgs, ExperimentationPropertiesPtr and ExperimentationPropertiesPtrOutput values.
// You can construct a concrete instance of `ExperimentationPropertiesPtrInput` via:
//
//	        ExperimentationPropertiesArgs{...}
//
//	or:
//
//	        nil
type ExperimentationPropertiesPtrInput interface {
	pulumi.Input

	ToExperimentationPropertiesPtrOutput() ExperimentationPropertiesPtrOutput
	ToExperimentationPropertiesPtrOutputWithContext(context.Context) ExperimentationPropertiesPtrOutput
}

type experimentationPropertiesPtrType ExperimentationPropertiesArgs

func ExperimentationPropertiesPtr(v *ExperimentationPropertiesArgs) ExperimentationPropertiesPtrInput {
	return (*experimentationPropertiesPtrType)(v)
}

func (*experimentationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentationProperties)(nil)).Elem()
}

func (i *experimentationPropertiesPtrType) ToExperimentationPropertiesPtrOutput() ExperimentationPropertiesPtrOutput {
	return i.ToExperimentationPropertiesPtrOutputWithContext(context.Background())
}

func (i *experimentationPropertiesPtrType) ToExperimentationPropertiesPtrOutputWithContext(ctx context.Context) ExperimentationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentationPropertiesPtrOutput)
}

// Experimentation settings
type ExperimentationPropertiesOutput struct{ *pulumi.OutputState }

func (ExperimentationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentationProperties)(nil)).Elem()
}

func (o ExperimentationPropertiesOutput) ToExperimentationPropertiesOutput() ExperimentationPropertiesOutput {
	return o
}

func (o ExperimentationPropertiesOutput) ToExperimentationPropertiesOutputWithContext(ctx context.Context) ExperimentationPropertiesOutput {
	return o
}

func (o ExperimentationPropertiesOutput) ToExperimentationPropertiesPtrOutput() ExperimentationPropertiesPtrOutput {
	return o.ToExperimentationPropertiesPtrOutputWithContext(context.Background())
}

func (o ExperimentationPropertiesOutput) ToExperimentationPropertiesPtrOutputWithContext(ctx context.Context) ExperimentationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExperimentationProperties) *ExperimentationProperties {
		return &v
	}).(ExperimentationPropertiesPtrOutput)
}

// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
func (o ExperimentationPropertiesOutput) DataPlaneEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentationProperties) *string { return v.DataPlaneEndpoint }).(pulumi.StringPtrOutput)
}

// Resource ID of a resource enabling experimentation
func (o ExperimentationPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentationProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ExperimentationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExperimentationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentationProperties)(nil)).Elem()
}

func (o ExperimentationPropertiesPtrOutput) ToExperimentationPropertiesPtrOutput() ExperimentationPropertiesPtrOutput {
	return o
}

func (o ExperimentationPropertiesPtrOutput) ToExperimentationPropertiesPtrOutputWithContext(ctx context.Context) ExperimentationPropertiesPtrOutput {
	return o
}

func (o ExperimentationPropertiesPtrOutput) Elem() ExperimentationPropertiesOutput {
	return o.ApplyT(func(v *ExperimentationProperties) ExperimentationProperties {
		if v != nil {
			return *v
		}
		var ret ExperimentationProperties
		return ret
	}).(ExperimentationPropertiesOutput)
}

// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
func (o ExperimentationPropertiesPtrOutput) DataPlaneEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentationProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataPlaneEndpoint
	}).(pulumi.StringPtrOutput)
}

// Resource ID of a resource enabling experimentation
func (o ExperimentationPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentationProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Experimentation settings
type ExperimentationPropertiesResponse struct {
	// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
	DataPlaneEndpoint *string `pulumi:"dataPlaneEndpoint"`
	// Resource ID of a resource enabling experimentation
	ResourceId *string `pulumi:"resourceId"`
}

// Experimentation settings
type ExperimentationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExperimentationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentationPropertiesResponse)(nil)).Elem()
}

func (o ExperimentationPropertiesResponseOutput) ToExperimentationPropertiesResponseOutput() ExperimentationPropertiesResponseOutput {
	return o
}

func (o ExperimentationPropertiesResponseOutput) ToExperimentationPropertiesResponseOutputWithContext(ctx context.Context) ExperimentationPropertiesResponseOutput {
	return o
}

// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
func (o ExperimentationPropertiesResponseOutput) DataPlaneEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentationPropertiesResponse) *string { return v.DataPlaneEndpoint }).(pulumi.StringPtrOutput)
}

// Resource ID of a resource enabling experimentation
func (o ExperimentationPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentationPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ExperimentationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentationPropertiesResponse)(nil)).Elem()
}

func (o ExperimentationPropertiesResponsePtrOutput) ToExperimentationPropertiesResponsePtrOutput() ExperimentationPropertiesResponsePtrOutput {
	return o
}

func (o ExperimentationPropertiesResponsePtrOutput) ToExperimentationPropertiesResponsePtrOutputWithContext(ctx context.Context) ExperimentationPropertiesResponsePtrOutput {
	return o
}

func (o ExperimentationPropertiesResponsePtrOutput) Elem() ExperimentationPropertiesResponseOutput {
	return o.ApplyT(func(v *ExperimentationPropertiesResponse) ExperimentationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ExperimentationPropertiesResponse
		return ret
	}).(ExperimentationPropertiesResponseOutput)
}

// The data plane endpoint of the Split experimentation workspace resource where experimentation data can be retrieved
func (o ExperimentationPropertiesResponsePtrOutput) DataPlaneEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataPlaneEndpoint
	}).(pulumi.StringPtrOutput)
}

// Resource ID of a resource enabling experimentation
func (o ExperimentationPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Settings concerning key vault encryption for a configuration store.
type KeyVaultProperties struct {
	// The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// The URI of the key vault key used to encrypt data.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//	KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// Settings concerning key vault encryption for a configuration store.
type KeyVaultPropertiesArgs struct {
	// The client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// The URI of the key vault key used to encrypt data.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//	        KeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// Settings concerning key vault encryption for a configuration store.
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// The URI of the key vault key used to encrypt data.
func (o KeyVaultPropertiesOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultProperties
		return ret
	}).(KeyVaultPropertiesOutput)
}

// The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// The URI of the key vault key used to encrypt data.
func (o KeyVaultPropertiesPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// Settings concerning key vault encryption for a configuration store.
type KeyVaultPropertiesResponse struct {
	// The client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// The URI of the key vault key used to encrypt data.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
}

// Settings concerning key vault encryption for a configuration store.
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

// The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// The URI of the key vault key used to encrypt data.
func (o KeyVaultPropertiesResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultPropertiesResponse
		return ret
	}).(KeyVaultPropertiesResponseOutput)
}

// The client id of the identity which will be used to access key vault.
func (o KeyVaultPropertiesResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// The URI of the key vault key used to encrypt data.
func (o KeyVaultPropertiesResponsePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpoint struct {
	// The resource Id for private endpoint
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//	PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// Private endpoint which a connection belongs to.
type PrivateEndpointArgs struct {
	// The resource Id for private endpoint
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//	        PrivateEndpointArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpoint
		return ret
	}).(PrivateEndpointOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A reference to a related private endpoint connection.
type PrivateEndpointConnectionReferenceResponse struct {
	// The resource ID.
	Id string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The resource of private endpoint.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning status of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// A reference to a related private endpoint connection.
type PrivateEndpointConnectionReferenceResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionReferenceResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionReferenceResponseOutput) ToPrivateEndpointConnectionReferenceResponseOutput() PrivateEndpointConnectionReferenceResponseOutput {
	return o
}

func (o PrivateEndpointConnectionReferenceResponseOutput) ToPrivateEndpointConnectionReferenceResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionReferenceResponseOutput {
	return o
}

// The resource ID.
func (o PrivateEndpointConnectionReferenceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionReferenceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource.
func (o PrivateEndpointConnectionReferenceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionReferenceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private endpoint.
func (o PrivateEndpointConnectionReferenceResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionReferenceResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionReferenceResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionReferenceResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning status of the private endpoint connection.
func (o PrivateEndpointConnectionReferenceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionReferenceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource.
func (o PrivateEndpointConnectionReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionReferenceResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionReferenceResponseArrayOutput) ToPrivateEndpointConnectionReferenceResponseArrayOutput() PrivateEndpointConnectionReferenceResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionReferenceResponseArrayOutput) ToPrivateEndpointConnectionReferenceResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionReferenceResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionReferenceResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionReferenceResponse {
		return vs[0].([]PrivateEndpointConnectionReferenceResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionReferenceResponseOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponse struct {
	// The resource Id for private endpoint
	Id *string `pulumi:"id"`
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The resource Id for private endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The resource Id for private endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionState struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateArgs struct {
	// The private link service connection description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The private link service connection status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponse struct {
	// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
	ActionsRequired string `pulumi:"actionsRequired"`
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// An identity that can be associated with a resource.
type ResourceIdentity struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type *string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// An identity that can be associated with a resource.
type ResourceIdentityArgs struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// An identity that can be associated with a resource.
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// An identity that can be associated with a resource.
type ResourceIdentityResponse struct {
	// The principal id of the identity. This property will only be provided for a system-assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type *string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// An identity that can be associated with a resource.
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// The principal id of the identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserIdentityResponse { return v.UserAssignedIdentities }).(UserIdentityResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// The principal id of the identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityResponseMapOutput)
}

// Describes a configuration store SKU.
type Sku struct {
	// The SKU name of the configuration store.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Describes a configuration store SKU.
type SkuArgs struct {
	// The SKU name of the configuration store.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// Describes a configuration store SKU.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The SKU name of the configuration store.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// Describes a configuration store SKU.
type SkuResponse struct {
	// The SKU name of the configuration store.
	Name string `pulumi:"name"`
}

// Describes a configuration store SKU.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The SKU name of the configuration store.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Telemetry settings
type TelemetryProperties struct {
	// Resource ID of a resource enabling telemetry collection
	ResourceId *string `pulumi:"resourceId"`
}

// TelemetryPropertiesInput is an input type that accepts TelemetryPropertiesArgs and TelemetryPropertiesOutput values.
// You can construct a concrete instance of `TelemetryPropertiesInput` via:
//
//	TelemetryPropertiesArgs{...}
type TelemetryPropertiesInput interface {
	pulumi.Input

	ToTelemetryPropertiesOutput() TelemetryPropertiesOutput
	ToTelemetryPropertiesOutputWithContext(context.Context) TelemetryPropertiesOutput
}

// Telemetry settings
type TelemetryPropertiesArgs struct {
	// Resource ID of a resource enabling telemetry collection
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (TelemetryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryProperties)(nil)).Elem()
}

func (i TelemetryPropertiesArgs) ToTelemetryPropertiesOutput() TelemetryPropertiesOutput {
	return i.ToTelemetryPropertiesOutputWithContext(context.Background())
}

func (i TelemetryPropertiesArgs) ToTelemetryPropertiesOutputWithContext(ctx context.Context) TelemetryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryPropertiesOutput)
}

func (i TelemetryPropertiesArgs) ToTelemetryPropertiesPtrOutput() TelemetryPropertiesPtrOutput {
	return i.ToTelemetryPropertiesPtrOutputWithContext(context.Background())
}

func (i TelemetryPropertiesArgs) ToTelemetryPropertiesPtrOutputWithContext(ctx context.Context) TelemetryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryPropertiesOutput).ToTelemetryPropertiesPtrOutputWithContext(ctx)
}

// TelemetryPropertiesPtrInput is an input type that accepts TelemetryPropertiesArgs, TelemetryPropertiesPtr and TelemetryPropertiesPtrOutput values.
// You can construct a concrete instance of `TelemetryPropertiesPtrInput` via:
//
//	        TelemetryPropertiesArgs{...}
//
//	or:
//
//	        nil
type TelemetryPropertiesPtrInput interface {
	pulumi.Input

	ToTelemetryPropertiesPtrOutput() TelemetryPropertiesPtrOutput
	ToTelemetryPropertiesPtrOutputWithContext(context.Context) TelemetryPropertiesPtrOutput
}

type telemetryPropertiesPtrType TelemetryPropertiesArgs

func TelemetryPropertiesPtr(v *TelemetryPropertiesArgs) TelemetryPropertiesPtrInput {
	return (*telemetryPropertiesPtrType)(v)
}

func (*telemetryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryProperties)(nil)).Elem()
}

func (i *telemetryPropertiesPtrType) ToTelemetryPropertiesPtrOutput() TelemetryPropertiesPtrOutput {
	return i.ToTelemetryPropertiesPtrOutputWithContext(context.Background())
}

func (i *telemetryPropertiesPtrType) ToTelemetryPropertiesPtrOutputWithContext(ctx context.Context) TelemetryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryPropertiesPtrOutput)
}

// Telemetry settings
type TelemetryPropertiesOutput struct{ *pulumi.OutputState }

func (TelemetryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryProperties)(nil)).Elem()
}

func (o TelemetryPropertiesOutput) ToTelemetryPropertiesOutput() TelemetryPropertiesOutput {
	return o
}

func (o TelemetryPropertiesOutput) ToTelemetryPropertiesOutputWithContext(ctx context.Context) TelemetryPropertiesOutput {
	return o
}

func (o TelemetryPropertiesOutput) ToTelemetryPropertiesPtrOutput() TelemetryPropertiesPtrOutput {
	return o.ToTelemetryPropertiesPtrOutputWithContext(context.Background())
}

func (o TelemetryPropertiesOutput) ToTelemetryPropertiesPtrOutputWithContext(ctx context.Context) TelemetryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelemetryProperties) *TelemetryProperties {
		return &v
	}).(TelemetryPropertiesPtrOutput)
}

// Resource ID of a resource enabling telemetry collection
func (o TelemetryPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelemetryProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type TelemetryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TelemetryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryProperties)(nil)).Elem()
}

func (o TelemetryPropertiesPtrOutput) ToTelemetryPropertiesPtrOutput() TelemetryPropertiesPtrOutput {
	return o
}

func (o TelemetryPropertiesPtrOutput) ToTelemetryPropertiesPtrOutputWithContext(ctx context.Context) TelemetryPropertiesPtrOutput {
	return o
}

func (o TelemetryPropertiesPtrOutput) Elem() TelemetryPropertiesOutput {
	return o.ApplyT(func(v *TelemetryProperties) TelemetryProperties {
		if v != nil {
			return *v
		}
		var ret TelemetryProperties
		return ret
	}).(TelemetryPropertiesOutput)
}

// Resource ID of a resource enabling telemetry collection
func (o TelemetryPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelemetryProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Telemetry settings
type TelemetryPropertiesResponse struct {
	// Resource ID of a resource enabling telemetry collection
	ResourceId *string `pulumi:"resourceId"`
}

// Telemetry settings
type TelemetryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TelemetryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryPropertiesResponse)(nil)).Elem()
}

func (o TelemetryPropertiesResponseOutput) ToTelemetryPropertiesResponseOutput() TelemetryPropertiesResponseOutput {
	return o
}

func (o TelemetryPropertiesResponseOutput) ToTelemetryPropertiesResponseOutputWithContext(ctx context.Context) TelemetryPropertiesResponseOutput {
	return o
}

// Resource ID of a resource enabling telemetry collection
func (o TelemetryPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelemetryPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type TelemetryPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TelemetryPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryPropertiesResponse)(nil)).Elem()
}

func (o TelemetryPropertiesResponsePtrOutput) ToTelemetryPropertiesResponsePtrOutput() TelemetryPropertiesResponsePtrOutput {
	return o
}

func (o TelemetryPropertiesResponsePtrOutput) ToTelemetryPropertiesResponsePtrOutputWithContext(ctx context.Context) TelemetryPropertiesResponsePtrOutput {
	return o
}

func (o TelemetryPropertiesResponsePtrOutput) Elem() TelemetryPropertiesResponseOutput {
	return o.ApplyT(func(v *TelemetryPropertiesResponse) TelemetryPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TelemetryPropertiesResponse
		return ret
	}).(TelemetryPropertiesResponseOutput)
}

// Resource ID of a resource enabling telemetry collection
func (o TelemetryPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelemetryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponse struct {
	// The client ID of the user-assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user-assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// The client ID of the user-assigned identity.
func (o UserIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user-assigned identity.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutput() UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutputWithContext(ctx context.Context) UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityResponse {
		return vs[0].(map[string]UserIdentityResponse)[vs[1].(string)]
	}).(UserIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyResponseOutput{})
	pulumi.RegisterOutputType(ApiKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(DataPlaneProxyPropertiesOutput{})
	pulumi.RegisterOutputType(DataPlaneProxyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataPlaneProxyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataPlaneProxyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExperimentationPropertiesOutput{})
	pulumi.RegisterOutputType(ExperimentationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExperimentationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExperimentationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionReferenceResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TelemetryPropertiesOutput{})
	pulumi.RegisterOutputType(TelemetryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TelemetryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TelemetryPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseMapOutput{})
}
