// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package offazure

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A ImportSite
// Azure REST API version: 2023-06-06.
type ImportSitesController struct {
	pulumi.CustomResourceState

	// Gets or sets the ARM ID of migration hub solution for SDS.
	DiscoverySolutionId pulumi.StringPtrOutput `pulumi:"discoverySolutionId"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Gets the Master Site this site is linked to.
	MasterSiteId pulumi.StringOutput `pulumi:"masterSiteId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Gets the service endpoint.
	ServiceEndpoint pulumi.StringOutput `pulumi:"serviceEndpoint"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewImportSitesController registers a new resource with the given unique name, arguments, and options.
func NewImportSitesController(ctx *pulumi.Context,
	name string, args *ImportSitesControllerArgs, opts ...pulumi.ResourceOption) (*ImportSitesController, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:offazure/v20230606:ImportSitesController"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ImportSitesController
	err := ctx.RegisterResource("azure-native:offazure:ImportSitesController", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImportSitesController gets an existing ImportSitesController resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImportSitesController(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImportSitesControllerState, opts ...pulumi.ResourceOption) (*ImportSitesController, error) {
	var resource ImportSitesController
	err := ctx.ReadResource("azure-native:offazure:ImportSitesController", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImportSitesController resources.
type importSitesControllerState struct {
}

type ImportSitesControllerState struct {
}

func (ImportSitesControllerState) ElementType() reflect.Type {
	return reflect.TypeOf((*importSitesControllerState)(nil)).Elem()
}

type importSitesControllerArgs struct {
	// Gets or sets the ARM ID of migration hub solution for SDS.
	DiscoverySolutionId *string `pulumi:"discoverySolutionId"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The status of the last operation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Site name
	SiteName *string `pulumi:"siteName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ImportSitesController resource.
type ImportSitesControllerArgs struct {
	// Gets or sets the ARM ID of migration hub solution for SDS.
	DiscoverySolutionId pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The status of the last operation.
	ProvisioningState pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Site name
	SiteName pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ImportSitesControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*importSitesControllerArgs)(nil)).Elem()
}

type ImportSitesControllerInput interface {
	pulumi.Input

	ToImportSitesControllerOutput() ImportSitesControllerOutput
	ToImportSitesControllerOutputWithContext(ctx context.Context) ImportSitesControllerOutput
}

func (*ImportSitesController) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportSitesController)(nil)).Elem()
}

func (i *ImportSitesController) ToImportSitesControllerOutput() ImportSitesControllerOutput {
	return i.ToImportSitesControllerOutputWithContext(context.Background())
}

func (i *ImportSitesController) ToImportSitesControllerOutputWithContext(ctx context.Context) ImportSitesControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportSitesControllerOutput)
}

type ImportSitesControllerOutput struct{ *pulumi.OutputState }

func (ImportSitesControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportSitesController)(nil)).Elem()
}

func (o ImportSitesControllerOutput) ToImportSitesControllerOutput() ImportSitesControllerOutput {
	return o
}

func (o ImportSitesControllerOutput) ToImportSitesControllerOutputWithContext(ctx context.Context) ImportSitesControllerOutput {
	return o
}

// Gets or sets the ARM ID of migration hub solution for SDS.
func (o ImportSitesControllerOutput) DiscoverySolutionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringPtrOutput { return v.DiscoverySolutionId }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o ImportSitesControllerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Gets the Master Site this site is linked to.
func (o ImportSitesControllerOutput) MasterSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringOutput { return v.MasterSiteId }).(pulumi.StringOutput)
}

// The name of the resource
func (o ImportSitesControllerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o ImportSitesControllerOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets the service endpoint.
func (o ImportSitesControllerOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringOutput { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ImportSitesControllerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ImportSitesController) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ImportSitesControllerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ImportSitesControllerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ImportSitesController) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ImportSitesControllerOutput{})
}
