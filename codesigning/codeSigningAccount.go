// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codesigning

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Trusted signing account resource.
// Azure REST API version: 2024-02-05-preview.
type CodeSigningAccount struct {
	pulumi.CustomResourceState

	// The URI of the trusted signing account which is used during signing files.
	AccountUri pulumi.StringOutput `pulumi:"accountUri"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Status of the current operation on trusted signing account.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// SKU of the trusted signing account.
	Sku AccountSkuResponsePtrOutput `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCodeSigningAccount registers a new resource with the given unique name, arguments, and options.
func NewCodeSigningAccount(ctx *pulumi.Context,
	name string, args *CodeSigningAccountArgs, opts ...pulumi.ResourceOption) (*CodeSigningAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:codesigning/v20240205preview:CodeSigningAccount"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CodeSigningAccount
	err := ctx.RegisterResource("azure-native:codesigning:CodeSigningAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCodeSigningAccount gets an existing CodeSigningAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCodeSigningAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CodeSigningAccountState, opts ...pulumi.ResourceOption) (*CodeSigningAccount, error) {
	var resource CodeSigningAccount
	err := ctx.ReadResource("azure-native:codesigning:CodeSigningAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CodeSigningAccount resources.
type codeSigningAccountState struct {
}

type CodeSigningAccountState struct {
}

func (CodeSigningAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*codeSigningAccountState)(nil)).Elem()
}

type codeSigningAccountArgs struct {
	// Trusted Signing account name.
	AccountName *string `pulumi:"accountName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SKU of the trusted signing account.
	Sku *AccountSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CodeSigningAccount resource.
type CodeSigningAccountArgs struct {
	// Trusted Signing account name.
	AccountName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// SKU of the trusted signing account.
	Sku AccountSkuPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CodeSigningAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*codeSigningAccountArgs)(nil)).Elem()
}

type CodeSigningAccountInput interface {
	pulumi.Input

	ToCodeSigningAccountOutput() CodeSigningAccountOutput
	ToCodeSigningAccountOutputWithContext(ctx context.Context) CodeSigningAccountOutput
}

func (*CodeSigningAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningAccount)(nil)).Elem()
}

func (i *CodeSigningAccount) ToCodeSigningAccountOutput() CodeSigningAccountOutput {
	return i.ToCodeSigningAccountOutputWithContext(context.Background())
}

func (i *CodeSigningAccount) ToCodeSigningAccountOutputWithContext(ctx context.Context) CodeSigningAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningAccountOutput)
}

type CodeSigningAccountOutput struct{ *pulumi.OutputState }

func (CodeSigningAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningAccount)(nil)).Elem()
}

func (o CodeSigningAccountOutput) ToCodeSigningAccountOutput() CodeSigningAccountOutput {
	return o
}

func (o CodeSigningAccountOutput) ToCodeSigningAccountOutputWithContext(ctx context.Context) CodeSigningAccountOutput {
	return o
}

// The URI of the trusted signing account which is used during signing files.
func (o CodeSigningAccountOutput) AccountUri() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeSigningAccount) pulumi.StringOutput { return v.AccountUri }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o CodeSigningAccountOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeSigningAccount) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o CodeSigningAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeSigningAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Status of the current operation on trusted signing account.
func (o CodeSigningAccountOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeSigningAccount) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SKU of the trusted signing account.
func (o CodeSigningAccountOutput) Sku() AccountSkuResponsePtrOutput {
	return o.ApplyT(func(v *CodeSigningAccount) AccountSkuResponsePtrOutput { return v.Sku }).(AccountSkuResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CodeSigningAccountOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CodeSigningAccount) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CodeSigningAccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeSigningAccount) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CodeSigningAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeSigningAccount) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CodeSigningAccountOutput{})
}
