// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220904

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Whether master virtual machines are encrypted at host.
type EncryptionAtHost string

const (
	EncryptionAtHostDisabled = EncryptionAtHost("Disabled")
	EncryptionAtHostEnabled  = EncryptionAtHost("Enabled")
)

func (EncryptionAtHost) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtHost)(nil)).Elem()
}

func (e EncryptionAtHost) ToEncryptionAtHostOutput() EncryptionAtHostOutput {
	return pulumi.ToOutput(e).(EncryptionAtHostOutput)
}

func (e EncryptionAtHost) ToEncryptionAtHostOutputWithContext(ctx context.Context) EncryptionAtHostOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionAtHostOutput)
}

func (e EncryptionAtHost) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return e.ToEncryptionAtHostPtrOutputWithContext(context.Background())
}

func (e EncryptionAtHost) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return EncryptionAtHost(e).ToEncryptionAtHostOutputWithContext(ctx).ToEncryptionAtHostPtrOutputWithContext(ctx)
}

func (e EncryptionAtHost) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAtHost) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAtHost) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionAtHost) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionAtHostOutput struct{ *pulumi.OutputState }

func (EncryptionAtHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtHost)(nil)).Elem()
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostOutput() EncryptionAtHostOutput {
	return o
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostOutputWithContext(ctx context.Context) EncryptionAtHostOutput {
	return o
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return o.ToEncryptionAtHostPtrOutputWithContext(context.Background())
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtHost) *EncryptionAtHost {
		return &v
	}).(EncryptionAtHostPtrOutput)
}

func (o EncryptionAtHostOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionAtHostOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAtHost) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionAtHostOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAtHostOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAtHost) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtHostPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtHostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtHost)(nil)).Elem()
}

func (o EncryptionAtHostPtrOutput) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return o
}

func (o EncryptionAtHostPtrOutput) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return o
}

func (o EncryptionAtHostPtrOutput) Elem() EncryptionAtHostOutput {
	return o.ApplyT(func(v *EncryptionAtHost) EncryptionAtHost {
		if v != nil {
			return *v
		}
		var ret EncryptionAtHost
		return ret
	}).(EncryptionAtHostOutput)
}

func (o EncryptionAtHostPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAtHostPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionAtHost) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionAtHostInput is an input type that accepts values of the EncryptionAtHost enum
// A concrete instance of `EncryptionAtHostInput` can be one of the following:
//
//	EncryptionAtHostDisabled
//	EncryptionAtHostEnabled
type EncryptionAtHostInput interface {
	pulumi.Input

	ToEncryptionAtHostOutput() EncryptionAtHostOutput
	ToEncryptionAtHostOutputWithContext(context.Context) EncryptionAtHostOutput
}

var encryptionAtHostPtrType = reflect.TypeOf((**EncryptionAtHost)(nil)).Elem()

type EncryptionAtHostPtrInput interface {
	pulumi.Input

	ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput
	ToEncryptionAtHostPtrOutputWithContext(context.Context) EncryptionAtHostPtrOutput
}

type encryptionAtHostPtr string

func EncryptionAtHostPtr(v string) EncryptionAtHostPtrInput {
	return (*encryptionAtHostPtr)(&v)
}

func (*encryptionAtHostPtr) ElementType() reflect.Type {
	return encryptionAtHostPtrType
}

func (in *encryptionAtHostPtr) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return pulumi.ToOutput(in).(EncryptionAtHostPtrOutput)
}

func (in *encryptionAtHostPtr) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionAtHostPtrOutput)
}

// If FIPS validated crypto modules are used
type FipsValidatedModules string

const (
	FipsValidatedModulesDisabled = FipsValidatedModules("Disabled")
	FipsValidatedModulesEnabled  = FipsValidatedModules("Enabled")
)

func (FipsValidatedModules) ElementType() reflect.Type {
	return reflect.TypeOf((*FipsValidatedModules)(nil)).Elem()
}

func (e FipsValidatedModules) ToFipsValidatedModulesOutput() FipsValidatedModulesOutput {
	return pulumi.ToOutput(e).(FipsValidatedModulesOutput)
}

func (e FipsValidatedModules) ToFipsValidatedModulesOutputWithContext(ctx context.Context) FipsValidatedModulesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FipsValidatedModulesOutput)
}

func (e FipsValidatedModules) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return e.ToFipsValidatedModulesPtrOutputWithContext(context.Background())
}

func (e FipsValidatedModules) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return FipsValidatedModules(e).ToFipsValidatedModulesOutputWithContext(ctx).ToFipsValidatedModulesPtrOutputWithContext(ctx)
}

func (e FipsValidatedModules) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FipsValidatedModules) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FipsValidatedModules) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FipsValidatedModules) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FipsValidatedModulesOutput struct{ *pulumi.OutputState }

func (FipsValidatedModulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FipsValidatedModules)(nil)).Elem()
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesOutput() FipsValidatedModulesOutput {
	return o
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesOutputWithContext(ctx context.Context) FipsValidatedModulesOutput {
	return o
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return o.ToFipsValidatedModulesPtrOutputWithContext(context.Background())
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FipsValidatedModules) *FipsValidatedModules {
		return &v
	}).(FipsValidatedModulesPtrOutput)
}

func (o FipsValidatedModulesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FipsValidatedModulesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FipsValidatedModules) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FipsValidatedModulesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FipsValidatedModulesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FipsValidatedModules) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FipsValidatedModulesPtrOutput struct{ *pulumi.OutputState }

func (FipsValidatedModulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FipsValidatedModules)(nil)).Elem()
}

func (o FipsValidatedModulesPtrOutput) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return o
}

func (o FipsValidatedModulesPtrOutput) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return o
}

func (o FipsValidatedModulesPtrOutput) Elem() FipsValidatedModulesOutput {
	return o.ApplyT(func(v *FipsValidatedModules) FipsValidatedModules {
		if v != nil {
			return *v
		}
		var ret FipsValidatedModules
		return ret
	}).(FipsValidatedModulesOutput)
}

func (o FipsValidatedModulesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FipsValidatedModulesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FipsValidatedModules) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FipsValidatedModulesInput is an input type that accepts values of the FipsValidatedModules enum
// A concrete instance of `FipsValidatedModulesInput` can be one of the following:
//
//	FipsValidatedModulesDisabled
//	FipsValidatedModulesEnabled
type FipsValidatedModulesInput interface {
	pulumi.Input

	ToFipsValidatedModulesOutput() FipsValidatedModulesOutput
	ToFipsValidatedModulesOutputWithContext(context.Context) FipsValidatedModulesOutput
}

var fipsValidatedModulesPtrType = reflect.TypeOf((**FipsValidatedModules)(nil)).Elem()

type FipsValidatedModulesPtrInput interface {
	pulumi.Input

	ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput
	ToFipsValidatedModulesPtrOutputWithContext(context.Context) FipsValidatedModulesPtrOutput
}

type fipsValidatedModulesPtr string

func FipsValidatedModulesPtr(v string) FipsValidatedModulesPtrInput {
	return (*fipsValidatedModulesPtr)(&v)
}

func (*fipsValidatedModulesPtr) ElementType() reflect.Type {
	return fipsValidatedModulesPtrType
}

func (in *fipsValidatedModulesPtr) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return pulumi.ToOutput(in).(FipsValidatedModulesPtrOutput)
}

func (in *fipsValidatedModulesPtr) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FipsValidatedModulesPtrOutput)
}

// Ingress visibility.
type Visibility string

const (
	VisibilityPrivate = Visibility("Private")
	VisibilityPublic  = Visibility("Public")
)

func (Visibility) ElementType() reflect.Type {
	return reflect.TypeOf((*Visibility)(nil)).Elem()
}

func (e Visibility) ToVisibilityOutput() VisibilityOutput {
	return pulumi.ToOutput(e).(VisibilityOutput)
}

func (e Visibility) ToVisibilityOutputWithContext(ctx context.Context) VisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VisibilityOutput)
}

func (e Visibility) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return e.ToVisibilityPtrOutputWithContext(context.Background())
}

func (e Visibility) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return Visibility(e).ToVisibilityOutputWithContext(ctx).ToVisibilityPtrOutputWithContext(ctx)
}

func (e Visibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Visibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VisibilityOutput struct{ *pulumi.OutputState }

func (VisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Visibility)(nil)).Elem()
}

func (o VisibilityOutput) ToVisibilityOutput() VisibilityOutput {
	return o
}

func (o VisibilityOutput) ToVisibilityOutputWithContext(ctx context.Context) VisibilityOutput {
	return o
}

func (o VisibilityOutput) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return o.ToVisibilityPtrOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Visibility) *Visibility {
		return &v
	}).(VisibilityPtrOutput)
}

func (o VisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Visibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Visibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VisibilityPtrOutput struct{ *pulumi.OutputState }

func (VisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Visibility)(nil)).Elem()
}

func (o VisibilityPtrOutput) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return o
}

func (o VisibilityPtrOutput) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return o
}

func (o VisibilityPtrOutput) Elem() VisibilityOutput {
	return o.ApplyT(func(v *Visibility) Visibility {
		if v != nil {
			return *v
		}
		var ret Visibility
		return ret
	}).(VisibilityOutput)
}

func (o VisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Visibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VisibilityInput is an input type that accepts values of the Visibility enum
// A concrete instance of `VisibilityInput` can be one of the following:
//
//	VisibilityPrivate
//	VisibilityPublic
type VisibilityInput interface {
	pulumi.Input

	ToVisibilityOutput() VisibilityOutput
	ToVisibilityOutputWithContext(context.Context) VisibilityOutput
}

var visibilityPtrType = reflect.TypeOf((**Visibility)(nil)).Elem()

type VisibilityPtrInput interface {
	pulumi.Input

	ToVisibilityPtrOutput() VisibilityPtrOutput
	ToVisibilityPtrOutputWithContext(context.Context) VisibilityPtrOutput
}

type visibilityPtr string

func VisibilityPtr(v string) VisibilityPtrInput {
	return (*visibilityPtr)(&v)
}

func (*visibilityPtr) ElementType() reflect.Type {
	return visibilityPtrType
}

func (in *visibilityPtr) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return pulumi.ToOutput(in).(VisibilityPtrOutput)
}

func (in *visibilityPtr) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VisibilityPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EncryptionAtHostOutput{})
	pulumi.RegisterOutputType(EncryptionAtHostPtrOutput{})
	pulumi.RegisterOutputType(FipsValidatedModulesOutput{})
	pulumi.RegisterOutputType(FipsValidatedModulesPtrOutput{})
	pulumi.RegisterOutputType(VisibilityOutput{})
	pulumi.RegisterOutputType(VisibilityPtrOutput{})
}
