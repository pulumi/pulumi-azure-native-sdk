// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230904

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Whether master virtual machines are encrypted at host.
type EncryptionAtHost string

const (
	EncryptionAtHostDisabled = EncryptionAtHost("Disabled")
	EncryptionAtHostEnabled  = EncryptionAtHost("Enabled")
)

func (EncryptionAtHost) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtHost)(nil)).Elem()
}

func (e EncryptionAtHost) ToEncryptionAtHostOutput() EncryptionAtHostOutput {
	return pulumi.ToOutput(e).(EncryptionAtHostOutput)
}

func (e EncryptionAtHost) ToEncryptionAtHostOutputWithContext(ctx context.Context) EncryptionAtHostOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionAtHostOutput)
}

func (e EncryptionAtHost) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return e.ToEncryptionAtHostPtrOutputWithContext(context.Background())
}

func (e EncryptionAtHost) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return EncryptionAtHost(e).ToEncryptionAtHostOutputWithContext(ctx).ToEncryptionAtHostPtrOutputWithContext(ctx)
}

func (e EncryptionAtHost) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAtHost) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAtHost) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionAtHost) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionAtHostOutput struct{ *pulumi.OutputState }

func (EncryptionAtHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtHost)(nil)).Elem()
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostOutput() EncryptionAtHostOutput {
	return o
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostOutputWithContext(ctx context.Context) EncryptionAtHostOutput {
	return o
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return o.ToEncryptionAtHostPtrOutputWithContext(context.Background())
}

func (o EncryptionAtHostOutput) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtHost) *EncryptionAtHost {
		return &v
	}).(EncryptionAtHostPtrOutput)
}

func (o EncryptionAtHostOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionAtHostOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAtHost) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionAtHostOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAtHostOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAtHost) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtHostPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtHostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtHost)(nil)).Elem()
}

func (o EncryptionAtHostPtrOutput) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return o
}

func (o EncryptionAtHostPtrOutput) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return o
}

func (o EncryptionAtHostPtrOutput) Elem() EncryptionAtHostOutput {
	return o.ApplyT(func(v *EncryptionAtHost) EncryptionAtHost {
		if v != nil {
			return *v
		}
		var ret EncryptionAtHost
		return ret
	}).(EncryptionAtHostOutput)
}

func (o EncryptionAtHostPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAtHostPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionAtHost) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionAtHostInput is an input type that accepts values of the EncryptionAtHost enum
// A concrete instance of `EncryptionAtHostInput` can be one of the following:
//
//	EncryptionAtHostDisabled
//	EncryptionAtHostEnabled
type EncryptionAtHostInput interface {
	pulumi.Input

	ToEncryptionAtHostOutput() EncryptionAtHostOutput
	ToEncryptionAtHostOutputWithContext(context.Context) EncryptionAtHostOutput
}

var encryptionAtHostPtrType = reflect.TypeOf((**EncryptionAtHost)(nil)).Elem()

type EncryptionAtHostPtrInput interface {
	pulumi.Input

	ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput
	ToEncryptionAtHostPtrOutputWithContext(context.Context) EncryptionAtHostPtrOutput
}

type encryptionAtHostPtr string

func EncryptionAtHostPtr(v string) EncryptionAtHostPtrInput {
	return (*encryptionAtHostPtr)(&v)
}

func (*encryptionAtHostPtr) ElementType() reflect.Type {
	return encryptionAtHostPtrType
}

func (in *encryptionAtHostPtr) ToEncryptionAtHostPtrOutput() EncryptionAtHostPtrOutput {
	return pulumi.ToOutput(in).(EncryptionAtHostPtrOutput)
}

func (in *encryptionAtHostPtr) ToEncryptionAtHostPtrOutputWithContext(ctx context.Context) EncryptionAtHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionAtHostPtrOutput)
}

func (in *encryptionAtHostPtr) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtHost] {
	return pulumix.Output[*EncryptionAtHost]{
		OutputState: in.ToEncryptionAtHostPtrOutputWithContext(ctx).OutputState,
	}
}

// If FIPS validated crypto modules are used
type FipsValidatedModules string

const (
	FipsValidatedModulesDisabled = FipsValidatedModules("Disabled")
	FipsValidatedModulesEnabled  = FipsValidatedModules("Enabled")
)

func (FipsValidatedModules) ElementType() reflect.Type {
	return reflect.TypeOf((*FipsValidatedModules)(nil)).Elem()
}

func (e FipsValidatedModules) ToFipsValidatedModulesOutput() FipsValidatedModulesOutput {
	return pulumi.ToOutput(e).(FipsValidatedModulesOutput)
}

func (e FipsValidatedModules) ToFipsValidatedModulesOutputWithContext(ctx context.Context) FipsValidatedModulesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FipsValidatedModulesOutput)
}

func (e FipsValidatedModules) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return e.ToFipsValidatedModulesPtrOutputWithContext(context.Background())
}

func (e FipsValidatedModules) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return FipsValidatedModules(e).ToFipsValidatedModulesOutputWithContext(ctx).ToFipsValidatedModulesPtrOutputWithContext(ctx)
}

func (e FipsValidatedModules) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FipsValidatedModules) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FipsValidatedModules) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FipsValidatedModules) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FipsValidatedModulesOutput struct{ *pulumi.OutputState }

func (FipsValidatedModulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FipsValidatedModules)(nil)).Elem()
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesOutput() FipsValidatedModulesOutput {
	return o
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesOutputWithContext(ctx context.Context) FipsValidatedModulesOutput {
	return o
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return o.ToFipsValidatedModulesPtrOutputWithContext(context.Background())
}

func (o FipsValidatedModulesOutput) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FipsValidatedModules) *FipsValidatedModules {
		return &v
	}).(FipsValidatedModulesPtrOutput)
}

func (o FipsValidatedModulesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FipsValidatedModulesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FipsValidatedModules) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FipsValidatedModulesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FipsValidatedModulesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FipsValidatedModules) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FipsValidatedModulesPtrOutput struct{ *pulumi.OutputState }

func (FipsValidatedModulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FipsValidatedModules)(nil)).Elem()
}

func (o FipsValidatedModulesPtrOutput) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return o
}

func (o FipsValidatedModulesPtrOutput) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return o
}

func (o FipsValidatedModulesPtrOutput) Elem() FipsValidatedModulesOutput {
	return o.ApplyT(func(v *FipsValidatedModules) FipsValidatedModules {
		if v != nil {
			return *v
		}
		var ret FipsValidatedModules
		return ret
	}).(FipsValidatedModulesOutput)
}

func (o FipsValidatedModulesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FipsValidatedModulesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FipsValidatedModules) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FipsValidatedModulesInput is an input type that accepts values of the FipsValidatedModules enum
// A concrete instance of `FipsValidatedModulesInput` can be one of the following:
//
//	FipsValidatedModulesDisabled
//	FipsValidatedModulesEnabled
type FipsValidatedModulesInput interface {
	pulumi.Input

	ToFipsValidatedModulesOutput() FipsValidatedModulesOutput
	ToFipsValidatedModulesOutputWithContext(context.Context) FipsValidatedModulesOutput
}

var fipsValidatedModulesPtrType = reflect.TypeOf((**FipsValidatedModules)(nil)).Elem()

type FipsValidatedModulesPtrInput interface {
	pulumi.Input

	ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput
	ToFipsValidatedModulesPtrOutputWithContext(context.Context) FipsValidatedModulesPtrOutput
}

type fipsValidatedModulesPtr string

func FipsValidatedModulesPtr(v string) FipsValidatedModulesPtrInput {
	return (*fipsValidatedModulesPtr)(&v)
}

func (*fipsValidatedModulesPtr) ElementType() reflect.Type {
	return fipsValidatedModulesPtrType
}

func (in *fipsValidatedModulesPtr) ToFipsValidatedModulesPtrOutput() FipsValidatedModulesPtrOutput {
	return pulumi.ToOutput(in).(FipsValidatedModulesPtrOutput)
}

func (in *fipsValidatedModulesPtr) ToFipsValidatedModulesPtrOutputWithContext(ctx context.Context) FipsValidatedModulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FipsValidatedModulesPtrOutput)
}

func (in *fipsValidatedModulesPtr) ToOutput(ctx context.Context) pulumix.Output[*FipsValidatedModules] {
	return pulumix.Output[*FipsValidatedModules]{
		OutputState: in.ToFipsValidatedModulesPtrOutputWithContext(ctx).OutputState,
	}
}

// The OutboundType used for egress traffic.
type OutboundType string

const (
	OutboundTypeLoadbalancer       = OutboundType("Loadbalancer")
	OutboundTypeUserDefinedRouting = OutboundType("UserDefinedRouting")
)

func (OutboundType) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundType)(nil)).Elem()
}

func (e OutboundType) ToOutboundTypeOutput() OutboundTypeOutput {
	return pulumi.ToOutput(e).(OutboundTypeOutput)
}

func (e OutboundType) ToOutboundTypeOutputWithContext(ctx context.Context) OutboundTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OutboundTypeOutput)
}

func (e OutboundType) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return e.ToOutboundTypePtrOutputWithContext(context.Background())
}

func (e OutboundType) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return OutboundType(e).ToOutboundTypeOutputWithContext(ctx).ToOutboundTypePtrOutputWithContext(ctx)
}

func (e OutboundType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutboundType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutboundType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OutboundType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OutboundTypeOutput struct{ *pulumi.OutputState }

func (OutboundTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundType)(nil)).Elem()
}

func (o OutboundTypeOutput) ToOutboundTypeOutput() OutboundTypeOutput {
	return o
}

func (o OutboundTypeOutput) ToOutboundTypeOutputWithContext(ctx context.Context) OutboundTypeOutput {
	return o
}

func (o OutboundTypeOutput) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return o.ToOutboundTypePtrOutputWithContext(context.Background())
}

func (o OutboundTypeOutput) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutboundType) *OutboundType {
		return &v
	}).(OutboundTypePtrOutput)
}

func (o OutboundTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OutboundTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutboundType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OutboundTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutboundTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutboundType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OutboundTypePtrOutput struct{ *pulumi.OutputState }

func (OutboundTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundType)(nil)).Elem()
}

func (o OutboundTypePtrOutput) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return o
}

func (o OutboundTypePtrOutput) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return o
}

func (o OutboundTypePtrOutput) Elem() OutboundTypeOutput {
	return o.ApplyT(func(v *OutboundType) OutboundType {
		if v != nil {
			return *v
		}
		var ret OutboundType
		return ret
	}).(OutboundTypeOutput)
}

func (o OutboundTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutboundTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OutboundType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OutboundTypeInput is an input type that accepts values of the OutboundType enum
// A concrete instance of `OutboundTypeInput` can be one of the following:
//
//	OutboundTypeLoadbalancer
//	OutboundTypeUserDefinedRouting
type OutboundTypeInput interface {
	pulumi.Input

	ToOutboundTypeOutput() OutboundTypeOutput
	ToOutboundTypeOutputWithContext(context.Context) OutboundTypeOutput
}

var outboundTypePtrType = reflect.TypeOf((**OutboundType)(nil)).Elem()

type OutboundTypePtrInput interface {
	pulumi.Input

	ToOutboundTypePtrOutput() OutboundTypePtrOutput
	ToOutboundTypePtrOutputWithContext(context.Context) OutboundTypePtrOutput
}

type outboundTypePtr string

func OutboundTypePtr(v string) OutboundTypePtrInput {
	return (*outboundTypePtr)(&v)
}

func (*outboundTypePtr) ElementType() reflect.Type {
	return outboundTypePtrType
}

func (in *outboundTypePtr) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return pulumi.ToOutput(in).(OutboundTypePtrOutput)
}

func (in *outboundTypePtr) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OutboundTypePtrOutput)
}

func (in *outboundTypePtr) ToOutput(ctx context.Context) pulumix.Output[*OutboundType] {
	return pulumix.Output[*OutboundType]{
		OutputState: in.ToOutboundTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies whether subnets are pre-attached with an NSG
type PreconfiguredNSG string

const (
	PreconfiguredNSGDisabled = PreconfiguredNSG("Disabled")
	PreconfiguredNSGEnabled  = PreconfiguredNSG("Enabled")
)

func (PreconfiguredNSG) ElementType() reflect.Type {
	return reflect.TypeOf((*PreconfiguredNSG)(nil)).Elem()
}

func (e PreconfiguredNSG) ToPreconfiguredNSGOutput() PreconfiguredNSGOutput {
	return pulumi.ToOutput(e).(PreconfiguredNSGOutput)
}

func (e PreconfiguredNSG) ToPreconfiguredNSGOutputWithContext(ctx context.Context) PreconfiguredNSGOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PreconfiguredNSGOutput)
}

func (e PreconfiguredNSG) ToPreconfiguredNSGPtrOutput() PreconfiguredNSGPtrOutput {
	return e.ToPreconfiguredNSGPtrOutputWithContext(context.Background())
}

func (e PreconfiguredNSG) ToPreconfiguredNSGPtrOutputWithContext(ctx context.Context) PreconfiguredNSGPtrOutput {
	return PreconfiguredNSG(e).ToPreconfiguredNSGOutputWithContext(ctx).ToPreconfiguredNSGPtrOutputWithContext(ctx)
}

func (e PreconfiguredNSG) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreconfiguredNSG) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreconfiguredNSG) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PreconfiguredNSG) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PreconfiguredNSGOutput struct{ *pulumi.OutputState }

func (PreconfiguredNSGOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreconfiguredNSG)(nil)).Elem()
}

func (o PreconfiguredNSGOutput) ToPreconfiguredNSGOutput() PreconfiguredNSGOutput {
	return o
}

func (o PreconfiguredNSGOutput) ToPreconfiguredNSGOutputWithContext(ctx context.Context) PreconfiguredNSGOutput {
	return o
}

func (o PreconfiguredNSGOutput) ToPreconfiguredNSGPtrOutput() PreconfiguredNSGPtrOutput {
	return o.ToPreconfiguredNSGPtrOutputWithContext(context.Background())
}

func (o PreconfiguredNSGOutput) ToPreconfiguredNSGPtrOutputWithContext(ctx context.Context) PreconfiguredNSGPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreconfiguredNSG) *PreconfiguredNSG {
		return &v
	}).(PreconfiguredNSGPtrOutput)
}

func (o PreconfiguredNSGOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PreconfiguredNSGOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreconfiguredNSG) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PreconfiguredNSGOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreconfiguredNSGOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreconfiguredNSG) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PreconfiguredNSGPtrOutput struct{ *pulumi.OutputState }

func (PreconfiguredNSGPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreconfiguredNSG)(nil)).Elem()
}

func (o PreconfiguredNSGPtrOutput) ToPreconfiguredNSGPtrOutput() PreconfiguredNSGPtrOutput {
	return o
}

func (o PreconfiguredNSGPtrOutput) ToPreconfiguredNSGPtrOutputWithContext(ctx context.Context) PreconfiguredNSGPtrOutput {
	return o
}

func (o PreconfiguredNSGPtrOutput) Elem() PreconfiguredNSGOutput {
	return o.ApplyT(func(v *PreconfiguredNSG) PreconfiguredNSG {
		if v != nil {
			return *v
		}
		var ret PreconfiguredNSG
		return ret
	}).(PreconfiguredNSGOutput)
}

func (o PreconfiguredNSGPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreconfiguredNSGPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PreconfiguredNSG) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PreconfiguredNSGInput is an input type that accepts values of the PreconfiguredNSG enum
// A concrete instance of `PreconfiguredNSGInput` can be one of the following:
//
//	PreconfiguredNSGDisabled
//	PreconfiguredNSGEnabled
type PreconfiguredNSGInput interface {
	pulumi.Input

	ToPreconfiguredNSGOutput() PreconfiguredNSGOutput
	ToPreconfiguredNSGOutputWithContext(context.Context) PreconfiguredNSGOutput
}

var preconfiguredNSGPtrType = reflect.TypeOf((**PreconfiguredNSG)(nil)).Elem()

type PreconfiguredNSGPtrInput interface {
	pulumi.Input

	ToPreconfiguredNSGPtrOutput() PreconfiguredNSGPtrOutput
	ToPreconfiguredNSGPtrOutputWithContext(context.Context) PreconfiguredNSGPtrOutput
}

type preconfiguredNSGPtr string

func PreconfiguredNSGPtr(v string) PreconfiguredNSGPtrInput {
	return (*preconfiguredNSGPtr)(&v)
}

func (*preconfiguredNSGPtr) ElementType() reflect.Type {
	return preconfiguredNSGPtrType
}

func (in *preconfiguredNSGPtr) ToPreconfiguredNSGPtrOutput() PreconfiguredNSGPtrOutput {
	return pulumi.ToOutput(in).(PreconfiguredNSGPtrOutput)
}

func (in *preconfiguredNSGPtr) ToPreconfiguredNSGPtrOutputWithContext(ctx context.Context) PreconfiguredNSGPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PreconfiguredNSGPtrOutput)
}

func (in *preconfiguredNSGPtr) ToOutput(ctx context.Context) pulumix.Output[*PreconfiguredNSG] {
	return pulumix.Output[*PreconfiguredNSG]{
		OutputState: in.ToPreconfiguredNSGPtrOutputWithContext(ctx).OutputState,
	}
}

// The cluster provisioning state.
type ProvisioningState string

const (
	ProvisioningStateAdminUpdating = ProvisioningState("AdminUpdating")
	ProvisioningStateCreating      = ProvisioningState("Creating")
	ProvisioningStateDeleting      = ProvisioningState("Deleting")
	ProvisioningStateFailed        = ProvisioningState("Failed")
	ProvisioningStateSucceeded     = ProvisioningState("Succeeded")
	ProvisioningStateUpdating      = ProvisioningState("Updating")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (e ProvisioningState) ToProvisioningStateOutput() ProvisioningStateOutput {
	return pulumi.ToOutput(e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return e.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return ProvisioningState(e).ToProvisioningStateOutputWithContext(ctx).ToProvisioningStatePtrOutputWithContext(ctx)
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProvisioningStateOutput struct{ *pulumi.OutputState }

func (ProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStateOutput) ToProvisioningStateOutput() ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningState) *ProvisioningState {
		return &v
	}).(ProvisioningStatePtrOutput)
}

func (o ProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) Elem() ProvisioningStateOutput {
	return o.ApplyT(func(v *ProvisioningState) ProvisioningState {
		if v != nil {
			return *v
		}
		var ret ProvisioningState
		return ret
	}).(ProvisioningStateOutput)
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProvisioningStateInput is an input type that accepts values of the ProvisioningState enum
// A concrete instance of `ProvisioningStateInput` can be one of the following:
//
//	ProvisioningStateAdminUpdating
//	ProvisioningStateCreating
//	ProvisioningStateDeleting
//	ProvisioningStateFailed
//	ProvisioningStateSucceeded
//	ProvisioningStateUpdating
type ProvisioningStateInput interface {
	pulumi.Input

	ToProvisioningStateOutput() ProvisioningStateOutput
	ToProvisioningStateOutputWithContext(context.Context) ProvisioningStateOutput
}

var provisioningStatePtrType = reflect.TypeOf((**ProvisioningState)(nil)).Elem()

type ProvisioningStatePtrInput interface {
	pulumi.Input

	ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput
	ToProvisioningStatePtrOutputWithContext(context.Context) ProvisioningStatePtrOutput
}

type provisioningStatePtr string

func ProvisioningStatePtr(v string) ProvisioningStatePtrInput {
	return (*provisioningStatePtr)(&v)
}

func (*provisioningStatePtr) ElementType() reflect.Type {
	return provisioningStatePtrType
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ProvisioningState] {
	return pulumix.Output[*ProvisioningState]{
		OutputState: in.ToProvisioningStatePtrOutputWithContext(ctx).OutputState,
	}
}

// Ingress visibility.
type Visibility string

const (
	VisibilityPrivate = Visibility("Private")
	VisibilityPublic  = Visibility("Public")
)

func (Visibility) ElementType() reflect.Type {
	return reflect.TypeOf((*Visibility)(nil)).Elem()
}

func (e Visibility) ToVisibilityOutput() VisibilityOutput {
	return pulumi.ToOutput(e).(VisibilityOutput)
}

func (e Visibility) ToVisibilityOutputWithContext(ctx context.Context) VisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VisibilityOutput)
}

func (e Visibility) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return e.ToVisibilityPtrOutputWithContext(context.Background())
}

func (e Visibility) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return Visibility(e).ToVisibilityOutputWithContext(ctx).ToVisibilityPtrOutputWithContext(ctx)
}

func (e Visibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Visibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VisibilityOutput struct{ *pulumi.OutputState }

func (VisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Visibility)(nil)).Elem()
}

func (o VisibilityOutput) ToVisibilityOutput() VisibilityOutput {
	return o
}

func (o VisibilityOutput) ToVisibilityOutputWithContext(ctx context.Context) VisibilityOutput {
	return o
}

func (o VisibilityOutput) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return o.ToVisibilityPtrOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Visibility) *Visibility {
		return &v
	}).(VisibilityPtrOutput)
}

func (o VisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Visibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Visibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VisibilityPtrOutput struct{ *pulumi.OutputState }

func (VisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Visibility)(nil)).Elem()
}

func (o VisibilityPtrOutput) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return o
}

func (o VisibilityPtrOutput) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return o
}

func (o VisibilityPtrOutput) Elem() VisibilityOutput {
	return o.ApplyT(func(v *Visibility) Visibility {
		if v != nil {
			return *v
		}
		var ret Visibility
		return ret
	}).(VisibilityOutput)
}

func (o VisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Visibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VisibilityInput is an input type that accepts values of the Visibility enum
// A concrete instance of `VisibilityInput` can be one of the following:
//
//	VisibilityPrivate
//	VisibilityPublic
type VisibilityInput interface {
	pulumi.Input

	ToVisibilityOutput() VisibilityOutput
	ToVisibilityOutputWithContext(context.Context) VisibilityOutput
}

var visibilityPtrType = reflect.TypeOf((**Visibility)(nil)).Elem()

type VisibilityPtrInput interface {
	pulumi.Input

	ToVisibilityPtrOutput() VisibilityPtrOutput
	ToVisibilityPtrOutputWithContext(context.Context) VisibilityPtrOutput
}

type visibilityPtr string

func VisibilityPtr(v string) VisibilityPtrInput {
	return (*visibilityPtr)(&v)
}

func (*visibilityPtr) ElementType() reflect.Type {
	return visibilityPtrType
}

func (in *visibilityPtr) ToVisibilityPtrOutput() VisibilityPtrOutput {
	return pulumi.ToOutput(in).(VisibilityPtrOutput)
}

func (in *visibilityPtr) ToVisibilityPtrOutputWithContext(ctx context.Context) VisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VisibilityPtrOutput)
}

func (in *visibilityPtr) ToOutput(ctx context.Context) pulumix.Output[*Visibility] {
	return pulumix.Output[*Visibility]{
		OutputState: in.ToVisibilityPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(EncryptionAtHostOutput{})
	pulumi.RegisterOutputType(EncryptionAtHostPtrOutput{})
	pulumi.RegisterOutputType(FipsValidatedModulesOutput{})
	pulumi.RegisterOutputType(FipsValidatedModulesPtrOutput{})
	pulumi.RegisterOutputType(OutboundTypeOutput{})
	pulumi.RegisterOutputType(OutboundTypePtrOutput{})
	pulumi.RegisterOutputType(PreconfiguredNSGOutput{})
	pulumi.RegisterOutputType(PreconfiguredNSGPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningStateOutput{})
	pulumi.RegisterOutputType(ProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(VisibilityOutput{})
	pulumi.RegisterOutputType(VisibilityPtrOutput{})
}
