// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthdataaiservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A HealthDataAIServicesProviderHub resource
// Azure REST API version: 2024-09-20. Prior API version in Azure Native 2.x: 2024-02-28-preview.
type DeidService struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties DeidServicePropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDeidService registers a new resource with the given unique name, arguments, and options.
func NewDeidService(ctx *pulumi.Context,
	name string, args *DeidServiceArgs, opts ...pulumi.ResourceOption) (*DeidService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:healthdataaiservices/v20240228preview:DeidService"),
		},
		{
			Type: pulumi.String("azure-native:healthdataaiservices/v20240920:DeidService"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DeidService
	err := ctx.RegisterResource("azure-native:healthdataaiservices:DeidService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeidService gets an existing DeidService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeidService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeidServiceState, opts ...pulumi.ResourceOption) (*DeidService, error) {
	var resource DeidService
	err := ctx.ReadResource("azure-native:healthdataaiservices:DeidService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeidService resources.
type deidServiceState struct {
}

type DeidServiceState struct {
}

func (DeidServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*deidServiceState)(nil)).Elem()
}

type deidServiceArgs struct {
	// The name of the deid service
	DeidServiceName *string `pulumi:"deidServiceName"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The resource-specific properties for this resource.
	Properties *DeidServiceProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DeidService resource.
type DeidServiceArgs struct {
	// The name of the deid service
	DeidServiceName pulumi.StringPtrInput
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties DeidServicePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (DeidServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deidServiceArgs)(nil)).Elem()
}

type DeidServiceInput interface {
	pulumi.Input

	ToDeidServiceOutput() DeidServiceOutput
	ToDeidServiceOutputWithContext(ctx context.Context) DeidServiceOutput
}

func (*DeidService) ElementType() reflect.Type {
	return reflect.TypeOf((**DeidService)(nil)).Elem()
}

func (i *DeidService) ToDeidServiceOutput() DeidServiceOutput {
	return i.ToDeidServiceOutputWithContext(context.Background())
}

func (i *DeidService) ToDeidServiceOutputWithContext(ctx context.Context) DeidServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeidServiceOutput)
}

type DeidServiceOutput struct{ *pulumi.OutputState }

func (DeidServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeidService)(nil)).Elem()
}

func (o DeidServiceOutput) ToDeidServiceOutput() DeidServiceOutput {
	return o
}

func (o DeidServiceOutput) ToDeidServiceOutputWithContext(ctx context.Context) DeidServiceOutput {
	return o
}

// The Azure API version of the resource.
func (o DeidServiceOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DeidService) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o DeidServiceOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DeidService) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o DeidServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DeidService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o DeidServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeidService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o DeidServiceOutput) Properties() DeidServicePropertiesResponseOutput {
	return o.ApplyT(func(v *DeidService) DeidServicePropertiesResponseOutput { return v.Properties }).(DeidServicePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DeidServiceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DeidService) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DeidServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeidService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DeidServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DeidService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DeidServiceOutput{})
}
