// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthbot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List all secrets of a HealthBot.
//
// Uses Azure REST API version 2024-02-01.
//
// Other available API versions: 2023-05-01, 2025-05-25. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native healthbot [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListBotSecrets(ctx *pulumi.Context, args *ListBotSecretsArgs, opts ...pulumi.InvokeOption) (*ListBotSecretsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListBotSecretsResult
	err := ctx.Invoke("azure-native:healthbot:listBotSecrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListBotSecretsArgs struct {
	// The name of the Bot resource.
	BotName string `pulumi:"botName"`
	// The name of the Bot resource group in the user subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Health Bot Keys Response.
type ListBotSecretsResult struct {
	// Array of Azure Health Bot Secrets.
	Secrets []HealthBotKeyResponse `pulumi:"secrets"`
}

func ListBotSecretsOutput(ctx *pulumi.Context, args ListBotSecretsOutputArgs, opts ...pulumi.InvokeOption) ListBotSecretsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListBotSecretsResultOutput, error) {
			args := v.(ListBotSecretsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:healthbot:listBotSecrets", args, ListBotSecretsResultOutput{}, options).(ListBotSecretsResultOutput), nil
		}).(ListBotSecretsResultOutput)
}

type ListBotSecretsOutputArgs struct {
	// The name of the Bot resource.
	BotName pulumi.StringInput `pulumi:"botName"`
	// The name of the Bot resource group in the user subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListBotSecretsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBotSecretsArgs)(nil)).Elem()
}

// Health Bot Keys Response.
type ListBotSecretsResultOutput struct{ *pulumi.OutputState }

func (ListBotSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBotSecretsResult)(nil)).Elem()
}

func (o ListBotSecretsResultOutput) ToListBotSecretsResultOutput() ListBotSecretsResultOutput {
	return o
}

func (o ListBotSecretsResultOutput) ToListBotSecretsResultOutputWithContext(ctx context.Context) ListBotSecretsResultOutput {
	return o
}

// Array of Azure Health Bot Secrets.
func (o ListBotSecretsResultOutput) Secrets() HealthBotKeyResponseArrayOutput {
	return o.ApplyT(func(v ListBotSecretsResult) []HealthBotKeyResponse { return v.Secrets }).(HealthBotKeyResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListBotSecretsResultOutput{})
}
