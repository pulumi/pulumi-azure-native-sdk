// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220415preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Cluster User Credential appliance.
type ApplianceCredentialKubeconfigResponse struct {
	// Name which contains the role of the kubeconfig.
	Name string `pulumi:"name"`
	// Contains the kubeconfig value.
	Value string `pulumi:"value"`
}

// Cluster User Credential appliance.
type ApplianceCredentialKubeconfigResponseOutput struct{ *pulumi.OutputState }

func (ApplianceCredentialKubeconfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceCredentialKubeconfigResponse)(nil)).Elem()
}

func (o ApplianceCredentialKubeconfigResponseOutput) ToApplianceCredentialKubeconfigResponseOutput() ApplianceCredentialKubeconfigResponseOutput {
	return o
}

func (o ApplianceCredentialKubeconfigResponseOutput) ToApplianceCredentialKubeconfigResponseOutputWithContext(ctx context.Context) ApplianceCredentialKubeconfigResponseOutput {
	return o
}

// Name which contains the role of the kubeconfig.
func (o ApplianceCredentialKubeconfigResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceCredentialKubeconfigResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Contains the kubeconfig value.
func (o ApplianceCredentialKubeconfigResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceCredentialKubeconfigResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ApplianceCredentialKubeconfigResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplianceCredentialKubeconfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceCredentialKubeconfigResponse)(nil)).Elem()
}

func (o ApplianceCredentialKubeconfigResponseArrayOutput) ToApplianceCredentialKubeconfigResponseArrayOutput() ApplianceCredentialKubeconfigResponseArrayOutput {
	return o
}

func (o ApplianceCredentialKubeconfigResponseArrayOutput) ToApplianceCredentialKubeconfigResponseArrayOutputWithContext(ctx context.Context) ApplianceCredentialKubeconfigResponseArrayOutput {
	return o
}

func (o ApplianceCredentialKubeconfigResponseArrayOutput) Index(i pulumi.IntInput) ApplianceCredentialKubeconfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceCredentialKubeconfigResponse {
		return vs[0].([]ApplianceCredentialKubeconfigResponse)[vs[1].(int)]
	}).(ApplianceCredentialKubeconfigResponseOutput)
}

// Appliance SSHKey definition.
type SSHKeyResponse struct {
	// User Private Key.
	PrivateKey *string `pulumi:"privateKey"`
	// User Public Key.
	PublicKey *string `pulumi:"publicKey"`
}

// Appliance SSHKey definition.
type SSHKeyResponseOutput struct{ *pulumi.OutputState }

func (SSHKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSHKeyResponse)(nil)).Elem()
}

func (o SSHKeyResponseOutput) ToSSHKeyResponseOutput() SSHKeyResponseOutput {
	return o
}

func (o SSHKeyResponseOutput) ToSSHKeyResponseOutputWithContext(ctx context.Context) SSHKeyResponseOutput {
	return o
}

// User Private Key.
func (o SSHKeyResponseOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSHKeyResponse) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// User Public Key.
func (o SSHKeyResponseOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SSHKeyResponse) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

type SSHKeyResponseMapOutput struct{ *pulumi.OutputState }

func (SSHKeyResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SSHKeyResponse)(nil)).Elem()
}

func (o SSHKeyResponseMapOutput) ToSSHKeyResponseMapOutput() SSHKeyResponseMapOutput {
	return o
}

func (o SSHKeyResponseMapOutput) ToSSHKeyResponseMapOutputWithContext(ctx context.Context) SSHKeyResponseMapOutput {
	return o
}

func (o SSHKeyResponseMapOutput) MapIndex(k pulumi.StringInput) SSHKeyResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SSHKeyResponse {
		return vs[0].(map[string]SSHKeyResponse)[vs[1].(string)]
	}).(SSHKeyResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplianceCredentialKubeconfigResponseOutput{})
	pulumi.RegisterOutputType(ApplianceCredentialKubeconfigResponseArrayOutput{})
	pulumi.RegisterOutputType(SSHKeyResponseOutput{})
	pulumi.RegisterOutputType(SSHKeyResponseMapOutput{})
}
