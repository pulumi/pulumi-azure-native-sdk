// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180712

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNode struct {
	// The location of the Enterprise Channel Node.
	AzureLocation string `pulumi:"azureLocation"`
	// The sku of the Enterprise Channel Node.
	AzureSku string `pulumi:"azureSku"`
	// The name of the Enterprise Channel Node.
	Name string `pulumi:"name"`
	// The current state of the Enterprise Channel Node.
	State *string `pulumi:"state"`
}

// EnterpriseChannelNodeInput is an input type that accepts EnterpriseChannelNodeArgs and EnterpriseChannelNodeOutput values.
// You can construct a concrete instance of `EnterpriseChannelNodeInput` via:
//
//	EnterpriseChannelNodeArgs{...}
type EnterpriseChannelNodeInput interface {
	pulumi.Input

	ToEnterpriseChannelNodeOutput() EnterpriseChannelNodeOutput
	ToEnterpriseChannelNodeOutputWithContext(context.Context) EnterpriseChannelNodeOutput
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeArgs struct {
	// The location of the Enterprise Channel Node.
	AzureLocation pulumi.StringInput `pulumi:"azureLocation"`
	// The sku of the Enterprise Channel Node.
	AzureSku pulumi.StringInput `pulumi:"azureSku"`
	// The name of the Enterprise Channel Node.
	Name pulumi.StringInput `pulumi:"name"`
	// The current state of the Enterprise Channel Node.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (EnterpriseChannelNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelNode)(nil)).Elem()
}

func (i EnterpriseChannelNodeArgs) ToEnterpriseChannelNodeOutput() EnterpriseChannelNodeOutput {
	return i.ToEnterpriseChannelNodeOutputWithContext(context.Background())
}

func (i EnterpriseChannelNodeArgs) ToEnterpriseChannelNodeOutputWithContext(ctx context.Context) EnterpriseChannelNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelNodeOutput)
}

func (i EnterpriseChannelNodeArgs) ToOutput(ctx context.Context) pulumix.Output[EnterpriseChannelNode] {
	return pulumix.Output[EnterpriseChannelNode]{
		OutputState: i.ToEnterpriseChannelNodeOutputWithContext(ctx).OutputState,
	}
}

// EnterpriseChannelNodeArrayInput is an input type that accepts EnterpriseChannelNodeArray and EnterpriseChannelNodeArrayOutput values.
// You can construct a concrete instance of `EnterpriseChannelNodeArrayInput` via:
//
//	EnterpriseChannelNodeArray{ EnterpriseChannelNodeArgs{...} }
type EnterpriseChannelNodeArrayInput interface {
	pulumi.Input

	ToEnterpriseChannelNodeArrayOutput() EnterpriseChannelNodeArrayOutput
	ToEnterpriseChannelNodeArrayOutputWithContext(context.Context) EnterpriseChannelNodeArrayOutput
}

type EnterpriseChannelNodeArray []EnterpriseChannelNodeInput

func (EnterpriseChannelNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseChannelNode)(nil)).Elem()
}

func (i EnterpriseChannelNodeArray) ToEnterpriseChannelNodeArrayOutput() EnterpriseChannelNodeArrayOutput {
	return i.ToEnterpriseChannelNodeArrayOutputWithContext(context.Background())
}

func (i EnterpriseChannelNodeArray) ToEnterpriseChannelNodeArrayOutputWithContext(ctx context.Context) EnterpriseChannelNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelNodeArrayOutput)
}

func (i EnterpriseChannelNodeArray) ToOutput(ctx context.Context) pulumix.Output[[]EnterpriseChannelNode] {
	return pulumix.Output[[]EnterpriseChannelNode]{
		OutputState: i.ToEnterpriseChannelNodeArrayOutputWithContext(ctx).OutputState,
	}
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelNode)(nil)).Elem()
}

func (o EnterpriseChannelNodeOutput) ToEnterpriseChannelNodeOutput() EnterpriseChannelNodeOutput {
	return o
}

func (o EnterpriseChannelNodeOutput) ToEnterpriseChannelNodeOutputWithContext(ctx context.Context) EnterpriseChannelNodeOutput {
	return o
}

func (o EnterpriseChannelNodeOutput) ToOutput(ctx context.Context) pulumix.Output[EnterpriseChannelNode] {
	return pulumix.Output[EnterpriseChannelNode]{
		OutputState: o.OutputState,
	}
}

// The location of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) AzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) string { return v.AzureLocation }).(pulumi.StringOutput)
}

// The sku of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) AzureSku() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) string { return v.AzureSku }).(pulumi.StringOutput)
}

// The name of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EnterpriseChannelNodeArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseChannelNode)(nil)).Elem()
}

func (o EnterpriseChannelNodeArrayOutput) ToEnterpriseChannelNodeArrayOutput() EnterpriseChannelNodeArrayOutput {
	return o
}

func (o EnterpriseChannelNodeArrayOutput) ToEnterpriseChannelNodeArrayOutputWithContext(ctx context.Context) EnterpriseChannelNodeArrayOutput {
	return o
}

func (o EnterpriseChannelNodeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EnterpriseChannelNode] {
	return pulumix.Output[[]EnterpriseChannelNode]{
		OutputState: o.OutputState,
	}
}

func (o EnterpriseChannelNodeArrayOutput) Index(i pulumi.IntInput) EnterpriseChannelNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseChannelNode {
		return vs[0].([]EnterpriseChannelNode)[vs[1].(int)]
	}).(EnterpriseChannelNodeOutput)
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeResponse struct {
	// The location of the Enterprise Channel Node.
	AzureLocation string `pulumi:"azureLocation"`
	// The sku of the Enterprise Channel Node.
	AzureSku string `pulumi:"azureSku"`
	// Id of Enterprise Channel Node. This is generated by the Bot Framework.
	Id string `pulumi:"id"`
	// The name of the Enterprise Channel Node.
	Name string `pulumi:"name"`
	// The current state of the Enterprise Channel Node.
	State *string `pulumi:"state"`
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeResponseOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelNodeResponse)(nil)).Elem()
}

func (o EnterpriseChannelNodeResponseOutput) ToEnterpriseChannelNodeResponseOutput() EnterpriseChannelNodeResponseOutput {
	return o
}

func (o EnterpriseChannelNodeResponseOutput) ToEnterpriseChannelNodeResponseOutputWithContext(ctx context.Context) EnterpriseChannelNodeResponseOutput {
	return o
}

func (o EnterpriseChannelNodeResponseOutput) ToOutput(ctx context.Context) pulumix.Output[EnterpriseChannelNodeResponse] {
	return pulumix.Output[EnterpriseChannelNodeResponse]{
		OutputState: o.OutputState,
	}
}

// The location of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) AzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.AzureLocation }).(pulumi.StringOutput)
}

// The sku of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) AzureSku() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.AzureSku }).(pulumi.StringOutput)
}

// Id of Enterprise Channel Node. This is generated by the Bot Framework.
func (o EnterpriseChannelNodeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EnterpriseChannelNodeResponseArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseChannelNodeResponse)(nil)).Elem()
}

func (o EnterpriseChannelNodeResponseArrayOutput) ToEnterpriseChannelNodeResponseArrayOutput() EnterpriseChannelNodeResponseArrayOutput {
	return o
}

func (o EnterpriseChannelNodeResponseArrayOutput) ToEnterpriseChannelNodeResponseArrayOutputWithContext(ctx context.Context) EnterpriseChannelNodeResponseArrayOutput {
	return o
}

func (o EnterpriseChannelNodeResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EnterpriseChannelNodeResponse] {
	return pulumix.Output[[]EnterpriseChannelNodeResponse]{
		OutputState: o.OutputState,
	}
}

func (o EnterpriseChannelNodeResponseArrayOutput) Index(i pulumi.IntInput) EnterpriseChannelNodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseChannelNodeResponse {
		return vs[0].([]EnterpriseChannelNodeResponse)[vs[1].(int)]
	}).(EnterpriseChannelNodeResponseOutput)
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelProperties struct {
	// The nodes associated with the Enterprise Channel.
	Nodes []EnterpriseChannelNode `pulumi:"nodes"`
	// The current state of the Enterprise Channel.
	State *string `pulumi:"state"`
}

// EnterpriseChannelPropertiesInput is an input type that accepts EnterpriseChannelPropertiesArgs and EnterpriseChannelPropertiesOutput values.
// You can construct a concrete instance of `EnterpriseChannelPropertiesInput` via:
//
//	EnterpriseChannelPropertiesArgs{...}
type EnterpriseChannelPropertiesInput interface {
	pulumi.Input

	ToEnterpriseChannelPropertiesOutput() EnterpriseChannelPropertiesOutput
	ToEnterpriseChannelPropertiesOutputWithContext(context.Context) EnterpriseChannelPropertiesOutput
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesArgs struct {
	// The nodes associated with the Enterprise Channel.
	Nodes EnterpriseChannelNodeArrayInput `pulumi:"nodes"`
	// The current state of the Enterprise Channel.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (EnterpriseChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelProperties)(nil)).Elem()
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesOutput() EnterpriseChannelPropertiesOutput {
	return i.ToEnterpriseChannelPropertiesOutputWithContext(context.Background())
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelPropertiesOutput)
}

func (i EnterpriseChannelPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[EnterpriseChannelProperties] {
	return pulumix.Output[EnterpriseChannelProperties]{
		OutputState: i.ToEnterpriseChannelPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return i.ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelPropertiesOutput).ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx)
}

// EnterpriseChannelPropertiesPtrInput is an input type that accepts EnterpriseChannelPropertiesArgs, EnterpriseChannelPropertiesPtr and EnterpriseChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `EnterpriseChannelPropertiesPtrInput` via:
//
//	        EnterpriseChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type EnterpriseChannelPropertiesPtrInput interface {
	pulumi.Input

	ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput
	ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Context) EnterpriseChannelPropertiesPtrOutput
}

type enterpriseChannelPropertiesPtrType EnterpriseChannelPropertiesArgs

func EnterpriseChannelPropertiesPtr(v *EnterpriseChannelPropertiesArgs) EnterpriseChannelPropertiesPtrInput {
	return (*enterpriseChannelPropertiesPtrType)(v)
}

func (*enterpriseChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseChannelProperties)(nil)).Elem()
}

func (i *enterpriseChannelPropertiesPtrType) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return i.ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *enterpriseChannelPropertiesPtrType) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelPropertiesPtrOutput)
}

func (i *enterpriseChannelPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*EnterpriseChannelProperties] {
	return pulumix.Output[*EnterpriseChannelProperties]{
		OutputState: i.ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelProperties)(nil)).Elem()
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesOutput() EnterpriseChannelPropertiesOutput {
	return o
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesOutput {
	return o
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return o.ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseChannelProperties) *EnterpriseChannelProperties {
		return &v
	}).(EnterpriseChannelPropertiesPtrOutput)
}

func (o EnterpriseChannelPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[EnterpriseChannelProperties] {
	return pulumix.Output[EnterpriseChannelProperties]{
		OutputState: o.OutputState,
	}
}

// The nodes associated with the Enterprise Channel.
func (o EnterpriseChannelPropertiesOutput) Nodes() EnterpriseChannelNodeArrayOutput {
	return o.ApplyT(func(v EnterpriseChannelProperties) []EnterpriseChannelNode { return v.Nodes }).(EnterpriseChannelNodeArrayOutput)
}

// The current state of the Enterprise Channel.
func (o EnterpriseChannelPropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EnterpriseChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseChannelProperties)(nil)).Elem()
}

func (o EnterpriseChannelPropertiesPtrOutput) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return o
}

func (o EnterpriseChannelPropertiesPtrOutput) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return o
}

func (o EnterpriseChannelPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnterpriseChannelProperties] {
	return pulumix.Output[*EnterpriseChannelProperties]{
		OutputState: o.OutputState,
	}
}

func (o EnterpriseChannelPropertiesPtrOutput) Elem() EnterpriseChannelPropertiesOutput {
	return o.ApplyT(func(v *EnterpriseChannelProperties) EnterpriseChannelProperties {
		if v != nil {
			return *v
		}
		var ret EnterpriseChannelProperties
		return ret
	}).(EnterpriseChannelPropertiesOutput)
}

// The nodes associated with the Enterprise Channel.
func (o EnterpriseChannelPropertiesPtrOutput) Nodes() EnterpriseChannelNodeArrayOutput {
	return o.ApplyT(func(v *EnterpriseChannelProperties) []EnterpriseChannelNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(EnterpriseChannelNodeArrayOutput)
}

// The current state of the Enterprise Channel.
func (o EnterpriseChannelPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesResponse struct {
	// The nodes associated with the Enterprise Channel.
	Nodes []EnterpriseChannelNodeResponse `pulumi:"nodes"`
	// The current state of the Enterprise Channel.
	State *string `pulumi:"state"`
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelPropertiesResponse)(nil)).Elem()
}

func (o EnterpriseChannelPropertiesResponseOutput) ToEnterpriseChannelPropertiesResponseOutput() EnterpriseChannelPropertiesResponseOutput {
	return o
}

func (o EnterpriseChannelPropertiesResponseOutput) ToEnterpriseChannelPropertiesResponseOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesResponseOutput {
	return o
}

func (o EnterpriseChannelPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[EnterpriseChannelPropertiesResponse] {
	return pulumix.Output[EnterpriseChannelPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// The nodes associated with the Enterprise Channel.
func (o EnterpriseChannelPropertiesResponseOutput) Nodes() EnterpriseChannelNodeResponseArrayOutput {
	return o.ApplyT(func(v EnterpriseChannelPropertiesResponse) []EnterpriseChannelNodeResponse { return v.Nodes }).(EnterpriseChannelNodeResponseArrayOutput)
}

// The current state of the Enterprise Channel.
func (o EnterpriseChannelPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponse struct {
	// Default Name for the Service Provider
	Default string `pulumi:"default"`
	// Description of the Service Provider
	Description string `pulumi:"description"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Help Url for the  Service Provider
	HelpUrl string `pulumi:"helpUrl"`
	// Name of the Service Provider
	Name string `pulumi:"name"`
	// Type of the Service Provider
	Type string `pulumi:"type"`
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponseOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderParameterResponse)(nil)).Elem()
}

func (o ServiceProviderParameterResponseOutput) ToServiceProviderParameterResponseOutput() ServiceProviderParameterResponseOutput {
	return o
}

func (o ServiceProviderParameterResponseOutput) ToServiceProviderParameterResponseOutputWithContext(ctx context.Context) ServiceProviderParameterResponseOutput {
	return o
}

func (o ServiceProviderParameterResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceProviderParameterResponse] {
	return pulumix.Output[ServiceProviderParameterResponse]{
		OutputState: o.OutputState,
	}
}

// Default Name for the Service Provider
func (o ServiceProviderParameterResponseOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Default }).(pulumi.StringOutput)
}

// Description of the Service Provider
func (o ServiceProviderParameterResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderParameterResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Help Url for the  Service Provider
func (o ServiceProviderParameterResponseOutput) HelpUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.HelpUrl }).(pulumi.StringOutput)
}

// Name of the Service Provider
func (o ServiceProviderParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the Service Provider
func (o ServiceProviderParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceProviderParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceProviderParameterResponse)(nil)).Elem()
}

func (o ServiceProviderParameterResponseArrayOutput) ToServiceProviderParameterResponseArrayOutput() ServiceProviderParameterResponseArrayOutput {
	return o
}

func (o ServiceProviderParameterResponseArrayOutput) ToServiceProviderParameterResponseArrayOutputWithContext(ctx context.Context) ServiceProviderParameterResponseArrayOutput {
	return o
}

func (o ServiceProviderParameterResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ServiceProviderParameterResponse] {
	return pulumix.Output[[]ServiceProviderParameterResponse]{
		OutputState: o.OutputState,
	}
}

func (o ServiceProviderParameterResponseArrayOutput) Index(i pulumi.IntInput) ServiceProviderParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceProviderParameterResponse {
		return vs[0].([]ServiceProviderParameterResponse)[vs[1].(int)]
	}).(ServiceProviderParameterResponseOutput)
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponse struct {
	// Display Name of the Service Provider
	DevPortalUrl string `pulumi:"devPortalUrl"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Display Name of the Service Provider
	IconUrl string `pulumi:"iconUrl"`
	// Id for Service Provider
	Id string `pulumi:"id"`
	// The list of parameters for the Service Provider
	Parameters []ServiceProviderParameterResponse `pulumi:"parameters"`
	// Display Name of the Service Provider
	ServiceProviderName string `pulumi:"serviceProviderName"`
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ServiceProviderPropertiesResponseOutput) ToServiceProviderPropertiesResponseOutput() ServiceProviderPropertiesResponseOutput {
	return o
}

func (o ServiceProviderPropertiesResponseOutput) ToServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ServiceProviderPropertiesResponseOutput {
	return o
}

func (o ServiceProviderPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceProviderPropertiesResponse] {
	return pulumix.Output[ServiceProviderPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponseOutput) DevPortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.DevPortalUrl }).(pulumi.StringOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponseOutput) IconUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.IconUrl }).(pulumi.StringOutput)
}

// Id for Service Provider
func (o ServiceProviderPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The list of parameters for the Service Provider
func (o ServiceProviderPropertiesResponseOutput) Parameters() ServiceProviderParameterResponseArrayOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) []ServiceProviderParameterResponse { return v.Parameters }).(ServiceProviderParameterResponseArrayOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.ServiceProviderName }).(pulumi.StringOutput)
}

type ServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ServiceProviderPropertiesResponsePtrOutput) ToServiceProviderPropertiesResponsePtrOutput() ServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ServiceProviderPropertiesResponsePtrOutput) ToServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ServiceProviderPropertiesResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceProviderPropertiesResponse] {
	return pulumix.Output[*ServiceProviderPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o ServiceProviderPropertiesResponsePtrOutput) Elem() ServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) ServiceProviderPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ServiceProviderPropertiesResponse
		return ret
	}).(ServiceProviderPropertiesResponseOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) DevPortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DevPortalUrl
	}).(pulumi.StringPtrOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Id for Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The list of parameters for the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) Parameters() ServiceProviderParameterResponseArrayOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) []ServiceProviderParameterResponse {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ServiceProviderParameterResponseArrayOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Service Provider Definition
type ServiceProviderResponse struct {
	// The Properties of a Service Provider Object
	Properties *ServiceProviderPropertiesResponse `pulumi:"properties"`
}

// Service Provider Definition
type ServiceProviderResponseOutput struct{ *pulumi.OutputState }

func (ServiceProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderResponse)(nil)).Elem()
}

func (o ServiceProviderResponseOutput) ToServiceProviderResponseOutput() ServiceProviderResponseOutput {
	return o
}

func (o ServiceProviderResponseOutput) ToServiceProviderResponseOutputWithContext(ctx context.Context) ServiceProviderResponseOutput {
	return o
}

func (o ServiceProviderResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceProviderResponse] {
	return pulumix.Output[ServiceProviderResponse]{
		OutputState: o.OutputState,
	}
}

// The Properties of a Service Provider Object
func (o ServiceProviderResponseOutput) Properties() ServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ServiceProviderResponse) *ServiceProviderPropertiesResponse { return v.Properties }).(ServiceProviderPropertiesResponsePtrOutput)
}

type ServiceProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceProviderResponse)(nil)).Elem()
}

func (o ServiceProviderResponseArrayOutput) ToServiceProviderResponseArrayOutput() ServiceProviderResponseArrayOutput {
	return o
}

func (o ServiceProviderResponseArrayOutput) ToServiceProviderResponseArrayOutputWithContext(ctx context.Context) ServiceProviderResponseArrayOutput {
	return o
}

func (o ServiceProviderResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ServiceProviderResponse] {
	return pulumix.Output[[]ServiceProviderResponse]{
		OutputState: o.OutputState,
	}
}

func (o ServiceProviderResponseArrayOutput) Index(i pulumi.IntInput) ServiceProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceProviderResponse {
		return vs[0].([]ServiceProviderResponse)[vs[1].(int)]
	}).(ServiceProviderResponseOutput)
}

// The SKU of the cognitive services account.
type Sku struct {
	// The sku name
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the cognitive services account.
type SkuArgs struct {
	// The sku name
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToOutput(ctx context.Context) pulumix.Output[Sku] {
	return pulumix.Output[Sku]{
		OutputState: i.ToSkuOutputWithContext(ctx).OutputState,
	}
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

func (i *skuPtrType) ToOutput(ctx context.Context) pulumix.Output[*Sku] {
	return pulumix.Output[*Sku]{
		OutputState: i.ToSkuPtrOutputWithContext(ctx).OutputState,
	}
}

// The SKU of the cognitive services account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

func (o SkuOutput) ToOutput(ctx context.Context) pulumix.Output[Sku] {
	return pulumix.Output[Sku]{
		OutputState: o.OutputState,
	}
}

// The sku name
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Sku] {
	return pulumix.Output[*Sku]{
		OutputState: o.OutputState,
	}
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku name
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of the cognitive services account.
type SkuResponse struct {
	// The sku name
	Name string `pulumi:"name"`
	// Gets the sku tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the cognitive services account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SkuResponse] {
	return pulumix.Output[SkuResponse]{
		OutputState: o.OutputState,
	}
}

// The sku name
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SkuResponse] {
	return pulumix.Output[*SkuResponse]{
		OutputState: o.OutputState,
	}
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnterpriseChannelNodeOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeResponseOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeResponseArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelPropertiesOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceProviderResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
