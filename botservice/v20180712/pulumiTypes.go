// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180712

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponse struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutput() ConnectionSettingParameterResponseOutput {
	return o
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseOutput {
	return o
}

// Key for the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionSettingParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutput() ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) Index(i pulumi.IntInput) ConnectionSettingParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSettingParameterResponse {
		return vs[0].([]ConnectionSettingParameterResponse)[vs[1].(int)]
	}).(ConnectionSettingParameterResponseOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponse struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameterResponse `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
	// Setting Id set by the service for the Connection Setting.
	SettingId string `pulumi:"settingId"`
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingPropertiesResponse)(nil)).Elem()
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutput() ConnectionSettingPropertiesResponseOutput {
	return o
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutputWithContext(ctx context.Context) ConnectionSettingPropertiesResponseOutput {
	return o
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Parameters() ConnectionSettingParameterResponseArrayOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) []ConnectionSettingParameterResponse { return v.Parameters }).(ConnectionSettingParameterResponseArrayOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderId }).(pulumi.StringPtrOutput)
}

// Setting Id set by the service for the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) string { return v.SettingId }).(pulumi.StringOutput)
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesResponse struct {
	// The list of Direct Line sites
	Sites []DirectLineSiteResponse `pulumi:"sites"`
}

// Direct Line channel definition
type DirectLineChannelResponse struct {
	// The channel name
	// Expected value is 'DirectLineChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelPropertiesResponse `pulumi:"properties"`
}

// A site for the Direct Line channel
type DirectLineSiteResponse struct {
	// Whether this site is enabled for DirectLine channel.
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled *bool `pulumi:"isSecureSiteEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins []string `pulumi:"trustedOrigins"`
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesResponse struct {
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password string `pulumi:"password"`
}

// Email channel definition
type EmailChannelResponse struct {
	// The channel name
	// Expected value is 'EmailChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelPropertiesResponse `pulumi:"properties"`
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNode struct {
	// The location of the Enterprise Channel Node.
	AzureLocation string `pulumi:"azureLocation"`
	// The sku of the Enterprise Channel Node.
	AzureSku string `pulumi:"azureSku"`
	// The name of the Enterprise Channel Node.
	Name string `pulumi:"name"`
	// The current state of the Enterprise Channel Node.
	State *string `pulumi:"state"`
}

// EnterpriseChannelNodeInput is an input type that accepts EnterpriseChannelNodeArgs and EnterpriseChannelNodeOutput values.
// You can construct a concrete instance of `EnterpriseChannelNodeInput` via:
//
//	EnterpriseChannelNodeArgs{...}
type EnterpriseChannelNodeInput interface {
	pulumi.Input

	ToEnterpriseChannelNodeOutput() EnterpriseChannelNodeOutput
	ToEnterpriseChannelNodeOutputWithContext(context.Context) EnterpriseChannelNodeOutput
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeArgs struct {
	// The location of the Enterprise Channel Node.
	AzureLocation pulumi.StringInput `pulumi:"azureLocation"`
	// The sku of the Enterprise Channel Node.
	AzureSku pulumi.StringInput `pulumi:"azureSku"`
	// The name of the Enterprise Channel Node.
	Name pulumi.StringInput `pulumi:"name"`
	// The current state of the Enterprise Channel Node.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (EnterpriseChannelNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelNode)(nil)).Elem()
}

func (i EnterpriseChannelNodeArgs) ToEnterpriseChannelNodeOutput() EnterpriseChannelNodeOutput {
	return i.ToEnterpriseChannelNodeOutputWithContext(context.Background())
}

func (i EnterpriseChannelNodeArgs) ToEnterpriseChannelNodeOutputWithContext(ctx context.Context) EnterpriseChannelNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelNodeOutput)
}

// EnterpriseChannelNodeArrayInput is an input type that accepts EnterpriseChannelNodeArray and EnterpriseChannelNodeArrayOutput values.
// You can construct a concrete instance of `EnterpriseChannelNodeArrayInput` via:
//
//	EnterpriseChannelNodeArray{ EnterpriseChannelNodeArgs{...} }
type EnterpriseChannelNodeArrayInput interface {
	pulumi.Input

	ToEnterpriseChannelNodeArrayOutput() EnterpriseChannelNodeArrayOutput
	ToEnterpriseChannelNodeArrayOutputWithContext(context.Context) EnterpriseChannelNodeArrayOutput
}

type EnterpriseChannelNodeArray []EnterpriseChannelNodeInput

func (EnterpriseChannelNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseChannelNode)(nil)).Elem()
}

func (i EnterpriseChannelNodeArray) ToEnterpriseChannelNodeArrayOutput() EnterpriseChannelNodeArrayOutput {
	return i.ToEnterpriseChannelNodeArrayOutputWithContext(context.Background())
}

func (i EnterpriseChannelNodeArray) ToEnterpriseChannelNodeArrayOutputWithContext(ctx context.Context) EnterpriseChannelNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelNodeArrayOutput)
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelNode)(nil)).Elem()
}

func (o EnterpriseChannelNodeOutput) ToEnterpriseChannelNodeOutput() EnterpriseChannelNodeOutput {
	return o
}

func (o EnterpriseChannelNodeOutput) ToEnterpriseChannelNodeOutputWithContext(ctx context.Context) EnterpriseChannelNodeOutput {
	return o
}

// The location of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) AzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) string { return v.AzureLocation }).(pulumi.StringOutput)
}

// The sku of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) AzureSku() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) string { return v.AzureSku }).(pulumi.StringOutput)
}

// The name of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the Enterprise Channel Node.
func (o EnterpriseChannelNodeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelNode) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EnterpriseChannelNodeArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseChannelNode)(nil)).Elem()
}

func (o EnterpriseChannelNodeArrayOutput) ToEnterpriseChannelNodeArrayOutput() EnterpriseChannelNodeArrayOutput {
	return o
}

func (o EnterpriseChannelNodeArrayOutput) ToEnterpriseChannelNodeArrayOutputWithContext(ctx context.Context) EnterpriseChannelNodeArrayOutput {
	return o
}

func (o EnterpriseChannelNodeArrayOutput) Index(i pulumi.IntInput) EnterpriseChannelNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseChannelNode {
		return vs[0].([]EnterpriseChannelNode)[vs[1].(int)]
	}).(EnterpriseChannelNodeOutput)
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeResponse struct {
	// The location of the Enterprise Channel Node.
	AzureLocation string `pulumi:"azureLocation"`
	// The sku of the Enterprise Channel Node.
	AzureSku string `pulumi:"azureSku"`
	// Id of Enterprise Channel Node. This is generated by the Bot Framework.
	Id string `pulumi:"id"`
	// The name of the Enterprise Channel Node.
	Name string `pulumi:"name"`
	// The current state of the Enterprise Channel Node.
	State *string `pulumi:"state"`
}

// The properties specific to an Enterprise Channel Node.
type EnterpriseChannelNodeResponseOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelNodeResponse)(nil)).Elem()
}

func (o EnterpriseChannelNodeResponseOutput) ToEnterpriseChannelNodeResponseOutput() EnterpriseChannelNodeResponseOutput {
	return o
}

func (o EnterpriseChannelNodeResponseOutput) ToEnterpriseChannelNodeResponseOutputWithContext(ctx context.Context) EnterpriseChannelNodeResponseOutput {
	return o
}

// The location of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) AzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.AzureLocation }).(pulumi.StringOutput)
}

// The sku of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) AzureSku() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.AzureSku }).(pulumi.StringOutput)
}

// Id of Enterprise Channel Node. This is generated by the Bot Framework.
func (o EnterpriseChannelNodeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the Enterprise Channel Node.
func (o EnterpriseChannelNodeResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelNodeResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EnterpriseChannelNodeResponseArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelNodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseChannelNodeResponse)(nil)).Elem()
}

func (o EnterpriseChannelNodeResponseArrayOutput) ToEnterpriseChannelNodeResponseArrayOutput() EnterpriseChannelNodeResponseArrayOutput {
	return o
}

func (o EnterpriseChannelNodeResponseArrayOutput) ToEnterpriseChannelNodeResponseArrayOutputWithContext(ctx context.Context) EnterpriseChannelNodeResponseArrayOutput {
	return o
}

func (o EnterpriseChannelNodeResponseArrayOutput) Index(i pulumi.IntInput) EnterpriseChannelNodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseChannelNodeResponse {
		return vs[0].([]EnterpriseChannelNodeResponse)[vs[1].(int)]
	}).(EnterpriseChannelNodeResponseOutput)
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelProperties struct {
	// The nodes associated with the Enterprise Channel.
	Nodes []EnterpriseChannelNode `pulumi:"nodes"`
	// The current state of the Enterprise Channel.
	State *string `pulumi:"state"`
}

// EnterpriseChannelPropertiesInput is an input type that accepts EnterpriseChannelPropertiesArgs and EnterpriseChannelPropertiesOutput values.
// You can construct a concrete instance of `EnterpriseChannelPropertiesInput` via:
//
//	EnterpriseChannelPropertiesArgs{...}
type EnterpriseChannelPropertiesInput interface {
	pulumi.Input

	ToEnterpriseChannelPropertiesOutput() EnterpriseChannelPropertiesOutput
	ToEnterpriseChannelPropertiesOutputWithContext(context.Context) EnterpriseChannelPropertiesOutput
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesArgs struct {
	// The nodes associated with the Enterprise Channel.
	Nodes EnterpriseChannelNodeArrayInput `pulumi:"nodes"`
	// The current state of the Enterprise Channel.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (EnterpriseChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelProperties)(nil)).Elem()
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesOutput() EnterpriseChannelPropertiesOutput {
	return i.ToEnterpriseChannelPropertiesOutputWithContext(context.Background())
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelPropertiesOutput)
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return i.ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i EnterpriseChannelPropertiesArgs) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelPropertiesOutput).ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx)
}

// EnterpriseChannelPropertiesPtrInput is an input type that accepts EnterpriseChannelPropertiesArgs, EnterpriseChannelPropertiesPtr and EnterpriseChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `EnterpriseChannelPropertiesPtrInput` via:
//
//	        EnterpriseChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type EnterpriseChannelPropertiesPtrInput interface {
	pulumi.Input

	ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput
	ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Context) EnterpriseChannelPropertiesPtrOutput
}

type enterpriseChannelPropertiesPtrType EnterpriseChannelPropertiesArgs

func EnterpriseChannelPropertiesPtr(v *EnterpriseChannelPropertiesArgs) EnterpriseChannelPropertiesPtrInput {
	return (*enterpriseChannelPropertiesPtrType)(v)
}

func (*enterpriseChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseChannelProperties)(nil)).Elem()
}

func (i *enterpriseChannelPropertiesPtrType) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return i.ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *enterpriseChannelPropertiesPtrType) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseChannelPropertiesPtrOutput)
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelProperties)(nil)).Elem()
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesOutput() EnterpriseChannelPropertiesOutput {
	return o
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesOutput {
	return o
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return o.ToEnterpriseChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o EnterpriseChannelPropertiesOutput) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseChannelProperties) *EnterpriseChannelProperties {
		return &v
	}).(EnterpriseChannelPropertiesPtrOutput)
}

// The nodes associated with the Enterprise Channel.
func (o EnterpriseChannelPropertiesOutput) Nodes() EnterpriseChannelNodeArrayOutput {
	return o.ApplyT(func(v EnterpriseChannelProperties) []EnterpriseChannelNode { return v.Nodes }).(EnterpriseChannelNodeArrayOutput)
}

// The current state of the Enterprise Channel.
func (o EnterpriseChannelPropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EnterpriseChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseChannelProperties)(nil)).Elem()
}

func (o EnterpriseChannelPropertiesPtrOutput) ToEnterpriseChannelPropertiesPtrOutput() EnterpriseChannelPropertiesPtrOutput {
	return o
}

func (o EnterpriseChannelPropertiesPtrOutput) ToEnterpriseChannelPropertiesPtrOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesPtrOutput {
	return o
}

func (o EnterpriseChannelPropertiesPtrOutput) Elem() EnterpriseChannelPropertiesOutput {
	return o.ApplyT(func(v *EnterpriseChannelProperties) EnterpriseChannelProperties {
		if v != nil {
			return *v
		}
		var ret EnterpriseChannelProperties
		return ret
	}).(EnterpriseChannelPropertiesOutput)
}

// The nodes associated with the Enterprise Channel.
func (o EnterpriseChannelPropertiesPtrOutput) Nodes() EnterpriseChannelNodeArrayOutput {
	return o.ApplyT(func(v *EnterpriseChannelProperties) []EnterpriseChannelNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(EnterpriseChannelNodeArrayOutput)
}

// The current state of the Enterprise Channel.
func (o EnterpriseChannelPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesResponse struct {
	// The nodes associated with the Enterprise Channel.
	Nodes []EnterpriseChannelNodeResponse `pulumi:"nodes"`
	// The current state of the Enterprise Channel.
	State *string `pulumi:"state"`
}

// The parameters to provide for the Enterprise Channel.
type EnterpriseChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EnterpriseChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseChannelPropertiesResponse)(nil)).Elem()
}

func (o EnterpriseChannelPropertiesResponseOutput) ToEnterpriseChannelPropertiesResponseOutput() EnterpriseChannelPropertiesResponseOutput {
	return o
}

func (o EnterpriseChannelPropertiesResponseOutput) ToEnterpriseChannelPropertiesResponseOutputWithContext(ctx context.Context) EnterpriseChannelPropertiesResponseOutput {
	return o
}

// The nodes associated with the Enterprise Channel.
func (o EnterpriseChannelPropertiesResponseOutput) Nodes() EnterpriseChannelNodeResponseArrayOutput {
	return o.ApplyT(func(v EnterpriseChannelPropertiesResponse) []EnterpriseChannelNodeResponse { return v.Nodes }).(EnterpriseChannelNodeResponseArrayOutput)
}

// The current state of the Enterprise Channel.
func (o EnterpriseChannelPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseChannelPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesResponse struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret string `pulumi:"appSecret"`
	// Callback Url
	CallbackUrl string `pulumi:"callbackUrl"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPageResponse `pulumi:"pages"`
	// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerifyToken string `pulumi:"verifyToken"`
}

// Facebook channel definition
type FacebookChannelResponse struct {
	// The channel name
	// Expected value is 'FacebookChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelPropertiesResponse `pulumi:"properties"`
}

// A Facebook page for Facebook channel registration
type FacebookPageResponse struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesResponse struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// Kik channel definition
type KikChannelResponse struct {
	// The channel name
	// Expected value is 'KikChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelPropertiesResponse `pulumi:"properties"`
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesResponse struct {
	// Webhook for Microsoft Teams channel calls
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Microsoft Teams channel definition
type MsTeamsChannelResponse struct {
	// The channel name
	// Expected value is 'MsTeamsChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelPropertiesResponse `pulumi:"properties"`
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponse struct {
	// Default Name for the Service Provider
	Default string `pulumi:"default"`
	// Description of the Service Provider
	Description string `pulumi:"description"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Help Url for the  Service Provider
	HelpUrl string `pulumi:"helpUrl"`
	// Name of the Service Provider
	Name string `pulumi:"name"`
	// Type of the Service Provider
	Type string `pulumi:"type"`
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponse struct {
	// Display Name of the Service Provider
	DevPortalUrl string `pulumi:"devPortalUrl"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Display Name of the Service Provider
	IconUrl string `pulumi:"iconUrl"`
	// Id for Service Provider
	Id string `pulumi:"id"`
	// The list of parameters for the Service Provider
	Parameters []ServiceProviderParameterResponse `pulumi:"parameters"`
	// Display Name of the Service Provider
	ServiceProviderName string `pulumi:"serviceProviderName"`
}

// Service Provider Definition
type ServiceProviderResponse struct {
	// The Properties of a Service Provider Object
	Properties *ServiceProviderPropertiesResponse `pulumi:"properties"`
}

// The SKU of the cognitive services account.
type Sku struct {
	// The sku name
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the cognitive services account.
type SkuArgs struct {
	// The sku name
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of the cognitive services account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The sku name
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku name
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of the cognitive services account.
type SkuResponse struct {
	// The sku name
	Name string `pulumi:"name"`
	// Gets the sku tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the cognitive services account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The sku name
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesResponse struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Skype channel definition
type SkypeChannelResponse struct {
	// The channel name
	// Expected value is 'SkypeChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelPropertiesResponse `pulumi:"properties"`
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesResponse struct {
	// The Slack client id
	ClientId string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated bool `pulumi:"isValidated"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// The Sms auth token
	LastSubmissionId string `pulumi:"lastSubmissionId"`
	// The Slack redirect action
	RedirectAction string `pulumi:"redirectAction"`
	// Whether to register the settings before OAuth validation is performed. Recommended to True.
	RegisterBeforeOAuthFlow bool `pulumi:"registerBeforeOAuthFlow"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken string `pulumi:"verificationToken"`
}

// Slack channel definition
type SlackChannelResponse struct {
	// The channel name
	// Expected value is 'SlackChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelPropertiesResponse `pulumi:"properties"`
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesResponse struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// Sms channel definition
type SmsChannelResponse struct {
	// The channel name
	// Expected value is 'SmsChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelPropertiesResponse `pulumi:"properties"`
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesResponse struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// Telegram channel definition
type TelegramChannelResponse struct {
	// The channel name
	// Expected value is 'TelegramChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelPropertiesResponse `pulumi:"properties"`
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesResponse struct {
	// The list of Web Chat sites
	Sites []WebChatSiteResponse `pulumi:"sites"`
	// Web chat control embed code
	WebChatEmbedCode string `pulumi:"webChatEmbedCode"`
}

// Web Chat channel definition
type WebChatChannelResponse struct {
	// The channel name
	// Expected value is 'WebChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelPropertiesResponse `pulumi:"properties"`
}

// A site for the Webchat channel
type WebChatSiteResponse struct {
	// Whether this site is enabled for preview versions of Webchat
	EnablePreview bool `pulumi:"enablePreview"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

func init() {
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeResponseOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelNodeResponseArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelPropertiesOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EnterpriseChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
