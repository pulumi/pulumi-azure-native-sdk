// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220915

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// AcsChat channel definition
type AcsChatChannel struct {
	// The channel name
	// Expected value is 'AcsChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
}

// Defaults sets the appropriate defaults for AcsChatChannel
func (val *AcsChatChannel) Defaults() *AcsChatChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// AcsChatChannelInput is an input type that accepts AcsChatChannelArgs and AcsChatChannelOutput values.
// You can construct a concrete instance of `AcsChatChannelInput` via:
//
//	AcsChatChannelArgs{...}
type AcsChatChannelInput interface {
	pulumi.Input

	ToAcsChatChannelOutput() AcsChatChannelOutput
	ToAcsChatChannelOutputWithContext(context.Context) AcsChatChannelOutput
}

// AcsChat channel definition
type AcsChatChannelArgs struct {
	// The channel name
	// Expected value is 'AcsChatChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

// Defaults sets the appropriate defaults for AcsChatChannelArgs
func (val *AcsChatChannelArgs) Defaults() *AcsChatChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (AcsChatChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcsChatChannel)(nil)).Elem()
}

func (i AcsChatChannelArgs) ToAcsChatChannelOutput() AcsChatChannelOutput {
	return i.ToAcsChatChannelOutputWithContext(context.Background())
}

func (i AcsChatChannelArgs) ToAcsChatChannelOutputWithContext(ctx context.Context) AcsChatChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcsChatChannelOutput)
}

func (i AcsChatChannelArgs) ToAcsChatChannelPtrOutput() AcsChatChannelPtrOutput {
	return i.ToAcsChatChannelPtrOutputWithContext(context.Background())
}

func (i AcsChatChannelArgs) ToAcsChatChannelPtrOutputWithContext(ctx context.Context) AcsChatChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcsChatChannelOutput).ToAcsChatChannelPtrOutputWithContext(ctx)
}

// AcsChatChannelPtrInput is an input type that accepts AcsChatChannelArgs, AcsChatChannelPtr and AcsChatChannelPtrOutput values.
// You can construct a concrete instance of `AcsChatChannelPtrInput` via:
//
//	        AcsChatChannelArgs{...}
//
//	or:
//
//	        nil
type AcsChatChannelPtrInput interface {
	pulumi.Input

	ToAcsChatChannelPtrOutput() AcsChatChannelPtrOutput
	ToAcsChatChannelPtrOutputWithContext(context.Context) AcsChatChannelPtrOutput
}

type acsChatChannelPtrType AcsChatChannelArgs

func AcsChatChannelPtr(v *AcsChatChannelArgs) AcsChatChannelPtrInput {
	return (*acsChatChannelPtrType)(v)
}

func (*acsChatChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AcsChatChannel)(nil)).Elem()
}

func (i *acsChatChannelPtrType) ToAcsChatChannelPtrOutput() AcsChatChannelPtrOutput {
	return i.ToAcsChatChannelPtrOutputWithContext(context.Background())
}

func (i *acsChatChannelPtrType) ToAcsChatChannelPtrOutputWithContext(ctx context.Context) AcsChatChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcsChatChannelPtrOutput)
}

// AcsChat channel definition
type AcsChatChannelOutput struct{ *pulumi.OutputState }

func (AcsChatChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcsChatChannel)(nil)).Elem()
}

func (o AcsChatChannelOutput) ToAcsChatChannelOutput() AcsChatChannelOutput {
	return o
}

func (o AcsChatChannelOutput) ToAcsChatChannelOutputWithContext(ctx context.Context) AcsChatChannelOutput {
	return o
}

func (o AcsChatChannelOutput) ToAcsChatChannelPtrOutput() AcsChatChannelPtrOutput {
	return o.ToAcsChatChannelPtrOutputWithContext(context.Background())
}

func (o AcsChatChannelOutput) ToAcsChatChannelPtrOutputWithContext(ctx context.Context) AcsChatChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AcsChatChannel) *AcsChatChannel {
		return &v
	}).(AcsChatChannelPtrOutput)
}

// The channel name
// Expected value is 'AcsChatChannel'.
func (o AcsChatChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v AcsChatChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o AcsChatChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcsChatChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AcsChatChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcsChatChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type AcsChatChannelPtrOutput struct{ *pulumi.OutputState }

func (AcsChatChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcsChatChannel)(nil)).Elem()
}

func (o AcsChatChannelPtrOutput) ToAcsChatChannelPtrOutput() AcsChatChannelPtrOutput {
	return o
}

func (o AcsChatChannelPtrOutput) ToAcsChatChannelPtrOutputWithContext(ctx context.Context) AcsChatChannelPtrOutput {
	return o
}

func (o AcsChatChannelPtrOutput) Elem() AcsChatChannelOutput {
	return o.ApplyT(func(v *AcsChatChannel) AcsChatChannel {
		if v != nil {
			return *v
		}
		var ret AcsChatChannel
		return ret
	}).(AcsChatChannelOutput)
}

// The channel name
// Expected value is 'AcsChatChannel'.
func (o AcsChatChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o AcsChatChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AcsChatChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// AcsChat channel definition
type AcsChatChannelResponse struct {
	// The channel name
	// Expected value is 'AcsChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for AcsChatChannelResponse
func (val *AcsChatChannelResponse) Defaults() *AcsChatChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// AcsChat channel definition
type AcsChatChannelResponseOutput struct{ *pulumi.OutputState }

func (AcsChatChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcsChatChannelResponse)(nil)).Elem()
}

func (o AcsChatChannelResponseOutput) ToAcsChatChannelResponseOutput() AcsChatChannelResponseOutput {
	return o
}

func (o AcsChatChannelResponseOutput) ToAcsChatChannelResponseOutputWithContext(ctx context.Context) AcsChatChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'AcsChatChannel'.
func (o AcsChatChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v AcsChatChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o AcsChatChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcsChatChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AcsChatChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcsChatChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o AcsChatChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AcsChatChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type AcsChatChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (AcsChatChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcsChatChannelResponse)(nil)).Elem()
}

func (o AcsChatChannelResponsePtrOutput) ToAcsChatChannelResponsePtrOutput() AcsChatChannelResponsePtrOutput {
	return o
}

func (o AcsChatChannelResponsePtrOutput) ToAcsChatChannelResponsePtrOutputWithContext(ctx context.Context) AcsChatChannelResponsePtrOutput {
	return o
}

func (o AcsChatChannelResponsePtrOutput) Elem() AcsChatChannelResponseOutput {
	return o.ApplyT(func(v *AcsChatChannelResponse) AcsChatChannelResponse {
		if v != nil {
			return *v
		}
		var ret AcsChatChannelResponse
		return ret
	}).(AcsChatChannelResponseOutput)
}

// The channel name
// Expected value is 'AcsChatChannel'.
func (o AcsChatChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o AcsChatChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AcsChatChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o AcsChatChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AcsChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Alexa channel definition
type AlexaChannel struct {
	// The channel name
	// Expected value is 'AlexaChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Alexa channel resource
	Properties *AlexaChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for AlexaChannel
func (val *AlexaChannel) Defaults() *AlexaChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// AlexaChannelInput is an input type that accepts AlexaChannelArgs and AlexaChannelOutput values.
// You can construct a concrete instance of `AlexaChannelInput` via:
//
//	AlexaChannelArgs{...}
type AlexaChannelInput interface {
	pulumi.Input

	ToAlexaChannelOutput() AlexaChannelOutput
	ToAlexaChannelOutputWithContext(context.Context) AlexaChannelOutput
}

// Alexa channel definition
type AlexaChannelArgs struct {
	// The channel name
	// Expected value is 'AlexaChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Alexa channel resource
	Properties AlexaChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for AlexaChannelArgs
func (val *AlexaChannelArgs) Defaults() *AlexaChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (AlexaChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlexaChannel)(nil)).Elem()
}

func (i AlexaChannelArgs) ToAlexaChannelOutput() AlexaChannelOutput {
	return i.ToAlexaChannelOutputWithContext(context.Background())
}

func (i AlexaChannelArgs) ToAlexaChannelOutputWithContext(ctx context.Context) AlexaChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlexaChannelOutput)
}

func (i AlexaChannelArgs) ToAlexaChannelPtrOutput() AlexaChannelPtrOutput {
	return i.ToAlexaChannelPtrOutputWithContext(context.Background())
}

func (i AlexaChannelArgs) ToAlexaChannelPtrOutputWithContext(ctx context.Context) AlexaChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlexaChannelOutput).ToAlexaChannelPtrOutputWithContext(ctx)
}

// AlexaChannelPtrInput is an input type that accepts AlexaChannelArgs, AlexaChannelPtr and AlexaChannelPtrOutput values.
// You can construct a concrete instance of `AlexaChannelPtrInput` via:
//
//	        AlexaChannelArgs{...}
//
//	or:
//
//	        nil
type AlexaChannelPtrInput interface {
	pulumi.Input

	ToAlexaChannelPtrOutput() AlexaChannelPtrOutput
	ToAlexaChannelPtrOutputWithContext(context.Context) AlexaChannelPtrOutput
}

type alexaChannelPtrType AlexaChannelArgs

func AlexaChannelPtr(v *AlexaChannelArgs) AlexaChannelPtrInput {
	return (*alexaChannelPtrType)(v)
}

func (*alexaChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlexaChannel)(nil)).Elem()
}

func (i *alexaChannelPtrType) ToAlexaChannelPtrOutput() AlexaChannelPtrOutput {
	return i.ToAlexaChannelPtrOutputWithContext(context.Background())
}

func (i *alexaChannelPtrType) ToAlexaChannelPtrOutputWithContext(ctx context.Context) AlexaChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlexaChannelPtrOutput)
}

// Alexa channel definition
type AlexaChannelOutput struct{ *pulumi.OutputState }

func (AlexaChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlexaChannel)(nil)).Elem()
}

func (o AlexaChannelOutput) ToAlexaChannelOutput() AlexaChannelOutput {
	return o
}

func (o AlexaChannelOutput) ToAlexaChannelOutputWithContext(ctx context.Context) AlexaChannelOutput {
	return o
}

func (o AlexaChannelOutput) ToAlexaChannelPtrOutput() AlexaChannelPtrOutput {
	return o.ToAlexaChannelPtrOutputWithContext(context.Background())
}

func (o AlexaChannelOutput) ToAlexaChannelPtrOutputWithContext(ctx context.Context) AlexaChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlexaChannel) *AlexaChannel {
		return &v
	}).(AlexaChannelPtrOutput)
}

// The channel name
// Expected value is 'AlexaChannel'.
func (o AlexaChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o AlexaChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlexaChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AlexaChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlexaChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Alexa channel resource
func (o AlexaChannelOutput) Properties() AlexaChannelPropertiesPtrOutput {
	return o.ApplyT(func(v AlexaChannel) *AlexaChannelProperties { return v.Properties }).(AlexaChannelPropertiesPtrOutput)
}

type AlexaChannelPtrOutput struct{ *pulumi.OutputState }

func (AlexaChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlexaChannel)(nil)).Elem()
}

func (o AlexaChannelPtrOutput) ToAlexaChannelPtrOutput() AlexaChannelPtrOutput {
	return o
}

func (o AlexaChannelPtrOutput) ToAlexaChannelPtrOutputWithContext(ctx context.Context) AlexaChannelPtrOutput {
	return o
}

func (o AlexaChannelPtrOutput) Elem() AlexaChannelOutput {
	return o.ApplyT(func(v *AlexaChannel) AlexaChannel {
		if v != nil {
			return *v
		}
		var ret AlexaChannel
		return ret
	}).(AlexaChannelOutput)
}

// The channel name
// Expected value is 'AlexaChannel'.
func (o AlexaChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o AlexaChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AlexaChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Alexa channel resource
func (o AlexaChannelPtrOutput) Properties() AlexaChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *AlexaChannel) *AlexaChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(AlexaChannelPropertiesPtrOutput)
}

// The parameters to provide for the Alexa channel.
type AlexaChannelProperties struct {
	// The Alexa skill Id
	AlexaSkillId string `pulumi:"alexaSkillId"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// AlexaChannelPropertiesInput is an input type that accepts AlexaChannelPropertiesArgs and AlexaChannelPropertiesOutput values.
// You can construct a concrete instance of `AlexaChannelPropertiesInput` via:
//
//	AlexaChannelPropertiesArgs{...}
type AlexaChannelPropertiesInput interface {
	pulumi.Input

	ToAlexaChannelPropertiesOutput() AlexaChannelPropertiesOutput
	ToAlexaChannelPropertiesOutputWithContext(context.Context) AlexaChannelPropertiesOutput
}

// The parameters to provide for the Alexa channel.
type AlexaChannelPropertiesArgs struct {
	// The Alexa skill Id
	AlexaSkillId pulumi.StringInput `pulumi:"alexaSkillId"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (AlexaChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlexaChannelProperties)(nil)).Elem()
}

func (i AlexaChannelPropertiesArgs) ToAlexaChannelPropertiesOutput() AlexaChannelPropertiesOutput {
	return i.ToAlexaChannelPropertiesOutputWithContext(context.Background())
}

func (i AlexaChannelPropertiesArgs) ToAlexaChannelPropertiesOutputWithContext(ctx context.Context) AlexaChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlexaChannelPropertiesOutput)
}

func (i AlexaChannelPropertiesArgs) ToAlexaChannelPropertiesPtrOutput() AlexaChannelPropertiesPtrOutput {
	return i.ToAlexaChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i AlexaChannelPropertiesArgs) ToAlexaChannelPropertiesPtrOutputWithContext(ctx context.Context) AlexaChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlexaChannelPropertiesOutput).ToAlexaChannelPropertiesPtrOutputWithContext(ctx)
}

// AlexaChannelPropertiesPtrInput is an input type that accepts AlexaChannelPropertiesArgs, AlexaChannelPropertiesPtr and AlexaChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `AlexaChannelPropertiesPtrInput` via:
//
//	        AlexaChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type AlexaChannelPropertiesPtrInput interface {
	pulumi.Input

	ToAlexaChannelPropertiesPtrOutput() AlexaChannelPropertiesPtrOutput
	ToAlexaChannelPropertiesPtrOutputWithContext(context.Context) AlexaChannelPropertiesPtrOutput
}

type alexaChannelPropertiesPtrType AlexaChannelPropertiesArgs

func AlexaChannelPropertiesPtr(v *AlexaChannelPropertiesArgs) AlexaChannelPropertiesPtrInput {
	return (*alexaChannelPropertiesPtrType)(v)
}

func (*alexaChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlexaChannelProperties)(nil)).Elem()
}

func (i *alexaChannelPropertiesPtrType) ToAlexaChannelPropertiesPtrOutput() AlexaChannelPropertiesPtrOutput {
	return i.ToAlexaChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *alexaChannelPropertiesPtrType) ToAlexaChannelPropertiesPtrOutputWithContext(ctx context.Context) AlexaChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlexaChannelPropertiesPtrOutput)
}

// The parameters to provide for the Alexa channel.
type AlexaChannelPropertiesOutput struct{ *pulumi.OutputState }

func (AlexaChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlexaChannelProperties)(nil)).Elem()
}

func (o AlexaChannelPropertiesOutput) ToAlexaChannelPropertiesOutput() AlexaChannelPropertiesOutput {
	return o
}

func (o AlexaChannelPropertiesOutput) ToAlexaChannelPropertiesOutputWithContext(ctx context.Context) AlexaChannelPropertiesOutput {
	return o
}

func (o AlexaChannelPropertiesOutput) ToAlexaChannelPropertiesPtrOutput() AlexaChannelPropertiesPtrOutput {
	return o.ToAlexaChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o AlexaChannelPropertiesOutput) ToAlexaChannelPropertiesPtrOutputWithContext(ctx context.Context) AlexaChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlexaChannelProperties) *AlexaChannelProperties {
		return &v
	}).(AlexaChannelPropertiesPtrOutput)
}

// The Alexa skill Id
func (o AlexaChannelPropertiesOutput) AlexaSkillId() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannelProperties) string { return v.AlexaSkillId }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o AlexaChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AlexaChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type AlexaChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AlexaChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlexaChannelProperties)(nil)).Elem()
}

func (o AlexaChannelPropertiesPtrOutput) ToAlexaChannelPropertiesPtrOutput() AlexaChannelPropertiesPtrOutput {
	return o
}

func (o AlexaChannelPropertiesPtrOutput) ToAlexaChannelPropertiesPtrOutputWithContext(ctx context.Context) AlexaChannelPropertiesPtrOutput {
	return o
}

func (o AlexaChannelPropertiesPtrOutput) Elem() AlexaChannelPropertiesOutput {
	return o.ApplyT(func(v *AlexaChannelProperties) AlexaChannelProperties {
		if v != nil {
			return *v
		}
		var ret AlexaChannelProperties
		return ret
	}).(AlexaChannelPropertiesOutput)
}

// The Alexa skill Id
func (o AlexaChannelPropertiesPtrOutput) AlexaSkillId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AlexaSkillId
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o AlexaChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlexaChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The parameters to provide for the Alexa channel.
type AlexaChannelPropertiesResponse struct {
	// The Alexa skill Id
	AlexaSkillId string `pulumi:"alexaSkillId"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Full Uri used to configured the skill in Alexa
	ServiceEndpointUri string `pulumi:"serviceEndpointUri"`
	// Url fragment used in part of the Uri configured in Alexa
	UrlFragment string `pulumi:"urlFragment"`
}

// The parameters to provide for the Alexa channel.
type AlexaChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AlexaChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlexaChannelPropertiesResponse)(nil)).Elem()
}

func (o AlexaChannelPropertiesResponseOutput) ToAlexaChannelPropertiesResponseOutput() AlexaChannelPropertiesResponseOutput {
	return o
}

func (o AlexaChannelPropertiesResponseOutput) ToAlexaChannelPropertiesResponseOutputWithContext(ctx context.Context) AlexaChannelPropertiesResponseOutput {
	return o
}

// The Alexa skill Id
func (o AlexaChannelPropertiesResponseOutput) AlexaSkillId() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannelPropertiesResponse) string { return v.AlexaSkillId }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o AlexaChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AlexaChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Full Uri used to configured the skill in Alexa
func (o AlexaChannelPropertiesResponseOutput) ServiceEndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannelPropertiesResponse) string { return v.ServiceEndpointUri }).(pulumi.StringOutput)
}

// Url fragment used in part of the Uri configured in Alexa
func (o AlexaChannelPropertiesResponseOutput) UrlFragment() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannelPropertiesResponse) string { return v.UrlFragment }).(pulumi.StringOutput)
}

type AlexaChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AlexaChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlexaChannelPropertiesResponse)(nil)).Elem()
}

func (o AlexaChannelPropertiesResponsePtrOutput) ToAlexaChannelPropertiesResponsePtrOutput() AlexaChannelPropertiesResponsePtrOutput {
	return o
}

func (o AlexaChannelPropertiesResponsePtrOutput) ToAlexaChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) AlexaChannelPropertiesResponsePtrOutput {
	return o
}

func (o AlexaChannelPropertiesResponsePtrOutput) Elem() AlexaChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *AlexaChannelPropertiesResponse) AlexaChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AlexaChannelPropertiesResponse
		return ret
	}).(AlexaChannelPropertiesResponseOutput)
}

// The Alexa skill Id
func (o AlexaChannelPropertiesResponsePtrOutput) AlexaSkillId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AlexaSkillId
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o AlexaChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlexaChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Full Uri used to configured the skill in Alexa
func (o AlexaChannelPropertiesResponsePtrOutput) ServiceEndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceEndpointUri
	}).(pulumi.StringPtrOutput)
}

// Url fragment used in part of the Uri configured in Alexa
func (o AlexaChannelPropertiesResponsePtrOutput) UrlFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UrlFragment
	}).(pulumi.StringPtrOutput)
}

// Alexa channel definition
type AlexaChannelResponse struct {
	// The channel name
	// Expected value is 'AlexaChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Alexa channel resource
	Properties *AlexaChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for AlexaChannelResponse
func (val *AlexaChannelResponse) Defaults() *AlexaChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Alexa channel definition
type AlexaChannelResponseOutput struct{ *pulumi.OutputState }

func (AlexaChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlexaChannelResponse)(nil)).Elem()
}

func (o AlexaChannelResponseOutput) ToAlexaChannelResponseOutput() AlexaChannelResponseOutput {
	return o
}

func (o AlexaChannelResponseOutput) ToAlexaChannelResponseOutputWithContext(ctx context.Context) AlexaChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'AlexaChannel'.
func (o AlexaChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o AlexaChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlexaChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AlexaChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlexaChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Alexa channel resource
func (o AlexaChannelResponseOutput) Properties() AlexaChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AlexaChannelResponse) *AlexaChannelPropertiesResponse { return v.Properties }).(AlexaChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o AlexaChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AlexaChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type AlexaChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (AlexaChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlexaChannelResponse)(nil)).Elem()
}

func (o AlexaChannelResponsePtrOutput) ToAlexaChannelResponsePtrOutput() AlexaChannelResponsePtrOutput {
	return o
}

func (o AlexaChannelResponsePtrOutput) ToAlexaChannelResponsePtrOutputWithContext(ctx context.Context) AlexaChannelResponsePtrOutput {
	return o
}

func (o AlexaChannelResponsePtrOutput) Elem() AlexaChannelResponseOutput {
	return o.ApplyT(func(v *AlexaChannelResponse) AlexaChannelResponse {
		if v != nil {
			return *v
		}
		var ret AlexaChannelResponse
		return ret
	}).(AlexaChannelResponseOutput)
}

// The channel name
// Expected value is 'AlexaChannel'.
func (o AlexaChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o AlexaChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o AlexaChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Alexa channel resource
func (o AlexaChannelResponsePtrOutput) Properties() AlexaChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AlexaChannelResponse) *AlexaChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(AlexaChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o AlexaChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlexaChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Bot.
type BotProperties struct {
	// Contains resource all settings defined as key/value pairs.
	AllSettings map[string]string `pulumi:"allSettings"`
	// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
	AppPasswordHint *string `pulumi:"appPasswordHint"`
	// The CMK Url
	CmekKeyVaultUrl *string `pulumi:"cmekKeyVaultUrl"`
	// The description of the bot
	Description *string `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey *string `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey *string `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId *string `pulumi:"developerAppInsightsApplicationId"`
	// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// The Name of the bot
	DisplayName string `pulumi:"displayName"`
	// The bot's endpoint
	Endpoint string `pulumi:"endpoint"`
	// The Icon Url of the bot
	IconUrl *string `pulumi:"iconUrl"`
	// Whether Cmek is enabled
	IsCmekEnabled *bool `pulumi:"isCmekEnabled"`
	// Whether the bot is streaming supported
	IsStreamingSupported *bool `pulumi:"isStreamingSupported"`
	// Collection of LUIS App Ids
	LuisAppIds []string `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey *string `pulumi:"luisKey"`
	// The bot's manifest url
	ManifestUrl *string `pulumi:"manifestUrl"`
	// Microsoft App Id for the bot
	MsaAppId string `pulumi:"msaAppId"`
	// Microsoft App Managed Identity Resource Id for the bot
	MsaAppMSIResourceId *string `pulumi:"msaAppMSIResourceId"`
	// Microsoft App Tenant Id for the bot
	MsaAppTenantId *string `pulumi:"msaAppTenantId"`
	// Microsoft App Type for the bot
	MsaAppType *string `pulumi:"msaAppType"`
	// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
	OpenWithHint *string `pulumi:"openWithHint"`
	// Contains resource parameters defined as key/value pairs.
	Parameters map[string]string `pulumi:"parameters"`
	// Whether the bot is in an isolated network
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Publishing credentials of the resource
	PublishingCredentials *string `pulumi:"publishingCredentials"`
	// The channel schema transformation version for the bot
	SchemaTransformationVersion *string `pulumi:"schemaTransformationVersion"`
	// The storage resourceId for the bot
	StorageResourceId *string `pulumi:"storageResourceId"`
	// The Tenant Id for the bot
	TenantId *string `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for BotProperties
func (val *BotProperties) Defaults() *BotProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IconUrl == nil {
		iconUrl_ := ""
		tmp.IconUrl = &iconUrl_
	}
	if tmp.IsCmekEnabled == nil {
		isCmekEnabled_ := false
		tmp.IsCmekEnabled = &isCmekEnabled_
	}
	if tmp.IsStreamingSupported == nil {
		isStreamingSupported_ := false
		tmp.IsStreamingSupported = &isStreamingSupported_
	}
	if tmp.PublicNetworkAccess == nil {
		publicNetworkAccess_ := "Enabled"
		tmp.PublicNetworkAccess = &publicNetworkAccess_
	}
	return &tmp
}

// BotPropertiesInput is an input type that accepts BotPropertiesArgs and BotPropertiesOutput values.
// You can construct a concrete instance of `BotPropertiesInput` via:
//
//	BotPropertiesArgs{...}
type BotPropertiesInput interface {
	pulumi.Input

	ToBotPropertiesOutput() BotPropertiesOutput
	ToBotPropertiesOutputWithContext(context.Context) BotPropertiesOutput
}

// The parameters to provide for the Bot.
type BotPropertiesArgs struct {
	// Contains resource all settings defined as key/value pairs.
	AllSettings pulumi.StringMapInput `pulumi:"allSettings"`
	// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
	AppPasswordHint pulumi.StringPtrInput `pulumi:"appPasswordHint"`
	// The CMK Url
	CmekKeyVaultUrl pulumi.StringPtrInput `pulumi:"cmekKeyVaultUrl"`
	// The description of the bot
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey pulumi.StringPtrInput `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey pulumi.StringPtrInput `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId pulumi.StringPtrInput `pulumi:"developerAppInsightsApplicationId"`
	// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput `pulumi:"disableLocalAuth"`
	// The Name of the bot
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The bot's endpoint
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The Icon Url of the bot
	IconUrl pulumi.StringPtrInput `pulumi:"iconUrl"`
	// Whether Cmek is enabled
	IsCmekEnabled pulumi.BoolPtrInput `pulumi:"isCmekEnabled"`
	// Whether the bot is streaming supported
	IsStreamingSupported pulumi.BoolPtrInput `pulumi:"isStreamingSupported"`
	// Collection of LUIS App Ids
	LuisAppIds pulumi.StringArrayInput `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey pulumi.StringPtrInput `pulumi:"luisKey"`
	// The bot's manifest url
	ManifestUrl pulumi.StringPtrInput `pulumi:"manifestUrl"`
	// Microsoft App Id for the bot
	MsaAppId pulumi.StringInput `pulumi:"msaAppId"`
	// Microsoft App Managed Identity Resource Id for the bot
	MsaAppMSIResourceId pulumi.StringPtrInput `pulumi:"msaAppMSIResourceId"`
	// Microsoft App Tenant Id for the bot
	MsaAppTenantId pulumi.StringPtrInput `pulumi:"msaAppTenantId"`
	// Microsoft App Type for the bot
	MsaAppType pulumi.StringPtrInput `pulumi:"msaAppType"`
	// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
	OpenWithHint pulumi.StringPtrInput `pulumi:"openWithHint"`
	// Contains resource parameters defined as key/value pairs.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Whether the bot is in an isolated network
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Publishing credentials of the resource
	PublishingCredentials pulumi.StringPtrInput `pulumi:"publishingCredentials"`
	// The channel schema transformation version for the bot
	SchemaTransformationVersion pulumi.StringPtrInput `pulumi:"schemaTransformationVersion"`
	// The storage resourceId for the bot
	StorageResourceId pulumi.StringPtrInput `pulumi:"storageResourceId"`
	// The Tenant Id for the bot
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for BotPropertiesArgs
func (val *BotPropertiesArgs) Defaults() *BotPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IconUrl == nil {
		tmp.IconUrl = pulumi.StringPtr("")
	}
	if tmp.IsCmekEnabled == nil {
		tmp.IsCmekEnabled = pulumi.BoolPtr(false)
	}
	if tmp.IsStreamingSupported == nil {
		tmp.IsStreamingSupported = pulumi.BoolPtr(false)
	}
	if tmp.PublicNetworkAccess == nil {
		tmp.PublicNetworkAccess = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (BotPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotProperties)(nil)).Elem()
}

func (i BotPropertiesArgs) ToBotPropertiesOutput() BotPropertiesOutput {
	return i.ToBotPropertiesOutputWithContext(context.Background())
}

func (i BotPropertiesArgs) ToBotPropertiesOutputWithContext(ctx context.Context) BotPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesOutput)
}

func (i BotPropertiesArgs) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return i.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (i BotPropertiesArgs) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesOutput).ToBotPropertiesPtrOutputWithContext(ctx)
}

// BotPropertiesPtrInput is an input type that accepts BotPropertiesArgs, BotPropertiesPtr and BotPropertiesPtrOutput values.
// You can construct a concrete instance of `BotPropertiesPtrInput` via:
//
//	        BotPropertiesArgs{...}
//
//	or:
//
//	        nil
type BotPropertiesPtrInput interface {
	pulumi.Input

	ToBotPropertiesPtrOutput() BotPropertiesPtrOutput
	ToBotPropertiesPtrOutputWithContext(context.Context) BotPropertiesPtrOutput
}

type botPropertiesPtrType BotPropertiesArgs

func BotPropertiesPtr(v *BotPropertiesArgs) BotPropertiesPtrInput {
	return (*botPropertiesPtrType)(v)
}

func (*botPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BotProperties)(nil)).Elem()
}

func (i *botPropertiesPtrType) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return i.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (i *botPropertiesPtrType) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesPtrOutput)
}

// The parameters to provide for the Bot.
type BotPropertiesOutput struct{ *pulumi.OutputState }

func (BotPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotProperties)(nil)).Elem()
}

func (o BotPropertiesOutput) ToBotPropertiesOutput() BotPropertiesOutput {
	return o
}

func (o BotPropertiesOutput) ToBotPropertiesOutputWithContext(ctx context.Context) BotPropertiesOutput {
	return o
}

func (o BotPropertiesOutput) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return o.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (o BotPropertiesOutput) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BotProperties) *BotProperties {
		return &v
	}).(BotPropertiesPtrOutput)
}

// Contains resource all settings defined as key/value pairs.
func (o BotPropertiesOutput) AllSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v BotProperties) map[string]string { return v.AllSettings }).(pulumi.StringMapOutput)
}

// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
func (o BotPropertiesOutput) AppPasswordHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.AppPasswordHint }).(pulumi.StringPtrOutput)
}

// The CMK Url
func (o BotPropertiesOutput) CmekKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.CmekKeyVaultUrl }).(pulumi.StringPtrOutput)
}

// The description of the bot
func (o BotPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.DeveloperAppInsightKey }).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.DeveloperAppInsightsApiKey }).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.DeveloperAppInsightsApplicationId }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
func (o BotPropertiesOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BotProperties) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// The Name of the bot
func (o BotPropertiesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BotProperties) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The bot's endpoint
func (o BotPropertiesOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BotProperties) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The Icon Url of the bot
func (o BotPropertiesOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Whether Cmek is enabled
func (o BotPropertiesOutput) IsCmekEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BotProperties) *bool { return v.IsCmekEnabled }).(pulumi.BoolPtrOutput)
}

// Whether the bot is streaming supported
func (o BotPropertiesOutput) IsStreamingSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BotProperties) *bool { return v.IsStreamingSupported }).(pulumi.BoolPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotProperties) []string { return v.LuisAppIds }).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.LuisKey }).(pulumi.StringPtrOutput)
}

// The bot's manifest url
func (o BotPropertiesOutput) ManifestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.ManifestUrl }).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesOutput) MsaAppId() pulumi.StringOutput {
	return o.ApplyT(func(v BotProperties) string { return v.MsaAppId }).(pulumi.StringOutput)
}

// Microsoft App Managed Identity Resource Id for the bot
func (o BotPropertiesOutput) MsaAppMSIResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.MsaAppMSIResourceId }).(pulumi.StringPtrOutput)
}

// Microsoft App Tenant Id for the bot
func (o BotPropertiesOutput) MsaAppTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.MsaAppTenantId }).(pulumi.StringPtrOutput)
}

// Microsoft App Type for the bot
func (o BotPropertiesOutput) MsaAppType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.MsaAppType }).(pulumi.StringPtrOutput)
}

// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
func (o BotPropertiesOutput) OpenWithHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.OpenWithHint }).(pulumi.StringPtrOutput)
}

// Contains resource parameters defined as key/value pairs.
func (o BotPropertiesOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v BotProperties) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Whether the bot is in an isolated network
func (o BotPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Publishing credentials of the resource
func (o BotPropertiesOutput) PublishingCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.PublishingCredentials }).(pulumi.StringPtrOutput)
}

// The channel schema transformation version for the bot
func (o BotPropertiesOutput) SchemaTransformationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.SchemaTransformationVersion }).(pulumi.StringPtrOutput)
}

// The storage resourceId for the bot
func (o BotPropertiesOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.StorageResourceId }).(pulumi.StringPtrOutput)
}

// The Tenant Id for the bot
func (o BotPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type BotPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BotPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotProperties)(nil)).Elem()
}

func (o BotPropertiesPtrOutput) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return o
}

func (o BotPropertiesPtrOutput) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return o
}

func (o BotPropertiesPtrOutput) Elem() BotPropertiesOutput {
	return o.ApplyT(func(v *BotProperties) BotProperties {
		if v != nil {
			return *v
		}
		var ret BotProperties
		return ret
	}).(BotPropertiesOutput)
}

// Contains resource all settings defined as key/value pairs.
func (o BotPropertiesPtrOutput) AllSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BotProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.AllSettings
	}).(pulumi.StringMapOutput)
}

// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
func (o BotPropertiesPtrOutput) AppPasswordHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppPasswordHint
	}).(pulumi.StringPtrOutput)
}

// The CMK Url
func (o BotPropertiesPtrOutput) CmekKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.CmekKeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// The description of the bot
func (o BotPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesPtrOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightKey
	}).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesPtrOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightsApiKey
	}).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesPtrOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightsApplicationId
	}).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
func (o BotPropertiesPtrOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BotProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableLocalAuth
	}).(pulumi.BoolPtrOutput)
}

// The Name of the bot
func (o BotPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The bot's endpoint
func (o BotPropertiesPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The Icon Url of the bot
func (o BotPropertiesPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Whether Cmek is enabled
func (o BotPropertiesPtrOutput) IsCmekEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BotProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsCmekEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether the bot is streaming supported
func (o BotPropertiesPtrOutput) IsStreamingSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BotProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsStreamingSupported
	}).(pulumi.BoolPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesPtrOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotProperties) []string {
		if v == nil {
			return nil
		}
		return v.LuisAppIds
	}).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesPtrOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.LuisKey
	}).(pulumi.StringPtrOutput)
}

// The bot's manifest url
func (o BotPropertiesPtrOutput) ManifestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManifestUrl
	}).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesPtrOutput) MsaAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MsaAppId
	}).(pulumi.StringPtrOutput)
}

// Microsoft App Managed Identity Resource Id for the bot
func (o BotPropertiesPtrOutput) MsaAppMSIResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.MsaAppMSIResourceId
	}).(pulumi.StringPtrOutput)
}

// Microsoft App Tenant Id for the bot
func (o BotPropertiesPtrOutput) MsaAppTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.MsaAppTenantId
	}).(pulumi.StringPtrOutput)
}

// Microsoft App Type for the bot
func (o BotPropertiesPtrOutput) MsaAppType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.MsaAppType
	}).(pulumi.StringPtrOutput)
}

// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
func (o BotPropertiesPtrOutput) OpenWithHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.OpenWithHint
	}).(pulumi.StringPtrOutput)
}

// Contains resource parameters defined as key/value pairs.
func (o BotPropertiesPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BotProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Whether the bot is in an isolated network
func (o BotPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Publishing credentials of the resource
func (o BotPropertiesPtrOutput) PublishingCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublishingCredentials
	}).(pulumi.StringPtrOutput)
}

// The channel schema transformation version for the bot
func (o BotPropertiesPtrOutput) SchemaTransformationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.SchemaTransformationVersion
	}).(pulumi.StringPtrOutput)
}

// The storage resourceId for the bot
func (o BotPropertiesPtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// The Tenant Id for the bot
func (o BotPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Bot.
type BotPropertiesResponse struct {
	// Contains resource all settings defined as key/value pairs.
	AllSettings map[string]string `pulumi:"allSettings"`
	// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
	AppPasswordHint *string `pulumi:"appPasswordHint"`
	// The CMK encryption status
	CmekEncryptionStatus string `pulumi:"cmekEncryptionStatus"`
	// The CMK Url
	CmekKeyVaultUrl *string `pulumi:"cmekKeyVaultUrl"`
	// Collection of channels for which the bot is configured
	ConfiguredChannels []string `pulumi:"configuredChannels"`
	// The description of the bot
	Description *string `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey *string `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey *string `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId *string `pulumi:"developerAppInsightsApplicationId"`
	// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// The Name of the bot
	DisplayName string `pulumi:"displayName"`
	// Collection of channels for which the bot is enabled
	EnabledChannels []string `pulumi:"enabledChannels"`
	// The bot's endpoint
	Endpoint string `pulumi:"endpoint"`
	// The bot's endpoint version
	EndpointVersion string `pulumi:"endpointVersion"`
	// The Icon Url of the bot
	IconUrl *string `pulumi:"iconUrl"`
	// Whether Cmek is enabled
	IsCmekEnabled *bool `pulumi:"isCmekEnabled"`
	// Whether the bot is developerAppInsightsApiKey set
	IsDeveloperAppInsightsApiKeySet bool `pulumi:"isDeveloperAppInsightsApiKeySet"`
	// Whether the bot is streaming supported
	IsStreamingSupported *bool `pulumi:"isStreamingSupported"`
	// Collection of LUIS App Ids
	LuisAppIds []string `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey *string `pulumi:"luisKey"`
	// The bot's manifest url
	ManifestUrl *string `pulumi:"manifestUrl"`
	// Token used to migrate non Azure bot to azure subscription
	MigrationToken string `pulumi:"migrationToken"`
	// Microsoft App Id for the bot
	MsaAppId string `pulumi:"msaAppId"`
	// Microsoft App Managed Identity Resource Id for the bot
	MsaAppMSIResourceId *string `pulumi:"msaAppMSIResourceId"`
	// Microsoft App Tenant Id for the bot
	MsaAppTenantId *string `pulumi:"msaAppTenantId"`
	// Microsoft App Type for the bot
	MsaAppType *string `pulumi:"msaAppType"`
	// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
	OpenWithHint *string `pulumi:"openWithHint"`
	// Contains resource parameters defined as key/value pairs.
	Parameters map[string]string `pulumi:"parameters"`
	// List of Private Endpoint Connections configured for the bot
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Whether the bot is in an isolated network
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Publishing credentials of the resource
	PublishingCredentials *string `pulumi:"publishingCredentials"`
	// The channel schema transformation version for the bot
	SchemaTransformationVersion *string `pulumi:"schemaTransformationVersion"`
	// The storage resourceId for the bot
	StorageResourceId *string `pulumi:"storageResourceId"`
	// The Tenant Id for the bot
	TenantId *string `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for BotPropertiesResponse
func (val *BotPropertiesResponse) Defaults() *BotPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IconUrl == nil {
		iconUrl_ := ""
		tmp.IconUrl = &iconUrl_
	}
	if tmp.IsCmekEnabled == nil {
		isCmekEnabled_ := false
		tmp.IsCmekEnabled = &isCmekEnabled_
	}
	if tmp.IsStreamingSupported == nil {
		isStreamingSupported_ := false
		tmp.IsStreamingSupported = &isStreamingSupported_
	}
	if tmp.PublicNetworkAccess == nil {
		publicNetworkAccess_ := "Enabled"
		tmp.PublicNetworkAccess = &publicNetworkAccess_
	}
	return &tmp
}

// The parameters to provide for the Bot.
type BotPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BotPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotPropertiesResponse)(nil)).Elem()
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponseOutput() BotPropertiesResponseOutput {
	return o
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponseOutputWithContext(ctx context.Context) BotPropertiesResponseOutput {
	return o
}

// Contains resource all settings defined as key/value pairs.
func (o BotPropertiesResponseOutput) AllSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v BotPropertiesResponse) map[string]string { return v.AllSettings }).(pulumi.StringMapOutput)
}

// The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
func (o BotPropertiesResponseOutput) AppPasswordHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.AppPasswordHint }).(pulumi.StringPtrOutput)
}

// The CMK encryption status
func (o BotPropertiesResponseOutput) CmekEncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.CmekEncryptionStatus }).(pulumi.StringOutput)
}

// The CMK Url
func (o BotPropertiesResponseOutput) CmekKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.CmekKeyVaultUrl }).(pulumi.StringPtrOutput)
}

// Collection of channels for which the bot is configured
func (o BotPropertiesResponseOutput) ConfiguredChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.ConfiguredChannels }).(pulumi.StringArrayOutput)
}

// The description of the bot
func (o BotPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesResponseOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightKey }).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesResponseOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightsApiKey }).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesResponseOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightsApplicationId }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
func (o BotPropertiesResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// The Name of the bot
func (o BotPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Collection of channels for which the bot is enabled
func (o BotPropertiesResponseOutput) EnabledChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.EnabledChannels }).(pulumi.StringArrayOutput)
}

// The bot's endpoint
func (o BotPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The bot's endpoint version
func (o BotPropertiesResponseOutput) EndpointVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.EndpointVersion }).(pulumi.StringOutput)
}

// The Icon Url of the bot
func (o BotPropertiesResponseOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Whether Cmek is enabled
func (o BotPropertiesResponseOutput) IsCmekEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *bool { return v.IsCmekEnabled }).(pulumi.BoolPtrOutput)
}

// Whether the bot is developerAppInsightsApiKey set
func (o BotPropertiesResponseOutput) IsDeveloperAppInsightsApiKeySet() pulumi.BoolOutput {
	return o.ApplyT(func(v BotPropertiesResponse) bool { return v.IsDeveloperAppInsightsApiKeySet }).(pulumi.BoolOutput)
}

// Whether the bot is streaming supported
func (o BotPropertiesResponseOutput) IsStreamingSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *bool { return v.IsStreamingSupported }).(pulumi.BoolPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesResponseOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.LuisAppIds }).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesResponseOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.LuisKey }).(pulumi.StringPtrOutput)
}

// The bot's manifest url
func (o BotPropertiesResponseOutput) ManifestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.ManifestUrl }).(pulumi.StringPtrOutput)
}

// Token used to migrate non Azure bot to azure subscription
func (o BotPropertiesResponseOutput) MigrationToken() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.MigrationToken }).(pulumi.StringOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesResponseOutput) MsaAppId() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.MsaAppId }).(pulumi.StringOutput)
}

// Microsoft App Managed Identity Resource Id for the bot
func (o BotPropertiesResponseOutput) MsaAppMSIResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.MsaAppMSIResourceId }).(pulumi.StringPtrOutput)
}

// Microsoft App Tenant Id for the bot
func (o BotPropertiesResponseOutput) MsaAppTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.MsaAppTenantId }).(pulumi.StringPtrOutput)
}

// Microsoft App Type for the bot
func (o BotPropertiesResponseOutput) MsaAppType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.MsaAppType }).(pulumi.StringPtrOutput)
}

// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
func (o BotPropertiesResponseOutput) OpenWithHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.OpenWithHint }).(pulumi.StringPtrOutput)
}

// Contains resource parameters defined as key/value pairs.
func (o BotPropertiesResponseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v BotPropertiesResponse) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// List of Private Endpoint Connections configured for the bot
func (o BotPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []PrivateEndpointConnectionResponse { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the resource
func (o BotPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Whether the bot is in an isolated network
func (o BotPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Publishing credentials of the resource
func (o BotPropertiesResponseOutput) PublishingCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.PublishingCredentials }).(pulumi.StringPtrOutput)
}

// The channel schema transformation version for the bot
func (o BotPropertiesResponseOutput) SchemaTransformationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.SchemaTransformationVersion }).(pulumi.StringPtrOutput)
}

// The storage resourceId for the bot
func (o BotPropertiesResponseOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.StorageResourceId }).(pulumi.StringPtrOutput)
}

// The Tenant Id for the bot
func (o BotPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Channel settings definition
type ChannelSettingsResponse struct {
	// The bot icon url
	BotIconUrl *string `pulumi:"botIconUrl"`
	// The bot id
	BotId *string `pulumi:"botId"`
	// The channel display name
	ChannelDisplayName *string `pulumi:"channelDisplayName"`
	// The channel id
	ChannelId *string `pulumi:"channelId"`
	// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// The extensionKey1
	ExtensionKey1 *string `pulumi:"extensionKey1"`
	// The extensionKey2
	ExtensionKey2 *string `pulumi:"extensionKey2"`
	// Whether this channel is enabled for the bot
	IsEnabled *bool `pulumi:"isEnabled"`
	// Whether customer needs to agree to new terms.
	RequireTermsAgreement *bool `pulumi:"requireTermsAgreement"`
	// The list of sites
	Sites []SiteResponse `pulumi:"sites"`
}

// Defaults sets the appropriate defaults for ChannelSettingsResponse
func (val *ChannelSettingsResponse) Defaults() *ChannelSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExtensionKey1 == nil {
		extensionKey1_ := ""
		tmp.ExtensionKey1 = &extensionKey1_
	}
	if tmp.ExtensionKey2 == nil {
		extensionKey2_ := ""
		tmp.ExtensionKey2 = &extensionKey2_
	}
	return &tmp
}

// Channel settings definition
type ChannelSettingsResponseOutput struct{ *pulumi.OutputState }

func (ChannelSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSettingsResponse)(nil)).Elem()
}

func (o ChannelSettingsResponseOutput) ToChannelSettingsResponseOutput() ChannelSettingsResponseOutput {
	return o
}

func (o ChannelSettingsResponseOutput) ToChannelSettingsResponseOutputWithContext(ctx context.Context) ChannelSettingsResponseOutput {
	return o
}

// The bot icon url
func (o ChannelSettingsResponseOutput) BotIconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *string { return v.BotIconUrl }).(pulumi.StringPtrOutput)
}

// The bot id
func (o ChannelSettingsResponseOutput) BotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *string { return v.BotId }).(pulumi.StringPtrOutput)
}

// The channel display name
func (o ChannelSettingsResponseOutput) ChannelDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *string { return v.ChannelDisplayName }).(pulumi.StringPtrOutput)
}

// The channel id
func (o ChannelSettingsResponseOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
func (o ChannelSettingsResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// The extensionKey1
func (o ChannelSettingsResponseOutput) ExtensionKey1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *string { return v.ExtensionKey1 }).(pulumi.StringPtrOutput)
}

// The extensionKey2
func (o ChannelSettingsResponseOutput) ExtensionKey2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *string { return v.ExtensionKey2 }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o ChannelSettingsResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether customer needs to agree to new terms.
func (o ChannelSettingsResponseOutput) RequireTermsAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) *bool { return v.RequireTermsAgreement }).(pulumi.BoolPtrOutput)
}

// The list of sites
func (o ChannelSettingsResponseOutput) Sites() SiteResponseArrayOutput {
	return o.ApplyT(func(v ChannelSettingsResponse) []SiteResponse { return v.Sites }).(SiteResponseArrayOutput)
}

type ChannelSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ChannelSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSettingsResponse)(nil)).Elem()
}

func (o ChannelSettingsResponsePtrOutput) ToChannelSettingsResponsePtrOutput() ChannelSettingsResponsePtrOutput {
	return o
}

func (o ChannelSettingsResponsePtrOutput) ToChannelSettingsResponsePtrOutputWithContext(ctx context.Context) ChannelSettingsResponsePtrOutput {
	return o
}

func (o ChannelSettingsResponsePtrOutput) Elem() ChannelSettingsResponseOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) ChannelSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ChannelSettingsResponse
		return ret
	}).(ChannelSettingsResponseOutput)
}

// The bot icon url
func (o ChannelSettingsResponsePtrOutput) BotIconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BotIconUrl
	}).(pulumi.StringPtrOutput)
}

// The bot id
func (o ChannelSettingsResponsePtrOutput) BotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BotId
	}).(pulumi.StringPtrOutput)
}

// The channel display name
func (o ChannelSettingsResponsePtrOutput) ChannelDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChannelDisplayName
	}).(pulumi.StringPtrOutput)
}

// The channel id
func (o ChannelSettingsResponsePtrOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChannelId
	}).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
func (o ChannelSettingsResponsePtrOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableLocalAuth
	}).(pulumi.BoolPtrOutput)
}

// The extensionKey1
func (o ChannelSettingsResponsePtrOutput) ExtensionKey1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionKey1
	}).(pulumi.StringPtrOutput)
}

// The extensionKey2
func (o ChannelSettingsResponsePtrOutput) ExtensionKey2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionKey2
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o ChannelSettingsResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether customer needs to agree to new terms.
func (o ChannelSettingsResponsePtrOutput) RequireTermsAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireTermsAgreement
	}).(pulumi.BoolPtrOutput)
}

// The list of sites
func (o ChannelSettingsResponsePtrOutput) Sites() SiteResponseArrayOutput {
	return o.ApplyT(func(v *ChannelSettingsResponse) []SiteResponse {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(SiteResponseArrayOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameter struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// ConnectionSettingParameterInput is an input type that accepts ConnectionSettingParameterArgs and ConnectionSettingParameterOutput values.
// You can construct a concrete instance of `ConnectionSettingParameterInput` via:
//
//	ConnectionSettingParameterArgs{...}
type ConnectionSettingParameterInput interface {
	pulumi.Input

	ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput
	ToConnectionSettingParameterOutputWithContext(context.Context) ConnectionSettingParameterOutput
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterArgs struct {
	// Key for the Connection Setting Parameter.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConnectionSettingParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameter)(nil)).Elem()
}

func (i ConnectionSettingParameterArgs) ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput {
	return i.ToConnectionSettingParameterOutputWithContext(context.Background())
}

func (i ConnectionSettingParameterArgs) ToConnectionSettingParameterOutputWithContext(ctx context.Context) ConnectionSettingParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingParameterOutput)
}

// ConnectionSettingParameterArrayInput is an input type that accepts ConnectionSettingParameterArray and ConnectionSettingParameterArrayOutput values.
// You can construct a concrete instance of `ConnectionSettingParameterArrayInput` via:
//
//	ConnectionSettingParameterArray{ ConnectionSettingParameterArgs{...} }
type ConnectionSettingParameterArrayInput interface {
	pulumi.Input

	ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput
	ToConnectionSettingParameterArrayOutputWithContext(context.Context) ConnectionSettingParameterArrayOutput
}

type ConnectionSettingParameterArray []ConnectionSettingParameterInput

func (ConnectionSettingParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameter)(nil)).Elem()
}

func (i ConnectionSettingParameterArray) ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput {
	return i.ToConnectionSettingParameterArrayOutputWithContext(context.Background())
}

func (i ConnectionSettingParameterArray) ToConnectionSettingParameterArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingParameterArrayOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameter)(nil)).Elem()
}

func (o ConnectionSettingParameterOutput) ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput {
	return o
}

func (o ConnectionSettingParameterOutput) ToConnectionSettingParameterOutputWithContext(ctx context.Context) ConnectionSettingParameterOutput {
	return o
}

// Key for the Connection Setting Parameter.
func (o ConnectionSettingParameterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the Connection Setting Parameter.
func (o ConnectionSettingParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionSettingParameterArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameter)(nil)).Elem()
}

func (o ConnectionSettingParameterArrayOutput) ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput {
	return o
}

func (o ConnectionSettingParameterArrayOutput) ToConnectionSettingParameterArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterArrayOutput {
	return o
}

func (o ConnectionSettingParameterArrayOutput) Index(i pulumi.IntInput) ConnectionSettingParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSettingParameter {
		return vs[0].([]ConnectionSettingParameter)[vs[1].(int)]
	}).(ConnectionSettingParameterOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponse struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutput() ConnectionSettingParameterResponseOutput {
	return o
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseOutput {
	return o
}

// Key for the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionSettingParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutput() ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) Index(i pulumi.IntInput) ConnectionSettingParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSettingParameterResponse {
		return vs[0].([]ConnectionSettingParameterResponse)[vs[1].(int)]
	}).(ConnectionSettingParameterResponseOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingProperties struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Id of the Connection Setting.
	Id *string `pulumi:"id"`
	// Name of the Connection Setting.
	Name *string `pulumi:"name"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameter `pulumi:"parameters"`
	// Provisioning state of the resource
	ProvisioningState *string `pulumi:"provisioningState"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
}

// Defaults sets the appropriate defaults for ConnectionSettingProperties
func (val *ConnectionSettingProperties) Defaults() *ConnectionSettingProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Scopes == nil {
		scopes_ := ""
		tmp.Scopes = &scopes_
	}
	return &tmp
}

// ConnectionSettingPropertiesInput is an input type that accepts ConnectionSettingPropertiesArgs and ConnectionSettingPropertiesOutput values.
// You can construct a concrete instance of `ConnectionSettingPropertiesInput` via:
//
//	ConnectionSettingPropertiesArgs{...}
type ConnectionSettingPropertiesInput interface {
	pulumi.Input

	ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput
	ToConnectionSettingPropertiesOutputWithContext(context.Context) ConnectionSettingPropertiesOutput
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesArgs struct {
	// Client Id associated with the Connection Setting.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Id of the Connection Setting.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Connection Setting.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters ConnectionSettingParameterArrayInput `pulumi:"parameters"`
	// Provisioning state of the resource
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Scopes associated with the Connection Setting
	Scopes pulumi.StringPtrInput `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName pulumi.StringPtrInput `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId pulumi.StringPtrInput `pulumi:"serviceProviderId"`
}

// Defaults sets the appropriate defaults for ConnectionSettingPropertiesArgs
func (val *ConnectionSettingPropertiesArgs) Defaults() *ConnectionSettingPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Scopes == nil {
		tmp.Scopes = pulumi.StringPtr("")
	}
	return &tmp
}
func (ConnectionSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingProperties)(nil)).Elem()
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput {
	return i.ToConnectionSettingPropertiesOutputWithContext(context.Background())
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesOutputWithContext(ctx context.Context) ConnectionSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesOutput)
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return i.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesOutput).ToConnectionSettingPropertiesPtrOutputWithContext(ctx)
}

// ConnectionSettingPropertiesPtrInput is an input type that accepts ConnectionSettingPropertiesArgs, ConnectionSettingPropertiesPtr and ConnectionSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectionSettingPropertiesPtrInput` via:
//
//	        ConnectionSettingPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectionSettingPropertiesPtrInput interface {
	pulumi.Input

	ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput
	ToConnectionSettingPropertiesPtrOutputWithContext(context.Context) ConnectionSettingPropertiesPtrOutput
}

type connectionSettingPropertiesPtrType ConnectionSettingPropertiesArgs

func ConnectionSettingPropertiesPtr(v *ConnectionSettingPropertiesArgs) ConnectionSettingPropertiesPtrInput {
	return (*connectionSettingPropertiesPtrType)(v)
}

func (*connectionSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSettingProperties)(nil)).Elem()
}

func (i *connectionSettingPropertiesPtrType) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return i.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectionSettingPropertiesPtrType) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesPtrOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingProperties)(nil)).Elem()
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput {
	return o
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesOutputWithContext(ctx context.Context) ConnectionSettingPropertiesOutput {
	return o
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return o.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSettingProperties) *ConnectionSettingProperties {
		return &v
	}).(ConnectionSettingPropertiesPtrOutput)
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Id of the Connection Setting.
func (o ConnectionSettingPropertiesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Connection Setting.
func (o ConnectionSettingPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) Parameters() ConnectionSettingParameterArrayOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) []ConnectionSettingParameter { return v.Parameters }).(ConnectionSettingParameterArrayOutput)
}

// Provisioning state of the resource
func (o ConnectionSettingPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ServiceProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ServiceProviderId }).(pulumi.StringPtrOutput)
}

type ConnectionSettingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSettingProperties)(nil)).Elem()
}

func (o ConnectionSettingPropertiesPtrOutput) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return o
}

func (o ConnectionSettingPropertiesPtrOutput) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return o
}

func (o ConnectionSettingPropertiesPtrOutput) Elem() ConnectionSettingPropertiesOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) ConnectionSettingProperties {
		if v != nil {
			return *v
		}
		var ret ConnectionSettingProperties
		return ret
	}).(ConnectionSettingPropertiesOutput)
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Id of the Connection Setting.
func (o ConnectionSettingPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the Connection Setting.
func (o ConnectionSettingPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) Parameters() ConnectionSettingParameterArrayOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) []ConnectionSettingParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ConnectionSettingParameterArrayOutput)
}

// Provisioning state of the resource
func (o ConnectionSettingPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderDisplayName
	}).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderId
	}).(pulumi.StringPtrOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponse struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Id of the Connection Setting.
	Id *string `pulumi:"id"`
	// Name of the Connection Setting.
	Name *string `pulumi:"name"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameterResponse `pulumi:"parameters"`
	// Provisioning state of the resource
	ProvisioningState *string `pulumi:"provisioningState"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
	// Setting Id set by the service for the Connection Setting.
	SettingId string `pulumi:"settingId"`
}

// Defaults sets the appropriate defaults for ConnectionSettingPropertiesResponse
func (val *ConnectionSettingPropertiesResponse) Defaults() *ConnectionSettingPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Scopes == nil {
		scopes_ := ""
		tmp.Scopes = &scopes_
	}
	return &tmp
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingPropertiesResponse)(nil)).Elem()
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutput() ConnectionSettingPropertiesResponseOutput {
	return o
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutputWithContext(ctx context.Context) ConnectionSettingPropertiesResponseOutput {
	return o
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Id of the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Parameters() ConnectionSettingParameterResponseArrayOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) []ConnectionSettingParameterResponse { return v.Parameters }).(ConnectionSettingParameterResponseArrayOutput)
}

// Provisioning state of the resource
func (o ConnectionSettingPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderId }).(pulumi.StringPtrOutput)
}

// Setting Id set by the service for the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) string { return v.SettingId }).(pulumi.StringOutput)
}

// Direct Line channel definition
type DirectLineChannel struct {
	// The channel name
	// Expected value is 'DirectLineChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for DirectLineChannel
func (val *DirectLineChannel) Defaults() *DirectLineChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// DirectLineChannelInput is an input type that accepts DirectLineChannelArgs and DirectLineChannelOutput values.
// You can construct a concrete instance of `DirectLineChannelInput` via:
//
//	DirectLineChannelArgs{...}
type DirectLineChannelInput interface {
	pulumi.Input

	ToDirectLineChannelOutput() DirectLineChannelOutput
	ToDirectLineChannelOutputWithContext(context.Context) DirectLineChannelOutput
}

// Direct Line channel definition
type DirectLineChannelArgs struct {
	// The channel name
	// Expected value is 'DirectLineChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Direct Line channel resource
	Properties DirectLineChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for DirectLineChannelArgs
func (val *DirectLineChannelArgs) Defaults() *DirectLineChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}

	return &tmp
}
func (DirectLineChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannel)(nil)).Elem()
}

func (i DirectLineChannelArgs) ToDirectLineChannelOutput() DirectLineChannelOutput {
	return i.ToDirectLineChannelOutputWithContext(context.Background())
}

func (i DirectLineChannelArgs) ToDirectLineChannelOutputWithContext(ctx context.Context) DirectLineChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelOutput)
}

func (i DirectLineChannelArgs) ToDirectLineChannelPtrOutput() DirectLineChannelPtrOutput {
	return i.ToDirectLineChannelPtrOutputWithContext(context.Background())
}

func (i DirectLineChannelArgs) ToDirectLineChannelPtrOutputWithContext(ctx context.Context) DirectLineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelOutput).ToDirectLineChannelPtrOutputWithContext(ctx)
}

// DirectLineChannelPtrInput is an input type that accepts DirectLineChannelArgs, DirectLineChannelPtr and DirectLineChannelPtrOutput values.
// You can construct a concrete instance of `DirectLineChannelPtrInput` via:
//
//	        DirectLineChannelArgs{...}
//
//	or:
//
//	        nil
type DirectLineChannelPtrInput interface {
	pulumi.Input

	ToDirectLineChannelPtrOutput() DirectLineChannelPtrOutput
	ToDirectLineChannelPtrOutputWithContext(context.Context) DirectLineChannelPtrOutput
}

type directLineChannelPtrType DirectLineChannelArgs

func DirectLineChannelPtr(v *DirectLineChannelArgs) DirectLineChannelPtrInput {
	return (*directLineChannelPtrType)(v)
}

func (*directLineChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannel)(nil)).Elem()
}

func (i *directLineChannelPtrType) ToDirectLineChannelPtrOutput() DirectLineChannelPtrOutput {
	return i.ToDirectLineChannelPtrOutputWithContext(context.Background())
}

func (i *directLineChannelPtrType) ToDirectLineChannelPtrOutputWithContext(ctx context.Context) DirectLineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPtrOutput)
}

// Direct Line channel definition
type DirectLineChannelOutput struct{ *pulumi.OutputState }

func (DirectLineChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannel)(nil)).Elem()
}

func (o DirectLineChannelOutput) ToDirectLineChannelOutput() DirectLineChannelOutput {
	return o
}

func (o DirectLineChannelOutput) ToDirectLineChannelOutputWithContext(ctx context.Context) DirectLineChannelOutput {
	return o
}

func (o DirectLineChannelOutput) ToDirectLineChannelPtrOutput() DirectLineChannelPtrOutput {
	return o.ToDirectLineChannelPtrOutputWithContext(context.Background())
}

func (o DirectLineChannelOutput) ToDirectLineChannelPtrOutputWithContext(ctx context.Context) DirectLineChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectLineChannel) *DirectLineChannel {
		return &v
	}).(DirectLineChannelPtrOutput)
}

// The channel name
// Expected value is 'DirectLineChannel'.
func (o DirectLineChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o DirectLineChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Direct Line channel resource
func (o DirectLineChannelOutput) Properties() DirectLineChannelPropertiesPtrOutput {
	return o.ApplyT(func(v DirectLineChannel) *DirectLineChannelProperties { return v.Properties }).(DirectLineChannelPropertiesPtrOutput)
}

type DirectLineChannelPtrOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannel)(nil)).Elem()
}

func (o DirectLineChannelPtrOutput) ToDirectLineChannelPtrOutput() DirectLineChannelPtrOutput {
	return o
}

func (o DirectLineChannelPtrOutput) ToDirectLineChannelPtrOutputWithContext(ctx context.Context) DirectLineChannelPtrOutput {
	return o
}

func (o DirectLineChannelPtrOutput) Elem() DirectLineChannelOutput {
	return o.ApplyT(func(v *DirectLineChannel) DirectLineChannel {
		if v != nil {
			return *v
		}
		var ret DirectLineChannel
		return ret
	}).(DirectLineChannelOutput)
}

// The channel name
// Expected value is 'DirectLineChannel'.
func (o DirectLineChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o DirectLineChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Direct Line channel resource
func (o DirectLineChannelPtrOutput) Properties() DirectLineChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *DirectLineChannel) *DirectLineChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(DirectLineChannelPropertiesPtrOutput)
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelProperties struct {
	// Direct Line embed code of the resource
	DirectLineEmbedCode *string `pulumi:"directLineEmbedCode"`
	// The extensionKey1
	ExtensionKey1 *string `pulumi:"extensionKey1"`
	// The extensionKey2
	ExtensionKey2 *string `pulumi:"extensionKey2"`
	// The list of Direct Line sites
	Sites []DirectLineSite `pulumi:"sites"`
}

// Defaults sets the appropriate defaults for DirectLineChannelProperties
func (val *DirectLineChannelProperties) Defaults() *DirectLineChannelProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExtensionKey1 == nil {
		extensionKey1_ := ""
		tmp.ExtensionKey1 = &extensionKey1_
	}
	if tmp.ExtensionKey2 == nil {
		extensionKey2_ := ""
		tmp.ExtensionKey2 = &extensionKey2_
	}
	return &tmp
}

// DirectLineChannelPropertiesInput is an input type that accepts DirectLineChannelPropertiesArgs and DirectLineChannelPropertiesOutput values.
// You can construct a concrete instance of `DirectLineChannelPropertiesInput` via:
//
//	DirectLineChannelPropertiesArgs{...}
type DirectLineChannelPropertiesInput interface {
	pulumi.Input

	ToDirectLineChannelPropertiesOutput() DirectLineChannelPropertiesOutput
	ToDirectLineChannelPropertiesOutputWithContext(context.Context) DirectLineChannelPropertiesOutput
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesArgs struct {
	// Direct Line embed code of the resource
	DirectLineEmbedCode pulumi.StringPtrInput `pulumi:"directLineEmbedCode"`
	// The extensionKey1
	ExtensionKey1 pulumi.StringPtrInput `pulumi:"extensionKey1"`
	// The extensionKey2
	ExtensionKey2 pulumi.StringPtrInput `pulumi:"extensionKey2"`
	// The list of Direct Line sites
	Sites DirectLineSiteArrayInput `pulumi:"sites"`
}

// Defaults sets the appropriate defaults for DirectLineChannelPropertiesArgs
func (val *DirectLineChannelPropertiesArgs) Defaults() *DirectLineChannelPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExtensionKey1 == nil {
		tmp.ExtensionKey1 = pulumi.StringPtr("")
	}
	if tmp.ExtensionKey2 == nil {
		tmp.ExtensionKey2 = pulumi.StringPtr("")
	}
	return &tmp
}
func (DirectLineChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelProperties)(nil)).Elem()
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesOutput() DirectLineChannelPropertiesOutput {
	return i.ToDirectLineChannelPropertiesOutputWithContext(context.Background())
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesOutputWithContext(ctx context.Context) DirectLineChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPropertiesOutput)
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput {
	return i.ToDirectLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i DirectLineChannelPropertiesArgs) ToDirectLineChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPropertiesOutput).ToDirectLineChannelPropertiesPtrOutputWithContext(ctx)
}

// DirectLineChannelPropertiesPtrInput is an input type that accepts DirectLineChannelPropertiesArgs, DirectLineChannelPropertiesPtr and DirectLineChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `DirectLineChannelPropertiesPtrInput` via:
//
//	        DirectLineChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type DirectLineChannelPropertiesPtrInput interface {
	pulumi.Input

	ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput
	ToDirectLineChannelPropertiesPtrOutputWithContext(context.Context) DirectLineChannelPropertiesPtrOutput
}

type directLineChannelPropertiesPtrType DirectLineChannelPropertiesArgs

func DirectLineChannelPropertiesPtr(v *DirectLineChannelPropertiesArgs) DirectLineChannelPropertiesPtrInput {
	return (*directLineChannelPropertiesPtrType)(v)
}

func (*directLineChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannelProperties)(nil)).Elem()
}

func (i *directLineChannelPropertiesPtrType) ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput {
	return i.ToDirectLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *directLineChannelPropertiesPtrType) ToDirectLineChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineChannelPropertiesPtrOutput)
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelProperties)(nil)).Elem()
}

func (o DirectLineChannelPropertiesOutput) ToDirectLineChannelPropertiesOutput() DirectLineChannelPropertiesOutput {
	return o
}

func (o DirectLineChannelPropertiesOutput) ToDirectLineChannelPropertiesOutputWithContext(ctx context.Context) DirectLineChannelPropertiesOutput {
	return o
}

func (o DirectLineChannelPropertiesOutput) ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput {
	return o.ToDirectLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o DirectLineChannelPropertiesOutput) ToDirectLineChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectLineChannelProperties) *DirectLineChannelProperties {
		return &v
	}).(DirectLineChannelPropertiesPtrOutput)
}

// Direct Line embed code of the resource
func (o DirectLineChannelPropertiesOutput) DirectLineEmbedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelProperties) *string { return v.DirectLineEmbedCode }).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o DirectLineChannelPropertiesOutput) ExtensionKey1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelProperties) *string { return v.ExtensionKey1 }).(pulumi.StringPtrOutput)
}

// The extensionKey2
func (o DirectLineChannelPropertiesOutput) ExtensionKey2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelProperties) *string { return v.ExtensionKey2 }).(pulumi.StringPtrOutput)
}

// The list of Direct Line sites
func (o DirectLineChannelPropertiesOutput) Sites() DirectLineSiteArrayOutput {
	return o.ApplyT(func(v DirectLineChannelProperties) []DirectLineSite { return v.Sites }).(DirectLineSiteArrayOutput)
}

type DirectLineChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannelProperties)(nil)).Elem()
}

func (o DirectLineChannelPropertiesPtrOutput) ToDirectLineChannelPropertiesPtrOutput() DirectLineChannelPropertiesPtrOutput {
	return o
}

func (o DirectLineChannelPropertiesPtrOutput) ToDirectLineChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesPtrOutput {
	return o
}

func (o DirectLineChannelPropertiesPtrOutput) Elem() DirectLineChannelPropertiesOutput {
	return o.ApplyT(func(v *DirectLineChannelProperties) DirectLineChannelProperties {
		if v != nil {
			return *v
		}
		var ret DirectLineChannelProperties
		return ret
	}).(DirectLineChannelPropertiesOutput)
}

// Direct Line embed code of the resource
func (o DirectLineChannelPropertiesPtrOutput) DirectLineEmbedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.DirectLineEmbedCode
	}).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o DirectLineChannelPropertiesPtrOutput) ExtensionKey1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionKey1
	}).(pulumi.StringPtrOutput)
}

// The extensionKey2
func (o DirectLineChannelPropertiesPtrOutput) ExtensionKey2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionKey2
	}).(pulumi.StringPtrOutput)
}

// The list of Direct Line sites
func (o DirectLineChannelPropertiesPtrOutput) Sites() DirectLineSiteArrayOutput {
	return o.ApplyT(func(v *DirectLineChannelProperties) []DirectLineSite {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(DirectLineSiteArrayOutput)
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesResponse struct {
	// Direct Line embed code of the resource
	DirectLineEmbedCode *string `pulumi:"directLineEmbedCode"`
	// The extensionKey1
	ExtensionKey1 *string `pulumi:"extensionKey1"`
	// The extensionKey2
	ExtensionKey2 *string `pulumi:"extensionKey2"`
	// The list of Direct Line sites
	Sites []DirectLineSiteResponse `pulumi:"sites"`
}

// Defaults sets the appropriate defaults for DirectLineChannelPropertiesResponse
func (val *DirectLineChannelPropertiesResponse) Defaults() *DirectLineChannelPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExtensionKey1 == nil {
		extensionKey1_ := ""
		tmp.ExtensionKey1 = &extensionKey1_
	}
	if tmp.ExtensionKey2 == nil {
		extensionKey2_ := ""
		tmp.ExtensionKey2 = &extensionKey2_
	}
	return &tmp
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelPropertiesResponse)(nil)).Elem()
}

func (o DirectLineChannelPropertiesResponseOutput) ToDirectLineChannelPropertiesResponseOutput() DirectLineChannelPropertiesResponseOutput {
	return o
}

func (o DirectLineChannelPropertiesResponseOutput) ToDirectLineChannelPropertiesResponseOutputWithContext(ctx context.Context) DirectLineChannelPropertiesResponseOutput {
	return o
}

// Direct Line embed code of the resource
func (o DirectLineChannelPropertiesResponseOutput) DirectLineEmbedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelPropertiesResponse) *string { return v.DirectLineEmbedCode }).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o DirectLineChannelPropertiesResponseOutput) ExtensionKey1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelPropertiesResponse) *string { return v.ExtensionKey1 }).(pulumi.StringPtrOutput)
}

// The extensionKey2
func (o DirectLineChannelPropertiesResponseOutput) ExtensionKey2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelPropertiesResponse) *string { return v.ExtensionKey2 }).(pulumi.StringPtrOutput)
}

// The list of Direct Line sites
func (o DirectLineChannelPropertiesResponseOutput) Sites() DirectLineSiteResponseArrayOutput {
	return o.ApplyT(func(v DirectLineChannelPropertiesResponse) []DirectLineSiteResponse { return v.Sites }).(DirectLineSiteResponseArrayOutput)
}

type DirectLineChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DirectLineChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannelPropertiesResponse)(nil)).Elem()
}

func (o DirectLineChannelPropertiesResponsePtrOutput) ToDirectLineChannelPropertiesResponsePtrOutput() DirectLineChannelPropertiesResponsePtrOutput {
	return o
}

func (o DirectLineChannelPropertiesResponsePtrOutput) ToDirectLineChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) DirectLineChannelPropertiesResponsePtrOutput {
	return o
}

func (o DirectLineChannelPropertiesResponsePtrOutput) Elem() DirectLineChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) DirectLineChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DirectLineChannelPropertiesResponse
		return ret
	}).(DirectLineChannelPropertiesResponseOutput)
}

// Direct Line embed code of the resource
func (o DirectLineChannelPropertiesResponsePtrOutput) DirectLineEmbedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DirectLineEmbedCode
	}).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o DirectLineChannelPropertiesResponsePtrOutput) ExtensionKey1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionKey1
	}).(pulumi.StringPtrOutput)
}

// The extensionKey2
func (o DirectLineChannelPropertiesResponsePtrOutput) ExtensionKey2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionKey2
	}).(pulumi.StringPtrOutput)
}

// The list of Direct Line sites
func (o DirectLineChannelPropertiesResponsePtrOutput) Sites() DirectLineSiteResponseArrayOutput {
	return o.ApplyT(func(v *DirectLineChannelPropertiesResponse) []DirectLineSiteResponse {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(DirectLineSiteResponseArrayOutput)
}

// Direct Line channel definition
type DirectLineChannelResponse struct {
	// The channel name
	// Expected value is 'DirectLineChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for DirectLineChannelResponse
func (val *DirectLineChannelResponse) Defaults() *DirectLineChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// Direct Line channel definition
type DirectLineChannelResponseOutput struct{ *pulumi.OutputState }

func (DirectLineChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineChannelResponse)(nil)).Elem()
}

func (o DirectLineChannelResponseOutput) ToDirectLineChannelResponseOutput() DirectLineChannelResponseOutput {
	return o
}

func (o DirectLineChannelResponseOutput) ToDirectLineChannelResponseOutputWithContext(ctx context.Context) DirectLineChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'DirectLineChannel'.
func (o DirectLineChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o DirectLineChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Direct Line channel resource
func (o DirectLineChannelResponseOutput) Properties() DirectLineChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) *DirectLineChannelPropertiesResponse { return v.Properties }).(DirectLineChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o DirectLineChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type DirectLineChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (DirectLineChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineChannelResponse)(nil)).Elem()
}

func (o DirectLineChannelResponsePtrOutput) ToDirectLineChannelResponsePtrOutput() DirectLineChannelResponsePtrOutput {
	return o
}

func (o DirectLineChannelResponsePtrOutput) ToDirectLineChannelResponsePtrOutputWithContext(ctx context.Context) DirectLineChannelResponsePtrOutput {
	return o
}

func (o DirectLineChannelResponsePtrOutput) Elem() DirectLineChannelResponseOutput {
	return o.ApplyT(func(v *DirectLineChannelResponse) DirectLineChannelResponse {
		if v != nil {
			return *v
		}
		var ret DirectLineChannelResponse
		return ret
	}).(DirectLineChannelResponseOutput)
}

// The channel name
// Expected value is 'DirectLineChannel'.
func (o DirectLineChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o DirectLineChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Direct Line channel resource
func (o DirectLineChannelResponsePtrOutput) Properties() DirectLineChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *DirectLineChannelResponse) *DirectLineChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(DirectLineChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o DirectLineChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A site for the Direct Line channel
type DirectLineSite struct {
	// DirectLine application id
	AppId *string `pulumi:"appId"`
	// Entity Tag
	ETag *string `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled *bool `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled *bool `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled *bool `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled *bool `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled *bool `pulumi:"isSecureSiteEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled *bool `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled *bool `pulumi:"isWebchatPreviewEnabled"`
	// Site name
	SiteName string `pulumi:"siteName"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins []string `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for DirectLineSite
func (val *DirectLineSite) Defaults() *DirectLineSite {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		isWebChatSpeechEnabled_ := false
		tmp.IsWebChatSpeechEnabled = &isWebChatSpeechEnabled_
	}
	if tmp.IsWebchatPreviewEnabled == nil {
		isWebchatPreviewEnabled_ := false
		tmp.IsWebchatPreviewEnabled = &isWebchatPreviewEnabled_
	}
	return &tmp
}

// DirectLineSiteInput is an input type that accepts DirectLineSiteArgs and DirectLineSiteOutput values.
// You can construct a concrete instance of `DirectLineSiteInput` via:
//
//	DirectLineSiteArgs{...}
type DirectLineSiteInput interface {
	pulumi.Input

	ToDirectLineSiteOutput() DirectLineSiteOutput
	ToDirectLineSiteOutputWithContext(context.Context) DirectLineSiteOutput
}

// A site for the Direct Line channel
type DirectLineSiteArgs struct {
	// DirectLine application id
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Entity Tag
	ETag pulumi.StringPtrInput `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled pulumi.BoolPtrInput `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled pulumi.BoolPtrInput `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled pulumi.BoolPtrInput `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled pulumi.BoolPtrInput `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled pulumi.BoolPtrInput `pulumi:"isSecureSiteEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled pulumi.BoolInput `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled pulumi.BoolInput `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled pulumi.BoolPtrInput `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled pulumi.BoolPtrInput `pulumi:"isWebchatPreviewEnabled"`
	// Site name
	SiteName pulumi.StringInput `pulumi:"siteName"`
	// Tenant Id
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins pulumi.StringArrayInput `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for DirectLineSiteArgs
func (val *DirectLineSiteArgs) Defaults() *DirectLineSiteArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		tmp.IsWebChatSpeechEnabled = pulumi.BoolPtr(false)
	}
	if tmp.IsWebchatPreviewEnabled == nil {
		tmp.IsWebchatPreviewEnabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (DirectLineSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSite)(nil)).Elem()
}

func (i DirectLineSiteArgs) ToDirectLineSiteOutput() DirectLineSiteOutput {
	return i.ToDirectLineSiteOutputWithContext(context.Background())
}

func (i DirectLineSiteArgs) ToDirectLineSiteOutputWithContext(ctx context.Context) DirectLineSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSiteOutput)
}

// DirectLineSiteArrayInput is an input type that accepts DirectLineSiteArray and DirectLineSiteArrayOutput values.
// You can construct a concrete instance of `DirectLineSiteArrayInput` via:
//
//	DirectLineSiteArray{ DirectLineSiteArgs{...} }
type DirectLineSiteArrayInput interface {
	pulumi.Input

	ToDirectLineSiteArrayOutput() DirectLineSiteArrayOutput
	ToDirectLineSiteArrayOutputWithContext(context.Context) DirectLineSiteArrayOutput
}

type DirectLineSiteArray []DirectLineSiteInput

func (DirectLineSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLineSite)(nil)).Elem()
}

func (i DirectLineSiteArray) ToDirectLineSiteArrayOutput() DirectLineSiteArrayOutput {
	return i.ToDirectLineSiteArrayOutputWithContext(context.Background())
}

func (i DirectLineSiteArray) ToDirectLineSiteArrayOutputWithContext(ctx context.Context) DirectLineSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSiteArrayOutput)
}

// A site for the Direct Line channel
type DirectLineSiteOutput struct{ *pulumi.OutputState }

func (DirectLineSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSite)(nil)).Elem()
}

func (o DirectLineSiteOutput) ToDirectLineSiteOutput() DirectLineSiteOutput {
	return o
}

func (o DirectLineSiteOutput) ToDirectLineSiteOutputWithContext(ctx context.Context) DirectLineSiteOutput {
	return o
}

// DirectLine application id
func (o DirectLineSiteOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Entity Tag
func (o DirectLineSiteOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Whether this site is enabled for block user upload.
func (o DirectLineSiteOutput) IsBlockUserUploadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsBlockUserUploadEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is disabled detailed logging for
func (o DirectLineSiteOutput) IsDetailedLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsDetailedLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for DirectLine channel
func (o DirectLineSiteOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSite) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this site is EndpointParameters enabled for channel
func (o DirectLineSiteOutput) IsEndpointParametersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsEndpointParametersEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this no-storage site is disabled detailed logging for
func (o DirectLineSiteOutput) IsNoStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsNoStorageEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for authentication with Bot Framework.
func (o DirectLineSiteOutput) IsSecureSiteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsSecureSiteEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol.
func (o DirectLineSiteOutput) IsV1Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSite) bool { return v.IsV1Enabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V3 protocol.
func (o DirectLineSiteOutput) IsV3Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSite) bool { return v.IsV3Enabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Webchat Speech
func (o DirectLineSiteOutput) IsWebChatSpeechEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsWebChatSpeechEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for preview versions of Webchat
func (o DirectLineSiteOutput) IsWebchatPreviewEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *bool { return v.IsWebchatPreviewEnabled }).(pulumi.BoolPtrOutput)
}

// Site name
func (o DirectLineSiteOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSite) string { return v.SiteName }).(pulumi.StringOutput)
}

// Tenant Id
func (o DirectLineSiteOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSite) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
func (o DirectLineSiteOutput) TrustedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectLineSite) []string { return v.TrustedOrigins }).(pulumi.StringArrayOutput)
}

type DirectLineSiteArrayOutput struct{ *pulumi.OutputState }

func (DirectLineSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLineSite)(nil)).Elem()
}

func (o DirectLineSiteArrayOutput) ToDirectLineSiteArrayOutput() DirectLineSiteArrayOutput {
	return o
}

func (o DirectLineSiteArrayOutput) ToDirectLineSiteArrayOutputWithContext(ctx context.Context) DirectLineSiteArrayOutput {
	return o
}

func (o DirectLineSiteArrayOutput) Index(i pulumi.IntInput) DirectLineSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectLineSite {
		return vs[0].([]DirectLineSite)[vs[1].(int)]
	}).(DirectLineSiteOutput)
}

// A site for the Direct Line channel
type DirectLineSiteResponse struct {
	// DirectLine application id
	AppId *string `pulumi:"appId"`
	// Entity Tag
	ETag *string `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled *bool `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled *bool `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled *bool `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled *bool `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled *bool `pulumi:"isSecureSiteEnabled"`
	// Whether this site is token enabled for channel
	IsTokenEnabled bool `pulumi:"isTokenEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled *bool `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled *bool `pulumi:"isWebchatPreviewEnabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins []string `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for DirectLineSiteResponse
func (val *DirectLineSiteResponse) Defaults() *DirectLineSiteResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		isWebChatSpeechEnabled_ := false
		tmp.IsWebChatSpeechEnabled = &isWebChatSpeechEnabled_
	}
	if tmp.IsWebchatPreviewEnabled == nil {
		isWebchatPreviewEnabled_ := false
		tmp.IsWebchatPreviewEnabled = &isWebchatPreviewEnabled_
	}
	return &tmp
}

// A site for the Direct Line channel
type DirectLineSiteResponseOutput struct{ *pulumi.OutputState }

func (DirectLineSiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSiteResponse)(nil)).Elem()
}

func (o DirectLineSiteResponseOutput) ToDirectLineSiteResponseOutput() DirectLineSiteResponseOutput {
	return o
}

func (o DirectLineSiteResponseOutput) ToDirectLineSiteResponseOutputWithContext(ctx context.Context) DirectLineSiteResponseOutput {
	return o
}

// DirectLine application id
func (o DirectLineSiteResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Entity Tag
func (o DirectLineSiteResponseOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Whether this site is enabled for block user upload.
func (o DirectLineSiteResponseOutput) IsBlockUserUploadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsBlockUserUploadEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is disabled detailed logging for
func (o DirectLineSiteResponseOutput) IsDetailedLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsDetailedLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for DirectLine channel
func (o DirectLineSiteResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this site is EndpointParameters enabled for channel
func (o DirectLineSiteResponseOutput) IsEndpointParametersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsEndpointParametersEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this no-storage site is disabled detailed logging for
func (o DirectLineSiteResponseOutput) IsNoStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsNoStorageEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for authentication with Bot Framework.
func (o DirectLineSiteResponseOutput) IsSecureSiteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsSecureSiteEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is token enabled for channel
func (o DirectLineSiteResponseOutput) IsTokenEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsTokenEnabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol.
func (o DirectLineSiteResponseOutput) IsV1Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsV1Enabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V3 protocol.
func (o DirectLineSiteResponseOutput) IsV3Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) bool { return v.IsV3Enabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Webchat Speech
func (o DirectLineSiteResponseOutput) IsWebChatSpeechEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsWebChatSpeechEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for preview versions of Webchat
func (o DirectLineSiteResponseOutput) IsWebchatPreviewEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *bool { return v.IsWebchatPreviewEnabled }).(pulumi.BoolPtrOutput)
}

// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o DirectLineSiteResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o DirectLineSiteResponseOutput) Key2() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.Key2 }).(pulumi.StringOutput)
}

// Site Id
func (o DirectLineSiteResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

// Site name
func (o DirectLineSiteResponseOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) string { return v.SiteName }).(pulumi.StringOutput)
}

// Tenant Id
func (o DirectLineSiteResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
func (o DirectLineSiteResponseOutput) TrustedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectLineSiteResponse) []string { return v.TrustedOrigins }).(pulumi.StringArrayOutput)
}

type DirectLineSiteResponseArrayOutput struct{ *pulumi.OutputState }

func (DirectLineSiteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLineSiteResponse)(nil)).Elem()
}

func (o DirectLineSiteResponseArrayOutput) ToDirectLineSiteResponseArrayOutput() DirectLineSiteResponseArrayOutput {
	return o
}

func (o DirectLineSiteResponseArrayOutput) ToDirectLineSiteResponseArrayOutputWithContext(ctx context.Context) DirectLineSiteResponseArrayOutput {
	return o
}

func (o DirectLineSiteResponseArrayOutput) Index(i pulumi.IntInput) DirectLineSiteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectLineSiteResponse {
		return vs[0].([]DirectLineSiteResponse)[vs[1].(int)]
	}).(DirectLineSiteResponseOutput)
}

// DirectLine Speech channel definition
type DirectLineSpeechChannel struct {
	// The channel name
	// Expected value is 'DirectLineSpeechChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to DirectLine Speech channel resource
	Properties *DirectLineSpeechChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for DirectLineSpeechChannel
func (val *DirectLineSpeechChannel) Defaults() *DirectLineSpeechChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// DirectLineSpeechChannelInput is an input type that accepts DirectLineSpeechChannelArgs and DirectLineSpeechChannelOutput values.
// You can construct a concrete instance of `DirectLineSpeechChannelInput` via:
//
//	DirectLineSpeechChannelArgs{...}
type DirectLineSpeechChannelInput interface {
	pulumi.Input

	ToDirectLineSpeechChannelOutput() DirectLineSpeechChannelOutput
	ToDirectLineSpeechChannelOutputWithContext(context.Context) DirectLineSpeechChannelOutput
}

// DirectLine Speech channel definition
type DirectLineSpeechChannelArgs struct {
	// The channel name
	// Expected value is 'DirectLineSpeechChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to DirectLine Speech channel resource
	Properties DirectLineSpeechChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for DirectLineSpeechChannelArgs
func (val *DirectLineSpeechChannelArgs) Defaults() *DirectLineSpeechChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (DirectLineSpeechChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSpeechChannel)(nil)).Elem()
}

func (i DirectLineSpeechChannelArgs) ToDirectLineSpeechChannelOutput() DirectLineSpeechChannelOutput {
	return i.ToDirectLineSpeechChannelOutputWithContext(context.Background())
}

func (i DirectLineSpeechChannelArgs) ToDirectLineSpeechChannelOutputWithContext(ctx context.Context) DirectLineSpeechChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSpeechChannelOutput)
}

func (i DirectLineSpeechChannelArgs) ToDirectLineSpeechChannelPtrOutput() DirectLineSpeechChannelPtrOutput {
	return i.ToDirectLineSpeechChannelPtrOutputWithContext(context.Background())
}

func (i DirectLineSpeechChannelArgs) ToDirectLineSpeechChannelPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSpeechChannelOutput).ToDirectLineSpeechChannelPtrOutputWithContext(ctx)
}

// DirectLineSpeechChannelPtrInput is an input type that accepts DirectLineSpeechChannelArgs, DirectLineSpeechChannelPtr and DirectLineSpeechChannelPtrOutput values.
// You can construct a concrete instance of `DirectLineSpeechChannelPtrInput` via:
//
//	        DirectLineSpeechChannelArgs{...}
//
//	or:
//
//	        nil
type DirectLineSpeechChannelPtrInput interface {
	pulumi.Input

	ToDirectLineSpeechChannelPtrOutput() DirectLineSpeechChannelPtrOutput
	ToDirectLineSpeechChannelPtrOutputWithContext(context.Context) DirectLineSpeechChannelPtrOutput
}

type directLineSpeechChannelPtrType DirectLineSpeechChannelArgs

func DirectLineSpeechChannelPtr(v *DirectLineSpeechChannelArgs) DirectLineSpeechChannelPtrInput {
	return (*directLineSpeechChannelPtrType)(v)
}

func (*directLineSpeechChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineSpeechChannel)(nil)).Elem()
}

func (i *directLineSpeechChannelPtrType) ToDirectLineSpeechChannelPtrOutput() DirectLineSpeechChannelPtrOutput {
	return i.ToDirectLineSpeechChannelPtrOutputWithContext(context.Background())
}

func (i *directLineSpeechChannelPtrType) ToDirectLineSpeechChannelPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSpeechChannelPtrOutput)
}

// DirectLine Speech channel definition
type DirectLineSpeechChannelOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSpeechChannel)(nil)).Elem()
}

func (o DirectLineSpeechChannelOutput) ToDirectLineSpeechChannelOutput() DirectLineSpeechChannelOutput {
	return o
}

func (o DirectLineSpeechChannelOutput) ToDirectLineSpeechChannelOutputWithContext(ctx context.Context) DirectLineSpeechChannelOutput {
	return o
}

func (o DirectLineSpeechChannelOutput) ToDirectLineSpeechChannelPtrOutput() DirectLineSpeechChannelPtrOutput {
	return o.ToDirectLineSpeechChannelPtrOutputWithContext(context.Background())
}

func (o DirectLineSpeechChannelOutput) ToDirectLineSpeechChannelPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectLineSpeechChannel) *DirectLineSpeechChannel {
		return &v
	}).(DirectLineSpeechChannelPtrOutput)
}

// The channel name
// Expected value is 'DirectLineSpeechChannel'.
func (o DirectLineSpeechChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSpeechChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o DirectLineSpeechChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineSpeechChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to DirectLine Speech channel resource
func (o DirectLineSpeechChannelOutput) Properties() DirectLineSpeechChannelPropertiesPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannel) *DirectLineSpeechChannelProperties { return v.Properties }).(DirectLineSpeechChannelPropertiesPtrOutput)
}

type DirectLineSpeechChannelPtrOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineSpeechChannel)(nil)).Elem()
}

func (o DirectLineSpeechChannelPtrOutput) ToDirectLineSpeechChannelPtrOutput() DirectLineSpeechChannelPtrOutput {
	return o
}

func (o DirectLineSpeechChannelPtrOutput) ToDirectLineSpeechChannelPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPtrOutput {
	return o
}

func (o DirectLineSpeechChannelPtrOutput) Elem() DirectLineSpeechChannelOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannel) DirectLineSpeechChannel {
		if v != nil {
			return *v
		}
		var ret DirectLineSpeechChannel
		return ret
	}).(DirectLineSpeechChannelOutput)
}

// The channel name
// Expected value is 'DirectLineSpeechChannel'.
func (o DirectLineSpeechChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o DirectLineSpeechChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineSpeechChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to DirectLine Speech channel resource
func (o DirectLineSpeechChannelPtrOutput) Properties() DirectLineSpeechChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannel) *DirectLineSpeechChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(DirectLineSpeechChannelPropertiesPtrOutput)
}

// The parameters to provide for the DirectLine Speech channel.
type DirectLineSpeechChannelProperties struct {
	// The cognitive service region with this channel registration.
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The cognitive service id with this channel registration.
	CognitiveServiceResourceId *string `pulumi:"cognitiveServiceResourceId"`
	// The cognitive service subscription key to use with this channel registration.
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// Custom voice deployment id (optional).
	CustomSpeechModelId *string `pulumi:"customSpeechModelId"`
	// Custom speech model id (optional).
	CustomVoiceDeploymentId *string `pulumi:"customVoiceDeploymentId"`
	// Make this a default bot for chosen cognitive service account.
	IsDefaultBotForCogSvcAccount *bool `pulumi:"isDefaultBotForCogSvcAccount"`
	// Whether this channel is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// DirectLineSpeechChannelPropertiesInput is an input type that accepts DirectLineSpeechChannelPropertiesArgs and DirectLineSpeechChannelPropertiesOutput values.
// You can construct a concrete instance of `DirectLineSpeechChannelPropertiesInput` via:
//
//	DirectLineSpeechChannelPropertiesArgs{...}
type DirectLineSpeechChannelPropertiesInput interface {
	pulumi.Input

	ToDirectLineSpeechChannelPropertiesOutput() DirectLineSpeechChannelPropertiesOutput
	ToDirectLineSpeechChannelPropertiesOutputWithContext(context.Context) DirectLineSpeechChannelPropertiesOutput
}

// The parameters to provide for the DirectLine Speech channel.
type DirectLineSpeechChannelPropertiesArgs struct {
	// The cognitive service region with this channel registration.
	CognitiveServiceRegion pulumi.StringPtrInput `pulumi:"cognitiveServiceRegion"`
	// The cognitive service id with this channel registration.
	CognitiveServiceResourceId pulumi.StringPtrInput `pulumi:"cognitiveServiceResourceId"`
	// The cognitive service subscription key to use with this channel registration.
	CognitiveServiceSubscriptionKey pulumi.StringPtrInput `pulumi:"cognitiveServiceSubscriptionKey"`
	// Custom voice deployment id (optional).
	CustomSpeechModelId pulumi.StringPtrInput `pulumi:"customSpeechModelId"`
	// Custom speech model id (optional).
	CustomVoiceDeploymentId pulumi.StringPtrInput `pulumi:"customVoiceDeploymentId"`
	// Make this a default bot for chosen cognitive service account.
	IsDefaultBotForCogSvcAccount pulumi.BoolPtrInput `pulumi:"isDefaultBotForCogSvcAccount"`
	// Whether this channel is enabled or not.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (DirectLineSpeechChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSpeechChannelProperties)(nil)).Elem()
}

func (i DirectLineSpeechChannelPropertiesArgs) ToDirectLineSpeechChannelPropertiesOutput() DirectLineSpeechChannelPropertiesOutput {
	return i.ToDirectLineSpeechChannelPropertiesOutputWithContext(context.Background())
}

func (i DirectLineSpeechChannelPropertiesArgs) ToDirectLineSpeechChannelPropertiesOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSpeechChannelPropertiesOutput)
}

func (i DirectLineSpeechChannelPropertiesArgs) ToDirectLineSpeechChannelPropertiesPtrOutput() DirectLineSpeechChannelPropertiesPtrOutput {
	return i.ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i DirectLineSpeechChannelPropertiesArgs) ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSpeechChannelPropertiesOutput).ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(ctx)
}

// DirectLineSpeechChannelPropertiesPtrInput is an input type that accepts DirectLineSpeechChannelPropertiesArgs, DirectLineSpeechChannelPropertiesPtr and DirectLineSpeechChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `DirectLineSpeechChannelPropertiesPtrInput` via:
//
//	        DirectLineSpeechChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type DirectLineSpeechChannelPropertiesPtrInput interface {
	pulumi.Input

	ToDirectLineSpeechChannelPropertiesPtrOutput() DirectLineSpeechChannelPropertiesPtrOutput
	ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(context.Context) DirectLineSpeechChannelPropertiesPtrOutput
}

type directLineSpeechChannelPropertiesPtrType DirectLineSpeechChannelPropertiesArgs

func DirectLineSpeechChannelPropertiesPtr(v *DirectLineSpeechChannelPropertiesArgs) DirectLineSpeechChannelPropertiesPtrInput {
	return (*directLineSpeechChannelPropertiesPtrType)(v)
}

func (*directLineSpeechChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineSpeechChannelProperties)(nil)).Elem()
}

func (i *directLineSpeechChannelPropertiesPtrType) ToDirectLineSpeechChannelPropertiesPtrOutput() DirectLineSpeechChannelPropertiesPtrOutput {
	return i.ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *directLineSpeechChannelPropertiesPtrType) ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLineSpeechChannelPropertiesPtrOutput)
}

// The parameters to provide for the DirectLine Speech channel.
type DirectLineSpeechChannelPropertiesOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSpeechChannelProperties)(nil)).Elem()
}

func (o DirectLineSpeechChannelPropertiesOutput) ToDirectLineSpeechChannelPropertiesOutput() DirectLineSpeechChannelPropertiesOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesOutput) ToDirectLineSpeechChannelPropertiesOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesOutput) ToDirectLineSpeechChannelPropertiesPtrOutput() DirectLineSpeechChannelPropertiesPtrOutput {
	return o.ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o DirectLineSpeechChannelPropertiesOutput) ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectLineSpeechChannelProperties) *DirectLineSpeechChannelProperties {
		return &v
	}).(DirectLineSpeechChannelPropertiesPtrOutput)
}

// The cognitive service region with this channel registration.
func (o DirectLineSpeechChannelPropertiesOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The cognitive service id with this channel registration.
func (o DirectLineSpeechChannelPropertiesOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *string { return v.CognitiveServiceResourceId }).(pulumi.StringPtrOutput)
}

// The cognitive service subscription key to use with this channel registration.
func (o DirectLineSpeechChannelPropertiesOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// Custom voice deployment id (optional).
func (o DirectLineSpeechChannelPropertiesOutput) CustomSpeechModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *string { return v.CustomSpeechModelId }).(pulumi.StringPtrOutput)
}

// Custom speech model id (optional).
func (o DirectLineSpeechChannelPropertiesOutput) CustomVoiceDeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *string { return v.CustomVoiceDeploymentId }).(pulumi.StringPtrOutput)
}

// Make this a default bot for chosen cognitive service account.
func (o DirectLineSpeechChannelPropertiesOutput) IsDefaultBotForCogSvcAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *bool { return v.IsDefaultBotForCogSvcAccount }).(pulumi.BoolPtrOutput)
}

// Whether this channel is enabled or not.
func (o DirectLineSpeechChannelPropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type DirectLineSpeechChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineSpeechChannelProperties)(nil)).Elem()
}

func (o DirectLineSpeechChannelPropertiesPtrOutput) ToDirectLineSpeechChannelPropertiesPtrOutput() DirectLineSpeechChannelPropertiesPtrOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesPtrOutput) ToDirectLineSpeechChannelPropertiesPtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesPtrOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesPtrOutput) Elem() DirectLineSpeechChannelPropertiesOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) DirectLineSpeechChannelProperties {
		if v != nil {
			return *v
		}
		var ret DirectLineSpeechChannelProperties
		return ret
	}).(DirectLineSpeechChannelPropertiesOutput)
}

// The cognitive service region with this channel registration.
func (o DirectLineSpeechChannelPropertiesPtrOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceRegion
	}).(pulumi.StringPtrOutput)
}

// The cognitive service id with this channel registration.
func (o DirectLineSpeechChannelPropertiesPtrOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// The cognitive service subscription key to use with this channel registration.
func (o DirectLineSpeechChannelPropertiesPtrOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceSubscriptionKey
	}).(pulumi.StringPtrOutput)
}

// Custom voice deployment id (optional).
func (o DirectLineSpeechChannelPropertiesPtrOutput) CustomSpeechModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomSpeechModelId
	}).(pulumi.StringPtrOutput)
}

// Custom speech model id (optional).
func (o DirectLineSpeechChannelPropertiesPtrOutput) CustomVoiceDeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomVoiceDeploymentId
	}).(pulumi.StringPtrOutput)
}

// Make this a default bot for chosen cognitive service account.
func (o DirectLineSpeechChannelPropertiesPtrOutput) IsDefaultBotForCogSvcAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsDefaultBotForCogSvcAccount
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is enabled or not.
func (o DirectLineSpeechChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The parameters to provide for the DirectLine Speech channel.
type DirectLineSpeechChannelPropertiesResponse struct {
	// The cognitive service region with this channel registration.
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The cognitive service id with this channel registration.
	CognitiveServiceResourceId *string `pulumi:"cognitiveServiceResourceId"`
	// The cognitive service subscription key to use with this channel registration.
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// Custom voice deployment id (optional).
	CustomSpeechModelId *string `pulumi:"customSpeechModelId"`
	// Custom speech model id (optional).
	CustomVoiceDeploymentId *string `pulumi:"customVoiceDeploymentId"`
	// Make this a default bot for chosen cognitive service account.
	IsDefaultBotForCogSvcAccount *bool `pulumi:"isDefaultBotForCogSvcAccount"`
	// Whether this channel is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// The parameters to provide for the DirectLine Speech channel.
type DirectLineSpeechChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSpeechChannelPropertiesResponse)(nil)).Elem()
}

func (o DirectLineSpeechChannelPropertiesResponseOutput) ToDirectLineSpeechChannelPropertiesResponseOutput() DirectLineSpeechChannelPropertiesResponseOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesResponseOutput) ToDirectLineSpeechChannelPropertiesResponseOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesResponseOutput {
	return o
}

// The cognitive service region with this channel registration.
func (o DirectLineSpeechChannelPropertiesResponseOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The cognitive service id with this channel registration.
func (o DirectLineSpeechChannelPropertiesResponseOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *string { return v.CognitiveServiceResourceId }).(pulumi.StringPtrOutput)
}

// The cognitive service subscription key to use with this channel registration.
func (o DirectLineSpeechChannelPropertiesResponseOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// Custom voice deployment id (optional).
func (o DirectLineSpeechChannelPropertiesResponseOutput) CustomSpeechModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *string { return v.CustomSpeechModelId }).(pulumi.StringPtrOutput)
}

// Custom speech model id (optional).
func (o DirectLineSpeechChannelPropertiesResponseOutput) CustomVoiceDeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *string { return v.CustomVoiceDeploymentId }).(pulumi.StringPtrOutput)
}

// Make this a default bot for chosen cognitive service account.
func (o DirectLineSpeechChannelPropertiesResponseOutput) IsDefaultBotForCogSvcAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *bool { return v.IsDefaultBotForCogSvcAccount }).(pulumi.BoolPtrOutput)
}

// Whether this channel is enabled or not.
func (o DirectLineSpeechChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelPropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type DirectLineSpeechChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineSpeechChannelPropertiesResponse)(nil)).Elem()
}

func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) ToDirectLineSpeechChannelPropertiesResponsePtrOutput() DirectLineSpeechChannelPropertiesResponsePtrOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) ToDirectLineSpeechChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelPropertiesResponsePtrOutput {
	return o
}

func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) Elem() DirectLineSpeechChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) DirectLineSpeechChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DirectLineSpeechChannelPropertiesResponse
		return ret
	}).(DirectLineSpeechChannelPropertiesResponseOutput)
}

// The cognitive service region with this channel registration.
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceRegion
	}).(pulumi.StringPtrOutput)
}

// The cognitive service id with this channel registration.
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// The cognitive service subscription key to use with this channel registration.
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceSubscriptionKey
	}).(pulumi.StringPtrOutput)
}

// Custom voice deployment id (optional).
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) CustomSpeechModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomSpeechModelId
	}).(pulumi.StringPtrOutput)
}

// Custom speech model id (optional).
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) CustomVoiceDeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomVoiceDeploymentId
	}).(pulumi.StringPtrOutput)
}

// Make this a default bot for chosen cognitive service account.
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) IsDefaultBotForCogSvcAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsDefaultBotForCogSvcAccount
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is enabled or not.
func (o DirectLineSpeechChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// DirectLine Speech channel definition
type DirectLineSpeechChannelResponse struct {
	// The channel name
	// Expected value is 'DirectLineSpeechChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to DirectLine Speech channel resource
	Properties *DirectLineSpeechChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for DirectLineSpeechChannelResponse
func (val *DirectLineSpeechChannelResponse) Defaults() *DirectLineSpeechChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// DirectLine Speech channel definition
type DirectLineSpeechChannelResponseOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLineSpeechChannelResponse)(nil)).Elem()
}

func (o DirectLineSpeechChannelResponseOutput) ToDirectLineSpeechChannelResponseOutput() DirectLineSpeechChannelResponseOutput {
	return o
}

func (o DirectLineSpeechChannelResponseOutput) ToDirectLineSpeechChannelResponseOutputWithContext(ctx context.Context) DirectLineSpeechChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'DirectLineSpeechChannel'.
func (o DirectLineSpeechChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o DirectLineSpeechChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineSpeechChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to DirectLine Speech channel resource
func (o DirectLineSpeechChannelResponseOutput) Properties() DirectLineSpeechChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelResponse) *DirectLineSpeechChannelPropertiesResponse {
		return v.Properties
	}).(DirectLineSpeechChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o DirectLineSpeechChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLineSpeechChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type DirectLineSpeechChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (DirectLineSpeechChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLineSpeechChannelResponse)(nil)).Elem()
}

func (o DirectLineSpeechChannelResponsePtrOutput) ToDirectLineSpeechChannelResponsePtrOutput() DirectLineSpeechChannelResponsePtrOutput {
	return o
}

func (o DirectLineSpeechChannelResponsePtrOutput) ToDirectLineSpeechChannelResponsePtrOutputWithContext(ctx context.Context) DirectLineSpeechChannelResponsePtrOutput {
	return o
}

func (o DirectLineSpeechChannelResponsePtrOutput) Elem() DirectLineSpeechChannelResponseOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelResponse) DirectLineSpeechChannelResponse {
		if v != nil {
			return *v
		}
		var ret DirectLineSpeechChannelResponse
		return ret
	}).(DirectLineSpeechChannelResponseOutput)
}

// The channel name
// Expected value is 'DirectLineSpeechChannel'.
func (o DirectLineSpeechChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o DirectLineSpeechChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o DirectLineSpeechChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to DirectLine Speech channel resource
func (o DirectLineSpeechChannelResponsePtrOutput) Properties() DirectLineSpeechChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelResponse) *DirectLineSpeechChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(DirectLineSpeechChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o DirectLineSpeechChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLineSpeechChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Email channel definition
type EmailChannel struct {
	// The channel name
	// Expected value is 'EmailChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for EmailChannel
func (val *EmailChannel) Defaults() *EmailChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// EmailChannelInput is an input type that accepts EmailChannelArgs and EmailChannelOutput values.
// You can construct a concrete instance of `EmailChannelInput` via:
//
//	EmailChannelArgs{...}
type EmailChannelInput interface {
	pulumi.Input

	ToEmailChannelOutput() EmailChannelOutput
	ToEmailChannelOutputWithContext(context.Context) EmailChannelOutput
}

// Email channel definition
type EmailChannelArgs struct {
	// The channel name
	// Expected value is 'EmailChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to email channel resource
	Properties EmailChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for EmailChannelArgs
func (val *EmailChannelArgs) Defaults() *EmailChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (EmailChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannel)(nil)).Elem()
}

func (i EmailChannelArgs) ToEmailChannelOutput() EmailChannelOutput {
	return i.ToEmailChannelOutputWithContext(context.Background())
}

func (i EmailChannelArgs) ToEmailChannelOutputWithContext(ctx context.Context) EmailChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelOutput)
}

func (i EmailChannelArgs) ToEmailChannelPtrOutput() EmailChannelPtrOutput {
	return i.ToEmailChannelPtrOutputWithContext(context.Background())
}

func (i EmailChannelArgs) ToEmailChannelPtrOutputWithContext(ctx context.Context) EmailChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelOutput).ToEmailChannelPtrOutputWithContext(ctx)
}

// EmailChannelPtrInput is an input type that accepts EmailChannelArgs, EmailChannelPtr and EmailChannelPtrOutput values.
// You can construct a concrete instance of `EmailChannelPtrInput` via:
//
//	        EmailChannelArgs{...}
//
//	or:
//
//	        nil
type EmailChannelPtrInput interface {
	pulumi.Input

	ToEmailChannelPtrOutput() EmailChannelPtrOutput
	ToEmailChannelPtrOutputWithContext(context.Context) EmailChannelPtrOutput
}

type emailChannelPtrType EmailChannelArgs

func EmailChannelPtr(v *EmailChannelArgs) EmailChannelPtrInput {
	return (*emailChannelPtrType)(v)
}

func (*emailChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannel)(nil)).Elem()
}

func (i *emailChannelPtrType) ToEmailChannelPtrOutput() EmailChannelPtrOutput {
	return i.ToEmailChannelPtrOutputWithContext(context.Background())
}

func (i *emailChannelPtrType) ToEmailChannelPtrOutputWithContext(ctx context.Context) EmailChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPtrOutput)
}

// Email channel definition
type EmailChannelOutput struct{ *pulumi.OutputState }

func (EmailChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannel)(nil)).Elem()
}

func (o EmailChannelOutput) ToEmailChannelOutput() EmailChannelOutput {
	return o
}

func (o EmailChannelOutput) ToEmailChannelOutputWithContext(ctx context.Context) EmailChannelOutput {
	return o
}

func (o EmailChannelOutput) ToEmailChannelPtrOutput() EmailChannelPtrOutput {
	return o.ToEmailChannelPtrOutputWithContext(context.Background())
}

func (o EmailChannelOutput) ToEmailChannelPtrOutputWithContext(ctx context.Context) EmailChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailChannel) *EmailChannel {
		return &v
	}).(EmailChannelPtrOutput)
}

// The channel name
// Expected value is 'EmailChannel'.
func (o EmailChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o EmailChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o EmailChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to email channel resource
func (o EmailChannelOutput) Properties() EmailChannelPropertiesPtrOutput {
	return o.ApplyT(func(v EmailChannel) *EmailChannelProperties { return v.Properties }).(EmailChannelPropertiesPtrOutput)
}

type EmailChannelPtrOutput struct{ *pulumi.OutputState }

func (EmailChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannel)(nil)).Elem()
}

func (o EmailChannelPtrOutput) ToEmailChannelPtrOutput() EmailChannelPtrOutput {
	return o
}

func (o EmailChannelPtrOutput) ToEmailChannelPtrOutputWithContext(ctx context.Context) EmailChannelPtrOutput {
	return o
}

func (o EmailChannelPtrOutput) Elem() EmailChannelOutput {
	return o.ApplyT(func(v *EmailChannel) EmailChannel {
		if v != nil {
			return *v
		}
		var ret EmailChannel
		return ret
	}).(EmailChannelOutput)
}

// The channel name
// Expected value is 'EmailChannel'.
func (o EmailChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o EmailChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o EmailChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to email channel resource
func (o EmailChannelPtrOutput) Properties() EmailChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *EmailChannel) *EmailChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(EmailChannelPropertiesPtrOutput)
}

// The parameters to provide for the Email channel.
type EmailChannelProperties struct {
	// Email channel auth method. 0 Password (Default); 1 Graph.
	AuthMethod *float64 `pulumi:"authMethod"`
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The magic code for setting up the modern authentication.
	MagicCode *string `pulumi:"magicCode"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password *string `pulumi:"password"`
}

// EmailChannelPropertiesInput is an input type that accepts EmailChannelPropertiesArgs and EmailChannelPropertiesOutput values.
// You can construct a concrete instance of `EmailChannelPropertiesInput` via:
//
//	EmailChannelPropertiesArgs{...}
type EmailChannelPropertiesInput interface {
	pulumi.Input

	ToEmailChannelPropertiesOutput() EmailChannelPropertiesOutput
	ToEmailChannelPropertiesOutputWithContext(context.Context) EmailChannelPropertiesOutput
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesArgs struct {
	// Email channel auth method. 0 Password (Default); 1 Graph.
	AuthMethod pulumi.Float64PtrInput `pulumi:"authMethod"`
	// The email address
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The magic code for setting up the modern authentication.
	MagicCode pulumi.StringPtrInput `pulumi:"magicCode"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (EmailChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelProperties)(nil)).Elem()
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesOutput() EmailChannelPropertiesOutput {
	return i.ToEmailChannelPropertiesOutputWithContext(context.Background())
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesOutputWithContext(ctx context.Context) EmailChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPropertiesOutput)
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput {
	return i.ToEmailChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i EmailChannelPropertiesArgs) ToEmailChannelPropertiesPtrOutputWithContext(ctx context.Context) EmailChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPropertiesOutput).ToEmailChannelPropertiesPtrOutputWithContext(ctx)
}

// EmailChannelPropertiesPtrInput is an input type that accepts EmailChannelPropertiesArgs, EmailChannelPropertiesPtr and EmailChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `EmailChannelPropertiesPtrInput` via:
//
//	        EmailChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type EmailChannelPropertiesPtrInput interface {
	pulumi.Input

	ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput
	ToEmailChannelPropertiesPtrOutputWithContext(context.Context) EmailChannelPropertiesPtrOutput
}

type emailChannelPropertiesPtrType EmailChannelPropertiesArgs

func EmailChannelPropertiesPtr(v *EmailChannelPropertiesArgs) EmailChannelPropertiesPtrInput {
	return (*emailChannelPropertiesPtrType)(v)
}

func (*emailChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannelProperties)(nil)).Elem()
}

func (i *emailChannelPropertiesPtrType) ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput {
	return i.ToEmailChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *emailChannelPropertiesPtrType) ToEmailChannelPropertiesPtrOutputWithContext(ctx context.Context) EmailChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailChannelPropertiesPtrOutput)
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesOutput struct{ *pulumi.OutputState }

func (EmailChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelProperties)(nil)).Elem()
}

func (o EmailChannelPropertiesOutput) ToEmailChannelPropertiesOutput() EmailChannelPropertiesOutput {
	return o
}

func (o EmailChannelPropertiesOutput) ToEmailChannelPropertiesOutputWithContext(ctx context.Context) EmailChannelPropertiesOutput {
	return o
}

func (o EmailChannelPropertiesOutput) ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput {
	return o.ToEmailChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o EmailChannelPropertiesOutput) ToEmailChannelPropertiesPtrOutputWithContext(ctx context.Context) EmailChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailChannelProperties) *EmailChannelProperties {
		return &v
	}).(EmailChannelPropertiesPtrOutput)
}

// Email channel auth method. 0 Password (Default); 1 Graph.
func (o EmailChannelPropertiesOutput) AuthMethod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EmailChannelProperties) *float64 { return v.AuthMethod }).(pulumi.Float64PtrOutput)
}

// The email address
func (o EmailChannelPropertiesOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelProperties) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o EmailChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EmailChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The magic code for setting up the modern authentication.
func (o EmailChannelPropertiesOutput) MagicCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannelProperties) *string { return v.MagicCode }).(pulumi.StringPtrOutput)
}

// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
func (o EmailChannelPropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannelProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type EmailChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EmailChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannelProperties)(nil)).Elem()
}

func (o EmailChannelPropertiesPtrOutput) ToEmailChannelPropertiesPtrOutput() EmailChannelPropertiesPtrOutput {
	return o
}

func (o EmailChannelPropertiesPtrOutput) ToEmailChannelPropertiesPtrOutputWithContext(ctx context.Context) EmailChannelPropertiesPtrOutput {
	return o
}

func (o EmailChannelPropertiesPtrOutput) Elem() EmailChannelPropertiesOutput {
	return o.ApplyT(func(v *EmailChannelProperties) EmailChannelProperties {
		if v != nil {
			return *v
		}
		var ret EmailChannelProperties
		return ret
	}).(EmailChannelPropertiesOutput)
}

// Email channel auth method. 0 Password (Default); 1 Graph.
func (o EmailChannelPropertiesPtrOutput) AuthMethod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EmailChannelProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.AuthMethod
	}).(pulumi.Float64PtrOutput)
}

// The email address
func (o EmailChannelPropertiesPtrOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EmailAddress
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o EmailChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EmailChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The magic code for setting up the modern authentication.
func (o EmailChannelPropertiesPtrOutput) MagicCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.MagicCode
	}).(pulumi.StringPtrOutput)
}

// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
func (o EmailChannelPropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesResponse struct {
	// Email channel auth method. 0 Password (Default); 1 Graph.
	AuthMethod *float64 `pulumi:"authMethod"`
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The magic code for setting up the modern authentication.
	MagicCode *string `pulumi:"magicCode"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password *string `pulumi:"password"`
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EmailChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelPropertiesResponse)(nil)).Elem()
}

func (o EmailChannelPropertiesResponseOutput) ToEmailChannelPropertiesResponseOutput() EmailChannelPropertiesResponseOutput {
	return o
}

func (o EmailChannelPropertiesResponseOutput) ToEmailChannelPropertiesResponseOutputWithContext(ctx context.Context) EmailChannelPropertiesResponseOutput {
	return o
}

// Email channel auth method. 0 Password (Default); 1 Graph.
func (o EmailChannelPropertiesResponseOutput) AuthMethod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) *float64 { return v.AuthMethod }).(pulumi.Float64PtrOutput)
}

// The email address
func (o EmailChannelPropertiesResponseOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o EmailChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The magic code for setting up the modern authentication.
func (o EmailChannelPropertiesResponseOutput) MagicCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) *string { return v.MagicCode }).(pulumi.StringPtrOutput)
}

// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
func (o EmailChannelPropertiesResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannelPropertiesResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type EmailChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EmailChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannelPropertiesResponse)(nil)).Elem()
}

func (o EmailChannelPropertiesResponsePtrOutput) ToEmailChannelPropertiesResponsePtrOutput() EmailChannelPropertiesResponsePtrOutput {
	return o
}

func (o EmailChannelPropertiesResponsePtrOutput) ToEmailChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailChannelPropertiesResponsePtrOutput {
	return o
}

func (o EmailChannelPropertiesResponsePtrOutput) Elem() EmailChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) EmailChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret EmailChannelPropertiesResponse
		return ret
	}).(EmailChannelPropertiesResponseOutput)
}

// Email channel auth method. 0 Password (Default); 1 Graph.
func (o EmailChannelPropertiesResponsePtrOutput) AuthMethod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.AuthMethod
	}).(pulumi.Float64PtrOutput)
}

// The email address
func (o EmailChannelPropertiesResponsePtrOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EmailAddress
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o EmailChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The magic code for setting up the modern authentication.
func (o EmailChannelPropertiesResponsePtrOutput) MagicCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MagicCode
	}).(pulumi.StringPtrOutput)
}

// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
func (o EmailChannelPropertiesResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Email channel definition
type EmailChannelResponse struct {
	// The channel name
	// Expected value is 'EmailChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for EmailChannelResponse
func (val *EmailChannelResponse) Defaults() *EmailChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Email channel definition
type EmailChannelResponseOutput struct{ *pulumi.OutputState }

func (EmailChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailChannelResponse)(nil)).Elem()
}

func (o EmailChannelResponseOutput) ToEmailChannelResponseOutput() EmailChannelResponseOutput {
	return o
}

func (o EmailChannelResponseOutput) ToEmailChannelResponseOutputWithContext(ctx context.Context) EmailChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'EmailChannel'.
func (o EmailChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o EmailChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o EmailChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to email channel resource
func (o EmailChannelResponseOutput) Properties() EmailChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EmailChannelResponse) *EmailChannelPropertiesResponse { return v.Properties }).(EmailChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o EmailChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EmailChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type EmailChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (EmailChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailChannelResponse)(nil)).Elem()
}

func (o EmailChannelResponsePtrOutput) ToEmailChannelResponsePtrOutput() EmailChannelResponsePtrOutput {
	return o
}

func (o EmailChannelResponsePtrOutput) ToEmailChannelResponsePtrOutputWithContext(ctx context.Context) EmailChannelResponsePtrOutput {
	return o
}

func (o EmailChannelResponsePtrOutput) Elem() EmailChannelResponseOutput {
	return o.ApplyT(func(v *EmailChannelResponse) EmailChannelResponse {
		if v != nil {
			return *v
		}
		var ret EmailChannelResponse
		return ret
	}).(EmailChannelResponseOutput)
}

// The channel name
// Expected value is 'EmailChannel'.
func (o EmailChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o EmailChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o EmailChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to email channel resource
func (o EmailChannelResponsePtrOutput) Properties() EmailChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EmailChannelResponse) *EmailChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(EmailChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o EmailChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Facebook channel definition
type FacebookChannel struct {
	// The channel name
	// Expected value is 'FacebookChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for FacebookChannel
func (val *FacebookChannel) Defaults() *FacebookChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// FacebookChannelInput is an input type that accepts FacebookChannelArgs and FacebookChannelOutput values.
// You can construct a concrete instance of `FacebookChannelInput` via:
//
//	FacebookChannelArgs{...}
type FacebookChannelInput interface {
	pulumi.Input

	ToFacebookChannelOutput() FacebookChannelOutput
	ToFacebookChannelOutputWithContext(context.Context) FacebookChannelOutput
}

// Facebook channel definition
type FacebookChannelArgs struct {
	// The channel name
	// Expected value is 'FacebookChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to bot facebook channel
	Properties FacebookChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for FacebookChannelArgs
func (val *FacebookChannelArgs) Defaults() *FacebookChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (FacebookChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannel)(nil)).Elem()
}

func (i FacebookChannelArgs) ToFacebookChannelOutput() FacebookChannelOutput {
	return i.ToFacebookChannelOutputWithContext(context.Background())
}

func (i FacebookChannelArgs) ToFacebookChannelOutputWithContext(ctx context.Context) FacebookChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelOutput)
}

func (i FacebookChannelArgs) ToFacebookChannelPtrOutput() FacebookChannelPtrOutput {
	return i.ToFacebookChannelPtrOutputWithContext(context.Background())
}

func (i FacebookChannelArgs) ToFacebookChannelPtrOutputWithContext(ctx context.Context) FacebookChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelOutput).ToFacebookChannelPtrOutputWithContext(ctx)
}

// FacebookChannelPtrInput is an input type that accepts FacebookChannelArgs, FacebookChannelPtr and FacebookChannelPtrOutput values.
// You can construct a concrete instance of `FacebookChannelPtrInput` via:
//
//	        FacebookChannelArgs{...}
//
//	or:
//
//	        nil
type FacebookChannelPtrInput interface {
	pulumi.Input

	ToFacebookChannelPtrOutput() FacebookChannelPtrOutput
	ToFacebookChannelPtrOutputWithContext(context.Context) FacebookChannelPtrOutput
}

type facebookChannelPtrType FacebookChannelArgs

func FacebookChannelPtr(v *FacebookChannelArgs) FacebookChannelPtrInput {
	return (*facebookChannelPtrType)(v)
}

func (*facebookChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannel)(nil)).Elem()
}

func (i *facebookChannelPtrType) ToFacebookChannelPtrOutput() FacebookChannelPtrOutput {
	return i.ToFacebookChannelPtrOutputWithContext(context.Background())
}

func (i *facebookChannelPtrType) ToFacebookChannelPtrOutputWithContext(ctx context.Context) FacebookChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPtrOutput)
}

// Facebook channel definition
type FacebookChannelOutput struct{ *pulumi.OutputState }

func (FacebookChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannel)(nil)).Elem()
}

func (o FacebookChannelOutput) ToFacebookChannelOutput() FacebookChannelOutput {
	return o
}

func (o FacebookChannelOutput) ToFacebookChannelOutputWithContext(ctx context.Context) FacebookChannelOutput {
	return o
}

func (o FacebookChannelOutput) ToFacebookChannelPtrOutput() FacebookChannelPtrOutput {
	return o.ToFacebookChannelPtrOutputWithContext(context.Background())
}

func (o FacebookChannelOutput) ToFacebookChannelPtrOutputWithContext(ctx context.Context) FacebookChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FacebookChannel) *FacebookChannel {
		return &v
	}).(FacebookChannelPtrOutput)
}

// The channel name
// Expected value is 'FacebookChannel'.
func (o FacebookChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o FacebookChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o FacebookChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to bot facebook channel
func (o FacebookChannelOutput) Properties() FacebookChannelPropertiesPtrOutput {
	return o.ApplyT(func(v FacebookChannel) *FacebookChannelProperties { return v.Properties }).(FacebookChannelPropertiesPtrOutput)
}

type FacebookChannelPtrOutput struct{ *pulumi.OutputState }

func (FacebookChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannel)(nil)).Elem()
}

func (o FacebookChannelPtrOutput) ToFacebookChannelPtrOutput() FacebookChannelPtrOutput {
	return o
}

func (o FacebookChannelPtrOutput) ToFacebookChannelPtrOutputWithContext(ctx context.Context) FacebookChannelPtrOutput {
	return o
}

func (o FacebookChannelPtrOutput) Elem() FacebookChannelOutput {
	return o.ApplyT(func(v *FacebookChannel) FacebookChannel {
		if v != nil {
			return *v
		}
		var ret FacebookChannel
		return ret
	}).(FacebookChannelOutput)
}

// The channel name
// Expected value is 'FacebookChannel'.
func (o FacebookChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o FacebookChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o FacebookChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to bot facebook channel
func (o FacebookChannelPtrOutput) Properties() FacebookChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *FacebookChannel) *FacebookChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(FacebookChannelPropertiesPtrOutput)
}

// The parameters to provide for the Facebook channel.
type FacebookChannelProperties struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret *string `pulumi:"appSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPage `pulumi:"pages"`
}

// FacebookChannelPropertiesInput is an input type that accepts FacebookChannelPropertiesArgs and FacebookChannelPropertiesOutput values.
// You can construct a concrete instance of `FacebookChannelPropertiesInput` via:
//
//	FacebookChannelPropertiesArgs{...}
type FacebookChannelPropertiesInput interface {
	pulumi.Input

	ToFacebookChannelPropertiesOutput() FacebookChannelPropertiesOutput
	ToFacebookChannelPropertiesOutputWithContext(context.Context) FacebookChannelPropertiesOutput
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesArgs struct {
	// Facebook application id
	AppId pulumi.StringInput `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret pulumi.StringPtrInput `pulumi:"appSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages FacebookPageArrayInput `pulumi:"pages"`
}

func (FacebookChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelProperties)(nil)).Elem()
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesOutput() FacebookChannelPropertiesOutput {
	return i.ToFacebookChannelPropertiesOutputWithContext(context.Background())
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesOutputWithContext(ctx context.Context) FacebookChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPropertiesOutput)
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput {
	return i.ToFacebookChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i FacebookChannelPropertiesArgs) ToFacebookChannelPropertiesPtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPropertiesOutput).ToFacebookChannelPropertiesPtrOutputWithContext(ctx)
}

// FacebookChannelPropertiesPtrInput is an input type that accepts FacebookChannelPropertiesArgs, FacebookChannelPropertiesPtr and FacebookChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `FacebookChannelPropertiesPtrInput` via:
//
//	        FacebookChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type FacebookChannelPropertiesPtrInput interface {
	pulumi.Input

	ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput
	ToFacebookChannelPropertiesPtrOutputWithContext(context.Context) FacebookChannelPropertiesPtrOutput
}

type facebookChannelPropertiesPtrType FacebookChannelPropertiesArgs

func FacebookChannelPropertiesPtr(v *FacebookChannelPropertiesArgs) FacebookChannelPropertiesPtrInput {
	return (*facebookChannelPropertiesPtrType)(v)
}

func (*facebookChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannelProperties)(nil)).Elem()
}

func (i *facebookChannelPropertiesPtrType) ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput {
	return i.ToFacebookChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *facebookChannelPropertiesPtrType) ToFacebookChannelPropertiesPtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookChannelPropertiesPtrOutput)
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesOutput struct{ *pulumi.OutputState }

func (FacebookChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelProperties)(nil)).Elem()
}

func (o FacebookChannelPropertiesOutput) ToFacebookChannelPropertiesOutput() FacebookChannelPropertiesOutput {
	return o
}

func (o FacebookChannelPropertiesOutput) ToFacebookChannelPropertiesOutputWithContext(ctx context.Context) FacebookChannelPropertiesOutput {
	return o
}

func (o FacebookChannelPropertiesOutput) ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput {
	return o.ToFacebookChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o FacebookChannelPropertiesOutput) ToFacebookChannelPropertiesPtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FacebookChannelProperties) *FacebookChannelProperties {
		return &v
	}).(FacebookChannelPropertiesPtrOutput)
}

// Facebook application id
func (o FacebookChannelPropertiesOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelProperties) string { return v.AppId }).(pulumi.StringOutput)
}

// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookChannelProperties) *string { return v.AppSecret }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o FacebookChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FacebookChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The list of Facebook pages
func (o FacebookChannelPropertiesOutput) Pages() FacebookPageArrayOutput {
	return o.ApplyT(func(v FacebookChannelProperties) []FacebookPage { return v.Pages }).(FacebookPageArrayOutput)
}

type FacebookChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FacebookChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannelProperties)(nil)).Elem()
}

func (o FacebookChannelPropertiesPtrOutput) ToFacebookChannelPropertiesPtrOutput() FacebookChannelPropertiesPtrOutput {
	return o
}

func (o FacebookChannelPropertiesPtrOutput) ToFacebookChannelPropertiesPtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesPtrOutput {
	return o
}

func (o FacebookChannelPropertiesPtrOutput) Elem() FacebookChannelPropertiesOutput {
	return o.ApplyT(func(v *FacebookChannelProperties) FacebookChannelProperties {
		if v != nil {
			return *v
		}
		var ret FacebookChannelProperties
		return ret
	}).(FacebookChannelPropertiesOutput)
}

// Facebook application id
func (o FacebookChannelPropertiesPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesPtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o FacebookChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FacebookChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The list of Facebook pages
func (o FacebookChannelPropertiesPtrOutput) Pages() FacebookPageArrayOutput {
	return o.ApplyT(func(v *FacebookChannelProperties) []FacebookPage {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(FacebookPageArrayOutput)
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesResponse struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret *string `pulumi:"appSecret"`
	// Callback Url
	CallbackUrl string `pulumi:"callbackUrl"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPageResponse `pulumi:"pages"`
	// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerifyToken string `pulumi:"verifyToken"`
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FacebookChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelPropertiesResponse)(nil)).Elem()
}

func (o FacebookChannelPropertiesResponseOutput) ToFacebookChannelPropertiesResponseOutput() FacebookChannelPropertiesResponseOutput {
	return o
}

func (o FacebookChannelPropertiesResponseOutput) ToFacebookChannelPropertiesResponseOutputWithContext(ctx context.Context) FacebookChannelPropertiesResponseOutput {
	return o
}

// Facebook application id
func (o FacebookChannelPropertiesResponseOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.AppId }).(pulumi.StringOutput)
}

// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponseOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) *string { return v.AppSecret }).(pulumi.StringPtrOutput)
}

// Callback Url
func (o FacebookChannelPropertiesResponseOutput) CallbackUrl() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.CallbackUrl }).(pulumi.StringOutput)
}

// Whether this channel is enabled for the bot
func (o FacebookChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The list of Facebook pages
func (o FacebookChannelPropertiesResponseOutput) Pages() FacebookPageResponseArrayOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) []FacebookPageResponse { return v.Pages }).(FacebookPageResponseArrayOutput)
}

// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponseOutput) VerifyToken() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelPropertiesResponse) string { return v.VerifyToken }).(pulumi.StringOutput)
}

type FacebookChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FacebookChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannelPropertiesResponse)(nil)).Elem()
}

func (o FacebookChannelPropertiesResponsePtrOutput) ToFacebookChannelPropertiesResponsePtrOutput() FacebookChannelPropertiesResponsePtrOutput {
	return o
}

func (o FacebookChannelPropertiesResponsePtrOutput) ToFacebookChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) FacebookChannelPropertiesResponsePtrOutput {
	return o
}

func (o FacebookChannelPropertiesResponsePtrOutput) Elem() FacebookChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) FacebookChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret FacebookChannelPropertiesResponse
		return ret
	}).(FacebookChannelPropertiesResponseOutput)
}

// Facebook application id
func (o FacebookChannelPropertiesResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponsePtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// Callback Url
func (o FacebookChannelPropertiesResponsePtrOutput) CallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CallbackUrl
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o FacebookChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The list of Facebook pages
func (o FacebookChannelPropertiesResponsePtrOutput) Pages() FacebookPageResponseArrayOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) []FacebookPageResponse {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(FacebookPageResponseArrayOutput)
}

// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookChannelPropertiesResponsePtrOutput) VerifyToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VerifyToken
	}).(pulumi.StringPtrOutput)
}

// Facebook channel definition
type FacebookChannelResponse struct {
	// The channel name
	// Expected value is 'FacebookChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for FacebookChannelResponse
func (val *FacebookChannelResponse) Defaults() *FacebookChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Facebook channel definition
type FacebookChannelResponseOutput struct{ *pulumi.OutputState }

func (FacebookChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookChannelResponse)(nil)).Elem()
}

func (o FacebookChannelResponseOutput) ToFacebookChannelResponseOutput() FacebookChannelResponseOutput {
	return o
}

func (o FacebookChannelResponseOutput) ToFacebookChannelResponseOutputWithContext(ctx context.Context) FacebookChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'FacebookChannel'.
func (o FacebookChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o FacebookChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o FacebookChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to bot facebook channel
func (o FacebookChannelResponseOutput) Properties() FacebookChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FacebookChannelResponse) *FacebookChannelPropertiesResponse { return v.Properties }).(FacebookChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o FacebookChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type FacebookChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (FacebookChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookChannelResponse)(nil)).Elem()
}

func (o FacebookChannelResponsePtrOutput) ToFacebookChannelResponsePtrOutput() FacebookChannelResponsePtrOutput {
	return o
}

func (o FacebookChannelResponsePtrOutput) ToFacebookChannelResponsePtrOutputWithContext(ctx context.Context) FacebookChannelResponsePtrOutput {
	return o
}

func (o FacebookChannelResponsePtrOutput) Elem() FacebookChannelResponseOutput {
	return o.ApplyT(func(v *FacebookChannelResponse) FacebookChannelResponse {
		if v != nil {
			return *v
		}
		var ret FacebookChannelResponse
		return ret
	}).(FacebookChannelResponseOutput)
}

// The channel name
// Expected value is 'FacebookChannel'.
func (o FacebookChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o FacebookChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o FacebookChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to bot facebook channel
func (o FacebookChannelResponsePtrOutput) Properties() FacebookChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *FacebookChannelResponse) *FacebookChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(FacebookChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o FacebookChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A Facebook page for Facebook channel registration
type FacebookPage struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken *string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// FacebookPageInput is an input type that accepts FacebookPageArgs and FacebookPageOutput values.
// You can construct a concrete instance of `FacebookPageInput` via:
//
//	FacebookPageArgs{...}
type FacebookPageInput interface {
	pulumi.Input

	ToFacebookPageOutput() FacebookPageOutput
	ToFacebookPageOutputWithContext(context.Context) FacebookPageOutput
}

// A Facebook page for Facebook channel registration
type FacebookPageArgs struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Page id
	Id pulumi.StringInput `pulumi:"id"`
}

func (FacebookPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookPage)(nil)).Elem()
}

func (i FacebookPageArgs) ToFacebookPageOutput() FacebookPageOutput {
	return i.ToFacebookPageOutputWithContext(context.Background())
}

func (i FacebookPageArgs) ToFacebookPageOutputWithContext(ctx context.Context) FacebookPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookPageOutput)
}

// FacebookPageArrayInput is an input type that accepts FacebookPageArray and FacebookPageArrayOutput values.
// You can construct a concrete instance of `FacebookPageArrayInput` via:
//
//	FacebookPageArray{ FacebookPageArgs{...} }
type FacebookPageArrayInput interface {
	pulumi.Input

	ToFacebookPageArrayOutput() FacebookPageArrayOutput
	ToFacebookPageArrayOutputWithContext(context.Context) FacebookPageArrayOutput
}

type FacebookPageArray []FacebookPageInput

func (FacebookPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FacebookPage)(nil)).Elem()
}

func (i FacebookPageArray) ToFacebookPageArrayOutput() FacebookPageArrayOutput {
	return i.ToFacebookPageArrayOutputWithContext(context.Background())
}

func (i FacebookPageArray) ToFacebookPageArrayOutputWithContext(ctx context.Context) FacebookPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookPageArrayOutput)
}

// A Facebook page for Facebook channel registration
type FacebookPageOutput struct{ *pulumi.OutputState }

func (FacebookPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookPage)(nil)).Elem()
}

func (o FacebookPageOutput) ToFacebookPageOutput() FacebookPageOutput {
	return o
}

func (o FacebookPageOutput) ToFacebookPageOutputWithContext(ctx context.Context) FacebookPageOutput {
	return o
}

// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookPageOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookPage) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Page id
func (o FacebookPageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookPage) string { return v.Id }).(pulumi.StringOutput)
}

type FacebookPageArrayOutput struct{ *pulumi.OutputState }

func (FacebookPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FacebookPage)(nil)).Elem()
}

func (o FacebookPageArrayOutput) ToFacebookPageArrayOutput() FacebookPageArrayOutput {
	return o
}

func (o FacebookPageArrayOutput) ToFacebookPageArrayOutputWithContext(ctx context.Context) FacebookPageArrayOutput {
	return o
}

func (o FacebookPageArrayOutput) Index(i pulumi.IntInput) FacebookPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FacebookPage {
		return vs[0].([]FacebookPage)[vs[1].(int)]
	}).(FacebookPageOutput)
}

// A Facebook page for Facebook channel registration
type FacebookPageResponse struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken *string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// A Facebook page for Facebook channel registration
type FacebookPageResponseOutput struct{ *pulumi.OutputState }

func (FacebookPageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookPageResponse)(nil)).Elem()
}

func (o FacebookPageResponseOutput) ToFacebookPageResponseOutput() FacebookPageResponseOutput {
	return o
}

func (o FacebookPageResponseOutput) ToFacebookPageResponseOutputWithContext(ctx context.Context) FacebookPageResponseOutput {
	return o
}

// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o FacebookPageResponseOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookPageResponse) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Page id
func (o FacebookPageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FacebookPageResponse) string { return v.Id }).(pulumi.StringOutput)
}

type FacebookPageResponseArrayOutput struct{ *pulumi.OutputState }

func (FacebookPageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FacebookPageResponse)(nil)).Elem()
}

func (o FacebookPageResponseArrayOutput) ToFacebookPageResponseArrayOutput() FacebookPageResponseArrayOutput {
	return o
}

func (o FacebookPageResponseArrayOutput) ToFacebookPageResponseArrayOutputWithContext(ctx context.Context) FacebookPageResponseArrayOutput {
	return o
}

func (o FacebookPageResponseArrayOutput) Index(i pulumi.IntInput) FacebookPageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FacebookPageResponse {
		return vs[0].([]FacebookPageResponse)[vs[1].(int)]
	}).(FacebookPageResponseOutput)
}

// Kik channel definition
type KikChannel struct {
	// The channel name
	// Expected value is 'KikChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for KikChannel
func (val *KikChannel) Defaults() *KikChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// KikChannelInput is an input type that accepts KikChannelArgs and KikChannelOutput values.
// You can construct a concrete instance of `KikChannelInput` via:
//
//	KikChannelArgs{...}
type KikChannelInput interface {
	pulumi.Input

	ToKikChannelOutput() KikChannelOutput
	ToKikChannelOutputWithContext(context.Context) KikChannelOutput
}

// Kik channel definition
type KikChannelArgs struct {
	// The channel name
	// Expected value is 'KikChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Kik channel resource
	Properties KikChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for KikChannelArgs
func (val *KikChannelArgs) Defaults() *KikChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (KikChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannel)(nil)).Elem()
}

func (i KikChannelArgs) ToKikChannelOutput() KikChannelOutput {
	return i.ToKikChannelOutputWithContext(context.Background())
}

func (i KikChannelArgs) ToKikChannelOutputWithContext(ctx context.Context) KikChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelOutput)
}

func (i KikChannelArgs) ToKikChannelPtrOutput() KikChannelPtrOutput {
	return i.ToKikChannelPtrOutputWithContext(context.Background())
}

func (i KikChannelArgs) ToKikChannelPtrOutputWithContext(ctx context.Context) KikChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelOutput).ToKikChannelPtrOutputWithContext(ctx)
}

// KikChannelPtrInput is an input type that accepts KikChannelArgs, KikChannelPtr and KikChannelPtrOutput values.
// You can construct a concrete instance of `KikChannelPtrInput` via:
//
//	        KikChannelArgs{...}
//
//	or:
//
//	        nil
type KikChannelPtrInput interface {
	pulumi.Input

	ToKikChannelPtrOutput() KikChannelPtrOutput
	ToKikChannelPtrOutputWithContext(context.Context) KikChannelPtrOutput
}

type kikChannelPtrType KikChannelArgs

func KikChannelPtr(v *KikChannelArgs) KikChannelPtrInput {
	return (*kikChannelPtrType)(v)
}

func (*kikChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannel)(nil)).Elem()
}

func (i *kikChannelPtrType) ToKikChannelPtrOutput() KikChannelPtrOutput {
	return i.ToKikChannelPtrOutputWithContext(context.Background())
}

func (i *kikChannelPtrType) ToKikChannelPtrOutputWithContext(ctx context.Context) KikChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPtrOutput)
}

// Kik channel definition
type KikChannelOutput struct{ *pulumi.OutputState }

func (KikChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannel)(nil)).Elem()
}

func (o KikChannelOutput) ToKikChannelOutput() KikChannelOutput {
	return o
}

func (o KikChannelOutput) ToKikChannelOutputWithContext(ctx context.Context) KikChannelOutput {
	return o
}

func (o KikChannelOutput) ToKikChannelPtrOutput() KikChannelPtrOutput {
	return o.ToKikChannelPtrOutputWithContext(context.Background())
}

func (o KikChannelOutput) ToKikChannelPtrOutputWithContext(ctx context.Context) KikChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KikChannel) *KikChannel {
		return &v
	}).(KikChannelPtrOutput)
}

// The channel name
// Expected value is 'KikChannel'.
func (o KikChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o KikChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KikChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o KikChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KikChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Kik channel resource
func (o KikChannelOutput) Properties() KikChannelPropertiesPtrOutput {
	return o.ApplyT(func(v KikChannel) *KikChannelProperties { return v.Properties }).(KikChannelPropertiesPtrOutput)
}

type KikChannelPtrOutput struct{ *pulumi.OutputState }

func (KikChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannel)(nil)).Elem()
}

func (o KikChannelPtrOutput) ToKikChannelPtrOutput() KikChannelPtrOutput {
	return o
}

func (o KikChannelPtrOutput) ToKikChannelPtrOutputWithContext(ctx context.Context) KikChannelPtrOutput {
	return o
}

func (o KikChannelPtrOutput) Elem() KikChannelOutput {
	return o.ApplyT(func(v *KikChannel) KikChannel {
		if v != nil {
			return *v
		}
		var ret KikChannel
		return ret
	}).(KikChannelOutput)
}

// The channel name
// Expected value is 'KikChannel'.
func (o KikChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o KikChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o KikChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Kik channel resource
func (o KikChannelPtrOutput) Properties() KikChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *KikChannel) *KikChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(KikChannelPropertiesPtrOutput)
}

// The parameters to provide for the Kik channel.
type KikChannelProperties struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey *string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// KikChannelPropertiesInput is an input type that accepts KikChannelPropertiesArgs and KikChannelPropertiesOutput values.
// You can construct a concrete instance of `KikChannelPropertiesInput` via:
//
//	KikChannelPropertiesArgs{...}
type KikChannelPropertiesInput interface {
	pulumi.Input

	ToKikChannelPropertiesOutput() KikChannelPropertiesOutput
	ToKikChannelPropertiesOutputWithContext(context.Context) KikChannelPropertiesOutput
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesArgs struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated pulumi.BoolPtrInput `pulumi:"isValidated"`
	// The Kik user name
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (KikChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelProperties)(nil)).Elem()
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesOutput() KikChannelPropertiesOutput {
	return i.ToKikChannelPropertiesOutputWithContext(context.Background())
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesOutputWithContext(ctx context.Context) KikChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPropertiesOutput)
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput {
	return i.ToKikChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i KikChannelPropertiesArgs) ToKikChannelPropertiesPtrOutputWithContext(ctx context.Context) KikChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPropertiesOutput).ToKikChannelPropertiesPtrOutputWithContext(ctx)
}

// KikChannelPropertiesPtrInput is an input type that accepts KikChannelPropertiesArgs, KikChannelPropertiesPtr and KikChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `KikChannelPropertiesPtrInput` via:
//
//	        KikChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type KikChannelPropertiesPtrInput interface {
	pulumi.Input

	ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput
	ToKikChannelPropertiesPtrOutputWithContext(context.Context) KikChannelPropertiesPtrOutput
}

type kikChannelPropertiesPtrType KikChannelPropertiesArgs

func KikChannelPropertiesPtr(v *KikChannelPropertiesArgs) KikChannelPropertiesPtrInput {
	return (*kikChannelPropertiesPtrType)(v)
}

func (*kikChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannelProperties)(nil)).Elem()
}

func (i *kikChannelPropertiesPtrType) ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput {
	return i.ToKikChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *kikChannelPropertiesPtrType) ToKikChannelPropertiesPtrOutputWithContext(ctx context.Context) KikChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KikChannelPropertiesPtrOutput)
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesOutput struct{ *pulumi.OutputState }

func (KikChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelProperties)(nil)).Elem()
}

func (o KikChannelPropertiesOutput) ToKikChannelPropertiesOutput() KikChannelPropertiesOutput {
	return o
}

func (o KikChannelPropertiesOutput) ToKikChannelPropertiesOutputWithContext(ctx context.Context) KikChannelPropertiesOutput {
	return o
}

func (o KikChannelPropertiesOutput) ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput {
	return o.ToKikChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o KikChannelPropertiesOutput) ToKikChannelPropertiesPtrOutputWithContext(ctx context.Context) KikChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KikChannelProperties) *KikChannelProperties {
		return &v
	}).(KikChannelPropertiesPtrOutput)
}

// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o KikChannelPropertiesOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KikChannelProperties) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o KikChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KikChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o KikChannelPropertiesOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KikChannelProperties) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

// The Kik user name
func (o KikChannelPropertiesOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelProperties) string { return v.UserName }).(pulumi.StringOutput)
}

type KikChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KikChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannelProperties)(nil)).Elem()
}

func (o KikChannelPropertiesPtrOutput) ToKikChannelPropertiesPtrOutput() KikChannelPropertiesPtrOutput {
	return o
}

func (o KikChannelPropertiesPtrOutput) ToKikChannelPropertiesPtrOutputWithContext(ctx context.Context) KikChannelPropertiesPtrOutput {
	return o
}

func (o KikChannelPropertiesPtrOutput) Elem() KikChannelPropertiesOutput {
	return o.ApplyT(func(v *KikChannelProperties) KikChannelProperties {
		if v != nil {
			return *v
		}
		var ret KikChannelProperties
		return ret
	}).(KikChannelPropertiesOutput)
}

// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o KikChannelPropertiesPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o KikChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KikChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o KikChannelPropertiesPtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KikChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Kik user name
func (o KikChannelPropertiesPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesResponse struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey *string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KikChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelPropertiesResponse)(nil)).Elem()
}

func (o KikChannelPropertiesResponseOutput) ToKikChannelPropertiesResponseOutput() KikChannelPropertiesResponseOutput {
	return o
}

func (o KikChannelPropertiesResponseOutput) ToKikChannelPropertiesResponseOutputWithContext(ctx context.Context) KikChannelPropertiesResponseOutput {
	return o
}

// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o KikChannelPropertiesResponseOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o KikChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o KikChannelPropertiesResponseOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

// The Kik user name
func (o KikChannelPropertiesResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelPropertiesResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type KikChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KikChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannelPropertiesResponse)(nil)).Elem()
}

func (o KikChannelPropertiesResponsePtrOutput) ToKikChannelPropertiesResponsePtrOutput() KikChannelPropertiesResponsePtrOutput {
	return o
}

func (o KikChannelPropertiesResponsePtrOutput) ToKikChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) KikChannelPropertiesResponsePtrOutput {
	return o
}

func (o KikChannelPropertiesResponsePtrOutput) Elem() KikChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) KikChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KikChannelPropertiesResponse
		return ret
	}).(KikChannelPropertiesResponseOutput)
}

// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o KikChannelPropertiesResponsePtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o KikChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o KikChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Kik user name
func (o KikChannelPropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Kik channel definition
type KikChannelResponse struct {
	// The channel name
	// Expected value is 'KikChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for KikChannelResponse
func (val *KikChannelResponse) Defaults() *KikChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Kik channel definition
type KikChannelResponseOutput struct{ *pulumi.OutputState }

func (KikChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KikChannelResponse)(nil)).Elem()
}

func (o KikChannelResponseOutput) ToKikChannelResponseOutput() KikChannelResponseOutput {
	return o
}

func (o KikChannelResponseOutput) ToKikChannelResponseOutputWithContext(ctx context.Context) KikChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'KikChannel'.
func (o KikChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o KikChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KikChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o KikChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KikChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Kik channel resource
func (o KikChannelResponseOutput) Properties() KikChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KikChannelResponse) *KikChannelPropertiesResponse { return v.Properties }).(KikChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o KikChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v KikChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type KikChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (KikChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KikChannelResponse)(nil)).Elem()
}

func (o KikChannelResponsePtrOutput) ToKikChannelResponsePtrOutput() KikChannelResponsePtrOutput {
	return o
}

func (o KikChannelResponsePtrOutput) ToKikChannelResponsePtrOutputWithContext(ctx context.Context) KikChannelResponsePtrOutput {
	return o
}

func (o KikChannelResponsePtrOutput) Elem() KikChannelResponseOutput {
	return o.ApplyT(func(v *KikChannelResponse) KikChannelResponse {
		if v != nil {
			return *v
		}
		var ret KikChannelResponse
		return ret
	}).(KikChannelResponseOutput)
}

// The channel name
// Expected value is 'KikChannel'.
func (o KikChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o KikChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o KikChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Kik channel resource
func (o KikChannelResponsePtrOutput) Properties() KikChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *KikChannelResponse) *KikChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(KikChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o KikChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KikChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Line channel definition
type LineChannel struct {
	// The channel name
	// Expected value is 'LineChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to line channel resource
	Properties *LineChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for LineChannel
func (val *LineChannel) Defaults() *LineChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// LineChannelInput is an input type that accepts LineChannelArgs and LineChannelOutput values.
// You can construct a concrete instance of `LineChannelInput` via:
//
//	LineChannelArgs{...}
type LineChannelInput interface {
	pulumi.Input

	ToLineChannelOutput() LineChannelOutput
	ToLineChannelOutputWithContext(context.Context) LineChannelOutput
}

// Line channel definition
type LineChannelArgs struct {
	// The channel name
	// Expected value is 'LineChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to line channel resource
	Properties LineChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for LineChannelArgs
func (val *LineChannelArgs) Defaults() *LineChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (LineChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LineChannel)(nil)).Elem()
}

func (i LineChannelArgs) ToLineChannelOutput() LineChannelOutput {
	return i.ToLineChannelOutputWithContext(context.Background())
}

func (i LineChannelArgs) ToLineChannelOutputWithContext(ctx context.Context) LineChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineChannelOutput)
}

func (i LineChannelArgs) ToLineChannelPtrOutput() LineChannelPtrOutput {
	return i.ToLineChannelPtrOutputWithContext(context.Background())
}

func (i LineChannelArgs) ToLineChannelPtrOutputWithContext(ctx context.Context) LineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineChannelOutput).ToLineChannelPtrOutputWithContext(ctx)
}

// LineChannelPtrInput is an input type that accepts LineChannelArgs, LineChannelPtr and LineChannelPtrOutput values.
// You can construct a concrete instance of `LineChannelPtrInput` via:
//
//	        LineChannelArgs{...}
//
//	or:
//
//	        nil
type LineChannelPtrInput interface {
	pulumi.Input

	ToLineChannelPtrOutput() LineChannelPtrOutput
	ToLineChannelPtrOutputWithContext(context.Context) LineChannelPtrOutput
}

type lineChannelPtrType LineChannelArgs

func LineChannelPtr(v *LineChannelArgs) LineChannelPtrInput {
	return (*lineChannelPtrType)(v)
}

func (*lineChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LineChannel)(nil)).Elem()
}

func (i *lineChannelPtrType) ToLineChannelPtrOutput() LineChannelPtrOutput {
	return i.ToLineChannelPtrOutputWithContext(context.Background())
}

func (i *lineChannelPtrType) ToLineChannelPtrOutputWithContext(ctx context.Context) LineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineChannelPtrOutput)
}

// Line channel definition
type LineChannelOutput struct{ *pulumi.OutputState }

func (LineChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LineChannel)(nil)).Elem()
}

func (o LineChannelOutput) ToLineChannelOutput() LineChannelOutput {
	return o
}

func (o LineChannelOutput) ToLineChannelOutputWithContext(ctx context.Context) LineChannelOutput {
	return o
}

func (o LineChannelOutput) ToLineChannelPtrOutput() LineChannelPtrOutput {
	return o.ToLineChannelPtrOutputWithContext(context.Background())
}

func (o LineChannelOutput) ToLineChannelPtrOutputWithContext(ctx context.Context) LineChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LineChannel) *LineChannel {
		return &v
	}).(LineChannelPtrOutput)
}

// The channel name
// Expected value is 'LineChannel'.
func (o LineChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v LineChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o LineChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o LineChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to line channel resource
func (o LineChannelOutput) Properties() LineChannelPropertiesPtrOutput {
	return o.ApplyT(func(v LineChannel) *LineChannelProperties { return v.Properties }).(LineChannelPropertiesPtrOutput)
}

type LineChannelPtrOutput struct{ *pulumi.OutputState }

func (LineChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LineChannel)(nil)).Elem()
}

func (o LineChannelPtrOutput) ToLineChannelPtrOutput() LineChannelPtrOutput {
	return o
}

func (o LineChannelPtrOutput) ToLineChannelPtrOutputWithContext(ctx context.Context) LineChannelPtrOutput {
	return o
}

func (o LineChannelPtrOutput) Elem() LineChannelOutput {
	return o.ApplyT(func(v *LineChannel) LineChannel {
		if v != nil {
			return *v
		}
		var ret LineChannel
		return ret
	}).(LineChannelOutput)
}

// The channel name
// Expected value is 'LineChannel'.
func (o LineChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o LineChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o LineChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to line channel resource
func (o LineChannelPtrOutput) Properties() LineChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *LineChannel) *LineChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(LineChannelPropertiesPtrOutput)
}

// The parameters to provide for the Line channel.
type LineChannelProperties struct {
	// The list of line channel registrations
	LineRegistrations []LineRegistration `pulumi:"lineRegistrations"`
}

// LineChannelPropertiesInput is an input type that accepts LineChannelPropertiesArgs and LineChannelPropertiesOutput values.
// You can construct a concrete instance of `LineChannelPropertiesInput` via:
//
//	LineChannelPropertiesArgs{...}
type LineChannelPropertiesInput interface {
	pulumi.Input

	ToLineChannelPropertiesOutput() LineChannelPropertiesOutput
	ToLineChannelPropertiesOutputWithContext(context.Context) LineChannelPropertiesOutput
}

// The parameters to provide for the Line channel.
type LineChannelPropertiesArgs struct {
	// The list of line channel registrations
	LineRegistrations LineRegistrationArrayInput `pulumi:"lineRegistrations"`
}

func (LineChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LineChannelProperties)(nil)).Elem()
}

func (i LineChannelPropertiesArgs) ToLineChannelPropertiesOutput() LineChannelPropertiesOutput {
	return i.ToLineChannelPropertiesOutputWithContext(context.Background())
}

func (i LineChannelPropertiesArgs) ToLineChannelPropertiesOutputWithContext(ctx context.Context) LineChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineChannelPropertiesOutput)
}

func (i LineChannelPropertiesArgs) ToLineChannelPropertiesPtrOutput() LineChannelPropertiesPtrOutput {
	return i.ToLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i LineChannelPropertiesArgs) ToLineChannelPropertiesPtrOutputWithContext(ctx context.Context) LineChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineChannelPropertiesOutput).ToLineChannelPropertiesPtrOutputWithContext(ctx)
}

// LineChannelPropertiesPtrInput is an input type that accepts LineChannelPropertiesArgs, LineChannelPropertiesPtr and LineChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `LineChannelPropertiesPtrInput` via:
//
//	        LineChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type LineChannelPropertiesPtrInput interface {
	pulumi.Input

	ToLineChannelPropertiesPtrOutput() LineChannelPropertiesPtrOutput
	ToLineChannelPropertiesPtrOutputWithContext(context.Context) LineChannelPropertiesPtrOutput
}

type lineChannelPropertiesPtrType LineChannelPropertiesArgs

func LineChannelPropertiesPtr(v *LineChannelPropertiesArgs) LineChannelPropertiesPtrInput {
	return (*lineChannelPropertiesPtrType)(v)
}

func (*lineChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LineChannelProperties)(nil)).Elem()
}

func (i *lineChannelPropertiesPtrType) ToLineChannelPropertiesPtrOutput() LineChannelPropertiesPtrOutput {
	return i.ToLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *lineChannelPropertiesPtrType) ToLineChannelPropertiesPtrOutputWithContext(ctx context.Context) LineChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineChannelPropertiesPtrOutput)
}

// The parameters to provide for the Line channel.
type LineChannelPropertiesOutput struct{ *pulumi.OutputState }

func (LineChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LineChannelProperties)(nil)).Elem()
}

func (o LineChannelPropertiesOutput) ToLineChannelPropertiesOutput() LineChannelPropertiesOutput {
	return o
}

func (o LineChannelPropertiesOutput) ToLineChannelPropertiesOutputWithContext(ctx context.Context) LineChannelPropertiesOutput {
	return o
}

func (o LineChannelPropertiesOutput) ToLineChannelPropertiesPtrOutput() LineChannelPropertiesPtrOutput {
	return o.ToLineChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o LineChannelPropertiesOutput) ToLineChannelPropertiesPtrOutputWithContext(ctx context.Context) LineChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LineChannelProperties) *LineChannelProperties {
		return &v
	}).(LineChannelPropertiesPtrOutput)
}

// The list of line channel registrations
func (o LineChannelPropertiesOutput) LineRegistrations() LineRegistrationArrayOutput {
	return o.ApplyT(func(v LineChannelProperties) []LineRegistration { return v.LineRegistrations }).(LineRegistrationArrayOutput)
}

type LineChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LineChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LineChannelProperties)(nil)).Elem()
}

func (o LineChannelPropertiesPtrOutput) ToLineChannelPropertiesPtrOutput() LineChannelPropertiesPtrOutput {
	return o
}

func (o LineChannelPropertiesPtrOutput) ToLineChannelPropertiesPtrOutputWithContext(ctx context.Context) LineChannelPropertiesPtrOutput {
	return o
}

func (o LineChannelPropertiesPtrOutput) Elem() LineChannelPropertiesOutput {
	return o.ApplyT(func(v *LineChannelProperties) LineChannelProperties {
		if v != nil {
			return *v
		}
		var ret LineChannelProperties
		return ret
	}).(LineChannelPropertiesOutput)
}

// The list of line channel registrations
func (o LineChannelPropertiesPtrOutput) LineRegistrations() LineRegistrationArrayOutput {
	return o.ApplyT(func(v *LineChannelProperties) []LineRegistration {
		if v == nil {
			return nil
		}
		return v.LineRegistrations
	}).(LineRegistrationArrayOutput)
}

// The parameters to provide for the Line channel.
type LineChannelPropertiesResponse struct {
	// Callback Url to enter in line registration.
	CallbackUrl string `pulumi:"callbackUrl"`
	// Whether this channel is validated for the bot
	IsValidated bool `pulumi:"isValidated"`
	// The list of line channel registrations
	LineRegistrations []LineRegistrationResponse `pulumi:"lineRegistrations"`
}

// The parameters to provide for the Line channel.
type LineChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LineChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LineChannelPropertiesResponse)(nil)).Elem()
}

func (o LineChannelPropertiesResponseOutput) ToLineChannelPropertiesResponseOutput() LineChannelPropertiesResponseOutput {
	return o
}

func (o LineChannelPropertiesResponseOutput) ToLineChannelPropertiesResponseOutputWithContext(ctx context.Context) LineChannelPropertiesResponseOutput {
	return o
}

// Callback Url to enter in line registration.
func (o LineChannelPropertiesResponseOutput) CallbackUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LineChannelPropertiesResponse) string { return v.CallbackUrl }).(pulumi.StringOutput)
}

// Whether this channel is validated for the bot
func (o LineChannelPropertiesResponseOutput) IsValidated() pulumi.BoolOutput {
	return o.ApplyT(func(v LineChannelPropertiesResponse) bool { return v.IsValidated }).(pulumi.BoolOutput)
}

// The list of line channel registrations
func (o LineChannelPropertiesResponseOutput) LineRegistrations() LineRegistrationResponseArrayOutput {
	return o.ApplyT(func(v LineChannelPropertiesResponse) []LineRegistrationResponse { return v.LineRegistrations }).(LineRegistrationResponseArrayOutput)
}

type LineChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LineChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LineChannelPropertiesResponse)(nil)).Elem()
}

func (o LineChannelPropertiesResponsePtrOutput) ToLineChannelPropertiesResponsePtrOutput() LineChannelPropertiesResponsePtrOutput {
	return o
}

func (o LineChannelPropertiesResponsePtrOutput) ToLineChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) LineChannelPropertiesResponsePtrOutput {
	return o
}

func (o LineChannelPropertiesResponsePtrOutput) Elem() LineChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *LineChannelPropertiesResponse) LineChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LineChannelPropertiesResponse
		return ret
	}).(LineChannelPropertiesResponseOutput)
}

// Callback Url to enter in line registration.
func (o LineChannelPropertiesResponsePtrOutput) CallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CallbackUrl
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is validated for the bot
func (o LineChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LineChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The list of line channel registrations
func (o LineChannelPropertiesResponsePtrOutput) LineRegistrations() LineRegistrationResponseArrayOutput {
	return o.ApplyT(func(v *LineChannelPropertiesResponse) []LineRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.LineRegistrations
	}).(LineRegistrationResponseArrayOutput)
}

// Line channel definition
type LineChannelResponse struct {
	// The channel name
	// Expected value is 'LineChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to line channel resource
	Properties *LineChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for LineChannelResponse
func (val *LineChannelResponse) Defaults() *LineChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Line channel definition
type LineChannelResponseOutput struct{ *pulumi.OutputState }

func (LineChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LineChannelResponse)(nil)).Elem()
}

func (o LineChannelResponseOutput) ToLineChannelResponseOutput() LineChannelResponseOutput {
	return o
}

func (o LineChannelResponseOutput) ToLineChannelResponseOutputWithContext(ctx context.Context) LineChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'LineChannel'.
func (o LineChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v LineChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o LineChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o LineChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to line channel resource
func (o LineChannelResponseOutput) Properties() LineChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LineChannelResponse) *LineChannelPropertiesResponse { return v.Properties }).(LineChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o LineChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LineChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type LineChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (LineChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LineChannelResponse)(nil)).Elem()
}

func (o LineChannelResponsePtrOutput) ToLineChannelResponsePtrOutput() LineChannelResponsePtrOutput {
	return o
}

func (o LineChannelResponsePtrOutput) ToLineChannelResponsePtrOutputWithContext(ctx context.Context) LineChannelResponsePtrOutput {
	return o
}

func (o LineChannelResponsePtrOutput) Elem() LineChannelResponseOutput {
	return o.ApplyT(func(v *LineChannelResponse) LineChannelResponse {
		if v != nil {
			return *v
		}
		var ret LineChannelResponse
		return ret
	}).(LineChannelResponseOutput)
}

// The channel name
// Expected value is 'LineChannel'.
func (o LineChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o LineChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o LineChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to line channel resource
func (o LineChannelResponsePtrOutput) Properties() LineChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *LineChannelResponse) *LineChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(LineChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o LineChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LineChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The properties corresponding to a line channel registration
type LineRegistration struct {
	// Access token for the line channel registration
	ChannelAccessToken *string `pulumi:"channelAccessToken"`
	// Secret for the line channel registration
	ChannelSecret *string `pulumi:"channelSecret"`
}

// LineRegistrationInput is an input type that accepts LineRegistrationArgs and LineRegistrationOutput values.
// You can construct a concrete instance of `LineRegistrationInput` via:
//
//	LineRegistrationArgs{...}
type LineRegistrationInput interface {
	pulumi.Input

	ToLineRegistrationOutput() LineRegistrationOutput
	ToLineRegistrationOutputWithContext(context.Context) LineRegistrationOutput
}

// The properties corresponding to a line channel registration
type LineRegistrationArgs struct {
	// Access token for the line channel registration
	ChannelAccessToken pulumi.StringPtrInput `pulumi:"channelAccessToken"`
	// Secret for the line channel registration
	ChannelSecret pulumi.StringPtrInput `pulumi:"channelSecret"`
}

func (LineRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LineRegistration)(nil)).Elem()
}

func (i LineRegistrationArgs) ToLineRegistrationOutput() LineRegistrationOutput {
	return i.ToLineRegistrationOutputWithContext(context.Background())
}

func (i LineRegistrationArgs) ToLineRegistrationOutputWithContext(ctx context.Context) LineRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineRegistrationOutput)
}

// LineRegistrationArrayInput is an input type that accepts LineRegistrationArray and LineRegistrationArrayOutput values.
// You can construct a concrete instance of `LineRegistrationArrayInput` via:
//
//	LineRegistrationArray{ LineRegistrationArgs{...} }
type LineRegistrationArrayInput interface {
	pulumi.Input

	ToLineRegistrationArrayOutput() LineRegistrationArrayOutput
	ToLineRegistrationArrayOutputWithContext(context.Context) LineRegistrationArrayOutput
}

type LineRegistrationArray []LineRegistrationInput

func (LineRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LineRegistration)(nil)).Elem()
}

func (i LineRegistrationArray) ToLineRegistrationArrayOutput() LineRegistrationArrayOutput {
	return i.ToLineRegistrationArrayOutputWithContext(context.Background())
}

func (i LineRegistrationArray) ToLineRegistrationArrayOutputWithContext(ctx context.Context) LineRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LineRegistrationArrayOutput)
}

// The properties corresponding to a line channel registration
type LineRegistrationOutput struct{ *pulumi.OutputState }

func (LineRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LineRegistration)(nil)).Elem()
}

func (o LineRegistrationOutput) ToLineRegistrationOutput() LineRegistrationOutput {
	return o
}

func (o LineRegistrationOutput) ToLineRegistrationOutputWithContext(ctx context.Context) LineRegistrationOutput {
	return o
}

// Access token for the line channel registration
func (o LineRegistrationOutput) ChannelAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineRegistration) *string { return v.ChannelAccessToken }).(pulumi.StringPtrOutput)
}

// Secret for the line channel registration
func (o LineRegistrationOutput) ChannelSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineRegistration) *string { return v.ChannelSecret }).(pulumi.StringPtrOutput)
}

type LineRegistrationArrayOutput struct{ *pulumi.OutputState }

func (LineRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LineRegistration)(nil)).Elem()
}

func (o LineRegistrationArrayOutput) ToLineRegistrationArrayOutput() LineRegistrationArrayOutput {
	return o
}

func (o LineRegistrationArrayOutput) ToLineRegistrationArrayOutputWithContext(ctx context.Context) LineRegistrationArrayOutput {
	return o
}

func (o LineRegistrationArrayOutput) Index(i pulumi.IntInput) LineRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LineRegistration {
		return vs[0].([]LineRegistration)[vs[1].(int)]
	}).(LineRegistrationOutput)
}

// The properties corresponding to a line channel registration
type LineRegistrationResponse struct {
	// Access token for the line channel registration
	ChannelAccessToken *string `pulumi:"channelAccessToken"`
	// Secret for the line channel registration
	ChannelSecret *string `pulumi:"channelSecret"`
	// Id generated for the line channel registration
	GeneratedId string `pulumi:"generatedId"`
}

// The properties corresponding to a line channel registration
type LineRegistrationResponseOutput struct{ *pulumi.OutputState }

func (LineRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LineRegistrationResponse)(nil)).Elem()
}

func (o LineRegistrationResponseOutput) ToLineRegistrationResponseOutput() LineRegistrationResponseOutput {
	return o
}

func (o LineRegistrationResponseOutput) ToLineRegistrationResponseOutputWithContext(ctx context.Context) LineRegistrationResponseOutput {
	return o
}

// Access token for the line channel registration
func (o LineRegistrationResponseOutput) ChannelAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineRegistrationResponse) *string { return v.ChannelAccessToken }).(pulumi.StringPtrOutput)
}

// Secret for the line channel registration
func (o LineRegistrationResponseOutput) ChannelSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LineRegistrationResponse) *string { return v.ChannelSecret }).(pulumi.StringPtrOutput)
}

// Id generated for the line channel registration
func (o LineRegistrationResponseOutput) GeneratedId() pulumi.StringOutput {
	return o.ApplyT(func(v LineRegistrationResponse) string { return v.GeneratedId }).(pulumi.StringOutput)
}

type LineRegistrationResponseArrayOutput struct{ *pulumi.OutputState }

func (LineRegistrationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LineRegistrationResponse)(nil)).Elem()
}

func (o LineRegistrationResponseArrayOutput) ToLineRegistrationResponseArrayOutput() LineRegistrationResponseArrayOutput {
	return o
}

func (o LineRegistrationResponseArrayOutput) ToLineRegistrationResponseArrayOutputWithContext(ctx context.Context) LineRegistrationResponseArrayOutput {
	return o
}

func (o LineRegistrationResponseArrayOutput) Index(i pulumi.IntInput) LineRegistrationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LineRegistrationResponse {
		return vs[0].([]LineRegistrationResponse)[vs[1].(int)]
	}).(LineRegistrationResponseOutput)
}

// M365 Extensions definition
type M365Extensions struct {
	// The channel name
	// Expected value is 'M365Extensions'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
}

// Defaults sets the appropriate defaults for M365Extensions
func (val *M365Extensions) Defaults() *M365Extensions {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// M365ExtensionsInput is an input type that accepts M365ExtensionsArgs and M365ExtensionsOutput values.
// You can construct a concrete instance of `M365ExtensionsInput` via:
//
//	M365ExtensionsArgs{...}
type M365ExtensionsInput interface {
	pulumi.Input

	ToM365ExtensionsOutput() M365ExtensionsOutput
	ToM365ExtensionsOutputWithContext(context.Context) M365ExtensionsOutput
}

// M365 Extensions definition
type M365ExtensionsArgs struct {
	// The channel name
	// Expected value is 'M365Extensions'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

// Defaults sets the appropriate defaults for M365ExtensionsArgs
func (val *M365ExtensionsArgs) Defaults() *M365ExtensionsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (M365ExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M365Extensions)(nil)).Elem()
}

func (i M365ExtensionsArgs) ToM365ExtensionsOutput() M365ExtensionsOutput {
	return i.ToM365ExtensionsOutputWithContext(context.Background())
}

func (i M365ExtensionsArgs) ToM365ExtensionsOutputWithContext(ctx context.Context) M365ExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M365ExtensionsOutput)
}

func (i M365ExtensionsArgs) ToM365ExtensionsPtrOutput() M365ExtensionsPtrOutput {
	return i.ToM365ExtensionsPtrOutputWithContext(context.Background())
}

func (i M365ExtensionsArgs) ToM365ExtensionsPtrOutputWithContext(ctx context.Context) M365ExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M365ExtensionsOutput).ToM365ExtensionsPtrOutputWithContext(ctx)
}

// M365ExtensionsPtrInput is an input type that accepts M365ExtensionsArgs, M365ExtensionsPtr and M365ExtensionsPtrOutput values.
// You can construct a concrete instance of `M365ExtensionsPtrInput` via:
//
//	        M365ExtensionsArgs{...}
//
//	or:
//
//	        nil
type M365ExtensionsPtrInput interface {
	pulumi.Input

	ToM365ExtensionsPtrOutput() M365ExtensionsPtrOutput
	ToM365ExtensionsPtrOutputWithContext(context.Context) M365ExtensionsPtrOutput
}

type m365extensionsPtrType M365ExtensionsArgs

func M365ExtensionsPtr(v *M365ExtensionsArgs) M365ExtensionsPtrInput {
	return (*m365extensionsPtrType)(v)
}

func (*m365extensionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M365Extensions)(nil)).Elem()
}

func (i *m365extensionsPtrType) ToM365ExtensionsPtrOutput() M365ExtensionsPtrOutput {
	return i.ToM365ExtensionsPtrOutputWithContext(context.Background())
}

func (i *m365extensionsPtrType) ToM365ExtensionsPtrOutputWithContext(ctx context.Context) M365ExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M365ExtensionsPtrOutput)
}

// M365 Extensions definition
type M365ExtensionsOutput struct{ *pulumi.OutputState }

func (M365ExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M365Extensions)(nil)).Elem()
}

func (o M365ExtensionsOutput) ToM365ExtensionsOutput() M365ExtensionsOutput {
	return o
}

func (o M365ExtensionsOutput) ToM365ExtensionsOutputWithContext(ctx context.Context) M365ExtensionsOutput {
	return o
}

func (o M365ExtensionsOutput) ToM365ExtensionsPtrOutput() M365ExtensionsPtrOutput {
	return o.ToM365ExtensionsPtrOutputWithContext(context.Background())
}

func (o M365ExtensionsOutput) ToM365ExtensionsPtrOutputWithContext(ctx context.Context) M365ExtensionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v M365Extensions) *M365Extensions {
		return &v
	}).(M365ExtensionsPtrOutput)
}

// The channel name
// Expected value is 'M365Extensions'.
func (o M365ExtensionsOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v M365Extensions) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o M365ExtensionsOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M365Extensions) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o M365ExtensionsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M365Extensions) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type M365ExtensionsPtrOutput struct{ *pulumi.OutputState }

func (M365ExtensionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M365Extensions)(nil)).Elem()
}

func (o M365ExtensionsPtrOutput) ToM365ExtensionsPtrOutput() M365ExtensionsPtrOutput {
	return o
}

func (o M365ExtensionsPtrOutput) ToM365ExtensionsPtrOutputWithContext(ctx context.Context) M365ExtensionsPtrOutput {
	return o
}

func (o M365ExtensionsPtrOutput) Elem() M365ExtensionsOutput {
	return o.ApplyT(func(v *M365Extensions) M365Extensions {
		if v != nil {
			return *v
		}
		var ret M365Extensions
		return ret
	}).(M365ExtensionsOutput)
}

// The channel name
// Expected value is 'M365Extensions'.
func (o M365ExtensionsPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365Extensions) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o M365ExtensionsPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365Extensions) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o M365ExtensionsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365Extensions) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// M365 Extensions definition
type M365ExtensionsResponse struct {
	// The channel name
	// Expected value is 'M365Extensions'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for M365ExtensionsResponse
func (val *M365ExtensionsResponse) Defaults() *M365ExtensionsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// M365 Extensions definition
type M365ExtensionsResponseOutput struct{ *pulumi.OutputState }

func (M365ExtensionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M365ExtensionsResponse)(nil)).Elem()
}

func (o M365ExtensionsResponseOutput) ToM365ExtensionsResponseOutput() M365ExtensionsResponseOutput {
	return o
}

func (o M365ExtensionsResponseOutput) ToM365ExtensionsResponseOutputWithContext(ctx context.Context) M365ExtensionsResponseOutput {
	return o
}

// The channel name
// Expected value is 'M365Extensions'.
func (o M365ExtensionsResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v M365ExtensionsResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o M365ExtensionsResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M365ExtensionsResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o M365ExtensionsResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M365ExtensionsResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o M365ExtensionsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v M365ExtensionsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type M365ExtensionsResponsePtrOutput struct{ *pulumi.OutputState }

func (M365ExtensionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M365ExtensionsResponse)(nil)).Elem()
}

func (o M365ExtensionsResponsePtrOutput) ToM365ExtensionsResponsePtrOutput() M365ExtensionsResponsePtrOutput {
	return o
}

func (o M365ExtensionsResponsePtrOutput) ToM365ExtensionsResponsePtrOutputWithContext(ctx context.Context) M365ExtensionsResponsePtrOutput {
	return o
}

func (o M365ExtensionsResponsePtrOutput) Elem() M365ExtensionsResponseOutput {
	return o.ApplyT(func(v *M365ExtensionsResponse) M365ExtensionsResponse {
		if v != nil {
			return *v
		}
		var ret M365ExtensionsResponse
		return ret
	}).(M365ExtensionsResponseOutput)
}

// The channel name
// Expected value is 'M365Extensions'.
func (o M365ExtensionsResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365ExtensionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o M365ExtensionsResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365ExtensionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o M365ExtensionsResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365ExtensionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o M365ExtensionsResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M365ExtensionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Microsoft Teams channel definition
type MsTeamsChannel struct {
	// The channel name
	// Expected value is 'MsTeamsChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for MsTeamsChannel
func (val *MsTeamsChannel) Defaults() *MsTeamsChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// MsTeamsChannelInput is an input type that accepts MsTeamsChannelArgs and MsTeamsChannelOutput values.
// You can construct a concrete instance of `MsTeamsChannelInput` via:
//
//	MsTeamsChannelArgs{...}
type MsTeamsChannelInput interface {
	pulumi.Input

	ToMsTeamsChannelOutput() MsTeamsChannelOutput
	ToMsTeamsChannelOutputWithContext(context.Context) MsTeamsChannelOutput
}

// Microsoft Teams channel definition
type MsTeamsChannelArgs struct {
	// The channel name
	// Expected value is 'MsTeamsChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties MsTeamsChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for MsTeamsChannelArgs
func (val *MsTeamsChannelArgs) Defaults() *MsTeamsChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}

	return &tmp
}
func (MsTeamsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannel)(nil)).Elem()
}

func (i MsTeamsChannelArgs) ToMsTeamsChannelOutput() MsTeamsChannelOutput {
	return i.ToMsTeamsChannelOutputWithContext(context.Background())
}

func (i MsTeamsChannelArgs) ToMsTeamsChannelOutputWithContext(ctx context.Context) MsTeamsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelOutput)
}

func (i MsTeamsChannelArgs) ToMsTeamsChannelPtrOutput() MsTeamsChannelPtrOutput {
	return i.ToMsTeamsChannelPtrOutputWithContext(context.Background())
}

func (i MsTeamsChannelArgs) ToMsTeamsChannelPtrOutputWithContext(ctx context.Context) MsTeamsChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelOutput).ToMsTeamsChannelPtrOutputWithContext(ctx)
}

// MsTeamsChannelPtrInput is an input type that accepts MsTeamsChannelArgs, MsTeamsChannelPtr and MsTeamsChannelPtrOutput values.
// You can construct a concrete instance of `MsTeamsChannelPtrInput` via:
//
//	        MsTeamsChannelArgs{...}
//
//	or:
//
//	        nil
type MsTeamsChannelPtrInput interface {
	pulumi.Input

	ToMsTeamsChannelPtrOutput() MsTeamsChannelPtrOutput
	ToMsTeamsChannelPtrOutputWithContext(context.Context) MsTeamsChannelPtrOutput
}

type msTeamsChannelPtrType MsTeamsChannelArgs

func MsTeamsChannelPtr(v *MsTeamsChannelArgs) MsTeamsChannelPtrInput {
	return (*msTeamsChannelPtrType)(v)
}

func (*msTeamsChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannel)(nil)).Elem()
}

func (i *msTeamsChannelPtrType) ToMsTeamsChannelPtrOutput() MsTeamsChannelPtrOutput {
	return i.ToMsTeamsChannelPtrOutputWithContext(context.Background())
}

func (i *msTeamsChannelPtrType) ToMsTeamsChannelPtrOutputWithContext(ctx context.Context) MsTeamsChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPtrOutput)
}

// Microsoft Teams channel definition
type MsTeamsChannelOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannel)(nil)).Elem()
}

func (o MsTeamsChannelOutput) ToMsTeamsChannelOutput() MsTeamsChannelOutput {
	return o
}

func (o MsTeamsChannelOutput) ToMsTeamsChannelOutputWithContext(ctx context.Context) MsTeamsChannelOutput {
	return o
}

func (o MsTeamsChannelOutput) ToMsTeamsChannelPtrOutput() MsTeamsChannelPtrOutput {
	return o.ToMsTeamsChannelPtrOutputWithContext(context.Background())
}

func (o MsTeamsChannelOutput) ToMsTeamsChannelPtrOutputWithContext(ctx context.Context) MsTeamsChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MsTeamsChannel) *MsTeamsChannel {
		return &v
	}).(MsTeamsChannelPtrOutput)
}

// The channel name
// Expected value is 'MsTeamsChannel'.
func (o MsTeamsChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v MsTeamsChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o MsTeamsChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o MsTeamsChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Microsoft Teams channel resource
func (o MsTeamsChannelOutput) Properties() MsTeamsChannelPropertiesPtrOutput {
	return o.ApplyT(func(v MsTeamsChannel) *MsTeamsChannelProperties { return v.Properties }).(MsTeamsChannelPropertiesPtrOutput)
}

type MsTeamsChannelPtrOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannel)(nil)).Elem()
}

func (o MsTeamsChannelPtrOutput) ToMsTeamsChannelPtrOutput() MsTeamsChannelPtrOutput {
	return o
}

func (o MsTeamsChannelPtrOutput) ToMsTeamsChannelPtrOutputWithContext(ctx context.Context) MsTeamsChannelPtrOutput {
	return o
}

func (o MsTeamsChannelPtrOutput) Elem() MsTeamsChannelOutput {
	return o.ApplyT(func(v *MsTeamsChannel) MsTeamsChannel {
		if v != nil {
			return *v
		}
		var ret MsTeamsChannel
		return ret
	}).(MsTeamsChannelOutput)
}

// The channel name
// Expected value is 'MsTeamsChannel'.
func (o MsTeamsChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o MsTeamsChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o MsTeamsChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Microsoft Teams channel resource
func (o MsTeamsChannelPtrOutput) Properties() MsTeamsChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannel) *MsTeamsChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MsTeamsChannelPropertiesPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelProperties struct {
	// Whether this channel accepted terms
	AcceptedTerms *bool `pulumi:"acceptedTerms"`
	// Webhook for Microsoft Teams channel calls
	CallingWebhook *string `pulumi:"callingWebhook"`
	// Deployment environment for Microsoft Teams channel calls
	DeploymentEnvironment *string `pulumi:"deploymentEnvironment"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Webhook for Microsoft Teams channel calls
	IncomingCallRoute *string `pulumi:"incomingCallRoute"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for MsTeamsChannelProperties
func (val *MsTeamsChannelProperties) Defaults() *MsTeamsChannelProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeploymentEnvironment == nil {
		deploymentEnvironment_ := "FallbackDeploymentEnvironment"
		tmp.DeploymentEnvironment = &deploymentEnvironment_
	}
	if tmp.EnableCalling == nil {
		enableCalling_ := false
		tmp.EnableCalling = &enableCalling_
	}
	return &tmp
}

// MsTeamsChannelPropertiesInput is an input type that accepts MsTeamsChannelPropertiesArgs and MsTeamsChannelPropertiesOutput values.
// You can construct a concrete instance of `MsTeamsChannelPropertiesInput` via:
//
//	MsTeamsChannelPropertiesArgs{...}
type MsTeamsChannelPropertiesInput interface {
	pulumi.Input

	ToMsTeamsChannelPropertiesOutput() MsTeamsChannelPropertiesOutput
	ToMsTeamsChannelPropertiesOutputWithContext(context.Context) MsTeamsChannelPropertiesOutput
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesArgs struct {
	// Whether this channel accepted terms
	AcceptedTerms pulumi.BoolPtrInput `pulumi:"acceptedTerms"`
	// Webhook for Microsoft Teams channel calls
	CallingWebhook pulumi.StringPtrInput `pulumi:"callingWebhook"`
	// Deployment environment for Microsoft Teams channel calls
	DeploymentEnvironment pulumi.StringPtrInput `pulumi:"deploymentEnvironment"`
	// Enable calling for Microsoft Teams channel
	EnableCalling pulumi.BoolPtrInput `pulumi:"enableCalling"`
	// Webhook for Microsoft Teams channel calls
	IncomingCallRoute pulumi.StringPtrInput `pulumi:"incomingCallRoute"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for MsTeamsChannelPropertiesArgs
func (val *MsTeamsChannelPropertiesArgs) Defaults() *MsTeamsChannelPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeploymentEnvironment == nil {
		tmp.DeploymentEnvironment = pulumi.StringPtr("FallbackDeploymentEnvironment")
	}
	if tmp.EnableCalling == nil {
		tmp.EnableCalling = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (MsTeamsChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelProperties)(nil)).Elem()
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesOutput() MsTeamsChannelPropertiesOutput {
	return i.ToMsTeamsChannelPropertiesOutputWithContext(context.Background())
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPropertiesOutput)
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput {
	return i.ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i MsTeamsChannelPropertiesArgs) ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPropertiesOutput).ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx)
}

// MsTeamsChannelPropertiesPtrInput is an input type that accepts MsTeamsChannelPropertiesArgs, MsTeamsChannelPropertiesPtr and MsTeamsChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `MsTeamsChannelPropertiesPtrInput` via:
//
//	        MsTeamsChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type MsTeamsChannelPropertiesPtrInput interface {
	pulumi.Input

	ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput
	ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Context) MsTeamsChannelPropertiesPtrOutput
}

type msTeamsChannelPropertiesPtrType MsTeamsChannelPropertiesArgs

func MsTeamsChannelPropertiesPtr(v *MsTeamsChannelPropertiesArgs) MsTeamsChannelPropertiesPtrInput {
	return (*msTeamsChannelPropertiesPtrType)(v)
}

func (*msTeamsChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannelProperties)(nil)).Elem()
}

func (i *msTeamsChannelPropertiesPtrType) ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput {
	return i.ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *msTeamsChannelPropertiesPtrType) ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MsTeamsChannelPropertiesPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelProperties)(nil)).Elem()
}

func (o MsTeamsChannelPropertiesOutput) ToMsTeamsChannelPropertiesOutput() MsTeamsChannelPropertiesOutput {
	return o
}

func (o MsTeamsChannelPropertiesOutput) ToMsTeamsChannelPropertiesOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesOutput {
	return o
}

func (o MsTeamsChannelPropertiesOutput) ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput {
	return o.ToMsTeamsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o MsTeamsChannelPropertiesOutput) ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MsTeamsChannelProperties) *MsTeamsChannelProperties {
		return &v
	}).(MsTeamsChannelPropertiesPtrOutput)
}

// Whether this channel accepted terms
func (o MsTeamsChannelPropertiesOutput) AcceptedTerms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelProperties) *bool { return v.AcceptedTerms }).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesOutput) CallingWebhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelProperties) *string { return v.CallingWebhook }).(pulumi.StringPtrOutput)
}

// Deployment environment for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesOutput) DeploymentEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelProperties) *string { return v.DeploymentEnvironment }).(pulumi.StringPtrOutput)
}

// Enable calling for Microsoft Teams channel
func (o MsTeamsChannelPropertiesOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelProperties) *bool { return v.EnableCalling }).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelProperties) *string { return v.IncomingCallRoute }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o MsTeamsChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MsTeamsChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type MsTeamsChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannelProperties)(nil)).Elem()
}

func (o MsTeamsChannelPropertiesPtrOutput) ToMsTeamsChannelPropertiesPtrOutput() MsTeamsChannelPropertiesPtrOutput {
	return o
}

func (o MsTeamsChannelPropertiesPtrOutput) ToMsTeamsChannelPropertiesPtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesPtrOutput {
	return o
}

func (o MsTeamsChannelPropertiesPtrOutput) Elem() MsTeamsChannelPropertiesOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) MsTeamsChannelProperties {
		if v != nil {
			return *v
		}
		var ret MsTeamsChannelProperties
		return ret
	}).(MsTeamsChannelPropertiesOutput)
}

// Whether this channel accepted terms
func (o MsTeamsChannelPropertiesPtrOutput) AcceptedTerms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AcceptedTerms
	}).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesPtrOutput) CallingWebhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CallingWebhook
	}).(pulumi.StringPtrOutput)
}

// Deployment environment for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesPtrOutput) DeploymentEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentEnvironment
	}).(pulumi.StringPtrOutput)
}

// Enable calling for Microsoft Teams channel
func (o MsTeamsChannelPropertiesPtrOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCalling
	}).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesPtrOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.IncomingCallRoute
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o MsTeamsChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesResponse struct {
	// Whether this channel accepted terms
	AcceptedTerms *bool `pulumi:"acceptedTerms"`
	// Webhook for Microsoft Teams channel calls
	CallingWebhook *string `pulumi:"callingWebhook"`
	// Deployment environment for Microsoft Teams channel calls
	DeploymentEnvironment *string `pulumi:"deploymentEnvironment"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Webhook for Microsoft Teams channel calls
	IncomingCallRoute *string `pulumi:"incomingCallRoute"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for MsTeamsChannelPropertiesResponse
func (val *MsTeamsChannelPropertiesResponse) Defaults() *MsTeamsChannelPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeploymentEnvironment == nil {
		deploymentEnvironment_ := "FallbackDeploymentEnvironment"
		tmp.DeploymentEnvironment = &deploymentEnvironment_
	}
	if tmp.EnableCalling == nil {
		enableCalling_ := false
		tmp.EnableCalling = &enableCalling_
	}
	return &tmp
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelPropertiesResponse)(nil)).Elem()
}

func (o MsTeamsChannelPropertiesResponseOutput) ToMsTeamsChannelPropertiesResponseOutput() MsTeamsChannelPropertiesResponseOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponseOutput) ToMsTeamsChannelPropertiesResponseOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesResponseOutput {
	return o
}

// Whether this channel accepted terms
func (o MsTeamsChannelPropertiesResponseOutput) AcceptedTerms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *bool { return v.AcceptedTerms }).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesResponseOutput) CallingWebhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *string { return v.CallingWebhook }).(pulumi.StringPtrOutput)
}

// Deployment environment for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesResponseOutput) DeploymentEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *string { return v.DeploymentEnvironment }).(pulumi.StringPtrOutput)
}

// Enable calling for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponseOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *bool { return v.EnableCalling }).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesResponseOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) *string { return v.IncomingCallRoute }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o MsTeamsChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MsTeamsChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type MsTeamsChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannelPropertiesResponse)(nil)).Elem()
}

func (o MsTeamsChannelPropertiesResponsePtrOutput) ToMsTeamsChannelPropertiesResponsePtrOutput() MsTeamsChannelPropertiesResponsePtrOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponsePtrOutput) ToMsTeamsChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) MsTeamsChannelPropertiesResponsePtrOutput {
	return o
}

func (o MsTeamsChannelPropertiesResponsePtrOutput) Elem() MsTeamsChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) MsTeamsChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret MsTeamsChannelPropertiesResponse
		return ret
	}).(MsTeamsChannelPropertiesResponseOutput)
}

// Whether this channel accepted terms
func (o MsTeamsChannelPropertiesResponsePtrOutput) AcceptedTerms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AcceptedTerms
	}).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesResponsePtrOutput) CallingWebhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CallingWebhook
	}).(pulumi.StringPtrOutput)
}

// Deployment environment for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesResponsePtrOutput) DeploymentEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentEnvironment
	}).(pulumi.StringPtrOutput)
}

// Enable calling for Microsoft Teams channel
func (o MsTeamsChannelPropertiesResponsePtrOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCalling
	}).(pulumi.BoolPtrOutput)
}

// Webhook for Microsoft Teams channel calls
func (o MsTeamsChannelPropertiesResponsePtrOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IncomingCallRoute
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o MsTeamsChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Microsoft Teams channel definition
type MsTeamsChannelResponse struct {
	// The channel name
	// Expected value is 'MsTeamsChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for MsTeamsChannelResponse
func (val *MsTeamsChannelResponse) Defaults() *MsTeamsChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// Microsoft Teams channel definition
type MsTeamsChannelResponseOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsTeamsChannelResponse)(nil)).Elem()
}

func (o MsTeamsChannelResponseOutput) ToMsTeamsChannelResponseOutput() MsTeamsChannelResponseOutput {
	return o
}

func (o MsTeamsChannelResponseOutput) ToMsTeamsChannelResponseOutputWithContext(ctx context.Context) MsTeamsChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'MsTeamsChannel'.
func (o MsTeamsChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o MsTeamsChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o MsTeamsChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Microsoft Teams channel resource
func (o MsTeamsChannelResponseOutput) Properties() MsTeamsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) *MsTeamsChannelPropertiesResponse { return v.Properties }).(MsTeamsChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o MsTeamsChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MsTeamsChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type MsTeamsChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (MsTeamsChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsTeamsChannelResponse)(nil)).Elem()
}

func (o MsTeamsChannelResponsePtrOutput) ToMsTeamsChannelResponsePtrOutput() MsTeamsChannelResponsePtrOutput {
	return o
}

func (o MsTeamsChannelResponsePtrOutput) ToMsTeamsChannelResponsePtrOutputWithContext(ctx context.Context) MsTeamsChannelResponsePtrOutput {
	return o
}

func (o MsTeamsChannelResponsePtrOutput) Elem() MsTeamsChannelResponseOutput {
	return o.ApplyT(func(v *MsTeamsChannelResponse) MsTeamsChannelResponse {
		if v != nil {
			return *v
		}
		var ret MsTeamsChannelResponse
		return ret
	}).(MsTeamsChannelResponseOutput)
}

// The channel name
// Expected value is 'MsTeamsChannel'.
func (o MsTeamsChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o MsTeamsChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o MsTeamsChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Microsoft Teams channel resource
func (o MsTeamsChannelResponsePtrOutput) Properties() MsTeamsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelResponse) *MsTeamsChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MsTeamsChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o MsTeamsChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MsTeamsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Omnichannel channel definition
type Omnichannel struct {
	// The channel name
	// Expected value is 'Omnichannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
}

// Defaults sets the appropriate defaults for Omnichannel
func (val *Omnichannel) Defaults() *Omnichannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// OmnichannelInput is an input type that accepts OmnichannelArgs and OmnichannelOutput values.
// You can construct a concrete instance of `OmnichannelInput` via:
//
//	OmnichannelArgs{...}
type OmnichannelInput interface {
	pulumi.Input

	ToOmnichannelOutput() OmnichannelOutput
	ToOmnichannelOutputWithContext(context.Context) OmnichannelOutput
}

// Omnichannel channel definition
type OmnichannelArgs struct {
	// The channel name
	// Expected value is 'Omnichannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

// Defaults sets the appropriate defaults for OmnichannelArgs
func (val *OmnichannelArgs) Defaults() *OmnichannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (OmnichannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Omnichannel)(nil)).Elem()
}

func (i OmnichannelArgs) ToOmnichannelOutput() OmnichannelOutput {
	return i.ToOmnichannelOutputWithContext(context.Background())
}

func (i OmnichannelArgs) ToOmnichannelOutputWithContext(ctx context.Context) OmnichannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OmnichannelOutput)
}

func (i OmnichannelArgs) ToOmnichannelPtrOutput() OmnichannelPtrOutput {
	return i.ToOmnichannelPtrOutputWithContext(context.Background())
}

func (i OmnichannelArgs) ToOmnichannelPtrOutputWithContext(ctx context.Context) OmnichannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OmnichannelOutput).ToOmnichannelPtrOutputWithContext(ctx)
}

// OmnichannelPtrInput is an input type that accepts OmnichannelArgs, OmnichannelPtr and OmnichannelPtrOutput values.
// You can construct a concrete instance of `OmnichannelPtrInput` via:
//
//	        OmnichannelArgs{...}
//
//	or:
//
//	        nil
type OmnichannelPtrInput interface {
	pulumi.Input

	ToOmnichannelPtrOutput() OmnichannelPtrOutput
	ToOmnichannelPtrOutputWithContext(context.Context) OmnichannelPtrOutput
}

type omnichannelPtrType OmnichannelArgs

func OmnichannelPtr(v *OmnichannelArgs) OmnichannelPtrInput {
	return (*omnichannelPtrType)(v)
}

func (*omnichannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Omnichannel)(nil)).Elem()
}

func (i *omnichannelPtrType) ToOmnichannelPtrOutput() OmnichannelPtrOutput {
	return i.ToOmnichannelPtrOutputWithContext(context.Background())
}

func (i *omnichannelPtrType) ToOmnichannelPtrOutputWithContext(ctx context.Context) OmnichannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OmnichannelPtrOutput)
}

// Omnichannel channel definition
type OmnichannelOutput struct{ *pulumi.OutputState }

func (OmnichannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Omnichannel)(nil)).Elem()
}

func (o OmnichannelOutput) ToOmnichannelOutput() OmnichannelOutput {
	return o
}

func (o OmnichannelOutput) ToOmnichannelOutputWithContext(ctx context.Context) OmnichannelOutput {
	return o
}

func (o OmnichannelOutput) ToOmnichannelPtrOutput() OmnichannelPtrOutput {
	return o.ToOmnichannelPtrOutputWithContext(context.Background())
}

func (o OmnichannelOutput) ToOmnichannelPtrOutputWithContext(ctx context.Context) OmnichannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Omnichannel) *Omnichannel {
		return &v
	}).(OmnichannelPtrOutput)
}

// The channel name
// Expected value is 'Omnichannel'.
func (o OmnichannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v Omnichannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o OmnichannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Omnichannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OmnichannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Omnichannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type OmnichannelPtrOutput struct{ *pulumi.OutputState }

func (OmnichannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Omnichannel)(nil)).Elem()
}

func (o OmnichannelPtrOutput) ToOmnichannelPtrOutput() OmnichannelPtrOutput {
	return o
}

func (o OmnichannelPtrOutput) ToOmnichannelPtrOutputWithContext(ctx context.Context) OmnichannelPtrOutput {
	return o
}

func (o OmnichannelPtrOutput) Elem() OmnichannelOutput {
	return o.ApplyT(func(v *Omnichannel) Omnichannel {
		if v != nil {
			return *v
		}
		var ret Omnichannel
		return ret
	}).(OmnichannelOutput)
}

// The channel name
// Expected value is 'Omnichannel'.
func (o OmnichannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Omnichannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o OmnichannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Omnichannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OmnichannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Omnichannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Omnichannel channel definition
type OmnichannelResponse struct {
	// The channel name
	// Expected value is 'Omnichannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for OmnichannelResponse
func (val *OmnichannelResponse) Defaults() *OmnichannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Omnichannel channel definition
type OmnichannelResponseOutput struct{ *pulumi.OutputState }

func (OmnichannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OmnichannelResponse)(nil)).Elem()
}

func (o OmnichannelResponseOutput) ToOmnichannelResponseOutput() OmnichannelResponseOutput {
	return o
}

func (o OmnichannelResponseOutput) ToOmnichannelResponseOutputWithContext(ctx context.Context) OmnichannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'Omnichannel'.
func (o OmnichannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v OmnichannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o OmnichannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OmnichannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OmnichannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OmnichannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o OmnichannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OmnichannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type OmnichannelResponsePtrOutput struct{ *pulumi.OutputState }

func (OmnichannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OmnichannelResponse)(nil)).Elem()
}

func (o OmnichannelResponsePtrOutput) ToOmnichannelResponsePtrOutput() OmnichannelResponsePtrOutput {
	return o
}

func (o OmnichannelResponsePtrOutput) ToOmnichannelResponsePtrOutputWithContext(ctx context.Context) OmnichannelResponsePtrOutput {
	return o
}

func (o OmnichannelResponsePtrOutput) Elem() OmnichannelResponseOutput {
	return o.ApplyT(func(v *OmnichannelResponse) OmnichannelResponse {
		if v != nil {
			return *v
		}
		var ret OmnichannelResponse
		return ret
	}).(OmnichannelResponseOutput)
}

// The channel name
// Expected value is 'Omnichannel'.
func (o OmnichannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OmnichannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o OmnichannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OmnichannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OmnichannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OmnichannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o OmnichannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OmnichannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Outlook channel definition
type OutlookChannel struct {
	// The channel name
	// Expected value is 'OutlookChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
}

// Defaults sets the appropriate defaults for OutlookChannel
func (val *OutlookChannel) Defaults() *OutlookChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// OutlookChannelInput is an input type that accepts OutlookChannelArgs and OutlookChannelOutput values.
// You can construct a concrete instance of `OutlookChannelInput` via:
//
//	OutlookChannelArgs{...}
type OutlookChannelInput interface {
	pulumi.Input

	ToOutlookChannelOutput() OutlookChannelOutput
	ToOutlookChannelOutputWithContext(context.Context) OutlookChannelOutput
}

// Outlook channel definition
type OutlookChannelArgs struct {
	// The channel name
	// Expected value is 'OutlookChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

// Defaults sets the appropriate defaults for OutlookChannelArgs
func (val *OutlookChannelArgs) Defaults() *OutlookChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (OutlookChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutlookChannel)(nil)).Elem()
}

func (i OutlookChannelArgs) ToOutlookChannelOutput() OutlookChannelOutput {
	return i.ToOutlookChannelOutputWithContext(context.Background())
}

func (i OutlookChannelArgs) ToOutlookChannelOutputWithContext(ctx context.Context) OutlookChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutlookChannelOutput)
}

func (i OutlookChannelArgs) ToOutlookChannelPtrOutput() OutlookChannelPtrOutput {
	return i.ToOutlookChannelPtrOutputWithContext(context.Background())
}

func (i OutlookChannelArgs) ToOutlookChannelPtrOutputWithContext(ctx context.Context) OutlookChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutlookChannelOutput).ToOutlookChannelPtrOutputWithContext(ctx)
}

// OutlookChannelPtrInput is an input type that accepts OutlookChannelArgs, OutlookChannelPtr and OutlookChannelPtrOutput values.
// You can construct a concrete instance of `OutlookChannelPtrInput` via:
//
//	        OutlookChannelArgs{...}
//
//	or:
//
//	        nil
type OutlookChannelPtrInput interface {
	pulumi.Input

	ToOutlookChannelPtrOutput() OutlookChannelPtrOutput
	ToOutlookChannelPtrOutputWithContext(context.Context) OutlookChannelPtrOutput
}

type outlookChannelPtrType OutlookChannelArgs

func OutlookChannelPtr(v *OutlookChannelArgs) OutlookChannelPtrInput {
	return (*outlookChannelPtrType)(v)
}

func (*outlookChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutlookChannel)(nil)).Elem()
}

func (i *outlookChannelPtrType) ToOutlookChannelPtrOutput() OutlookChannelPtrOutput {
	return i.ToOutlookChannelPtrOutputWithContext(context.Background())
}

func (i *outlookChannelPtrType) ToOutlookChannelPtrOutputWithContext(ctx context.Context) OutlookChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutlookChannelPtrOutput)
}

// Outlook channel definition
type OutlookChannelOutput struct{ *pulumi.OutputState }

func (OutlookChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutlookChannel)(nil)).Elem()
}

func (o OutlookChannelOutput) ToOutlookChannelOutput() OutlookChannelOutput {
	return o
}

func (o OutlookChannelOutput) ToOutlookChannelOutputWithContext(ctx context.Context) OutlookChannelOutput {
	return o
}

func (o OutlookChannelOutput) ToOutlookChannelPtrOutput() OutlookChannelPtrOutput {
	return o.ToOutlookChannelPtrOutputWithContext(context.Background())
}

func (o OutlookChannelOutput) ToOutlookChannelPtrOutputWithContext(ctx context.Context) OutlookChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutlookChannel) *OutlookChannel {
		return &v
	}).(OutlookChannelPtrOutput)
}

// The channel name
// Expected value is 'OutlookChannel'.
func (o OutlookChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v OutlookChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o OutlookChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutlookChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OutlookChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutlookChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type OutlookChannelPtrOutput struct{ *pulumi.OutputState }

func (OutlookChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutlookChannel)(nil)).Elem()
}

func (o OutlookChannelPtrOutput) ToOutlookChannelPtrOutput() OutlookChannelPtrOutput {
	return o
}

func (o OutlookChannelPtrOutput) ToOutlookChannelPtrOutputWithContext(ctx context.Context) OutlookChannelPtrOutput {
	return o
}

func (o OutlookChannelPtrOutput) Elem() OutlookChannelOutput {
	return o.ApplyT(func(v *OutlookChannel) OutlookChannel {
		if v != nil {
			return *v
		}
		var ret OutlookChannel
		return ret
	}).(OutlookChannelOutput)
}

// The channel name
// Expected value is 'OutlookChannel'.
func (o OutlookChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o OutlookChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OutlookChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Outlook channel definition
type OutlookChannelResponse struct {
	// The channel name
	// Expected value is 'OutlookChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for OutlookChannelResponse
func (val *OutlookChannelResponse) Defaults() *OutlookChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Outlook channel definition
type OutlookChannelResponseOutput struct{ *pulumi.OutputState }

func (OutlookChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutlookChannelResponse)(nil)).Elem()
}

func (o OutlookChannelResponseOutput) ToOutlookChannelResponseOutput() OutlookChannelResponseOutput {
	return o
}

func (o OutlookChannelResponseOutput) ToOutlookChannelResponseOutputWithContext(ctx context.Context) OutlookChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'OutlookChannel'.
func (o OutlookChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v OutlookChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o OutlookChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutlookChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OutlookChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutlookChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o OutlookChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OutlookChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type OutlookChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (OutlookChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutlookChannelResponse)(nil)).Elem()
}

func (o OutlookChannelResponsePtrOutput) ToOutlookChannelResponsePtrOutput() OutlookChannelResponsePtrOutput {
	return o
}

func (o OutlookChannelResponsePtrOutput) ToOutlookChannelResponsePtrOutputWithContext(ctx context.Context) OutlookChannelResponsePtrOutput {
	return o
}

func (o OutlookChannelResponsePtrOutput) Elem() OutlookChannelResponseOutput {
	return o.ApplyT(func(v *OutlookChannelResponse) OutlookChannelResponse {
		if v != nil {
			return *v
		}
		var ret OutlookChannelResponse
		return ret
	}).(OutlookChannelResponseOutput)
}

// The channel name
// Expected value is 'OutlookChannel'.
func (o OutlookChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o OutlookChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o OutlookChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o OutlookChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutlookChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Group ids
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Group ids
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// SearchAssistant definition
type SearchAssistant struct {
	// The channel name
	// Expected value is 'SearchAssistant'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
}

// Defaults sets the appropriate defaults for SearchAssistant
func (val *SearchAssistant) Defaults() *SearchAssistant {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// SearchAssistantInput is an input type that accepts SearchAssistantArgs and SearchAssistantOutput values.
// You can construct a concrete instance of `SearchAssistantInput` via:
//
//	SearchAssistantArgs{...}
type SearchAssistantInput interface {
	pulumi.Input

	ToSearchAssistantOutput() SearchAssistantOutput
	ToSearchAssistantOutputWithContext(context.Context) SearchAssistantOutput
}

// SearchAssistant definition
type SearchAssistantArgs struct {
	// The channel name
	// Expected value is 'SearchAssistant'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

// Defaults sets the appropriate defaults for SearchAssistantArgs
func (val *SearchAssistantArgs) Defaults() *SearchAssistantArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (SearchAssistantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchAssistant)(nil)).Elem()
}

func (i SearchAssistantArgs) ToSearchAssistantOutput() SearchAssistantOutput {
	return i.ToSearchAssistantOutputWithContext(context.Background())
}

func (i SearchAssistantArgs) ToSearchAssistantOutputWithContext(ctx context.Context) SearchAssistantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchAssistantOutput)
}

func (i SearchAssistantArgs) ToSearchAssistantPtrOutput() SearchAssistantPtrOutput {
	return i.ToSearchAssistantPtrOutputWithContext(context.Background())
}

func (i SearchAssistantArgs) ToSearchAssistantPtrOutputWithContext(ctx context.Context) SearchAssistantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchAssistantOutput).ToSearchAssistantPtrOutputWithContext(ctx)
}

// SearchAssistantPtrInput is an input type that accepts SearchAssistantArgs, SearchAssistantPtr and SearchAssistantPtrOutput values.
// You can construct a concrete instance of `SearchAssistantPtrInput` via:
//
//	        SearchAssistantArgs{...}
//
//	or:
//
//	        nil
type SearchAssistantPtrInput interface {
	pulumi.Input

	ToSearchAssistantPtrOutput() SearchAssistantPtrOutput
	ToSearchAssistantPtrOutputWithContext(context.Context) SearchAssistantPtrOutput
}

type searchAssistantPtrType SearchAssistantArgs

func SearchAssistantPtr(v *SearchAssistantArgs) SearchAssistantPtrInput {
	return (*searchAssistantPtrType)(v)
}

func (*searchAssistantPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SearchAssistant)(nil)).Elem()
}

func (i *searchAssistantPtrType) ToSearchAssistantPtrOutput() SearchAssistantPtrOutput {
	return i.ToSearchAssistantPtrOutputWithContext(context.Background())
}

func (i *searchAssistantPtrType) ToSearchAssistantPtrOutputWithContext(ctx context.Context) SearchAssistantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchAssistantPtrOutput)
}

// SearchAssistant definition
type SearchAssistantOutput struct{ *pulumi.OutputState }

func (SearchAssistantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchAssistant)(nil)).Elem()
}

func (o SearchAssistantOutput) ToSearchAssistantOutput() SearchAssistantOutput {
	return o
}

func (o SearchAssistantOutput) ToSearchAssistantOutputWithContext(ctx context.Context) SearchAssistantOutput {
	return o
}

func (o SearchAssistantOutput) ToSearchAssistantPtrOutput() SearchAssistantPtrOutput {
	return o.ToSearchAssistantPtrOutputWithContext(context.Background())
}

func (o SearchAssistantOutput) ToSearchAssistantPtrOutputWithContext(ctx context.Context) SearchAssistantPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SearchAssistant) *SearchAssistant {
		return &v
	}).(SearchAssistantPtrOutput)
}

// The channel name
// Expected value is 'SearchAssistant'.
func (o SearchAssistantOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SearchAssistant) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SearchAssistantOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SearchAssistant) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SearchAssistantOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SearchAssistant) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type SearchAssistantPtrOutput struct{ *pulumi.OutputState }

func (SearchAssistantPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SearchAssistant)(nil)).Elem()
}

func (o SearchAssistantPtrOutput) ToSearchAssistantPtrOutput() SearchAssistantPtrOutput {
	return o
}

func (o SearchAssistantPtrOutput) ToSearchAssistantPtrOutputWithContext(ctx context.Context) SearchAssistantPtrOutput {
	return o
}

func (o SearchAssistantPtrOutput) Elem() SearchAssistantOutput {
	return o.ApplyT(func(v *SearchAssistant) SearchAssistant {
		if v != nil {
			return *v
		}
		var ret SearchAssistant
		return ret
	}).(SearchAssistantOutput)
}

// The channel name
// Expected value is 'SearchAssistant'.
func (o SearchAssistantPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistant) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SearchAssistantPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistant) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SearchAssistantPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistant) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// SearchAssistant definition
type SearchAssistantResponse struct {
	// The channel name
	// Expected value is 'SearchAssistant'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for SearchAssistantResponse
func (val *SearchAssistantResponse) Defaults() *SearchAssistantResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// SearchAssistant definition
type SearchAssistantResponseOutput struct{ *pulumi.OutputState }

func (SearchAssistantResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchAssistantResponse)(nil)).Elem()
}

func (o SearchAssistantResponseOutput) ToSearchAssistantResponseOutput() SearchAssistantResponseOutput {
	return o
}

func (o SearchAssistantResponseOutput) ToSearchAssistantResponseOutputWithContext(ctx context.Context) SearchAssistantResponseOutput {
	return o
}

// The channel name
// Expected value is 'SearchAssistant'.
func (o SearchAssistantResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SearchAssistantResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SearchAssistantResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SearchAssistantResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SearchAssistantResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SearchAssistantResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o SearchAssistantResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SearchAssistantResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type SearchAssistantResponsePtrOutput struct{ *pulumi.OutputState }

func (SearchAssistantResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SearchAssistantResponse)(nil)).Elem()
}

func (o SearchAssistantResponsePtrOutput) ToSearchAssistantResponsePtrOutput() SearchAssistantResponsePtrOutput {
	return o
}

func (o SearchAssistantResponsePtrOutput) ToSearchAssistantResponsePtrOutputWithContext(ctx context.Context) SearchAssistantResponsePtrOutput {
	return o
}

func (o SearchAssistantResponsePtrOutput) Elem() SearchAssistantResponseOutput {
	return o.ApplyT(func(v *SearchAssistantResponse) SearchAssistantResponse {
		if v != nil {
			return *v
		}
		var ret SearchAssistantResponse
		return ret
	}).(SearchAssistantResponseOutput)
}

// The channel name
// Expected value is 'SearchAssistant'.
func (o SearchAssistantResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistantResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SearchAssistantResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistantResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SearchAssistantResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistantResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o SearchAssistantResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SearchAssistantResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponse struct {
	// Default Name for the Service Provider
	Default string `pulumi:"default"`
	// Description of the Service Provider
	Description string `pulumi:"description"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Help Url for the  Service Provider
	HelpUrl string `pulumi:"helpUrl"`
	// Meta data for the Service Provider
	Metadata ServiceProviderParameterResponseMetadata `pulumi:"metadata"`
	// Name of the Service Provider
	Name string `pulumi:"name"`
	// Type of the Service Provider
	Type string `pulumi:"type"`
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponseOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderParameterResponse)(nil)).Elem()
}

func (o ServiceProviderParameterResponseOutput) ToServiceProviderParameterResponseOutput() ServiceProviderParameterResponseOutput {
	return o
}

func (o ServiceProviderParameterResponseOutput) ToServiceProviderParameterResponseOutputWithContext(ctx context.Context) ServiceProviderParameterResponseOutput {
	return o
}

// Default Name for the Service Provider
func (o ServiceProviderParameterResponseOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Default }).(pulumi.StringOutput)
}

// Description of the Service Provider
func (o ServiceProviderParameterResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderParameterResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Help Url for the  Service Provider
func (o ServiceProviderParameterResponseOutput) HelpUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.HelpUrl }).(pulumi.StringOutput)
}

// Meta data for the Service Provider
func (o ServiceProviderParameterResponseOutput) Metadata() ServiceProviderParameterResponseMetadataOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) ServiceProviderParameterResponseMetadata { return v.Metadata }).(ServiceProviderParameterResponseMetadataOutput)
}

// Name of the Service Provider
func (o ServiceProviderParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the Service Provider
func (o ServiceProviderParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceProviderParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceProviderParameterResponse)(nil)).Elem()
}

func (o ServiceProviderParameterResponseArrayOutput) ToServiceProviderParameterResponseArrayOutput() ServiceProviderParameterResponseArrayOutput {
	return o
}

func (o ServiceProviderParameterResponseArrayOutput) ToServiceProviderParameterResponseArrayOutputWithContext(ctx context.Context) ServiceProviderParameterResponseArrayOutput {
	return o
}

func (o ServiceProviderParameterResponseArrayOutput) Index(i pulumi.IntInput) ServiceProviderParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceProviderParameterResponse {
		return vs[0].([]ServiceProviderParameterResponse)[vs[1].(int)]
	}).(ServiceProviderParameterResponseOutput)
}

// the constraints of the bot meta data.
type ServiceProviderParameterResponseConstraints struct {
	// Whether required the constraints of the bot meta data.
	Required *bool `pulumi:"required"`
}

// the constraints of the bot meta data.
type ServiceProviderParameterResponseConstraintsOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderParameterResponseConstraints)(nil)).Elem()
}

func (o ServiceProviderParameterResponseConstraintsOutput) ToServiceProviderParameterResponseConstraintsOutput() ServiceProviderParameterResponseConstraintsOutput {
	return o
}

func (o ServiceProviderParameterResponseConstraintsOutput) ToServiceProviderParameterResponseConstraintsOutputWithContext(ctx context.Context) ServiceProviderParameterResponseConstraintsOutput {
	return o
}

// Whether required the constraints of the bot meta data.
func (o ServiceProviderParameterResponseConstraintsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponseConstraints) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type ServiceProviderParameterResponseConstraintsPtrOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProviderParameterResponseConstraints)(nil)).Elem()
}

func (o ServiceProviderParameterResponseConstraintsPtrOutput) ToServiceProviderParameterResponseConstraintsPtrOutput() ServiceProviderParameterResponseConstraintsPtrOutput {
	return o
}

func (o ServiceProviderParameterResponseConstraintsPtrOutput) ToServiceProviderParameterResponseConstraintsPtrOutputWithContext(ctx context.Context) ServiceProviderParameterResponseConstraintsPtrOutput {
	return o
}

func (o ServiceProviderParameterResponseConstraintsPtrOutput) Elem() ServiceProviderParameterResponseConstraintsOutput {
	return o.ApplyT(func(v *ServiceProviderParameterResponseConstraints) ServiceProviderParameterResponseConstraints {
		if v != nil {
			return *v
		}
		var ret ServiceProviderParameterResponseConstraints
		return ret
	}).(ServiceProviderParameterResponseConstraintsOutput)
}

// Whether required the constraints of the bot meta data.
func (o ServiceProviderParameterResponseConstraintsPtrOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceProviderParameterResponseConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.Required
	}).(pulumi.BoolPtrOutput)
}

// Meta data for the Service Provider
type ServiceProviderParameterResponseMetadata struct {
	// the constraints of the bot meta data.
	Constraints *ServiceProviderParameterResponseConstraints `pulumi:"constraints"`
}

// Meta data for the Service Provider
type ServiceProviderParameterResponseMetadataOutput struct{ *pulumi.OutputState }

func (ServiceProviderParameterResponseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderParameterResponseMetadata)(nil)).Elem()
}

func (o ServiceProviderParameterResponseMetadataOutput) ToServiceProviderParameterResponseMetadataOutput() ServiceProviderParameterResponseMetadataOutput {
	return o
}

func (o ServiceProviderParameterResponseMetadataOutput) ToServiceProviderParameterResponseMetadataOutputWithContext(ctx context.Context) ServiceProviderParameterResponseMetadataOutput {
	return o
}

// the constraints of the bot meta data.
func (o ServiceProviderParameterResponseMetadataOutput) Constraints() ServiceProviderParameterResponseConstraintsPtrOutput {
	return o.ApplyT(func(v ServiceProviderParameterResponseMetadata) *ServiceProviderParameterResponseConstraints {
		return v.Constraints
	}).(ServiceProviderParameterResponseConstraintsPtrOutput)
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponse struct {
	// URL of Dev Portal
	DevPortalUrl string `pulumi:"devPortalUrl"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// The URL of icon
	IconUrl *string `pulumi:"iconUrl"`
	// Id for Service Provider
	Id string `pulumi:"id"`
	// The list of parameters for the Service Provider
	Parameters []ServiceProviderParameterResponse `pulumi:"parameters"`
	// Name of the Service Provider
	ServiceProviderName string `pulumi:"serviceProviderName"`
}

// Defaults sets the appropriate defaults for ServiceProviderPropertiesResponse
func (val *ServiceProviderPropertiesResponse) Defaults() *ServiceProviderPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IconUrl == nil {
		iconUrl_ := ""
		tmp.IconUrl = &iconUrl_
	}
	return &tmp
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ServiceProviderPropertiesResponseOutput) ToServiceProviderPropertiesResponseOutput() ServiceProviderPropertiesResponseOutput {
	return o
}

func (o ServiceProviderPropertiesResponseOutput) ToServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ServiceProviderPropertiesResponseOutput {
	return o
}

// URL of Dev Portal
func (o ServiceProviderPropertiesResponseOutput) DevPortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.DevPortalUrl }).(pulumi.StringOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The URL of icon
func (o ServiceProviderPropertiesResponseOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Id for Service Provider
func (o ServiceProviderPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The list of parameters for the Service Provider
func (o ServiceProviderPropertiesResponseOutput) Parameters() ServiceProviderParameterResponseArrayOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) []ServiceProviderParameterResponse { return v.Parameters }).(ServiceProviderParameterResponseArrayOutput)
}

// Name of the Service Provider
func (o ServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceProviderPropertiesResponse) string { return v.ServiceProviderName }).(pulumi.StringOutput)
}

type ServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ServiceProviderPropertiesResponsePtrOutput) ToServiceProviderPropertiesResponsePtrOutput() ServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ServiceProviderPropertiesResponsePtrOutput) ToServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ServiceProviderPropertiesResponsePtrOutput) Elem() ServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) ServiceProviderPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ServiceProviderPropertiesResponse
		return ret
	}).(ServiceProviderPropertiesResponseOutput)
}

// URL of Dev Portal
func (o ServiceProviderPropertiesResponsePtrOutput) DevPortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DevPortalUrl
	}).(pulumi.StringPtrOutput)
}

// Display Name of the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The URL of icon
func (o ServiceProviderPropertiesResponsePtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Id for Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The list of parameters for the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) Parameters() ServiceProviderParameterResponseArrayOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) []ServiceProviderParameterResponse {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ServiceProviderParameterResponseArrayOutput)
}

// Name of the Service Provider
func (o ServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Service Provider Definition
type ServiceProviderResponse struct {
	// The Properties of a Service Provider Object
	Properties *ServiceProviderPropertiesResponse `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for ServiceProviderResponse
func (val *ServiceProviderResponse) Defaults() *ServiceProviderResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// Service Provider Definition
type ServiceProviderResponseOutput struct{ *pulumi.OutputState }

func (ServiceProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderResponse)(nil)).Elem()
}

func (o ServiceProviderResponseOutput) ToServiceProviderResponseOutput() ServiceProviderResponseOutput {
	return o
}

func (o ServiceProviderResponseOutput) ToServiceProviderResponseOutputWithContext(ctx context.Context) ServiceProviderResponseOutput {
	return o
}

// The Properties of a Service Provider Object
func (o ServiceProviderResponseOutput) Properties() ServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ServiceProviderResponse) *ServiceProviderPropertiesResponse { return v.Properties }).(ServiceProviderPropertiesResponsePtrOutput)
}

type ServiceProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceProviderResponse)(nil)).Elem()
}

func (o ServiceProviderResponseArrayOutput) ToServiceProviderResponseArrayOutput() ServiceProviderResponseArrayOutput {
	return o
}

func (o ServiceProviderResponseArrayOutput) ToServiceProviderResponseArrayOutputWithContext(ctx context.Context) ServiceProviderResponseArrayOutput {
	return o
}

func (o ServiceProviderResponseArrayOutput) Index(i pulumi.IntInput) ServiceProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceProviderResponse {
		return vs[0].([]ServiceProviderResponse)[vs[1].(int)]
	}).(ServiceProviderResponseOutput)
}

// A site for the channel
type SiteResponse struct {
	// DirectLine application id
	AppId *string `pulumi:"appId"`
	// Entity Tag
	ETag *string `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled *bool `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled *bool `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled *bool `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled *bool `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled *bool `pulumi:"isSecureSiteEnabled"`
	// Whether this site is token enabled for channel
	IsTokenEnabled bool `pulumi:"isTokenEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled *bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled *bool `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled *bool `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled *bool `pulumi:"isWebchatPreviewEnabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins []string `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for SiteResponse
func (val *SiteResponse) Defaults() *SiteResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		isWebChatSpeechEnabled_ := false
		tmp.IsWebChatSpeechEnabled = &isWebChatSpeechEnabled_
	}
	if tmp.IsWebchatPreviewEnabled == nil {
		isWebchatPreviewEnabled_ := false
		tmp.IsWebchatPreviewEnabled = &isWebchatPreviewEnabled_
	}
	return &tmp
}

// A site for the channel
type SiteResponseOutput struct{ *pulumi.OutputState }

func (SiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteResponse)(nil)).Elem()
}

func (o SiteResponseOutput) ToSiteResponseOutput() SiteResponseOutput {
	return o
}

func (o SiteResponseOutput) ToSiteResponseOutputWithContext(ctx context.Context) SiteResponseOutput {
	return o
}

// DirectLine application id
func (o SiteResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Entity Tag
func (o SiteResponseOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponse) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Whether this site is enabled for block user upload.
func (o SiteResponseOutput) IsBlockUserUploadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsBlockUserUploadEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is disabled detailed logging for
func (o SiteResponseOutput) IsDetailedLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsDetailedLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for DirectLine channel
func (o SiteResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SiteResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this site is EndpointParameters enabled for channel
func (o SiteResponseOutput) IsEndpointParametersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsEndpointParametersEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this no-storage site is disabled detailed logging for
func (o SiteResponseOutput) IsNoStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsNoStorageEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for authentication with Bot Framework.
func (o SiteResponseOutput) IsSecureSiteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsSecureSiteEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is token enabled for channel
func (o SiteResponseOutput) IsTokenEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SiteResponse) bool { return v.IsTokenEnabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol.
func (o SiteResponseOutput) IsV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsV1Enabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Bot Framework V3 protocol.
func (o SiteResponseOutput) IsV3Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsV3Enabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Webchat Speech
func (o SiteResponseOutput) IsWebChatSpeechEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsWebChatSpeechEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for preview versions of Webchat
func (o SiteResponseOutput) IsWebchatPreviewEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteResponse) *bool { return v.IsWebchatPreviewEnabled }).(pulumi.BoolPtrOutput)
}

// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SiteResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SiteResponseOutput) Key2() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponse) string { return v.Key2 }).(pulumi.StringOutput)
}

// Site Id
func (o SiteResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

// Site name
func (o SiteResponseOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v SiteResponse) string { return v.SiteName }).(pulumi.StringOutput)
}

// Tenant Id
func (o SiteResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
func (o SiteResponseOutput) TrustedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteResponse) []string { return v.TrustedOrigins }).(pulumi.StringArrayOutput)
}

type SiteResponseArrayOutput struct{ *pulumi.OutputState }

func (SiteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteResponse)(nil)).Elem()
}

func (o SiteResponseArrayOutput) ToSiteResponseArrayOutput() SiteResponseArrayOutput {
	return o
}

func (o SiteResponseArrayOutput) ToSiteResponseArrayOutputWithContext(ctx context.Context) SiteResponseArrayOutput {
	return o
}

func (o SiteResponseArrayOutput) Index(i pulumi.IntInput) SiteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteResponse {
		return vs[0].([]SiteResponse)[vs[1].(int)]
	}).(SiteResponseOutput)
}

// The SKU of the cognitive services account.
type Sku struct {
	// The sku name
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the cognitive services account.
type SkuArgs struct {
	// The sku name
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of the cognitive services account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The sku name
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku name
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of the cognitive services account.
type SkuResponse struct {
	// The sku name
	Name string `pulumi:"name"`
	// Gets the sku tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the cognitive services account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The sku name
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Skype channel definition
type SkypeChannel struct {
	// The channel name
	// Expected value is 'SkypeChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for SkypeChannel
func (val *SkypeChannel) Defaults() *SkypeChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// SkypeChannelInput is an input type that accepts SkypeChannelArgs and SkypeChannelOutput values.
// You can construct a concrete instance of `SkypeChannelInput` via:
//
//	SkypeChannelArgs{...}
type SkypeChannelInput interface {
	pulumi.Input

	ToSkypeChannelOutput() SkypeChannelOutput
	ToSkypeChannelOutputWithContext(context.Context) SkypeChannelOutput
}

// Skype channel definition
type SkypeChannelArgs struct {
	// The channel name
	// Expected value is 'SkypeChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Skype channel resource
	Properties SkypeChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for SkypeChannelArgs
func (val *SkypeChannelArgs) Defaults() *SkypeChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}

	return &tmp
}
func (SkypeChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannel)(nil)).Elem()
}

func (i SkypeChannelArgs) ToSkypeChannelOutput() SkypeChannelOutput {
	return i.ToSkypeChannelOutputWithContext(context.Background())
}

func (i SkypeChannelArgs) ToSkypeChannelOutputWithContext(ctx context.Context) SkypeChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelOutput)
}

func (i SkypeChannelArgs) ToSkypeChannelPtrOutput() SkypeChannelPtrOutput {
	return i.ToSkypeChannelPtrOutputWithContext(context.Background())
}

func (i SkypeChannelArgs) ToSkypeChannelPtrOutputWithContext(ctx context.Context) SkypeChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelOutput).ToSkypeChannelPtrOutputWithContext(ctx)
}

// SkypeChannelPtrInput is an input type that accepts SkypeChannelArgs, SkypeChannelPtr and SkypeChannelPtrOutput values.
// You can construct a concrete instance of `SkypeChannelPtrInput` via:
//
//	        SkypeChannelArgs{...}
//
//	or:
//
//	        nil
type SkypeChannelPtrInput interface {
	pulumi.Input

	ToSkypeChannelPtrOutput() SkypeChannelPtrOutput
	ToSkypeChannelPtrOutputWithContext(context.Context) SkypeChannelPtrOutput
}

type skypeChannelPtrType SkypeChannelArgs

func SkypeChannelPtr(v *SkypeChannelArgs) SkypeChannelPtrInput {
	return (*skypeChannelPtrType)(v)
}

func (*skypeChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannel)(nil)).Elem()
}

func (i *skypeChannelPtrType) ToSkypeChannelPtrOutput() SkypeChannelPtrOutput {
	return i.ToSkypeChannelPtrOutputWithContext(context.Background())
}

func (i *skypeChannelPtrType) ToSkypeChannelPtrOutputWithContext(ctx context.Context) SkypeChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPtrOutput)
}

// Skype channel definition
type SkypeChannelOutput struct{ *pulumi.OutputState }

func (SkypeChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannel)(nil)).Elem()
}

func (o SkypeChannelOutput) ToSkypeChannelOutput() SkypeChannelOutput {
	return o
}

func (o SkypeChannelOutput) ToSkypeChannelOutputWithContext(ctx context.Context) SkypeChannelOutput {
	return o
}

func (o SkypeChannelOutput) ToSkypeChannelPtrOutput() SkypeChannelPtrOutput {
	return o.ToSkypeChannelPtrOutputWithContext(context.Background())
}

func (o SkypeChannelOutput) ToSkypeChannelPtrOutputWithContext(ctx context.Context) SkypeChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkypeChannel) *SkypeChannel {
		return &v
	}).(SkypeChannelPtrOutput)
}

// The channel name
// Expected value is 'SkypeChannel'.
func (o SkypeChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SkypeChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SkypeChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SkypeChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Skype channel resource
func (o SkypeChannelOutput) Properties() SkypeChannelPropertiesPtrOutput {
	return o.ApplyT(func(v SkypeChannel) *SkypeChannelProperties { return v.Properties }).(SkypeChannelPropertiesPtrOutput)
}

type SkypeChannelPtrOutput struct{ *pulumi.OutputState }

func (SkypeChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannel)(nil)).Elem()
}

func (o SkypeChannelPtrOutput) ToSkypeChannelPtrOutput() SkypeChannelPtrOutput {
	return o
}

func (o SkypeChannelPtrOutput) ToSkypeChannelPtrOutputWithContext(ctx context.Context) SkypeChannelPtrOutput {
	return o
}

func (o SkypeChannelPtrOutput) Elem() SkypeChannelOutput {
	return o.ApplyT(func(v *SkypeChannel) SkypeChannel {
		if v != nil {
			return *v
		}
		var ret SkypeChannel
		return ret
	}).(SkypeChannelOutput)
}

// The channel name
// Expected value is 'SkypeChannel'.
func (o SkypeChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SkypeChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SkypeChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Skype channel resource
func (o SkypeChannelPtrOutput) Properties() SkypeChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *SkypeChannel) *SkypeChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SkypeChannelPropertiesPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelProperties struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Incoming call route for Skype channel
	IncomingCallRoute *string `pulumi:"incomingCallRoute"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for SkypeChannelProperties
func (val *SkypeChannelProperties) Defaults() *SkypeChannelProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableCalling == nil {
		enableCalling_ := false
		tmp.EnableCalling = &enableCalling_
	}
	return &tmp
}

// SkypeChannelPropertiesInput is an input type that accepts SkypeChannelPropertiesArgs and SkypeChannelPropertiesOutput values.
// You can construct a concrete instance of `SkypeChannelPropertiesInput` via:
//
//	SkypeChannelPropertiesArgs{...}
type SkypeChannelPropertiesInput interface {
	pulumi.Input

	ToSkypeChannelPropertiesOutput() SkypeChannelPropertiesOutput
	ToSkypeChannelPropertiesOutputWithContext(context.Context) SkypeChannelPropertiesOutput
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesArgs struct {
	// Calling web hook for Skype channel
	CallingWebHook pulumi.StringPtrInput `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling pulumi.BoolPtrInput `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups pulumi.BoolPtrInput `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards pulumi.BoolPtrInput `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging pulumi.BoolPtrInput `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing pulumi.BoolPtrInput `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo pulumi.BoolPtrInput `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode pulumi.StringPtrInput `pulumi:"groupsMode"`
	// Incoming call route for Skype channel
	IncomingCallRoute pulumi.StringPtrInput `pulumi:"incomingCallRoute"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for SkypeChannelPropertiesArgs
func (val *SkypeChannelPropertiesArgs) Defaults() *SkypeChannelPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableCalling == nil {
		tmp.EnableCalling = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (SkypeChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelProperties)(nil)).Elem()
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesOutput() SkypeChannelPropertiesOutput {
	return i.ToSkypeChannelPropertiesOutputWithContext(context.Background())
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesOutputWithContext(ctx context.Context) SkypeChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPropertiesOutput)
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput {
	return i.ToSkypeChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i SkypeChannelPropertiesArgs) ToSkypeChannelPropertiesPtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPropertiesOutput).ToSkypeChannelPropertiesPtrOutputWithContext(ctx)
}

// SkypeChannelPropertiesPtrInput is an input type that accepts SkypeChannelPropertiesArgs, SkypeChannelPropertiesPtr and SkypeChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `SkypeChannelPropertiesPtrInput` via:
//
//	        SkypeChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type SkypeChannelPropertiesPtrInput interface {
	pulumi.Input

	ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput
	ToSkypeChannelPropertiesPtrOutputWithContext(context.Context) SkypeChannelPropertiesPtrOutput
}

type skypeChannelPropertiesPtrType SkypeChannelPropertiesArgs

func SkypeChannelPropertiesPtr(v *SkypeChannelPropertiesArgs) SkypeChannelPropertiesPtrInput {
	return (*skypeChannelPropertiesPtrType)(v)
}

func (*skypeChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannelProperties)(nil)).Elem()
}

func (i *skypeChannelPropertiesPtrType) ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput {
	return i.ToSkypeChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *skypeChannelPropertiesPtrType) ToSkypeChannelPropertiesPtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkypeChannelPropertiesPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesOutput struct{ *pulumi.OutputState }

func (SkypeChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelProperties)(nil)).Elem()
}

func (o SkypeChannelPropertiesOutput) ToSkypeChannelPropertiesOutput() SkypeChannelPropertiesOutput {
	return o
}

func (o SkypeChannelPropertiesOutput) ToSkypeChannelPropertiesOutputWithContext(ctx context.Context) SkypeChannelPropertiesOutput {
	return o
}

func (o SkypeChannelPropertiesOutput) ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput {
	return o.ToSkypeChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o SkypeChannelPropertiesOutput) ToSkypeChannelPropertiesPtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkypeChannelProperties) *SkypeChannelProperties {
		return &v
	}).(SkypeChannelPropertiesPtrOutput)
}

// Calling web hook for Skype channel
func (o SkypeChannelPropertiesOutput) CallingWebHook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *string { return v.CallingWebHook }).(pulumi.StringPtrOutput)
}

// Enable calling for Skype channel
func (o SkypeChannelPropertiesOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *bool { return v.EnableCalling }).(pulumi.BoolPtrOutput)
}

// Enable groups for Skype channel
func (o SkypeChannelPropertiesOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *bool { return v.EnableGroups }).(pulumi.BoolPtrOutput)
}

// Enable media cards for Skype channel
func (o SkypeChannelPropertiesOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *bool { return v.EnableMediaCards }).(pulumi.BoolPtrOutput)
}

// Enable messaging for Skype channel
func (o SkypeChannelPropertiesOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *bool { return v.EnableMessaging }).(pulumi.BoolPtrOutput)
}

// Enable screen sharing for Skype channel
func (o SkypeChannelPropertiesOutput) EnableScreenSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *bool { return v.EnableScreenSharing }).(pulumi.BoolPtrOutput)
}

// Enable video for Skype channel
func (o SkypeChannelPropertiesOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *bool { return v.EnableVideo }).(pulumi.BoolPtrOutput)
}

// Group mode for Skype channel
func (o SkypeChannelPropertiesOutput) GroupsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *string { return v.GroupsMode }).(pulumi.StringPtrOutput)
}

// Incoming call route for Skype channel
func (o SkypeChannelPropertiesOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelProperties) *string { return v.IncomingCallRoute }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SkypeChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SkypeChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type SkypeChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SkypeChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannelProperties)(nil)).Elem()
}

func (o SkypeChannelPropertiesPtrOutput) ToSkypeChannelPropertiesPtrOutput() SkypeChannelPropertiesPtrOutput {
	return o
}

func (o SkypeChannelPropertiesPtrOutput) ToSkypeChannelPropertiesPtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesPtrOutput {
	return o
}

func (o SkypeChannelPropertiesPtrOutput) Elem() SkypeChannelPropertiesOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) SkypeChannelProperties {
		if v != nil {
			return *v
		}
		var ret SkypeChannelProperties
		return ret
	}).(SkypeChannelPropertiesOutput)
}

// Calling web hook for Skype channel
func (o SkypeChannelPropertiesPtrOutput) CallingWebHook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CallingWebHook
	}).(pulumi.StringPtrOutput)
}

// Enable calling for Skype channel
func (o SkypeChannelPropertiesPtrOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCalling
	}).(pulumi.BoolPtrOutput)
}

// Enable groups for Skype channel
func (o SkypeChannelPropertiesPtrOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableGroups
	}).(pulumi.BoolPtrOutput)
}

// Enable media cards for Skype channel
func (o SkypeChannelPropertiesPtrOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMediaCards
	}).(pulumi.BoolPtrOutput)
}

// Enable messaging for Skype channel
func (o SkypeChannelPropertiesPtrOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMessaging
	}).(pulumi.BoolPtrOutput)
}

// Enable screen sharing for Skype channel
func (o SkypeChannelPropertiesPtrOutput) EnableScreenSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableScreenSharing
	}).(pulumi.BoolPtrOutput)
}

// Enable video for Skype channel
func (o SkypeChannelPropertiesPtrOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVideo
	}).(pulumi.BoolPtrOutput)
}

// Group mode for Skype channel
func (o SkypeChannelPropertiesPtrOutput) GroupsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.GroupsMode
	}).(pulumi.StringPtrOutput)
}

// Incoming call route for Skype channel
func (o SkypeChannelPropertiesPtrOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.IncomingCallRoute
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SkypeChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesResponse struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Incoming call route for Skype channel
	IncomingCallRoute *string `pulumi:"incomingCallRoute"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for SkypeChannelPropertiesResponse
func (val *SkypeChannelPropertiesResponse) Defaults() *SkypeChannelPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableCalling == nil {
		enableCalling_ := false
		tmp.EnableCalling = &enableCalling_
	}
	return &tmp
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SkypeChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelPropertiesResponse)(nil)).Elem()
}

func (o SkypeChannelPropertiesResponseOutput) ToSkypeChannelPropertiesResponseOutput() SkypeChannelPropertiesResponseOutput {
	return o
}

func (o SkypeChannelPropertiesResponseOutput) ToSkypeChannelPropertiesResponseOutputWithContext(ctx context.Context) SkypeChannelPropertiesResponseOutput {
	return o
}

// Calling web hook for Skype channel
func (o SkypeChannelPropertiesResponseOutput) CallingWebHook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *string { return v.CallingWebHook }).(pulumi.StringPtrOutput)
}

// Enable calling for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableCalling }).(pulumi.BoolPtrOutput)
}

// Enable groups for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableGroups }).(pulumi.BoolPtrOutput)
}

// Enable media cards for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableMediaCards }).(pulumi.BoolPtrOutput)
}

// Enable messaging for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableMessaging }).(pulumi.BoolPtrOutput)
}

// Enable screen sharing for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableScreenSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableScreenSharing }).(pulumi.BoolPtrOutput)
}

// Enable video for Skype channel
func (o SkypeChannelPropertiesResponseOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *bool { return v.EnableVideo }).(pulumi.BoolPtrOutput)
}

// Group mode for Skype channel
func (o SkypeChannelPropertiesResponseOutput) GroupsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *string { return v.GroupsMode }).(pulumi.StringPtrOutput)
}

// Incoming call route for Skype channel
func (o SkypeChannelPropertiesResponseOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) *string { return v.IncomingCallRoute }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SkypeChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SkypeChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type SkypeChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SkypeChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannelPropertiesResponse)(nil)).Elem()
}

func (o SkypeChannelPropertiesResponsePtrOutput) ToSkypeChannelPropertiesResponsePtrOutput() SkypeChannelPropertiesResponsePtrOutput {
	return o
}

func (o SkypeChannelPropertiesResponsePtrOutput) ToSkypeChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SkypeChannelPropertiesResponsePtrOutput {
	return o
}

func (o SkypeChannelPropertiesResponsePtrOutput) Elem() SkypeChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) SkypeChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SkypeChannelPropertiesResponse
		return ret
	}).(SkypeChannelPropertiesResponseOutput)
}

// Calling web hook for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) CallingWebHook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CallingWebHook
	}).(pulumi.StringPtrOutput)
}

// Enable calling for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableCalling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCalling
	}).(pulumi.BoolPtrOutput)
}

// Enable groups for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableGroups
	}).(pulumi.BoolPtrOutput)
}

// Enable media cards for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableMediaCards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMediaCards
	}).(pulumi.BoolPtrOutput)
}

// Enable messaging for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableMessaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMessaging
	}).(pulumi.BoolPtrOutput)
}

// Enable screen sharing for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableScreenSharing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableScreenSharing
	}).(pulumi.BoolPtrOutput)
}

// Enable video for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) EnableVideo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVideo
	}).(pulumi.BoolPtrOutput)
}

// Group mode for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) GroupsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupsMode
	}).(pulumi.StringPtrOutput)
}

// Incoming call route for Skype channel
func (o SkypeChannelPropertiesResponsePtrOutput) IncomingCallRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IncomingCallRoute
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SkypeChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SkypeChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Skype channel definition
type SkypeChannelResponse struct {
	// The channel name
	// Expected value is 'SkypeChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for SkypeChannelResponse
func (val *SkypeChannelResponse) Defaults() *SkypeChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	tmp.Properties = tmp.Properties.Defaults()

	return &tmp
}

// Skype channel definition
type SkypeChannelResponseOutput struct{ *pulumi.OutputState }

func (SkypeChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkypeChannelResponse)(nil)).Elem()
}

func (o SkypeChannelResponseOutput) ToSkypeChannelResponseOutput() SkypeChannelResponseOutput {
	return o
}

func (o SkypeChannelResponseOutput) ToSkypeChannelResponseOutputWithContext(ctx context.Context) SkypeChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'SkypeChannel'.
func (o SkypeChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SkypeChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SkypeChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SkypeChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkypeChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Skype channel resource
func (o SkypeChannelResponseOutput) Properties() SkypeChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SkypeChannelResponse) *SkypeChannelPropertiesResponse { return v.Properties }).(SkypeChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o SkypeChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SkypeChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type SkypeChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (SkypeChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkypeChannelResponse)(nil)).Elem()
}

func (o SkypeChannelResponsePtrOutput) ToSkypeChannelResponsePtrOutput() SkypeChannelResponsePtrOutput {
	return o
}

func (o SkypeChannelResponsePtrOutput) ToSkypeChannelResponsePtrOutputWithContext(ctx context.Context) SkypeChannelResponsePtrOutput {
	return o
}

func (o SkypeChannelResponsePtrOutput) Elem() SkypeChannelResponseOutput {
	return o.ApplyT(func(v *SkypeChannelResponse) SkypeChannelResponse {
		if v != nil {
			return *v
		}
		var ret SkypeChannelResponse
		return ret
	}).(SkypeChannelResponseOutput)
}

// The channel name
// Expected value is 'SkypeChannel'.
func (o SkypeChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SkypeChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SkypeChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Skype channel resource
func (o SkypeChannelResponsePtrOutput) Properties() SkypeChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SkypeChannelResponse) *SkypeChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SkypeChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o SkypeChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkypeChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Slack channel definition
type SlackChannel struct {
	// The channel name
	// Expected value is 'SlackChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for SlackChannel
func (val *SlackChannel) Defaults() *SlackChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// SlackChannelInput is an input type that accepts SlackChannelArgs and SlackChannelOutput values.
// You can construct a concrete instance of `SlackChannelInput` via:
//
//	SlackChannelArgs{...}
type SlackChannelInput interface {
	pulumi.Input

	ToSlackChannelOutput() SlackChannelOutput
	ToSlackChannelOutputWithContext(context.Context) SlackChannelOutput
}

// Slack channel definition
type SlackChannelArgs struct {
	// The channel name
	// Expected value is 'SlackChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Slack channel resource
	Properties SlackChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for SlackChannelArgs
func (val *SlackChannelArgs) Defaults() *SlackChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (SlackChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannel)(nil)).Elem()
}

func (i SlackChannelArgs) ToSlackChannelOutput() SlackChannelOutput {
	return i.ToSlackChannelOutputWithContext(context.Background())
}

func (i SlackChannelArgs) ToSlackChannelOutputWithContext(ctx context.Context) SlackChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelOutput)
}

func (i SlackChannelArgs) ToSlackChannelPtrOutput() SlackChannelPtrOutput {
	return i.ToSlackChannelPtrOutputWithContext(context.Background())
}

func (i SlackChannelArgs) ToSlackChannelPtrOutputWithContext(ctx context.Context) SlackChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelOutput).ToSlackChannelPtrOutputWithContext(ctx)
}

// SlackChannelPtrInput is an input type that accepts SlackChannelArgs, SlackChannelPtr and SlackChannelPtrOutput values.
// You can construct a concrete instance of `SlackChannelPtrInput` via:
//
//	        SlackChannelArgs{...}
//
//	or:
//
//	        nil
type SlackChannelPtrInput interface {
	pulumi.Input

	ToSlackChannelPtrOutput() SlackChannelPtrOutput
	ToSlackChannelPtrOutputWithContext(context.Context) SlackChannelPtrOutput
}

type slackChannelPtrType SlackChannelArgs

func SlackChannelPtr(v *SlackChannelArgs) SlackChannelPtrInput {
	return (*slackChannelPtrType)(v)
}

func (*slackChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannel)(nil)).Elem()
}

func (i *slackChannelPtrType) ToSlackChannelPtrOutput() SlackChannelPtrOutput {
	return i.ToSlackChannelPtrOutputWithContext(context.Background())
}

func (i *slackChannelPtrType) ToSlackChannelPtrOutputWithContext(ctx context.Context) SlackChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPtrOutput)
}

// Slack channel definition
type SlackChannelOutput struct{ *pulumi.OutputState }

func (SlackChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannel)(nil)).Elem()
}

func (o SlackChannelOutput) ToSlackChannelOutput() SlackChannelOutput {
	return o
}

func (o SlackChannelOutput) ToSlackChannelOutputWithContext(ctx context.Context) SlackChannelOutput {
	return o
}

func (o SlackChannelOutput) ToSlackChannelPtrOutput() SlackChannelPtrOutput {
	return o.ToSlackChannelPtrOutputWithContext(context.Background())
}

func (o SlackChannelOutput) ToSlackChannelPtrOutputWithContext(ctx context.Context) SlackChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SlackChannel) *SlackChannel {
		return &v
	}).(SlackChannelPtrOutput)
}

// The channel name
// Expected value is 'SlackChannel'.
func (o SlackChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SlackChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SlackChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Slack channel resource
func (o SlackChannelOutput) Properties() SlackChannelPropertiesPtrOutput {
	return o.ApplyT(func(v SlackChannel) *SlackChannelProperties { return v.Properties }).(SlackChannelPropertiesPtrOutput)
}

type SlackChannelPtrOutput struct{ *pulumi.OutputState }

func (SlackChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannel)(nil)).Elem()
}

func (o SlackChannelPtrOutput) ToSlackChannelPtrOutput() SlackChannelPtrOutput {
	return o
}

func (o SlackChannelPtrOutput) ToSlackChannelPtrOutputWithContext(ctx context.Context) SlackChannelPtrOutput {
	return o
}

func (o SlackChannelPtrOutput) Elem() SlackChannelOutput {
	return o.ApplyT(func(v *SlackChannel) SlackChannel {
		if v != nil {
			return *v
		}
		var ret SlackChannel
		return ret
	}).(SlackChannelOutput)
}

// The channel name
// Expected value is 'SlackChannel'.
func (o SlackChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SlackChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SlackChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Slack channel resource
func (o SlackChannelPtrOutput) Properties() SlackChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *SlackChannel) *SlackChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SlackChannelPropertiesPtrOutput)
}

// The parameters to provide for the Slack channel.
type SlackChannelProperties struct {
	// The Slack client id
	ClientId *string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret *string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// Whether to register the settings before OAuth validation is performed. Recommended to True.
	RegisterBeforeOAuthFlow *bool `pulumi:"registerBeforeOAuthFlow"`
	// The Slack permission scopes.
	Scopes *string `pulumi:"scopes"`
	// The Slack signing secret.
	SigningSecret *string `pulumi:"signingSecret"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken *string `pulumi:"verificationToken"`
}

// SlackChannelPropertiesInput is an input type that accepts SlackChannelPropertiesArgs and SlackChannelPropertiesOutput values.
// You can construct a concrete instance of `SlackChannelPropertiesInput` via:
//
//	SlackChannelPropertiesArgs{...}
type SlackChannelPropertiesInput interface {
	pulumi.Input

	ToSlackChannelPropertiesOutput() SlackChannelPropertiesOutput
	ToSlackChannelPropertiesOutputWithContext(context.Context) SlackChannelPropertiesOutput
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesArgs struct {
	// The Slack client id
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The Slack landing page Url
	LandingPageUrl pulumi.StringPtrInput `pulumi:"landingPageUrl"`
	// Whether to register the settings before OAuth validation is performed. Recommended to True.
	RegisterBeforeOAuthFlow pulumi.BoolPtrInput `pulumi:"registerBeforeOAuthFlow"`
	// The Slack permission scopes.
	Scopes pulumi.StringPtrInput `pulumi:"scopes"`
	// The Slack signing secret.
	SigningSecret pulumi.StringPtrInput `pulumi:"signingSecret"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken pulumi.StringPtrInput `pulumi:"verificationToken"`
}

func (SlackChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelProperties)(nil)).Elem()
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesOutput() SlackChannelPropertiesOutput {
	return i.ToSlackChannelPropertiesOutputWithContext(context.Background())
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesOutputWithContext(ctx context.Context) SlackChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPropertiesOutput)
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput {
	return i.ToSlackChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i SlackChannelPropertiesArgs) ToSlackChannelPropertiesPtrOutputWithContext(ctx context.Context) SlackChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPropertiesOutput).ToSlackChannelPropertiesPtrOutputWithContext(ctx)
}

// SlackChannelPropertiesPtrInput is an input type that accepts SlackChannelPropertiesArgs, SlackChannelPropertiesPtr and SlackChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `SlackChannelPropertiesPtrInput` via:
//
//	        SlackChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type SlackChannelPropertiesPtrInput interface {
	pulumi.Input

	ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput
	ToSlackChannelPropertiesPtrOutputWithContext(context.Context) SlackChannelPropertiesPtrOutput
}

type slackChannelPropertiesPtrType SlackChannelPropertiesArgs

func SlackChannelPropertiesPtr(v *SlackChannelPropertiesArgs) SlackChannelPropertiesPtrInput {
	return (*slackChannelPropertiesPtrType)(v)
}

func (*slackChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelProperties)(nil)).Elem()
}

func (i *slackChannelPropertiesPtrType) ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput {
	return i.ToSlackChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *slackChannelPropertiesPtrType) ToSlackChannelPropertiesPtrOutputWithContext(ctx context.Context) SlackChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelPropertiesPtrOutput)
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesOutput struct{ *pulumi.OutputState }

func (SlackChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelProperties)(nil)).Elem()
}

func (o SlackChannelPropertiesOutput) ToSlackChannelPropertiesOutput() SlackChannelPropertiesOutput {
	return o
}

func (o SlackChannelPropertiesOutput) ToSlackChannelPropertiesOutputWithContext(ctx context.Context) SlackChannelPropertiesOutput {
	return o
}

func (o SlackChannelPropertiesOutput) ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput {
	return o.ToSlackChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o SlackChannelPropertiesOutput) ToSlackChannelPropertiesPtrOutputWithContext(ctx context.Context) SlackChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SlackChannelProperties) *SlackChannelProperties {
		return &v
	}).(SlackChannelPropertiesPtrOutput)
}

// The Slack client id
func (o SlackChannelPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SlackChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SlackChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The Slack landing page Url
func (o SlackChannelPropertiesOutput) LandingPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *string { return v.LandingPageUrl }).(pulumi.StringPtrOutput)
}

// Whether to register the settings before OAuth validation is performed. Recommended to True.
func (o SlackChannelPropertiesOutput) RegisterBeforeOAuthFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *bool { return v.RegisterBeforeOAuthFlow }).(pulumi.BoolPtrOutput)
}

// The Slack permission scopes.
func (o SlackChannelPropertiesOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// The Slack signing secret.
func (o SlackChannelPropertiesOutput) SigningSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *string { return v.SigningSecret }).(pulumi.StringPtrOutput)
}

// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesOutput) VerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelProperties) *string { return v.VerificationToken }).(pulumi.StringPtrOutput)
}

type SlackChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SlackChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelProperties)(nil)).Elem()
}

func (o SlackChannelPropertiesPtrOutput) ToSlackChannelPropertiesPtrOutput() SlackChannelPropertiesPtrOutput {
	return o
}

func (o SlackChannelPropertiesPtrOutput) ToSlackChannelPropertiesPtrOutputWithContext(ctx context.Context) SlackChannelPropertiesPtrOutput {
	return o
}

func (o SlackChannelPropertiesPtrOutput) Elem() SlackChannelPropertiesOutput {
	return o.ApplyT(func(v *SlackChannelProperties) SlackChannelProperties {
		if v != nil {
			return *v
		}
		var ret SlackChannelProperties
		return ret
	}).(SlackChannelPropertiesOutput)
}

// The Slack client id
func (o SlackChannelPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SlackChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The Slack landing page Url
func (o SlackChannelPropertiesPtrOutput) LandingPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.LandingPageUrl
	}).(pulumi.StringPtrOutput)
}

// Whether to register the settings before OAuth validation is performed. Recommended to True.
func (o SlackChannelPropertiesPtrOutput) RegisterBeforeOAuthFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RegisterBeforeOAuthFlow
	}).(pulumi.BoolPtrOutput)
}

// The Slack permission scopes.
func (o SlackChannelPropertiesPtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

// The Slack signing secret.
func (o SlackChannelPropertiesPtrOutput) SigningSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.SigningSecret
	}).(pulumi.StringPtrOutput)
}

// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesPtrOutput) VerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.VerificationToken
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesResponse struct {
	// The Slack client id
	ClientId *string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret *string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated bool `pulumi:"isValidated"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// The Sms auth token
	LastSubmissionId string `pulumi:"lastSubmissionId"`
	// The Slack redirect action
	RedirectAction string `pulumi:"redirectAction"`
	// Whether to register the settings before OAuth validation is performed. Recommended to True.
	RegisterBeforeOAuthFlow *bool `pulumi:"registerBeforeOAuthFlow"`
	// The Slack permission scopes.
	Scopes *string `pulumi:"scopes"`
	// The Slack signing secret.
	SigningSecret *string `pulumi:"signingSecret"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken *string `pulumi:"verificationToken"`
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SlackChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelPropertiesResponse)(nil)).Elem()
}

func (o SlackChannelPropertiesResponseOutput) ToSlackChannelPropertiesResponseOutput() SlackChannelPropertiesResponseOutput {
	return o
}

func (o SlackChannelPropertiesResponseOutput) ToSlackChannelPropertiesResponseOutputWithContext(ctx context.Context) SlackChannelPropertiesResponseOutput {
	return o
}

// The Slack client id
func (o SlackChannelPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SlackChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o SlackChannelPropertiesResponseOutput) IsValidated() pulumi.BoolOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) bool { return v.IsValidated }).(pulumi.BoolOutput)
}

// The Slack landing page Url
func (o SlackChannelPropertiesResponseOutput) LandingPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.LandingPageUrl }).(pulumi.StringPtrOutput)
}

// The Sms auth token
func (o SlackChannelPropertiesResponseOutput) LastSubmissionId() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.LastSubmissionId }).(pulumi.StringOutput)
}

// The Slack redirect action
func (o SlackChannelPropertiesResponseOutput) RedirectAction() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) string { return v.RedirectAction }).(pulumi.StringOutput)
}

// Whether to register the settings before OAuth validation is performed. Recommended to True.
func (o SlackChannelPropertiesResponseOutput) RegisterBeforeOAuthFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *bool { return v.RegisterBeforeOAuthFlow }).(pulumi.BoolPtrOutput)
}

// The Slack permission scopes.
func (o SlackChannelPropertiesResponseOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// The Slack signing secret.
func (o SlackChannelPropertiesResponseOutput) SigningSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.SigningSecret }).(pulumi.StringPtrOutput)
}

// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponseOutput) VerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelPropertiesResponse) *string { return v.VerificationToken }).(pulumi.StringPtrOutput)
}

type SlackChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SlackChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelPropertiesResponse)(nil)).Elem()
}

func (o SlackChannelPropertiesResponsePtrOutput) ToSlackChannelPropertiesResponsePtrOutput() SlackChannelPropertiesResponsePtrOutput {
	return o
}

func (o SlackChannelPropertiesResponsePtrOutput) ToSlackChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SlackChannelPropertiesResponsePtrOutput {
	return o
}

func (o SlackChannelPropertiesResponsePtrOutput) Elem() SlackChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) SlackChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SlackChannelPropertiesResponse
		return ret
	}).(SlackChannelPropertiesResponseOutput)
}

// The Slack client id
func (o SlackChannelPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SlackChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o SlackChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Slack landing page Url
func (o SlackChannelPropertiesResponsePtrOutput) LandingPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LandingPageUrl
	}).(pulumi.StringPtrOutput)
}

// The Sms auth token
func (o SlackChannelPropertiesResponsePtrOutput) LastSubmissionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSubmissionId
	}).(pulumi.StringPtrOutput)
}

// The Slack redirect action
func (o SlackChannelPropertiesResponsePtrOutput) RedirectAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectAction
	}).(pulumi.StringPtrOutput)
}

// Whether to register the settings before OAuth validation is performed. Recommended to True.
func (o SlackChannelPropertiesResponsePtrOutput) RegisterBeforeOAuthFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RegisterBeforeOAuthFlow
	}).(pulumi.BoolPtrOutput)
}

// The Slack permission scopes.
func (o SlackChannelPropertiesResponsePtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

// The Slack signing secret.
func (o SlackChannelPropertiesResponsePtrOutput) SigningSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SigningSecret
	}).(pulumi.StringPtrOutput)
}

// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SlackChannelPropertiesResponsePtrOutput) VerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VerificationToken
	}).(pulumi.StringPtrOutput)
}

// Slack channel definition
type SlackChannelResponse struct {
	// The channel name
	// Expected value is 'SlackChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for SlackChannelResponse
func (val *SlackChannelResponse) Defaults() *SlackChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Slack channel definition
type SlackChannelResponseOutput struct{ *pulumi.OutputState }

func (SlackChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelResponse)(nil)).Elem()
}

func (o SlackChannelResponseOutput) ToSlackChannelResponseOutput() SlackChannelResponseOutput {
	return o
}

func (o SlackChannelResponseOutput) ToSlackChannelResponseOutputWithContext(ctx context.Context) SlackChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'SlackChannel'.
func (o SlackChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SlackChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SlackChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Slack channel resource
func (o SlackChannelResponseOutput) Properties() SlackChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SlackChannelResponse) *SlackChannelPropertiesResponse { return v.Properties }).(SlackChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o SlackChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SlackChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type SlackChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (SlackChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelResponse)(nil)).Elem()
}

func (o SlackChannelResponsePtrOutput) ToSlackChannelResponsePtrOutput() SlackChannelResponsePtrOutput {
	return o
}

func (o SlackChannelResponsePtrOutput) ToSlackChannelResponsePtrOutputWithContext(ctx context.Context) SlackChannelResponsePtrOutput {
	return o
}

func (o SlackChannelResponsePtrOutput) Elem() SlackChannelResponseOutput {
	return o.ApplyT(func(v *SlackChannelResponse) SlackChannelResponse {
		if v != nil {
			return *v
		}
		var ret SlackChannelResponse
		return ret
	}).(SlackChannelResponseOutput)
}

// The channel name
// Expected value is 'SlackChannel'.
func (o SlackChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SlackChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SlackChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Slack channel resource
func (o SlackChannelResponsePtrOutput) Properties() SlackChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SlackChannelResponse) *SlackChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SlackChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o SlackChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Sms channel definition
type SmsChannel struct {
	// The channel name
	// Expected value is 'SmsChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for SmsChannel
func (val *SmsChannel) Defaults() *SmsChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// SmsChannelInput is an input type that accepts SmsChannelArgs and SmsChannelOutput values.
// You can construct a concrete instance of `SmsChannelInput` via:
//
//	SmsChannelArgs{...}
type SmsChannelInput interface {
	pulumi.Input

	ToSmsChannelOutput() SmsChannelOutput
	ToSmsChannelOutputWithContext(context.Context) SmsChannelOutput
}

// Sms channel definition
type SmsChannelArgs struct {
	// The channel name
	// Expected value is 'SmsChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Sms channel resource
	Properties SmsChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for SmsChannelArgs
func (val *SmsChannelArgs) Defaults() *SmsChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (SmsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannel)(nil)).Elem()
}

func (i SmsChannelArgs) ToSmsChannelOutput() SmsChannelOutput {
	return i.ToSmsChannelOutputWithContext(context.Background())
}

func (i SmsChannelArgs) ToSmsChannelOutputWithContext(ctx context.Context) SmsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelOutput)
}

func (i SmsChannelArgs) ToSmsChannelPtrOutput() SmsChannelPtrOutput {
	return i.ToSmsChannelPtrOutputWithContext(context.Background())
}

func (i SmsChannelArgs) ToSmsChannelPtrOutputWithContext(ctx context.Context) SmsChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelOutput).ToSmsChannelPtrOutputWithContext(ctx)
}

// SmsChannelPtrInput is an input type that accepts SmsChannelArgs, SmsChannelPtr and SmsChannelPtrOutput values.
// You can construct a concrete instance of `SmsChannelPtrInput` via:
//
//	        SmsChannelArgs{...}
//
//	or:
//
//	        nil
type SmsChannelPtrInput interface {
	pulumi.Input

	ToSmsChannelPtrOutput() SmsChannelPtrOutput
	ToSmsChannelPtrOutputWithContext(context.Context) SmsChannelPtrOutput
}

type smsChannelPtrType SmsChannelArgs

func SmsChannelPtr(v *SmsChannelArgs) SmsChannelPtrInput {
	return (*smsChannelPtrType)(v)
}

func (*smsChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannel)(nil)).Elem()
}

func (i *smsChannelPtrType) ToSmsChannelPtrOutput() SmsChannelPtrOutput {
	return i.ToSmsChannelPtrOutputWithContext(context.Background())
}

func (i *smsChannelPtrType) ToSmsChannelPtrOutputWithContext(ctx context.Context) SmsChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPtrOutput)
}

// Sms channel definition
type SmsChannelOutput struct{ *pulumi.OutputState }

func (SmsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannel)(nil)).Elem()
}

func (o SmsChannelOutput) ToSmsChannelOutput() SmsChannelOutput {
	return o
}

func (o SmsChannelOutput) ToSmsChannelOutputWithContext(ctx context.Context) SmsChannelOutput {
	return o
}

func (o SmsChannelOutput) ToSmsChannelPtrOutput() SmsChannelPtrOutput {
	return o.ToSmsChannelPtrOutputWithContext(context.Background())
}

func (o SmsChannelOutput) ToSmsChannelPtrOutputWithContext(ctx context.Context) SmsChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmsChannel) *SmsChannel {
		return &v
	}).(SmsChannelPtrOutput)
}

// The channel name
// Expected value is 'SmsChannel'.
func (o SmsChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SmsChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmsChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SmsChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmsChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Sms channel resource
func (o SmsChannelOutput) Properties() SmsChannelPropertiesPtrOutput {
	return o.ApplyT(func(v SmsChannel) *SmsChannelProperties { return v.Properties }).(SmsChannelPropertiesPtrOutput)
}

type SmsChannelPtrOutput struct{ *pulumi.OutputState }

func (SmsChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannel)(nil)).Elem()
}

func (o SmsChannelPtrOutput) ToSmsChannelPtrOutput() SmsChannelPtrOutput {
	return o
}

func (o SmsChannelPtrOutput) ToSmsChannelPtrOutputWithContext(ctx context.Context) SmsChannelPtrOutput {
	return o
}

func (o SmsChannelPtrOutput) Elem() SmsChannelOutput {
	return o.ApplyT(func(v *SmsChannel) SmsChannel {
		if v != nil {
			return *v
		}
		var ret SmsChannel
		return ret
	}).(SmsChannelOutput)
}

// The channel name
// Expected value is 'SmsChannel'.
func (o SmsChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SmsChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SmsChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Sms channel resource
func (o SmsChannelPtrOutput) Properties() SmsChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *SmsChannel) *SmsChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SmsChannelPropertiesPtrOutput)
}

// The parameters to provide for the Sms channel.
type SmsChannelProperties struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken *string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// SmsChannelPropertiesInput is an input type that accepts SmsChannelPropertiesArgs and SmsChannelPropertiesOutput values.
// You can construct a concrete instance of `SmsChannelPropertiesInput` via:
//
//	SmsChannelPropertiesArgs{...}
type SmsChannelPropertiesInput interface {
	pulumi.Input

	ToSmsChannelPropertiesOutput() SmsChannelPropertiesOutput
	ToSmsChannelPropertiesOutputWithContext(context.Context) SmsChannelPropertiesOutput
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesArgs struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID pulumi.StringInput `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken pulumi.StringPtrInput `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated pulumi.BoolPtrInput `pulumi:"isValidated"`
	// The Sms phone
	Phone pulumi.StringInput `pulumi:"phone"`
}

func (SmsChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelProperties)(nil)).Elem()
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesOutput() SmsChannelPropertiesOutput {
	return i.ToSmsChannelPropertiesOutputWithContext(context.Background())
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesOutputWithContext(ctx context.Context) SmsChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPropertiesOutput)
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput {
	return i.ToSmsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i SmsChannelPropertiesArgs) ToSmsChannelPropertiesPtrOutputWithContext(ctx context.Context) SmsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPropertiesOutput).ToSmsChannelPropertiesPtrOutputWithContext(ctx)
}

// SmsChannelPropertiesPtrInput is an input type that accepts SmsChannelPropertiesArgs, SmsChannelPropertiesPtr and SmsChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `SmsChannelPropertiesPtrInput` via:
//
//	        SmsChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type SmsChannelPropertiesPtrInput interface {
	pulumi.Input

	ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput
	ToSmsChannelPropertiesPtrOutputWithContext(context.Context) SmsChannelPropertiesPtrOutput
}

type smsChannelPropertiesPtrType SmsChannelPropertiesArgs

func SmsChannelPropertiesPtr(v *SmsChannelPropertiesArgs) SmsChannelPropertiesPtrInput {
	return (*smsChannelPropertiesPtrType)(v)
}

func (*smsChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannelProperties)(nil)).Elem()
}

func (i *smsChannelPropertiesPtrType) ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput {
	return i.ToSmsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *smsChannelPropertiesPtrType) ToSmsChannelPropertiesPtrOutputWithContext(ctx context.Context) SmsChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmsChannelPropertiesPtrOutput)
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesOutput struct{ *pulumi.OutputState }

func (SmsChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelProperties)(nil)).Elem()
}

func (o SmsChannelPropertiesOutput) ToSmsChannelPropertiesOutput() SmsChannelPropertiesOutput {
	return o
}

func (o SmsChannelPropertiesOutput) ToSmsChannelPropertiesOutputWithContext(ctx context.Context) SmsChannelPropertiesOutput {
	return o
}

func (o SmsChannelPropertiesOutput) ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput {
	return o.ToSmsChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o SmsChannelPropertiesOutput) ToSmsChannelPropertiesPtrOutputWithContext(ctx context.Context) SmsChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmsChannelProperties) *SmsChannelProperties {
		return &v
	}).(SmsChannelPropertiesPtrOutput)
}

// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesOutput) AccountSID() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelProperties) string { return v.AccountSID }).(pulumi.StringOutput)
}

// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmsChannelProperties) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SmsChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SmsChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o SmsChannelPropertiesOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmsChannelProperties) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

// The Sms phone
func (o SmsChannelPropertiesOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelProperties) string { return v.Phone }).(pulumi.StringOutput)
}

type SmsChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SmsChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannelProperties)(nil)).Elem()
}

func (o SmsChannelPropertiesPtrOutput) ToSmsChannelPropertiesPtrOutput() SmsChannelPropertiesPtrOutput {
	return o
}

func (o SmsChannelPropertiesPtrOutput) ToSmsChannelPropertiesPtrOutputWithContext(ctx context.Context) SmsChannelPropertiesPtrOutput {
	return o
}

func (o SmsChannelPropertiesPtrOutput) Elem() SmsChannelPropertiesOutput {
	return o.ApplyT(func(v *SmsChannelProperties) SmsChannelProperties {
		if v != nil {
			return *v
		}
		var ret SmsChannelProperties
		return ret
	}).(SmsChannelPropertiesOutput)
}

// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesPtrOutput) AccountSID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AccountSID
	}).(pulumi.StringPtrOutput)
}

// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesPtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SmsChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmsChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o SmsChannelPropertiesPtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmsChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Sms phone
func (o SmsChannelPropertiesPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesResponse struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken *string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SmsChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelPropertiesResponse)(nil)).Elem()
}

func (o SmsChannelPropertiesResponseOutput) ToSmsChannelPropertiesResponseOutput() SmsChannelPropertiesResponseOutput {
	return o
}

func (o SmsChannelPropertiesResponseOutput) ToSmsChannelPropertiesResponseOutputWithContext(ctx context.Context) SmsChannelPropertiesResponseOutput {
	return o
}

// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponseOutput) AccountSID() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) string { return v.AccountSID }).(pulumi.StringOutput)
}

// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponseOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SmsChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o SmsChannelPropertiesResponseOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

// The Sms phone
func (o SmsChannelPropertiesResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelPropertiesResponse) string { return v.Phone }).(pulumi.StringOutput)
}

type SmsChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SmsChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannelPropertiesResponse)(nil)).Elem()
}

func (o SmsChannelPropertiesResponsePtrOutput) ToSmsChannelPropertiesResponsePtrOutput() SmsChannelPropertiesResponsePtrOutput {
	return o
}

func (o SmsChannelPropertiesResponsePtrOutput) ToSmsChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) SmsChannelPropertiesResponsePtrOutput {
	return o
}

func (o SmsChannelPropertiesResponsePtrOutput) Elem() SmsChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) SmsChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SmsChannelPropertiesResponse
		return ret
	}).(SmsChannelPropertiesResponseOutput)
}

// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponsePtrOutput) AccountSID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccountSID
	}).(pulumi.StringPtrOutput)
}

// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o SmsChannelPropertiesResponsePtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o SmsChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o SmsChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The Sms phone
func (o SmsChannelPropertiesResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Sms channel definition
type SmsChannelResponse struct {
	// The channel name
	// Expected value is 'SmsChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for SmsChannelResponse
func (val *SmsChannelResponse) Defaults() *SmsChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Sms channel definition
type SmsChannelResponseOutput struct{ *pulumi.OutputState }

func (SmsChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsChannelResponse)(nil)).Elem()
}

func (o SmsChannelResponseOutput) ToSmsChannelResponseOutput() SmsChannelResponseOutput {
	return o
}

func (o SmsChannelResponseOutput) ToSmsChannelResponseOutputWithContext(ctx context.Context) SmsChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'SmsChannel'.
func (o SmsChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o SmsChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmsChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SmsChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmsChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Sms channel resource
func (o SmsChannelResponseOutput) Properties() SmsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SmsChannelResponse) *SmsChannelPropertiesResponse { return v.Properties }).(SmsChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o SmsChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SmsChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type SmsChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (SmsChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmsChannelResponse)(nil)).Elem()
}

func (o SmsChannelResponsePtrOutput) ToSmsChannelResponsePtrOutput() SmsChannelResponsePtrOutput {
	return o
}

func (o SmsChannelResponsePtrOutput) ToSmsChannelResponsePtrOutputWithContext(ctx context.Context) SmsChannelResponsePtrOutput {
	return o
}

func (o SmsChannelResponsePtrOutput) Elem() SmsChannelResponseOutput {
	return o.ApplyT(func(v *SmsChannelResponse) SmsChannelResponse {
		if v != nil {
			return *v
		}
		var ret SmsChannelResponse
		return ret
	}).(SmsChannelResponseOutput)
}

// The channel name
// Expected value is 'SmsChannel'.
func (o SmsChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o SmsChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o SmsChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Sms channel resource
func (o SmsChannelResponsePtrOutput) Properties() SmsChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SmsChannelResponse) *SmsChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SmsChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o SmsChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmsChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Telegram channel definition
type TelegramChannel struct {
	// The channel name
	// Expected value is 'TelegramChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for TelegramChannel
func (val *TelegramChannel) Defaults() *TelegramChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// TelegramChannelInput is an input type that accepts TelegramChannelArgs and TelegramChannelOutput values.
// You can construct a concrete instance of `TelegramChannelInput` via:
//
//	TelegramChannelArgs{...}
type TelegramChannelInput interface {
	pulumi.Input

	ToTelegramChannelOutput() TelegramChannelOutput
	ToTelegramChannelOutputWithContext(context.Context) TelegramChannelOutput
}

// Telegram channel definition
type TelegramChannelArgs struct {
	// The channel name
	// Expected value is 'TelegramChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Telegram channel resource
	Properties TelegramChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for TelegramChannelArgs
func (val *TelegramChannelArgs) Defaults() *TelegramChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (TelegramChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannel)(nil)).Elem()
}

func (i TelegramChannelArgs) ToTelegramChannelOutput() TelegramChannelOutput {
	return i.ToTelegramChannelOutputWithContext(context.Background())
}

func (i TelegramChannelArgs) ToTelegramChannelOutputWithContext(ctx context.Context) TelegramChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelOutput)
}

func (i TelegramChannelArgs) ToTelegramChannelPtrOutput() TelegramChannelPtrOutput {
	return i.ToTelegramChannelPtrOutputWithContext(context.Background())
}

func (i TelegramChannelArgs) ToTelegramChannelPtrOutputWithContext(ctx context.Context) TelegramChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelOutput).ToTelegramChannelPtrOutputWithContext(ctx)
}

// TelegramChannelPtrInput is an input type that accepts TelegramChannelArgs, TelegramChannelPtr and TelegramChannelPtrOutput values.
// You can construct a concrete instance of `TelegramChannelPtrInput` via:
//
//	        TelegramChannelArgs{...}
//
//	or:
//
//	        nil
type TelegramChannelPtrInput interface {
	pulumi.Input

	ToTelegramChannelPtrOutput() TelegramChannelPtrOutput
	ToTelegramChannelPtrOutputWithContext(context.Context) TelegramChannelPtrOutput
}

type telegramChannelPtrType TelegramChannelArgs

func TelegramChannelPtr(v *TelegramChannelArgs) TelegramChannelPtrInput {
	return (*telegramChannelPtrType)(v)
}

func (*telegramChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannel)(nil)).Elem()
}

func (i *telegramChannelPtrType) ToTelegramChannelPtrOutput() TelegramChannelPtrOutput {
	return i.ToTelegramChannelPtrOutputWithContext(context.Background())
}

func (i *telegramChannelPtrType) ToTelegramChannelPtrOutputWithContext(ctx context.Context) TelegramChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPtrOutput)
}

// Telegram channel definition
type TelegramChannelOutput struct{ *pulumi.OutputState }

func (TelegramChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannel)(nil)).Elem()
}

func (o TelegramChannelOutput) ToTelegramChannelOutput() TelegramChannelOutput {
	return o
}

func (o TelegramChannelOutput) ToTelegramChannelOutputWithContext(ctx context.Context) TelegramChannelOutput {
	return o
}

func (o TelegramChannelOutput) ToTelegramChannelPtrOutput() TelegramChannelPtrOutput {
	return o.ToTelegramChannelPtrOutputWithContext(context.Background())
}

func (o TelegramChannelOutput) ToTelegramChannelPtrOutputWithContext(ctx context.Context) TelegramChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelegramChannel) *TelegramChannel {
		return &v
	}).(TelegramChannelPtrOutput)
}

// The channel name
// Expected value is 'TelegramChannel'.
func (o TelegramChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TelegramChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o TelegramChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelegramChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelegramChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelegramChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telegram channel resource
func (o TelegramChannelOutput) Properties() TelegramChannelPropertiesPtrOutput {
	return o.ApplyT(func(v TelegramChannel) *TelegramChannelProperties { return v.Properties }).(TelegramChannelPropertiesPtrOutput)
}

type TelegramChannelPtrOutput struct{ *pulumi.OutputState }

func (TelegramChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannel)(nil)).Elem()
}

func (o TelegramChannelPtrOutput) ToTelegramChannelPtrOutput() TelegramChannelPtrOutput {
	return o
}

func (o TelegramChannelPtrOutput) ToTelegramChannelPtrOutputWithContext(ctx context.Context) TelegramChannelPtrOutput {
	return o
}

func (o TelegramChannelPtrOutput) Elem() TelegramChannelOutput {
	return o.ApplyT(func(v *TelegramChannel) TelegramChannel {
		if v != nil {
			return *v
		}
		var ret TelegramChannel
		return ret
	}).(TelegramChannelOutput)
}

// The channel name
// Expected value is 'TelegramChannel'.
func (o TelegramChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o TelegramChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelegramChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telegram channel resource
func (o TelegramChannelPtrOutput) Properties() TelegramChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *TelegramChannel) *TelegramChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TelegramChannelPropertiesPtrOutput)
}

// The parameters to provide for the Telegram channel.
type TelegramChannelProperties struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken *string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// TelegramChannelPropertiesInput is an input type that accepts TelegramChannelPropertiesArgs and TelegramChannelPropertiesOutput values.
// You can construct a concrete instance of `TelegramChannelPropertiesInput` via:
//
//	TelegramChannelPropertiesArgs{...}
type TelegramChannelPropertiesInput interface {
	pulumi.Input

	ToTelegramChannelPropertiesOutput() TelegramChannelPropertiesOutput
	ToTelegramChannelPropertiesOutputWithContext(context.Context) TelegramChannelPropertiesOutput
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesArgs struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated pulumi.BoolPtrInput `pulumi:"isValidated"`
}

func (TelegramChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelProperties)(nil)).Elem()
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesOutput() TelegramChannelPropertiesOutput {
	return i.ToTelegramChannelPropertiesOutputWithContext(context.Background())
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesOutputWithContext(ctx context.Context) TelegramChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPropertiesOutput)
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput {
	return i.ToTelegramChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i TelegramChannelPropertiesArgs) ToTelegramChannelPropertiesPtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPropertiesOutput).ToTelegramChannelPropertiesPtrOutputWithContext(ctx)
}

// TelegramChannelPropertiesPtrInput is an input type that accepts TelegramChannelPropertiesArgs, TelegramChannelPropertiesPtr and TelegramChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `TelegramChannelPropertiesPtrInput` via:
//
//	        TelegramChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type TelegramChannelPropertiesPtrInput interface {
	pulumi.Input

	ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput
	ToTelegramChannelPropertiesPtrOutputWithContext(context.Context) TelegramChannelPropertiesPtrOutput
}

type telegramChannelPropertiesPtrType TelegramChannelPropertiesArgs

func TelegramChannelPropertiesPtr(v *TelegramChannelPropertiesArgs) TelegramChannelPropertiesPtrInput {
	return (*telegramChannelPropertiesPtrType)(v)
}

func (*telegramChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannelProperties)(nil)).Elem()
}

func (i *telegramChannelPropertiesPtrType) ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput {
	return i.ToTelegramChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *telegramChannelPropertiesPtrType) ToTelegramChannelPropertiesPtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelegramChannelPropertiesPtrOutput)
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesOutput struct{ *pulumi.OutputState }

func (TelegramChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelProperties)(nil)).Elem()
}

func (o TelegramChannelPropertiesOutput) ToTelegramChannelPropertiesOutput() TelegramChannelPropertiesOutput {
	return o
}

func (o TelegramChannelPropertiesOutput) ToTelegramChannelPropertiesOutputWithContext(ctx context.Context) TelegramChannelPropertiesOutput {
	return o
}

func (o TelegramChannelPropertiesOutput) ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput {
	return o.ToTelegramChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o TelegramChannelPropertiesOutput) ToTelegramChannelPropertiesPtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelegramChannelProperties) *TelegramChannelProperties {
		return &v
	}).(TelegramChannelPropertiesPtrOutput)
}

// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o TelegramChannelPropertiesOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelegramChannelProperties) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o TelegramChannelPropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TelegramChannelProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o TelegramChannelPropertiesOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TelegramChannelProperties) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

type TelegramChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TelegramChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannelProperties)(nil)).Elem()
}

func (o TelegramChannelPropertiesPtrOutput) ToTelegramChannelPropertiesPtrOutput() TelegramChannelPropertiesPtrOutput {
	return o
}

func (o TelegramChannelPropertiesPtrOutput) ToTelegramChannelPropertiesPtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesPtrOutput {
	return o
}

func (o TelegramChannelPropertiesPtrOutput) Elem() TelegramChannelPropertiesOutput {
	return o.ApplyT(func(v *TelegramChannelProperties) TelegramChannelProperties {
		if v != nil {
			return *v
		}
		var ret TelegramChannelProperties
		return ret
	}).(TelegramChannelPropertiesOutput)
}

// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o TelegramChannelPropertiesPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o TelegramChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelegramChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o TelegramChannelPropertiesPtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelegramChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesResponse struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken *string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TelegramChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelPropertiesResponse)(nil)).Elem()
}

func (o TelegramChannelPropertiesResponseOutput) ToTelegramChannelPropertiesResponseOutput() TelegramChannelPropertiesResponseOutput {
	return o
}

func (o TelegramChannelPropertiesResponseOutput) ToTelegramChannelPropertiesResponseOutputWithContext(ctx context.Context) TelegramChannelPropertiesResponseOutput {
	return o
}

// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o TelegramChannelPropertiesResponseOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o TelegramChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this channel is validated for the bot
func (o TelegramChannelPropertiesResponseOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TelegramChannelPropertiesResponse) *bool { return v.IsValidated }).(pulumi.BoolPtrOutput)
}

type TelegramChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TelegramChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannelPropertiesResponse)(nil)).Elem()
}

func (o TelegramChannelPropertiesResponsePtrOutput) ToTelegramChannelPropertiesResponsePtrOutput() TelegramChannelPropertiesResponsePtrOutput {
	return o
}

func (o TelegramChannelPropertiesResponsePtrOutput) ToTelegramChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) TelegramChannelPropertiesResponsePtrOutput {
	return o
}

func (o TelegramChannelPropertiesResponsePtrOutput) Elem() TelegramChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) TelegramChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TelegramChannelPropertiesResponse
		return ret
	}).(TelegramChannelPropertiesResponseOutput)
}

// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
func (o TelegramChannelPropertiesResponsePtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Whether this channel is enabled for the bot
func (o TelegramChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether this channel is validated for the bot
func (o TelegramChannelPropertiesResponsePtrOutput) IsValidated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelegramChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsValidated
	}).(pulumi.BoolPtrOutput)
}

// Telegram channel definition
type TelegramChannelResponse struct {
	// The channel name
	// Expected value is 'TelegramChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for TelegramChannelResponse
func (val *TelegramChannelResponse) Defaults() *TelegramChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Telegram channel definition
type TelegramChannelResponseOutput struct{ *pulumi.OutputState }

func (TelegramChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelegramChannelResponse)(nil)).Elem()
}

func (o TelegramChannelResponseOutput) ToTelegramChannelResponseOutput() TelegramChannelResponseOutput {
	return o
}

func (o TelegramChannelResponseOutput) ToTelegramChannelResponseOutputWithContext(ctx context.Context) TelegramChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'TelegramChannel'.
func (o TelegramChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TelegramChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o TelegramChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelegramChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelegramChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelegramChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telegram channel resource
func (o TelegramChannelResponseOutput) Properties() TelegramChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TelegramChannelResponse) *TelegramChannelPropertiesResponse { return v.Properties }).(TelegramChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o TelegramChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TelegramChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type TelegramChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (TelegramChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelegramChannelResponse)(nil)).Elem()
}

func (o TelegramChannelResponsePtrOutput) ToTelegramChannelResponsePtrOutput() TelegramChannelResponsePtrOutput {
	return o
}

func (o TelegramChannelResponsePtrOutput) ToTelegramChannelResponsePtrOutputWithContext(ctx context.Context) TelegramChannelResponsePtrOutput {
	return o
}

func (o TelegramChannelResponsePtrOutput) Elem() TelegramChannelResponseOutput {
	return o.ApplyT(func(v *TelegramChannelResponse) TelegramChannelResponse {
		if v != nil {
			return *v
		}
		var ret TelegramChannelResponse
		return ret
	}).(TelegramChannelResponseOutput)
}

// The channel name
// Expected value is 'TelegramChannel'.
func (o TelegramChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o TelegramChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelegramChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telegram channel resource
func (o TelegramChannelResponsePtrOutput) Properties() TelegramChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TelegramChannelResponse) *TelegramChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TelegramChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o TelegramChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelegramChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Telephony channel definition
type TelephonyChannel struct {
	// The channel name
	// Expected value is 'TelephonyChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Telephony channel resource
	Properties *TelephonyChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for TelephonyChannel
func (val *TelephonyChannel) Defaults() *TelephonyChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// TelephonyChannelInput is an input type that accepts TelephonyChannelArgs and TelephonyChannelOutput values.
// You can construct a concrete instance of `TelephonyChannelInput` via:
//
//	TelephonyChannelArgs{...}
type TelephonyChannelInput interface {
	pulumi.Input

	ToTelephonyChannelOutput() TelephonyChannelOutput
	ToTelephonyChannelOutputWithContext(context.Context) TelephonyChannelOutput
}

// Telephony channel definition
type TelephonyChannelArgs struct {
	// The channel name
	// Expected value is 'TelephonyChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Telephony channel resource
	Properties TelephonyChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for TelephonyChannelArgs
func (val *TelephonyChannelArgs) Defaults() *TelephonyChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (TelephonyChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannel)(nil)).Elem()
}

func (i TelephonyChannelArgs) ToTelephonyChannelOutput() TelephonyChannelOutput {
	return i.ToTelephonyChannelOutputWithContext(context.Background())
}

func (i TelephonyChannelArgs) ToTelephonyChannelOutputWithContext(ctx context.Context) TelephonyChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelOutput)
}

func (i TelephonyChannelArgs) ToTelephonyChannelPtrOutput() TelephonyChannelPtrOutput {
	return i.ToTelephonyChannelPtrOutputWithContext(context.Background())
}

func (i TelephonyChannelArgs) ToTelephonyChannelPtrOutputWithContext(ctx context.Context) TelephonyChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelOutput).ToTelephonyChannelPtrOutputWithContext(ctx)
}

// TelephonyChannelPtrInput is an input type that accepts TelephonyChannelArgs, TelephonyChannelPtr and TelephonyChannelPtrOutput values.
// You can construct a concrete instance of `TelephonyChannelPtrInput` via:
//
//	        TelephonyChannelArgs{...}
//
//	or:
//
//	        nil
type TelephonyChannelPtrInput interface {
	pulumi.Input

	ToTelephonyChannelPtrOutput() TelephonyChannelPtrOutput
	ToTelephonyChannelPtrOutputWithContext(context.Context) TelephonyChannelPtrOutput
}

type telephonyChannelPtrType TelephonyChannelArgs

func TelephonyChannelPtr(v *TelephonyChannelArgs) TelephonyChannelPtrInput {
	return (*telephonyChannelPtrType)(v)
}

func (*telephonyChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelephonyChannel)(nil)).Elem()
}

func (i *telephonyChannelPtrType) ToTelephonyChannelPtrOutput() TelephonyChannelPtrOutput {
	return i.ToTelephonyChannelPtrOutputWithContext(context.Background())
}

func (i *telephonyChannelPtrType) ToTelephonyChannelPtrOutputWithContext(ctx context.Context) TelephonyChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelPtrOutput)
}

// Telephony channel definition
type TelephonyChannelOutput struct{ *pulumi.OutputState }

func (TelephonyChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannel)(nil)).Elem()
}

func (o TelephonyChannelOutput) ToTelephonyChannelOutput() TelephonyChannelOutput {
	return o
}

func (o TelephonyChannelOutput) ToTelephonyChannelOutputWithContext(ctx context.Context) TelephonyChannelOutput {
	return o
}

func (o TelephonyChannelOutput) ToTelephonyChannelPtrOutput() TelephonyChannelPtrOutput {
	return o.ToTelephonyChannelPtrOutputWithContext(context.Background())
}

func (o TelephonyChannelOutput) ToTelephonyChannelPtrOutputWithContext(ctx context.Context) TelephonyChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelephonyChannel) *TelephonyChannel {
		return &v
	}).(TelephonyChannelPtrOutput)
}

// The channel name
// Expected value is 'TelephonyChannel'.
func (o TelephonyChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TelephonyChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o TelephonyChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelephonyChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telephony channel resource
func (o TelephonyChannelOutput) Properties() TelephonyChannelPropertiesPtrOutput {
	return o.ApplyT(func(v TelephonyChannel) *TelephonyChannelProperties { return v.Properties }).(TelephonyChannelPropertiesPtrOutput)
}

type TelephonyChannelPtrOutput struct{ *pulumi.OutputState }

func (TelephonyChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelephonyChannel)(nil)).Elem()
}

func (o TelephonyChannelPtrOutput) ToTelephonyChannelPtrOutput() TelephonyChannelPtrOutput {
	return o
}

func (o TelephonyChannelPtrOutput) ToTelephonyChannelPtrOutputWithContext(ctx context.Context) TelephonyChannelPtrOutput {
	return o
}

func (o TelephonyChannelPtrOutput) Elem() TelephonyChannelOutput {
	return o.ApplyT(func(v *TelephonyChannel) TelephonyChannel {
		if v != nil {
			return *v
		}
		var ret TelephonyChannel
		return ret
	}).(TelephonyChannelOutput)
}

// The channel name
// Expected value is 'TelephonyChannel'.
func (o TelephonyChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o TelephonyChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelephonyChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telephony channel resource
func (o TelephonyChannelPtrOutput) Properties() TelephonyChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *TelephonyChannel) *TelephonyChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TelephonyChannelPropertiesPtrOutput)
}

// The parameters to provide for the Direct Line channel.
type TelephonyChannelProperties struct {
	// The list of Telephony api configuration
	ApiConfigurations []TelephonyChannelResourceApiConfiguration `pulumi:"apiConfigurations"`
	// The extensionKey2
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The extensionKey1
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale of the channel
	DefaultLocale *string `pulumi:"defaultLocale"`
	// Whether the channel is enabled
	IsEnabled *bool `pulumi:"isEnabled"`
	// The list of Telephony phone numbers
	PhoneNumbers []TelephonyPhoneNumbers `pulumi:"phoneNumbers"`
	// The premium SKU applied to the channel
	PremiumSKU *string `pulumi:"premiumSKU"`
}

// TelephonyChannelPropertiesInput is an input type that accepts TelephonyChannelPropertiesArgs and TelephonyChannelPropertiesOutput values.
// You can construct a concrete instance of `TelephonyChannelPropertiesInput` via:
//
//	TelephonyChannelPropertiesArgs{...}
type TelephonyChannelPropertiesInput interface {
	pulumi.Input

	ToTelephonyChannelPropertiesOutput() TelephonyChannelPropertiesOutput
	ToTelephonyChannelPropertiesOutputWithContext(context.Context) TelephonyChannelPropertiesOutput
}

// The parameters to provide for the Direct Line channel.
type TelephonyChannelPropertiesArgs struct {
	// The list of Telephony api configuration
	ApiConfigurations TelephonyChannelResourceApiConfigurationArrayInput `pulumi:"apiConfigurations"`
	// The extensionKey2
	CognitiveServiceRegion pulumi.StringPtrInput `pulumi:"cognitiveServiceRegion"`
	// The extensionKey1
	CognitiveServiceSubscriptionKey pulumi.StringPtrInput `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale of the channel
	DefaultLocale pulumi.StringPtrInput `pulumi:"defaultLocale"`
	// Whether the channel is enabled
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The list of Telephony phone numbers
	PhoneNumbers TelephonyPhoneNumbersArrayInput `pulumi:"phoneNumbers"`
	// The premium SKU applied to the channel
	PremiumSKU pulumi.StringPtrInput `pulumi:"premiumSKU"`
}

func (TelephonyChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelProperties)(nil)).Elem()
}

func (i TelephonyChannelPropertiesArgs) ToTelephonyChannelPropertiesOutput() TelephonyChannelPropertiesOutput {
	return i.ToTelephonyChannelPropertiesOutputWithContext(context.Background())
}

func (i TelephonyChannelPropertiesArgs) ToTelephonyChannelPropertiesOutputWithContext(ctx context.Context) TelephonyChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelPropertiesOutput)
}

func (i TelephonyChannelPropertiesArgs) ToTelephonyChannelPropertiesPtrOutput() TelephonyChannelPropertiesPtrOutput {
	return i.ToTelephonyChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i TelephonyChannelPropertiesArgs) ToTelephonyChannelPropertiesPtrOutputWithContext(ctx context.Context) TelephonyChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelPropertiesOutput).ToTelephonyChannelPropertiesPtrOutputWithContext(ctx)
}

// TelephonyChannelPropertiesPtrInput is an input type that accepts TelephonyChannelPropertiesArgs, TelephonyChannelPropertiesPtr and TelephonyChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `TelephonyChannelPropertiesPtrInput` via:
//
//	        TelephonyChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type TelephonyChannelPropertiesPtrInput interface {
	pulumi.Input

	ToTelephonyChannelPropertiesPtrOutput() TelephonyChannelPropertiesPtrOutput
	ToTelephonyChannelPropertiesPtrOutputWithContext(context.Context) TelephonyChannelPropertiesPtrOutput
}

type telephonyChannelPropertiesPtrType TelephonyChannelPropertiesArgs

func TelephonyChannelPropertiesPtr(v *TelephonyChannelPropertiesArgs) TelephonyChannelPropertiesPtrInput {
	return (*telephonyChannelPropertiesPtrType)(v)
}

func (*telephonyChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelephonyChannelProperties)(nil)).Elem()
}

func (i *telephonyChannelPropertiesPtrType) ToTelephonyChannelPropertiesPtrOutput() TelephonyChannelPropertiesPtrOutput {
	return i.ToTelephonyChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *telephonyChannelPropertiesPtrType) ToTelephonyChannelPropertiesPtrOutputWithContext(ctx context.Context) TelephonyChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelPropertiesPtrOutput)
}

// The parameters to provide for the Direct Line channel.
type TelephonyChannelPropertiesOutput struct{ *pulumi.OutputState }

func (TelephonyChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelProperties)(nil)).Elem()
}

func (o TelephonyChannelPropertiesOutput) ToTelephonyChannelPropertiesOutput() TelephonyChannelPropertiesOutput {
	return o
}

func (o TelephonyChannelPropertiesOutput) ToTelephonyChannelPropertiesOutputWithContext(ctx context.Context) TelephonyChannelPropertiesOutput {
	return o
}

func (o TelephonyChannelPropertiesOutput) ToTelephonyChannelPropertiesPtrOutput() TelephonyChannelPropertiesPtrOutput {
	return o.ToTelephonyChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o TelephonyChannelPropertiesOutput) ToTelephonyChannelPropertiesPtrOutputWithContext(ctx context.Context) TelephonyChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelephonyChannelProperties) *TelephonyChannelProperties {
		return &v
	}).(TelephonyChannelPropertiesPtrOutput)
}

// The list of Telephony api configuration
func (o TelephonyChannelPropertiesOutput) ApiConfigurations() TelephonyChannelResourceApiConfigurationArrayOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) []TelephonyChannelResourceApiConfiguration {
		return v.ApiConfigurations
	}).(TelephonyChannelResourceApiConfigurationArrayOutput)
}

// The extensionKey2
func (o TelephonyChannelPropertiesOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o TelephonyChannelPropertiesOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// The default locale of the channel
func (o TelephonyChannelPropertiesOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) *string { return v.DefaultLocale }).(pulumi.StringPtrOutput)
}

// Whether the channel is enabled
func (o TelephonyChannelPropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The list of Telephony phone numbers
func (o TelephonyChannelPropertiesOutput) PhoneNumbers() TelephonyPhoneNumbersArrayOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) []TelephonyPhoneNumbers { return v.PhoneNumbers }).(TelephonyPhoneNumbersArrayOutput)
}

// The premium SKU applied to the channel
func (o TelephonyChannelPropertiesOutput) PremiumSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelProperties) *string { return v.PremiumSKU }).(pulumi.StringPtrOutput)
}

type TelephonyChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TelephonyChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelephonyChannelProperties)(nil)).Elem()
}

func (o TelephonyChannelPropertiesPtrOutput) ToTelephonyChannelPropertiesPtrOutput() TelephonyChannelPropertiesPtrOutput {
	return o
}

func (o TelephonyChannelPropertiesPtrOutput) ToTelephonyChannelPropertiesPtrOutputWithContext(ctx context.Context) TelephonyChannelPropertiesPtrOutput {
	return o
}

func (o TelephonyChannelPropertiesPtrOutput) Elem() TelephonyChannelPropertiesOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) TelephonyChannelProperties {
		if v != nil {
			return *v
		}
		var ret TelephonyChannelProperties
		return ret
	}).(TelephonyChannelPropertiesOutput)
}

// The list of Telephony api configuration
func (o TelephonyChannelPropertiesPtrOutput) ApiConfigurations() TelephonyChannelResourceApiConfigurationArrayOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) []TelephonyChannelResourceApiConfiguration {
		if v == nil {
			return nil
		}
		return v.ApiConfigurations
	}).(TelephonyChannelResourceApiConfigurationArrayOutput)
}

// The extensionKey2
func (o TelephonyChannelPropertiesPtrOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceRegion
	}).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o TelephonyChannelPropertiesPtrOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceSubscriptionKey
	}).(pulumi.StringPtrOutput)
}

// The default locale of the channel
func (o TelephonyChannelPropertiesPtrOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLocale
	}).(pulumi.StringPtrOutput)
}

// Whether the channel is enabled
func (o TelephonyChannelPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The list of Telephony phone numbers
func (o TelephonyChannelPropertiesPtrOutput) PhoneNumbers() TelephonyPhoneNumbersArrayOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) []TelephonyPhoneNumbers {
		if v == nil {
			return nil
		}
		return v.PhoneNumbers
	}).(TelephonyPhoneNumbersArrayOutput)
}

// The premium SKU applied to the channel
func (o TelephonyChannelPropertiesPtrOutput) PremiumSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.PremiumSKU
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Direct Line channel.
type TelephonyChannelPropertiesResponse struct {
	// The list of Telephony api configuration
	ApiConfigurations []TelephonyChannelResourceApiConfigurationResponse `pulumi:"apiConfigurations"`
	// The extensionKey2
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The extensionKey1
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale of the channel
	DefaultLocale *string `pulumi:"defaultLocale"`
	// Whether the channel is enabled
	IsEnabled *bool `pulumi:"isEnabled"`
	// The list of Telephony phone numbers
	PhoneNumbers []TelephonyPhoneNumbersResponse `pulumi:"phoneNumbers"`
	// The premium SKU applied to the channel
	PremiumSKU *string `pulumi:"premiumSKU"`
}

// The parameters to provide for the Direct Line channel.
type TelephonyChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TelephonyChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelPropertiesResponse)(nil)).Elem()
}

func (o TelephonyChannelPropertiesResponseOutput) ToTelephonyChannelPropertiesResponseOutput() TelephonyChannelPropertiesResponseOutput {
	return o
}

func (o TelephonyChannelPropertiesResponseOutput) ToTelephonyChannelPropertiesResponseOutputWithContext(ctx context.Context) TelephonyChannelPropertiesResponseOutput {
	return o
}

// The list of Telephony api configuration
func (o TelephonyChannelPropertiesResponseOutput) ApiConfigurations() TelephonyChannelResourceApiConfigurationResponseArrayOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) []TelephonyChannelResourceApiConfigurationResponse {
		return v.ApiConfigurations
	}).(TelephonyChannelResourceApiConfigurationResponseArrayOutput)
}

// The extensionKey2
func (o TelephonyChannelPropertiesResponseOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o TelephonyChannelPropertiesResponseOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// The default locale of the channel
func (o TelephonyChannelPropertiesResponseOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) *string { return v.DefaultLocale }).(pulumi.StringPtrOutput)
}

// Whether the channel is enabled
func (o TelephonyChannelPropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The list of Telephony phone numbers
func (o TelephonyChannelPropertiesResponseOutput) PhoneNumbers() TelephonyPhoneNumbersResponseArrayOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) []TelephonyPhoneNumbersResponse { return v.PhoneNumbers }).(TelephonyPhoneNumbersResponseArrayOutput)
}

// The premium SKU applied to the channel
func (o TelephonyChannelPropertiesResponseOutput) PremiumSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelPropertiesResponse) *string { return v.PremiumSKU }).(pulumi.StringPtrOutput)
}

type TelephonyChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TelephonyChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelephonyChannelPropertiesResponse)(nil)).Elem()
}

func (o TelephonyChannelPropertiesResponsePtrOutput) ToTelephonyChannelPropertiesResponsePtrOutput() TelephonyChannelPropertiesResponsePtrOutput {
	return o
}

func (o TelephonyChannelPropertiesResponsePtrOutput) ToTelephonyChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) TelephonyChannelPropertiesResponsePtrOutput {
	return o
}

func (o TelephonyChannelPropertiesResponsePtrOutput) Elem() TelephonyChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) TelephonyChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TelephonyChannelPropertiesResponse
		return ret
	}).(TelephonyChannelPropertiesResponseOutput)
}

// The list of Telephony api configuration
func (o TelephonyChannelPropertiesResponsePtrOutput) ApiConfigurations() TelephonyChannelResourceApiConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) []TelephonyChannelResourceApiConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ApiConfigurations
	}).(TelephonyChannelResourceApiConfigurationResponseArrayOutput)
}

// The extensionKey2
func (o TelephonyChannelPropertiesResponsePtrOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceRegion
	}).(pulumi.StringPtrOutput)
}

// The extensionKey1
func (o TelephonyChannelPropertiesResponsePtrOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CognitiveServiceSubscriptionKey
	}).(pulumi.StringPtrOutput)
}

// The default locale of the channel
func (o TelephonyChannelPropertiesResponsePtrOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLocale
	}).(pulumi.StringPtrOutput)
}

// Whether the channel is enabled
func (o TelephonyChannelPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The list of Telephony phone numbers
func (o TelephonyChannelPropertiesResponsePtrOutput) PhoneNumbers() TelephonyPhoneNumbersResponseArrayOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) []TelephonyPhoneNumbersResponse {
		if v == nil {
			return nil
		}
		return v.PhoneNumbers
	}).(TelephonyPhoneNumbersResponseArrayOutput)
}

// The premium SKU applied to the channel
func (o TelephonyChannelPropertiesResponsePtrOutput) PremiumSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PremiumSKU
	}).(pulumi.StringPtrOutput)
}

// A resource Api configuration for the Telephony channel
type TelephonyChannelResourceApiConfiguration struct {
	// The cognitive service region.
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The cognitive service resourceId.
	CognitiveServiceResourceId *string `pulumi:"cognitiveServiceResourceId"`
	// The cognitive service subscription key.
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale.
	DefaultLocale *string `pulumi:"defaultLocale"`
	// The id of config.
	Id *string `pulumi:"id"`
	// The provider name.
	ProviderName *string `pulumi:"providerName"`
}

// TelephonyChannelResourceApiConfigurationInput is an input type that accepts TelephonyChannelResourceApiConfigurationArgs and TelephonyChannelResourceApiConfigurationOutput values.
// You can construct a concrete instance of `TelephonyChannelResourceApiConfigurationInput` via:
//
//	TelephonyChannelResourceApiConfigurationArgs{...}
type TelephonyChannelResourceApiConfigurationInput interface {
	pulumi.Input

	ToTelephonyChannelResourceApiConfigurationOutput() TelephonyChannelResourceApiConfigurationOutput
	ToTelephonyChannelResourceApiConfigurationOutputWithContext(context.Context) TelephonyChannelResourceApiConfigurationOutput
}

// A resource Api configuration for the Telephony channel
type TelephonyChannelResourceApiConfigurationArgs struct {
	// The cognitive service region.
	CognitiveServiceRegion pulumi.StringPtrInput `pulumi:"cognitiveServiceRegion"`
	// The cognitive service resourceId.
	CognitiveServiceResourceId pulumi.StringPtrInput `pulumi:"cognitiveServiceResourceId"`
	// The cognitive service subscription key.
	CognitiveServiceSubscriptionKey pulumi.StringPtrInput `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale.
	DefaultLocale pulumi.StringPtrInput `pulumi:"defaultLocale"`
	// The id of config.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The provider name.
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
}

func (TelephonyChannelResourceApiConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelResourceApiConfiguration)(nil)).Elem()
}

func (i TelephonyChannelResourceApiConfigurationArgs) ToTelephonyChannelResourceApiConfigurationOutput() TelephonyChannelResourceApiConfigurationOutput {
	return i.ToTelephonyChannelResourceApiConfigurationOutputWithContext(context.Background())
}

func (i TelephonyChannelResourceApiConfigurationArgs) ToTelephonyChannelResourceApiConfigurationOutputWithContext(ctx context.Context) TelephonyChannelResourceApiConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelResourceApiConfigurationOutput)
}

// TelephonyChannelResourceApiConfigurationArrayInput is an input type that accepts TelephonyChannelResourceApiConfigurationArray and TelephonyChannelResourceApiConfigurationArrayOutput values.
// You can construct a concrete instance of `TelephonyChannelResourceApiConfigurationArrayInput` via:
//
//	TelephonyChannelResourceApiConfigurationArray{ TelephonyChannelResourceApiConfigurationArgs{...} }
type TelephonyChannelResourceApiConfigurationArrayInput interface {
	pulumi.Input

	ToTelephonyChannelResourceApiConfigurationArrayOutput() TelephonyChannelResourceApiConfigurationArrayOutput
	ToTelephonyChannelResourceApiConfigurationArrayOutputWithContext(context.Context) TelephonyChannelResourceApiConfigurationArrayOutput
}

type TelephonyChannelResourceApiConfigurationArray []TelephonyChannelResourceApiConfigurationInput

func (TelephonyChannelResourceApiConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TelephonyChannelResourceApiConfiguration)(nil)).Elem()
}

func (i TelephonyChannelResourceApiConfigurationArray) ToTelephonyChannelResourceApiConfigurationArrayOutput() TelephonyChannelResourceApiConfigurationArrayOutput {
	return i.ToTelephonyChannelResourceApiConfigurationArrayOutputWithContext(context.Background())
}

func (i TelephonyChannelResourceApiConfigurationArray) ToTelephonyChannelResourceApiConfigurationArrayOutputWithContext(ctx context.Context) TelephonyChannelResourceApiConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyChannelResourceApiConfigurationArrayOutput)
}

// A resource Api configuration for the Telephony channel
type TelephonyChannelResourceApiConfigurationOutput struct{ *pulumi.OutputState }

func (TelephonyChannelResourceApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelResourceApiConfiguration)(nil)).Elem()
}

func (o TelephonyChannelResourceApiConfigurationOutput) ToTelephonyChannelResourceApiConfigurationOutput() TelephonyChannelResourceApiConfigurationOutput {
	return o
}

func (o TelephonyChannelResourceApiConfigurationOutput) ToTelephonyChannelResourceApiConfigurationOutputWithContext(ctx context.Context) TelephonyChannelResourceApiConfigurationOutput {
	return o
}

// The cognitive service region.
func (o TelephonyChannelResourceApiConfigurationOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfiguration) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The cognitive service resourceId.
func (o TelephonyChannelResourceApiConfigurationOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfiguration) *string { return v.CognitiveServiceResourceId }).(pulumi.StringPtrOutput)
}

// The cognitive service subscription key.
func (o TelephonyChannelResourceApiConfigurationOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfiguration) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// The default locale.
func (o TelephonyChannelResourceApiConfigurationOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfiguration) *string { return v.DefaultLocale }).(pulumi.StringPtrOutput)
}

// The id of config.
func (o TelephonyChannelResourceApiConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The provider name.
func (o TelephonyChannelResourceApiConfigurationOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfiguration) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

type TelephonyChannelResourceApiConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TelephonyChannelResourceApiConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TelephonyChannelResourceApiConfiguration)(nil)).Elem()
}

func (o TelephonyChannelResourceApiConfigurationArrayOutput) ToTelephonyChannelResourceApiConfigurationArrayOutput() TelephonyChannelResourceApiConfigurationArrayOutput {
	return o
}

func (o TelephonyChannelResourceApiConfigurationArrayOutput) ToTelephonyChannelResourceApiConfigurationArrayOutputWithContext(ctx context.Context) TelephonyChannelResourceApiConfigurationArrayOutput {
	return o
}

func (o TelephonyChannelResourceApiConfigurationArrayOutput) Index(i pulumi.IntInput) TelephonyChannelResourceApiConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TelephonyChannelResourceApiConfiguration {
		return vs[0].([]TelephonyChannelResourceApiConfiguration)[vs[1].(int)]
	}).(TelephonyChannelResourceApiConfigurationOutput)
}

// A resource Api configuration for the Telephony channel
type TelephonyChannelResourceApiConfigurationResponse struct {
	// The cognitive service region.
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The cognitive service resourceId.
	CognitiveServiceResourceId *string `pulumi:"cognitiveServiceResourceId"`
	// The cognitive service subscription key.
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale.
	DefaultLocale *string `pulumi:"defaultLocale"`
	// The id of config.
	Id *string `pulumi:"id"`
	// The provider name.
	ProviderName *string `pulumi:"providerName"`
}

// A resource Api configuration for the Telephony channel
type TelephonyChannelResourceApiConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TelephonyChannelResourceApiConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelResourceApiConfigurationResponse)(nil)).Elem()
}

func (o TelephonyChannelResourceApiConfigurationResponseOutput) ToTelephonyChannelResourceApiConfigurationResponseOutput() TelephonyChannelResourceApiConfigurationResponseOutput {
	return o
}

func (o TelephonyChannelResourceApiConfigurationResponseOutput) ToTelephonyChannelResourceApiConfigurationResponseOutputWithContext(ctx context.Context) TelephonyChannelResourceApiConfigurationResponseOutput {
	return o
}

// The cognitive service region.
func (o TelephonyChannelResourceApiConfigurationResponseOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfigurationResponse) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The cognitive service resourceId.
func (o TelephonyChannelResourceApiConfigurationResponseOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfigurationResponse) *string { return v.CognitiveServiceResourceId }).(pulumi.StringPtrOutput)
}

// The cognitive service subscription key.
func (o TelephonyChannelResourceApiConfigurationResponseOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfigurationResponse) *string {
		return v.CognitiveServiceSubscriptionKey
	}).(pulumi.StringPtrOutput)
}

// The default locale.
func (o TelephonyChannelResourceApiConfigurationResponseOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfigurationResponse) *string { return v.DefaultLocale }).(pulumi.StringPtrOutput)
}

// The id of config.
func (o TelephonyChannelResourceApiConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The provider name.
func (o TelephonyChannelResourceApiConfigurationResponseOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResourceApiConfigurationResponse) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

type TelephonyChannelResourceApiConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (TelephonyChannelResourceApiConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TelephonyChannelResourceApiConfigurationResponse)(nil)).Elem()
}

func (o TelephonyChannelResourceApiConfigurationResponseArrayOutput) ToTelephonyChannelResourceApiConfigurationResponseArrayOutput() TelephonyChannelResourceApiConfigurationResponseArrayOutput {
	return o
}

func (o TelephonyChannelResourceApiConfigurationResponseArrayOutput) ToTelephonyChannelResourceApiConfigurationResponseArrayOutputWithContext(ctx context.Context) TelephonyChannelResourceApiConfigurationResponseArrayOutput {
	return o
}

func (o TelephonyChannelResourceApiConfigurationResponseArrayOutput) Index(i pulumi.IntInput) TelephonyChannelResourceApiConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TelephonyChannelResourceApiConfigurationResponse {
		return vs[0].([]TelephonyChannelResourceApiConfigurationResponse)[vs[1].(int)]
	}).(TelephonyChannelResourceApiConfigurationResponseOutput)
}

// Telephony channel definition
type TelephonyChannelResponse struct {
	// The channel name
	// Expected value is 'TelephonyChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Telephony channel resource
	Properties *TelephonyChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for TelephonyChannelResponse
func (val *TelephonyChannelResponse) Defaults() *TelephonyChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Telephony channel definition
type TelephonyChannelResponseOutput struct{ *pulumi.OutputState }

func (TelephonyChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyChannelResponse)(nil)).Elem()
}

func (o TelephonyChannelResponseOutput) ToTelephonyChannelResponseOutput() TelephonyChannelResponseOutput {
	return o
}

func (o TelephonyChannelResponseOutput) ToTelephonyChannelResponseOutputWithContext(ctx context.Context) TelephonyChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'TelephonyChannel'.
func (o TelephonyChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TelephonyChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o TelephonyChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelephonyChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telephony channel resource
func (o TelephonyChannelResponseOutput) Properties() TelephonyChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TelephonyChannelResponse) *TelephonyChannelPropertiesResponse { return v.Properties }).(TelephonyChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o TelephonyChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TelephonyChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type TelephonyChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (TelephonyChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelephonyChannelResponse)(nil)).Elem()
}

func (o TelephonyChannelResponsePtrOutput) ToTelephonyChannelResponsePtrOutput() TelephonyChannelResponsePtrOutput {
	return o
}

func (o TelephonyChannelResponsePtrOutput) ToTelephonyChannelResponsePtrOutputWithContext(ctx context.Context) TelephonyChannelResponsePtrOutput {
	return o
}

func (o TelephonyChannelResponsePtrOutput) Elem() TelephonyChannelResponseOutput {
	return o.ApplyT(func(v *TelephonyChannelResponse) TelephonyChannelResponse {
		if v != nil {
			return *v
		}
		var ret TelephonyChannelResponse
		return ret
	}).(TelephonyChannelResponseOutput)
}

// The channel name
// Expected value is 'TelephonyChannel'.
func (o TelephonyChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o TelephonyChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o TelephonyChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Telephony channel resource
func (o TelephonyChannelResponsePtrOutput) Properties() TelephonyChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TelephonyChannelResponse) *TelephonyChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TelephonyChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o TelephonyChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelephonyChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A telephone number for the Telephony channel
type TelephonyPhoneNumbers struct {
	// The endpoint of ACS.
	AcsEndpoint *string `pulumi:"acsEndpoint"`
	// The resource id of ACS.
	AcsResourceId *string `pulumi:"acsResourceId"`
	// The secret of ACS.
	AcsSecret *string `pulumi:"acsSecret"`
	// The service region of cognitive service.
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The resource id of cognitive service.
	CognitiveServiceResourceId *string `pulumi:"cognitiveServiceResourceId"`
	// The subscription key of cognitive service.
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale of the phone number.
	DefaultLocale *string `pulumi:"defaultLocale"`
	// The element id.
	Id *string `pulumi:"id"`
	// Optional Property that will determine the offering type of the phone.
	OfferType *string `pulumi:"offerType"`
	// The phone number.
	PhoneNumber *string `pulumi:"phoneNumber"`
}

// TelephonyPhoneNumbersInput is an input type that accepts TelephonyPhoneNumbersArgs and TelephonyPhoneNumbersOutput values.
// You can construct a concrete instance of `TelephonyPhoneNumbersInput` via:
//
//	TelephonyPhoneNumbersArgs{...}
type TelephonyPhoneNumbersInput interface {
	pulumi.Input

	ToTelephonyPhoneNumbersOutput() TelephonyPhoneNumbersOutput
	ToTelephonyPhoneNumbersOutputWithContext(context.Context) TelephonyPhoneNumbersOutput
}

// A telephone number for the Telephony channel
type TelephonyPhoneNumbersArgs struct {
	// The endpoint of ACS.
	AcsEndpoint pulumi.StringPtrInput `pulumi:"acsEndpoint"`
	// The resource id of ACS.
	AcsResourceId pulumi.StringPtrInput `pulumi:"acsResourceId"`
	// The secret of ACS.
	AcsSecret pulumi.StringPtrInput `pulumi:"acsSecret"`
	// The service region of cognitive service.
	CognitiveServiceRegion pulumi.StringPtrInput `pulumi:"cognitiveServiceRegion"`
	// The resource id of cognitive service.
	CognitiveServiceResourceId pulumi.StringPtrInput `pulumi:"cognitiveServiceResourceId"`
	// The subscription key of cognitive service.
	CognitiveServiceSubscriptionKey pulumi.StringPtrInput `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale of the phone number.
	DefaultLocale pulumi.StringPtrInput `pulumi:"defaultLocale"`
	// The element id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Optional Property that will determine the offering type of the phone.
	OfferType pulumi.StringPtrInput `pulumi:"offerType"`
	// The phone number.
	PhoneNumber pulumi.StringPtrInput `pulumi:"phoneNumber"`
}

func (TelephonyPhoneNumbersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyPhoneNumbers)(nil)).Elem()
}

func (i TelephonyPhoneNumbersArgs) ToTelephonyPhoneNumbersOutput() TelephonyPhoneNumbersOutput {
	return i.ToTelephonyPhoneNumbersOutputWithContext(context.Background())
}

func (i TelephonyPhoneNumbersArgs) ToTelephonyPhoneNumbersOutputWithContext(ctx context.Context) TelephonyPhoneNumbersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyPhoneNumbersOutput)
}

// TelephonyPhoneNumbersArrayInput is an input type that accepts TelephonyPhoneNumbersArray and TelephonyPhoneNumbersArrayOutput values.
// You can construct a concrete instance of `TelephonyPhoneNumbersArrayInput` via:
//
//	TelephonyPhoneNumbersArray{ TelephonyPhoneNumbersArgs{...} }
type TelephonyPhoneNumbersArrayInput interface {
	pulumi.Input

	ToTelephonyPhoneNumbersArrayOutput() TelephonyPhoneNumbersArrayOutput
	ToTelephonyPhoneNumbersArrayOutputWithContext(context.Context) TelephonyPhoneNumbersArrayOutput
}

type TelephonyPhoneNumbersArray []TelephonyPhoneNumbersInput

func (TelephonyPhoneNumbersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TelephonyPhoneNumbers)(nil)).Elem()
}

func (i TelephonyPhoneNumbersArray) ToTelephonyPhoneNumbersArrayOutput() TelephonyPhoneNumbersArrayOutput {
	return i.ToTelephonyPhoneNumbersArrayOutputWithContext(context.Background())
}

func (i TelephonyPhoneNumbersArray) ToTelephonyPhoneNumbersArrayOutputWithContext(ctx context.Context) TelephonyPhoneNumbersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelephonyPhoneNumbersArrayOutput)
}

// A telephone number for the Telephony channel
type TelephonyPhoneNumbersOutput struct{ *pulumi.OutputState }

func (TelephonyPhoneNumbersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyPhoneNumbers)(nil)).Elem()
}

func (o TelephonyPhoneNumbersOutput) ToTelephonyPhoneNumbersOutput() TelephonyPhoneNumbersOutput {
	return o
}

func (o TelephonyPhoneNumbersOutput) ToTelephonyPhoneNumbersOutputWithContext(ctx context.Context) TelephonyPhoneNumbersOutput {
	return o
}

// The endpoint of ACS.
func (o TelephonyPhoneNumbersOutput) AcsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.AcsEndpoint }).(pulumi.StringPtrOutput)
}

// The resource id of ACS.
func (o TelephonyPhoneNumbersOutput) AcsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.AcsResourceId }).(pulumi.StringPtrOutput)
}

// The secret of ACS.
func (o TelephonyPhoneNumbersOutput) AcsSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.AcsSecret }).(pulumi.StringPtrOutput)
}

// The service region of cognitive service.
func (o TelephonyPhoneNumbersOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The resource id of cognitive service.
func (o TelephonyPhoneNumbersOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.CognitiveServiceResourceId }).(pulumi.StringPtrOutput)
}

// The subscription key of cognitive service.
func (o TelephonyPhoneNumbersOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// The default locale of the phone number.
func (o TelephonyPhoneNumbersOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.DefaultLocale }).(pulumi.StringPtrOutput)
}

// The element id.
func (o TelephonyPhoneNumbersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Optional Property that will determine the offering type of the phone.
func (o TelephonyPhoneNumbersOutput) OfferType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.OfferType }).(pulumi.StringPtrOutput)
}

// The phone number.
func (o TelephonyPhoneNumbersOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbers) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

type TelephonyPhoneNumbersArrayOutput struct{ *pulumi.OutputState }

func (TelephonyPhoneNumbersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TelephonyPhoneNumbers)(nil)).Elem()
}

func (o TelephonyPhoneNumbersArrayOutput) ToTelephonyPhoneNumbersArrayOutput() TelephonyPhoneNumbersArrayOutput {
	return o
}

func (o TelephonyPhoneNumbersArrayOutput) ToTelephonyPhoneNumbersArrayOutputWithContext(ctx context.Context) TelephonyPhoneNumbersArrayOutput {
	return o
}

func (o TelephonyPhoneNumbersArrayOutput) Index(i pulumi.IntInput) TelephonyPhoneNumbersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TelephonyPhoneNumbers {
		return vs[0].([]TelephonyPhoneNumbers)[vs[1].(int)]
	}).(TelephonyPhoneNumbersOutput)
}

// A telephone number for the Telephony channel
type TelephonyPhoneNumbersResponse struct {
	// The endpoint of ACS.
	AcsEndpoint *string `pulumi:"acsEndpoint"`
	// The resource id of ACS.
	AcsResourceId *string `pulumi:"acsResourceId"`
	// The secret of ACS.
	AcsSecret *string `pulumi:"acsSecret"`
	// The service region of cognitive service.
	CognitiveServiceRegion *string `pulumi:"cognitiveServiceRegion"`
	// The resource id of cognitive service.
	CognitiveServiceResourceId *string `pulumi:"cognitiveServiceResourceId"`
	// The subscription key of cognitive service.
	CognitiveServiceSubscriptionKey *string `pulumi:"cognitiveServiceSubscriptionKey"`
	// The default locale of the phone number.
	DefaultLocale *string `pulumi:"defaultLocale"`
	// The element id.
	Id *string `pulumi:"id"`
	// Optional Property that will determine the offering type of the phone.
	OfferType *string `pulumi:"offerType"`
	// The phone number.
	PhoneNumber *string `pulumi:"phoneNumber"`
}

// A telephone number for the Telephony channel
type TelephonyPhoneNumbersResponseOutput struct{ *pulumi.OutputState }

func (TelephonyPhoneNumbersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelephonyPhoneNumbersResponse)(nil)).Elem()
}

func (o TelephonyPhoneNumbersResponseOutput) ToTelephonyPhoneNumbersResponseOutput() TelephonyPhoneNumbersResponseOutput {
	return o
}

func (o TelephonyPhoneNumbersResponseOutput) ToTelephonyPhoneNumbersResponseOutputWithContext(ctx context.Context) TelephonyPhoneNumbersResponseOutput {
	return o
}

// The endpoint of ACS.
func (o TelephonyPhoneNumbersResponseOutput) AcsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.AcsEndpoint }).(pulumi.StringPtrOutput)
}

// The resource id of ACS.
func (o TelephonyPhoneNumbersResponseOutput) AcsResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.AcsResourceId }).(pulumi.StringPtrOutput)
}

// The secret of ACS.
func (o TelephonyPhoneNumbersResponseOutput) AcsSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.AcsSecret }).(pulumi.StringPtrOutput)
}

// The service region of cognitive service.
func (o TelephonyPhoneNumbersResponseOutput) CognitiveServiceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.CognitiveServiceRegion }).(pulumi.StringPtrOutput)
}

// The resource id of cognitive service.
func (o TelephonyPhoneNumbersResponseOutput) CognitiveServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.CognitiveServiceResourceId }).(pulumi.StringPtrOutput)
}

// The subscription key of cognitive service.
func (o TelephonyPhoneNumbersResponseOutput) CognitiveServiceSubscriptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.CognitiveServiceSubscriptionKey }).(pulumi.StringPtrOutput)
}

// The default locale of the phone number.
func (o TelephonyPhoneNumbersResponseOutput) DefaultLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.DefaultLocale }).(pulumi.StringPtrOutput)
}

// The element id.
func (o TelephonyPhoneNumbersResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Optional Property that will determine the offering type of the phone.
func (o TelephonyPhoneNumbersResponseOutput) OfferType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.OfferType }).(pulumi.StringPtrOutput)
}

// The phone number.
func (o TelephonyPhoneNumbersResponseOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelephonyPhoneNumbersResponse) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

type TelephonyPhoneNumbersResponseArrayOutput struct{ *pulumi.OutputState }

func (TelephonyPhoneNumbersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TelephonyPhoneNumbersResponse)(nil)).Elem()
}

func (o TelephonyPhoneNumbersResponseArrayOutput) ToTelephonyPhoneNumbersResponseArrayOutput() TelephonyPhoneNumbersResponseArrayOutput {
	return o
}

func (o TelephonyPhoneNumbersResponseArrayOutput) ToTelephonyPhoneNumbersResponseArrayOutputWithContext(ctx context.Context) TelephonyPhoneNumbersResponseArrayOutput {
	return o
}

func (o TelephonyPhoneNumbersResponseArrayOutput) Index(i pulumi.IntInput) TelephonyPhoneNumbersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TelephonyPhoneNumbersResponse {
		return vs[0].([]TelephonyPhoneNumbersResponse)[vs[1].(int)]
	}).(TelephonyPhoneNumbersResponseOutput)
}

// Web Chat channel definition
type WebChatChannel struct {
	// The channel name
	// Expected value is 'WebChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelProperties `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for WebChatChannel
func (val *WebChatChannel) Defaults() *WebChatChannel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// WebChatChannelInput is an input type that accepts WebChatChannelArgs and WebChatChannelOutput values.
// You can construct a concrete instance of `WebChatChannelInput` via:
//
//	WebChatChannelArgs{...}
type WebChatChannelInput interface {
	pulumi.Input

	ToWebChatChannelOutput() WebChatChannelOutput
	ToWebChatChannelOutputWithContext(context.Context) WebChatChannelOutput
}

// Web Chat channel definition
type WebChatChannelArgs struct {
	// The channel name
	// Expected value is 'WebChatChannel'.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The set of properties specific to Web Chat channel resource
	Properties WebChatChannelPropertiesPtrInput `pulumi:"properties"`
}

// Defaults sets the appropriate defaults for WebChatChannelArgs
func (val *WebChatChannelArgs) Defaults() *WebChatChannelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		tmp.Location = pulumi.StringPtr("global")
	}
	return &tmp
}
func (WebChatChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannel)(nil)).Elem()
}

func (i WebChatChannelArgs) ToWebChatChannelOutput() WebChatChannelOutput {
	return i.ToWebChatChannelOutputWithContext(context.Background())
}

func (i WebChatChannelArgs) ToWebChatChannelOutputWithContext(ctx context.Context) WebChatChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelOutput)
}

func (i WebChatChannelArgs) ToWebChatChannelPtrOutput() WebChatChannelPtrOutput {
	return i.ToWebChatChannelPtrOutputWithContext(context.Background())
}

func (i WebChatChannelArgs) ToWebChatChannelPtrOutputWithContext(ctx context.Context) WebChatChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelOutput).ToWebChatChannelPtrOutputWithContext(ctx)
}

// WebChatChannelPtrInput is an input type that accepts WebChatChannelArgs, WebChatChannelPtr and WebChatChannelPtrOutput values.
// You can construct a concrete instance of `WebChatChannelPtrInput` via:
//
//	        WebChatChannelArgs{...}
//
//	or:
//
//	        nil
type WebChatChannelPtrInput interface {
	pulumi.Input

	ToWebChatChannelPtrOutput() WebChatChannelPtrOutput
	ToWebChatChannelPtrOutputWithContext(context.Context) WebChatChannelPtrOutput
}

type webChatChannelPtrType WebChatChannelArgs

func WebChatChannelPtr(v *WebChatChannelArgs) WebChatChannelPtrInput {
	return (*webChatChannelPtrType)(v)
}

func (*webChatChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannel)(nil)).Elem()
}

func (i *webChatChannelPtrType) ToWebChatChannelPtrOutput() WebChatChannelPtrOutput {
	return i.ToWebChatChannelPtrOutputWithContext(context.Background())
}

func (i *webChatChannelPtrType) ToWebChatChannelPtrOutputWithContext(ctx context.Context) WebChatChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPtrOutput)
}

// Web Chat channel definition
type WebChatChannelOutput struct{ *pulumi.OutputState }

func (WebChatChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannel)(nil)).Elem()
}

func (o WebChatChannelOutput) ToWebChatChannelOutput() WebChatChannelOutput {
	return o
}

func (o WebChatChannelOutput) ToWebChatChannelOutputWithContext(ctx context.Context) WebChatChannelOutput {
	return o
}

func (o WebChatChannelOutput) ToWebChatChannelPtrOutput() WebChatChannelPtrOutput {
	return o.ToWebChatChannelPtrOutputWithContext(context.Background())
}

func (o WebChatChannelOutput) ToWebChatChannelPtrOutputWithContext(ctx context.Context) WebChatChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebChatChannel) *WebChatChannel {
		return &v
	}).(WebChatChannelPtrOutput)
}

// The channel name
// Expected value is 'WebChatChannel'.
func (o WebChatChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o WebChatChannelOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatChannel) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o WebChatChannelOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatChannel) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Web Chat channel resource
func (o WebChatChannelOutput) Properties() WebChatChannelPropertiesPtrOutput {
	return o.ApplyT(func(v WebChatChannel) *WebChatChannelProperties { return v.Properties }).(WebChatChannelPropertiesPtrOutput)
}

type WebChatChannelPtrOutput struct{ *pulumi.OutputState }

func (WebChatChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannel)(nil)).Elem()
}

func (o WebChatChannelPtrOutput) ToWebChatChannelPtrOutput() WebChatChannelPtrOutput {
	return o
}

func (o WebChatChannelPtrOutput) ToWebChatChannelPtrOutputWithContext(ctx context.Context) WebChatChannelPtrOutput {
	return o
}

func (o WebChatChannelPtrOutput) Elem() WebChatChannelOutput {
	return o.ApplyT(func(v *WebChatChannel) WebChatChannel {
		if v != nil {
			return *v
		}
		var ret WebChatChannel
		return ret
	}).(WebChatChannelOutput)
}

// The channel name
// Expected value is 'WebChatChannel'.
func (o WebChatChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o WebChatChannelPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannel) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o WebChatChannelPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannel) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Web Chat channel resource
func (o WebChatChannelPtrOutput) Properties() WebChatChannelPropertiesPtrOutput {
	return o.ApplyT(func(v *WebChatChannel) *WebChatChannelProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(WebChatChannelPropertiesPtrOutput)
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelProperties struct {
	// The list of Web Chat sites
	Sites []WebChatSite `pulumi:"sites"`
}

// WebChatChannelPropertiesInput is an input type that accepts WebChatChannelPropertiesArgs and WebChatChannelPropertiesOutput values.
// You can construct a concrete instance of `WebChatChannelPropertiesInput` via:
//
//	WebChatChannelPropertiesArgs{...}
type WebChatChannelPropertiesInput interface {
	pulumi.Input

	ToWebChatChannelPropertiesOutput() WebChatChannelPropertiesOutput
	ToWebChatChannelPropertiesOutputWithContext(context.Context) WebChatChannelPropertiesOutput
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesArgs struct {
	// The list of Web Chat sites
	Sites WebChatSiteArrayInput `pulumi:"sites"`
}

func (WebChatChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelProperties)(nil)).Elem()
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesOutput() WebChatChannelPropertiesOutput {
	return i.ToWebChatChannelPropertiesOutputWithContext(context.Background())
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesOutputWithContext(ctx context.Context) WebChatChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPropertiesOutput)
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput {
	return i.ToWebChatChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i WebChatChannelPropertiesArgs) ToWebChatChannelPropertiesPtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPropertiesOutput).ToWebChatChannelPropertiesPtrOutputWithContext(ctx)
}

// WebChatChannelPropertiesPtrInput is an input type that accepts WebChatChannelPropertiesArgs, WebChatChannelPropertiesPtr and WebChatChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `WebChatChannelPropertiesPtrInput` via:
//
//	        WebChatChannelPropertiesArgs{...}
//
//	or:
//
//	        nil
type WebChatChannelPropertiesPtrInput interface {
	pulumi.Input

	ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput
	ToWebChatChannelPropertiesPtrOutputWithContext(context.Context) WebChatChannelPropertiesPtrOutput
}

type webChatChannelPropertiesPtrType WebChatChannelPropertiesArgs

func WebChatChannelPropertiesPtr(v *WebChatChannelPropertiesArgs) WebChatChannelPropertiesPtrInput {
	return (*webChatChannelPropertiesPtrType)(v)
}

func (*webChatChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannelProperties)(nil)).Elem()
}

func (i *webChatChannelPropertiesPtrType) ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput {
	return i.ToWebChatChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *webChatChannelPropertiesPtrType) ToWebChatChannelPropertiesPtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatChannelPropertiesPtrOutput)
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesOutput struct{ *pulumi.OutputState }

func (WebChatChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelProperties)(nil)).Elem()
}

func (o WebChatChannelPropertiesOutput) ToWebChatChannelPropertiesOutput() WebChatChannelPropertiesOutput {
	return o
}

func (o WebChatChannelPropertiesOutput) ToWebChatChannelPropertiesOutputWithContext(ctx context.Context) WebChatChannelPropertiesOutput {
	return o
}

func (o WebChatChannelPropertiesOutput) ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput {
	return o.ToWebChatChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o WebChatChannelPropertiesOutput) ToWebChatChannelPropertiesPtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebChatChannelProperties) *WebChatChannelProperties {
		return &v
	}).(WebChatChannelPropertiesPtrOutput)
}

// The list of Web Chat sites
func (o WebChatChannelPropertiesOutput) Sites() WebChatSiteArrayOutput {
	return o.ApplyT(func(v WebChatChannelProperties) []WebChatSite { return v.Sites }).(WebChatSiteArrayOutput)
}

type WebChatChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebChatChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannelProperties)(nil)).Elem()
}

func (o WebChatChannelPropertiesPtrOutput) ToWebChatChannelPropertiesPtrOutput() WebChatChannelPropertiesPtrOutput {
	return o
}

func (o WebChatChannelPropertiesPtrOutput) ToWebChatChannelPropertiesPtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesPtrOutput {
	return o
}

func (o WebChatChannelPropertiesPtrOutput) Elem() WebChatChannelPropertiesOutput {
	return o.ApplyT(func(v *WebChatChannelProperties) WebChatChannelProperties {
		if v != nil {
			return *v
		}
		var ret WebChatChannelProperties
		return ret
	}).(WebChatChannelPropertiesOutput)
}

// The list of Web Chat sites
func (o WebChatChannelPropertiesPtrOutput) Sites() WebChatSiteArrayOutput {
	return o.ApplyT(func(v *WebChatChannelProperties) []WebChatSite {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(WebChatSiteArrayOutput)
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesResponse struct {
	// The list of Web Chat sites
	Sites []WebChatSiteResponse `pulumi:"sites"`
	// Web chat control embed code
	WebChatEmbedCode string `pulumi:"webChatEmbedCode"`
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WebChatChannelPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelPropertiesResponse)(nil)).Elem()
}

func (o WebChatChannelPropertiesResponseOutput) ToWebChatChannelPropertiesResponseOutput() WebChatChannelPropertiesResponseOutput {
	return o
}

func (o WebChatChannelPropertiesResponseOutput) ToWebChatChannelPropertiesResponseOutputWithContext(ctx context.Context) WebChatChannelPropertiesResponseOutput {
	return o
}

// The list of Web Chat sites
func (o WebChatChannelPropertiesResponseOutput) Sites() WebChatSiteResponseArrayOutput {
	return o.ApplyT(func(v WebChatChannelPropertiesResponse) []WebChatSiteResponse { return v.Sites }).(WebChatSiteResponseArrayOutput)
}

// Web chat control embed code
func (o WebChatChannelPropertiesResponseOutput) WebChatEmbedCode() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatChannelPropertiesResponse) string { return v.WebChatEmbedCode }).(pulumi.StringOutput)
}

type WebChatChannelPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WebChatChannelPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannelPropertiesResponse)(nil)).Elem()
}

func (o WebChatChannelPropertiesResponsePtrOutput) ToWebChatChannelPropertiesResponsePtrOutput() WebChatChannelPropertiesResponsePtrOutput {
	return o
}

func (o WebChatChannelPropertiesResponsePtrOutput) ToWebChatChannelPropertiesResponsePtrOutputWithContext(ctx context.Context) WebChatChannelPropertiesResponsePtrOutput {
	return o
}

func (o WebChatChannelPropertiesResponsePtrOutput) Elem() WebChatChannelPropertiesResponseOutput {
	return o.ApplyT(func(v *WebChatChannelPropertiesResponse) WebChatChannelPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret WebChatChannelPropertiesResponse
		return ret
	}).(WebChatChannelPropertiesResponseOutput)
}

// The list of Web Chat sites
func (o WebChatChannelPropertiesResponsePtrOutput) Sites() WebChatSiteResponseArrayOutput {
	return o.ApplyT(func(v *WebChatChannelPropertiesResponse) []WebChatSiteResponse {
		if v == nil {
			return nil
		}
		return v.Sites
	}).(WebChatSiteResponseArrayOutput)
}

// Web chat control embed code
func (o WebChatChannelPropertiesResponsePtrOutput) WebChatEmbedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannelPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WebChatEmbedCode
	}).(pulumi.StringPtrOutput)
}

// Web Chat channel definition
type WebChatChannelResponse struct {
	// The channel name
	// Expected value is 'WebChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// Entity Tag of the resource
	Etag *string `pulumi:"etag"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelPropertiesResponse `pulumi:"properties"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for WebChatChannelResponse
func (val *WebChatChannelResponse) Defaults() *WebChatChannelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Location == nil {
		location_ := "global"
		tmp.Location = &location_
	}
	return &tmp
}

// Web Chat channel definition
type WebChatChannelResponseOutput struct{ *pulumi.OutputState }

func (WebChatChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatChannelResponse)(nil)).Elem()
}

func (o WebChatChannelResponseOutput) ToWebChatChannelResponseOutput() WebChatChannelResponseOutput {
	return o
}

func (o WebChatChannelResponseOutput) ToWebChatChannelResponseOutputWithContext(ctx context.Context) WebChatChannelResponseOutput {
	return o
}

// The channel name
// Expected value is 'WebChatChannel'.
func (o WebChatChannelResponseOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatChannelResponse) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Entity Tag of the resource
func (o WebChatChannelResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatChannelResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o WebChatChannelResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatChannelResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The set of properties specific to Web Chat channel resource
func (o WebChatChannelResponseOutput) Properties() WebChatChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WebChatChannelResponse) *WebChatChannelPropertiesResponse { return v.Properties }).(WebChatChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o WebChatChannelResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatChannelResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type WebChatChannelResponsePtrOutput struct{ *pulumi.OutputState }

func (WebChatChannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebChatChannelResponse)(nil)).Elem()
}

func (o WebChatChannelResponsePtrOutput) ToWebChatChannelResponsePtrOutput() WebChatChannelResponsePtrOutput {
	return o
}

func (o WebChatChannelResponsePtrOutput) ToWebChatChannelResponsePtrOutputWithContext(ctx context.Context) WebChatChannelResponsePtrOutput {
	return o
}

func (o WebChatChannelResponsePtrOutput) Elem() WebChatChannelResponseOutput {
	return o.ApplyT(func(v *WebChatChannelResponse) WebChatChannelResponse {
		if v != nil {
			return *v
		}
		var ret WebChatChannelResponse
		return ret
	}).(WebChatChannelResponseOutput)
}

// The channel name
// Expected value is 'WebChatChannel'.
func (o WebChatChannelResponsePtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// Entity Tag of the resource
func (o WebChatChannelResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o WebChatChannelResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The set of properties specific to Web Chat channel resource
func (o WebChatChannelResponsePtrOutput) Properties() WebChatChannelPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *WebChatChannelResponse) *WebChatChannelPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(WebChatChannelPropertiesResponsePtrOutput)
}

// Provisioning state of the resource
func (o WebChatChannelResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebChatChannelResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A site for the Webchat channel
type WebChatSite struct {
	// DirectLine application id
	AppId *string `pulumi:"appId"`
	// Entity Tag
	ETag *string `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled *bool `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled *bool `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled *bool `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled *bool `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled *bool `pulumi:"isSecureSiteEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled *bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled *bool `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled *bool `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled bool `pulumi:"isWebchatPreviewEnabled"`
	// Site name
	SiteName string `pulumi:"siteName"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins []string `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for WebChatSite
func (val *WebChatSite) Defaults() *WebChatSite {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		isWebChatSpeechEnabled_ := false
		tmp.IsWebChatSpeechEnabled = &isWebChatSpeechEnabled_
	}
	if utilities.IsZero(tmp.IsWebchatPreviewEnabled) {
		tmp.IsWebchatPreviewEnabled = false
	}
	return &tmp
}

// WebChatSiteInput is an input type that accepts WebChatSiteArgs and WebChatSiteOutput values.
// You can construct a concrete instance of `WebChatSiteInput` via:
//
//	WebChatSiteArgs{...}
type WebChatSiteInput interface {
	pulumi.Input

	ToWebChatSiteOutput() WebChatSiteOutput
	ToWebChatSiteOutputWithContext(context.Context) WebChatSiteOutput
}

// A site for the Webchat channel
type WebChatSiteArgs struct {
	// DirectLine application id
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Entity Tag
	ETag pulumi.StringPtrInput `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled pulumi.BoolPtrInput `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled pulumi.BoolPtrInput `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled pulumi.BoolPtrInput `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled pulumi.BoolPtrInput `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled pulumi.BoolPtrInput `pulumi:"isSecureSiteEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled pulumi.BoolPtrInput `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled pulumi.BoolPtrInput `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled pulumi.BoolPtrInput `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled pulumi.BoolInput `pulumi:"isWebchatPreviewEnabled"`
	// Site name
	SiteName pulumi.StringInput `pulumi:"siteName"`
	// Tenant Id
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins pulumi.StringArrayInput `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for WebChatSiteArgs
func (val *WebChatSiteArgs) Defaults() *WebChatSiteArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		tmp.IsWebChatSpeechEnabled = pulumi.BoolPtr(false)
	}
	if tmp.IsWebchatPreviewEnabled == nil {
		tmp.IsWebchatPreviewEnabled = pulumi.Bool(false)
	}
	return &tmp
}
func (WebChatSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatSite)(nil)).Elem()
}

func (i WebChatSiteArgs) ToWebChatSiteOutput() WebChatSiteOutput {
	return i.ToWebChatSiteOutputWithContext(context.Background())
}

func (i WebChatSiteArgs) ToWebChatSiteOutputWithContext(ctx context.Context) WebChatSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatSiteOutput)
}

// WebChatSiteArrayInput is an input type that accepts WebChatSiteArray and WebChatSiteArrayOutput values.
// You can construct a concrete instance of `WebChatSiteArrayInput` via:
//
//	WebChatSiteArray{ WebChatSiteArgs{...} }
type WebChatSiteArrayInput interface {
	pulumi.Input

	ToWebChatSiteArrayOutput() WebChatSiteArrayOutput
	ToWebChatSiteArrayOutputWithContext(context.Context) WebChatSiteArrayOutput
}

type WebChatSiteArray []WebChatSiteInput

func (WebChatSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebChatSite)(nil)).Elem()
}

func (i WebChatSiteArray) ToWebChatSiteArrayOutput() WebChatSiteArrayOutput {
	return i.ToWebChatSiteArrayOutputWithContext(context.Background())
}

func (i WebChatSiteArray) ToWebChatSiteArrayOutputWithContext(ctx context.Context) WebChatSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebChatSiteArrayOutput)
}

// A site for the Webchat channel
type WebChatSiteOutput struct{ *pulumi.OutputState }

func (WebChatSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatSite)(nil)).Elem()
}

func (o WebChatSiteOutput) ToWebChatSiteOutput() WebChatSiteOutput {
	return o
}

func (o WebChatSiteOutput) ToWebChatSiteOutputWithContext(ctx context.Context) WebChatSiteOutput {
	return o
}

// DirectLine application id
func (o WebChatSiteOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatSite) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Entity Tag
func (o WebChatSiteOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatSite) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Whether this site is enabled for block user upload.
func (o WebChatSiteOutput) IsBlockUserUploadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsBlockUserUploadEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is disabled detailed logging for
func (o WebChatSiteOutput) IsDetailedLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsDetailedLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for DirectLine channel
func (o WebChatSiteOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSite) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this site is EndpointParameters enabled for channel
func (o WebChatSiteOutput) IsEndpointParametersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsEndpointParametersEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this no-storage site is disabled detailed logging for
func (o WebChatSiteOutput) IsNoStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsNoStorageEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for authentication with Bot Framework.
func (o WebChatSiteOutput) IsSecureSiteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsSecureSiteEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol.
func (o WebChatSiteOutput) IsV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsV1Enabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Bot Framework V3 protocol.
func (o WebChatSiteOutput) IsV3Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsV3Enabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Webchat Speech
func (o WebChatSiteOutput) IsWebChatSpeechEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSite) *bool { return v.IsWebChatSpeechEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for preview versions of Webchat
func (o WebChatSiteOutput) IsWebchatPreviewEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSite) bool { return v.IsWebchatPreviewEnabled }).(pulumi.BoolOutput)
}

// Site name
func (o WebChatSiteOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSite) string { return v.SiteName }).(pulumi.StringOutput)
}

// Tenant Id
func (o WebChatSiteOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatSite) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
func (o WebChatSiteOutput) TrustedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebChatSite) []string { return v.TrustedOrigins }).(pulumi.StringArrayOutput)
}

type WebChatSiteArrayOutput struct{ *pulumi.OutputState }

func (WebChatSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebChatSite)(nil)).Elem()
}

func (o WebChatSiteArrayOutput) ToWebChatSiteArrayOutput() WebChatSiteArrayOutput {
	return o
}

func (o WebChatSiteArrayOutput) ToWebChatSiteArrayOutputWithContext(ctx context.Context) WebChatSiteArrayOutput {
	return o
}

func (o WebChatSiteArrayOutput) Index(i pulumi.IntInput) WebChatSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebChatSite {
		return vs[0].([]WebChatSite)[vs[1].(int)]
	}).(WebChatSiteOutput)
}

// A site for the Webchat channel
type WebChatSiteResponse struct {
	// DirectLine application id
	AppId *string `pulumi:"appId"`
	// Entity Tag
	ETag *string `pulumi:"eTag"`
	// Whether this site is enabled for block user upload.
	IsBlockUserUploadEnabled *bool `pulumi:"isBlockUserUploadEnabled"`
	// Whether this site is disabled detailed logging for
	IsDetailedLoggingEnabled *bool `pulumi:"isDetailedLoggingEnabled"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is EndpointParameters enabled for channel
	IsEndpointParametersEnabled *bool `pulumi:"isEndpointParametersEnabled"`
	// Whether this no-storage site is disabled detailed logging for
	IsNoStorageEnabled *bool `pulumi:"isNoStorageEnabled"`
	// Whether this site is enabled for authentication with Bot Framework.
	IsSecureSiteEnabled *bool `pulumi:"isSecureSiteEnabled"`
	// Whether this site is token enabled for channel
	IsTokenEnabled bool `pulumi:"isTokenEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol.
	IsV1Enabled *bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V3 protocol.
	IsV3Enabled *bool `pulumi:"isV3Enabled"`
	// Whether this site is enabled for Webchat Speech
	IsWebChatSpeechEnabled *bool `pulumi:"isWebChatSpeechEnabled"`
	// Whether this site is enabled for preview versions of Webchat
	IsWebchatPreviewEnabled bool `pulumi:"isWebchatPreviewEnabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
	// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
	TrustedOrigins []string `pulumi:"trustedOrigins"`
}

// Defaults sets the appropriate defaults for WebChatSiteResponse
func (val *WebChatSiteResponse) Defaults() *WebChatSiteResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsWebChatSpeechEnabled == nil {
		isWebChatSpeechEnabled_ := false
		tmp.IsWebChatSpeechEnabled = &isWebChatSpeechEnabled_
	}
	if utilities.IsZero(tmp.IsWebchatPreviewEnabled) {
		tmp.IsWebchatPreviewEnabled = false
	}
	return &tmp
}

// A site for the Webchat channel
type WebChatSiteResponseOutput struct{ *pulumi.OutputState }

func (WebChatSiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebChatSiteResponse)(nil)).Elem()
}

func (o WebChatSiteResponseOutput) ToWebChatSiteResponseOutput() WebChatSiteResponseOutput {
	return o
}

func (o WebChatSiteResponseOutput) ToWebChatSiteResponseOutputWithContext(ctx context.Context) WebChatSiteResponseOutput {
	return o
}

// DirectLine application id
func (o WebChatSiteResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Entity Tag
func (o WebChatSiteResponseOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Whether this site is enabled for block user upload.
func (o WebChatSiteResponseOutput) IsBlockUserUploadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsBlockUserUploadEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is disabled detailed logging for
func (o WebChatSiteResponseOutput) IsDetailedLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsDetailedLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for DirectLine channel
func (o WebChatSiteResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSiteResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether this site is EndpointParameters enabled for channel
func (o WebChatSiteResponseOutput) IsEndpointParametersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsEndpointParametersEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this no-storage site is disabled detailed logging for
func (o WebChatSiteResponseOutput) IsNoStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsNoStorageEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for authentication with Bot Framework.
func (o WebChatSiteResponseOutput) IsSecureSiteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsSecureSiteEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is token enabled for channel
func (o WebChatSiteResponseOutput) IsTokenEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSiteResponse) bool { return v.IsTokenEnabled }).(pulumi.BoolOutput)
}

// Whether this site is enabled for Bot Framework V1 protocol.
func (o WebChatSiteResponseOutput) IsV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsV1Enabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Bot Framework V3 protocol.
func (o WebChatSiteResponseOutput) IsV3Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsV3Enabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for Webchat Speech
func (o WebChatSiteResponseOutput) IsWebChatSpeechEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *bool { return v.IsWebChatSpeechEnabled }).(pulumi.BoolPtrOutput)
}

// Whether this site is enabled for preview versions of Webchat
func (o WebChatSiteResponseOutput) IsWebchatPreviewEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebChatSiteResponse) bool { return v.IsWebchatPreviewEnabled }).(pulumi.BoolOutput)
}

// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o WebChatSiteResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
func (o WebChatSiteResponseOutput) Key2() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.Key2 }).(pulumi.StringOutput)
}

// Site Id
func (o WebChatSiteResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

// Site name
func (o WebChatSiteResponseOutput) SiteName() pulumi.StringOutput {
	return o.ApplyT(func(v WebChatSiteResponse) string { return v.SiteName }).(pulumi.StringOutput)
}

// Tenant Id
func (o WebChatSiteResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebChatSiteResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
func (o WebChatSiteResponseOutput) TrustedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebChatSiteResponse) []string { return v.TrustedOrigins }).(pulumi.StringArrayOutput)
}

type WebChatSiteResponseArrayOutput struct{ *pulumi.OutputState }

func (WebChatSiteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebChatSiteResponse)(nil)).Elem()
}

func (o WebChatSiteResponseArrayOutput) ToWebChatSiteResponseArrayOutput() WebChatSiteResponseArrayOutput {
	return o
}

func (o WebChatSiteResponseArrayOutput) ToWebChatSiteResponseArrayOutputWithContext(ctx context.Context) WebChatSiteResponseArrayOutput {
	return o
}

func (o WebChatSiteResponseArrayOutput) Index(i pulumi.IntInput) WebChatSiteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebChatSiteResponse {
		return vs[0].([]WebChatSiteResponse)[vs[1].(int)]
	}).(WebChatSiteResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AcsChatChannelOutput{})
	pulumi.RegisterOutputType(AcsChatChannelPtrOutput{})
	pulumi.RegisterOutputType(AcsChatChannelResponseOutput{})
	pulumi.RegisterOutputType(AcsChatChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(AlexaChannelOutput{})
	pulumi.RegisterOutputType(AlexaChannelPtrOutput{})
	pulumi.RegisterOutputType(AlexaChannelPropertiesOutput{})
	pulumi.RegisterOutputType(AlexaChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AlexaChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AlexaChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AlexaChannelResponseOutput{})
	pulumi.RegisterOutputType(AlexaChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(BotPropertiesOutput{})
	pulumi.RegisterOutputType(BotPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BotPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ChannelSettingsResponseOutput{})
	pulumi.RegisterOutputType(ChannelSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DirectLineChannelOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPtrOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DirectLineChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DirectLineChannelResponseOutput{})
	pulumi.RegisterOutputType(DirectLineChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(DirectLineSiteOutput{})
	pulumi.RegisterOutputType(DirectLineSiteArrayOutput{})
	pulumi.RegisterOutputType(DirectLineSiteResponseOutput{})
	pulumi.RegisterOutputType(DirectLineSiteResponseArrayOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelPtrOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelPropertiesOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelResponseOutput{})
	pulumi.RegisterOutputType(DirectLineSpeechChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(EmailChannelOutput{})
	pulumi.RegisterOutputType(EmailChannelPtrOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EmailChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EmailChannelResponseOutput{})
	pulumi.RegisterOutputType(EmailChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(FacebookChannelOutput{})
	pulumi.RegisterOutputType(FacebookChannelPtrOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FacebookChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FacebookChannelResponseOutput{})
	pulumi.RegisterOutputType(FacebookChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(FacebookPageOutput{})
	pulumi.RegisterOutputType(FacebookPageArrayOutput{})
	pulumi.RegisterOutputType(FacebookPageResponseOutput{})
	pulumi.RegisterOutputType(FacebookPageResponseArrayOutput{})
	pulumi.RegisterOutputType(KikChannelOutput{})
	pulumi.RegisterOutputType(KikChannelPtrOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KikChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KikChannelResponseOutput{})
	pulumi.RegisterOutputType(KikChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(LineChannelOutput{})
	pulumi.RegisterOutputType(LineChannelPtrOutput{})
	pulumi.RegisterOutputType(LineChannelPropertiesOutput{})
	pulumi.RegisterOutputType(LineChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LineChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LineChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LineChannelResponseOutput{})
	pulumi.RegisterOutputType(LineChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(LineRegistrationOutput{})
	pulumi.RegisterOutputType(LineRegistrationArrayOutput{})
	pulumi.RegisterOutputType(LineRegistrationResponseOutput{})
	pulumi.RegisterOutputType(LineRegistrationResponseArrayOutput{})
	pulumi.RegisterOutputType(M365ExtensionsOutput{})
	pulumi.RegisterOutputType(M365ExtensionsPtrOutput{})
	pulumi.RegisterOutputType(M365ExtensionsResponseOutput{})
	pulumi.RegisterOutputType(M365ExtensionsResponsePtrOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPtrOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelResponseOutput{})
	pulumi.RegisterOutputType(MsTeamsChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(OmnichannelOutput{})
	pulumi.RegisterOutputType(OmnichannelPtrOutput{})
	pulumi.RegisterOutputType(OmnichannelResponseOutput{})
	pulumi.RegisterOutputType(OmnichannelResponsePtrOutput{})
	pulumi.RegisterOutputType(OutlookChannelOutput{})
	pulumi.RegisterOutputType(OutlookChannelPtrOutput{})
	pulumi.RegisterOutputType(OutlookChannelResponseOutput{})
	pulumi.RegisterOutputType(OutlookChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(SearchAssistantOutput{})
	pulumi.RegisterOutputType(SearchAssistantPtrOutput{})
	pulumi.RegisterOutputType(SearchAssistantResponseOutput{})
	pulumi.RegisterOutputType(SearchAssistantResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseConstraintsOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseConstraintsPtrOutput{})
	pulumi.RegisterOutputType(ServiceProviderParameterResponseMetadataOutput{})
	pulumi.RegisterOutputType(ServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceProviderResponseOutput{})
	pulumi.RegisterOutputType(ServiceProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(SiteResponseOutput{})
	pulumi.RegisterOutputType(SiteResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelOutput{})
	pulumi.RegisterOutputType(SkypeChannelPtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SkypeChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkypeChannelResponseOutput{})
	pulumi.RegisterOutputType(SkypeChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(SlackChannelOutput{})
	pulumi.RegisterOutputType(SlackChannelPtrOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SlackChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SlackChannelResponseOutput{})
	pulumi.RegisterOutputType(SlackChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(SmsChannelOutput{})
	pulumi.RegisterOutputType(SmsChannelPtrOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SmsChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SmsChannelResponseOutput{})
	pulumi.RegisterOutputType(SmsChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(TelegramChannelOutput{})
	pulumi.RegisterOutputType(TelegramChannelPtrOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TelegramChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TelegramChannelResponseOutput{})
	pulumi.RegisterOutputType(TelegramChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(TelephonyChannelOutput{})
	pulumi.RegisterOutputType(TelephonyChannelPtrOutput{})
	pulumi.RegisterOutputType(TelephonyChannelPropertiesOutput{})
	pulumi.RegisterOutputType(TelephonyChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TelephonyChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TelephonyChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TelephonyChannelResourceApiConfigurationOutput{})
	pulumi.RegisterOutputType(TelephonyChannelResourceApiConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TelephonyChannelResourceApiConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TelephonyChannelResourceApiConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(TelephonyChannelResponseOutput{})
	pulumi.RegisterOutputType(TelephonyChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(TelephonyPhoneNumbersOutput{})
	pulumi.RegisterOutputType(TelephonyPhoneNumbersArrayOutput{})
	pulumi.RegisterOutputType(TelephonyPhoneNumbersResponseOutput{})
	pulumi.RegisterOutputType(TelephonyPhoneNumbersResponseArrayOutput{})
	pulumi.RegisterOutputType(WebChatChannelOutput{})
	pulumi.RegisterOutputType(WebChatChannelPtrOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WebChatChannelPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(WebChatChannelResponseOutput{})
	pulumi.RegisterOutputType(WebChatChannelResponsePtrOutput{})
	pulumi.RegisterOutputType(WebChatSiteOutput{})
	pulumi.RegisterOutputType(WebChatSiteArrayOutput{})
	pulumi.RegisterOutputType(WebChatSiteResponseOutput{})
	pulumi.RegisterOutputType(WebChatSiteResponseArrayOutput{})
}
