// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the list of available versions
func ListManufacturingDataServiceAvailableVersions(ctx *pulumi.Context, args *ListManufacturingDataServiceAvailableVersionsArgs, opts ...pulumi.InvokeOption) (*ListManufacturingDataServiceAvailableVersionsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListManufacturingDataServiceAvailableVersionsResult
	err := ctx.Invoke("azure-native:manufacturingplatform/v20250301:listManufacturingDataServiceAvailableVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListManufacturingDataServiceAvailableVersionsArgs struct {
	// Name.
	MdsResourceName string `pulumi:"mdsResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The list of available versions
type ListManufacturingDataServiceAvailableVersionsResult struct {
	// The list of versions
	Versions []ApplicationVersionResponse `pulumi:"versions"`
}

func ListManufacturingDataServiceAvailableVersionsOutput(ctx *pulumi.Context, args ListManufacturingDataServiceAvailableVersionsOutputArgs, opts ...pulumi.InvokeOption) ListManufacturingDataServiceAvailableVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListManufacturingDataServiceAvailableVersionsResultOutput, error) {
			args := v.(ListManufacturingDataServiceAvailableVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:manufacturingplatform/v20250301:listManufacturingDataServiceAvailableVersions", args, ListManufacturingDataServiceAvailableVersionsResultOutput{}, options).(ListManufacturingDataServiceAvailableVersionsResultOutput), nil
		}).(ListManufacturingDataServiceAvailableVersionsResultOutput)
}

type ListManufacturingDataServiceAvailableVersionsOutputArgs struct {
	// Name.
	MdsResourceName pulumi.StringInput `pulumi:"mdsResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListManufacturingDataServiceAvailableVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListManufacturingDataServiceAvailableVersionsArgs)(nil)).Elem()
}

// The list of available versions
type ListManufacturingDataServiceAvailableVersionsResultOutput struct{ *pulumi.OutputState }

func (ListManufacturingDataServiceAvailableVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListManufacturingDataServiceAvailableVersionsResult)(nil)).Elem()
}

func (o ListManufacturingDataServiceAvailableVersionsResultOutput) ToListManufacturingDataServiceAvailableVersionsResultOutput() ListManufacturingDataServiceAvailableVersionsResultOutput {
	return o
}

func (o ListManufacturingDataServiceAvailableVersionsResultOutput) ToListManufacturingDataServiceAvailableVersionsResultOutputWithContext(ctx context.Context) ListManufacturingDataServiceAvailableVersionsResultOutput {
	return o
}

// The list of versions
func (o ListManufacturingDataServiceAvailableVersionsResultOutput) Versions() ApplicationVersionResponseArrayOutput {
	return o.ApplyT(func(v ListManufacturingDataServiceAvailableVersionsResult) []ApplicationVersionResponse {
		return v.Versions
	}).(ApplicationVersionResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListManufacturingDataServiceAvailableVersionsResultOutput{})
}
