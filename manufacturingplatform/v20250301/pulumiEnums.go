// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Zone redundancy state for resources
type RedundancyState string

const (
	// Resource is zone redundant
	RedundancyStateZonal = RedundancyState("Zonal")
	// Resource is not redundant
	RedundancyStateNone = RedundancyState("None")
)

func (RedundancyState) ElementType() reflect.Type {
	return reflect.TypeOf((*RedundancyState)(nil)).Elem()
}

func (e RedundancyState) ToRedundancyStateOutput() RedundancyStateOutput {
	return pulumi.ToOutput(e).(RedundancyStateOutput)
}

func (e RedundancyState) ToRedundancyStateOutputWithContext(ctx context.Context) RedundancyStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RedundancyStateOutput)
}

func (e RedundancyState) ToRedundancyStatePtrOutput() RedundancyStatePtrOutput {
	return e.ToRedundancyStatePtrOutputWithContext(context.Background())
}

func (e RedundancyState) ToRedundancyStatePtrOutputWithContext(ctx context.Context) RedundancyStatePtrOutput {
	return RedundancyState(e).ToRedundancyStateOutputWithContext(ctx).ToRedundancyStatePtrOutputWithContext(ctx)
}

func (e RedundancyState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedundancyState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedundancyState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RedundancyState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RedundancyStateOutput struct{ *pulumi.OutputState }

func (RedundancyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedundancyState)(nil)).Elem()
}

func (o RedundancyStateOutput) ToRedundancyStateOutput() RedundancyStateOutput {
	return o
}

func (o RedundancyStateOutput) ToRedundancyStateOutputWithContext(ctx context.Context) RedundancyStateOutput {
	return o
}

func (o RedundancyStateOutput) ToRedundancyStatePtrOutput() RedundancyStatePtrOutput {
	return o.ToRedundancyStatePtrOutputWithContext(context.Background())
}

func (o RedundancyStateOutput) ToRedundancyStatePtrOutputWithContext(ctx context.Context) RedundancyStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedundancyState) *RedundancyState {
		return &v
	}).(RedundancyStatePtrOutput)
}

func (o RedundancyStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedundancyStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedundancyState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedundancyStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedundancyStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedundancyState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedundancyStatePtrOutput struct{ *pulumi.OutputState }

func (RedundancyStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedundancyState)(nil)).Elem()
}

func (o RedundancyStatePtrOutput) ToRedundancyStatePtrOutput() RedundancyStatePtrOutput {
	return o
}

func (o RedundancyStatePtrOutput) ToRedundancyStatePtrOutputWithContext(ctx context.Context) RedundancyStatePtrOutput {
	return o
}

func (o RedundancyStatePtrOutput) Elem() RedundancyStateOutput {
	return o.ApplyT(func(v *RedundancyState) RedundancyState {
		if v != nil {
			return *v
		}
		var ret RedundancyState
		return ret
	}).(RedundancyStateOutput)
}

func (o RedundancyStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedundancyStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedundancyState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RedundancyStateInput is an input type that accepts values of the RedundancyState enum
// A concrete instance of `RedundancyStateInput` can be one of the following:
//
//	RedundancyStateZonal
//	RedundancyStateNone
type RedundancyStateInput interface {
	pulumi.Input

	ToRedundancyStateOutput() RedundancyStateOutput
	ToRedundancyStateOutputWithContext(context.Context) RedundancyStateOutput
}

var redundancyStatePtrType = reflect.TypeOf((**RedundancyState)(nil)).Elem()

type RedundancyStatePtrInput interface {
	pulumi.Input

	ToRedundancyStatePtrOutput() RedundancyStatePtrOutput
	ToRedundancyStatePtrOutputWithContext(context.Context) RedundancyStatePtrOutput
}

type redundancyStatePtr string

func RedundancyStatePtr(v string) RedundancyStatePtrInput {
	return (*redundancyStatePtr)(&v)
}

func (*redundancyStatePtr) ElementType() reflect.Type {
	return redundancyStatePtrType
}

func (in *redundancyStatePtr) ToRedundancyStatePtrOutput() RedundancyStatePtrOutput {
	return pulumi.ToOutput(in).(RedundancyStatePtrOutput)
}

func (in *redundancyStatePtr) ToRedundancyStatePtrOutputWithContext(ctx context.Context) RedundancyStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RedundancyStatePtrOutput)
}

// State of the resource
type ResourceState string

const (
	// Resource is in active state
	ResourceStateActive = ResourceState("Active")
	// Resource is in inactive state
	ResourceStateInactive = ResourceState("Inactive")
)

func (ResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceState)(nil)).Elem()
}

func (e ResourceState) ToResourceStateOutput() ResourceStateOutput {
	return pulumi.ToOutput(e).(ResourceStateOutput)
}

func (e ResourceState) ToResourceStateOutputWithContext(ctx context.Context) ResourceStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceStateOutput)
}

func (e ResourceState) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return e.ToResourceStatePtrOutputWithContext(context.Background())
}

func (e ResourceState) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return ResourceState(e).ToResourceStateOutputWithContext(ctx).ToResourceStatePtrOutputWithContext(ctx)
}

func (e ResourceState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceStateOutput struct{ *pulumi.OutputState }

func (ResourceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceState)(nil)).Elem()
}

func (o ResourceStateOutput) ToResourceStateOutput() ResourceStateOutput {
	return o
}

func (o ResourceStateOutput) ToResourceStateOutputWithContext(ctx context.Context) ResourceStateOutput {
	return o
}

func (o ResourceStateOutput) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return o.ToResourceStatePtrOutputWithContext(context.Background())
}

func (o ResourceStateOutput) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceState) *ResourceState {
		return &v
	}).(ResourceStatePtrOutput)
}

func (o ResourceStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceStatePtrOutput struct{ *pulumi.OutputState }

func (ResourceStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceState)(nil)).Elem()
}

func (o ResourceStatePtrOutput) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return o
}

func (o ResourceStatePtrOutput) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return o
}

func (o ResourceStatePtrOutput) Elem() ResourceStateOutput {
	return o.ApplyT(func(v *ResourceState) ResourceState {
		if v != nil {
			return *v
		}
		var ret ResourceState
		return ret
	}).(ResourceStateOutput)
}

func (o ResourceStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceStateInput is an input type that accepts values of the ResourceState enum
// A concrete instance of `ResourceStateInput` can be one of the following:
//
//	ResourceStateActive
//	ResourceStateInactive
type ResourceStateInput interface {
	pulumi.Input

	ToResourceStateOutput() ResourceStateOutput
	ToResourceStateOutputWithContext(context.Context) ResourceStateOutput
}

var resourceStatePtrType = reflect.TypeOf((**ResourceState)(nil)).Elem()

type ResourceStatePtrInput interface {
	pulumi.Input

	ToResourceStatePtrOutput() ResourceStatePtrOutput
	ToResourceStatePtrOutputWithContext(context.Context) ResourceStatePtrOutput
}

type resourceStatePtr string

func ResourceStatePtr(v string) ResourceStatePtrInput {
	return (*resourceStatePtr)(&v)
}

func (*resourceStatePtr) ElementType() reflect.Type {
	return resourceStatePtrType
}

func (in *resourceStatePtr) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return pulumi.ToOutput(in).(ResourceStatePtrOutput)
}

func (in *resourceStatePtr) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceStatePtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(RedundancyStateOutput{})
	pulumi.RegisterOutputType(RedundancyStatePtrOutput{})
	pulumi.RegisterOutputType(ResourceStateOutput{})
	pulumi.RegisterOutputType(ResourceStatePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
