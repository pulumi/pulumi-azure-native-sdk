// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231201preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A StandbyContainerGroupPoolResource.
type StandbyContainerGroupPool struct {
	pulumi.CustomResourceState

	// Specifies container group properties of standby container group pools.
	ContainerGroupProperties ContainerGroupPropertiesResponseOutput `pulumi:"containerGroupProperties"`
	// Specifies elasticity profile of standby container group pools.
	ElasticityProfile StandbyContainerGroupPoolElasticityProfileResponseOutput `pulumi:"elasticityProfile"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStandbyContainerGroupPool registers a new resource with the given unique name, arguments, and options.
func NewStandbyContainerGroupPool(ctx *pulumi.Context,
	name string, args *StandbyContainerGroupPoolArgs, opts ...pulumi.ResourceOption) (*StandbyContainerGroupPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerGroupProperties == nil {
		return nil, errors.New("invalid value for required argument 'ContainerGroupProperties'")
	}
	if args.ElasticityProfile == nil {
		return nil, errors.New("invalid value for required argument 'ElasticityProfile'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:standbypool:StandbyContainerGroupPool"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StandbyContainerGroupPool
	err := ctx.RegisterResource("azure-native:standbypool/v20231201preview:StandbyContainerGroupPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandbyContainerGroupPool gets an existing StandbyContainerGroupPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandbyContainerGroupPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandbyContainerGroupPoolState, opts ...pulumi.ResourceOption) (*StandbyContainerGroupPool, error) {
	var resource StandbyContainerGroupPool
	err := ctx.ReadResource("azure-native:standbypool/v20231201preview:StandbyContainerGroupPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StandbyContainerGroupPool resources.
type standbyContainerGroupPoolState struct {
}

type StandbyContainerGroupPoolState struct {
}

func (StandbyContainerGroupPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*standbyContainerGroupPoolState)(nil)).Elem()
}

type standbyContainerGroupPoolArgs struct {
	// Specifies container group properties of standby container group pools.
	ContainerGroupProperties ContainerGroupProperties `pulumi:"containerGroupProperties"`
	// Specifies elasticity profile of standby container group pools.
	ElasticityProfile StandbyContainerGroupPoolElasticityProfile `pulumi:"elasticityProfile"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the standby container group pool
	StandbyContainerGroupPoolName *string `pulumi:"standbyContainerGroupPoolName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a StandbyContainerGroupPool resource.
type StandbyContainerGroupPoolArgs struct {
	// Specifies container group properties of standby container group pools.
	ContainerGroupProperties ContainerGroupPropertiesInput
	// Specifies elasticity profile of standby container group pools.
	ElasticityProfile StandbyContainerGroupPoolElasticityProfileInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the standby container group pool
	StandbyContainerGroupPoolName pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (StandbyContainerGroupPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*standbyContainerGroupPoolArgs)(nil)).Elem()
}

type StandbyContainerGroupPoolInput interface {
	pulumi.Input

	ToStandbyContainerGroupPoolOutput() StandbyContainerGroupPoolOutput
	ToStandbyContainerGroupPoolOutputWithContext(ctx context.Context) StandbyContainerGroupPoolOutput
}

func (*StandbyContainerGroupPool) ElementType() reflect.Type {
	return reflect.TypeOf((**StandbyContainerGroupPool)(nil)).Elem()
}

func (i *StandbyContainerGroupPool) ToStandbyContainerGroupPoolOutput() StandbyContainerGroupPoolOutput {
	return i.ToStandbyContainerGroupPoolOutputWithContext(context.Background())
}

func (i *StandbyContainerGroupPool) ToStandbyContainerGroupPoolOutputWithContext(ctx context.Context) StandbyContainerGroupPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandbyContainerGroupPoolOutput)
}

type StandbyContainerGroupPoolOutput struct{ *pulumi.OutputState }

func (StandbyContainerGroupPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandbyContainerGroupPool)(nil)).Elem()
}

func (o StandbyContainerGroupPoolOutput) ToStandbyContainerGroupPoolOutput() StandbyContainerGroupPoolOutput {
	return o
}

func (o StandbyContainerGroupPoolOutput) ToStandbyContainerGroupPoolOutputWithContext(ctx context.Context) StandbyContainerGroupPoolOutput {
	return o
}

// Specifies container group properties of standby container group pools.
func (o StandbyContainerGroupPoolOutput) ContainerGroupProperties() ContainerGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) ContainerGroupPropertiesResponseOutput {
		return v.ContainerGroupProperties
	}).(ContainerGroupPropertiesResponseOutput)
}

// Specifies elasticity profile of standby container group pools.
func (o StandbyContainerGroupPoolOutput) ElasticityProfile() StandbyContainerGroupPoolElasticityProfileResponseOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) StandbyContainerGroupPoolElasticityProfileResponseOutput {
		return v.ElasticityProfile
	}).(StandbyContainerGroupPoolElasticityProfileResponseOutput)
}

// The geo-location where the resource lives
func (o StandbyContainerGroupPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o StandbyContainerGroupPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o StandbyContainerGroupPoolOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o StandbyContainerGroupPoolOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o StandbyContainerGroupPoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o StandbyContainerGroupPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *StandbyContainerGroupPool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StandbyContainerGroupPoolOutput{})
}
