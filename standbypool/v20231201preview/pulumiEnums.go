// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies refill policy of the pool.
type RefillPolicy string

const (
	// A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity.
	RefillPolicyAlways = RefillPolicy("always")
)

func (RefillPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*RefillPolicy)(nil)).Elem()
}

func (e RefillPolicy) ToRefillPolicyOutput() RefillPolicyOutput {
	return pulumi.ToOutput(e).(RefillPolicyOutput)
}

func (e RefillPolicy) ToRefillPolicyOutputWithContext(ctx context.Context) RefillPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RefillPolicyOutput)
}

func (e RefillPolicy) ToRefillPolicyPtrOutput() RefillPolicyPtrOutput {
	return e.ToRefillPolicyPtrOutputWithContext(context.Background())
}

func (e RefillPolicy) ToRefillPolicyPtrOutputWithContext(ctx context.Context) RefillPolicyPtrOutput {
	return RefillPolicy(e).ToRefillPolicyOutputWithContext(ctx).ToRefillPolicyPtrOutputWithContext(ctx)
}

func (e RefillPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefillPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefillPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RefillPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RefillPolicyOutput struct{ *pulumi.OutputState }

func (RefillPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefillPolicy)(nil)).Elem()
}

func (o RefillPolicyOutput) ToRefillPolicyOutput() RefillPolicyOutput {
	return o
}

func (o RefillPolicyOutput) ToRefillPolicyOutputWithContext(ctx context.Context) RefillPolicyOutput {
	return o
}

func (o RefillPolicyOutput) ToRefillPolicyPtrOutput() RefillPolicyPtrOutput {
	return o.ToRefillPolicyPtrOutputWithContext(context.Background())
}

func (o RefillPolicyOutput) ToRefillPolicyPtrOutputWithContext(ctx context.Context) RefillPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefillPolicy) *RefillPolicy {
		return &v
	}).(RefillPolicyPtrOutput)
}

func (o RefillPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RefillPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefillPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RefillPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefillPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefillPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RefillPolicyPtrOutput struct{ *pulumi.OutputState }

func (RefillPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefillPolicy)(nil)).Elem()
}

func (o RefillPolicyPtrOutput) ToRefillPolicyPtrOutput() RefillPolicyPtrOutput {
	return o
}

func (o RefillPolicyPtrOutput) ToRefillPolicyPtrOutputWithContext(ctx context.Context) RefillPolicyPtrOutput {
	return o
}

func (o RefillPolicyPtrOutput) Elem() RefillPolicyOutput {
	return o.ApplyT(func(v *RefillPolicy) RefillPolicy {
		if v != nil {
			return *v
		}
		var ret RefillPolicy
		return ret
	}).(RefillPolicyOutput)
}

func (o RefillPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefillPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RefillPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RefillPolicyInput is an input type that accepts values of the RefillPolicy enum
// A concrete instance of `RefillPolicyInput` can be one of the following:
//
//	RefillPolicyAlways
type RefillPolicyInput interface {
	pulumi.Input

	ToRefillPolicyOutput() RefillPolicyOutput
	ToRefillPolicyOutputWithContext(context.Context) RefillPolicyOutput
}

var refillPolicyPtrType = reflect.TypeOf((**RefillPolicy)(nil)).Elem()

type RefillPolicyPtrInput interface {
	pulumi.Input

	ToRefillPolicyPtrOutput() RefillPolicyPtrOutput
	ToRefillPolicyPtrOutputWithContext(context.Context) RefillPolicyPtrOutput
}

type refillPolicyPtr string

func RefillPolicyPtr(v string) RefillPolicyPtrInput {
	return (*refillPolicyPtr)(&v)
}

func (*refillPolicyPtr) ElementType() reflect.Type {
	return refillPolicyPtrType
}

func (in *refillPolicyPtr) ToRefillPolicyPtrOutput() RefillPolicyPtrOutput {
	return pulumi.ToOutput(in).(RefillPolicyPtrOutput)
}

func (in *refillPolicyPtr) ToRefillPolicyPtrOutputWithContext(ctx context.Context) RefillPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RefillPolicyPtrOutput)
}

// Specifies the desired state of virtual machines in the pool.
type VirtualMachineState string

const (
	// The virtual machine is up and running.
	VirtualMachineStateRunning = VirtualMachineState("Running")
	// The virtual machine has released the lease on the underlying hardware and is powered off.
	VirtualMachineStateDeallocated = VirtualMachineState("Deallocated")
)

func (VirtualMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineState)(nil)).Elem()
}

func (e VirtualMachineState) ToVirtualMachineStateOutput() VirtualMachineStateOutput {
	return pulumi.ToOutput(e).(VirtualMachineStateOutput)
}

func (e VirtualMachineState) ToVirtualMachineStateOutputWithContext(ctx context.Context) VirtualMachineStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VirtualMachineStateOutput)
}

func (e VirtualMachineState) ToVirtualMachineStatePtrOutput() VirtualMachineStatePtrOutput {
	return e.ToVirtualMachineStatePtrOutputWithContext(context.Background())
}

func (e VirtualMachineState) ToVirtualMachineStatePtrOutputWithContext(ctx context.Context) VirtualMachineStatePtrOutput {
	return VirtualMachineState(e).ToVirtualMachineStateOutputWithContext(ctx).ToVirtualMachineStatePtrOutputWithContext(ctx)
}

func (e VirtualMachineState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VirtualMachineState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VirtualMachineState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VirtualMachineState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VirtualMachineStateOutput struct{ *pulumi.OutputState }

func (VirtualMachineStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineState)(nil)).Elem()
}

func (o VirtualMachineStateOutput) ToVirtualMachineStateOutput() VirtualMachineStateOutput {
	return o
}

func (o VirtualMachineStateOutput) ToVirtualMachineStateOutputWithContext(ctx context.Context) VirtualMachineStateOutput {
	return o
}

func (o VirtualMachineStateOutput) ToVirtualMachineStatePtrOutput() VirtualMachineStatePtrOutput {
	return o.ToVirtualMachineStatePtrOutputWithContext(context.Background())
}

func (o VirtualMachineStateOutput) ToVirtualMachineStatePtrOutputWithContext(ctx context.Context) VirtualMachineStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineState) *VirtualMachineState {
		return &v
	}).(VirtualMachineStatePtrOutput)
}

func (o VirtualMachineStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VirtualMachineStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VirtualMachineState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VirtualMachineStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VirtualMachineState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineStatePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineState)(nil)).Elem()
}

func (o VirtualMachineStatePtrOutput) ToVirtualMachineStatePtrOutput() VirtualMachineStatePtrOutput {
	return o
}

func (o VirtualMachineStatePtrOutput) ToVirtualMachineStatePtrOutputWithContext(ctx context.Context) VirtualMachineStatePtrOutput {
	return o
}

func (o VirtualMachineStatePtrOutput) Elem() VirtualMachineStateOutput {
	return o.ApplyT(func(v *VirtualMachineState) VirtualMachineState {
		if v != nil {
			return *v
		}
		var ret VirtualMachineState
		return ret
	}).(VirtualMachineStateOutput)
}

func (o VirtualMachineStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VirtualMachineState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VirtualMachineStateInput is an input type that accepts values of the VirtualMachineState enum
// A concrete instance of `VirtualMachineStateInput` can be one of the following:
//
//	VirtualMachineStateRunning
//	VirtualMachineStateDeallocated
type VirtualMachineStateInput interface {
	pulumi.Input

	ToVirtualMachineStateOutput() VirtualMachineStateOutput
	ToVirtualMachineStateOutputWithContext(context.Context) VirtualMachineStateOutput
}

var virtualMachineStatePtrType = reflect.TypeOf((**VirtualMachineState)(nil)).Elem()

type VirtualMachineStatePtrInput interface {
	pulumi.Input

	ToVirtualMachineStatePtrOutput() VirtualMachineStatePtrOutput
	ToVirtualMachineStatePtrOutputWithContext(context.Context) VirtualMachineStatePtrOutput
}

type virtualMachineStatePtr string

func VirtualMachineStatePtr(v string) VirtualMachineStatePtrInput {
	return (*virtualMachineStatePtr)(&v)
}

func (*virtualMachineStatePtr) ElementType() reflect.Type {
	return virtualMachineStatePtrType
}

func (in *virtualMachineStatePtr) ToVirtualMachineStatePtrOutput() VirtualMachineStatePtrOutput {
	return pulumi.ToOutput(in).(VirtualMachineStatePtrOutput)
}

func (in *virtualMachineStatePtr) ToVirtualMachineStatePtrOutputWithContext(ctx context.Context) VirtualMachineStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VirtualMachineStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RefillPolicyOutput{})
	pulumi.RegisterOutputType(RefillPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStateOutput{})
	pulumi.RegisterOutputType(VirtualMachineStatePtrOutput{})
}
