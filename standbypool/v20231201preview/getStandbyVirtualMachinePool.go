// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a StandbyVirtualMachinePoolResource
func LookupStandbyVirtualMachinePool(ctx *pulumi.Context, args *LookupStandbyVirtualMachinePoolArgs, opts ...pulumi.InvokeOption) (*LookupStandbyVirtualMachinePoolResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStandbyVirtualMachinePoolResult
	err := ctx.Invoke("azure-native:standbypool/v20231201preview:getStandbyVirtualMachinePool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStandbyVirtualMachinePoolArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the standby virtual machine pool
	StandbyVirtualMachinePoolName string `pulumi:"standbyVirtualMachinePoolName"`
}

// A StandbyVirtualMachinePoolResource.
type LookupStandbyVirtualMachinePoolResult struct {
	// Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
	AttachedVirtualMachineScaleSetId *string `pulumi:"attachedVirtualMachineScaleSetId"`
	// Specifies the elasticity profile of the standby virtual machine pools.
	ElasticityProfile *StandbyVirtualMachinePoolElasticityProfileResponse `pulumi:"elasticityProfile"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Specifies the desired state of virtual machines in the pool.
	VirtualMachineState string `pulumi:"virtualMachineState"`
}

func LookupStandbyVirtualMachinePoolOutput(ctx *pulumi.Context, args LookupStandbyVirtualMachinePoolOutputArgs, opts ...pulumi.InvokeOption) LookupStandbyVirtualMachinePoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStandbyVirtualMachinePoolResult, error) {
			args := v.(LookupStandbyVirtualMachinePoolArgs)
			r, err := LookupStandbyVirtualMachinePool(ctx, &args, opts...)
			var s LookupStandbyVirtualMachinePoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStandbyVirtualMachinePoolResultOutput)
}

type LookupStandbyVirtualMachinePoolOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the standby virtual machine pool
	StandbyVirtualMachinePoolName pulumi.StringInput `pulumi:"standbyVirtualMachinePoolName"`
}

func (LookupStandbyVirtualMachinePoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStandbyVirtualMachinePoolArgs)(nil)).Elem()
}

// A StandbyVirtualMachinePoolResource.
type LookupStandbyVirtualMachinePoolResultOutput struct{ *pulumi.OutputState }

func (LookupStandbyVirtualMachinePoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStandbyVirtualMachinePoolResult)(nil)).Elem()
}

func (o LookupStandbyVirtualMachinePoolResultOutput) ToLookupStandbyVirtualMachinePoolResultOutput() LookupStandbyVirtualMachinePoolResultOutput {
	return o
}

func (o LookupStandbyVirtualMachinePoolResultOutput) ToLookupStandbyVirtualMachinePoolResultOutputWithContext(ctx context.Context) LookupStandbyVirtualMachinePoolResultOutput {
	return o
}

// Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
func (o LookupStandbyVirtualMachinePoolResultOutput) AttachedVirtualMachineScaleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) *string { return v.AttachedVirtualMachineScaleSetId }).(pulumi.StringPtrOutput)
}

// Specifies the elasticity profile of the standby virtual machine pools.
func (o LookupStandbyVirtualMachinePoolResultOutput) ElasticityProfile() StandbyVirtualMachinePoolElasticityProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) *StandbyVirtualMachinePoolElasticityProfileResponse {
		return v.ElasticityProfile
	}).(StandbyVirtualMachinePoolElasticityProfileResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupStandbyVirtualMachinePoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupStandbyVirtualMachinePoolResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupStandbyVirtualMachinePoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupStandbyVirtualMachinePoolResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupStandbyVirtualMachinePoolResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupStandbyVirtualMachinePoolResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupStandbyVirtualMachinePoolResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the desired state of virtual machines in the pool.
func (o LookupStandbyVirtualMachinePoolResultOutput) VirtualMachineState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStandbyVirtualMachinePoolResult) string { return v.VirtualMachineState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStandbyVirtualMachinePoolResultOutput{})
}
