// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Type of the sever administrator.
type AdministratorType string

const (
	AdministratorTypeActiveDirectory = AdministratorType("ActiveDirectory")
)

func (AdministratorType) ElementType() reflect.Type {
	return reflect.TypeOf((*AdministratorType)(nil)).Elem()
}

func (e AdministratorType) ToAdministratorTypeOutput() AdministratorTypeOutput {
	return pulumi.ToOutput(e).(AdministratorTypeOutput)
}

func (e AdministratorType) ToAdministratorTypeOutputWithContext(ctx context.Context) AdministratorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AdministratorTypeOutput)
}

func (e AdministratorType) ToAdministratorTypePtrOutput() AdministratorTypePtrOutput {
	return e.ToAdministratorTypePtrOutputWithContext(context.Background())
}

func (e AdministratorType) ToAdministratorTypePtrOutputWithContext(ctx context.Context) AdministratorTypePtrOutput {
	return AdministratorType(e).ToAdministratorTypeOutputWithContext(ctx).ToAdministratorTypePtrOutputWithContext(ctx)
}

func (e AdministratorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdministratorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdministratorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AdministratorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AdministratorTypeOutput struct{ *pulumi.OutputState }

func (AdministratorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdministratorType)(nil)).Elem()
}

func (o AdministratorTypeOutput) ToAdministratorTypeOutput() AdministratorTypeOutput {
	return o
}

func (o AdministratorTypeOutput) ToAdministratorTypeOutputWithContext(ctx context.Context) AdministratorTypeOutput {
	return o
}

func (o AdministratorTypeOutput) ToAdministratorTypePtrOutput() AdministratorTypePtrOutput {
	return o.ToAdministratorTypePtrOutputWithContext(context.Background())
}

func (o AdministratorTypeOutput) ToAdministratorTypePtrOutputWithContext(ctx context.Context) AdministratorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdministratorType) *AdministratorType {
		return &v
	}).(AdministratorTypePtrOutput)
}

func (o AdministratorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AdministratorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdministratorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AdministratorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdministratorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdministratorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AdministratorTypePtrOutput struct{ *pulumi.OutputState }

func (AdministratorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdministratorType)(nil)).Elem()
}

func (o AdministratorTypePtrOutput) ToAdministratorTypePtrOutput() AdministratorTypePtrOutput {
	return o
}

func (o AdministratorTypePtrOutput) ToAdministratorTypePtrOutputWithContext(ctx context.Context) AdministratorTypePtrOutput {
	return o
}

func (o AdministratorTypePtrOutput) Elem() AdministratorTypeOutput {
	return o.ApplyT(func(v *AdministratorType) AdministratorType {
		if v != nil {
			return *v
		}
		var ret AdministratorType
		return ret
	}).(AdministratorTypeOutput)
}

func (o AdministratorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdministratorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AdministratorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AdministratorTypeInput is an input type that accepts values of the AdministratorType enum
// A concrete instance of `AdministratorTypeInput` can be one of the following:
//
//	AdministratorTypeActiveDirectory
type AdministratorTypeInput interface {
	pulumi.Input

	ToAdministratorTypeOutput() AdministratorTypeOutput
	ToAdministratorTypeOutputWithContext(context.Context) AdministratorTypeOutput
}

var administratorTypePtrType = reflect.TypeOf((**AdministratorType)(nil)).Elem()

type AdministratorTypePtrInput interface {
	pulumi.Input

	ToAdministratorTypePtrOutput() AdministratorTypePtrOutput
	ToAdministratorTypePtrOutputWithContext(context.Context) AdministratorTypePtrOutput
}

type administratorTypePtr string

func AdministratorTypePtr(v string) AdministratorTypePtrInput {
	return (*administratorTypePtr)(&v)
}

func (*administratorTypePtr) ElementType() reflect.Type {
	return administratorTypePtrType
}

func (in *administratorTypePtr) ToAdministratorTypePtrOutput() AdministratorTypePtrOutput {
	return pulumi.ToOutput(in).(AdministratorTypePtrOutput)
}

func (in *administratorTypePtr) ToAdministratorTypePtrOutputWithContext(ctx context.Context) AdministratorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AdministratorTypePtrOutput)
}

func (in *administratorTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AdministratorType] {
	return pulumix.Output[*AdministratorType]{
		OutputState: in.ToAdministratorTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
type IdentityType string

const (
	IdentityTypeNone                         = IdentityType("None")
	IdentityTypeSystemAssigned               = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned                 = IdentityType("UserAssigned")
	IdentityType_SystemAssigned_UserAssigned = IdentityType("SystemAssigned,UserAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeNone
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
//	IdentityType_SystemAssigned_UserAssigned
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*IdentityType] {
	return pulumix.Output[*IdentityType]{
		OutputState: in.ToIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
type ManagedInstanceLicenseType string

const (
	ManagedInstanceLicenseTypeLicenseIncluded = ManagedInstanceLicenseType("LicenseIncluded")
	ManagedInstanceLicenseTypeBasePrice       = ManagedInstanceLicenseType("BasePrice")
)

func (ManagedInstanceLicenseType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceLicenseType)(nil)).Elem()
}

func (e ManagedInstanceLicenseType) ToManagedInstanceLicenseTypeOutput() ManagedInstanceLicenseTypeOutput {
	return pulumi.ToOutput(e).(ManagedInstanceLicenseTypeOutput)
}

func (e ManagedInstanceLicenseType) ToManagedInstanceLicenseTypeOutputWithContext(ctx context.Context) ManagedInstanceLicenseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedInstanceLicenseTypeOutput)
}

func (e ManagedInstanceLicenseType) ToManagedInstanceLicenseTypePtrOutput() ManagedInstanceLicenseTypePtrOutput {
	return e.ToManagedInstanceLicenseTypePtrOutputWithContext(context.Background())
}

func (e ManagedInstanceLicenseType) ToManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ManagedInstanceLicenseTypePtrOutput {
	return ManagedInstanceLicenseType(e).ToManagedInstanceLicenseTypeOutputWithContext(ctx).ToManagedInstanceLicenseTypePtrOutputWithContext(ctx)
}

func (e ManagedInstanceLicenseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedInstanceLicenseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedInstanceLicenseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedInstanceLicenseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedInstanceLicenseTypeOutput struct{ *pulumi.OutputState }

func (ManagedInstanceLicenseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceLicenseType)(nil)).Elem()
}

func (o ManagedInstanceLicenseTypeOutput) ToManagedInstanceLicenseTypeOutput() ManagedInstanceLicenseTypeOutput {
	return o
}

func (o ManagedInstanceLicenseTypeOutput) ToManagedInstanceLicenseTypeOutputWithContext(ctx context.Context) ManagedInstanceLicenseTypeOutput {
	return o
}

func (o ManagedInstanceLicenseTypeOutput) ToManagedInstanceLicenseTypePtrOutput() ManagedInstanceLicenseTypePtrOutput {
	return o.ToManagedInstanceLicenseTypePtrOutputWithContext(context.Background())
}

func (o ManagedInstanceLicenseTypeOutput) ToManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ManagedInstanceLicenseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceLicenseType) *ManagedInstanceLicenseType {
		return &v
	}).(ManagedInstanceLicenseTypePtrOutput)
}

func (o ManagedInstanceLicenseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedInstanceLicenseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedInstanceLicenseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedInstanceLicenseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceLicenseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedInstanceLicenseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedInstanceLicenseTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceLicenseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceLicenseType)(nil)).Elem()
}

func (o ManagedInstanceLicenseTypePtrOutput) ToManagedInstanceLicenseTypePtrOutput() ManagedInstanceLicenseTypePtrOutput {
	return o
}

func (o ManagedInstanceLicenseTypePtrOutput) ToManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ManagedInstanceLicenseTypePtrOutput {
	return o
}

func (o ManagedInstanceLicenseTypePtrOutput) Elem() ManagedInstanceLicenseTypeOutput {
	return o.ApplyT(func(v *ManagedInstanceLicenseType) ManagedInstanceLicenseType {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceLicenseType
		return ret
	}).(ManagedInstanceLicenseTypeOutput)
}

func (o ManagedInstanceLicenseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceLicenseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedInstanceLicenseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedInstanceLicenseTypeInput is an input type that accepts values of the ManagedInstanceLicenseType enum
// A concrete instance of `ManagedInstanceLicenseTypeInput` can be one of the following:
//
//	ManagedInstanceLicenseTypeLicenseIncluded
//	ManagedInstanceLicenseTypeBasePrice
type ManagedInstanceLicenseTypeInput interface {
	pulumi.Input

	ToManagedInstanceLicenseTypeOutput() ManagedInstanceLicenseTypeOutput
	ToManagedInstanceLicenseTypeOutputWithContext(context.Context) ManagedInstanceLicenseTypeOutput
}

var managedInstanceLicenseTypePtrType = reflect.TypeOf((**ManagedInstanceLicenseType)(nil)).Elem()

type ManagedInstanceLicenseTypePtrInput interface {
	pulumi.Input

	ToManagedInstanceLicenseTypePtrOutput() ManagedInstanceLicenseTypePtrOutput
	ToManagedInstanceLicenseTypePtrOutputWithContext(context.Context) ManagedInstanceLicenseTypePtrOutput
}

type managedInstanceLicenseTypePtr string

func ManagedInstanceLicenseTypePtr(v string) ManagedInstanceLicenseTypePtrInput {
	return (*managedInstanceLicenseTypePtr)(&v)
}

func (*managedInstanceLicenseTypePtr) ElementType() reflect.Type {
	return managedInstanceLicenseTypePtrType
}

func (in *managedInstanceLicenseTypePtr) ToManagedInstanceLicenseTypePtrOutput() ManagedInstanceLicenseTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedInstanceLicenseTypePtrOutput)
}

func (in *managedInstanceLicenseTypePtr) ToManagedInstanceLicenseTypePtrOutputWithContext(ctx context.Context) ManagedInstanceLicenseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedInstanceLicenseTypePtrOutput)
}

func (in *managedInstanceLicenseTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceLicenseType] {
	return pulumix.Output[*ManagedInstanceLicenseType]{
		OutputState: in.ToManagedInstanceLicenseTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Connection type used for connecting to the instance.
type ManagedInstanceProxyOverride string

const (
	ManagedInstanceProxyOverrideProxy    = ManagedInstanceProxyOverride("Proxy")
	ManagedInstanceProxyOverrideRedirect = ManagedInstanceProxyOverride("Redirect")
	ManagedInstanceProxyOverrideDefault  = ManagedInstanceProxyOverride("Default")
)

func (ManagedInstanceProxyOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceProxyOverride)(nil)).Elem()
}

func (e ManagedInstanceProxyOverride) ToManagedInstanceProxyOverrideOutput() ManagedInstanceProxyOverrideOutput {
	return pulumi.ToOutput(e).(ManagedInstanceProxyOverrideOutput)
}

func (e ManagedInstanceProxyOverride) ToManagedInstanceProxyOverrideOutputWithContext(ctx context.Context) ManagedInstanceProxyOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedInstanceProxyOverrideOutput)
}

func (e ManagedInstanceProxyOverride) ToManagedInstanceProxyOverridePtrOutput() ManagedInstanceProxyOverridePtrOutput {
	return e.ToManagedInstanceProxyOverridePtrOutputWithContext(context.Background())
}

func (e ManagedInstanceProxyOverride) ToManagedInstanceProxyOverridePtrOutputWithContext(ctx context.Context) ManagedInstanceProxyOverridePtrOutput {
	return ManagedInstanceProxyOverride(e).ToManagedInstanceProxyOverrideOutputWithContext(ctx).ToManagedInstanceProxyOverridePtrOutputWithContext(ctx)
}

func (e ManagedInstanceProxyOverride) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedInstanceProxyOverride) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedInstanceProxyOverride) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedInstanceProxyOverride) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedInstanceProxyOverrideOutput struct{ *pulumi.OutputState }

func (ManagedInstanceProxyOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceProxyOverride)(nil)).Elem()
}

func (o ManagedInstanceProxyOverrideOutput) ToManagedInstanceProxyOverrideOutput() ManagedInstanceProxyOverrideOutput {
	return o
}

func (o ManagedInstanceProxyOverrideOutput) ToManagedInstanceProxyOverrideOutputWithContext(ctx context.Context) ManagedInstanceProxyOverrideOutput {
	return o
}

func (o ManagedInstanceProxyOverrideOutput) ToManagedInstanceProxyOverridePtrOutput() ManagedInstanceProxyOverridePtrOutput {
	return o.ToManagedInstanceProxyOverridePtrOutputWithContext(context.Background())
}

func (o ManagedInstanceProxyOverrideOutput) ToManagedInstanceProxyOverridePtrOutputWithContext(ctx context.Context) ManagedInstanceProxyOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceProxyOverride) *ManagedInstanceProxyOverride {
		return &v
	}).(ManagedInstanceProxyOverridePtrOutput)
}

func (o ManagedInstanceProxyOverrideOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedInstanceProxyOverrideOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedInstanceProxyOverride) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedInstanceProxyOverrideOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceProxyOverrideOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedInstanceProxyOverride) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedInstanceProxyOverridePtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceProxyOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceProxyOverride)(nil)).Elem()
}

func (o ManagedInstanceProxyOverridePtrOutput) ToManagedInstanceProxyOverridePtrOutput() ManagedInstanceProxyOverridePtrOutput {
	return o
}

func (o ManagedInstanceProxyOverridePtrOutput) ToManagedInstanceProxyOverridePtrOutputWithContext(ctx context.Context) ManagedInstanceProxyOverridePtrOutput {
	return o
}

func (o ManagedInstanceProxyOverridePtrOutput) Elem() ManagedInstanceProxyOverrideOutput {
	return o.ApplyT(func(v *ManagedInstanceProxyOverride) ManagedInstanceProxyOverride {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceProxyOverride
		return ret
	}).(ManagedInstanceProxyOverrideOutput)
}

func (o ManagedInstanceProxyOverridePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceProxyOverridePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedInstanceProxyOverride) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedInstanceProxyOverrideInput is an input type that accepts values of the ManagedInstanceProxyOverride enum
// A concrete instance of `ManagedInstanceProxyOverrideInput` can be one of the following:
//
//	ManagedInstanceProxyOverrideProxy
//	ManagedInstanceProxyOverrideRedirect
//	ManagedInstanceProxyOverrideDefault
type ManagedInstanceProxyOverrideInput interface {
	pulumi.Input

	ToManagedInstanceProxyOverrideOutput() ManagedInstanceProxyOverrideOutput
	ToManagedInstanceProxyOverrideOutputWithContext(context.Context) ManagedInstanceProxyOverrideOutput
}

var managedInstanceProxyOverridePtrType = reflect.TypeOf((**ManagedInstanceProxyOverride)(nil)).Elem()

type ManagedInstanceProxyOverridePtrInput interface {
	pulumi.Input

	ToManagedInstanceProxyOverridePtrOutput() ManagedInstanceProxyOverridePtrOutput
	ToManagedInstanceProxyOverridePtrOutputWithContext(context.Context) ManagedInstanceProxyOverridePtrOutput
}

type managedInstanceProxyOverridePtr string

func ManagedInstanceProxyOverridePtr(v string) ManagedInstanceProxyOverridePtrInput {
	return (*managedInstanceProxyOverridePtr)(&v)
}

func (*managedInstanceProxyOverridePtr) ElementType() reflect.Type {
	return managedInstanceProxyOverridePtrType
}

func (in *managedInstanceProxyOverridePtr) ToManagedInstanceProxyOverridePtrOutput() ManagedInstanceProxyOverridePtrOutput {
	return pulumi.ToOutput(in).(ManagedInstanceProxyOverridePtrOutput)
}

func (in *managedInstanceProxyOverridePtr) ToManagedInstanceProxyOverridePtrOutputWithContext(ctx context.Context) ManagedInstanceProxyOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedInstanceProxyOverridePtrOutput)
}

func (in *managedInstanceProxyOverridePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceProxyOverride] {
	return pulumix.Output[*ManagedInstanceProxyOverride]{
		OutputState: in.ToManagedInstanceProxyOverridePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the mode of database creation.
//
// Default: Regular instance creation.
//
// Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.
type ManagedServerCreateMode string

const (
	ManagedServerCreateModeDefault            = ManagedServerCreateMode("Default")
	ManagedServerCreateModePointInTimeRestore = ManagedServerCreateMode("PointInTimeRestore")
)

func (ManagedServerCreateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServerCreateMode)(nil)).Elem()
}

func (e ManagedServerCreateMode) ToManagedServerCreateModeOutput() ManagedServerCreateModeOutput {
	return pulumi.ToOutput(e).(ManagedServerCreateModeOutput)
}

func (e ManagedServerCreateMode) ToManagedServerCreateModeOutputWithContext(ctx context.Context) ManagedServerCreateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServerCreateModeOutput)
}

func (e ManagedServerCreateMode) ToManagedServerCreateModePtrOutput() ManagedServerCreateModePtrOutput {
	return e.ToManagedServerCreateModePtrOutputWithContext(context.Background())
}

func (e ManagedServerCreateMode) ToManagedServerCreateModePtrOutputWithContext(ctx context.Context) ManagedServerCreateModePtrOutput {
	return ManagedServerCreateMode(e).ToManagedServerCreateModeOutputWithContext(ctx).ToManagedServerCreateModePtrOutputWithContext(ctx)
}

func (e ManagedServerCreateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServerCreateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServerCreateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServerCreateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServerCreateModeOutput struct{ *pulumi.OutputState }

func (ManagedServerCreateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServerCreateMode)(nil)).Elem()
}

func (o ManagedServerCreateModeOutput) ToManagedServerCreateModeOutput() ManagedServerCreateModeOutput {
	return o
}

func (o ManagedServerCreateModeOutput) ToManagedServerCreateModeOutputWithContext(ctx context.Context) ManagedServerCreateModeOutput {
	return o
}

func (o ManagedServerCreateModeOutput) ToManagedServerCreateModePtrOutput() ManagedServerCreateModePtrOutput {
	return o.ToManagedServerCreateModePtrOutputWithContext(context.Background())
}

func (o ManagedServerCreateModeOutput) ToManagedServerCreateModePtrOutputWithContext(ctx context.Context) ManagedServerCreateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServerCreateMode) *ManagedServerCreateMode {
		return &v
	}).(ManagedServerCreateModePtrOutput)
}

func (o ManagedServerCreateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServerCreateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServerCreateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServerCreateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServerCreateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServerCreateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServerCreateModePtrOutput struct{ *pulumi.OutputState }

func (ManagedServerCreateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServerCreateMode)(nil)).Elem()
}

func (o ManagedServerCreateModePtrOutput) ToManagedServerCreateModePtrOutput() ManagedServerCreateModePtrOutput {
	return o
}

func (o ManagedServerCreateModePtrOutput) ToManagedServerCreateModePtrOutputWithContext(ctx context.Context) ManagedServerCreateModePtrOutput {
	return o
}

func (o ManagedServerCreateModePtrOutput) Elem() ManagedServerCreateModeOutput {
	return o.ApplyT(func(v *ManagedServerCreateMode) ManagedServerCreateMode {
		if v != nil {
			return *v
		}
		var ret ManagedServerCreateMode
		return ret
	}).(ManagedServerCreateModeOutput)
}

func (o ManagedServerCreateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServerCreateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServerCreateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServerCreateModeInput is an input type that accepts values of the ManagedServerCreateMode enum
// A concrete instance of `ManagedServerCreateModeInput` can be one of the following:
//
//	ManagedServerCreateModeDefault
//	ManagedServerCreateModePointInTimeRestore
type ManagedServerCreateModeInput interface {
	pulumi.Input

	ToManagedServerCreateModeOutput() ManagedServerCreateModeOutput
	ToManagedServerCreateModeOutputWithContext(context.Context) ManagedServerCreateModeOutput
}

var managedServerCreateModePtrType = reflect.TypeOf((**ManagedServerCreateMode)(nil)).Elem()

type ManagedServerCreateModePtrInput interface {
	pulumi.Input

	ToManagedServerCreateModePtrOutput() ManagedServerCreateModePtrOutput
	ToManagedServerCreateModePtrOutputWithContext(context.Context) ManagedServerCreateModePtrOutput
}

type managedServerCreateModePtr string

func ManagedServerCreateModePtr(v string) ManagedServerCreateModePtrInput {
	return (*managedServerCreateModePtr)(&v)
}

func (*managedServerCreateModePtr) ElementType() reflect.Type {
	return managedServerCreateModePtrType
}

func (in *managedServerCreateModePtr) ToManagedServerCreateModePtrOutput() ManagedServerCreateModePtrOutput {
	return pulumi.ToOutput(in).(ManagedServerCreateModePtrOutput)
}

func (in *managedServerCreateModePtr) ToManagedServerCreateModePtrOutputWithContext(ctx context.Context) ManagedServerCreateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServerCreateModePtrOutput)
}

func (in *managedServerCreateModePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedServerCreateMode] {
	return pulumix.Output[*ManagedServerCreateMode]{
		OutputState: in.ToManagedServerCreateModePtrOutputWithContext(ctx).OutputState,
	}
}

// Principal Type of the sever administrator.
type PrincipalType string

const (
	PrincipalTypeUser        = PrincipalType("User")
	PrincipalTypeGroup       = PrincipalType("Group")
	PrincipalTypeApplication = PrincipalType("Application")
)

func (PrincipalType) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (e PrincipalType) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return pulumi.ToOutput(e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrincipalTypeOutput)
}

func (e PrincipalType) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return e.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return PrincipalType(e).ToPrincipalTypeOutputWithContext(ctx).ToPrincipalTypePtrOutputWithContext(ctx)
}

func (e PrincipalType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrincipalType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrincipalType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrincipalTypeOutput struct{ *pulumi.OutputState }

func (PrincipalTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalType)(nil)).Elem()
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutput() PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypeOutputWithContext(ctx context.Context) PrincipalTypeOutput {
	return o
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o.ToPrincipalTypePtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrincipalType) *PrincipalType {
		return &v
	}).(PrincipalTypePtrOutput)
}

func (o PrincipalTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrincipalTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrincipalType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrincipalTypePtrOutput struct{ *pulumi.OutputState }

func (PrincipalTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalType)(nil)).Elem()
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return o
}

func (o PrincipalTypePtrOutput) Elem() PrincipalTypeOutput {
	return o.ApplyT(func(v *PrincipalType) PrincipalType {
		if v != nil {
			return *v
		}
		var ret PrincipalType
		return ret
	}).(PrincipalTypeOutput)
}

func (o PrincipalTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrincipalTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrincipalType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrincipalTypeInput is an input type that accepts values of the PrincipalType enum
// A concrete instance of `PrincipalTypeInput` can be one of the following:
//
//	PrincipalTypeUser
//	PrincipalTypeGroup
//	PrincipalTypeApplication
type PrincipalTypeInput interface {
	pulumi.Input

	ToPrincipalTypeOutput() PrincipalTypeOutput
	ToPrincipalTypeOutputWithContext(context.Context) PrincipalTypeOutput
}

var principalTypePtrType = reflect.TypeOf((**PrincipalType)(nil)).Elem()

type PrincipalTypePtrInput interface {
	pulumi.Input

	ToPrincipalTypePtrOutput() PrincipalTypePtrOutput
	ToPrincipalTypePtrOutputWithContext(context.Context) PrincipalTypePtrOutput
}

type principalTypePtr string

func PrincipalTypePtr(v string) PrincipalTypePtrInput {
	return (*principalTypePtr)(&v)
}

func (*principalTypePtr) ElementType() reflect.Type {
	return principalTypePtrType
}

func (in *principalTypePtr) ToPrincipalTypePtrOutput() PrincipalTypePtrOutput {
	return pulumi.ToOutput(in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToPrincipalTypePtrOutputWithContext(ctx context.Context) PrincipalTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrincipalTypePtrOutput)
}

func (in *principalTypePtr) ToOutput(ctx context.Context) pulumix.Output[*PrincipalType] {
	return pulumix.Output[*PrincipalType]{
		OutputState: in.ToPrincipalTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The storage account type used to store backups for this instance. The options are LRS (LocallyRedundantStorage), ZRS (ZoneRedundantStorage) and GRS (GeoRedundantStorage)
type StorageAccountType string

const (
	StorageAccountTypeGRS = StorageAccountType("GRS")
	StorageAccountTypeLRS = StorageAccountType("LRS")
	StorageAccountTypeZRS = StorageAccountType("ZRS")
)

func (StorageAccountType) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (e StorageAccountType) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return pulumi.ToOutput(e).(StorageAccountTypeOutput)
}

func (e StorageAccountType) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageAccountTypeOutput)
}

func (e StorageAccountType) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return e.ToStorageAccountTypePtrOutputWithContext(context.Background())
}

func (e StorageAccountType) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return StorageAccountType(e).ToStorageAccountTypeOutputWithContext(ctx).ToStorageAccountTypePtrOutputWithContext(ctx)
}

func (e StorageAccountType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAccountType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageAccountType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageAccountType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageAccountTypeOutput struct{ *pulumi.OutputState }

func (StorageAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return o
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return o
}

func (o StorageAccountTypeOutput) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return o.ToStorageAccountTypePtrOutputWithContext(context.Background())
}

func (o StorageAccountTypeOutput) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageAccountType) *StorageAccountType {
		return &v
	}).(StorageAccountTypePtrOutput)
}

func (o StorageAccountTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageAccountTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAccountType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageAccountTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageAccountType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageAccountTypePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountType)(nil)).Elem()
}

func (o StorageAccountTypePtrOutput) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return o
}

func (o StorageAccountTypePtrOutput) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return o
}

func (o StorageAccountTypePtrOutput) Elem() StorageAccountTypeOutput {
	return o.ApplyT(func(v *StorageAccountType) StorageAccountType {
		if v != nil {
			return *v
		}
		var ret StorageAccountType
		return ret
	}).(StorageAccountTypeOutput)
}

func (o StorageAccountTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageAccountTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageAccountType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageAccountTypeInput is an input type that accepts values of the StorageAccountType enum
// A concrete instance of `StorageAccountTypeInput` can be one of the following:
//
//	StorageAccountTypeGRS
//	StorageAccountTypeLRS
//	StorageAccountTypeZRS
type StorageAccountTypeInput interface {
	pulumi.Input

	ToStorageAccountTypeOutput() StorageAccountTypeOutput
	ToStorageAccountTypeOutputWithContext(context.Context) StorageAccountTypeOutput
}

var storageAccountTypePtrType = reflect.TypeOf((**StorageAccountType)(nil)).Elem()

type StorageAccountTypePtrInput interface {
	pulumi.Input

	ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput
	ToStorageAccountTypePtrOutputWithContext(context.Context) StorageAccountTypePtrOutput
}

type storageAccountTypePtr string

func StorageAccountTypePtr(v string) StorageAccountTypePtrInput {
	return (*storageAccountTypePtr)(&v)
}

func (*storageAccountTypePtr) ElementType() reflect.Type {
	return storageAccountTypePtrType
}

func (in *storageAccountTypePtr) ToStorageAccountTypePtrOutput() StorageAccountTypePtrOutput {
	return pulumi.ToOutput(in).(StorageAccountTypePtrOutput)
}

func (in *storageAccountTypePtr) ToStorageAccountTypePtrOutputWithContext(ctx context.Context) StorageAccountTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageAccountTypePtrOutput)
}

func (in *storageAccountTypePtr) ToOutput(ctx context.Context) pulumix.Output[*StorageAccountType] {
	return pulumix.Output[*StorageAccountType]{
		OutputState: in.ToStorageAccountTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AdministratorTypeOutput{})
	pulumi.RegisterOutputType(AdministratorTypePtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceLicenseTypeOutput{})
	pulumi.RegisterOutputType(ManagedInstanceLicenseTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceProxyOverrideOutput{})
	pulumi.RegisterOutputType(ManagedInstanceProxyOverridePtrOutput{})
	pulumi.RegisterOutputType(ManagedServerCreateModeOutput{})
	pulumi.RegisterOutputType(ManagedServerCreateModePtrOutput{})
	pulumi.RegisterOutputType(PrincipalTypeOutput{})
	pulumi.RegisterOutputType(PrincipalTypePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountTypeOutput{})
	pulumi.RegisterOutputType(StorageAccountTypePtrOutput{})
}
