// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Properties of a active directory administrator.
type ManagedInstanceExternalAdministrator struct {
	// Type of the sever administrator.
	AdministratorType *string `pulumi:"administratorType"`
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication *bool `pulumi:"azureADOnlyAuthentication"`
	// Login name of the server administrator.
	Login *string `pulumi:"login"`
	// Principal Type of the sever administrator.
	PrincipalType *string `pulumi:"principalType"`
	// SID (object ID) of the server administrator.
	Sid *string `pulumi:"sid"`
	// Tenant ID of the administrator.
	TenantId *string `pulumi:"tenantId"`
}

// ManagedInstanceExternalAdministratorInput is an input type that accepts ManagedInstanceExternalAdministratorArgs and ManagedInstanceExternalAdministratorOutput values.
// You can construct a concrete instance of `ManagedInstanceExternalAdministratorInput` via:
//
//	ManagedInstanceExternalAdministratorArgs{...}
type ManagedInstanceExternalAdministratorInput interface {
	pulumi.Input

	ToManagedInstanceExternalAdministratorOutput() ManagedInstanceExternalAdministratorOutput
	ToManagedInstanceExternalAdministratorOutputWithContext(context.Context) ManagedInstanceExternalAdministratorOutput
}

// Properties of a active directory administrator.
type ManagedInstanceExternalAdministratorArgs struct {
	// Type of the sever administrator.
	AdministratorType pulumi.StringPtrInput `pulumi:"administratorType"`
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication pulumi.BoolPtrInput `pulumi:"azureADOnlyAuthentication"`
	// Login name of the server administrator.
	Login pulumi.StringPtrInput `pulumi:"login"`
	// Principal Type of the sever administrator.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// SID (object ID) of the server administrator.
	Sid pulumi.StringPtrInput `pulumi:"sid"`
	// Tenant ID of the administrator.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ManagedInstanceExternalAdministratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceExternalAdministrator)(nil)).Elem()
}

func (i ManagedInstanceExternalAdministratorArgs) ToManagedInstanceExternalAdministratorOutput() ManagedInstanceExternalAdministratorOutput {
	return i.ToManagedInstanceExternalAdministratorOutputWithContext(context.Background())
}

func (i ManagedInstanceExternalAdministratorArgs) ToManagedInstanceExternalAdministratorOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceExternalAdministratorOutput)
}

func (i ManagedInstanceExternalAdministratorArgs) ToManagedInstanceExternalAdministratorPtrOutput() ManagedInstanceExternalAdministratorPtrOutput {
	return i.ToManagedInstanceExternalAdministratorPtrOutputWithContext(context.Background())
}

func (i ManagedInstanceExternalAdministratorArgs) ToManagedInstanceExternalAdministratorPtrOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceExternalAdministratorOutput).ToManagedInstanceExternalAdministratorPtrOutputWithContext(ctx)
}

// ManagedInstanceExternalAdministratorPtrInput is an input type that accepts ManagedInstanceExternalAdministratorArgs, ManagedInstanceExternalAdministratorPtr and ManagedInstanceExternalAdministratorPtrOutput values.
// You can construct a concrete instance of `ManagedInstanceExternalAdministratorPtrInput` via:
//
//	        ManagedInstanceExternalAdministratorArgs{...}
//
//	or:
//
//	        nil
type ManagedInstanceExternalAdministratorPtrInput interface {
	pulumi.Input

	ToManagedInstanceExternalAdministratorPtrOutput() ManagedInstanceExternalAdministratorPtrOutput
	ToManagedInstanceExternalAdministratorPtrOutputWithContext(context.Context) ManagedInstanceExternalAdministratorPtrOutput
}

type managedInstanceExternalAdministratorPtrType ManagedInstanceExternalAdministratorArgs

func ManagedInstanceExternalAdministratorPtr(v *ManagedInstanceExternalAdministratorArgs) ManagedInstanceExternalAdministratorPtrInput {
	return (*managedInstanceExternalAdministratorPtrType)(v)
}

func (*managedInstanceExternalAdministratorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceExternalAdministrator)(nil)).Elem()
}

func (i *managedInstanceExternalAdministratorPtrType) ToManagedInstanceExternalAdministratorPtrOutput() ManagedInstanceExternalAdministratorPtrOutput {
	return i.ToManagedInstanceExternalAdministratorPtrOutputWithContext(context.Background())
}

func (i *managedInstanceExternalAdministratorPtrType) ToManagedInstanceExternalAdministratorPtrOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceExternalAdministratorPtrOutput)
}

// Properties of a active directory administrator.
type ManagedInstanceExternalAdministratorOutput struct{ *pulumi.OutputState }

func (ManagedInstanceExternalAdministratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceExternalAdministrator)(nil)).Elem()
}

func (o ManagedInstanceExternalAdministratorOutput) ToManagedInstanceExternalAdministratorOutput() ManagedInstanceExternalAdministratorOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorOutput) ToManagedInstanceExternalAdministratorOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorOutput) ToManagedInstanceExternalAdministratorPtrOutput() ManagedInstanceExternalAdministratorPtrOutput {
	return o.ToManagedInstanceExternalAdministratorPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceExternalAdministratorOutput) ToManagedInstanceExternalAdministratorPtrOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceExternalAdministrator) *ManagedInstanceExternalAdministrator {
		return &v
	}).(ManagedInstanceExternalAdministratorPtrOutput)
}

// Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorOutput) AdministratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministrator) *string { return v.AdministratorType }).(pulumi.StringPtrOutput)
}

// Azure Active Directory only Authentication enabled.
func (o ManagedInstanceExternalAdministratorOutput) AzureADOnlyAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministrator) *bool { return v.AzureADOnlyAuthentication }).(pulumi.BoolPtrOutput)
}

// Login name of the server administrator.
func (o ManagedInstanceExternalAdministratorOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministrator) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Principal Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministrator) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// SID (object ID) of the server administrator.
func (o ManagedInstanceExternalAdministratorOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministrator) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

// Tenant ID of the administrator.
func (o ManagedInstanceExternalAdministratorOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministrator) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ManagedInstanceExternalAdministratorPtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceExternalAdministratorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceExternalAdministrator)(nil)).Elem()
}

func (o ManagedInstanceExternalAdministratorPtrOutput) ToManagedInstanceExternalAdministratorPtrOutput() ManagedInstanceExternalAdministratorPtrOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorPtrOutput) ToManagedInstanceExternalAdministratorPtrOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorPtrOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorPtrOutput) Elem() ManagedInstanceExternalAdministratorOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) ManagedInstanceExternalAdministrator {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceExternalAdministrator
		return ret
	}).(ManagedInstanceExternalAdministratorOutput)
}

// Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorPtrOutput) AdministratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) *string {
		if v == nil {
			return nil
		}
		return v.AdministratorType
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory only Authentication enabled.
func (o ManagedInstanceExternalAdministratorPtrOutput) AzureADOnlyAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) *bool {
		if v == nil {
			return nil
		}
		return v.AzureADOnlyAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Login name of the server administrator.
func (o ManagedInstanceExternalAdministratorPtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) *string {
		if v == nil {
			return nil
		}
		return v.Login
	}).(pulumi.StringPtrOutput)
}

// Principal Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorPtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// SID (object ID) of the server administrator.
func (o ManagedInstanceExternalAdministratorPtrOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) *string {
		if v == nil {
			return nil
		}
		return v.Sid
	}).(pulumi.StringPtrOutput)
}

// Tenant ID of the administrator.
func (o ManagedInstanceExternalAdministratorPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministrator) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Properties of a active directory administrator.
type ManagedInstanceExternalAdministratorResponse struct {
	// Type of the sever administrator.
	AdministratorType *string `pulumi:"administratorType"`
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication *bool `pulumi:"azureADOnlyAuthentication"`
	// Login name of the server administrator.
	Login *string `pulumi:"login"`
	// Principal Type of the sever administrator.
	PrincipalType *string `pulumi:"principalType"`
	// SID (object ID) of the server administrator.
	Sid *string `pulumi:"sid"`
	// Tenant ID of the administrator.
	TenantId *string `pulumi:"tenantId"`
}

// Properties of a active directory administrator.
type ManagedInstanceExternalAdministratorResponseOutput struct{ *pulumi.OutputState }

func (ManagedInstanceExternalAdministratorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceExternalAdministratorResponse)(nil)).Elem()
}

func (o ManagedInstanceExternalAdministratorResponseOutput) ToManagedInstanceExternalAdministratorResponseOutput() ManagedInstanceExternalAdministratorResponseOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorResponseOutput) ToManagedInstanceExternalAdministratorResponseOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorResponseOutput {
	return o
}

// Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorResponseOutput) AdministratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministratorResponse) *string { return v.AdministratorType }).(pulumi.StringPtrOutput)
}

// Azure Active Directory only Authentication enabled.
func (o ManagedInstanceExternalAdministratorResponseOutput) AzureADOnlyAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministratorResponse) *bool { return v.AzureADOnlyAuthentication }).(pulumi.BoolPtrOutput)
}

// Login name of the server administrator.
func (o ManagedInstanceExternalAdministratorResponseOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministratorResponse) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Principal Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorResponseOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministratorResponse) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// SID (object ID) of the server administrator.
func (o ManagedInstanceExternalAdministratorResponseOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministratorResponse) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

// Tenant ID of the administrator.
func (o ManagedInstanceExternalAdministratorResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceExternalAdministratorResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ManagedInstanceExternalAdministratorResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceExternalAdministratorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceExternalAdministratorResponse)(nil)).Elem()
}

func (o ManagedInstanceExternalAdministratorResponsePtrOutput) ToManagedInstanceExternalAdministratorResponsePtrOutput() ManagedInstanceExternalAdministratorResponsePtrOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorResponsePtrOutput) ToManagedInstanceExternalAdministratorResponsePtrOutputWithContext(ctx context.Context) ManagedInstanceExternalAdministratorResponsePtrOutput {
	return o
}

func (o ManagedInstanceExternalAdministratorResponsePtrOutput) Elem() ManagedInstanceExternalAdministratorResponseOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) ManagedInstanceExternalAdministratorResponse {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceExternalAdministratorResponse
		return ret
	}).(ManagedInstanceExternalAdministratorResponseOutput)
}

// Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorResponsePtrOutput) AdministratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdministratorType
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory only Authentication enabled.
func (o ManagedInstanceExternalAdministratorResponsePtrOutput) AzureADOnlyAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AzureADOnlyAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Login name of the server administrator.
func (o ManagedInstanceExternalAdministratorResponsePtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Login
	}).(pulumi.StringPtrOutput)
}

// Principal Type of the sever administrator.
func (o ManagedInstanceExternalAdministratorResponsePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// SID (object ID) of the server administrator.
func (o ManagedInstanceExternalAdministratorResponsePtrOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sid
	}).(pulumi.StringPtrOutput)
}

// Tenant ID of the administrator.
func (o ManagedInstanceExternalAdministratorResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceExternalAdministratorResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// A private endpoint connection under a managed instance
type ManagedInstancePecPropertyResponse struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Private endpoint connection properties
	Properties ManagedInstancePrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
}

// A private endpoint connection under a managed instance
type ManagedInstancePecPropertyResponseOutput struct{ *pulumi.OutputState }

func (ManagedInstancePecPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstancePecPropertyResponse)(nil)).Elem()
}

func (o ManagedInstancePecPropertyResponseOutput) ToManagedInstancePecPropertyResponseOutput() ManagedInstancePecPropertyResponseOutput {
	return o
}

func (o ManagedInstancePecPropertyResponseOutput) ToManagedInstancePecPropertyResponseOutputWithContext(ctx context.Context) ManagedInstancePecPropertyResponseOutput {
	return o
}

// Resource ID.
func (o ManagedInstancePecPropertyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstancePecPropertyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Private endpoint connection properties
func (o ManagedInstancePecPropertyResponseOutput) Properties() ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v ManagedInstancePecPropertyResponse) ManagedInstancePrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput)
}

type ManagedInstancePecPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstancePecPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstancePecPropertyResponse)(nil)).Elem()
}

func (o ManagedInstancePecPropertyResponseArrayOutput) ToManagedInstancePecPropertyResponseArrayOutput() ManagedInstancePecPropertyResponseArrayOutput {
	return o
}

func (o ManagedInstancePecPropertyResponseArrayOutput) ToManagedInstancePecPropertyResponseArrayOutputWithContext(ctx context.Context) ManagedInstancePecPropertyResponseArrayOutput {
	return o
}

func (o ManagedInstancePecPropertyResponseArrayOutput) Index(i pulumi.IntInput) ManagedInstancePecPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstancePecPropertyResponse {
		return vs[0].([]ManagedInstancePecPropertyResponse)[vs[1].(int)]
	}).(ManagedInstancePecPropertyResponseOutput)
}

// Properties of a private endpoint connection.
type ManagedInstancePrivateEndpointConnectionPropertiesResponse struct {
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *ManagedInstancePrivateEndpointPropertyResponse `pulumi:"privateEndpoint"`
	// Connection State of the Private Endpoint Connection.
	PrivateLinkServiceConnectionState *ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse `pulumi:"privateLinkServiceConnectionState"`
	// State of the Private Endpoint Connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of a private endpoint connection.
type ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstancePrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput) ToManagedInstancePrivateEndpointConnectionPropertiesResponseOutput() ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput) ToManagedInstancePrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// Private endpoint which the connection belongs to.
func (o ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() ManagedInstancePrivateEndpointPropertyResponsePtrOutput {
	return o.ApplyT(func(v ManagedInstancePrivateEndpointConnectionPropertiesResponse) *ManagedInstancePrivateEndpointPropertyResponse {
		return v.PrivateEndpoint
	}).(ManagedInstancePrivateEndpointPropertyResponsePtrOutput)
}

// Connection State of the Private Endpoint Connection.
func (o ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o.ApplyT(func(v ManagedInstancePrivateEndpointConnectionPropertiesResponse) *ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse {
		return v.PrivateLinkServiceConnectionState
	}).(ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput)
}

// State of the Private Endpoint Connection.
func (o ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstancePrivateEndpointConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ManagedInstancePrivateEndpointPropertyResponse struct {
	// Resource id of the private endpoint.
	Id *string `pulumi:"id"`
}

type ManagedInstancePrivateEndpointPropertyResponseOutput struct{ *pulumi.OutputState }

func (ManagedInstancePrivateEndpointPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstancePrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o ManagedInstancePrivateEndpointPropertyResponseOutput) ToManagedInstancePrivateEndpointPropertyResponseOutput() ManagedInstancePrivateEndpointPropertyResponseOutput {
	return o
}

func (o ManagedInstancePrivateEndpointPropertyResponseOutput) ToManagedInstancePrivateEndpointPropertyResponseOutputWithContext(ctx context.Context) ManagedInstancePrivateEndpointPropertyResponseOutput {
	return o
}

// Resource id of the private endpoint.
func (o ManagedInstancePrivateEndpointPropertyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstancePrivateEndpointPropertyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ManagedInstancePrivateEndpointPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedInstancePrivateEndpointPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstancePrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o ManagedInstancePrivateEndpointPropertyResponsePtrOutput) ToManagedInstancePrivateEndpointPropertyResponsePtrOutput() ManagedInstancePrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o ManagedInstancePrivateEndpointPropertyResponsePtrOutput) ToManagedInstancePrivateEndpointPropertyResponsePtrOutputWithContext(ctx context.Context) ManagedInstancePrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o ManagedInstancePrivateEndpointPropertyResponsePtrOutput) Elem() ManagedInstancePrivateEndpointPropertyResponseOutput {
	return o.ApplyT(func(v *ManagedInstancePrivateEndpointPropertyResponse) ManagedInstancePrivateEndpointPropertyResponse {
		if v != nil {
			return *v
		}
		var ret ManagedInstancePrivateEndpointPropertyResponse
		return ret
	}).(ManagedInstancePrivateEndpointPropertyResponseOutput)
}

// Resource id of the private endpoint.
func (o ManagedInstancePrivateEndpointPropertyResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstancePrivateEndpointPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse struct {
	// The private link service connection description.
	ActionsRequired string `pulumi:"actionsRequired"`
	// The private link service connection description.
	Description string `pulumi:"description"`
	// The private link service connection status.
	Status string `pulumi:"status"`
}

type ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput struct{ *pulumi.OutputState }

func (ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput) ToManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput() ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput) ToManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutputWithContext(ctx context.Context) ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

// The private link service connection description.
func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) string {
		return v.ActionsRequired
	}).(pulumi.StringOutput)
}

// The private link service connection description.
func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The private link service connection status.
func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput() ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutputWithContext(ctx context.Context) ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Elem() ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o.ApplyT(func(v *ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse {
		if v != nil {
			return *v
		}
		var ret ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse
		return ret
	}).(ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput)
}

// The private link service connection description.
func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The private link service connection description.
func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstancePrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentity struct {
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type *string `pulumi:"type"`
	// The resource ids of the user assigned identities to use
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityArgs struct {
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The resource ids of the user assigned identities to use
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The resource ids of the user assigned identities to use
func (o ResourceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The resource ids of the user assigned identities to use
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponse struct {
	// The Azure Active Directory principal id.
	PrincipalId string `pulumi:"principalId"`
	// The Azure Active Directory tenant id.
	TenantId string `pulumi:"tenantId"`
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type *string `pulumi:"type"`
	// The resource ids of the user assigned identities to use
	UserAssignedIdentities map[string]UserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// The Azure Active Directory principal id.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Azure Active Directory tenant id.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The resource ids of the user assigned identities to use
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserIdentityResponse { return v.UserAssignedIdentities }).(UserIdentityResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// The Azure Active Directory principal id.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Azure Active Directory tenant id.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The resource ids of the user assigned identities to use
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityResponseMapOutput)
}

// An ARM Resource SKU.
type Sku struct {
	// Capacity of the particular SKU.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `pulumi:"name"`
	// Size of the particular SKU
	Size *string `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// An ARM Resource SKU.
type SkuArgs struct {
	// Capacity of the particular SKU.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name pulumi.StringInput `pulumi:"name"`
	// Size of the particular SKU
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// An ARM Resource SKU.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Capacity of the particular SKU.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// Size of the particular SKU
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// Capacity of the particular SKU.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Size of the particular SKU
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// An ARM Resource SKU.
type SkuResponse struct {
	// Capacity of the particular SKU.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `pulumi:"name"`
	// Size of the particular SKU
	Size *string `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `pulumi:"tier"`
}

// An ARM Resource SKU.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Capacity of the particular SKU.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Size of the particular SKU
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// Capacity of the particular SKU.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Size of the particular SKU
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type UserIdentityResponse struct {
	// The Azure Active Directory client id.
	ClientId string `pulumi:"clientId"`
	// The Azure Active Directory principal id.
	PrincipalId string `pulumi:"principalId"`
}

// Azure Active Directory identity configuration for a resource.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// The Azure Active Directory client id.
func (o UserIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Azure Active Directory principal id.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutput() UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutputWithContext(ctx context.Context) UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityResponse {
		return vs[0].(map[string]UserIdentityResponse)[vs[1].(string)]
	}).(UserIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedInstanceExternalAdministratorOutput{})
	pulumi.RegisterOutputType(ManagedInstanceExternalAdministratorPtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceExternalAdministratorResponseOutput{})
	pulumi.RegisterOutputType(ManagedInstanceExternalAdministratorResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedInstancePecPropertyResponseOutput{})
	pulumi.RegisterOutputType(ManagedInstancePecPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstancePrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedInstancePrivateEndpointPropertyResponseOutput{})
	pulumi.RegisterOutputType(ManagedInstancePrivateEndpointPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedInstancePrivateLinkServiceConnectionStatePropertyResponseOutput{})
	pulumi.RegisterOutputType(ManagedInstancePrivateLinkServiceConnectionStatePropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseMapOutput{})
}
