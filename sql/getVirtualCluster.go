// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a virtual cluster.
//
// Uses Azure REST API version 2024-11-01-preview.
func LookupVirtualCluster(ctx *pulumi.Context, args *LookupVirtualClusterArgs, opts ...pulumi.InvokeOption) (*LookupVirtualClusterResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualClusterResult
	err := ctx.Invoke("azure-native:sql:getVirtualCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualClusterArgs struct {
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual cluster.
	VirtualClusterName string `pulumi:"virtualClusterName"`
}

// An Azure SQL virtual cluster.
type LookupVirtualClusterResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// List of resources in this virtual cluster.
	ChildResources []string `pulumi:"childResources"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Subnet resource ID for the virtual cluster.
	SubnetId string `pulumi:"subnetId"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// Virtual cluster version.
	Version *string `pulumi:"version"`
}

func LookupVirtualClusterOutput(ctx *pulumi.Context, args LookupVirtualClusterOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVirtualClusterResultOutput, error) {
			args := v.(LookupVirtualClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:sql:getVirtualCluster", args, LookupVirtualClusterResultOutput{}, options).(LookupVirtualClusterResultOutput), nil
		}).(LookupVirtualClusterResultOutput)
}

type LookupVirtualClusterOutputArgs struct {
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the virtual cluster.
	VirtualClusterName pulumi.StringInput `pulumi:"virtualClusterName"`
}

func (LookupVirtualClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualClusterArgs)(nil)).Elem()
}

// An Azure SQL virtual cluster.
type LookupVirtualClusterResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualClusterResult)(nil)).Elem()
}

func (o LookupVirtualClusterResultOutput) ToLookupVirtualClusterResultOutput() LookupVirtualClusterResultOutput {
	return o
}

func (o LookupVirtualClusterResultOutput) ToLookupVirtualClusterResultOutputWithContext(ctx context.Context) LookupVirtualClusterResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupVirtualClusterResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// List of resources in this virtual cluster.
func (o LookupVirtualClusterResultOutput) ChildResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) []string { return v.ChildResources }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o LookupVirtualClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource location.
func (o LookupVirtualClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupVirtualClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet resource ID for the virtual cluster.
func (o LookupVirtualClusterResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Resource tags.
func (o LookupVirtualClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupVirtualClusterResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual cluster version.
func (o LookupVirtualClusterResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualClusterResultOutput{})
}
