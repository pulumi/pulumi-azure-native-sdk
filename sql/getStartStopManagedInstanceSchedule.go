// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the managed instance's Start/Stop schedule.
// Azure REST API version: 2022-11-01-preview.
//
// Other available API versions: 2023-02-01-preview, 2023-05-01-preview, 2023-08-01-preview.
func LookupStartStopManagedInstanceSchedule(ctx *pulumi.Context, args *LookupStartStopManagedInstanceScheduleArgs, opts ...pulumi.InvokeOption) (*LookupStartStopManagedInstanceScheduleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStartStopManagedInstanceScheduleResult
	err := ctx.Invoke("azure-native:sql:getStartStopManagedInstanceSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupStartStopManagedInstanceScheduleArgs struct {
	// The name of the managed instance.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the managed instance Start/Stop schedule.
	StartStopScheduleName string `pulumi:"startStopScheduleName"`
}

// Managed instance's Start/Stop schedule.
type LookupStartStopManagedInstanceScheduleResult struct {
	// The description of the schedule.
	Description *string `pulumi:"description"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime string `pulumi:"nextExecutionTime"`
	// Next action to be executed (Start or Stop)
	NextRunAction string `pulumi:"nextRunAction"`
	// Schedule list.
	ScheduleList []ScheduleItemResponse `pulumi:"scheduleList"`
	// System data of the scheduled resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The time zone of the schedule.
	TimeZoneId *string `pulumi:"timeZoneId"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupStartStopManagedInstanceScheduleResult
func (val *LookupStartStopManagedInstanceScheduleResult) Defaults() *LookupStartStopManagedInstanceScheduleResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Description == nil {
		description_ := ""
		tmp.Description = &description_
	}
	if tmp.TimeZoneId == nil {
		timeZoneId_ := "UTC"
		tmp.TimeZoneId = &timeZoneId_
	}
	return &tmp
}

func LookupStartStopManagedInstanceScheduleOutput(ctx *pulumi.Context, args LookupStartStopManagedInstanceScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupStartStopManagedInstanceScheduleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStartStopManagedInstanceScheduleResult, error) {
			args := v.(LookupStartStopManagedInstanceScheduleArgs)
			r, err := LookupStartStopManagedInstanceSchedule(ctx, &args, opts...)
			var s LookupStartStopManagedInstanceScheduleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStartStopManagedInstanceScheduleResultOutput)
}

type LookupStartStopManagedInstanceScheduleOutputArgs struct {
	// The name of the managed instance.
	ManagedInstanceName pulumi.StringInput `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the managed instance Start/Stop schedule.
	StartStopScheduleName pulumi.StringInput `pulumi:"startStopScheduleName"`
}

func (LookupStartStopManagedInstanceScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStartStopManagedInstanceScheduleArgs)(nil)).Elem()
}

// Managed instance's Start/Stop schedule.
type LookupStartStopManagedInstanceScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupStartStopManagedInstanceScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStartStopManagedInstanceScheduleResult)(nil)).Elem()
}

func (o LookupStartStopManagedInstanceScheduleResultOutput) ToLookupStartStopManagedInstanceScheduleResultOutput() LookupStartStopManagedInstanceScheduleResultOutput {
	return o
}

func (o LookupStartStopManagedInstanceScheduleResultOutput) ToLookupStartStopManagedInstanceScheduleResultOutputWithContext(ctx context.Context) LookupStartStopManagedInstanceScheduleResultOutput {
	return o
}

// The description of the schedule.
func (o LookupStartStopManagedInstanceScheduleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LookupStartStopManagedInstanceScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupStartStopManagedInstanceScheduleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Timestamp when the next action will be executed in the corresponding schedule time zone.
func (o LookupStartStopManagedInstanceScheduleResultOutput) NextExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) string { return v.NextExecutionTime }).(pulumi.StringOutput)
}

// Next action to be executed (Start or Stop)
func (o LookupStartStopManagedInstanceScheduleResultOutput) NextRunAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) string { return v.NextRunAction }).(pulumi.StringOutput)
}

// Schedule list.
func (o LookupStartStopManagedInstanceScheduleResultOutput) ScheduleList() ScheduleItemResponseArrayOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) []ScheduleItemResponse { return v.ScheduleList }).(ScheduleItemResponseArrayOutput)
}

// System data of the scheduled resource.
func (o LookupStartStopManagedInstanceScheduleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The time zone of the schedule.
func (o LookupStartStopManagedInstanceScheduleResultOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupStartStopManagedInstanceScheduleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStartStopManagedInstanceScheduleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStartStopManagedInstanceScheduleResultOutput{})
}
