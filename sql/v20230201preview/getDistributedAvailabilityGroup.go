// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a distributed availability group info.
func LookupDistributedAvailabilityGroup(ctx *pulumi.Context, args *LookupDistributedAvailabilityGroupArgs, opts ...pulumi.InvokeOption) (*LookupDistributedAvailabilityGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDistributedAvailabilityGroupResult
	err := ctx.Invoke("azure-native:sql/v20230201preview:getDistributedAvailabilityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDistributedAvailabilityGroupArgs struct {
	// The distributed availability group name.
	DistributedAvailabilityGroupName string `pulumi:"distributedAvailabilityGroupName"`
	// The name of the managed instance.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Distributed availability group between box and Sql Managed Instance.
type LookupDistributedAvailabilityGroupResult struct {
	// Databases in the distributed availability group
	Databases []DistributedAvailabilityGroupDatabaseResponse `pulumi:"databases"`
	// ID of the distributed availability group
	DistributedAvailabilityGroupId string `pulumi:"distributedAvailabilityGroupId"`
	// Name of the distributed availability group
	DistributedAvailabilityGroupName string `pulumi:"distributedAvailabilityGroupName"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Managed instance side availability group name
	InstanceAvailabilityGroupName string `pulumi:"instanceAvailabilityGroupName"`
	// Managed instance side link role
	InstanceLinkRole string `pulumi:"instanceLinkRole"`
	// Resource name.
	Name string `pulumi:"name"`
	// SQL server side availability group name
	PartnerAvailabilityGroupName string `pulumi:"partnerAvailabilityGroupName"`
	// SQL server side endpoint - IP or DNS resolvable name
	PartnerEndpoint string `pulumi:"partnerEndpoint"`
	// SQL server side link role
	PartnerLinkRole string `pulumi:"partnerLinkRole"`
	// Replication mode of the link
	ReplicationMode *string `pulumi:"replicationMode"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupDistributedAvailabilityGroupOutput(ctx *pulumi.Context, args LookupDistributedAvailabilityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupDistributedAvailabilityGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDistributedAvailabilityGroupResult, error) {
			args := v.(LookupDistributedAvailabilityGroupArgs)
			r, err := LookupDistributedAvailabilityGroup(ctx, &args, opts...)
			var s LookupDistributedAvailabilityGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDistributedAvailabilityGroupResultOutput)
}

type LookupDistributedAvailabilityGroupOutputArgs struct {
	// The distributed availability group name.
	DistributedAvailabilityGroupName pulumi.StringInput `pulumi:"distributedAvailabilityGroupName"`
	// The name of the managed instance.
	ManagedInstanceName pulumi.StringInput `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDistributedAvailabilityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDistributedAvailabilityGroupArgs)(nil)).Elem()
}

// Distributed availability group between box and Sql Managed Instance.
type LookupDistributedAvailabilityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupDistributedAvailabilityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDistributedAvailabilityGroupResult)(nil)).Elem()
}

func (o LookupDistributedAvailabilityGroupResultOutput) ToLookupDistributedAvailabilityGroupResultOutput() LookupDistributedAvailabilityGroupResultOutput {
	return o
}

func (o LookupDistributedAvailabilityGroupResultOutput) ToLookupDistributedAvailabilityGroupResultOutputWithContext(ctx context.Context) LookupDistributedAvailabilityGroupResultOutput {
	return o
}

// Databases in the distributed availability group
func (o LookupDistributedAvailabilityGroupResultOutput) Databases() DistributedAvailabilityGroupDatabaseResponseArrayOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) []DistributedAvailabilityGroupDatabaseResponse {
		return v.Databases
	}).(DistributedAvailabilityGroupDatabaseResponseArrayOutput)
}

// ID of the distributed availability group
func (o LookupDistributedAvailabilityGroupResultOutput) DistributedAvailabilityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.DistributedAvailabilityGroupId }).(pulumi.StringOutput)
}

// Name of the distributed availability group
func (o LookupDistributedAvailabilityGroupResultOutput) DistributedAvailabilityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.DistributedAvailabilityGroupName }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupDistributedAvailabilityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Managed instance side availability group name
func (o LookupDistributedAvailabilityGroupResultOutput) InstanceAvailabilityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.InstanceAvailabilityGroupName }).(pulumi.StringOutput)
}

// Managed instance side link role
func (o LookupDistributedAvailabilityGroupResultOutput) InstanceLinkRole() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.InstanceLinkRole }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupDistributedAvailabilityGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// SQL server side availability group name
func (o LookupDistributedAvailabilityGroupResultOutput) PartnerAvailabilityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.PartnerAvailabilityGroupName }).(pulumi.StringOutput)
}

// SQL server side endpoint - IP or DNS resolvable name
func (o LookupDistributedAvailabilityGroupResultOutput) PartnerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.PartnerEndpoint }).(pulumi.StringOutput)
}

// SQL server side link role
func (o LookupDistributedAvailabilityGroupResultOutput) PartnerLinkRole() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.PartnerLinkRole }).(pulumi.StringOutput)
}

// Replication mode of the link
func (o LookupDistributedAvailabilityGroupResultOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) *string { return v.ReplicationMode }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupDistributedAvailabilityGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDistributedAvailabilityGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDistributedAvailabilityGroupResultOutput{})
}
