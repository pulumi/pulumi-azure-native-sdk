// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns a label in the given workspace.
func LookupLabelByWorkspace(ctx *pulumi.Context, args *LookupLabelByWorkspaceArgs, opts ...pulumi.InvokeOption) (*LookupLabelByWorkspaceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupLabelByWorkspaceResult
	err := ctx.Invoke("azure-native:easm/v20230401preview:getLabelByWorkspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLabelByWorkspaceArgs struct {
	// The name of the Label.
	LabelName string `pulumi:"labelName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Label details
type LookupLabelByWorkspaceResult struct {
	// Label color.
	Color *string `pulumi:"color"`
	// Label display name.
	DisplayName *string `pulumi:"displayName"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupLabelByWorkspaceOutput(ctx *pulumi.Context, args LookupLabelByWorkspaceOutputArgs, opts ...pulumi.InvokeOption) LookupLabelByWorkspaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLabelByWorkspaceResult, error) {
			args := v.(LookupLabelByWorkspaceArgs)
			r, err := LookupLabelByWorkspace(ctx, &args, opts...)
			var s LookupLabelByWorkspaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLabelByWorkspaceResultOutput)
}

type LookupLabelByWorkspaceOutputArgs struct {
	// The name of the Label.
	LabelName pulumi.StringInput `pulumi:"labelName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupLabelByWorkspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabelByWorkspaceArgs)(nil)).Elem()
}

// Label details
type LookupLabelByWorkspaceResultOutput struct{ *pulumi.OutputState }

func (LookupLabelByWorkspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabelByWorkspaceResult)(nil)).Elem()
}

func (o LookupLabelByWorkspaceResultOutput) ToLookupLabelByWorkspaceResultOutput() LookupLabelByWorkspaceResultOutput {
	return o
}

func (o LookupLabelByWorkspaceResultOutput) ToLookupLabelByWorkspaceResultOutputWithContext(ctx context.Context) LookupLabelByWorkspaceResultOutput {
	return o
}

func (o LookupLabelByWorkspaceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupLabelByWorkspaceResult] {
	return pulumix.Output[LookupLabelByWorkspaceResult]{
		OutputState: o.OutputState,
	}
}

// Label color.
func (o LookupLabelByWorkspaceResultOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Label display name.
func (o LookupLabelByWorkspaceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupLabelByWorkspaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLabelByWorkspaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource provisioning state.
func (o LookupLabelByWorkspaceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupLabelByWorkspaceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLabelByWorkspaceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelByWorkspaceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLabelByWorkspaceResultOutput{})
}
