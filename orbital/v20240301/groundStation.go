// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240301

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Ground Station contains one or more antennas.
type GroundStation struct {
	pulumi.CustomResourceState

	// Altitude of the ground station.
	AltitudeMeters pulumi.Float64PtrOutput `pulumi:"altitudeMeters"`
	// Ground station capabilities.
	Capabilities pulumi.StringArrayOutput `pulumi:"capabilities"`
	// City of ground station.
	City pulumi.StringPtrOutput `pulumi:"city"`
	// A reference to global communications site.
	GlobalCommunicationsSite GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput `pulumi:"globalCommunicationsSite"`
	// Latitude of the ground station in decimal degrees.
	LatitudeDegrees pulumi.Float64PtrOutput `pulumi:"latitudeDegrees"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Longitude of the ground station in decimal degrees.
	LongitudeDegrees pulumi.Float64PtrOutput `pulumi:"longitudeDegrees"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Ground station provider name.
	ProviderName pulumi.StringPtrOutput `pulumi:"providerName"`
	// Release Status of a ground station.
	ReleaseMode pulumi.StringOutput `pulumi:"releaseMode"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGroundStation registers a new resource with the given unique name, arguments, and options.
func NewGroundStation(ctx *pulumi.Context,
	name string, args *GroundStationArgs, opts ...pulumi.ResourceOption) (*GroundStation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Capabilities == nil {
		return nil, errors.New("invalid value for required argument 'Capabilities'")
	}
	if args.GlobalCommunicationsSite == nil {
		return nil, errors.New("invalid value for required argument 'GlobalCommunicationsSite'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:orbital:GroundStation"),
		},
		{
			Type: pulumi.String("azure-native:orbital/v20240301preview:GroundStation"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GroundStation
	err := ctx.RegisterResource("azure-native:orbital/v20240301:GroundStation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroundStation gets an existing GroundStation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroundStation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroundStationState, opts ...pulumi.ResourceOption) (*GroundStation, error) {
	var resource GroundStation
	err := ctx.ReadResource("azure-native:orbital/v20240301:GroundStation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroundStation resources.
type groundStationState struct {
}

type GroundStationState struct {
}

func (GroundStationState) ElementType() reflect.Type {
	return reflect.TypeOf((*groundStationState)(nil)).Elem()
}

type groundStationArgs struct {
	// Altitude of the ground station.
	AltitudeMeters *float64 `pulumi:"altitudeMeters"`
	// Ground station capabilities.
	Capabilities []string `pulumi:"capabilities"`
	// City of ground station.
	City *string `pulumi:"city"`
	// A reference to global communications site.
	GlobalCommunicationsSite GroundStationsPropertiesGlobalCommunicationsSite `pulumi:"globalCommunicationsSite"`
	// Ground Station name.
	GroundStationName *string `pulumi:"groundStationName"`
	// Latitude of the ground station in decimal degrees.
	LatitudeDegrees *float64 `pulumi:"latitudeDegrees"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Longitude of the ground station in decimal degrees.
	LongitudeDegrees *float64 `pulumi:"longitudeDegrees"`
	// Ground station provider name.
	ProviderName *string `pulumi:"providerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a GroundStation resource.
type GroundStationArgs struct {
	// Altitude of the ground station.
	AltitudeMeters pulumi.Float64PtrInput
	// Ground station capabilities.
	Capabilities pulumi.StringArrayInput
	// City of ground station.
	City pulumi.StringPtrInput
	// A reference to global communications site.
	GlobalCommunicationsSite GroundStationsPropertiesGlobalCommunicationsSiteInput
	// Ground Station name.
	GroundStationName pulumi.StringPtrInput
	// Latitude of the ground station in decimal degrees.
	LatitudeDegrees pulumi.Float64PtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Longitude of the ground station in decimal degrees.
	LongitudeDegrees pulumi.Float64PtrInput
	// Ground station provider name.
	ProviderName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (GroundStationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groundStationArgs)(nil)).Elem()
}

type GroundStationInput interface {
	pulumi.Input

	ToGroundStationOutput() GroundStationOutput
	ToGroundStationOutputWithContext(ctx context.Context) GroundStationOutput
}

func (*GroundStation) ElementType() reflect.Type {
	return reflect.TypeOf((**GroundStation)(nil)).Elem()
}

func (i *GroundStation) ToGroundStationOutput() GroundStationOutput {
	return i.ToGroundStationOutputWithContext(context.Background())
}

func (i *GroundStation) ToGroundStationOutputWithContext(ctx context.Context) GroundStationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroundStationOutput)
}

type GroundStationOutput struct{ *pulumi.OutputState }

func (GroundStationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroundStation)(nil)).Elem()
}

func (o GroundStationOutput) ToGroundStationOutput() GroundStationOutput {
	return o
}

func (o GroundStationOutput) ToGroundStationOutputWithContext(ctx context.Context) GroundStationOutput {
	return o
}

// Altitude of the ground station.
func (o GroundStationOutput) AltitudeMeters() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.Float64PtrOutput { return v.AltitudeMeters }).(pulumi.Float64PtrOutput)
}

// Ground station capabilities.
func (o GroundStationOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringArrayOutput { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// City of ground station.
func (o GroundStationOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringPtrOutput { return v.City }).(pulumi.StringPtrOutput)
}

// A reference to global communications site.
func (o GroundStationOutput) GlobalCommunicationsSite() GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput {
	return o.ApplyT(func(v *GroundStation) GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput {
		return v.GlobalCommunicationsSite
	}).(GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput)
}

// Latitude of the ground station in decimal degrees.
func (o GroundStationOutput) LatitudeDegrees() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.Float64PtrOutput { return v.LatitudeDegrees }).(pulumi.Float64PtrOutput)
}

// The geo-location where the resource lives
func (o GroundStationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Longitude of the ground station in decimal degrees.
func (o GroundStationOutput) LongitudeDegrees() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.Float64PtrOutput { return v.LongitudeDegrees }).(pulumi.Float64PtrOutput)
}

// The name of the resource
func (o GroundStationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Ground station provider name.
func (o GroundStationOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringPtrOutput { return v.ProviderName }).(pulumi.StringPtrOutput)
}

// Release Status of a ground station.
func (o GroundStationOutput) ReleaseMode() pulumi.StringOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringOutput { return v.ReleaseMode }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GroundStationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *GroundStation) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GroundStationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GroundStationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *GroundStation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GroundStationOutput{})
}
