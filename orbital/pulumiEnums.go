// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package orbital

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
type AutoGeneratedDomainNameLabelScope string

const (
	// The domain name label is randomly generated. The resource name cannot be reused within the same region.
	AutoGeneratedDomainNameLabelScopeNoReuse = AutoGeneratedDomainNameLabelScope("NoReuse")
	// The domain name label is deterministically generated using the resource name and tenant id. The resource name cannot be reused within the same region and tenant.
	AutoGeneratedDomainNameLabelScopeTenantReuse = AutoGeneratedDomainNameLabelScope("TenantReuse")
	// The domain name label is deterministically generated using the resource name, tenant id, and subscription id. The resource name cannot be reused within the same region and subscription.
	AutoGeneratedDomainNameLabelScopeSubscriptionReuse = AutoGeneratedDomainNameLabelScope("SubscriptionReuse")
	// The domain name label is deterministically generated using the resource name, tenant id, subscription id, and resource group name. The resource name cannot be reused within the same resource group.
	AutoGeneratedDomainNameLabelScopeResourceGroupReuse = AutoGeneratedDomainNameLabelScope("ResourceGroupReuse")
)

func (AutoGeneratedDomainNameLabelScope) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoGeneratedDomainNameLabelScope)(nil)).Elem()
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopeOutput() AutoGeneratedDomainNameLabelScopeOutput {
	return pulumi.ToOutput(e).(AutoGeneratedDomainNameLabelScopeOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopeOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoGeneratedDomainNameLabelScopeOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return e.ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(context.Background())
}

func (e AutoGeneratedDomainNameLabelScope) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return AutoGeneratedDomainNameLabelScope(e).ToAutoGeneratedDomainNameLabelScopeOutputWithContext(ctx).ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx)
}

func (e AutoGeneratedDomainNameLabelScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoGeneratedDomainNameLabelScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoGeneratedDomainNameLabelScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoGeneratedDomainNameLabelScopeOutput struct{ *pulumi.OutputState }

func (AutoGeneratedDomainNameLabelScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoGeneratedDomainNameLabelScope)(nil)).Elem()
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopeOutput() AutoGeneratedDomainNameLabelScopeOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopeOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopeOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return o.ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoGeneratedDomainNameLabelScope) *AutoGeneratedDomainNameLabelScope {
		return &v
	}).(AutoGeneratedDomainNameLabelScopePtrOutput)
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoGeneratedDomainNameLabelScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoGeneratedDomainNameLabelScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoGeneratedDomainNameLabelScopePtrOutput struct{ *pulumi.OutputState }

func (AutoGeneratedDomainNameLabelScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoGeneratedDomainNameLabelScope)(nil)).Elem()
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return o
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) Elem() AutoGeneratedDomainNameLabelScopeOutput {
	return o.ApplyT(func(v *AutoGeneratedDomainNameLabelScope) AutoGeneratedDomainNameLabelScope {
		if v != nil {
			return *v
		}
		var ret AutoGeneratedDomainNameLabelScope
		return ret
	}).(AutoGeneratedDomainNameLabelScopeOutput)
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoGeneratedDomainNameLabelScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoGeneratedDomainNameLabelScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoGeneratedDomainNameLabelScopeInput is an input type that accepts values of the AutoGeneratedDomainNameLabelScope enum
// A concrete instance of `AutoGeneratedDomainNameLabelScopeInput` can be one of the following:
//
//	AutoGeneratedDomainNameLabelScopeNoReuse
//	AutoGeneratedDomainNameLabelScopeTenantReuse
//	AutoGeneratedDomainNameLabelScopeSubscriptionReuse
//	AutoGeneratedDomainNameLabelScopeResourceGroupReuse
type AutoGeneratedDomainNameLabelScopeInput interface {
	pulumi.Input

	ToAutoGeneratedDomainNameLabelScopeOutput() AutoGeneratedDomainNameLabelScopeOutput
	ToAutoGeneratedDomainNameLabelScopeOutputWithContext(context.Context) AutoGeneratedDomainNameLabelScopeOutput
}

var autoGeneratedDomainNameLabelScopePtrType = reflect.TypeOf((**AutoGeneratedDomainNameLabelScope)(nil)).Elem()

type AutoGeneratedDomainNameLabelScopePtrInput interface {
	pulumi.Input

	ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput
	ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(context.Context) AutoGeneratedDomainNameLabelScopePtrOutput
}

type autoGeneratedDomainNameLabelScopePtr string

func AutoGeneratedDomainNameLabelScopePtr(v string) AutoGeneratedDomainNameLabelScopePtrInput {
	return (*autoGeneratedDomainNameLabelScopePtr)(&v)
}

func (*autoGeneratedDomainNameLabelScopePtr) ElementType() reflect.Type {
	return autoGeneratedDomainNameLabelScopePtrType
}

func (in *autoGeneratedDomainNameLabelScopePtr) ToAutoGeneratedDomainNameLabelScopePtrOutput() AutoGeneratedDomainNameLabelScopePtrOutput {
	return pulumi.ToOutput(in).(AutoGeneratedDomainNameLabelScopePtrOutput)
}

func (in *autoGeneratedDomainNameLabelScopePtr) ToAutoGeneratedDomainNameLabelScopePtrOutputWithContext(ctx context.Context) AutoGeneratedDomainNameLabelScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoGeneratedDomainNameLabelScopePtrOutput)
}

// Auto-tracking configuration.
type AutoTrackingConfiguration string

const (
	AutoTrackingConfigurationDisabled = AutoTrackingConfiguration("disabled")
	AutoTrackingConfigurationXBand    = AutoTrackingConfiguration("xBand")
	AutoTrackingConfigurationSBand    = AutoTrackingConfiguration("sBand")
)

func (AutoTrackingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoTrackingConfiguration)(nil)).Elem()
}

func (e AutoTrackingConfiguration) ToAutoTrackingConfigurationOutput() AutoTrackingConfigurationOutput {
	return pulumi.ToOutput(e).(AutoTrackingConfigurationOutput)
}

func (e AutoTrackingConfiguration) ToAutoTrackingConfigurationOutputWithContext(ctx context.Context) AutoTrackingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoTrackingConfigurationOutput)
}

func (e AutoTrackingConfiguration) ToAutoTrackingConfigurationPtrOutput() AutoTrackingConfigurationPtrOutput {
	return e.ToAutoTrackingConfigurationPtrOutputWithContext(context.Background())
}

func (e AutoTrackingConfiguration) ToAutoTrackingConfigurationPtrOutputWithContext(ctx context.Context) AutoTrackingConfigurationPtrOutput {
	return AutoTrackingConfiguration(e).ToAutoTrackingConfigurationOutputWithContext(ctx).ToAutoTrackingConfigurationPtrOutputWithContext(ctx)
}

func (e AutoTrackingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoTrackingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoTrackingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoTrackingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoTrackingConfigurationOutput struct{ *pulumi.OutputState }

func (AutoTrackingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoTrackingConfiguration)(nil)).Elem()
}

func (o AutoTrackingConfigurationOutput) ToAutoTrackingConfigurationOutput() AutoTrackingConfigurationOutput {
	return o
}

func (o AutoTrackingConfigurationOutput) ToAutoTrackingConfigurationOutputWithContext(ctx context.Context) AutoTrackingConfigurationOutput {
	return o
}

func (o AutoTrackingConfigurationOutput) ToAutoTrackingConfigurationPtrOutput() AutoTrackingConfigurationPtrOutput {
	return o.ToAutoTrackingConfigurationPtrOutputWithContext(context.Background())
}

func (o AutoTrackingConfigurationOutput) ToAutoTrackingConfigurationPtrOutputWithContext(ctx context.Context) AutoTrackingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoTrackingConfiguration) *AutoTrackingConfiguration {
		return &v
	}).(AutoTrackingConfigurationPtrOutput)
}

func (o AutoTrackingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoTrackingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoTrackingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoTrackingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoTrackingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoTrackingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoTrackingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AutoTrackingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoTrackingConfiguration)(nil)).Elem()
}

func (o AutoTrackingConfigurationPtrOutput) ToAutoTrackingConfigurationPtrOutput() AutoTrackingConfigurationPtrOutput {
	return o
}

func (o AutoTrackingConfigurationPtrOutput) ToAutoTrackingConfigurationPtrOutputWithContext(ctx context.Context) AutoTrackingConfigurationPtrOutput {
	return o
}

func (o AutoTrackingConfigurationPtrOutput) Elem() AutoTrackingConfigurationOutput {
	return o.ApplyT(func(v *AutoTrackingConfiguration) AutoTrackingConfiguration {
		if v != nil {
			return *v
		}
		var ret AutoTrackingConfiguration
		return ret
	}).(AutoTrackingConfigurationOutput)
}

func (o AutoTrackingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoTrackingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoTrackingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoTrackingConfigurationInput is an input type that accepts values of the AutoTrackingConfiguration enum
// A concrete instance of `AutoTrackingConfigurationInput` can be one of the following:
//
//	AutoTrackingConfigurationDisabled
//	AutoTrackingConfigurationXBand
//	AutoTrackingConfigurationSBand
type AutoTrackingConfigurationInput interface {
	pulumi.Input

	ToAutoTrackingConfigurationOutput() AutoTrackingConfigurationOutput
	ToAutoTrackingConfigurationOutputWithContext(context.Context) AutoTrackingConfigurationOutput
}

var autoTrackingConfigurationPtrType = reflect.TypeOf((**AutoTrackingConfiguration)(nil)).Elem()

type AutoTrackingConfigurationPtrInput interface {
	pulumi.Input

	ToAutoTrackingConfigurationPtrOutput() AutoTrackingConfigurationPtrOutput
	ToAutoTrackingConfigurationPtrOutputWithContext(context.Context) AutoTrackingConfigurationPtrOutput
}

type autoTrackingConfigurationPtr string

func AutoTrackingConfigurationPtr(v string) AutoTrackingConfigurationPtrInput {
	return (*autoTrackingConfigurationPtr)(&v)
}

func (*autoTrackingConfigurationPtr) ElementType() reflect.Type {
	return autoTrackingConfigurationPtrType
}

func (in *autoTrackingConfigurationPtr) ToAutoTrackingConfigurationPtrOutput() AutoTrackingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(AutoTrackingConfigurationPtrOutput)
}

func (in *autoTrackingConfigurationPtr) ToAutoTrackingConfigurationPtrOutputWithContext(ctx context.Context) AutoTrackingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoTrackingConfigurationPtrOutput)
}

// Capability of the Ground Station.
type Capability string

const (
	CapabilityEarthObservation = Capability("EarthObservation")
	CapabilityCommunication    = Capability("Communication")
)

func (Capability) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (e Capability) ToCapabilityOutput() CapabilityOutput {
	return pulumi.ToOutput(e).(CapabilityOutput)
}

func (e Capability) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapabilityOutput)
}

func (e Capability) ToCapabilityPtrOutput() CapabilityPtrOutput {
	return e.ToCapabilityPtrOutputWithContext(context.Background())
}

func (e Capability) ToCapabilityPtrOutputWithContext(ctx context.Context) CapabilityPtrOutput {
	return Capability(e).ToCapabilityOutputWithContext(ctx).ToCapabilityPtrOutputWithContext(ctx)
}

func (e Capability) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Capability) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Capability) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Capability) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityPtrOutput() CapabilityPtrOutput {
	return o.ToCapabilityPtrOutputWithContext(context.Background())
}

func (o CapabilityOutput) ToCapabilityPtrOutputWithContext(ctx context.Context) CapabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Capability) *Capability {
		return &v
	}).(CapabilityPtrOutput)
}

func (o CapabilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapabilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Capability) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapabilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Capability) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapabilityPtrOutput struct{ *pulumi.OutputState }

func (CapabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Capability)(nil)).Elem()
}

func (o CapabilityPtrOutput) ToCapabilityPtrOutput() CapabilityPtrOutput {
	return o
}

func (o CapabilityPtrOutput) ToCapabilityPtrOutputWithContext(ctx context.Context) CapabilityPtrOutput {
	return o
}

func (o CapabilityPtrOutput) Elem() CapabilityOutput {
	return o.ApplyT(func(v *Capability) Capability {
		if v != nil {
			return *v
		}
		var ret Capability
		return ret
	}).(CapabilityOutput)
}

func (o CapabilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Capability) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapabilityInput is an input type that accepts values of the Capability enum
// A concrete instance of `CapabilityInput` can be one of the following:
//
//	CapabilityEarthObservation
//	CapabilityCommunication
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

var capabilityPtrType = reflect.TypeOf((**Capability)(nil)).Elem()

type CapabilityPtrInput interface {
	pulumi.Input

	ToCapabilityPtrOutput() CapabilityPtrOutput
	ToCapabilityPtrOutputWithContext(context.Context) CapabilityPtrOutput
}

type capabilityPtr string

func CapabilityPtr(v string) CapabilityPtrInput {
	return (*capabilityPtr)(&v)
}

func (*capabilityPtr) ElementType() reflect.Type {
	return capabilityPtrType
}

func (in *capabilityPtr) ToCapabilityPtrOutput() CapabilityPtrOutput {
	return pulumi.ToOutput(in).(CapabilityPtrOutput)
}

func (in *capabilityPtr) ToCapabilityPtrOutputWithContext(ctx context.Context) CapabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapabilityPtrOutput)
}

// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
type CatalogTier string

const (
	// The basic tier that utilizes shared resources across catalog instances
	CatalogTierBasic = CatalogTier("Basic")
)

func (CatalogTier) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTier)(nil)).Elem()
}

func (e CatalogTier) ToCatalogTierOutput() CatalogTierOutput {
	return pulumi.ToOutput(e).(CatalogTierOutput)
}

func (e CatalogTier) ToCatalogTierOutputWithContext(ctx context.Context) CatalogTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CatalogTierOutput)
}

func (e CatalogTier) ToCatalogTierPtrOutput() CatalogTierPtrOutput {
	return e.ToCatalogTierPtrOutputWithContext(context.Background())
}

func (e CatalogTier) ToCatalogTierPtrOutputWithContext(ctx context.Context) CatalogTierPtrOutput {
	return CatalogTier(e).ToCatalogTierOutputWithContext(ctx).ToCatalogTierPtrOutputWithContext(ctx)
}

func (e CatalogTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CatalogTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CatalogTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CatalogTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CatalogTierOutput struct{ *pulumi.OutputState }

func (CatalogTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTier)(nil)).Elem()
}

func (o CatalogTierOutput) ToCatalogTierOutput() CatalogTierOutput {
	return o
}

func (o CatalogTierOutput) ToCatalogTierOutputWithContext(ctx context.Context) CatalogTierOutput {
	return o
}

func (o CatalogTierOutput) ToCatalogTierPtrOutput() CatalogTierPtrOutput {
	return o.ToCatalogTierPtrOutputWithContext(context.Background())
}

func (o CatalogTierOutput) ToCatalogTierPtrOutputWithContext(ctx context.Context) CatalogTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CatalogTier) *CatalogTier {
		return &v
	}).(CatalogTierPtrOutput)
}

func (o CatalogTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CatalogTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CatalogTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CatalogTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CatalogTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CatalogTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CatalogTierPtrOutput struct{ *pulumi.OutputState }

func (CatalogTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTier)(nil)).Elem()
}

func (o CatalogTierPtrOutput) ToCatalogTierPtrOutput() CatalogTierPtrOutput {
	return o
}

func (o CatalogTierPtrOutput) ToCatalogTierPtrOutputWithContext(ctx context.Context) CatalogTierPtrOutput {
	return o
}

func (o CatalogTierPtrOutput) Elem() CatalogTierOutput {
	return o.ApplyT(func(v *CatalogTier) CatalogTier {
		if v != nil {
			return *v
		}
		var ret CatalogTier
		return ret
	}).(CatalogTierOutput)
}

func (o CatalogTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CatalogTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CatalogTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CatalogTierInput is an input type that accepts values of the CatalogTier enum
// A concrete instance of `CatalogTierInput` can be one of the following:
//
//	CatalogTierBasic
type CatalogTierInput interface {
	pulumi.Input

	ToCatalogTierOutput() CatalogTierOutput
	ToCatalogTierOutputWithContext(context.Context) CatalogTierOutput
}

var catalogTierPtrType = reflect.TypeOf((**CatalogTier)(nil)).Elem()

type CatalogTierPtrInput interface {
	pulumi.Input

	ToCatalogTierPtrOutput() CatalogTierPtrOutput
	ToCatalogTierPtrOutputWithContext(context.Context) CatalogTierPtrOutput
}

type catalogTierPtr string

func CatalogTierPtr(v string) CatalogTierPtrInput {
	return (*catalogTierPtr)(&v)
}

func (*catalogTierPtr) ElementType() reflect.Type {
	return catalogTierPtrType
}

func (in *catalogTierPtr) ToCatalogTierPtrOutput() CatalogTierPtrOutput {
	return pulumi.ToOutput(in).(CatalogTierPtrOutput)
}

func (in *catalogTierPtr) ToCatalogTierPtrOutputWithContext(ctx context.Context) CatalogTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CatalogTierPtrOutput)
}

// Direction (Uplink or Downlink).
type Direction string

const (
	DirectionUplink   = Direction("Uplink")
	DirectionDownlink = Direction("Downlink")
)

func (Direction) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (e Direction) ToDirectionOutput() DirectionOutput {
	return pulumi.ToOutput(e).(DirectionOutput)
}

func (e Direction) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DirectionOutput)
}

func (e Direction) ToDirectionPtrOutput() DirectionPtrOutput {
	return e.ToDirectionPtrOutputWithContext(context.Background())
}

func (e Direction) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return Direction(e).ToDirectionOutputWithContext(ctx).ToDirectionPtrOutputWithContext(ctx)
}

func (e Direction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Direction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DirectionOutput struct{ *pulumi.OutputState }

func (DirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (o DirectionOutput) ToDirectionOutput() DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o.ToDirectionPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Direction) *Direction {
		return &v
	}).(DirectionPtrOutput)
}

func (o DirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DirectionPtrOutput struct{ *pulumi.OutputState }

func (DirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Direction)(nil)).Elem()
}

func (o DirectionPtrOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) Elem() DirectionOutput {
	return o.ApplyT(func(v *Direction) Direction {
		if v != nil {
			return *v
		}
		var ret Direction
		return ret
	}).(DirectionOutput)
}

func (o DirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Direction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DirectionInput is an input type that accepts values of the Direction enum
// A concrete instance of `DirectionInput` can be one of the following:
//
//	DirectionUplink
//	DirectionDownlink
type DirectionInput interface {
	pulumi.Input

	ToDirectionOutput() DirectionOutput
	ToDirectionOutputWithContext(context.Context) DirectionOutput
}

var directionPtrType = reflect.TypeOf((**Direction)(nil)).Elem()

type DirectionPtrInput interface {
	pulumi.Input

	ToDirectionPtrOutput() DirectionPtrOutput
	ToDirectionPtrOutputWithContext(context.Context) DirectionPtrOutput
}

type directionPtr string

func DirectionPtr(v string) DirectionPtrInput {
	return (*directionPtr)(&v)
}

func (*directionPtr) ElementType() reflect.Type {
	return directionPtrType
}

func (in *directionPtr) ToDirectionPtrOutput() DirectionPtrOutput {
	return pulumi.ToOutput(in).(DirectionPtrOutput)
}

func (in *directionPtr) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DirectionPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Polarization. e.g. (RHCP, LHCP).
type Polarization string

const (
	PolarizationRHCP             = Polarization("RHCP")
	PolarizationLHCP             = Polarization("LHCP")
	PolarizationLinearVertical   = Polarization("linearVertical")
	PolarizationLinearHorizontal = Polarization("linearHorizontal")
)

func (Polarization) ElementType() reflect.Type {
	return reflect.TypeOf((*Polarization)(nil)).Elem()
}

func (e Polarization) ToPolarizationOutput() PolarizationOutput {
	return pulumi.ToOutput(e).(PolarizationOutput)
}

func (e Polarization) ToPolarizationOutputWithContext(ctx context.Context) PolarizationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PolarizationOutput)
}

func (e Polarization) ToPolarizationPtrOutput() PolarizationPtrOutput {
	return e.ToPolarizationPtrOutputWithContext(context.Background())
}

func (e Polarization) ToPolarizationPtrOutputWithContext(ctx context.Context) PolarizationPtrOutput {
	return Polarization(e).ToPolarizationOutputWithContext(ctx).ToPolarizationPtrOutputWithContext(ctx)
}

func (e Polarization) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Polarization) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Polarization) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Polarization) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PolarizationOutput struct{ *pulumi.OutputState }

func (PolarizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Polarization)(nil)).Elem()
}

func (o PolarizationOutput) ToPolarizationOutput() PolarizationOutput {
	return o
}

func (o PolarizationOutput) ToPolarizationOutputWithContext(ctx context.Context) PolarizationOutput {
	return o
}

func (o PolarizationOutput) ToPolarizationPtrOutput() PolarizationPtrOutput {
	return o.ToPolarizationPtrOutputWithContext(context.Background())
}

func (o PolarizationOutput) ToPolarizationPtrOutputWithContext(ctx context.Context) PolarizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Polarization) *Polarization {
		return &v
	}).(PolarizationPtrOutput)
}

func (o PolarizationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PolarizationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Polarization) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PolarizationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolarizationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Polarization) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PolarizationPtrOutput struct{ *pulumi.OutputState }

func (PolarizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Polarization)(nil)).Elem()
}

func (o PolarizationPtrOutput) ToPolarizationPtrOutput() PolarizationPtrOutput {
	return o
}

func (o PolarizationPtrOutput) ToPolarizationPtrOutputWithContext(ctx context.Context) PolarizationPtrOutput {
	return o
}

func (o PolarizationPtrOutput) Elem() PolarizationOutput {
	return o.ApplyT(func(v *Polarization) Polarization {
		if v != nil {
			return *v
		}
		var ret Polarization
		return ret
	}).(PolarizationOutput)
}

func (o PolarizationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolarizationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Polarization) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PolarizationInput is an input type that accepts values of the Polarization enum
// A concrete instance of `PolarizationInput` can be one of the following:
//
//	PolarizationRHCP
//	PolarizationLHCP
//	PolarizationLinearVertical
//	PolarizationLinearHorizontal
type PolarizationInput interface {
	pulumi.Input

	ToPolarizationOutput() PolarizationOutput
	ToPolarizationOutputWithContext(context.Context) PolarizationOutput
}

var polarizationPtrType = reflect.TypeOf((**Polarization)(nil)).Elem()

type PolarizationPtrInput interface {
	pulumi.Input

	ToPolarizationPtrOutput() PolarizationPtrOutput
	ToPolarizationPtrOutputWithContext(context.Context) PolarizationPtrOutput
}

type polarizationPtr string

func PolarizationPtr(v string) PolarizationPtrInput {
	return (*polarizationPtr)(&v)
}

func (*polarizationPtr) ElementType() reflect.Type {
	return polarizationPtrType
}

func (in *polarizationPtr) ToPolarizationPtrOutput() PolarizationPtrOutput {
	return pulumi.ToOutput(in).(PolarizationPtrOutput)
}

func (in *polarizationPtr) ToPolarizationPtrOutputWithContext(ctx context.Context) PolarizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PolarizationPtrOutput)
}

// Protocol either UDP or TCP.
type Protocol string

const (
	ProtocolTCP = Protocol("TCP")
	ProtocolUDP = Protocol("UDP")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts values of the Protocol enum
// A concrete instance of `ProtocolInput` can be one of the following:
//
//	ProtocolTCP
//	ProtocolUDP
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoGeneratedDomainNameLabelScopeOutput{})
	pulumi.RegisterOutputType(AutoGeneratedDomainNameLabelScopePtrOutput{})
	pulumi.RegisterOutputType(AutoTrackingConfigurationOutput{})
	pulumi.RegisterOutputType(AutoTrackingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityPtrOutput{})
	pulumi.RegisterOutputType(CatalogTierOutput{})
	pulumi.RegisterOutputType(CatalogTierPtrOutput{})
	pulumi.RegisterOutputType(DirectionOutput{})
	pulumi.RegisterOutputType(DirectionPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(PolarizationOutput{})
	pulumi.RegisterOutputType(PolarizationPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
}
