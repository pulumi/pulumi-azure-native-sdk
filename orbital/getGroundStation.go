// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package orbital

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified ground station in a specified resource group.
// Azure REST API version: 2024-03-01-preview.
//
// Other available API versions: 2024-03-01.
func LookupGroundStation(ctx *pulumi.Context, args *LookupGroundStationArgs, opts ...pulumi.InvokeOption) (*LookupGroundStationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupGroundStationResult
	err := ctx.Invoke("azure-native:orbital:getGroundStation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGroundStationArgs struct {
	// Ground Station name.
	GroundStationName string `pulumi:"groundStationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Ground Station contains one or more antennas.
type LookupGroundStationResult struct {
	// Altitude of the ground station.
	AltitudeMeters *float64 `pulumi:"altitudeMeters"`
	// Ground station capabilities.
	Capabilities []string `pulumi:"capabilities"`
	// City of ground station.
	City *string `pulumi:"city"`
	// A reference to global communications site.
	GlobalCommunicationsSite GroundStationsPropertiesResponseGlobalCommunicationsSite `pulumi:"globalCommunicationsSite"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Latitude of the ground station in decimal degrees.
	LatitudeDegrees *float64 `pulumi:"latitudeDegrees"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Longitude of the ground station in decimal degrees.
	LongitudeDegrees *float64 `pulumi:"longitudeDegrees"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Ground station provider name.
	ProviderName *string `pulumi:"providerName"`
	// Release Status of a ground station.
	ReleaseMode string `pulumi:"releaseMode"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupGroundStationOutput(ctx *pulumi.Context, args LookupGroundStationOutputArgs, opts ...pulumi.InvokeOption) LookupGroundStationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroundStationResult, error) {
			args := v.(LookupGroundStationArgs)
			r, err := LookupGroundStation(ctx, &args, opts...)
			var s LookupGroundStationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGroundStationResultOutput)
}

type LookupGroundStationOutputArgs struct {
	// Ground Station name.
	GroundStationName pulumi.StringInput `pulumi:"groundStationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupGroundStationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroundStationArgs)(nil)).Elem()
}

// Ground Station contains one or more antennas.
type LookupGroundStationResultOutput struct{ *pulumi.OutputState }

func (LookupGroundStationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroundStationResult)(nil)).Elem()
}

func (o LookupGroundStationResultOutput) ToLookupGroundStationResultOutput() LookupGroundStationResultOutput {
	return o
}

func (o LookupGroundStationResultOutput) ToLookupGroundStationResultOutputWithContext(ctx context.Context) LookupGroundStationResultOutput {
	return o
}

// Altitude of the ground station.
func (o LookupGroundStationResultOutput) AltitudeMeters() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupGroundStationResult) *float64 { return v.AltitudeMeters }).(pulumi.Float64PtrOutput)
}

// Ground station capabilities.
func (o LookupGroundStationResultOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroundStationResult) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// City of ground station.
func (o LookupGroundStationResultOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroundStationResult) *string { return v.City }).(pulumi.StringPtrOutput)
}

// A reference to global communications site.
func (o LookupGroundStationResultOutput) GlobalCommunicationsSite() GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput {
	return o.ApplyT(func(v LookupGroundStationResult) GroundStationsPropertiesResponseGlobalCommunicationsSite {
		return v.GlobalCommunicationsSite
	}).(GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupGroundStationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroundStationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Latitude of the ground station in decimal degrees.
func (o LookupGroundStationResultOutput) LatitudeDegrees() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupGroundStationResult) *float64 { return v.LatitudeDegrees }).(pulumi.Float64PtrOutput)
}

// The geo-location where the resource lives
func (o LookupGroundStationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroundStationResult) string { return v.Location }).(pulumi.StringOutput)
}

// Longitude of the ground station in decimal degrees.
func (o LookupGroundStationResultOutput) LongitudeDegrees() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupGroundStationResult) *float64 { return v.LongitudeDegrees }).(pulumi.Float64PtrOutput)
}

// The name of the resource
func (o LookupGroundStationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroundStationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Ground station provider name.
func (o LookupGroundStationResultOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroundStationResult) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

// Release Status of a ground station.
func (o LookupGroundStationResultOutput) ReleaseMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroundStationResult) string { return v.ReleaseMode }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupGroundStationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupGroundStationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupGroundStationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGroundStationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupGroundStationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroundStationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroundStationResultOutput{})
}
