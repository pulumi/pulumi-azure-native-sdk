// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package orbital

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Authorized groundstation.
type AuthorizedGroundstationResponse struct {
	// Date of authorization expiration.
	ExpirationDate string `pulumi:"expirationDate"`
	// Groundstation name.
	GroundStation string `pulumi:"groundStation"`
}

// Authorized groundstation.
type AuthorizedGroundstationResponseOutput struct{ *pulumi.OutputState }

func (AuthorizedGroundstationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizedGroundstationResponse)(nil)).Elem()
}

func (o AuthorizedGroundstationResponseOutput) ToAuthorizedGroundstationResponseOutput() AuthorizedGroundstationResponseOutput {
	return o
}

func (o AuthorizedGroundstationResponseOutput) ToAuthorizedGroundstationResponseOutputWithContext(ctx context.Context) AuthorizedGroundstationResponseOutput {
	return o
}

// Date of authorization expiration.
func (o AuthorizedGroundstationResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizedGroundstationResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Groundstation name.
func (o AuthorizedGroundstationResponseOutput) GroundStation() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizedGroundstationResponse) string { return v.GroundStation }).(pulumi.StringOutput)
}

type AuthorizedGroundstationResponseArrayOutput struct{ *pulumi.OutputState }

func (AuthorizedGroundstationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizedGroundstationResponse)(nil)).Elem()
}

func (o AuthorizedGroundstationResponseArrayOutput) ToAuthorizedGroundstationResponseArrayOutput() AuthorizedGroundstationResponseArrayOutput {
	return o
}

func (o AuthorizedGroundstationResponseArrayOutput) ToAuthorizedGroundstationResponseArrayOutputWithContext(ctx context.Context) AuthorizedGroundstationResponseArrayOutput {
	return o
}

func (o AuthorizedGroundstationResponseArrayOutput) Index(i pulumi.IntInput) AuthorizedGroundstationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizedGroundstationResponse {
		return vs[0].([]AuthorizedGroundstationResponse)[vs[1].(int)]
	}).(AuthorizedGroundstationResponseOutput)
}

// Customer retrieves list of Available Contacts for a spacecraft resource. Later, one of the available contact can be selected to create a contact.
type AvailableContactsResponse struct {
	// Azimuth of the antenna at the end of the contact in decimal degrees.
	EndAzimuthDegrees float64 `pulumi:"endAzimuthDegrees"`
	// Spacecraft elevation above the horizon at contact end.
	EndElevationDegrees float64 `pulumi:"endElevationDegrees"`
	// Name of Azure Ground Station.
	GroundStationName string `pulumi:"groundStationName"`
	// Maximum elevation of the antenna during the contact in decimal degrees.
	MaximumElevationDegrees float64 `pulumi:"maximumElevationDegrees"`
	// Time to lost receiving a signal (ISO 8601 UTC standard).
	RxEndTime string `pulumi:"rxEndTime"`
	// Earliest time to receive a signal (ISO 8601 UTC standard).
	RxStartTime string `pulumi:"rxStartTime"`
	// The reference to the spacecraft resource.
	Spacecraft *AvailableContactsResponseSpacecraft `pulumi:"spacecraft"`
	// Azimuth of the antenna at the start of the contact in decimal degrees.
	StartAzimuthDegrees float64 `pulumi:"startAzimuthDegrees"`
	// Spacecraft elevation above the horizon at contact start.
	StartElevationDegrees float64 `pulumi:"startElevationDegrees"`
	// Time at which antenna transmit will be disabled (ISO 8601 UTC standard).
	TxEndTime string `pulumi:"txEndTime"`
	// Time at which antenna transmit will be enabled (ISO 8601 UTC standard).
	TxStartTime string `pulumi:"txStartTime"`
}

// Customer retrieves list of Available Contacts for a spacecraft resource. Later, one of the available contact can be selected to create a contact.
type AvailableContactsResponseOutput struct{ *pulumi.OutputState }

func (AvailableContactsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableContactsResponse)(nil)).Elem()
}

func (o AvailableContactsResponseOutput) ToAvailableContactsResponseOutput() AvailableContactsResponseOutput {
	return o
}

func (o AvailableContactsResponseOutput) ToAvailableContactsResponseOutputWithContext(ctx context.Context) AvailableContactsResponseOutput {
	return o
}

// Azimuth of the antenna at the end of the contact in decimal degrees.
func (o AvailableContactsResponseOutput) EndAzimuthDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v AvailableContactsResponse) float64 { return v.EndAzimuthDegrees }).(pulumi.Float64Output)
}

// Spacecraft elevation above the horizon at contact end.
func (o AvailableContactsResponseOutput) EndElevationDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v AvailableContactsResponse) float64 { return v.EndElevationDegrees }).(pulumi.Float64Output)
}

// Name of Azure Ground Station.
func (o AvailableContactsResponseOutput) GroundStationName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableContactsResponse) string { return v.GroundStationName }).(pulumi.StringOutput)
}

// Maximum elevation of the antenna during the contact in decimal degrees.
func (o AvailableContactsResponseOutput) MaximumElevationDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v AvailableContactsResponse) float64 { return v.MaximumElevationDegrees }).(pulumi.Float64Output)
}

// Time to lost receiving a signal (ISO 8601 UTC standard).
func (o AvailableContactsResponseOutput) RxEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableContactsResponse) string { return v.RxEndTime }).(pulumi.StringOutput)
}

// Earliest time to receive a signal (ISO 8601 UTC standard).
func (o AvailableContactsResponseOutput) RxStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableContactsResponse) string { return v.RxStartTime }).(pulumi.StringOutput)
}

// The reference to the spacecraft resource.
func (o AvailableContactsResponseOutput) Spacecraft() AvailableContactsResponseSpacecraftPtrOutput {
	return o.ApplyT(func(v AvailableContactsResponse) *AvailableContactsResponseSpacecraft { return v.Spacecraft }).(AvailableContactsResponseSpacecraftPtrOutput)
}

// Azimuth of the antenna at the start of the contact in decimal degrees.
func (o AvailableContactsResponseOutput) StartAzimuthDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v AvailableContactsResponse) float64 { return v.StartAzimuthDegrees }).(pulumi.Float64Output)
}

// Spacecraft elevation above the horizon at contact start.
func (o AvailableContactsResponseOutput) StartElevationDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v AvailableContactsResponse) float64 { return v.StartElevationDegrees }).(pulumi.Float64Output)
}

// Time at which antenna transmit will be disabled (ISO 8601 UTC standard).
func (o AvailableContactsResponseOutput) TxEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableContactsResponse) string { return v.TxEndTime }).(pulumi.StringOutput)
}

// Time at which antenna transmit will be enabled (ISO 8601 UTC standard).
func (o AvailableContactsResponseOutput) TxStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableContactsResponse) string { return v.TxStartTime }).(pulumi.StringOutput)
}

type AvailableContactsResponseArrayOutput struct{ *pulumi.OutputState }

func (AvailableContactsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AvailableContactsResponse)(nil)).Elem()
}

func (o AvailableContactsResponseArrayOutput) ToAvailableContactsResponseArrayOutput() AvailableContactsResponseArrayOutput {
	return o
}

func (o AvailableContactsResponseArrayOutput) ToAvailableContactsResponseArrayOutputWithContext(ctx context.Context) AvailableContactsResponseArrayOutput {
	return o
}

func (o AvailableContactsResponseArrayOutput) Index(i pulumi.IntInput) AvailableContactsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AvailableContactsResponse {
		return vs[0].([]AvailableContactsResponse)[vs[1].(int)]
	}).(AvailableContactsResponseOutput)
}

// The reference to the spacecraft resource.
type AvailableContactsResponseSpacecraft struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// The reference to the spacecraft resource.
type AvailableContactsResponseSpacecraftOutput struct{ *pulumi.OutputState }

func (AvailableContactsResponseSpacecraftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableContactsResponseSpacecraft)(nil)).Elem()
}

func (o AvailableContactsResponseSpacecraftOutput) ToAvailableContactsResponseSpacecraftOutput() AvailableContactsResponseSpacecraftOutput {
	return o
}

func (o AvailableContactsResponseSpacecraftOutput) ToAvailableContactsResponseSpacecraftOutputWithContext(ctx context.Context) AvailableContactsResponseSpacecraftOutput {
	return o
}

// Resource ID.
func (o AvailableContactsResponseSpacecraftOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableContactsResponseSpacecraft) string { return v.Id }).(pulumi.StringOutput)
}

type AvailableContactsResponseSpacecraftPtrOutput struct{ *pulumi.OutputState }

func (AvailableContactsResponseSpacecraftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailableContactsResponseSpacecraft)(nil)).Elem()
}

func (o AvailableContactsResponseSpacecraftPtrOutput) ToAvailableContactsResponseSpacecraftPtrOutput() AvailableContactsResponseSpacecraftPtrOutput {
	return o
}

func (o AvailableContactsResponseSpacecraftPtrOutput) ToAvailableContactsResponseSpacecraftPtrOutputWithContext(ctx context.Context) AvailableContactsResponseSpacecraftPtrOutput {
	return o
}

func (o AvailableContactsResponseSpacecraftPtrOutput) Elem() AvailableContactsResponseSpacecraftOutput {
	return o.ApplyT(func(v *AvailableContactsResponseSpacecraft) AvailableContactsResponseSpacecraft {
		if v != nil {
			return *v
		}
		var ret AvailableContactsResponseSpacecraft
		return ret
	}).(AvailableContactsResponseSpacecraftOutput)
}

// Resource ID.
func (o AvailableContactsResponseSpacecraftPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AvailableContactsResponseSpacecraft) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to the contact profile resource.
type ContactParametersContactProfile struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// ContactParametersContactProfileInput is an input type that accepts ContactParametersContactProfileArgs and ContactParametersContactProfileOutput values.
// You can construct a concrete instance of `ContactParametersContactProfileInput` via:
//
//	ContactParametersContactProfileArgs{...}
type ContactParametersContactProfileInput interface {
	pulumi.Input

	ToContactParametersContactProfileOutput() ContactParametersContactProfileOutput
	ToContactParametersContactProfileOutputWithContext(context.Context) ContactParametersContactProfileOutput
}

// The reference to the contact profile resource.
type ContactParametersContactProfileArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ContactParametersContactProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactParametersContactProfile)(nil)).Elem()
}

func (i ContactParametersContactProfileArgs) ToContactParametersContactProfileOutput() ContactParametersContactProfileOutput {
	return i.ToContactParametersContactProfileOutputWithContext(context.Background())
}

func (i ContactParametersContactProfileArgs) ToContactParametersContactProfileOutputWithContext(ctx context.Context) ContactParametersContactProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactParametersContactProfileOutput)
}

// The reference to the contact profile resource.
type ContactParametersContactProfileOutput struct{ *pulumi.OutputState }

func (ContactParametersContactProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactParametersContactProfile)(nil)).Elem()
}

func (o ContactParametersContactProfileOutput) ToContactParametersContactProfileOutput() ContactParametersContactProfileOutput {
	return o
}

func (o ContactParametersContactProfileOutput) ToContactParametersContactProfileOutputWithContext(ctx context.Context) ContactParametersContactProfileOutput {
	return o
}

// Resource ID.
func (o ContactParametersContactProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ContactParametersContactProfile) string { return v.Id }).(pulumi.StringOutput)
}

// Contact Profile Link.
type ContactProfileLink struct {
	// Contact Profile Link Channel.
	Channels []ContactProfileLinkChannel `pulumi:"channels"`
	// Direction (Uplink or Downlink).
	Direction string `pulumi:"direction"`
	// Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet.
	EirpdBW *float64 `pulumi:"eirpdBW"`
	// Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet.
	GainOverTemperature *float64 `pulumi:"gainOverTemperature"`
	// Link name.
	Name string `pulumi:"name"`
	// Polarization. e.g. (RHCP, LHCP).
	Polarization string `pulumi:"polarization"`
}

// ContactProfileLinkInput is an input type that accepts ContactProfileLinkArgs and ContactProfileLinkOutput values.
// You can construct a concrete instance of `ContactProfileLinkInput` via:
//
//	ContactProfileLinkArgs{...}
type ContactProfileLinkInput interface {
	pulumi.Input

	ToContactProfileLinkOutput() ContactProfileLinkOutput
	ToContactProfileLinkOutputWithContext(context.Context) ContactProfileLinkOutput
}

// Contact Profile Link.
type ContactProfileLinkArgs struct {
	// Contact Profile Link Channel.
	Channels ContactProfileLinkChannelArrayInput `pulumi:"channels"`
	// Direction (Uplink or Downlink).
	Direction pulumi.StringInput `pulumi:"direction"`
	// Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet.
	EirpdBW pulumi.Float64PtrInput `pulumi:"eirpdBW"`
	// Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet.
	GainOverTemperature pulumi.Float64PtrInput `pulumi:"gainOverTemperature"`
	// Link name.
	Name pulumi.StringInput `pulumi:"name"`
	// Polarization. e.g. (RHCP, LHCP).
	Polarization pulumi.StringInput `pulumi:"polarization"`
}

func (ContactProfileLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileLink)(nil)).Elem()
}

func (i ContactProfileLinkArgs) ToContactProfileLinkOutput() ContactProfileLinkOutput {
	return i.ToContactProfileLinkOutputWithContext(context.Background())
}

func (i ContactProfileLinkArgs) ToContactProfileLinkOutputWithContext(ctx context.Context) ContactProfileLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileLinkOutput)
}

// ContactProfileLinkArrayInput is an input type that accepts ContactProfileLinkArray and ContactProfileLinkArrayOutput values.
// You can construct a concrete instance of `ContactProfileLinkArrayInput` via:
//
//	ContactProfileLinkArray{ ContactProfileLinkArgs{...} }
type ContactProfileLinkArrayInput interface {
	pulumi.Input

	ToContactProfileLinkArrayOutput() ContactProfileLinkArrayOutput
	ToContactProfileLinkArrayOutputWithContext(context.Context) ContactProfileLinkArrayOutput
}

type ContactProfileLinkArray []ContactProfileLinkInput

func (ContactProfileLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileLink)(nil)).Elem()
}

func (i ContactProfileLinkArray) ToContactProfileLinkArrayOutput() ContactProfileLinkArrayOutput {
	return i.ToContactProfileLinkArrayOutputWithContext(context.Background())
}

func (i ContactProfileLinkArray) ToContactProfileLinkArrayOutputWithContext(ctx context.Context) ContactProfileLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileLinkArrayOutput)
}

// Contact Profile Link.
type ContactProfileLinkOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileLink)(nil)).Elem()
}

func (o ContactProfileLinkOutput) ToContactProfileLinkOutput() ContactProfileLinkOutput {
	return o
}

func (o ContactProfileLinkOutput) ToContactProfileLinkOutputWithContext(ctx context.Context) ContactProfileLinkOutput {
	return o
}

// Contact Profile Link Channel.
func (o ContactProfileLinkOutput) Channels() ContactProfileLinkChannelArrayOutput {
	return o.ApplyT(func(v ContactProfileLink) []ContactProfileLinkChannel { return v.Channels }).(ContactProfileLinkChannelArrayOutput)
}

// Direction (Uplink or Downlink).
func (o ContactProfileLinkOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLink) string { return v.Direction }).(pulumi.StringOutput)
}

// Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet.
func (o ContactProfileLinkOutput) EirpdBW() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContactProfileLink) *float64 { return v.EirpdBW }).(pulumi.Float64PtrOutput)
}

// Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet.
func (o ContactProfileLinkOutput) GainOverTemperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContactProfileLink) *float64 { return v.GainOverTemperature }).(pulumi.Float64PtrOutput)
}

// Link name.
func (o ContactProfileLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLink) string { return v.Name }).(pulumi.StringOutput)
}

// Polarization. e.g. (RHCP, LHCP).
func (o ContactProfileLinkOutput) Polarization() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLink) string { return v.Polarization }).(pulumi.StringOutput)
}

type ContactProfileLinkArrayOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileLink)(nil)).Elem()
}

func (o ContactProfileLinkArrayOutput) ToContactProfileLinkArrayOutput() ContactProfileLinkArrayOutput {
	return o
}

func (o ContactProfileLinkArrayOutput) ToContactProfileLinkArrayOutputWithContext(ctx context.Context) ContactProfileLinkArrayOutput {
	return o
}

func (o ContactProfileLinkArrayOutput) Index(i pulumi.IntInput) ContactProfileLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactProfileLink {
		return vs[0].([]ContactProfileLink)[vs[1].(int)]
	}).(ContactProfileLinkOutput)
}

// Contact Profile Link Channel.
type ContactProfileLinkChannel struct {
	// Bandwidth in MHz.
	BandwidthMHz float64 `pulumi:"bandwidthMHz"`
	// Center Frequency in MHz.
	CenterFrequencyMHz float64 `pulumi:"centerFrequencyMHz"`
	// Currently unused.
	DecodingConfiguration *string `pulumi:"decodingConfiguration"`
	// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
	DemodulationConfiguration *string `pulumi:"demodulationConfiguration"`
	// Currently unused.
	EncodingConfiguration *string `pulumi:"encodingConfiguration"`
	// Customer end point to store and retrieve data during a contact with the spacecraft.
	EndPoint EndPoint `pulumi:"endPoint"`
	// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
	ModulationConfiguration *string `pulumi:"modulationConfiguration"`
	// Channel name.
	Name string `pulumi:"name"`
}

// ContactProfileLinkChannelInput is an input type that accepts ContactProfileLinkChannelArgs and ContactProfileLinkChannelOutput values.
// You can construct a concrete instance of `ContactProfileLinkChannelInput` via:
//
//	ContactProfileLinkChannelArgs{...}
type ContactProfileLinkChannelInput interface {
	pulumi.Input

	ToContactProfileLinkChannelOutput() ContactProfileLinkChannelOutput
	ToContactProfileLinkChannelOutputWithContext(context.Context) ContactProfileLinkChannelOutput
}

// Contact Profile Link Channel.
type ContactProfileLinkChannelArgs struct {
	// Bandwidth in MHz.
	BandwidthMHz pulumi.Float64Input `pulumi:"bandwidthMHz"`
	// Center Frequency in MHz.
	CenterFrequencyMHz pulumi.Float64Input `pulumi:"centerFrequencyMHz"`
	// Currently unused.
	DecodingConfiguration pulumi.StringPtrInput `pulumi:"decodingConfiguration"`
	// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
	DemodulationConfiguration pulumi.StringPtrInput `pulumi:"demodulationConfiguration"`
	// Currently unused.
	EncodingConfiguration pulumi.StringPtrInput `pulumi:"encodingConfiguration"`
	// Customer end point to store and retrieve data during a contact with the spacecraft.
	EndPoint EndPointInput `pulumi:"endPoint"`
	// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
	ModulationConfiguration pulumi.StringPtrInput `pulumi:"modulationConfiguration"`
	// Channel name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ContactProfileLinkChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileLinkChannel)(nil)).Elem()
}

func (i ContactProfileLinkChannelArgs) ToContactProfileLinkChannelOutput() ContactProfileLinkChannelOutput {
	return i.ToContactProfileLinkChannelOutputWithContext(context.Background())
}

func (i ContactProfileLinkChannelArgs) ToContactProfileLinkChannelOutputWithContext(ctx context.Context) ContactProfileLinkChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileLinkChannelOutput)
}

// ContactProfileLinkChannelArrayInput is an input type that accepts ContactProfileLinkChannelArray and ContactProfileLinkChannelArrayOutput values.
// You can construct a concrete instance of `ContactProfileLinkChannelArrayInput` via:
//
//	ContactProfileLinkChannelArray{ ContactProfileLinkChannelArgs{...} }
type ContactProfileLinkChannelArrayInput interface {
	pulumi.Input

	ToContactProfileLinkChannelArrayOutput() ContactProfileLinkChannelArrayOutput
	ToContactProfileLinkChannelArrayOutputWithContext(context.Context) ContactProfileLinkChannelArrayOutput
}

type ContactProfileLinkChannelArray []ContactProfileLinkChannelInput

func (ContactProfileLinkChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileLinkChannel)(nil)).Elem()
}

func (i ContactProfileLinkChannelArray) ToContactProfileLinkChannelArrayOutput() ContactProfileLinkChannelArrayOutput {
	return i.ToContactProfileLinkChannelArrayOutputWithContext(context.Background())
}

func (i ContactProfileLinkChannelArray) ToContactProfileLinkChannelArrayOutputWithContext(ctx context.Context) ContactProfileLinkChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileLinkChannelArrayOutput)
}

// Contact Profile Link Channel.
type ContactProfileLinkChannelOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileLinkChannel)(nil)).Elem()
}

func (o ContactProfileLinkChannelOutput) ToContactProfileLinkChannelOutput() ContactProfileLinkChannelOutput {
	return o
}

func (o ContactProfileLinkChannelOutput) ToContactProfileLinkChannelOutputWithContext(ctx context.Context) ContactProfileLinkChannelOutput {
	return o
}

// Bandwidth in MHz.
func (o ContactProfileLinkChannelOutput) BandwidthMHz() pulumi.Float64Output {
	return o.ApplyT(func(v ContactProfileLinkChannel) float64 { return v.BandwidthMHz }).(pulumi.Float64Output)
}

// Center Frequency in MHz.
func (o ContactProfileLinkChannelOutput) CenterFrequencyMHz() pulumi.Float64Output {
	return o.ApplyT(func(v ContactProfileLinkChannel) float64 { return v.CenterFrequencyMHz }).(pulumi.Float64Output)
}

// Currently unused.
func (o ContactProfileLinkChannelOutput) DecodingConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannel) *string { return v.DecodingConfiguration }).(pulumi.StringPtrOutput)
}

// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
func (o ContactProfileLinkChannelOutput) DemodulationConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannel) *string { return v.DemodulationConfiguration }).(pulumi.StringPtrOutput)
}

// Currently unused.
func (o ContactProfileLinkChannelOutput) EncodingConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannel) *string { return v.EncodingConfiguration }).(pulumi.StringPtrOutput)
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
func (o ContactProfileLinkChannelOutput) EndPoint() EndPointOutput {
	return o.ApplyT(func(v ContactProfileLinkChannel) EndPoint { return v.EndPoint }).(EndPointOutput)
}

// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
func (o ContactProfileLinkChannelOutput) ModulationConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannel) *string { return v.ModulationConfiguration }).(pulumi.StringPtrOutput)
}

// Channel name.
func (o ContactProfileLinkChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLinkChannel) string { return v.Name }).(pulumi.StringOutput)
}

type ContactProfileLinkChannelArrayOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileLinkChannel)(nil)).Elem()
}

func (o ContactProfileLinkChannelArrayOutput) ToContactProfileLinkChannelArrayOutput() ContactProfileLinkChannelArrayOutput {
	return o
}

func (o ContactProfileLinkChannelArrayOutput) ToContactProfileLinkChannelArrayOutputWithContext(ctx context.Context) ContactProfileLinkChannelArrayOutput {
	return o
}

func (o ContactProfileLinkChannelArrayOutput) Index(i pulumi.IntInput) ContactProfileLinkChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactProfileLinkChannel {
		return vs[0].([]ContactProfileLinkChannel)[vs[1].(int)]
	}).(ContactProfileLinkChannelOutput)
}

// Contact Profile Link Channel.
type ContactProfileLinkChannelResponse struct {
	// Bandwidth in MHz.
	BandwidthMHz float64 `pulumi:"bandwidthMHz"`
	// Center Frequency in MHz.
	CenterFrequencyMHz float64 `pulumi:"centerFrequencyMHz"`
	// Currently unused.
	DecodingConfiguration *string `pulumi:"decodingConfiguration"`
	// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
	DemodulationConfiguration *string `pulumi:"demodulationConfiguration"`
	// Currently unused.
	EncodingConfiguration *string `pulumi:"encodingConfiguration"`
	// Customer end point to store and retrieve data during a contact with the spacecraft.
	EndPoint EndPointResponse `pulumi:"endPoint"`
	// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
	ModulationConfiguration *string `pulumi:"modulationConfiguration"`
	// Channel name.
	Name string `pulumi:"name"`
}

// Contact Profile Link Channel.
type ContactProfileLinkChannelResponseOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkChannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileLinkChannelResponse)(nil)).Elem()
}

func (o ContactProfileLinkChannelResponseOutput) ToContactProfileLinkChannelResponseOutput() ContactProfileLinkChannelResponseOutput {
	return o
}

func (o ContactProfileLinkChannelResponseOutput) ToContactProfileLinkChannelResponseOutputWithContext(ctx context.Context) ContactProfileLinkChannelResponseOutput {
	return o
}

// Bandwidth in MHz.
func (o ContactProfileLinkChannelResponseOutput) BandwidthMHz() pulumi.Float64Output {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) float64 { return v.BandwidthMHz }).(pulumi.Float64Output)
}

// Center Frequency in MHz.
func (o ContactProfileLinkChannelResponseOutput) CenterFrequencyMHz() pulumi.Float64Output {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) float64 { return v.CenterFrequencyMHz }).(pulumi.Float64Output)
}

// Currently unused.
func (o ContactProfileLinkChannelResponseOutput) DecodingConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) *string { return v.DecodingConfiguration }).(pulumi.StringPtrOutput)
}

// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
func (o ContactProfileLinkChannelResponseOutput) DemodulationConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) *string { return v.DemodulationConfiguration }).(pulumi.StringPtrOutput)
}

// Currently unused.
func (o ContactProfileLinkChannelResponseOutput) EncodingConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) *string { return v.EncodingConfiguration }).(pulumi.StringPtrOutput)
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
func (o ContactProfileLinkChannelResponseOutput) EndPoint() EndPointResponseOutput {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) EndPointResponse { return v.EndPoint }).(EndPointResponseOutput)
}

// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
func (o ContactProfileLinkChannelResponseOutput) ModulationConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) *string { return v.ModulationConfiguration }).(pulumi.StringPtrOutput)
}

// Channel name.
func (o ContactProfileLinkChannelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLinkChannelResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ContactProfileLinkChannelResponseArrayOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkChannelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileLinkChannelResponse)(nil)).Elem()
}

func (o ContactProfileLinkChannelResponseArrayOutput) ToContactProfileLinkChannelResponseArrayOutput() ContactProfileLinkChannelResponseArrayOutput {
	return o
}

func (o ContactProfileLinkChannelResponseArrayOutput) ToContactProfileLinkChannelResponseArrayOutputWithContext(ctx context.Context) ContactProfileLinkChannelResponseArrayOutput {
	return o
}

func (o ContactProfileLinkChannelResponseArrayOutput) Index(i pulumi.IntInput) ContactProfileLinkChannelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactProfileLinkChannelResponse {
		return vs[0].([]ContactProfileLinkChannelResponse)[vs[1].(int)]
	}).(ContactProfileLinkChannelResponseOutput)
}

// Contact Profile Link.
type ContactProfileLinkResponse struct {
	// Contact Profile Link Channel.
	Channels []ContactProfileLinkChannelResponse `pulumi:"channels"`
	// Direction (Uplink or Downlink).
	Direction string `pulumi:"direction"`
	// Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet.
	EirpdBW *float64 `pulumi:"eirpdBW"`
	// Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet.
	GainOverTemperature *float64 `pulumi:"gainOverTemperature"`
	// Link name.
	Name string `pulumi:"name"`
	// Polarization. e.g. (RHCP, LHCP).
	Polarization string `pulumi:"polarization"`
}

// Contact Profile Link.
type ContactProfileLinkResponseOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileLinkResponse)(nil)).Elem()
}

func (o ContactProfileLinkResponseOutput) ToContactProfileLinkResponseOutput() ContactProfileLinkResponseOutput {
	return o
}

func (o ContactProfileLinkResponseOutput) ToContactProfileLinkResponseOutputWithContext(ctx context.Context) ContactProfileLinkResponseOutput {
	return o
}

// Contact Profile Link Channel.
func (o ContactProfileLinkResponseOutput) Channels() ContactProfileLinkChannelResponseArrayOutput {
	return o.ApplyT(func(v ContactProfileLinkResponse) []ContactProfileLinkChannelResponse { return v.Channels }).(ContactProfileLinkChannelResponseArrayOutput)
}

// Direction (Uplink or Downlink).
func (o ContactProfileLinkResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLinkResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet.
func (o ContactProfileLinkResponseOutput) EirpdBW() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContactProfileLinkResponse) *float64 { return v.EirpdBW }).(pulumi.Float64PtrOutput)
}

// Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet.
func (o ContactProfileLinkResponseOutput) GainOverTemperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContactProfileLinkResponse) *float64 { return v.GainOverTemperature }).(pulumi.Float64PtrOutput)
}

// Link name.
func (o ContactProfileLinkResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLinkResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Polarization. e.g. (RHCP, LHCP).
func (o ContactProfileLinkResponseOutput) Polarization() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileLinkResponse) string { return v.Polarization }).(pulumi.StringOutput)
}

type ContactProfileLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ContactProfileLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileLinkResponse)(nil)).Elem()
}

func (o ContactProfileLinkResponseArrayOutput) ToContactProfileLinkResponseArrayOutput() ContactProfileLinkResponseArrayOutput {
	return o
}

func (o ContactProfileLinkResponseArrayOutput) ToContactProfileLinkResponseArrayOutputWithContext(ctx context.Context) ContactProfileLinkResponseArrayOutput {
	return o
}

func (o ContactProfileLinkResponseArrayOutput) Index(i pulumi.IntInput) ContactProfileLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactProfileLinkResponse {
		return vs[0].([]ContactProfileLinkResponse)[vs[1].(int)]
	}).(ContactProfileLinkResponseOutput)
}

// Contact Profile third-party partner configuration.
type ContactProfileThirdPartyConfiguration struct {
	// Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network.
	MissionConfiguration string `pulumi:"missionConfiguration"`
	// Name of the third-party provider.
	ProviderName string `pulumi:"providerName"`
}

// ContactProfileThirdPartyConfigurationInput is an input type that accepts ContactProfileThirdPartyConfigurationArgs and ContactProfileThirdPartyConfigurationOutput values.
// You can construct a concrete instance of `ContactProfileThirdPartyConfigurationInput` via:
//
//	ContactProfileThirdPartyConfigurationArgs{...}
type ContactProfileThirdPartyConfigurationInput interface {
	pulumi.Input

	ToContactProfileThirdPartyConfigurationOutput() ContactProfileThirdPartyConfigurationOutput
	ToContactProfileThirdPartyConfigurationOutputWithContext(context.Context) ContactProfileThirdPartyConfigurationOutput
}

// Contact Profile third-party partner configuration.
type ContactProfileThirdPartyConfigurationArgs struct {
	// Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network.
	MissionConfiguration pulumi.StringInput `pulumi:"missionConfiguration"`
	// Name of the third-party provider.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
}

func (ContactProfileThirdPartyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileThirdPartyConfiguration)(nil)).Elem()
}

func (i ContactProfileThirdPartyConfigurationArgs) ToContactProfileThirdPartyConfigurationOutput() ContactProfileThirdPartyConfigurationOutput {
	return i.ToContactProfileThirdPartyConfigurationOutputWithContext(context.Background())
}

func (i ContactProfileThirdPartyConfigurationArgs) ToContactProfileThirdPartyConfigurationOutputWithContext(ctx context.Context) ContactProfileThirdPartyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileThirdPartyConfigurationOutput)
}

// ContactProfileThirdPartyConfigurationArrayInput is an input type that accepts ContactProfileThirdPartyConfigurationArray and ContactProfileThirdPartyConfigurationArrayOutput values.
// You can construct a concrete instance of `ContactProfileThirdPartyConfigurationArrayInput` via:
//
//	ContactProfileThirdPartyConfigurationArray{ ContactProfileThirdPartyConfigurationArgs{...} }
type ContactProfileThirdPartyConfigurationArrayInput interface {
	pulumi.Input

	ToContactProfileThirdPartyConfigurationArrayOutput() ContactProfileThirdPartyConfigurationArrayOutput
	ToContactProfileThirdPartyConfigurationArrayOutputWithContext(context.Context) ContactProfileThirdPartyConfigurationArrayOutput
}

type ContactProfileThirdPartyConfigurationArray []ContactProfileThirdPartyConfigurationInput

func (ContactProfileThirdPartyConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileThirdPartyConfiguration)(nil)).Elem()
}

func (i ContactProfileThirdPartyConfigurationArray) ToContactProfileThirdPartyConfigurationArrayOutput() ContactProfileThirdPartyConfigurationArrayOutput {
	return i.ToContactProfileThirdPartyConfigurationArrayOutputWithContext(context.Background())
}

func (i ContactProfileThirdPartyConfigurationArray) ToContactProfileThirdPartyConfigurationArrayOutputWithContext(ctx context.Context) ContactProfileThirdPartyConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileThirdPartyConfigurationArrayOutput)
}

// Contact Profile third-party partner configuration.
type ContactProfileThirdPartyConfigurationOutput struct{ *pulumi.OutputState }

func (ContactProfileThirdPartyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileThirdPartyConfiguration)(nil)).Elem()
}

func (o ContactProfileThirdPartyConfigurationOutput) ToContactProfileThirdPartyConfigurationOutput() ContactProfileThirdPartyConfigurationOutput {
	return o
}

func (o ContactProfileThirdPartyConfigurationOutput) ToContactProfileThirdPartyConfigurationOutputWithContext(ctx context.Context) ContactProfileThirdPartyConfigurationOutput {
	return o
}

// Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network.
func (o ContactProfileThirdPartyConfigurationOutput) MissionConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileThirdPartyConfiguration) string { return v.MissionConfiguration }).(pulumi.StringOutput)
}

// Name of the third-party provider.
func (o ContactProfileThirdPartyConfigurationOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileThirdPartyConfiguration) string { return v.ProviderName }).(pulumi.StringOutput)
}

type ContactProfileThirdPartyConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ContactProfileThirdPartyConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileThirdPartyConfiguration)(nil)).Elem()
}

func (o ContactProfileThirdPartyConfigurationArrayOutput) ToContactProfileThirdPartyConfigurationArrayOutput() ContactProfileThirdPartyConfigurationArrayOutput {
	return o
}

func (o ContactProfileThirdPartyConfigurationArrayOutput) ToContactProfileThirdPartyConfigurationArrayOutputWithContext(ctx context.Context) ContactProfileThirdPartyConfigurationArrayOutput {
	return o
}

func (o ContactProfileThirdPartyConfigurationArrayOutput) Index(i pulumi.IntInput) ContactProfileThirdPartyConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactProfileThirdPartyConfiguration {
		return vs[0].([]ContactProfileThirdPartyConfiguration)[vs[1].(int)]
	}).(ContactProfileThirdPartyConfigurationOutput)
}

// Contact Profile third-party partner configuration.
type ContactProfileThirdPartyConfigurationResponse struct {
	// Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network.
	MissionConfiguration string `pulumi:"missionConfiguration"`
	// Name of the third-party provider.
	ProviderName string `pulumi:"providerName"`
}

// Contact Profile third-party partner configuration.
type ContactProfileThirdPartyConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContactProfileThirdPartyConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfileThirdPartyConfigurationResponse)(nil)).Elem()
}

func (o ContactProfileThirdPartyConfigurationResponseOutput) ToContactProfileThirdPartyConfigurationResponseOutput() ContactProfileThirdPartyConfigurationResponseOutput {
	return o
}

func (o ContactProfileThirdPartyConfigurationResponseOutput) ToContactProfileThirdPartyConfigurationResponseOutputWithContext(ctx context.Context) ContactProfileThirdPartyConfigurationResponseOutput {
	return o
}

// Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network.
func (o ContactProfileThirdPartyConfigurationResponseOutput) MissionConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileThirdPartyConfigurationResponse) string { return v.MissionConfiguration }).(pulumi.StringOutput)
}

// Name of the third-party provider.
func (o ContactProfileThirdPartyConfigurationResponseOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfileThirdPartyConfigurationResponse) string { return v.ProviderName }).(pulumi.StringOutput)
}

type ContactProfileThirdPartyConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContactProfileThirdPartyConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactProfileThirdPartyConfigurationResponse)(nil)).Elem()
}

func (o ContactProfileThirdPartyConfigurationResponseArrayOutput) ToContactProfileThirdPartyConfigurationResponseArrayOutput() ContactProfileThirdPartyConfigurationResponseArrayOutput {
	return o
}

func (o ContactProfileThirdPartyConfigurationResponseArrayOutput) ToContactProfileThirdPartyConfigurationResponseArrayOutputWithContext(ctx context.Context) ContactProfileThirdPartyConfigurationResponseArrayOutput {
	return o
}

func (o ContactProfileThirdPartyConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContactProfileThirdPartyConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactProfileThirdPartyConfigurationResponse {
		return vs[0].([]ContactProfileThirdPartyConfigurationResponse)[vs[1].(int)]
	}).(ContactProfileThirdPartyConfigurationResponseOutput)
}

// Network configuration of customer virtual network.
type ContactProfilesPropertiesNetworkConfiguration struct {
	// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it.
	SubnetId string `pulumi:"subnetId"`
}

// ContactProfilesPropertiesNetworkConfigurationInput is an input type that accepts ContactProfilesPropertiesNetworkConfigurationArgs and ContactProfilesPropertiesNetworkConfigurationOutput values.
// You can construct a concrete instance of `ContactProfilesPropertiesNetworkConfigurationInput` via:
//
//	ContactProfilesPropertiesNetworkConfigurationArgs{...}
type ContactProfilesPropertiesNetworkConfigurationInput interface {
	pulumi.Input

	ToContactProfilesPropertiesNetworkConfigurationOutput() ContactProfilesPropertiesNetworkConfigurationOutput
	ToContactProfilesPropertiesNetworkConfigurationOutputWithContext(context.Context) ContactProfilesPropertiesNetworkConfigurationOutput
}

// Network configuration of customer virtual network.
type ContactProfilesPropertiesNetworkConfigurationArgs struct {
	// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ContactProfilesPropertiesNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfilesPropertiesNetworkConfiguration)(nil)).Elem()
}

func (i ContactProfilesPropertiesNetworkConfigurationArgs) ToContactProfilesPropertiesNetworkConfigurationOutput() ContactProfilesPropertiesNetworkConfigurationOutput {
	return i.ToContactProfilesPropertiesNetworkConfigurationOutputWithContext(context.Background())
}

func (i ContactProfilesPropertiesNetworkConfigurationArgs) ToContactProfilesPropertiesNetworkConfigurationOutputWithContext(ctx context.Context) ContactProfilesPropertiesNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfilesPropertiesNetworkConfigurationOutput)
}

// Network configuration of customer virtual network.
type ContactProfilesPropertiesNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ContactProfilesPropertiesNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfilesPropertiesNetworkConfiguration)(nil)).Elem()
}

func (o ContactProfilesPropertiesNetworkConfigurationOutput) ToContactProfilesPropertiesNetworkConfigurationOutput() ContactProfilesPropertiesNetworkConfigurationOutput {
	return o
}

func (o ContactProfilesPropertiesNetworkConfigurationOutput) ToContactProfilesPropertiesNetworkConfigurationOutputWithContext(ctx context.Context) ContactProfilesPropertiesNetworkConfigurationOutput {
	return o
}

// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it.
func (o ContactProfilesPropertiesNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfilesPropertiesNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Network configuration of customer virtual network.
type ContactProfilesPropertiesResponseNetworkConfiguration struct {
	// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it.
	SubnetId string `pulumi:"subnetId"`
}

// Network configuration of customer virtual network.
type ContactProfilesPropertiesResponseNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ContactProfilesPropertiesResponseNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactProfilesPropertiesResponseNetworkConfiguration)(nil)).Elem()
}

func (o ContactProfilesPropertiesResponseNetworkConfigurationOutput) ToContactProfilesPropertiesResponseNetworkConfigurationOutput() ContactProfilesPropertiesResponseNetworkConfigurationOutput {
	return o
}

func (o ContactProfilesPropertiesResponseNetworkConfigurationOutput) ToContactProfilesPropertiesResponseNetworkConfigurationOutputWithContext(ctx context.Context) ContactProfilesPropertiesResponseNetworkConfigurationOutput {
	return o
}

// ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it.
func (o ContactProfilesPropertiesResponseNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ContactProfilesPropertiesResponseNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The reference to the contact profile resource.
type ContactsPropertiesContactProfile struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// ContactsPropertiesContactProfileInput is an input type that accepts ContactsPropertiesContactProfileArgs and ContactsPropertiesContactProfileOutput values.
// You can construct a concrete instance of `ContactsPropertiesContactProfileInput` via:
//
//	ContactsPropertiesContactProfileArgs{...}
type ContactsPropertiesContactProfileInput interface {
	pulumi.Input

	ToContactsPropertiesContactProfileOutput() ContactsPropertiesContactProfileOutput
	ToContactsPropertiesContactProfileOutputWithContext(context.Context) ContactsPropertiesContactProfileOutput
}

// The reference to the contact profile resource.
type ContactsPropertiesContactProfileArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ContactsPropertiesContactProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsPropertiesContactProfile)(nil)).Elem()
}

func (i ContactsPropertiesContactProfileArgs) ToContactsPropertiesContactProfileOutput() ContactsPropertiesContactProfileOutput {
	return i.ToContactsPropertiesContactProfileOutputWithContext(context.Background())
}

func (i ContactsPropertiesContactProfileArgs) ToContactsPropertiesContactProfileOutputWithContext(ctx context.Context) ContactsPropertiesContactProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsPropertiesContactProfileOutput)
}

// The reference to the contact profile resource.
type ContactsPropertiesContactProfileOutput struct{ *pulumi.OutputState }

func (ContactsPropertiesContactProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsPropertiesContactProfile)(nil)).Elem()
}

func (o ContactsPropertiesContactProfileOutput) ToContactsPropertiesContactProfileOutput() ContactsPropertiesContactProfileOutput {
	return o
}

func (o ContactsPropertiesContactProfileOutput) ToContactsPropertiesContactProfileOutputWithContext(ctx context.Context) ContactsPropertiesContactProfileOutput {
	return o
}

// Resource ID.
func (o ContactsPropertiesContactProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsPropertiesContactProfile) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration associated with the allocated antenna.
type ContactsPropertiesResponseAntennaConfiguration struct {
	// The destination IP a packet can be sent to. This would for example be the TCP endpoint you would send data to.
	DestinationIp *string `pulumi:"destinationIp"`
	// List of Source IP
	SourceIps []string `pulumi:"sourceIps"`
}

// The configuration associated with the allocated antenna.
type ContactsPropertiesResponseAntennaConfigurationOutput struct{ *pulumi.OutputState }

func (ContactsPropertiesResponseAntennaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsPropertiesResponseAntennaConfiguration)(nil)).Elem()
}

func (o ContactsPropertiesResponseAntennaConfigurationOutput) ToContactsPropertiesResponseAntennaConfigurationOutput() ContactsPropertiesResponseAntennaConfigurationOutput {
	return o
}

func (o ContactsPropertiesResponseAntennaConfigurationOutput) ToContactsPropertiesResponseAntennaConfigurationOutputWithContext(ctx context.Context) ContactsPropertiesResponseAntennaConfigurationOutput {
	return o
}

// The destination IP a packet can be sent to. This would for example be the TCP endpoint you would send data to.
func (o ContactsPropertiesResponseAntennaConfigurationOutput) DestinationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactsPropertiesResponseAntennaConfiguration) *string { return v.DestinationIp }).(pulumi.StringPtrOutput)
}

// List of Source IP
func (o ContactsPropertiesResponseAntennaConfigurationOutput) SourceIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactsPropertiesResponseAntennaConfiguration) []string { return v.SourceIps }).(pulumi.StringArrayOutput)
}

// The reference to the contact profile resource.
type ContactsPropertiesResponseContactProfile struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// The reference to the contact profile resource.
type ContactsPropertiesResponseContactProfileOutput struct{ *pulumi.OutputState }

func (ContactsPropertiesResponseContactProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsPropertiesResponseContactProfile)(nil)).Elem()
}

func (o ContactsPropertiesResponseContactProfileOutput) ToContactsPropertiesResponseContactProfileOutput() ContactsPropertiesResponseContactProfileOutput {
	return o
}

func (o ContactsPropertiesResponseContactProfileOutput) ToContactsPropertiesResponseContactProfileOutputWithContext(ctx context.Context) ContactsPropertiesResponseContactProfileOutput {
	return o
}

// Resource ID.
func (o ContactsPropertiesResponseContactProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsPropertiesResponseContactProfile) string { return v.Id }).(pulumi.StringOutput)
}

// A reference to global communications site.
type EdgeSitesPropertiesGlobalCommunicationsSite struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// EdgeSitesPropertiesGlobalCommunicationsSiteInput is an input type that accepts EdgeSitesPropertiesGlobalCommunicationsSiteArgs and EdgeSitesPropertiesGlobalCommunicationsSiteOutput values.
// You can construct a concrete instance of `EdgeSitesPropertiesGlobalCommunicationsSiteInput` via:
//
//	EdgeSitesPropertiesGlobalCommunicationsSiteArgs{...}
type EdgeSitesPropertiesGlobalCommunicationsSiteInput interface {
	pulumi.Input

	ToEdgeSitesPropertiesGlobalCommunicationsSiteOutput() EdgeSitesPropertiesGlobalCommunicationsSiteOutput
	ToEdgeSitesPropertiesGlobalCommunicationsSiteOutputWithContext(context.Context) EdgeSitesPropertiesGlobalCommunicationsSiteOutput
}

// A reference to global communications site.
type EdgeSitesPropertiesGlobalCommunicationsSiteArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (EdgeSitesPropertiesGlobalCommunicationsSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeSitesPropertiesGlobalCommunicationsSite)(nil)).Elem()
}

func (i EdgeSitesPropertiesGlobalCommunicationsSiteArgs) ToEdgeSitesPropertiesGlobalCommunicationsSiteOutput() EdgeSitesPropertiesGlobalCommunicationsSiteOutput {
	return i.ToEdgeSitesPropertiesGlobalCommunicationsSiteOutputWithContext(context.Background())
}

func (i EdgeSitesPropertiesGlobalCommunicationsSiteArgs) ToEdgeSitesPropertiesGlobalCommunicationsSiteOutputWithContext(ctx context.Context) EdgeSitesPropertiesGlobalCommunicationsSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeSitesPropertiesGlobalCommunicationsSiteOutput)
}

// A reference to global communications site.
type EdgeSitesPropertiesGlobalCommunicationsSiteOutput struct{ *pulumi.OutputState }

func (EdgeSitesPropertiesGlobalCommunicationsSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeSitesPropertiesGlobalCommunicationsSite)(nil)).Elem()
}

func (o EdgeSitesPropertiesGlobalCommunicationsSiteOutput) ToEdgeSitesPropertiesGlobalCommunicationsSiteOutput() EdgeSitesPropertiesGlobalCommunicationsSiteOutput {
	return o
}

func (o EdgeSitesPropertiesGlobalCommunicationsSiteOutput) ToEdgeSitesPropertiesGlobalCommunicationsSiteOutputWithContext(ctx context.Context) EdgeSitesPropertiesGlobalCommunicationsSiteOutput {
	return o
}

// Resource ID.
func (o EdgeSitesPropertiesGlobalCommunicationsSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EdgeSitesPropertiesGlobalCommunicationsSite) string { return v.Id }).(pulumi.StringOutput)
}

// A reference to global communications site.
type EdgeSitesPropertiesResponseGlobalCommunicationsSite struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// A reference to global communications site.
type EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput struct{ *pulumi.OutputState }

func (EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeSitesPropertiesResponseGlobalCommunicationsSite)(nil)).Elem()
}

func (o EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput) ToEdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput() EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput {
	return o
}

func (o EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput) ToEdgeSitesPropertiesResponseGlobalCommunicationsSiteOutputWithContext(ctx context.Context) EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput {
	return o
}

// Resource ID.
func (o EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EdgeSitesPropertiesResponseGlobalCommunicationsSite) string { return v.Id }).(pulumi.StringOutput)
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
type EndPoint struct {
	// Name of an end point.
	EndPointName string `pulumi:"endPointName"`
	// IP Address (IPv4).
	IpAddress string `pulumi:"ipAddress"`
	// TCP port to listen on to receive data.
	Port string `pulumi:"port"`
	// Protocol either UDP or TCP.
	Protocol string `pulumi:"protocol"`
}

// EndPointInput is an input type that accepts EndPointArgs and EndPointOutput values.
// You can construct a concrete instance of `EndPointInput` via:
//
//	EndPointArgs{...}
type EndPointInput interface {
	pulumi.Input

	ToEndPointOutput() EndPointOutput
	ToEndPointOutputWithContext(context.Context) EndPointOutput
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
type EndPointArgs struct {
	// Name of an end point.
	EndPointName pulumi.StringInput `pulumi:"endPointName"`
	// IP Address (IPv4).
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// TCP port to listen on to receive data.
	Port pulumi.StringInput `pulumi:"port"`
	// Protocol either UDP or TCP.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (EndPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndPoint)(nil)).Elem()
}

func (i EndPointArgs) ToEndPointOutput() EndPointOutput {
	return i.ToEndPointOutputWithContext(context.Background())
}

func (i EndPointArgs) ToEndPointOutputWithContext(ctx context.Context) EndPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndPointOutput)
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
type EndPointOutput struct{ *pulumi.OutputState }

func (EndPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndPoint)(nil)).Elem()
}

func (o EndPointOutput) ToEndPointOutput() EndPointOutput {
	return o
}

func (o EndPointOutput) ToEndPointOutputWithContext(ctx context.Context) EndPointOutput {
	return o
}

// Name of an end point.
func (o EndPointOutput) EndPointName() pulumi.StringOutput {
	return o.ApplyT(func(v EndPoint) string { return v.EndPointName }).(pulumi.StringOutput)
}

// IP Address (IPv4).
func (o EndPointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EndPoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// TCP port to listen on to receive data.
func (o EndPointOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v EndPoint) string { return v.Port }).(pulumi.StringOutput)
}

// Protocol either UDP or TCP.
func (o EndPointOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EndPoint) string { return v.Protocol }).(pulumi.StringOutput)
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
type EndPointResponse struct {
	// Name of an end point.
	EndPointName string `pulumi:"endPointName"`
	// IP Address (IPv4).
	IpAddress string `pulumi:"ipAddress"`
	// TCP port to listen on to receive data.
	Port string `pulumi:"port"`
	// Protocol either UDP or TCP.
	Protocol string `pulumi:"protocol"`
}

// Customer end point to store and retrieve data during a contact with the spacecraft.
type EndPointResponseOutput struct{ *pulumi.OutputState }

func (EndPointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndPointResponse)(nil)).Elem()
}

func (o EndPointResponseOutput) ToEndPointResponseOutput() EndPointResponseOutput {
	return o
}

func (o EndPointResponseOutput) ToEndPointResponseOutputWithContext(ctx context.Context) EndPointResponseOutput {
	return o
}

// Name of an end point.
func (o EndPointResponseOutput) EndPointName() pulumi.StringOutput {
	return o.ApplyT(func(v EndPointResponse) string { return v.EndPointName }).(pulumi.StringOutput)
}

// IP Address (IPv4).
func (o EndPointResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EndPointResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// TCP port to listen on to receive data.
func (o EndPointResponseOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v EndPointResponse) string { return v.Port }).(pulumi.StringOutput)
}

// Protocol either UDP or TCP.
func (o EndPointResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EndPointResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The details of the Microsoft Planetary Computer Pro GeoCatalog.
type GeoCatalogProperties struct {
	// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
	AutoGeneratedDomainNameLabelScope *string `pulumi:"autoGeneratedDomainNameLabelScope"`
	// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
	Tier *string `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for GeoCatalogProperties
func (val *GeoCatalogProperties) Defaults() *GeoCatalogProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoGeneratedDomainNameLabelScope == nil {
		autoGeneratedDomainNameLabelScope_ := "TenantReuse"
		tmp.AutoGeneratedDomainNameLabelScope = &autoGeneratedDomainNameLabelScope_
	}
	if tmp.Tier == nil {
		tier_ := "Basic"
		tmp.Tier = &tier_
	}
	return &tmp
}

// GeoCatalogPropertiesInput is an input type that accepts GeoCatalogPropertiesArgs and GeoCatalogPropertiesOutput values.
// You can construct a concrete instance of `GeoCatalogPropertiesInput` via:
//
//	GeoCatalogPropertiesArgs{...}
type GeoCatalogPropertiesInput interface {
	pulumi.Input

	ToGeoCatalogPropertiesOutput() GeoCatalogPropertiesOutput
	ToGeoCatalogPropertiesOutputWithContext(context.Context) GeoCatalogPropertiesOutput
}

// The details of the Microsoft Planetary Computer Pro GeoCatalog.
type GeoCatalogPropertiesArgs struct {
	// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
	AutoGeneratedDomainNameLabelScope pulumi.StringPtrInput `pulumi:"autoGeneratedDomainNameLabelScope"`
	// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for GeoCatalogPropertiesArgs
func (val *GeoCatalogPropertiesArgs) Defaults() *GeoCatalogPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoGeneratedDomainNameLabelScope == nil {
		tmp.AutoGeneratedDomainNameLabelScope = pulumi.StringPtr("TenantReuse")
	}
	if tmp.Tier == nil {
		tmp.Tier = pulumi.StringPtr("Basic")
	}
	return &tmp
}
func (GeoCatalogPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoCatalogProperties)(nil)).Elem()
}

func (i GeoCatalogPropertiesArgs) ToGeoCatalogPropertiesOutput() GeoCatalogPropertiesOutput {
	return i.ToGeoCatalogPropertiesOutputWithContext(context.Background())
}

func (i GeoCatalogPropertiesArgs) ToGeoCatalogPropertiesOutputWithContext(ctx context.Context) GeoCatalogPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoCatalogPropertiesOutput)
}

func (i GeoCatalogPropertiesArgs) ToGeoCatalogPropertiesPtrOutput() GeoCatalogPropertiesPtrOutput {
	return i.ToGeoCatalogPropertiesPtrOutputWithContext(context.Background())
}

func (i GeoCatalogPropertiesArgs) ToGeoCatalogPropertiesPtrOutputWithContext(ctx context.Context) GeoCatalogPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoCatalogPropertiesOutput).ToGeoCatalogPropertiesPtrOutputWithContext(ctx)
}

// GeoCatalogPropertiesPtrInput is an input type that accepts GeoCatalogPropertiesArgs, GeoCatalogPropertiesPtr and GeoCatalogPropertiesPtrOutput values.
// You can construct a concrete instance of `GeoCatalogPropertiesPtrInput` via:
//
//	        GeoCatalogPropertiesArgs{...}
//
//	or:
//
//	        nil
type GeoCatalogPropertiesPtrInput interface {
	pulumi.Input

	ToGeoCatalogPropertiesPtrOutput() GeoCatalogPropertiesPtrOutput
	ToGeoCatalogPropertiesPtrOutputWithContext(context.Context) GeoCatalogPropertiesPtrOutput
}

type geoCatalogPropertiesPtrType GeoCatalogPropertiesArgs

func GeoCatalogPropertiesPtr(v *GeoCatalogPropertiesArgs) GeoCatalogPropertiesPtrInput {
	return (*geoCatalogPropertiesPtrType)(v)
}

func (*geoCatalogPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoCatalogProperties)(nil)).Elem()
}

func (i *geoCatalogPropertiesPtrType) ToGeoCatalogPropertiesPtrOutput() GeoCatalogPropertiesPtrOutput {
	return i.ToGeoCatalogPropertiesPtrOutputWithContext(context.Background())
}

func (i *geoCatalogPropertiesPtrType) ToGeoCatalogPropertiesPtrOutputWithContext(ctx context.Context) GeoCatalogPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoCatalogPropertiesPtrOutput)
}

// The details of the Microsoft Planetary Computer Pro GeoCatalog.
type GeoCatalogPropertiesOutput struct{ *pulumi.OutputState }

func (GeoCatalogPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoCatalogProperties)(nil)).Elem()
}

func (o GeoCatalogPropertiesOutput) ToGeoCatalogPropertiesOutput() GeoCatalogPropertiesOutput {
	return o
}

func (o GeoCatalogPropertiesOutput) ToGeoCatalogPropertiesOutputWithContext(ctx context.Context) GeoCatalogPropertiesOutput {
	return o
}

func (o GeoCatalogPropertiesOutput) ToGeoCatalogPropertiesPtrOutput() GeoCatalogPropertiesPtrOutput {
	return o.ToGeoCatalogPropertiesPtrOutputWithContext(context.Background())
}

func (o GeoCatalogPropertiesOutput) ToGeoCatalogPropertiesPtrOutputWithContext(ctx context.Context) GeoCatalogPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GeoCatalogProperties) *GeoCatalogProperties {
		return &v
	}).(GeoCatalogPropertiesPtrOutput)
}

// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
func (o GeoCatalogPropertiesOutput) AutoGeneratedDomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoCatalogProperties) *string { return v.AutoGeneratedDomainNameLabelScope }).(pulumi.StringPtrOutput)
}

// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
func (o GeoCatalogPropertiesOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoCatalogProperties) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type GeoCatalogPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GeoCatalogPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoCatalogProperties)(nil)).Elem()
}

func (o GeoCatalogPropertiesPtrOutput) ToGeoCatalogPropertiesPtrOutput() GeoCatalogPropertiesPtrOutput {
	return o
}

func (o GeoCatalogPropertiesPtrOutput) ToGeoCatalogPropertiesPtrOutputWithContext(ctx context.Context) GeoCatalogPropertiesPtrOutput {
	return o
}

func (o GeoCatalogPropertiesPtrOutput) Elem() GeoCatalogPropertiesOutput {
	return o.ApplyT(func(v *GeoCatalogProperties) GeoCatalogProperties {
		if v != nil {
			return *v
		}
		var ret GeoCatalogProperties
		return ret
	}).(GeoCatalogPropertiesOutput)
}

// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
func (o GeoCatalogPropertiesPtrOutput) AutoGeneratedDomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoCatalogProperties) *string {
		if v == nil {
			return nil
		}
		return v.AutoGeneratedDomainNameLabelScope
	}).(pulumi.StringPtrOutput)
}

// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
func (o GeoCatalogPropertiesPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoCatalogProperties) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The details of the Microsoft Planetary Computer Pro GeoCatalog.
type GeoCatalogPropertiesResponse struct {
	// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
	AutoGeneratedDomainNameLabelScope *string `pulumi:"autoGeneratedDomainNameLabelScope"`
	// The URI of the catalog management UI.
	CatalogUri string `pulumi:"catalogUri"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
	Tier *string `pulumi:"tier"`
}

// Defaults sets the appropriate defaults for GeoCatalogPropertiesResponse
func (val *GeoCatalogPropertiesResponse) Defaults() *GeoCatalogPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoGeneratedDomainNameLabelScope == nil {
		autoGeneratedDomainNameLabelScope_ := "TenantReuse"
		tmp.AutoGeneratedDomainNameLabelScope = &autoGeneratedDomainNameLabelScope_
	}
	if tmp.Tier == nil {
		tier_ := "Basic"
		tmp.Tier = &tier_
	}
	return &tmp
}

// The details of the Microsoft Planetary Computer Pro GeoCatalog.
type GeoCatalogPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GeoCatalogPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoCatalogPropertiesResponse)(nil)).Elem()
}

func (o GeoCatalogPropertiesResponseOutput) ToGeoCatalogPropertiesResponseOutput() GeoCatalogPropertiesResponseOutput {
	return o
}

func (o GeoCatalogPropertiesResponseOutput) ToGeoCatalogPropertiesResponseOutputWithContext(ctx context.Context) GeoCatalogPropertiesResponseOutput {
	return o
}

// The scope of the auto-generated domain name label. If not provided, defaults to TenantReuse.
func (o GeoCatalogPropertiesResponseOutput) AutoGeneratedDomainNameLabelScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoCatalogPropertiesResponse) *string { return v.AutoGeneratedDomainNameLabelScope }).(pulumi.StringPtrOutput)
}

// The URI of the catalog management UI.
func (o GeoCatalogPropertiesResponseOutput) CatalogUri() pulumi.StringOutput {
	return o.ApplyT(func(v GeoCatalogPropertiesResponse) string { return v.CatalogUri }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o GeoCatalogPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GeoCatalogPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic.
func (o GeoCatalogPropertiesResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GeoCatalogPropertiesResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// A reference to global communications site.
type GroundStationsPropertiesGlobalCommunicationsSite struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// GroundStationsPropertiesGlobalCommunicationsSiteInput is an input type that accepts GroundStationsPropertiesGlobalCommunicationsSiteArgs and GroundStationsPropertiesGlobalCommunicationsSiteOutput values.
// You can construct a concrete instance of `GroundStationsPropertiesGlobalCommunicationsSiteInput` via:
//
//	GroundStationsPropertiesGlobalCommunicationsSiteArgs{...}
type GroundStationsPropertiesGlobalCommunicationsSiteInput interface {
	pulumi.Input

	ToGroundStationsPropertiesGlobalCommunicationsSiteOutput() GroundStationsPropertiesGlobalCommunicationsSiteOutput
	ToGroundStationsPropertiesGlobalCommunicationsSiteOutputWithContext(context.Context) GroundStationsPropertiesGlobalCommunicationsSiteOutput
}

// A reference to global communications site.
type GroundStationsPropertiesGlobalCommunicationsSiteArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GroundStationsPropertiesGlobalCommunicationsSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroundStationsPropertiesGlobalCommunicationsSite)(nil)).Elem()
}

func (i GroundStationsPropertiesGlobalCommunicationsSiteArgs) ToGroundStationsPropertiesGlobalCommunicationsSiteOutput() GroundStationsPropertiesGlobalCommunicationsSiteOutput {
	return i.ToGroundStationsPropertiesGlobalCommunicationsSiteOutputWithContext(context.Background())
}

func (i GroundStationsPropertiesGlobalCommunicationsSiteArgs) ToGroundStationsPropertiesGlobalCommunicationsSiteOutputWithContext(ctx context.Context) GroundStationsPropertiesGlobalCommunicationsSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroundStationsPropertiesGlobalCommunicationsSiteOutput)
}

// A reference to global communications site.
type GroundStationsPropertiesGlobalCommunicationsSiteOutput struct{ *pulumi.OutputState }

func (GroundStationsPropertiesGlobalCommunicationsSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroundStationsPropertiesGlobalCommunicationsSite)(nil)).Elem()
}

func (o GroundStationsPropertiesGlobalCommunicationsSiteOutput) ToGroundStationsPropertiesGlobalCommunicationsSiteOutput() GroundStationsPropertiesGlobalCommunicationsSiteOutput {
	return o
}

func (o GroundStationsPropertiesGlobalCommunicationsSiteOutput) ToGroundStationsPropertiesGlobalCommunicationsSiteOutputWithContext(ctx context.Context) GroundStationsPropertiesGlobalCommunicationsSiteOutput {
	return o
}

// Resource ID.
func (o GroundStationsPropertiesGlobalCommunicationsSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GroundStationsPropertiesGlobalCommunicationsSite) string { return v.Id }).(pulumi.StringOutput)
}

// A reference to global communications site.
type GroundStationsPropertiesResponseGlobalCommunicationsSite struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// A reference to global communications site.
type GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput struct{ *pulumi.OutputState }

func (GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroundStationsPropertiesResponseGlobalCommunicationsSite)(nil)).Elem()
}

func (o GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput) ToGroundStationsPropertiesResponseGlobalCommunicationsSiteOutput() GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput {
	return o
}

func (o GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput) ToGroundStationsPropertiesResponseGlobalCommunicationsSiteOutputWithContext(ctx context.Context) GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput {
	return o
}

// Resource ID.
func (o GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GroundStationsPropertiesResponseGlobalCommunicationsSite) string { return v.Id }).(pulumi.StringOutput)
}

// A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
type L2ConnectionsPropertiesEdgeSite struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// L2ConnectionsPropertiesEdgeSiteInput is an input type that accepts L2ConnectionsPropertiesEdgeSiteArgs and L2ConnectionsPropertiesEdgeSiteOutput values.
// You can construct a concrete instance of `L2ConnectionsPropertiesEdgeSiteInput` via:
//
//	L2ConnectionsPropertiesEdgeSiteArgs{...}
type L2ConnectionsPropertiesEdgeSiteInput interface {
	pulumi.Input

	ToL2ConnectionsPropertiesEdgeSiteOutput() L2ConnectionsPropertiesEdgeSiteOutput
	ToL2ConnectionsPropertiesEdgeSiteOutputWithContext(context.Context) L2ConnectionsPropertiesEdgeSiteOutput
}

// A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
type L2ConnectionsPropertiesEdgeSiteArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (L2ConnectionsPropertiesEdgeSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesEdgeSite)(nil)).Elem()
}

func (i L2ConnectionsPropertiesEdgeSiteArgs) ToL2ConnectionsPropertiesEdgeSiteOutput() L2ConnectionsPropertiesEdgeSiteOutput {
	return i.ToL2ConnectionsPropertiesEdgeSiteOutputWithContext(context.Background())
}

func (i L2ConnectionsPropertiesEdgeSiteArgs) ToL2ConnectionsPropertiesEdgeSiteOutputWithContext(ctx context.Context) L2ConnectionsPropertiesEdgeSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L2ConnectionsPropertiesEdgeSiteOutput)
}

// A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
type L2ConnectionsPropertiesEdgeSiteOutput struct{ *pulumi.OutputState }

func (L2ConnectionsPropertiesEdgeSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesEdgeSite)(nil)).Elem()
}

func (o L2ConnectionsPropertiesEdgeSiteOutput) ToL2ConnectionsPropertiesEdgeSiteOutput() L2ConnectionsPropertiesEdgeSiteOutput {
	return o
}

func (o L2ConnectionsPropertiesEdgeSiteOutput) ToL2ConnectionsPropertiesEdgeSiteOutputWithContext(ctx context.Context) L2ConnectionsPropertiesEdgeSiteOutput {
	return o
}

// Resource ID.
func (o L2ConnectionsPropertiesEdgeSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L2ConnectionsPropertiesEdgeSite) string { return v.Id }).(pulumi.StringOutput)
}

// A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
type L2ConnectionsPropertiesGroundStation struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// L2ConnectionsPropertiesGroundStationInput is an input type that accepts L2ConnectionsPropertiesGroundStationArgs and L2ConnectionsPropertiesGroundStationOutput values.
// You can construct a concrete instance of `L2ConnectionsPropertiesGroundStationInput` via:
//
//	L2ConnectionsPropertiesGroundStationArgs{...}
type L2ConnectionsPropertiesGroundStationInput interface {
	pulumi.Input

	ToL2ConnectionsPropertiesGroundStationOutput() L2ConnectionsPropertiesGroundStationOutput
	ToL2ConnectionsPropertiesGroundStationOutputWithContext(context.Context) L2ConnectionsPropertiesGroundStationOutput
}

// A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
type L2ConnectionsPropertiesGroundStationArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (L2ConnectionsPropertiesGroundStationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesGroundStation)(nil)).Elem()
}

func (i L2ConnectionsPropertiesGroundStationArgs) ToL2ConnectionsPropertiesGroundStationOutput() L2ConnectionsPropertiesGroundStationOutput {
	return i.ToL2ConnectionsPropertiesGroundStationOutputWithContext(context.Background())
}

func (i L2ConnectionsPropertiesGroundStationArgs) ToL2ConnectionsPropertiesGroundStationOutputWithContext(ctx context.Context) L2ConnectionsPropertiesGroundStationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L2ConnectionsPropertiesGroundStationOutput)
}

// A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
type L2ConnectionsPropertiesGroundStationOutput struct{ *pulumi.OutputState }

func (L2ConnectionsPropertiesGroundStationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesGroundStation)(nil)).Elem()
}

func (o L2ConnectionsPropertiesGroundStationOutput) ToL2ConnectionsPropertiesGroundStationOutput() L2ConnectionsPropertiesGroundStationOutput {
	return o
}

func (o L2ConnectionsPropertiesGroundStationOutput) ToL2ConnectionsPropertiesGroundStationOutputWithContext(ctx context.Context) L2ConnectionsPropertiesGroundStationOutput {
	return o
}

// Resource ID.
func (o L2ConnectionsPropertiesGroundStationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L2ConnectionsPropertiesGroundStation) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the partner router to establish a connection to within the ground station.
type L2ConnectionsPropertiesGroundStationPartnerRouter struct {
	// The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site.
	Name string `pulumi:"name"`
}

// L2ConnectionsPropertiesGroundStationPartnerRouterInput is an input type that accepts L2ConnectionsPropertiesGroundStationPartnerRouterArgs and L2ConnectionsPropertiesGroundStationPartnerRouterOutput values.
// You can construct a concrete instance of `L2ConnectionsPropertiesGroundStationPartnerRouterInput` via:
//
//	L2ConnectionsPropertiesGroundStationPartnerRouterArgs{...}
type L2ConnectionsPropertiesGroundStationPartnerRouterInput interface {
	pulumi.Input

	ToL2ConnectionsPropertiesGroundStationPartnerRouterOutput() L2ConnectionsPropertiesGroundStationPartnerRouterOutput
	ToL2ConnectionsPropertiesGroundStationPartnerRouterOutputWithContext(context.Context) L2ConnectionsPropertiesGroundStationPartnerRouterOutput
}

// The name of the partner router to establish a connection to within the ground station.
type L2ConnectionsPropertiesGroundStationPartnerRouterArgs struct {
	// The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site.
	Name pulumi.StringInput `pulumi:"name"`
}

func (L2ConnectionsPropertiesGroundStationPartnerRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesGroundStationPartnerRouter)(nil)).Elem()
}

func (i L2ConnectionsPropertiesGroundStationPartnerRouterArgs) ToL2ConnectionsPropertiesGroundStationPartnerRouterOutput() L2ConnectionsPropertiesGroundStationPartnerRouterOutput {
	return i.ToL2ConnectionsPropertiesGroundStationPartnerRouterOutputWithContext(context.Background())
}

func (i L2ConnectionsPropertiesGroundStationPartnerRouterArgs) ToL2ConnectionsPropertiesGroundStationPartnerRouterOutputWithContext(ctx context.Context) L2ConnectionsPropertiesGroundStationPartnerRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L2ConnectionsPropertiesGroundStationPartnerRouterOutput)
}

// The name of the partner router to establish a connection to within the ground station.
type L2ConnectionsPropertiesGroundStationPartnerRouterOutput struct{ *pulumi.OutputState }

func (L2ConnectionsPropertiesGroundStationPartnerRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesGroundStationPartnerRouter)(nil)).Elem()
}

func (o L2ConnectionsPropertiesGroundStationPartnerRouterOutput) ToL2ConnectionsPropertiesGroundStationPartnerRouterOutput() L2ConnectionsPropertiesGroundStationPartnerRouterOutput {
	return o
}

func (o L2ConnectionsPropertiesGroundStationPartnerRouterOutput) ToL2ConnectionsPropertiesGroundStationPartnerRouterOutputWithContext(ctx context.Context) L2ConnectionsPropertiesGroundStationPartnerRouterOutput {
	return o
}

// The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site.
func (o L2ConnectionsPropertiesGroundStationPartnerRouterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v L2ConnectionsPropertiesGroundStationPartnerRouter) string { return v.Name }).(pulumi.StringOutput)
}

// A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
type L2ConnectionsPropertiesResponseEdgeSite struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// A reference to an Microsoft.Orbital/edgeSites resource to route traffic for.
type L2ConnectionsPropertiesResponseEdgeSiteOutput struct{ *pulumi.OutputState }

func (L2ConnectionsPropertiesResponseEdgeSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesResponseEdgeSite)(nil)).Elem()
}

func (o L2ConnectionsPropertiesResponseEdgeSiteOutput) ToL2ConnectionsPropertiesResponseEdgeSiteOutput() L2ConnectionsPropertiesResponseEdgeSiteOutput {
	return o
}

func (o L2ConnectionsPropertiesResponseEdgeSiteOutput) ToL2ConnectionsPropertiesResponseEdgeSiteOutputWithContext(ctx context.Context) L2ConnectionsPropertiesResponseEdgeSiteOutput {
	return o
}

// Resource ID.
func (o L2ConnectionsPropertiesResponseEdgeSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L2ConnectionsPropertiesResponseEdgeSite) string { return v.Id }).(pulumi.StringOutput)
}

// A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
type L2ConnectionsPropertiesResponseGroundStation struct {
	// Resource ID.
	Id string `pulumi:"id"`
}

// A reference to an Microsoft.Orbital/groundStations resource to route traffic for.
type L2ConnectionsPropertiesResponseGroundStationOutput struct{ *pulumi.OutputState }

func (L2ConnectionsPropertiesResponseGroundStationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesResponseGroundStation)(nil)).Elem()
}

func (o L2ConnectionsPropertiesResponseGroundStationOutput) ToL2ConnectionsPropertiesResponseGroundStationOutput() L2ConnectionsPropertiesResponseGroundStationOutput {
	return o
}

func (o L2ConnectionsPropertiesResponseGroundStationOutput) ToL2ConnectionsPropertiesResponseGroundStationOutputWithContext(ctx context.Context) L2ConnectionsPropertiesResponseGroundStationOutput {
	return o
}

// Resource ID.
func (o L2ConnectionsPropertiesResponseGroundStationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v L2ConnectionsPropertiesResponseGroundStation) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the partner router to establish a connection to within the ground station.
type L2ConnectionsPropertiesResponseGroundStationPartnerRouter struct {
	// The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site.
	Name string `pulumi:"name"`
}

// The name of the partner router to establish a connection to within the ground station.
type L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput struct{ *pulumi.OutputState }

func (L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L2ConnectionsPropertiesResponseGroundStationPartnerRouter)(nil)).Elem()
}

func (o L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput) ToL2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput() L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput {
	return o
}

func (o L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput) ToL2ConnectionsPropertiesResponseGroundStationPartnerRouterOutputWithContext(ctx context.Context) L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput {
	return o
}

// The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site.
func (o L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v L2ConnectionsPropertiesResponseGroundStationPartnerRouter) string { return v.Name }).(pulumi.StringOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ResourceIdListResultResponseValue struct {
	// The Azure Resource ID.
	Id *string `pulumi:"id"`
}

type ResourceIdListResultResponseValueOutput struct{ *pulumi.OutputState }

func (ResourceIdListResultResponseValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdListResultResponseValue)(nil)).Elem()
}

func (o ResourceIdListResultResponseValueOutput) ToResourceIdListResultResponseValueOutput() ResourceIdListResultResponseValueOutput {
	return o
}

func (o ResourceIdListResultResponseValueOutput) ToResourceIdListResultResponseValueOutputWithContext(ctx context.Context) ResourceIdListResultResponseValueOutput {
	return o
}

// The Azure Resource ID.
func (o ResourceIdListResultResponseValueOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdListResultResponseValue) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceIdListResultResponseValueArrayOutput struct{ *pulumi.OutputState }

func (ResourceIdListResultResponseValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceIdListResultResponseValue)(nil)).Elem()
}

func (o ResourceIdListResultResponseValueArrayOutput) ToResourceIdListResultResponseValueArrayOutput() ResourceIdListResultResponseValueArrayOutput {
	return o
}

func (o ResourceIdListResultResponseValueArrayOutput) ToResourceIdListResultResponseValueArrayOutputWithContext(ctx context.Context) ResourceIdListResultResponseValueArrayOutput {
	return o
}

func (o ResourceIdListResultResponseValueArrayOutput) Index(i pulumi.IntInput) ResourceIdListResultResponseValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceIdListResultResponseValue {
		return vs[0].([]ResourceIdListResultResponseValue)[vs[1].(int)]
	}).(ResourceIdListResultResponseValueOutput)
}

// List of authorized spacecraft links per ground station and the expiration date of the authorization.
type SpacecraftLink struct {
	// Bandwidth in MHz.
	BandwidthMHz float64 `pulumi:"bandwidthMHz"`
	// Center Frequency in MHz.
	CenterFrequencyMHz float64 `pulumi:"centerFrequencyMHz"`
	// Direction (Uplink or Downlink).
	Direction string `pulumi:"direction"`
	// Link name.
	Name string `pulumi:"name"`
	// Polarization. e.g. (RHCP, LHCP).
	Polarization string `pulumi:"polarization"`
}

// SpacecraftLinkInput is an input type that accepts SpacecraftLinkArgs and SpacecraftLinkOutput values.
// You can construct a concrete instance of `SpacecraftLinkInput` via:
//
//	SpacecraftLinkArgs{...}
type SpacecraftLinkInput interface {
	pulumi.Input

	ToSpacecraftLinkOutput() SpacecraftLinkOutput
	ToSpacecraftLinkOutputWithContext(context.Context) SpacecraftLinkOutput
}

// List of authorized spacecraft links per ground station and the expiration date of the authorization.
type SpacecraftLinkArgs struct {
	// Bandwidth in MHz.
	BandwidthMHz pulumi.Float64Input `pulumi:"bandwidthMHz"`
	// Center Frequency in MHz.
	CenterFrequencyMHz pulumi.Float64Input `pulumi:"centerFrequencyMHz"`
	// Direction (Uplink or Downlink).
	Direction pulumi.StringInput `pulumi:"direction"`
	// Link name.
	Name pulumi.StringInput `pulumi:"name"`
	// Polarization. e.g. (RHCP, LHCP).
	Polarization pulumi.StringInput `pulumi:"polarization"`
}

func (SpacecraftLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacecraftLink)(nil)).Elem()
}

func (i SpacecraftLinkArgs) ToSpacecraftLinkOutput() SpacecraftLinkOutput {
	return i.ToSpacecraftLinkOutputWithContext(context.Background())
}

func (i SpacecraftLinkArgs) ToSpacecraftLinkOutputWithContext(ctx context.Context) SpacecraftLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacecraftLinkOutput)
}

// SpacecraftLinkArrayInput is an input type that accepts SpacecraftLinkArray and SpacecraftLinkArrayOutput values.
// You can construct a concrete instance of `SpacecraftLinkArrayInput` via:
//
//	SpacecraftLinkArray{ SpacecraftLinkArgs{...} }
type SpacecraftLinkArrayInput interface {
	pulumi.Input

	ToSpacecraftLinkArrayOutput() SpacecraftLinkArrayOutput
	ToSpacecraftLinkArrayOutputWithContext(context.Context) SpacecraftLinkArrayOutput
}

type SpacecraftLinkArray []SpacecraftLinkInput

func (SpacecraftLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacecraftLink)(nil)).Elem()
}

func (i SpacecraftLinkArray) ToSpacecraftLinkArrayOutput() SpacecraftLinkArrayOutput {
	return i.ToSpacecraftLinkArrayOutputWithContext(context.Background())
}

func (i SpacecraftLinkArray) ToSpacecraftLinkArrayOutputWithContext(ctx context.Context) SpacecraftLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacecraftLinkArrayOutput)
}

// List of authorized spacecraft links per ground station and the expiration date of the authorization.
type SpacecraftLinkOutput struct{ *pulumi.OutputState }

func (SpacecraftLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacecraftLink)(nil)).Elem()
}

func (o SpacecraftLinkOutput) ToSpacecraftLinkOutput() SpacecraftLinkOutput {
	return o
}

func (o SpacecraftLinkOutput) ToSpacecraftLinkOutputWithContext(ctx context.Context) SpacecraftLinkOutput {
	return o
}

// Bandwidth in MHz.
func (o SpacecraftLinkOutput) BandwidthMHz() pulumi.Float64Output {
	return o.ApplyT(func(v SpacecraftLink) float64 { return v.BandwidthMHz }).(pulumi.Float64Output)
}

// Center Frequency in MHz.
func (o SpacecraftLinkOutput) CenterFrequencyMHz() pulumi.Float64Output {
	return o.ApplyT(func(v SpacecraftLink) float64 { return v.CenterFrequencyMHz }).(pulumi.Float64Output)
}

// Direction (Uplink or Downlink).
func (o SpacecraftLinkOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SpacecraftLink) string { return v.Direction }).(pulumi.StringOutput)
}

// Link name.
func (o SpacecraftLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SpacecraftLink) string { return v.Name }).(pulumi.StringOutput)
}

// Polarization. e.g. (RHCP, LHCP).
func (o SpacecraftLinkOutput) Polarization() pulumi.StringOutput {
	return o.ApplyT(func(v SpacecraftLink) string { return v.Polarization }).(pulumi.StringOutput)
}

type SpacecraftLinkArrayOutput struct{ *pulumi.OutputState }

func (SpacecraftLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacecraftLink)(nil)).Elem()
}

func (o SpacecraftLinkArrayOutput) ToSpacecraftLinkArrayOutput() SpacecraftLinkArrayOutput {
	return o
}

func (o SpacecraftLinkArrayOutput) ToSpacecraftLinkArrayOutputWithContext(ctx context.Context) SpacecraftLinkArrayOutput {
	return o
}

func (o SpacecraftLinkArrayOutput) Index(i pulumi.IntInput) SpacecraftLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpacecraftLink {
		return vs[0].([]SpacecraftLink)[vs[1].(int)]
	}).(SpacecraftLinkOutput)
}

// List of authorized spacecraft links per ground station and the expiration date of the authorization.
type SpacecraftLinkResponse struct {
	// Authorized Ground Stations
	Authorizations []AuthorizedGroundstationResponse `pulumi:"authorizations"`
	// Bandwidth in MHz.
	BandwidthMHz float64 `pulumi:"bandwidthMHz"`
	// Center Frequency in MHz.
	CenterFrequencyMHz float64 `pulumi:"centerFrequencyMHz"`
	// Direction (Uplink or Downlink).
	Direction string `pulumi:"direction"`
	// Link name.
	Name string `pulumi:"name"`
	// Polarization. e.g. (RHCP, LHCP).
	Polarization string `pulumi:"polarization"`
}

// List of authorized spacecraft links per ground station and the expiration date of the authorization.
type SpacecraftLinkResponseOutput struct{ *pulumi.OutputState }

func (SpacecraftLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacecraftLinkResponse)(nil)).Elem()
}

func (o SpacecraftLinkResponseOutput) ToSpacecraftLinkResponseOutput() SpacecraftLinkResponseOutput {
	return o
}

func (o SpacecraftLinkResponseOutput) ToSpacecraftLinkResponseOutputWithContext(ctx context.Context) SpacecraftLinkResponseOutput {
	return o
}

// Authorized Ground Stations
func (o SpacecraftLinkResponseOutput) Authorizations() AuthorizedGroundstationResponseArrayOutput {
	return o.ApplyT(func(v SpacecraftLinkResponse) []AuthorizedGroundstationResponse { return v.Authorizations }).(AuthorizedGroundstationResponseArrayOutput)
}

// Bandwidth in MHz.
func (o SpacecraftLinkResponseOutput) BandwidthMHz() pulumi.Float64Output {
	return o.ApplyT(func(v SpacecraftLinkResponse) float64 { return v.BandwidthMHz }).(pulumi.Float64Output)
}

// Center Frequency in MHz.
func (o SpacecraftLinkResponseOutput) CenterFrequencyMHz() pulumi.Float64Output {
	return o.ApplyT(func(v SpacecraftLinkResponse) float64 { return v.CenterFrequencyMHz }).(pulumi.Float64Output)
}

// Direction (Uplink or Downlink).
func (o SpacecraftLinkResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SpacecraftLinkResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// Link name.
func (o SpacecraftLinkResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SpacecraftLinkResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Polarization. e.g. (RHCP, LHCP).
func (o SpacecraftLinkResponseOutput) Polarization() pulumi.StringOutput {
	return o.ApplyT(func(v SpacecraftLinkResponse) string { return v.Polarization }).(pulumi.StringOutput)
}

type SpacecraftLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (SpacecraftLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacecraftLinkResponse)(nil)).Elem()
}

func (o SpacecraftLinkResponseArrayOutput) ToSpacecraftLinkResponseArrayOutput() SpacecraftLinkResponseArrayOutput {
	return o
}

func (o SpacecraftLinkResponseArrayOutput) ToSpacecraftLinkResponseArrayOutputWithContext(ctx context.Context) SpacecraftLinkResponseArrayOutput {
	return o
}

func (o SpacecraftLinkResponseArrayOutput) Index(i pulumi.IntInput) SpacecraftLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpacecraftLinkResponse {
		return vs[0].([]SpacecraftLinkResponse)[vs[1].(int)]
	}).(SpacecraftLinkResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorizedGroundstationResponseOutput{})
	pulumi.RegisterOutputType(AuthorizedGroundstationResponseArrayOutput{})
	pulumi.RegisterOutputType(AvailableContactsResponseOutput{})
	pulumi.RegisterOutputType(AvailableContactsResponseArrayOutput{})
	pulumi.RegisterOutputType(AvailableContactsResponseSpacecraftOutput{})
	pulumi.RegisterOutputType(AvailableContactsResponseSpacecraftPtrOutput{})
	pulumi.RegisterOutputType(ContactParametersContactProfileOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkArrayOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkChannelOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkChannelArrayOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkChannelResponseOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkChannelResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkResponseOutput{})
	pulumi.RegisterOutputType(ContactProfileLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactProfileThirdPartyConfigurationOutput{})
	pulumi.RegisterOutputType(ContactProfileThirdPartyConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ContactProfileThirdPartyConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContactProfileThirdPartyConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactProfilesPropertiesNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ContactProfilesPropertiesResponseNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ContactsPropertiesContactProfileOutput{})
	pulumi.RegisterOutputType(ContactsPropertiesResponseAntennaConfigurationOutput{})
	pulumi.RegisterOutputType(ContactsPropertiesResponseContactProfileOutput{})
	pulumi.RegisterOutputType(EdgeSitesPropertiesGlobalCommunicationsSiteOutput{})
	pulumi.RegisterOutputType(EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput{})
	pulumi.RegisterOutputType(EndPointOutput{})
	pulumi.RegisterOutputType(EndPointResponseOutput{})
	pulumi.RegisterOutputType(GeoCatalogPropertiesOutput{})
	pulumi.RegisterOutputType(GeoCatalogPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GeoCatalogPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GroundStationsPropertiesGlobalCommunicationsSiteOutput{})
	pulumi.RegisterOutputType(GroundStationsPropertiesResponseGlobalCommunicationsSiteOutput{})
	pulumi.RegisterOutputType(L2ConnectionsPropertiesEdgeSiteOutput{})
	pulumi.RegisterOutputType(L2ConnectionsPropertiesGroundStationOutput{})
	pulumi.RegisterOutputType(L2ConnectionsPropertiesGroundStationPartnerRouterOutput{})
	pulumi.RegisterOutputType(L2ConnectionsPropertiesResponseEdgeSiteOutput{})
	pulumi.RegisterOutputType(L2ConnectionsPropertiesResponseGroundStationOutput{})
	pulumi.RegisterOutputType(L2ConnectionsPropertiesResponseGroundStationPartnerRouterOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdListResultResponseValueOutput{})
	pulumi.RegisterOutputType(ResourceIdListResultResponseValueArrayOutput{})
	pulumi.RegisterOutputType(SpacecraftLinkOutput{})
	pulumi.RegisterOutputType(SpacecraftLinkArrayOutput{})
	pulumi.RegisterOutputType(SpacecraftLinkResponseOutput{})
	pulumi.RegisterOutputType(SpacecraftLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
