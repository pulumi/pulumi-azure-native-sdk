// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package orbital

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified edge site in a specified resource group.
// Azure REST API version: 2024-03-01-preview.
//
// Other available API versions: 2024-03-01.
func LookupEdgeSite(ctx *pulumi.Context, args *LookupEdgeSiteArgs, opts ...pulumi.InvokeOption) (*LookupEdgeSiteResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEdgeSiteResult
	err := ctx.Invoke("azure-native:orbital:getEdgeSite", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEdgeSiteArgs struct {
	// Edge site name.
	EdgeSiteName string `pulumi:"edgeSiteName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A customer's reference to a global communications site site.
type LookupEdgeSiteResult struct {
	// A reference to global communications site.
	GlobalCommunicationsSite EdgeSitesPropertiesResponseGlobalCommunicationsSite `pulumi:"globalCommunicationsSite"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupEdgeSiteOutput(ctx *pulumi.Context, args LookupEdgeSiteOutputArgs, opts ...pulumi.InvokeOption) LookupEdgeSiteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEdgeSiteResult, error) {
			args := v.(LookupEdgeSiteArgs)
			r, err := LookupEdgeSite(ctx, &args, opts...)
			var s LookupEdgeSiteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEdgeSiteResultOutput)
}

type LookupEdgeSiteOutputArgs struct {
	// Edge site name.
	EdgeSiteName pulumi.StringInput `pulumi:"edgeSiteName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupEdgeSiteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeSiteArgs)(nil)).Elem()
}

// A customer's reference to a global communications site site.
type LookupEdgeSiteResultOutput struct{ *pulumi.OutputState }

func (LookupEdgeSiteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeSiteResult)(nil)).Elem()
}

func (o LookupEdgeSiteResultOutput) ToLookupEdgeSiteResultOutput() LookupEdgeSiteResultOutput {
	return o
}

func (o LookupEdgeSiteResultOutput) ToLookupEdgeSiteResultOutputWithContext(ctx context.Context) LookupEdgeSiteResultOutput {
	return o
}

// A reference to global communications site.
func (o LookupEdgeSiteResultOutput) GlobalCommunicationsSite() EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) EdgeSitesPropertiesResponseGlobalCommunicationsSite {
		return v.GlobalCommunicationsSite
	}).(EdgeSitesPropertiesResponseGlobalCommunicationsSiteOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupEdgeSiteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupEdgeSiteResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEdgeSiteResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupEdgeSiteResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupEdgeSiteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEdgeSiteResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeSiteResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEdgeSiteResultOutput{})
}
