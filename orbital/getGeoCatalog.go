// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package orbital

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a GeoCatalog
//
// Uses Azure REST API version 2025-02-11-preview.
//
// Other available API versions: 2024-01-31-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native orbital [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupGeoCatalog(ctx *pulumi.Context, args *LookupGeoCatalogArgs, opts ...pulumi.InvokeOption) (*LookupGeoCatalogResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupGeoCatalogResult
	err := ctx.Invoke("azure-native:orbital:getGeoCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupGeoCatalogArgs struct {
	// The name of the catalog
	CatalogName string `pulumi:"catalogName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Microsoft Planetary Computer Pro GeoCatalog resource
type LookupGeoCatalogResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties GeoCatalogPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupGeoCatalogResult
func (val *LookupGeoCatalogResult) Defaults() *LookupGeoCatalogResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}
func LookupGeoCatalogOutput(ctx *pulumi.Context, args LookupGeoCatalogOutputArgs, opts ...pulumi.InvokeOption) LookupGeoCatalogResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGeoCatalogResultOutput, error) {
			args := v.(LookupGeoCatalogArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:orbital:getGeoCatalog", args, LookupGeoCatalogResultOutput{}, options).(LookupGeoCatalogResultOutput), nil
		}).(LookupGeoCatalogResultOutput)
}

type LookupGeoCatalogOutputArgs struct {
	// The name of the catalog
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupGeoCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeoCatalogArgs)(nil)).Elem()
}

// A Microsoft Planetary Computer Pro GeoCatalog resource
type LookupGeoCatalogResultOutput struct{ *pulumi.OutputState }

func (LookupGeoCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeoCatalogResult)(nil)).Elem()
}

func (o LookupGeoCatalogResultOutput) ToLookupGeoCatalogResultOutput() LookupGeoCatalogResultOutput {
	return o
}

func (o LookupGeoCatalogResultOutput) ToLookupGeoCatalogResultOutputWithContext(ctx context.Context) LookupGeoCatalogResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupGeoCatalogResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupGeoCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed service identities assigned to this resource.
func (o LookupGeoCatalogResultOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupGeoCatalogResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupGeoCatalogResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupGeoCatalogResultOutput) Properties() GeoCatalogPropertiesResponseOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) GeoCatalogPropertiesResponse { return v.Properties }).(GeoCatalogPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupGeoCatalogResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupGeoCatalogResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupGeoCatalogResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeoCatalogResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGeoCatalogResultOutput{})
}
