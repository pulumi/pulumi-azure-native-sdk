// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicefabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
// Azure REST API version: 2023-07-01-preview.
//
// Other available API versions: 2023-09-01-preview, 2023-11-01-preview.
func GetmanagedMaintenanceWindowStatus(ctx *pulumi.Context, args *GetmanagedMaintenanceWindowStatusArgs, opts ...pulumi.InvokeOption) (*GetmanagedMaintenanceWindowStatusResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetmanagedMaintenanceWindowStatusResult
	err := ctx.Invoke("azure-native:servicefabric:getmanagedMaintenanceWindowStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetmanagedMaintenanceWindowStatusArgs struct {
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Describes the maintenance window status of the Service Fabric Managed Cluster.
type GetmanagedMaintenanceWindowStatusResult struct {
	// If updates can be applied.
	CanApplyUpdates bool `pulumi:"canApplyUpdates"`
	// Indicates if the region is ready to configure maintenance windows.
	IsRegionReady bool `pulumi:"isRegionReady"`
	// If maintenance window is active.
	IsWindowActive bool `pulumi:"isWindowActive"`
	// If maintenance window is enabled on this cluster.
	IsWindowEnabled bool `pulumi:"isWindowEnabled"`
	// Last window end time in UTC.
	LastWindowEndTimeUTC string `pulumi:"lastWindowEndTimeUTC"`
	// Last window start time in UTC.
	LastWindowStartTimeUTC string `pulumi:"lastWindowStartTimeUTC"`
	// Last window update time in UTC.
	LastWindowStatusUpdateAtUTC string `pulumi:"lastWindowStatusUpdateAtUTC"`
}

func GetmanagedMaintenanceWindowStatusOutput(ctx *pulumi.Context, args GetmanagedMaintenanceWindowStatusOutputArgs, opts ...pulumi.InvokeOption) GetmanagedMaintenanceWindowStatusResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetmanagedMaintenanceWindowStatusResult, error) {
			args := v.(GetmanagedMaintenanceWindowStatusArgs)
			r, err := GetmanagedMaintenanceWindowStatus(ctx, &args, opts...)
			var s GetmanagedMaintenanceWindowStatusResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetmanagedMaintenanceWindowStatusResultOutput)
}

type GetmanagedMaintenanceWindowStatusOutputArgs struct {
	// The name of the cluster resource.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetmanagedMaintenanceWindowStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetmanagedMaintenanceWindowStatusArgs)(nil)).Elem()
}

// Describes the maintenance window status of the Service Fabric Managed Cluster.
type GetmanagedMaintenanceWindowStatusResultOutput struct{ *pulumi.OutputState }

func (GetmanagedMaintenanceWindowStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetmanagedMaintenanceWindowStatusResult)(nil)).Elem()
}

func (o GetmanagedMaintenanceWindowStatusResultOutput) ToGetmanagedMaintenanceWindowStatusResultOutput() GetmanagedMaintenanceWindowStatusResultOutput {
	return o
}

func (o GetmanagedMaintenanceWindowStatusResultOutput) ToGetmanagedMaintenanceWindowStatusResultOutputWithContext(ctx context.Context) GetmanagedMaintenanceWindowStatusResultOutput {
	return o
}

// If updates can be applied.
func (o GetmanagedMaintenanceWindowStatusResultOutput) CanApplyUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) bool { return v.CanApplyUpdates }).(pulumi.BoolOutput)
}

// Indicates if the region is ready to configure maintenance windows.
func (o GetmanagedMaintenanceWindowStatusResultOutput) IsRegionReady() pulumi.BoolOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) bool { return v.IsRegionReady }).(pulumi.BoolOutput)
}

// If maintenance window is active.
func (o GetmanagedMaintenanceWindowStatusResultOutput) IsWindowActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) bool { return v.IsWindowActive }).(pulumi.BoolOutput)
}

// If maintenance window is enabled on this cluster.
func (o GetmanagedMaintenanceWindowStatusResultOutput) IsWindowEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) bool { return v.IsWindowEnabled }).(pulumi.BoolOutput)
}

// Last window end time in UTC.
func (o GetmanagedMaintenanceWindowStatusResultOutput) LastWindowEndTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) string { return v.LastWindowEndTimeUTC }).(pulumi.StringOutput)
}

// Last window start time in UTC.
func (o GetmanagedMaintenanceWindowStatusResultOutput) LastWindowStartTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) string { return v.LastWindowStartTimeUTC }).(pulumi.StringOutput)
}

// Last window update time in UTC.
func (o GetmanagedMaintenanceWindowStatusResultOutput) LastWindowStatusUpdateAtUTC() pulumi.StringOutput {
	return o.ApplyT(func(v GetmanagedMaintenanceWindowStatusResult) string { return v.LastWindowStatusUpdateAtUTC }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetmanagedMaintenanceWindowStatusResultOutput{})
}
