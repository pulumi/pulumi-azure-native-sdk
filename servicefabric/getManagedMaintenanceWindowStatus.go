// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicefabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
// Azure REST API version: 2024-04-01.
func GetManagedMaintenanceWindowStatus(ctx *pulumi.Context, args *GetManagedMaintenanceWindowStatusArgs, opts ...pulumi.InvokeOption) (*GetManagedMaintenanceWindowStatusResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetManagedMaintenanceWindowStatusResult
	err := ctx.Invoke("azure-native:servicefabric:getManagedMaintenanceWindowStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetManagedMaintenanceWindowStatusArgs struct {
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Describes the maintenance window status of the Service Fabric Managed Cluster.
type GetManagedMaintenanceWindowStatusResult struct {
	// If updates can be applied.
	CanApplyUpdates bool `pulumi:"canApplyUpdates"`
	// Indicates if the region is ready to configure maintenance windows.
	IsRegionReady bool `pulumi:"isRegionReady"`
	// If maintenance window is active.
	IsWindowActive bool `pulumi:"isWindowActive"`
	// If maintenance window is enabled on this cluster.
	IsWindowEnabled bool `pulumi:"isWindowEnabled"`
	// Last window end time in UTC.
	LastWindowEndTimeUTC string `pulumi:"lastWindowEndTimeUTC"`
	// Last window start time in UTC.
	LastWindowStartTimeUTC string `pulumi:"lastWindowStartTimeUTC"`
	// Last window update time in UTC.
	LastWindowStatusUpdateAtUTC string `pulumi:"lastWindowStatusUpdateAtUTC"`
}

func GetManagedMaintenanceWindowStatusOutput(ctx *pulumi.Context, args GetManagedMaintenanceWindowStatusOutputArgs, opts ...pulumi.InvokeOption) GetManagedMaintenanceWindowStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedMaintenanceWindowStatusResultOutput, error) {
			args := v.(GetManagedMaintenanceWindowStatusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:servicefabric:getManagedMaintenanceWindowStatus", args, GetManagedMaintenanceWindowStatusResultOutput{}, options).(GetManagedMaintenanceWindowStatusResultOutput), nil
		}).(GetManagedMaintenanceWindowStatusResultOutput)
}

type GetManagedMaintenanceWindowStatusOutputArgs struct {
	// The name of the cluster resource.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetManagedMaintenanceWindowStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMaintenanceWindowStatusArgs)(nil)).Elem()
}

// Describes the maintenance window status of the Service Fabric Managed Cluster.
type GetManagedMaintenanceWindowStatusResultOutput struct{ *pulumi.OutputState }

func (GetManagedMaintenanceWindowStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMaintenanceWindowStatusResult)(nil)).Elem()
}

func (o GetManagedMaintenanceWindowStatusResultOutput) ToGetManagedMaintenanceWindowStatusResultOutput() GetManagedMaintenanceWindowStatusResultOutput {
	return o
}

func (o GetManagedMaintenanceWindowStatusResultOutput) ToGetManagedMaintenanceWindowStatusResultOutputWithContext(ctx context.Context) GetManagedMaintenanceWindowStatusResultOutput {
	return o
}

// If updates can be applied.
func (o GetManagedMaintenanceWindowStatusResultOutput) CanApplyUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) bool { return v.CanApplyUpdates }).(pulumi.BoolOutput)
}

// Indicates if the region is ready to configure maintenance windows.
func (o GetManagedMaintenanceWindowStatusResultOutput) IsRegionReady() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) bool { return v.IsRegionReady }).(pulumi.BoolOutput)
}

// If maintenance window is active.
func (o GetManagedMaintenanceWindowStatusResultOutput) IsWindowActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) bool { return v.IsWindowActive }).(pulumi.BoolOutput)
}

// If maintenance window is enabled on this cluster.
func (o GetManagedMaintenanceWindowStatusResultOutput) IsWindowEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) bool { return v.IsWindowEnabled }).(pulumi.BoolOutput)
}

// Last window end time in UTC.
func (o GetManagedMaintenanceWindowStatusResultOutput) LastWindowEndTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) string { return v.LastWindowEndTimeUTC }).(pulumi.StringOutput)
}

// Last window start time in UTC.
func (o GetManagedMaintenanceWindowStatusResultOutput) LastWindowStartTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) string { return v.LastWindowStartTimeUTC }).(pulumi.StringOutput)
}

// Last window update time in UTC.
func (o GetManagedMaintenanceWindowStatusResultOutput) LastWindowStatusUpdateAtUTC() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMaintenanceWindowStatusResult) string { return v.LastWindowStatusUpdateAtUTC }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedMaintenanceWindowStatusResultOutput{})
}
