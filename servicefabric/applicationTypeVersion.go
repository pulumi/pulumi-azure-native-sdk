// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicefabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An application type version resource for the specified application type name resource.
//
// Uses Azure REST API version 2024-11-01-preview. In version 1.x of the Azure Native provider, it used API version 2020-03-01.
//
// Other available API versions: 2021-06-01.
type ApplicationTypeVersion struct {
	pulumi.CustomResourceState

	// The URL to the application package
	AppPackageUrl pulumi.StringOutput `pulumi:"appPackageUrl"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The current deployment or provisioning state, which only appears in the response
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewApplicationTypeVersion registers a new resource with the given unique name, arguments, and options.
func NewApplicationTypeVersion(ctx *pulumi.Context,
	name string, args *ApplicationTypeVersionArgs, opts ...pulumi.ResourceOption) (*ApplicationTypeVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppPackageUrl == nil {
		return nil, errors.New("invalid value for required argument 'AppPackageUrl'")
	}
	if args.ApplicationTypeName == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationTypeName'")
	}
	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:servicefabric/v20210101preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210501:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210701preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210901privatepreview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20211101preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20220101:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20220201preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20220601preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20220801preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20221001preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20230201preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20230301preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20230701preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20230901preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20231101preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20231201preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20240201preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20240401:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20240601preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20240901preview:ApplicationTypeVersion"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20241101preview:ApplicationTypeVersion"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ApplicationTypeVersion
	err := ctx.RegisterResource("azure-native:servicefabric:ApplicationTypeVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationTypeVersion gets an existing ApplicationTypeVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationTypeVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationTypeVersionState, opts ...pulumi.ResourceOption) (*ApplicationTypeVersion, error) {
	var resource ApplicationTypeVersion
	err := ctx.ReadResource("azure-native:servicefabric:ApplicationTypeVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationTypeVersion resources.
type applicationTypeVersionState struct {
}

type ApplicationTypeVersionState struct {
}

func (ApplicationTypeVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationTypeVersionState)(nil)).Elem()
}

type applicationTypeVersionArgs struct {
	// The URL to the application package
	AppPackageUrl string `pulumi:"appPackageUrl"`
	// The name of the application type name resource.
	ApplicationTypeName string `pulumi:"applicationTypeName"`
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The application type version.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a ApplicationTypeVersion resource.
type ApplicationTypeVersionArgs struct {
	// The URL to the application package
	AppPackageUrl pulumi.StringInput
	// The name of the application type name resource.
	ApplicationTypeName pulumi.StringInput
	// The name of the cluster resource.
	ClusterName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The application type version.
	Version pulumi.StringPtrInput
}

func (ApplicationTypeVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationTypeVersionArgs)(nil)).Elem()
}

type ApplicationTypeVersionInput interface {
	pulumi.Input

	ToApplicationTypeVersionOutput() ApplicationTypeVersionOutput
	ToApplicationTypeVersionOutputWithContext(ctx context.Context) ApplicationTypeVersionOutput
}

func (*ApplicationTypeVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationTypeVersion)(nil)).Elem()
}

func (i *ApplicationTypeVersion) ToApplicationTypeVersionOutput() ApplicationTypeVersionOutput {
	return i.ToApplicationTypeVersionOutputWithContext(context.Background())
}

func (i *ApplicationTypeVersion) ToApplicationTypeVersionOutputWithContext(ctx context.Context) ApplicationTypeVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTypeVersionOutput)
}

type ApplicationTypeVersionOutput struct{ *pulumi.OutputState }

func (ApplicationTypeVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationTypeVersion)(nil)).Elem()
}

func (o ApplicationTypeVersionOutput) ToApplicationTypeVersionOutput() ApplicationTypeVersionOutput {
	return o
}

func (o ApplicationTypeVersionOutput) ToApplicationTypeVersionOutputWithContext(ctx context.Context) ApplicationTypeVersionOutput {
	return o
}

// The URL to the application package
func (o ApplicationTypeVersionOutput) AppPackageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) pulumi.StringOutput { return v.AppPackageUrl }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o ApplicationTypeVersionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ApplicationTypeVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current deployment or provisioning state, which only appears in the response
func (o ApplicationTypeVersionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ApplicationTypeVersionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ApplicationTypeVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ApplicationTypeVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationTypeVersion) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationTypeVersionOutput{})
}
