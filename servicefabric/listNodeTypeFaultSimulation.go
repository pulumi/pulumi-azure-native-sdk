// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicefabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the list of recent fault simulations for the node type.
//
// Uses Azure REST API version 2024-11-01-preview.
//
// Other available API versions: 2025-03-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native servicefabric [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListNodeTypeFaultSimulation(ctx *pulumi.Context, args *ListNodeTypeFaultSimulationArgs, opts ...pulumi.InvokeOption) (*ListNodeTypeFaultSimulationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListNodeTypeFaultSimulationResult
	err := ctx.Invoke("azure-native:servicefabric:listNodeTypeFaultSimulation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListNodeTypeFaultSimulationArgs struct {
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// The name of the node type.
	NodeTypeName string `pulumi:"nodeTypeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Fault simulation list results
type ListNodeTypeFaultSimulationResult struct {
	// The link to the next page of items
	NextLink *string `pulumi:"nextLink"`
	// The FaultSimulation items on this page
	Value []FaultSimulationResponse `pulumi:"value"`
}

func ListNodeTypeFaultSimulationOutput(ctx *pulumi.Context, args ListNodeTypeFaultSimulationOutputArgs, opts ...pulumi.InvokeOption) ListNodeTypeFaultSimulationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListNodeTypeFaultSimulationResultOutput, error) {
			args := v.(ListNodeTypeFaultSimulationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:servicefabric:listNodeTypeFaultSimulation", args, ListNodeTypeFaultSimulationResultOutput{}, options).(ListNodeTypeFaultSimulationResultOutput), nil
		}).(ListNodeTypeFaultSimulationResultOutput)
}

type ListNodeTypeFaultSimulationOutputArgs struct {
	// The name of the cluster resource.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the node type.
	NodeTypeName pulumi.StringInput `pulumi:"nodeTypeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListNodeTypeFaultSimulationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNodeTypeFaultSimulationArgs)(nil)).Elem()
}

// Fault simulation list results
type ListNodeTypeFaultSimulationResultOutput struct{ *pulumi.OutputState }

func (ListNodeTypeFaultSimulationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNodeTypeFaultSimulationResult)(nil)).Elem()
}

func (o ListNodeTypeFaultSimulationResultOutput) ToListNodeTypeFaultSimulationResultOutput() ListNodeTypeFaultSimulationResultOutput {
	return o
}

func (o ListNodeTypeFaultSimulationResultOutput) ToListNodeTypeFaultSimulationResultOutputWithContext(ctx context.Context) ListNodeTypeFaultSimulationResultOutput {
	return o
}

// The link to the next page of items
func (o ListNodeTypeFaultSimulationResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListNodeTypeFaultSimulationResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// The FaultSimulation items on this page
func (o ListNodeTypeFaultSimulationResultOutput) Value() FaultSimulationResponseArrayOutput {
	return o.ApplyT(func(v ListNodeTypeFaultSimulationResult) []FaultSimulationResponse { return v.Value }).(FaultSimulationResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListNodeTypeFaultSimulationResultOutput{})
}
