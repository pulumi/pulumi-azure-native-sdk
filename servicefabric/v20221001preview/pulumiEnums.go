// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The network traffic is allowed or denied.
type Access string

const (
	AccessAllow = Access("allow")
	AccessDeny  = Access("deny")
)

func (Access) ElementType() reflect.Type {
	return reflect.TypeOf((*Access)(nil)).Elem()
}

func (e Access) ToAccessOutput() AccessOutput {
	return pulumi.ToOutput(e).(AccessOutput)
}

func (e Access) ToAccessOutputWithContext(ctx context.Context) AccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessOutput)
}

func (e Access) ToAccessPtrOutput() AccessPtrOutput {
	return e.ToAccessPtrOutputWithContext(context.Background())
}

func (e Access) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return Access(e).ToAccessOutputWithContext(ctx).ToAccessPtrOutputWithContext(ctx)
}

func (e Access) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Access) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Access) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Access) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessOutput struct{ *pulumi.OutputState }

func (AccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Access)(nil)).Elem()
}

func (o AccessOutput) ToAccessOutput() AccessOutput {
	return o
}

func (o AccessOutput) ToAccessOutputWithContext(ctx context.Context) AccessOutput {
	return o
}

func (o AccessOutput) ToAccessPtrOutput() AccessPtrOutput {
	return o.ToAccessPtrOutputWithContext(context.Background())
}

func (o AccessOutput) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Access) *Access {
		return &v
	}).(AccessPtrOutput)
}

func (o AccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Access) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Access) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessPtrOutput struct{ *pulumi.OutputState }

func (AccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Access)(nil)).Elem()
}

func (o AccessPtrOutput) ToAccessPtrOutput() AccessPtrOutput {
	return o
}

func (o AccessPtrOutput) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return o
}

func (o AccessPtrOutput) Elem() AccessOutput {
	return o.ApplyT(func(v *Access) Access {
		if v != nil {
			return *v
		}
		var ret Access
		return ret
	}).(AccessOutput)
}

func (o AccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Access) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessInput is an input type that accepts values of the Access enum
// A concrete instance of `AccessInput` can be one of the following:
//
//	AccessAllow
//	AccessDeny
type AccessInput interface {
	pulumi.Input

	ToAccessOutput() AccessOutput
	ToAccessOutputWithContext(context.Context) AccessOutput
}

var accessPtrType = reflect.TypeOf((**Access)(nil)).Elem()

type AccessPtrInput interface {
	pulumi.Input

	ToAccessPtrOutput() AccessPtrOutput
	ToAccessPtrOutputWithContext(context.Context) AccessPtrOutput
}

type accessPtr string

func AccessPtr(v string) AccessPtrInput {
	return (*accessPtr)(&v)
}

func (*accessPtr) ElementType() reflect.Type {
	return accessPtrType
}

func (in *accessPtr) ToAccessPtrOutput() AccessPtrOutput {
	return pulumi.ToOutput(in).(AccessPtrOutput)
}

func (in *accessPtr) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessPtrOutput)
}

func (in *accessPtr) ToOutput(ctx context.Context) pulumix.Output[*Access] {
	return pulumix.Output[*Access]{
		OutputState: in.ToAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
type ClusterUpgradeCadence string

const (
	// Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters.
	ClusterUpgradeCadenceWave0 = ClusterUpgradeCadence("Wave0")
	// Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters.
	ClusterUpgradeCadenceWave1 = ClusterUpgradeCadence("Wave1")
	// Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters.
	ClusterUpgradeCadenceWave2 = ClusterUpgradeCadence("Wave2")
)

func (ClusterUpgradeCadence) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeCadence)(nil)).Elem()
}

func (e ClusterUpgradeCadence) ToClusterUpgradeCadenceOutput() ClusterUpgradeCadenceOutput {
	return pulumi.ToOutput(e).(ClusterUpgradeCadenceOutput)
}

func (e ClusterUpgradeCadence) ToClusterUpgradeCadenceOutputWithContext(ctx context.Context) ClusterUpgradeCadenceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterUpgradeCadenceOutput)
}

func (e ClusterUpgradeCadence) ToClusterUpgradeCadencePtrOutput() ClusterUpgradeCadencePtrOutput {
	return e.ToClusterUpgradeCadencePtrOutputWithContext(context.Background())
}

func (e ClusterUpgradeCadence) ToClusterUpgradeCadencePtrOutputWithContext(ctx context.Context) ClusterUpgradeCadencePtrOutput {
	return ClusterUpgradeCadence(e).ToClusterUpgradeCadenceOutputWithContext(ctx).ToClusterUpgradeCadencePtrOutputWithContext(ctx)
}

func (e ClusterUpgradeCadence) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterUpgradeCadence) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterUpgradeCadence) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterUpgradeCadence) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterUpgradeCadenceOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeCadenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeCadence)(nil)).Elem()
}

func (o ClusterUpgradeCadenceOutput) ToClusterUpgradeCadenceOutput() ClusterUpgradeCadenceOutput {
	return o
}

func (o ClusterUpgradeCadenceOutput) ToClusterUpgradeCadenceOutputWithContext(ctx context.Context) ClusterUpgradeCadenceOutput {
	return o
}

func (o ClusterUpgradeCadenceOutput) ToClusterUpgradeCadencePtrOutput() ClusterUpgradeCadencePtrOutput {
	return o.ToClusterUpgradeCadencePtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeCadenceOutput) ToClusterUpgradeCadencePtrOutputWithContext(ctx context.Context) ClusterUpgradeCadencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterUpgradeCadence) *ClusterUpgradeCadence {
		return &v
	}).(ClusterUpgradeCadencePtrOutput)
}

func (o ClusterUpgradeCadenceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterUpgradeCadenceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterUpgradeCadence) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterUpgradeCadenceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeCadenceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterUpgradeCadence) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterUpgradeCadencePtrOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeCadencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUpgradeCadence)(nil)).Elem()
}

func (o ClusterUpgradeCadencePtrOutput) ToClusterUpgradeCadencePtrOutput() ClusterUpgradeCadencePtrOutput {
	return o
}

func (o ClusterUpgradeCadencePtrOutput) ToClusterUpgradeCadencePtrOutputWithContext(ctx context.Context) ClusterUpgradeCadencePtrOutput {
	return o
}

func (o ClusterUpgradeCadencePtrOutput) Elem() ClusterUpgradeCadenceOutput {
	return o.ApplyT(func(v *ClusterUpgradeCadence) ClusterUpgradeCadence {
		if v != nil {
			return *v
		}
		var ret ClusterUpgradeCadence
		return ret
	}).(ClusterUpgradeCadenceOutput)
}

func (o ClusterUpgradeCadencePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeCadencePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterUpgradeCadence) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterUpgradeCadenceInput is an input type that accepts values of the ClusterUpgradeCadence enum
// A concrete instance of `ClusterUpgradeCadenceInput` can be one of the following:
//
//	ClusterUpgradeCadenceWave0
//	ClusterUpgradeCadenceWave1
//	ClusterUpgradeCadenceWave2
type ClusterUpgradeCadenceInput interface {
	pulumi.Input

	ToClusterUpgradeCadenceOutput() ClusterUpgradeCadenceOutput
	ToClusterUpgradeCadenceOutputWithContext(context.Context) ClusterUpgradeCadenceOutput
}

var clusterUpgradeCadencePtrType = reflect.TypeOf((**ClusterUpgradeCadence)(nil)).Elem()

type ClusterUpgradeCadencePtrInput interface {
	pulumi.Input

	ToClusterUpgradeCadencePtrOutput() ClusterUpgradeCadencePtrOutput
	ToClusterUpgradeCadencePtrOutputWithContext(context.Context) ClusterUpgradeCadencePtrOutput
}

type clusterUpgradeCadencePtr string

func ClusterUpgradeCadencePtr(v string) ClusterUpgradeCadencePtrInput {
	return (*clusterUpgradeCadencePtr)(&v)
}

func (*clusterUpgradeCadencePtr) ElementType() reflect.Type {
	return clusterUpgradeCadencePtrType
}

func (in *clusterUpgradeCadencePtr) ToClusterUpgradeCadencePtrOutput() ClusterUpgradeCadencePtrOutput {
	return pulumi.ToOutput(in).(ClusterUpgradeCadencePtrOutput)
}

func (in *clusterUpgradeCadencePtr) ToClusterUpgradeCadencePtrOutputWithContext(ctx context.Context) ClusterUpgradeCadencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterUpgradeCadencePtrOutput)
}

func (in *clusterUpgradeCadencePtr) ToOutput(ctx context.Context) pulumix.Output[*ClusterUpgradeCadence] {
	return pulumix.Output[*ClusterUpgradeCadence]{
		OutputState: in.ToClusterUpgradeCadencePtrOutputWithContext(ctx).OutputState,
	}
}

// The upgrade mode of the cluster when new Service Fabric runtime version is available.
type ClusterUpgradeMode string

const (
	// The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available.
	ClusterUpgradeModeAutomatic = ClusterUpgradeMode("Automatic")
	// The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
	ClusterUpgradeModeManual = ClusterUpgradeMode("Manual")
)

func (ClusterUpgradeMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeMode)(nil)).Elem()
}

func (e ClusterUpgradeMode) ToClusterUpgradeModeOutput() ClusterUpgradeModeOutput {
	return pulumi.ToOutput(e).(ClusterUpgradeModeOutput)
}

func (e ClusterUpgradeMode) ToClusterUpgradeModeOutputWithContext(ctx context.Context) ClusterUpgradeModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterUpgradeModeOutput)
}

func (e ClusterUpgradeMode) ToClusterUpgradeModePtrOutput() ClusterUpgradeModePtrOutput {
	return e.ToClusterUpgradeModePtrOutputWithContext(context.Background())
}

func (e ClusterUpgradeMode) ToClusterUpgradeModePtrOutputWithContext(ctx context.Context) ClusterUpgradeModePtrOutput {
	return ClusterUpgradeMode(e).ToClusterUpgradeModeOutputWithContext(ctx).ToClusterUpgradeModePtrOutputWithContext(ctx)
}

func (e ClusterUpgradeMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterUpgradeMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterUpgradeMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterUpgradeMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterUpgradeModeOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeMode)(nil)).Elem()
}

func (o ClusterUpgradeModeOutput) ToClusterUpgradeModeOutput() ClusterUpgradeModeOutput {
	return o
}

func (o ClusterUpgradeModeOutput) ToClusterUpgradeModeOutputWithContext(ctx context.Context) ClusterUpgradeModeOutput {
	return o
}

func (o ClusterUpgradeModeOutput) ToClusterUpgradeModePtrOutput() ClusterUpgradeModePtrOutput {
	return o.ToClusterUpgradeModePtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeModeOutput) ToClusterUpgradeModePtrOutputWithContext(ctx context.Context) ClusterUpgradeModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterUpgradeMode) *ClusterUpgradeMode {
		return &v
	}).(ClusterUpgradeModePtrOutput)
}

func (o ClusterUpgradeModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterUpgradeModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterUpgradeMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterUpgradeModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterUpgradeMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterUpgradeModePtrOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUpgradeMode)(nil)).Elem()
}

func (o ClusterUpgradeModePtrOutput) ToClusterUpgradeModePtrOutput() ClusterUpgradeModePtrOutput {
	return o
}

func (o ClusterUpgradeModePtrOutput) ToClusterUpgradeModePtrOutputWithContext(ctx context.Context) ClusterUpgradeModePtrOutput {
	return o
}

func (o ClusterUpgradeModePtrOutput) Elem() ClusterUpgradeModeOutput {
	return o.ApplyT(func(v *ClusterUpgradeMode) ClusterUpgradeMode {
		if v != nil {
			return *v
		}
		var ret ClusterUpgradeMode
		return ret
	}).(ClusterUpgradeModeOutput)
}

func (o ClusterUpgradeModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterUpgradeMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterUpgradeModeInput is an input type that accepts values of the ClusterUpgradeMode enum
// A concrete instance of `ClusterUpgradeModeInput` can be one of the following:
//
//	ClusterUpgradeModeAutomatic
//	ClusterUpgradeModeManual
type ClusterUpgradeModeInput interface {
	pulumi.Input

	ToClusterUpgradeModeOutput() ClusterUpgradeModeOutput
	ToClusterUpgradeModeOutputWithContext(context.Context) ClusterUpgradeModeOutput
}

var clusterUpgradeModePtrType = reflect.TypeOf((**ClusterUpgradeMode)(nil)).Elem()

type ClusterUpgradeModePtrInput interface {
	pulumi.Input

	ToClusterUpgradeModePtrOutput() ClusterUpgradeModePtrOutput
	ToClusterUpgradeModePtrOutputWithContext(context.Context) ClusterUpgradeModePtrOutput
}

type clusterUpgradeModePtr string

func ClusterUpgradeModePtr(v string) ClusterUpgradeModePtrInput {
	return (*clusterUpgradeModePtr)(&v)
}

func (*clusterUpgradeModePtr) ElementType() reflect.Type {
	return clusterUpgradeModePtrType
}

func (in *clusterUpgradeModePtr) ToClusterUpgradeModePtrOutput() ClusterUpgradeModePtrOutput {
	return pulumi.ToOutput(in).(ClusterUpgradeModePtrOutput)
}

func (in *clusterUpgradeModePtr) ToClusterUpgradeModePtrOutputWithContext(ctx context.Context) ClusterUpgradeModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterUpgradeModePtrOutput)
}

func (in *clusterUpgradeModePtr) ToOutput(ctx context.Context) pulumix.Output[*ClusterUpgradeMode] {
	return pulumix.Output[*ClusterUpgradeMode]{
		OutputState: in.ToClusterUpgradeModePtrOutputWithContext(ctx).OutputState,
	}
}

// Network security rule direction.
type Direction string

const (
	DirectionInbound  = Direction("inbound")
	DirectionOutbound = Direction("outbound")
)

func (Direction) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (e Direction) ToDirectionOutput() DirectionOutput {
	return pulumi.ToOutput(e).(DirectionOutput)
}

func (e Direction) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DirectionOutput)
}

func (e Direction) ToDirectionPtrOutput() DirectionPtrOutput {
	return e.ToDirectionPtrOutputWithContext(context.Background())
}

func (e Direction) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return Direction(e).ToDirectionOutputWithContext(ctx).ToDirectionPtrOutputWithContext(ctx)
}

func (e Direction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Direction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Direction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DirectionOutput struct{ *pulumi.OutputState }

func (DirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Direction)(nil)).Elem()
}

func (o DirectionOutput) ToDirectionOutput() DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionOutputWithContext(ctx context.Context) DirectionOutput {
	return o
}

func (o DirectionOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o.ToDirectionPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Direction) *Direction {
		return &v
	}).(DirectionPtrOutput)
}

func (o DirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Direction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DirectionPtrOutput struct{ *pulumi.OutputState }

func (DirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Direction)(nil)).Elem()
}

func (o DirectionPtrOutput) ToDirectionPtrOutput() DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return o
}

func (o DirectionPtrOutput) Elem() DirectionOutput {
	return o.ApplyT(func(v *Direction) Direction {
		if v != nil {
			return *v
		}
		var ret Direction
		return ret
	}).(DirectionOutput)
}

func (o DirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Direction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DirectionInput is an input type that accepts values of the Direction enum
// A concrete instance of `DirectionInput` can be one of the following:
//
//	DirectionInbound
//	DirectionOutbound
type DirectionInput interface {
	pulumi.Input

	ToDirectionOutput() DirectionOutput
	ToDirectionOutputWithContext(context.Context) DirectionOutput
}

var directionPtrType = reflect.TypeOf((**Direction)(nil)).Elem()

type DirectionPtrInput interface {
	pulumi.Input

	ToDirectionPtrOutput() DirectionPtrOutput
	ToDirectionPtrOutputWithContext(context.Context) DirectionPtrOutput
}

type directionPtr string

func DirectionPtr(v string) DirectionPtrInput {
	return (*directionPtr)(&v)
}

func (*directionPtr) ElementType() reflect.Type {
	return directionPtrType
}

func (in *directionPtr) ToDirectionPtrOutput() DirectionPtrOutput {
	return pulumi.ToOutput(in).(DirectionPtrOutput)
}

func (in *directionPtr) ToDirectionPtrOutputWithContext(ctx context.Context) DirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DirectionPtrOutput)
}

func (in *directionPtr) ToOutput(ctx context.Context) pulumix.Output[*Direction] {
	return pulumix.Output[*Direction]{
		OutputState: in.ToDirectionPtrOutputWithContext(ctx).OutputState,
	}
}

// Available cluster add-on features
type ManagedClusterAddOnFeature string

const (
	// Dns service
	ManagedClusterAddOnFeatureDnsService = ManagedClusterAddOnFeature("DnsService")
	// Backup and restore service
	ManagedClusterAddOnFeatureBackupRestoreService = ManagedClusterAddOnFeature("BackupRestoreService")
	// Resource monitor service
	ManagedClusterAddOnFeatureResourceMonitorService = ManagedClusterAddOnFeature("ResourceMonitorService")
)

func (ManagedClusterAddOnFeature) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddOnFeature)(nil)).Elem()
}

func (e ManagedClusterAddOnFeature) ToManagedClusterAddOnFeatureOutput() ManagedClusterAddOnFeatureOutput {
	return pulumi.ToOutput(e).(ManagedClusterAddOnFeatureOutput)
}

func (e ManagedClusterAddOnFeature) ToManagedClusterAddOnFeatureOutputWithContext(ctx context.Context) ManagedClusterAddOnFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedClusterAddOnFeatureOutput)
}

func (e ManagedClusterAddOnFeature) ToManagedClusterAddOnFeaturePtrOutput() ManagedClusterAddOnFeaturePtrOutput {
	return e.ToManagedClusterAddOnFeaturePtrOutputWithContext(context.Background())
}

func (e ManagedClusterAddOnFeature) ToManagedClusterAddOnFeaturePtrOutputWithContext(ctx context.Context) ManagedClusterAddOnFeaturePtrOutput {
	return ManagedClusterAddOnFeature(e).ToManagedClusterAddOnFeatureOutputWithContext(ctx).ToManagedClusterAddOnFeaturePtrOutputWithContext(ctx)
}

func (e ManagedClusterAddOnFeature) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedClusterAddOnFeature) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedClusterAddOnFeature) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedClusterAddOnFeature) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedClusterAddOnFeatureOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddOnFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddOnFeature)(nil)).Elem()
}

func (o ManagedClusterAddOnFeatureOutput) ToManagedClusterAddOnFeatureOutput() ManagedClusterAddOnFeatureOutput {
	return o
}

func (o ManagedClusterAddOnFeatureOutput) ToManagedClusterAddOnFeatureOutputWithContext(ctx context.Context) ManagedClusterAddOnFeatureOutput {
	return o
}

func (o ManagedClusterAddOnFeatureOutput) ToManagedClusterAddOnFeaturePtrOutput() ManagedClusterAddOnFeaturePtrOutput {
	return o.ToManagedClusterAddOnFeaturePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAddOnFeatureOutput) ToManagedClusterAddOnFeaturePtrOutputWithContext(ctx context.Context) ManagedClusterAddOnFeaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterAddOnFeature) *ManagedClusterAddOnFeature {
		return &v
	}).(ManagedClusterAddOnFeaturePtrOutput)
}

func (o ManagedClusterAddOnFeatureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedClusterAddOnFeatureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedClusterAddOnFeature) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedClusterAddOnFeatureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedClusterAddOnFeatureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedClusterAddOnFeature) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedClusterAddOnFeaturePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddOnFeaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAddOnFeature)(nil)).Elem()
}

func (o ManagedClusterAddOnFeaturePtrOutput) ToManagedClusterAddOnFeaturePtrOutput() ManagedClusterAddOnFeaturePtrOutput {
	return o
}

func (o ManagedClusterAddOnFeaturePtrOutput) ToManagedClusterAddOnFeaturePtrOutputWithContext(ctx context.Context) ManagedClusterAddOnFeaturePtrOutput {
	return o
}

func (o ManagedClusterAddOnFeaturePtrOutput) Elem() ManagedClusterAddOnFeatureOutput {
	return o.ApplyT(func(v *ManagedClusterAddOnFeature) ManagedClusterAddOnFeature {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAddOnFeature
		return ret
	}).(ManagedClusterAddOnFeatureOutput)
}

func (o ManagedClusterAddOnFeaturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedClusterAddOnFeaturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedClusterAddOnFeature) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedClusterAddOnFeatureInput is an input type that accepts values of the ManagedClusterAddOnFeature enum
// A concrete instance of `ManagedClusterAddOnFeatureInput` can be one of the following:
//
//	ManagedClusterAddOnFeatureDnsService
//	ManagedClusterAddOnFeatureBackupRestoreService
//	ManagedClusterAddOnFeatureResourceMonitorService
type ManagedClusterAddOnFeatureInput interface {
	pulumi.Input

	ToManagedClusterAddOnFeatureOutput() ManagedClusterAddOnFeatureOutput
	ToManagedClusterAddOnFeatureOutputWithContext(context.Context) ManagedClusterAddOnFeatureOutput
}

var managedClusterAddOnFeaturePtrType = reflect.TypeOf((**ManagedClusterAddOnFeature)(nil)).Elem()

type ManagedClusterAddOnFeaturePtrInput interface {
	pulumi.Input

	ToManagedClusterAddOnFeaturePtrOutput() ManagedClusterAddOnFeaturePtrOutput
	ToManagedClusterAddOnFeaturePtrOutputWithContext(context.Context) ManagedClusterAddOnFeaturePtrOutput
}

type managedClusterAddOnFeaturePtr string

func ManagedClusterAddOnFeaturePtr(v string) ManagedClusterAddOnFeaturePtrInput {
	return (*managedClusterAddOnFeaturePtr)(&v)
}

func (*managedClusterAddOnFeaturePtr) ElementType() reflect.Type {
	return managedClusterAddOnFeaturePtrType
}

func (in *managedClusterAddOnFeaturePtr) ToManagedClusterAddOnFeaturePtrOutput() ManagedClusterAddOnFeaturePtrOutput {
	return pulumi.ToOutput(in).(ManagedClusterAddOnFeaturePtrOutput)
}

func (in *managedClusterAddOnFeaturePtr) ToManagedClusterAddOnFeaturePtrOutputWithContext(ctx context.Context) ManagedClusterAddOnFeaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedClusterAddOnFeaturePtrOutput)
}

func (in *managedClusterAddOnFeaturePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedClusterAddOnFeature] {
	return pulumix.Output[*ManagedClusterAddOnFeature]{
		OutputState: in.ToManagedClusterAddOnFeaturePtrOutputWithContext(ctx).OutputState,
	}
}

// Network protocol this rule applies to.
type NsgProtocol string

const (
	NsgProtocolHttp  = NsgProtocol("http")
	NsgProtocolHttps = NsgProtocol("https")
	NsgProtocolTcp   = NsgProtocol("tcp")
	NsgProtocolUdp   = NsgProtocol("udp")
	NsgProtocolIcmp  = NsgProtocol("icmp")
	NsgProtocolAh    = NsgProtocol("ah")
	NsgProtocolEsp   = NsgProtocol("esp")
)

func (NsgProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgProtocol)(nil)).Elem()
}

func (e NsgProtocol) ToNsgProtocolOutput() NsgProtocolOutput {
	return pulumi.ToOutput(e).(NsgProtocolOutput)
}

func (e NsgProtocol) ToNsgProtocolOutputWithContext(ctx context.Context) NsgProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NsgProtocolOutput)
}

func (e NsgProtocol) ToNsgProtocolPtrOutput() NsgProtocolPtrOutput {
	return e.ToNsgProtocolPtrOutputWithContext(context.Background())
}

func (e NsgProtocol) ToNsgProtocolPtrOutputWithContext(ctx context.Context) NsgProtocolPtrOutput {
	return NsgProtocol(e).ToNsgProtocolOutputWithContext(ctx).ToNsgProtocolPtrOutputWithContext(ctx)
}

func (e NsgProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NsgProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NsgProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NsgProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NsgProtocolOutput struct{ *pulumi.OutputState }

func (NsgProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgProtocol)(nil)).Elem()
}

func (o NsgProtocolOutput) ToNsgProtocolOutput() NsgProtocolOutput {
	return o
}

func (o NsgProtocolOutput) ToNsgProtocolOutputWithContext(ctx context.Context) NsgProtocolOutput {
	return o
}

func (o NsgProtocolOutput) ToNsgProtocolPtrOutput() NsgProtocolPtrOutput {
	return o.ToNsgProtocolPtrOutputWithContext(context.Background())
}

func (o NsgProtocolOutput) ToNsgProtocolPtrOutputWithContext(ctx context.Context) NsgProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NsgProtocol) *NsgProtocol {
		return &v
	}).(NsgProtocolPtrOutput)
}

func (o NsgProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NsgProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NsgProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NsgProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NsgProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NsgProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NsgProtocolPtrOutput struct{ *pulumi.OutputState }

func (NsgProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgProtocol)(nil)).Elem()
}

func (o NsgProtocolPtrOutput) ToNsgProtocolPtrOutput() NsgProtocolPtrOutput {
	return o
}

func (o NsgProtocolPtrOutput) ToNsgProtocolPtrOutputWithContext(ctx context.Context) NsgProtocolPtrOutput {
	return o
}

func (o NsgProtocolPtrOutput) Elem() NsgProtocolOutput {
	return o.ApplyT(func(v *NsgProtocol) NsgProtocol {
		if v != nil {
			return *v
		}
		var ret NsgProtocol
		return ret
	}).(NsgProtocolOutput)
}

func (o NsgProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NsgProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NsgProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NsgProtocolInput is an input type that accepts values of the NsgProtocol enum
// A concrete instance of `NsgProtocolInput` can be one of the following:
//
//	NsgProtocolHttp
//	NsgProtocolHttps
//	NsgProtocolTcp
//	NsgProtocolUdp
//	NsgProtocolIcmp
//	NsgProtocolAh
//	NsgProtocolEsp
type NsgProtocolInput interface {
	pulumi.Input

	ToNsgProtocolOutput() NsgProtocolOutput
	ToNsgProtocolOutputWithContext(context.Context) NsgProtocolOutput
}

var nsgProtocolPtrType = reflect.TypeOf((**NsgProtocol)(nil)).Elem()

type NsgProtocolPtrInput interface {
	pulumi.Input

	ToNsgProtocolPtrOutput() NsgProtocolPtrOutput
	ToNsgProtocolPtrOutputWithContext(context.Context) NsgProtocolPtrOutput
}

type nsgProtocolPtr string

func NsgProtocolPtr(v string) NsgProtocolPtrInput {
	return (*nsgProtocolPtr)(&v)
}

func (*nsgProtocolPtr) ElementType() reflect.Type {
	return nsgProtocolPtrType
}

func (in *nsgProtocolPtr) ToNsgProtocolPtrOutput() NsgProtocolPtrOutput {
	return pulumi.ToOutput(in).(NsgProtocolPtrOutput)
}

func (in *nsgProtocolPtr) ToNsgProtocolPtrOutputWithContext(ctx context.Context) NsgProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NsgProtocolPtrOutput)
}

func (in *nsgProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*NsgProtocol] {
	return pulumix.Output[*NsgProtocol]{
		OutputState: in.ToNsgProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// Enable or Disable apply network policies on private end point in the subnet.
type PrivateEndpointNetworkPolicies string

const (
	PrivateEndpointNetworkPoliciesEnabled  = PrivateEndpointNetworkPolicies("enabled")
	PrivateEndpointNetworkPoliciesDisabled = PrivateEndpointNetworkPolicies("disabled")
)

func (PrivateEndpointNetworkPolicies) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointNetworkPolicies)(nil)).Elem()
}

func (e PrivateEndpointNetworkPolicies) ToPrivateEndpointNetworkPoliciesOutput() PrivateEndpointNetworkPoliciesOutput {
	return pulumi.ToOutput(e).(PrivateEndpointNetworkPoliciesOutput)
}

func (e PrivateEndpointNetworkPolicies) ToPrivateEndpointNetworkPoliciesOutputWithContext(ctx context.Context) PrivateEndpointNetworkPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointNetworkPoliciesOutput)
}

func (e PrivateEndpointNetworkPolicies) ToPrivateEndpointNetworkPoliciesPtrOutput() PrivateEndpointNetworkPoliciesPtrOutput {
	return e.ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointNetworkPolicies) ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateEndpointNetworkPoliciesPtrOutput {
	return PrivateEndpointNetworkPolicies(e).ToPrivateEndpointNetworkPoliciesOutputWithContext(ctx).ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(ctx)
}

func (e PrivateEndpointNetworkPolicies) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointNetworkPolicies) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointNetworkPolicies) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointNetworkPolicies) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointNetworkPoliciesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointNetworkPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointNetworkPolicies)(nil)).Elem()
}

func (o PrivateEndpointNetworkPoliciesOutput) ToPrivateEndpointNetworkPoliciesOutput() PrivateEndpointNetworkPoliciesOutput {
	return o
}

func (o PrivateEndpointNetworkPoliciesOutput) ToPrivateEndpointNetworkPoliciesOutputWithContext(ctx context.Context) PrivateEndpointNetworkPoliciesOutput {
	return o
}

func (o PrivateEndpointNetworkPoliciesOutput) ToPrivateEndpointNetworkPoliciesPtrOutput() PrivateEndpointNetworkPoliciesPtrOutput {
	return o.ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointNetworkPoliciesOutput) ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateEndpointNetworkPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointNetworkPolicies) *PrivateEndpointNetworkPolicies {
		return &v
	}).(PrivateEndpointNetworkPoliciesPtrOutput)
}

func (o PrivateEndpointNetworkPoliciesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointNetworkPoliciesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointNetworkPolicies) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointNetworkPoliciesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointNetworkPoliciesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointNetworkPolicies) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointNetworkPoliciesPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointNetworkPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointNetworkPolicies)(nil)).Elem()
}

func (o PrivateEndpointNetworkPoliciesPtrOutput) ToPrivateEndpointNetworkPoliciesPtrOutput() PrivateEndpointNetworkPoliciesPtrOutput {
	return o
}

func (o PrivateEndpointNetworkPoliciesPtrOutput) ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateEndpointNetworkPoliciesPtrOutput {
	return o
}

func (o PrivateEndpointNetworkPoliciesPtrOutput) Elem() PrivateEndpointNetworkPoliciesOutput {
	return o.ApplyT(func(v *PrivateEndpointNetworkPolicies) PrivateEndpointNetworkPolicies {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointNetworkPolicies
		return ret
	}).(PrivateEndpointNetworkPoliciesOutput)
}

func (o PrivateEndpointNetworkPoliciesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointNetworkPoliciesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointNetworkPolicies) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointNetworkPoliciesInput is an input type that accepts values of the PrivateEndpointNetworkPolicies enum
// A concrete instance of `PrivateEndpointNetworkPoliciesInput` can be one of the following:
//
//	PrivateEndpointNetworkPoliciesEnabled
//	PrivateEndpointNetworkPoliciesDisabled
type PrivateEndpointNetworkPoliciesInput interface {
	pulumi.Input

	ToPrivateEndpointNetworkPoliciesOutput() PrivateEndpointNetworkPoliciesOutput
	ToPrivateEndpointNetworkPoliciesOutputWithContext(context.Context) PrivateEndpointNetworkPoliciesOutput
}

var privateEndpointNetworkPoliciesPtrType = reflect.TypeOf((**PrivateEndpointNetworkPolicies)(nil)).Elem()

type PrivateEndpointNetworkPoliciesPtrInput interface {
	pulumi.Input

	ToPrivateEndpointNetworkPoliciesPtrOutput() PrivateEndpointNetworkPoliciesPtrOutput
	ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(context.Context) PrivateEndpointNetworkPoliciesPtrOutput
}

type privateEndpointNetworkPoliciesPtr string

func PrivateEndpointNetworkPoliciesPtr(v string) PrivateEndpointNetworkPoliciesPtrInput {
	return (*privateEndpointNetworkPoliciesPtr)(&v)
}

func (*privateEndpointNetworkPoliciesPtr) ElementType() reflect.Type {
	return privateEndpointNetworkPoliciesPtrType
}

func (in *privateEndpointNetworkPoliciesPtr) ToPrivateEndpointNetworkPoliciesPtrOutput() PrivateEndpointNetworkPoliciesPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointNetworkPoliciesPtrOutput)
}

func (in *privateEndpointNetworkPoliciesPtr) ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateEndpointNetworkPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointNetworkPoliciesPtrOutput)
}

func (in *privateEndpointNetworkPoliciesPtr) ToOutput(ctx context.Context) pulumix.Output[*PrivateEndpointNetworkPolicies] {
	return pulumix.Output[*PrivateEndpointNetworkPolicies]{
		OutputState: in.ToPrivateEndpointNetworkPoliciesPtrOutputWithContext(ctx).OutputState,
	}
}

// Enable or Disable apply network policies on private link service in the subnet.
type PrivateLinkServiceNetworkPolicies string

const (
	PrivateLinkServiceNetworkPoliciesEnabled  = PrivateLinkServiceNetworkPolicies("enabled")
	PrivateLinkServiceNetworkPoliciesDisabled = PrivateLinkServiceNetworkPolicies("disabled")
)

func (PrivateLinkServiceNetworkPolicies) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceNetworkPolicies)(nil)).Elem()
}

func (e PrivateLinkServiceNetworkPolicies) ToPrivateLinkServiceNetworkPoliciesOutput() PrivateLinkServiceNetworkPoliciesOutput {
	return pulumi.ToOutput(e).(PrivateLinkServiceNetworkPoliciesOutput)
}

func (e PrivateLinkServiceNetworkPolicies) ToPrivateLinkServiceNetworkPoliciesOutputWithContext(ctx context.Context) PrivateLinkServiceNetworkPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateLinkServiceNetworkPoliciesOutput)
}

func (e PrivateLinkServiceNetworkPolicies) ToPrivateLinkServiceNetworkPoliciesPtrOutput() PrivateLinkServiceNetworkPoliciesPtrOutput {
	return e.ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(context.Background())
}

func (e PrivateLinkServiceNetworkPolicies) ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateLinkServiceNetworkPoliciesPtrOutput {
	return PrivateLinkServiceNetworkPolicies(e).ToPrivateLinkServiceNetworkPoliciesOutputWithContext(ctx).ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(ctx)
}

func (e PrivateLinkServiceNetworkPolicies) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkServiceNetworkPolicies) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkServiceNetworkPolicies) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateLinkServiceNetworkPolicies) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateLinkServiceNetworkPoliciesOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceNetworkPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceNetworkPolicies)(nil)).Elem()
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToPrivateLinkServiceNetworkPoliciesOutput() PrivateLinkServiceNetworkPoliciesOutput {
	return o
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToPrivateLinkServiceNetworkPoliciesOutputWithContext(ctx context.Context) PrivateLinkServiceNetworkPoliciesOutput {
	return o
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToPrivateLinkServiceNetworkPoliciesPtrOutput() PrivateLinkServiceNetworkPoliciesPtrOutput {
	return o.ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateLinkServiceNetworkPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceNetworkPolicies) *PrivateLinkServiceNetworkPolicies {
		return &v
	}).(PrivateLinkServiceNetworkPoliciesPtrOutput)
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkServiceNetworkPolicies) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceNetworkPoliciesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkServiceNetworkPolicies) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceNetworkPoliciesPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceNetworkPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceNetworkPolicies)(nil)).Elem()
}

func (o PrivateLinkServiceNetworkPoliciesPtrOutput) ToPrivateLinkServiceNetworkPoliciesPtrOutput() PrivateLinkServiceNetworkPoliciesPtrOutput {
	return o
}

func (o PrivateLinkServiceNetworkPoliciesPtrOutput) ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateLinkServiceNetworkPoliciesPtrOutput {
	return o
}

func (o PrivateLinkServiceNetworkPoliciesPtrOutput) Elem() PrivateLinkServiceNetworkPoliciesOutput {
	return o.ApplyT(func(v *PrivateLinkServiceNetworkPolicies) PrivateLinkServiceNetworkPolicies {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceNetworkPolicies
		return ret
	}).(PrivateLinkServiceNetworkPoliciesOutput)
}

func (o PrivateLinkServiceNetworkPoliciesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceNetworkPoliciesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateLinkServiceNetworkPolicies) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkServiceNetworkPoliciesInput is an input type that accepts values of the PrivateLinkServiceNetworkPolicies enum
// A concrete instance of `PrivateLinkServiceNetworkPoliciesInput` can be one of the following:
//
//	PrivateLinkServiceNetworkPoliciesEnabled
//	PrivateLinkServiceNetworkPoliciesDisabled
type PrivateLinkServiceNetworkPoliciesInput interface {
	pulumi.Input

	ToPrivateLinkServiceNetworkPoliciesOutput() PrivateLinkServiceNetworkPoliciesOutput
	ToPrivateLinkServiceNetworkPoliciesOutputWithContext(context.Context) PrivateLinkServiceNetworkPoliciesOutput
}

var privateLinkServiceNetworkPoliciesPtrType = reflect.TypeOf((**PrivateLinkServiceNetworkPolicies)(nil)).Elem()

type PrivateLinkServiceNetworkPoliciesPtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceNetworkPoliciesPtrOutput() PrivateLinkServiceNetworkPoliciesPtrOutput
	ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(context.Context) PrivateLinkServiceNetworkPoliciesPtrOutput
}

type privateLinkServiceNetworkPoliciesPtr string

func PrivateLinkServiceNetworkPoliciesPtr(v string) PrivateLinkServiceNetworkPoliciesPtrInput {
	return (*privateLinkServiceNetworkPoliciesPtr)(&v)
}

func (*privateLinkServiceNetworkPoliciesPtr) ElementType() reflect.Type {
	return privateLinkServiceNetworkPoliciesPtrType
}

func (in *privateLinkServiceNetworkPoliciesPtr) ToPrivateLinkServiceNetworkPoliciesPtrOutput() PrivateLinkServiceNetworkPoliciesPtrOutput {
	return pulumi.ToOutput(in).(PrivateLinkServiceNetworkPoliciesPtrOutput)
}

func (in *privateLinkServiceNetworkPoliciesPtr) ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(ctx context.Context) PrivateLinkServiceNetworkPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateLinkServiceNetworkPoliciesPtrOutput)
}

func (in *privateLinkServiceNetworkPoliciesPtr) ToOutput(ctx context.Context) pulumix.Output[*PrivateLinkServiceNetworkPolicies] {
	return pulumix.Output[*PrivateLinkServiceNetworkPolicies]{
		OutputState: in.ToPrivateLinkServiceNetworkPoliciesPtrOutputWithContext(ctx).OutputState,
	}
}

// the reference to the load balancer probe used by the load balancing rule.
type ProbeProtocol string

const (
	ProbeProtocolTcp   = ProbeProtocol("tcp")
	ProbeProtocolHttp  = ProbeProtocol("http")
	ProbeProtocolHttps = ProbeProtocol("https")
)

func (ProbeProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeProtocol)(nil)).Elem()
}

func (e ProbeProtocol) ToProbeProtocolOutput() ProbeProtocolOutput {
	return pulumi.ToOutput(e).(ProbeProtocolOutput)
}

func (e ProbeProtocol) ToProbeProtocolOutputWithContext(ctx context.Context) ProbeProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProbeProtocolOutput)
}

func (e ProbeProtocol) ToProbeProtocolPtrOutput() ProbeProtocolPtrOutput {
	return e.ToProbeProtocolPtrOutputWithContext(context.Background())
}

func (e ProbeProtocol) ToProbeProtocolPtrOutputWithContext(ctx context.Context) ProbeProtocolPtrOutput {
	return ProbeProtocol(e).ToProbeProtocolOutputWithContext(ctx).ToProbeProtocolPtrOutputWithContext(ctx)
}

func (e ProbeProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProbeProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProbeProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProbeProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProbeProtocolOutput struct{ *pulumi.OutputState }

func (ProbeProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeProtocol)(nil)).Elem()
}

func (o ProbeProtocolOutput) ToProbeProtocolOutput() ProbeProtocolOutput {
	return o
}

func (o ProbeProtocolOutput) ToProbeProtocolOutputWithContext(ctx context.Context) ProbeProtocolOutput {
	return o
}

func (o ProbeProtocolOutput) ToProbeProtocolPtrOutput() ProbeProtocolPtrOutput {
	return o.ToProbeProtocolPtrOutputWithContext(context.Background())
}

func (o ProbeProtocolOutput) ToProbeProtocolPtrOutputWithContext(ctx context.Context) ProbeProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProbeProtocol) *ProbeProtocol {
		return &v
	}).(ProbeProtocolPtrOutput)
}

func (o ProbeProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProbeProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProbeProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProbeProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProbeProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProbeProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProbeProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProbeProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeProtocol)(nil)).Elem()
}

func (o ProbeProtocolPtrOutput) ToProbeProtocolPtrOutput() ProbeProtocolPtrOutput {
	return o
}

func (o ProbeProtocolPtrOutput) ToProbeProtocolPtrOutputWithContext(ctx context.Context) ProbeProtocolPtrOutput {
	return o
}

func (o ProbeProtocolPtrOutput) Elem() ProbeProtocolOutput {
	return o.ApplyT(func(v *ProbeProtocol) ProbeProtocol {
		if v != nil {
			return *v
		}
		var ret ProbeProtocol
		return ret
	}).(ProbeProtocolOutput)
}

func (o ProbeProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProbeProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProbeProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProbeProtocolInput is an input type that accepts values of the ProbeProtocol enum
// A concrete instance of `ProbeProtocolInput` can be one of the following:
//
//	ProbeProtocolTcp
//	ProbeProtocolHttp
//	ProbeProtocolHttps
type ProbeProtocolInput interface {
	pulumi.Input

	ToProbeProtocolOutput() ProbeProtocolOutput
	ToProbeProtocolOutputWithContext(context.Context) ProbeProtocolOutput
}

var probeProtocolPtrType = reflect.TypeOf((**ProbeProtocol)(nil)).Elem()

type ProbeProtocolPtrInput interface {
	pulumi.Input

	ToProbeProtocolPtrOutput() ProbeProtocolPtrOutput
	ToProbeProtocolPtrOutputWithContext(context.Context) ProbeProtocolPtrOutput
}

type probeProtocolPtr string

func ProbeProtocolPtr(v string) ProbeProtocolPtrInput {
	return (*probeProtocolPtr)(&v)
}

func (*probeProtocolPtr) ElementType() reflect.Type {
	return probeProtocolPtrType
}

func (in *probeProtocolPtr) ToProbeProtocolPtrOutput() ProbeProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProbeProtocolPtrOutput)
}

func (in *probeProtocolPtr) ToProbeProtocolPtrOutputWithContext(ctx context.Context) ProbeProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProbeProtocolPtrOutput)
}

func (in *probeProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*ProbeProtocol] {
	return pulumix.Output[*ProbeProtocol]{
		OutputState: in.ToProbeProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// The reference to the transport protocol used by the load balancing rule.
type Protocol string

const (
	ProtocolTcp = Protocol("tcp")
	ProtocolUdp = Protocol("udp")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts values of the Protocol enum
// A concrete instance of `ProtocolInput` can be one of the following:
//
//	ProtocolTcp
//	ProtocolUdp
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToOutput(ctx context.Context) pulumix.Output[*Protocol] {
	return pulumix.Output[*Protocol]{
		OutputState: in.ToProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// Sku Name.
type SkuName string

const (
	// Basic requires a minimum of 3 nodes and allows only 1 node type.
	SkuNameBasic = SkuName("Basic")
	// Requires a minimum of 5 nodes and allows 1 or more node type.
	SkuNameStandard = SkuName("Standard")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameBasic
//	SkuNameStandard
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*SkuName] {
	return pulumix.Output[*SkuName]{
		OutputState: in.ToSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates the update mode for Cross Az clusters.
type ZonalUpdateMode string

const (
	// The cluster will use 5 upgrade domains for Cross Az Node types.
	ZonalUpdateModeStandard = ZonalUpdateMode("Standard")
	// The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments.
	ZonalUpdateModeFast = ZonalUpdateMode("Fast")
)

func (ZonalUpdateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonalUpdateMode)(nil)).Elem()
}

func (e ZonalUpdateMode) ToZonalUpdateModeOutput() ZonalUpdateModeOutput {
	return pulumi.ToOutput(e).(ZonalUpdateModeOutput)
}

func (e ZonalUpdateMode) ToZonalUpdateModeOutputWithContext(ctx context.Context) ZonalUpdateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ZonalUpdateModeOutput)
}

func (e ZonalUpdateMode) ToZonalUpdateModePtrOutput() ZonalUpdateModePtrOutput {
	return e.ToZonalUpdateModePtrOutputWithContext(context.Background())
}

func (e ZonalUpdateMode) ToZonalUpdateModePtrOutputWithContext(ctx context.Context) ZonalUpdateModePtrOutput {
	return ZonalUpdateMode(e).ToZonalUpdateModeOutputWithContext(ctx).ToZonalUpdateModePtrOutputWithContext(ctx)
}

func (e ZonalUpdateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ZonalUpdateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ZonalUpdateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ZonalUpdateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ZonalUpdateModeOutput struct{ *pulumi.OutputState }

func (ZonalUpdateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonalUpdateMode)(nil)).Elem()
}

func (o ZonalUpdateModeOutput) ToZonalUpdateModeOutput() ZonalUpdateModeOutput {
	return o
}

func (o ZonalUpdateModeOutput) ToZonalUpdateModeOutputWithContext(ctx context.Context) ZonalUpdateModeOutput {
	return o
}

func (o ZonalUpdateModeOutput) ToZonalUpdateModePtrOutput() ZonalUpdateModePtrOutput {
	return o.ToZonalUpdateModePtrOutputWithContext(context.Background())
}

func (o ZonalUpdateModeOutput) ToZonalUpdateModePtrOutputWithContext(ctx context.Context) ZonalUpdateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZonalUpdateMode) *ZonalUpdateMode {
		return &v
	}).(ZonalUpdateModePtrOutput)
}

func (o ZonalUpdateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ZonalUpdateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ZonalUpdateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ZonalUpdateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZonalUpdateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ZonalUpdateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ZonalUpdateModePtrOutput struct{ *pulumi.OutputState }

func (ZonalUpdateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalUpdateMode)(nil)).Elem()
}

func (o ZonalUpdateModePtrOutput) ToZonalUpdateModePtrOutput() ZonalUpdateModePtrOutput {
	return o
}

func (o ZonalUpdateModePtrOutput) ToZonalUpdateModePtrOutputWithContext(ctx context.Context) ZonalUpdateModePtrOutput {
	return o
}

func (o ZonalUpdateModePtrOutput) Elem() ZonalUpdateModeOutput {
	return o.ApplyT(func(v *ZonalUpdateMode) ZonalUpdateMode {
		if v != nil {
			return *v
		}
		var ret ZonalUpdateMode
		return ret
	}).(ZonalUpdateModeOutput)
}

func (o ZonalUpdateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZonalUpdateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ZonalUpdateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ZonalUpdateModeInput is an input type that accepts values of the ZonalUpdateMode enum
// A concrete instance of `ZonalUpdateModeInput` can be one of the following:
//
//	ZonalUpdateModeStandard
//	ZonalUpdateModeFast
type ZonalUpdateModeInput interface {
	pulumi.Input

	ToZonalUpdateModeOutput() ZonalUpdateModeOutput
	ToZonalUpdateModeOutputWithContext(context.Context) ZonalUpdateModeOutput
}

var zonalUpdateModePtrType = reflect.TypeOf((**ZonalUpdateMode)(nil)).Elem()

type ZonalUpdateModePtrInput interface {
	pulumi.Input

	ToZonalUpdateModePtrOutput() ZonalUpdateModePtrOutput
	ToZonalUpdateModePtrOutputWithContext(context.Context) ZonalUpdateModePtrOutput
}

type zonalUpdateModePtr string

func ZonalUpdateModePtr(v string) ZonalUpdateModePtrInput {
	return (*zonalUpdateModePtr)(&v)
}

func (*zonalUpdateModePtr) ElementType() reflect.Type {
	return zonalUpdateModePtrType
}

func (in *zonalUpdateModePtr) ToZonalUpdateModePtrOutput() ZonalUpdateModePtrOutput {
	return pulumi.ToOutput(in).(ZonalUpdateModePtrOutput)
}

func (in *zonalUpdateModePtr) ToZonalUpdateModePtrOutputWithContext(ctx context.Context) ZonalUpdateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ZonalUpdateModePtrOutput)
}

func (in *zonalUpdateModePtr) ToOutput(ctx context.Context) pulumix.Output[*ZonalUpdateMode] {
	return pulumix.Output[*ZonalUpdateMode]{
		OutputState: in.ToZonalUpdateModePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AccessOutput{})
	pulumi.RegisterOutputType(AccessPtrOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeCadenceOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeCadencePtrOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeModeOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeModePtrOutput{})
	pulumi.RegisterOutputType(DirectionOutput{})
	pulumi.RegisterOutputType(DirectionPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddOnFeatureOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddOnFeaturePtrOutput{})
	pulumi.RegisterOutputType(NsgProtocolOutput{})
	pulumi.RegisterOutputType(NsgProtocolPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointNetworkPoliciesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointNetworkPoliciesPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceNetworkPoliciesOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceNetworkPoliciesPtrOutput{})
	pulumi.RegisterOutputType(ProbeProtocolOutput{})
	pulumi.RegisterOutputType(ProbeProtocolPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(ZonalUpdateModeOutput{})
	pulumi.RegisterOutputType(ZonalUpdateModePtrOutput{})
}
