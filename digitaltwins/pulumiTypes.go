// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitaltwins

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
type AzureDataExplorerConnectionProperties struct {
	// The name of the Azure Data Explorer database.
	AdxDatabaseName string `pulumi:"adxDatabaseName"`
	// The URI of the Azure Data Explorer endpoint.
	AdxEndpointUri string `pulumi:"adxEndpointUri"`
	// The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
	AdxRelationshipLifecycleEventsTableName *string `pulumi:"adxRelationshipLifecycleEventsTableName"`
	// The resource ID of the Azure Data Explorer cluster.
	AdxResourceId string `pulumi:"adxResourceId"`
	// The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
	AdxTableName *string `pulumi:"adxTableName"`
	// The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
	AdxTwinLifecycleEventsTableName *string `pulumi:"adxTwinLifecycleEventsTableName"`
	// The type of time series connection resource.
	// Expected value is 'AzureDataExplorer'.
	ConnectionType string `pulumi:"connectionType"`
	// The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
	EventHubConsumerGroup *string `pulumi:"eventHubConsumerGroup"`
	// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
	EventHubEndpointUri string `pulumi:"eventHubEndpointUri"`
	// The EventHub name in the EventHub namespace for identity-based authentication.
	EventHubEntityPath string `pulumi:"eventHubEntityPath"`
	// The resource ID of the EventHub namespace.
	EventHubNamespaceResourceId string `pulumi:"eventHubNamespaceResourceId"`
	// Managed identity properties for the time series database connection resource.
	Identity *ManagedIdentityReference `pulumi:"identity"`
	// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
	RecordPropertyAndItemRemovals *string `pulumi:"recordPropertyAndItemRemovals"`
}

// Defaults sets the appropriate defaults for AzureDataExplorerConnectionProperties
func (val *AzureDataExplorerConnectionProperties) Defaults() *AzureDataExplorerConnectionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AdxTableName == nil {
		adxTableName_ := "AdtPropertyEvents"
		tmp.AdxTableName = &adxTableName_
	}
	if tmp.EventHubConsumerGroup == nil {
		eventHubConsumerGroup_ := "$Default"
		tmp.EventHubConsumerGroup = &eventHubConsumerGroup_
	}
	if tmp.RecordPropertyAndItemRemovals == nil {
		recordPropertyAndItemRemovals_ := "false"
		tmp.RecordPropertyAndItemRemovals = &recordPropertyAndItemRemovals_
	}
	return &tmp
}

// AzureDataExplorerConnectionPropertiesInput is an input type that accepts AzureDataExplorerConnectionPropertiesArgs and AzureDataExplorerConnectionPropertiesOutput values.
// You can construct a concrete instance of `AzureDataExplorerConnectionPropertiesInput` via:
//
//	AzureDataExplorerConnectionPropertiesArgs{...}
type AzureDataExplorerConnectionPropertiesInput interface {
	pulumi.Input

	ToAzureDataExplorerConnectionPropertiesOutput() AzureDataExplorerConnectionPropertiesOutput
	ToAzureDataExplorerConnectionPropertiesOutputWithContext(context.Context) AzureDataExplorerConnectionPropertiesOutput
}

// Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
type AzureDataExplorerConnectionPropertiesArgs struct {
	// The name of the Azure Data Explorer database.
	AdxDatabaseName pulumi.StringInput `pulumi:"adxDatabaseName"`
	// The URI of the Azure Data Explorer endpoint.
	AdxEndpointUri pulumi.StringInput `pulumi:"adxEndpointUri"`
	// The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
	AdxRelationshipLifecycleEventsTableName pulumi.StringPtrInput `pulumi:"adxRelationshipLifecycleEventsTableName"`
	// The resource ID of the Azure Data Explorer cluster.
	AdxResourceId pulumi.StringInput `pulumi:"adxResourceId"`
	// The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
	AdxTableName pulumi.StringPtrInput `pulumi:"adxTableName"`
	// The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
	AdxTwinLifecycleEventsTableName pulumi.StringPtrInput `pulumi:"adxTwinLifecycleEventsTableName"`
	// The type of time series connection resource.
	// Expected value is 'AzureDataExplorer'.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
	EventHubConsumerGroup pulumi.StringPtrInput `pulumi:"eventHubConsumerGroup"`
	// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
	EventHubEndpointUri pulumi.StringInput `pulumi:"eventHubEndpointUri"`
	// The EventHub name in the EventHub namespace for identity-based authentication.
	EventHubEntityPath pulumi.StringInput `pulumi:"eventHubEntityPath"`
	// The resource ID of the EventHub namespace.
	EventHubNamespaceResourceId pulumi.StringInput `pulumi:"eventHubNamespaceResourceId"`
	// Managed identity properties for the time series database connection resource.
	Identity ManagedIdentityReferencePtrInput `pulumi:"identity"`
	// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
	RecordPropertyAndItemRemovals pulumi.StringPtrInput `pulumi:"recordPropertyAndItemRemovals"`
}

// Defaults sets the appropriate defaults for AzureDataExplorerConnectionPropertiesArgs
func (val *AzureDataExplorerConnectionPropertiesArgs) Defaults() *AzureDataExplorerConnectionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AdxTableName == nil {
		tmp.AdxTableName = pulumi.StringPtr("AdtPropertyEvents")
	}
	if tmp.EventHubConsumerGroup == nil {
		tmp.EventHubConsumerGroup = pulumi.StringPtr("$Default")
	}
	if tmp.RecordPropertyAndItemRemovals == nil {
		tmp.RecordPropertyAndItemRemovals = pulumi.StringPtr("false")
	}
	return &tmp
}
func (AzureDataExplorerConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataExplorerConnectionProperties)(nil)).Elem()
}

func (i AzureDataExplorerConnectionPropertiesArgs) ToAzureDataExplorerConnectionPropertiesOutput() AzureDataExplorerConnectionPropertiesOutput {
	return i.ToAzureDataExplorerConnectionPropertiesOutputWithContext(context.Background())
}

func (i AzureDataExplorerConnectionPropertiesArgs) ToAzureDataExplorerConnectionPropertiesOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataExplorerConnectionPropertiesOutput)
}

func (i AzureDataExplorerConnectionPropertiesArgs) ToAzureDataExplorerConnectionPropertiesPtrOutput() AzureDataExplorerConnectionPropertiesPtrOutput {
	return i.ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i AzureDataExplorerConnectionPropertiesArgs) ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataExplorerConnectionPropertiesOutput).ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(ctx)
}

// AzureDataExplorerConnectionPropertiesPtrInput is an input type that accepts AzureDataExplorerConnectionPropertiesArgs, AzureDataExplorerConnectionPropertiesPtr and AzureDataExplorerConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `AzureDataExplorerConnectionPropertiesPtrInput` via:
//
//	        AzureDataExplorerConnectionPropertiesArgs{...}
//
//	or:
//
//	        nil
type AzureDataExplorerConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToAzureDataExplorerConnectionPropertiesPtrOutput() AzureDataExplorerConnectionPropertiesPtrOutput
	ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(context.Context) AzureDataExplorerConnectionPropertiesPtrOutput
}

type azureDataExplorerConnectionPropertiesPtrType AzureDataExplorerConnectionPropertiesArgs

func AzureDataExplorerConnectionPropertiesPtr(v *AzureDataExplorerConnectionPropertiesArgs) AzureDataExplorerConnectionPropertiesPtrInput {
	return (*azureDataExplorerConnectionPropertiesPtrType)(v)
}

func (*azureDataExplorerConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDataExplorerConnectionProperties)(nil)).Elem()
}

func (i *azureDataExplorerConnectionPropertiesPtrType) ToAzureDataExplorerConnectionPropertiesPtrOutput() AzureDataExplorerConnectionPropertiesPtrOutput {
	return i.ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *azureDataExplorerConnectionPropertiesPtrType) ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataExplorerConnectionPropertiesPtrOutput)
}

// Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
type AzureDataExplorerConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (AzureDataExplorerConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataExplorerConnectionProperties)(nil)).Elem()
}

func (o AzureDataExplorerConnectionPropertiesOutput) ToAzureDataExplorerConnectionPropertiesOutput() AzureDataExplorerConnectionPropertiesOutput {
	return o
}

func (o AzureDataExplorerConnectionPropertiesOutput) ToAzureDataExplorerConnectionPropertiesOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesOutput {
	return o
}

func (o AzureDataExplorerConnectionPropertiesOutput) ToAzureDataExplorerConnectionPropertiesPtrOutput() AzureDataExplorerConnectionPropertiesPtrOutput {
	return o.ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o AzureDataExplorerConnectionPropertiesOutput) ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDataExplorerConnectionProperties) *AzureDataExplorerConnectionProperties {
		return &v
	}).(AzureDataExplorerConnectionPropertiesPtrOutput)
}

// The name of the Azure Data Explorer database.
func (o AzureDataExplorerConnectionPropertiesOutput) AdxDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.AdxDatabaseName }).(pulumi.StringOutput)
}

// The URI of the Azure Data Explorer endpoint.
func (o AzureDataExplorerConnectionPropertiesOutput) AdxEndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.AdxEndpointUri }).(pulumi.StringOutput)
}

// The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
func (o AzureDataExplorerConnectionPropertiesOutput) AdxRelationshipLifecycleEventsTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) *string {
		return v.AdxRelationshipLifecycleEventsTableName
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Azure Data Explorer cluster.
func (o AzureDataExplorerConnectionPropertiesOutput) AdxResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.AdxResourceId }).(pulumi.StringOutput)
}

// The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
func (o AzureDataExplorerConnectionPropertiesOutput) AdxTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) *string { return v.AdxTableName }).(pulumi.StringPtrOutput)
}

// The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
func (o AzureDataExplorerConnectionPropertiesOutput) AdxTwinLifecycleEventsTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) *string { return v.AdxTwinLifecycleEventsTableName }).(pulumi.StringPtrOutput)
}

// The type of time series connection resource.
// Expected value is 'AzureDataExplorer'.
func (o AzureDataExplorerConnectionPropertiesOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
func (o AzureDataExplorerConnectionPropertiesOutput) EventHubConsumerGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) *string { return v.EventHubConsumerGroup }).(pulumi.StringPtrOutput)
}

// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
func (o AzureDataExplorerConnectionPropertiesOutput) EventHubEndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.EventHubEndpointUri }).(pulumi.StringOutput)
}

// The EventHub name in the EventHub namespace for identity-based authentication.
func (o AzureDataExplorerConnectionPropertiesOutput) EventHubEntityPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.EventHubEntityPath }).(pulumi.StringOutput)
}

// The resource ID of the EventHub namespace.
func (o AzureDataExplorerConnectionPropertiesOutput) EventHubNamespaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) string { return v.EventHubNamespaceResourceId }).(pulumi.StringOutput)
}

// Managed identity properties for the time series database connection resource.
func (o AzureDataExplorerConnectionPropertiesOutput) Identity() ManagedIdentityReferencePtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) *ManagedIdentityReference { return v.Identity }).(ManagedIdentityReferencePtrOutput)
}

// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
func (o AzureDataExplorerConnectionPropertiesOutput) RecordPropertyAndItemRemovals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionProperties) *string { return v.RecordPropertyAndItemRemovals }).(pulumi.StringPtrOutput)
}

type AzureDataExplorerConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AzureDataExplorerConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDataExplorerConnectionProperties)(nil)).Elem()
}

func (o AzureDataExplorerConnectionPropertiesPtrOutput) ToAzureDataExplorerConnectionPropertiesPtrOutput() AzureDataExplorerConnectionPropertiesPtrOutput {
	return o
}

func (o AzureDataExplorerConnectionPropertiesPtrOutput) ToAzureDataExplorerConnectionPropertiesPtrOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesPtrOutput {
	return o
}

func (o AzureDataExplorerConnectionPropertiesPtrOutput) Elem() AzureDataExplorerConnectionPropertiesOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) AzureDataExplorerConnectionProperties {
		if v != nil {
			return *v
		}
		var ret AzureDataExplorerConnectionProperties
		return ret
	}).(AzureDataExplorerConnectionPropertiesOutput)
}

// The name of the Azure Data Explorer database.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) AdxDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AdxDatabaseName
	}).(pulumi.StringPtrOutput)
}

// The URI of the Azure Data Explorer endpoint.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) AdxEndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AdxEndpointUri
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) AdxRelationshipLifecycleEventsTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdxRelationshipLifecycleEventsTableName
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Azure Data Explorer cluster.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) AdxResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AdxResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) AdxTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdxTableName
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) AdxTwinLifecycleEventsTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdxTwinLifecycleEventsTableName
	}).(pulumi.StringPtrOutput)
}

// The type of time series connection resource.
// Expected value is 'AzureDataExplorer'.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) EventHubConsumerGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.EventHubConsumerGroup
	}).(pulumi.StringPtrOutput)
}

// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
func (o AzureDataExplorerConnectionPropertiesPtrOutput) EventHubEndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EventHubEndpointUri
	}).(pulumi.StringPtrOutput)
}

// The EventHub name in the EventHub namespace for identity-based authentication.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) EventHubEntityPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EventHubEntityPath
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the EventHub namespace.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) EventHubNamespaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EventHubNamespaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Managed identity properties for the time series database connection resource.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) Identity() ManagedIdentityReferencePtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *ManagedIdentityReference {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(ManagedIdentityReferencePtrOutput)
}

// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
func (o AzureDataExplorerConnectionPropertiesPtrOutput) RecordPropertyAndItemRemovals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDataExplorerConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.RecordPropertyAndItemRemovals
	}).(pulumi.StringPtrOutput)
}

// Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
type AzureDataExplorerConnectionPropertiesResponse struct {
	// The name of the Azure Data Explorer database.
	AdxDatabaseName string `pulumi:"adxDatabaseName"`
	// The URI of the Azure Data Explorer endpoint.
	AdxEndpointUri string `pulumi:"adxEndpointUri"`
	// The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
	AdxRelationshipLifecycleEventsTableName *string `pulumi:"adxRelationshipLifecycleEventsTableName"`
	// The resource ID of the Azure Data Explorer cluster.
	AdxResourceId string `pulumi:"adxResourceId"`
	// The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
	AdxTableName *string `pulumi:"adxTableName"`
	// The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
	AdxTwinLifecycleEventsTableName *string `pulumi:"adxTwinLifecycleEventsTableName"`
	// The type of time series connection resource.
	// Expected value is 'AzureDataExplorer'.
	ConnectionType string `pulumi:"connectionType"`
	// The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
	EventHubConsumerGroup *string `pulumi:"eventHubConsumerGroup"`
	// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
	EventHubEndpointUri string `pulumi:"eventHubEndpointUri"`
	// The EventHub name in the EventHub namespace for identity-based authentication.
	EventHubEntityPath string `pulumi:"eventHubEntityPath"`
	// The resource ID of the EventHub namespace.
	EventHubNamespaceResourceId string `pulumi:"eventHubNamespaceResourceId"`
	// Managed identity properties for the time series database connection resource.
	Identity *ManagedIdentityReferenceResponse `pulumi:"identity"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
	RecordPropertyAndItemRemovals *string `pulumi:"recordPropertyAndItemRemovals"`
}

// Defaults sets the appropriate defaults for AzureDataExplorerConnectionPropertiesResponse
func (val *AzureDataExplorerConnectionPropertiesResponse) Defaults() *AzureDataExplorerConnectionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AdxTableName == nil {
		adxTableName_ := "AdtPropertyEvents"
		tmp.AdxTableName = &adxTableName_
	}
	if tmp.EventHubConsumerGroup == nil {
		eventHubConsumerGroup_ := "$Default"
		tmp.EventHubConsumerGroup = &eventHubConsumerGroup_
	}
	if tmp.RecordPropertyAndItemRemovals == nil {
		recordPropertyAndItemRemovals_ := "false"
		tmp.RecordPropertyAndItemRemovals = &recordPropertyAndItemRemovals_
	}
	return &tmp
}

// Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
type AzureDataExplorerConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureDataExplorerConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataExplorerConnectionPropertiesResponse)(nil)).Elem()
}

func (o AzureDataExplorerConnectionPropertiesResponseOutput) ToAzureDataExplorerConnectionPropertiesResponseOutput() AzureDataExplorerConnectionPropertiesResponseOutput {
	return o
}

func (o AzureDataExplorerConnectionPropertiesResponseOutput) ToAzureDataExplorerConnectionPropertiesResponseOutputWithContext(ctx context.Context) AzureDataExplorerConnectionPropertiesResponseOutput {
	return o
}

// The name of the Azure Data Explorer database.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) AdxDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.AdxDatabaseName }).(pulumi.StringOutput)
}

// The URI of the Azure Data Explorer endpoint.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) AdxEndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.AdxEndpointUri }).(pulumi.StringOutput)
}

// The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) AdxRelationshipLifecycleEventsTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) *string {
		return v.AdxRelationshipLifecycleEventsTableName
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Azure Data Explorer cluster.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) AdxResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.AdxResourceId }).(pulumi.StringOutput)
}

// The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) AdxTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) *string { return v.AdxTableName }).(pulumi.StringPtrOutput)
}

// The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) AdxTwinLifecycleEventsTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) *string {
		return v.AdxTwinLifecycleEventsTableName
	}).(pulumi.StringPtrOutput)
}

// The type of time series connection resource.
// Expected value is 'AzureDataExplorer'.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) EventHubConsumerGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) *string { return v.EventHubConsumerGroup }).(pulumi.StringPtrOutput)
}

// The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
func (o AzureDataExplorerConnectionPropertiesResponseOutput) EventHubEndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.EventHubEndpointUri }).(pulumi.StringOutput)
}

// The EventHub name in the EventHub namespace for identity-based authentication.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) EventHubEntityPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.EventHubEntityPath }).(pulumi.StringOutput)
}

// The resource ID of the EventHub namespace.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) EventHubNamespaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.EventHubNamespaceResourceId }).(pulumi.StringOutput)
}

// Managed identity properties for the time series database connection resource.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) Identity() ManagedIdentityReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) *ManagedIdentityReferenceResponse {
		return v.Identity
	}).(ManagedIdentityReferenceResponsePtrOutput)
}

// The provisioning state.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
func (o AzureDataExplorerConnectionPropertiesResponseOutput) RecordPropertyAndItemRemovals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataExplorerConnectionPropertiesResponse) *string { return v.RecordPropertyAndItemRemovals }).(pulumi.StringPtrOutput)
}

// The properties of a private endpoint connection.
type ConnectionProperties struct {
	// The list of group ids for the private endpoint connection.
	GroupIds []string `pulumi:"groupIds"`
	// The connection state.
	PrivateLinkServiceConnectionState *ConnectionPropertiesPrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// ConnectionPropertiesInput is an input type that accepts ConnectionPropertiesArgs and ConnectionPropertiesOutput values.
// You can construct a concrete instance of `ConnectionPropertiesInput` via:
//
//	ConnectionPropertiesArgs{...}
type ConnectionPropertiesInput interface {
	pulumi.Input

	ToConnectionPropertiesOutput() ConnectionPropertiesOutput
	ToConnectionPropertiesOutputWithContext(context.Context) ConnectionPropertiesOutput
}

// The properties of a private endpoint connection.
type ConnectionPropertiesArgs struct {
	// The list of group ids for the private endpoint connection.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// The connection state.
	PrivateLinkServiceConnectionState ConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
}

func (ConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProperties)(nil)).Elem()
}

func (i ConnectionPropertiesArgs) ToConnectionPropertiesOutput() ConnectionPropertiesOutput {
	return i.ToConnectionPropertiesOutputWithContext(context.Background())
}

func (i ConnectionPropertiesArgs) ToConnectionPropertiesOutputWithContext(ctx context.Context) ConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPropertiesOutput)
}

// The properties of a private endpoint connection.
type ConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProperties)(nil)).Elem()
}

func (o ConnectionPropertiesOutput) ToConnectionPropertiesOutput() ConnectionPropertiesOutput {
	return o
}

func (o ConnectionPropertiesOutput) ToConnectionPropertiesOutputWithContext(ctx context.Context) ConnectionPropertiesOutput {
	return o
}

// The list of group ids for the private endpoint connection.
func (o ConnectionPropertiesOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionProperties) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The connection state.
func (o ConnectionPropertiesOutput) PrivateLinkServiceConnectionState() ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v ConnectionProperties) *ConnectionPropertiesPrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

// The connection state.
type ConnectionPropertiesPrivateLinkServiceConnectionState struct {
	// Actions required for a private endpoint connection.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection.
	Description string `pulumi:"description"`
	// The status of a private endpoint connection.
	Status string `pulumi:"status"`
}

// ConnectionPropertiesPrivateLinkServiceConnectionStateInput is an input type that accepts ConnectionPropertiesPrivateLinkServiceConnectionStateArgs and ConnectionPropertiesPrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `ConnectionPropertiesPrivateLinkServiceConnectionStateInput` via:
//
//	ConnectionPropertiesPrivateLinkServiceConnectionStateArgs{...}
type ConnectionPropertiesPrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToConnectionPropertiesPrivateLinkServiceConnectionStateOutput() ConnectionPropertiesPrivateLinkServiceConnectionStateOutput
	ToConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStateOutput
}

// The connection state.
type ConnectionPropertiesPrivateLinkServiceConnectionStateArgs struct {
	// Actions required for a private endpoint connection.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of a private endpoint connection.
	Status pulumi.StringInput `pulumi:"status"`
}

func (ConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i ConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToConnectionPropertiesPrivateLinkServiceConnectionStateOutput() ConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return i.ToConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i ConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPropertiesPrivateLinkServiceConnectionStateOutput)
}

func (i ConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return i.ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i ConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPropertiesPrivateLinkServiceConnectionStateOutput).ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// ConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput is an input type that accepts ConnectionPropertiesPrivateLinkServiceConnectionStateArgs, ConnectionPropertiesPrivateLinkServiceConnectionStatePtr and ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `ConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput` via:
//
//	        ConnectionPropertiesPrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type ConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput
	ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput
}

type connectionPropertiesPrivateLinkServiceConnectionStatePtrType ConnectionPropertiesPrivateLinkServiceConnectionStateArgs

func ConnectionPropertiesPrivateLinkServiceConnectionStatePtr(v *ConnectionPropertiesPrivateLinkServiceConnectionStateArgs) ConnectionPropertiesPrivateLinkServiceConnectionStatePtrInput {
	return (*connectionPropertiesPrivateLinkServiceConnectionStatePtrType)(v)
}

func (*connectionPropertiesPrivateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *connectionPropertiesPrivateLinkServiceConnectionStatePtrType) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return i.ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *connectionPropertiesPrivateLinkServiceConnectionStatePtrType) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

// The connection state.
type ConnectionPropertiesPrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToConnectionPropertiesPrivateLinkServiceConnectionStateOutput() ConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return o
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToConnectionPropertiesPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return o
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionPropertiesPrivateLinkServiceConnectionState) *ConnectionPropertiesPrivateLinkServiceConnectionState {
		return &v
	}).(ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput)
}

// Actions required for a private endpoint connection.
func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPropertiesPrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection.
func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionPropertiesPrivateLinkServiceConnectionState) string { return v.Description }).(pulumi.StringOutput)
}

// The status of a private endpoint connection.
func (o ConnectionPropertiesPrivateLinkServiceConnectionStateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionPropertiesPrivateLinkServiceConnectionState) string { return v.Status }).(pulumi.StringOutput)
}

type ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPropertiesPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput() ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ToConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) Elem() ConnectionPropertiesPrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *ConnectionPropertiesPrivateLinkServiceConnectionState) ConnectionPropertiesPrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret ConnectionPropertiesPrivateLinkServiceConnectionState
		return ret
	}).(ConnectionPropertiesPrivateLinkServiceConnectionStateOutput)
}

// Actions required for a private endpoint connection.
func (o ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection.
func (o ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The status of a private endpoint connection.
func (o ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPropertiesPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The properties of a private endpoint connection.
type ConnectionPropertiesResponse struct {
	// The list of group ids for the private endpoint connection.
	GroupIds []string `pulumi:"groupIds"`
	// The private endpoint.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The connection state.
	PrivateLinkServiceConnectionState *ConnectionPropertiesResponsePrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of a private endpoint connection.
type ConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPropertiesResponse)(nil)).Elem()
}

func (o ConnectionPropertiesResponseOutput) ToConnectionPropertiesResponseOutput() ConnectionPropertiesResponseOutput {
	return o
}

func (o ConnectionPropertiesResponseOutput) ToConnectionPropertiesResponseOutputWithContext(ctx context.Context) ConnectionPropertiesResponseOutput {
	return o
}

// The list of group ids for the private endpoint connection.
func (o ConnectionPropertiesResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The private endpoint.
func (o ConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// The connection state.
func (o ConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponse) *ConnectionPropertiesResponsePrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput)
}

// The provisioning state.
func (o ConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The connection state.
type ConnectionPropertiesResponsePrivateLinkServiceConnectionState struct {
	// Actions required for a private endpoint connection.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection.
	Description string `pulumi:"description"`
	// The status of a private endpoint connection.
	Status string `pulumi:"status"`
}

// The connection state.
type ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPropertiesResponsePrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ToConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput() ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput {
	return o
}

func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ToConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput {
	return o
}

// Actions required for a private endpoint connection.
func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection.
func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponsePrivateLinkServiceConnectionState) string { return v.Description }).(pulumi.StringOutput)
}

// The status of a private endpoint connection.
func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionPropertiesResponsePrivateLinkServiceConnectionState) string { return v.Status }).(pulumi.StringOutput)
}

type ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPropertiesResponsePrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ToConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput() ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ToConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) Elem() ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *ConnectionPropertiesResponsePrivateLinkServiceConnectionState) ConnectionPropertiesResponsePrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret ConnectionPropertiesResponsePrivateLinkServiceConnectionState
		return ret
	}).(ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput)
}

// Actions required for a private endpoint connection.
func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection.
func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The status of a private endpoint connection.
func (o ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPropertiesResponsePrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The managed identity for the DigitalTwinsInstance.
type DigitalTwinsIdentity struct {
	// The type of Managed Identity used by the DigitalTwinsInstance.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	// .
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// DigitalTwinsIdentityInput is an input type that accepts DigitalTwinsIdentityArgs and DigitalTwinsIdentityOutput values.
// You can construct a concrete instance of `DigitalTwinsIdentityInput` via:
//
//	DigitalTwinsIdentityArgs{...}
type DigitalTwinsIdentityInput interface {
	pulumi.Input

	ToDigitalTwinsIdentityOutput() DigitalTwinsIdentityOutput
	ToDigitalTwinsIdentityOutputWithContext(context.Context) DigitalTwinsIdentityOutput
}

// The managed identity for the DigitalTwinsInstance.
type DigitalTwinsIdentityArgs struct {
	// The type of Managed Identity used by the DigitalTwinsInstance.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	// .
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (DigitalTwinsIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DigitalTwinsIdentity)(nil)).Elem()
}

func (i DigitalTwinsIdentityArgs) ToDigitalTwinsIdentityOutput() DigitalTwinsIdentityOutput {
	return i.ToDigitalTwinsIdentityOutputWithContext(context.Background())
}

func (i DigitalTwinsIdentityArgs) ToDigitalTwinsIdentityOutputWithContext(ctx context.Context) DigitalTwinsIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DigitalTwinsIdentityOutput)
}

func (i DigitalTwinsIdentityArgs) ToDigitalTwinsIdentityPtrOutput() DigitalTwinsIdentityPtrOutput {
	return i.ToDigitalTwinsIdentityPtrOutputWithContext(context.Background())
}

func (i DigitalTwinsIdentityArgs) ToDigitalTwinsIdentityPtrOutputWithContext(ctx context.Context) DigitalTwinsIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DigitalTwinsIdentityOutput).ToDigitalTwinsIdentityPtrOutputWithContext(ctx)
}

// DigitalTwinsIdentityPtrInput is an input type that accepts DigitalTwinsIdentityArgs, DigitalTwinsIdentityPtr and DigitalTwinsIdentityPtrOutput values.
// You can construct a concrete instance of `DigitalTwinsIdentityPtrInput` via:
//
//	        DigitalTwinsIdentityArgs{...}
//
//	or:
//
//	        nil
type DigitalTwinsIdentityPtrInput interface {
	pulumi.Input

	ToDigitalTwinsIdentityPtrOutput() DigitalTwinsIdentityPtrOutput
	ToDigitalTwinsIdentityPtrOutputWithContext(context.Context) DigitalTwinsIdentityPtrOutput
}

type digitalTwinsIdentityPtrType DigitalTwinsIdentityArgs

func DigitalTwinsIdentityPtr(v *DigitalTwinsIdentityArgs) DigitalTwinsIdentityPtrInput {
	return (*digitalTwinsIdentityPtrType)(v)
}

func (*digitalTwinsIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DigitalTwinsIdentity)(nil)).Elem()
}

func (i *digitalTwinsIdentityPtrType) ToDigitalTwinsIdentityPtrOutput() DigitalTwinsIdentityPtrOutput {
	return i.ToDigitalTwinsIdentityPtrOutputWithContext(context.Background())
}

func (i *digitalTwinsIdentityPtrType) ToDigitalTwinsIdentityPtrOutputWithContext(ctx context.Context) DigitalTwinsIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DigitalTwinsIdentityPtrOutput)
}

// The managed identity for the DigitalTwinsInstance.
type DigitalTwinsIdentityOutput struct{ *pulumi.OutputState }

func (DigitalTwinsIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DigitalTwinsIdentity)(nil)).Elem()
}

func (o DigitalTwinsIdentityOutput) ToDigitalTwinsIdentityOutput() DigitalTwinsIdentityOutput {
	return o
}

func (o DigitalTwinsIdentityOutput) ToDigitalTwinsIdentityOutputWithContext(ctx context.Context) DigitalTwinsIdentityOutput {
	return o
}

func (o DigitalTwinsIdentityOutput) ToDigitalTwinsIdentityPtrOutput() DigitalTwinsIdentityPtrOutput {
	return o.ToDigitalTwinsIdentityPtrOutputWithContext(context.Background())
}

func (o DigitalTwinsIdentityOutput) ToDigitalTwinsIdentityPtrOutputWithContext(ctx context.Context) DigitalTwinsIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DigitalTwinsIdentity) *DigitalTwinsIdentity {
		return &v
	}).(DigitalTwinsIdentityPtrOutput)
}

// The type of Managed Identity used by the DigitalTwinsInstance.
func (o DigitalTwinsIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DigitalTwinsIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
// .
func (o DigitalTwinsIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DigitalTwinsIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type DigitalTwinsIdentityPtrOutput struct{ *pulumi.OutputState }

func (DigitalTwinsIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DigitalTwinsIdentity)(nil)).Elem()
}

func (o DigitalTwinsIdentityPtrOutput) ToDigitalTwinsIdentityPtrOutput() DigitalTwinsIdentityPtrOutput {
	return o
}

func (o DigitalTwinsIdentityPtrOutput) ToDigitalTwinsIdentityPtrOutputWithContext(ctx context.Context) DigitalTwinsIdentityPtrOutput {
	return o
}

func (o DigitalTwinsIdentityPtrOutput) Elem() DigitalTwinsIdentityOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentity) DigitalTwinsIdentity {
		if v != nil {
			return *v
		}
		var ret DigitalTwinsIdentity
		return ret
	}).(DigitalTwinsIdentityOutput)
}

// The type of Managed Identity used by the DigitalTwinsInstance.
func (o DigitalTwinsIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
// .
func (o DigitalTwinsIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// The managed identity for the DigitalTwinsInstance.
type DigitalTwinsIdentityResponse struct {
	// The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity
	TenantId string `pulumi:"tenantId"`
	// The type of Managed Identity used by the DigitalTwinsInstance.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	// .
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// The managed identity for the DigitalTwinsInstance.
type DigitalTwinsIdentityResponseOutput struct{ *pulumi.OutputState }

func (DigitalTwinsIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DigitalTwinsIdentityResponse)(nil)).Elem()
}

func (o DigitalTwinsIdentityResponseOutput) ToDigitalTwinsIdentityResponseOutput() DigitalTwinsIdentityResponseOutput {
	return o
}

func (o DigitalTwinsIdentityResponseOutput) ToDigitalTwinsIdentityResponseOutputWithContext(ctx context.Context) DigitalTwinsIdentityResponseOutput {
	return o
}

// The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity
func (o DigitalTwinsIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v DigitalTwinsIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity
func (o DigitalTwinsIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v DigitalTwinsIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Identity used by the DigitalTwinsInstance.
func (o DigitalTwinsIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DigitalTwinsIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
// .
func (o DigitalTwinsIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v DigitalTwinsIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type DigitalTwinsIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (DigitalTwinsIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DigitalTwinsIdentityResponse)(nil)).Elem()
}

func (o DigitalTwinsIdentityResponsePtrOutput) ToDigitalTwinsIdentityResponsePtrOutput() DigitalTwinsIdentityResponsePtrOutput {
	return o
}

func (o DigitalTwinsIdentityResponsePtrOutput) ToDigitalTwinsIdentityResponsePtrOutputWithContext(ctx context.Context) DigitalTwinsIdentityResponsePtrOutput {
	return o
}

func (o DigitalTwinsIdentityResponsePtrOutput) Elem() DigitalTwinsIdentityResponseOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentityResponse) DigitalTwinsIdentityResponse {
		if v != nil {
			return *v
		}
		var ret DigitalTwinsIdentityResponse
		return ret
	}).(DigitalTwinsIdentityResponseOutput)
}

// The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity
func (o DigitalTwinsIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity
func (o DigitalTwinsIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of Managed Identity used by the DigitalTwinsInstance.
func (o DigitalTwinsIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
// .
func (o DigitalTwinsIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *DigitalTwinsIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Properties related to EventGrid.
type EventGrid struct {
	// EventGrid secondary accesskey. Will be obfuscated during read.
	AccessKey1 string `pulumi:"accessKey1"`
	// EventGrid secondary accesskey. Will be obfuscated during read.
	AccessKey2 *string `pulumi:"accessKey2"`
	// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
	DeadLetterSecret *string `pulumi:"deadLetterSecret"`
	// Dead letter storage URL for identity-based authentication.
	DeadLetterUri *string `pulumi:"deadLetterUri"`
	// The type of Digital Twins endpoint
	// Expected value is 'EventGrid'.
	EndpointType string `pulumi:"endpointType"`
	// Managed identity properties for the endpoint.
	Identity *ManagedIdentityReference `pulumi:"identity"`
	// EventGrid Topic Endpoint.
	TopicEndpoint string `pulumi:"topicEndpoint"`
}

// Properties related to EventGrid.
type EventGridResponse struct {
	// EventGrid secondary accesskey. Will be obfuscated during read.
	AccessKey1 string `pulumi:"accessKey1"`
	// EventGrid secondary accesskey. Will be obfuscated during read.
	AccessKey2 *string `pulumi:"accessKey2"`
	// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Time when the Endpoint was added to DigitalTwinsInstance.
	CreatedTime string `pulumi:"createdTime"`
	// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
	DeadLetterSecret *string `pulumi:"deadLetterSecret"`
	// Dead letter storage URL for identity-based authentication.
	DeadLetterUri *string `pulumi:"deadLetterUri"`
	// The type of Digital Twins endpoint
	// Expected value is 'EventGrid'.
	EndpointType string `pulumi:"endpointType"`
	// Managed identity properties for the endpoint.
	Identity *ManagedIdentityReferenceResponse `pulumi:"identity"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// EventGrid Topic Endpoint.
	TopicEndpoint string `pulumi:"topicEndpoint"`
}

// Properties related to EventHub.
type EventHub struct {
	// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
	AuthenticationType *string `pulumi:"authenticationType"`
	// PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	ConnectionStringPrimaryKey *string `pulumi:"connectionStringPrimaryKey"`
	// SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	ConnectionStringSecondaryKey *string `pulumi:"connectionStringSecondaryKey"`
	// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
	DeadLetterSecret *string `pulumi:"deadLetterSecret"`
	// Dead letter storage URL for identity-based authentication.
	DeadLetterUri *string `pulumi:"deadLetterUri"`
	// The type of Digital Twins endpoint
	// Expected value is 'EventHub'.
	EndpointType string `pulumi:"endpointType"`
	// The URL of the EventHub namespace for identity-based authentication. It must include the protocol 'sb://'.
	EndpointUri *string `pulumi:"endpointUri"`
	// The EventHub name in the EventHub namespace for identity-based authentication.
	EntityPath *string `pulumi:"entityPath"`
	// Managed identity properties for the endpoint.
	Identity *ManagedIdentityReference `pulumi:"identity"`
}

// Properties related to EventHub.
type EventHubResponse struct {
	// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
	AuthenticationType *string `pulumi:"authenticationType"`
	// PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	ConnectionStringPrimaryKey *string `pulumi:"connectionStringPrimaryKey"`
	// SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	ConnectionStringSecondaryKey *string `pulumi:"connectionStringSecondaryKey"`
	// Time when the Endpoint was added to DigitalTwinsInstance.
	CreatedTime string `pulumi:"createdTime"`
	// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
	DeadLetterSecret *string `pulumi:"deadLetterSecret"`
	// Dead letter storage URL for identity-based authentication.
	DeadLetterUri *string `pulumi:"deadLetterUri"`
	// The type of Digital Twins endpoint
	// Expected value is 'EventHub'.
	EndpointType string `pulumi:"endpointType"`
	// The URL of the EventHub namespace for identity-based authentication. It must include the protocol 'sb://'.
	EndpointUri *string `pulumi:"endpointUri"`
	// The EventHub name in the EventHub namespace for identity-based authentication.
	EntityPath *string `pulumi:"entityPath"`
	// Managed identity properties for the endpoint.
	Identity *ManagedIdentityReferenceResponse `pulumi:"identity"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of the Managed Identity.
type ManagedIdentityReference struct {
	// The type of managed identity used.
	Type *string `pulumi:"type"`
	// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// ManagedIdentityReferenceInput is an input type that accepts ManagedIdentityReferenceArgs and ManagedIdentityReferenceOutput values.
// You can construct a concrete instance of `ManagedIdentityReferenceInput` via:
//
//	ManagedIdentityReferenceArgs{...}
type ManagedIdentityReferenceInput interface {
	pulumi.Input

	ToManagedIdentityReferenceOutput() ManagedIdentityReferenceOutput
	ToManagedIdentityReferenceOutputWithContext(context.Context) ManagedIdentityReferenceOutput
}

// The properties of the Managed Identity.
type ManagedIdentityReferenceArgs struct {
	// The type of managed identity used.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (ManagedIdentityReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityReference)(nil)).Elem()
}

func (i ManagedIdentityReferenceArgs) ToManagedIdentityReferenceOutput() ManagedIdentityReferenceOutput {
	return i.ToManagedIdentityReferenceOutputWithContext(context.Background())
}

func (i ManagedIdentityReferenceArgs) ToManagedIdentityReferenceOutputWithContext(ctx context.Context) ManagedIdentityReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityReferenceOutput)
}

func (i ManagedIdentityReferenceArgs) ToManagedIdentityReferencePtrOutput() ManagedIdentityReferencePtrOutput {
	return i.ToManagedIdentityReferencePtrOutputWithContext(context.Background())
}

func (i ManagedIdentityReferenceArgs) ToManagedIdentityReferencePtrOutputWithContext(ctx context.Context) ManagedIdentityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityReferenceOutput).ToManagedIdentityReferencePtrOutputWithContext(ctx)
}

// ManagedIdentityReferencePtrInput is an input type that accepts ManagedIdentityReferenceArgs, ManagedIdentityReferencePtr and ManagedIdentityReferencePtrOutput values.
// You can construct a concrete instance of `ManagedIdentityReferencePtrInput` via:
//
//	        ManagedIdentityReferenceArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityReferencePtrInput interface {
	pulumi.Input

	ToManagedIdentityReferencePtrOutput() ManagedIdentityReferencePtrOutput
	ToManagedIdentityReferencePtrOutputWithContext(context.Context) ManagedIdentityReferencePtrOutput
}

type managedIdentityReferencePtrType ManagedIdentityReferenceArgs

func ManagedIdentityReferencePtr(v *ManagedIdentityReferenceArgs) ManagedIdentityReferencePtrInput {
	return (*managedIdentityReferencePtrType)(v)
}

func (*managedIdentityReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityReference)(nil)).Elem()
}

func (i *managedIdentityReferencePtrType) ToManagedIdentityReferencePtrOutput() ManagedIdentityReferencePtrOutput {
	return i.ToManagedIdentityReferencePtrOutputWithContext(context.Background())
}

func (i *managedIdentityReferencePtrType) ToManagedIdentityReferencePtrOutputWithContext(ctx context.Context) ManagedIdentityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityReferencePtrOutput)
}

// The properties of the Managed Identity.
type ManagedIdentityReferenceOutput struct{ *pulumi.OutputState }

func (ManagedIdentityReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityReference)(nil)).Elem()
}

func (o ManagedIdentityReferenceOutput) ToManagedIdentityReferenceOutput() ManagedIdentityReferenceOutput {
	return o
}

func (o ManagedIdentityReferenceOutput) ToManagedIdentityReferenceOutputWithContext(ctx context.Context) ManagedIdentityReferenceOutput {
	return o
}

func (o ManagedIdentityReferenceOutput) ToManagedIdentityReferencePtrOutput() ManagedIdentityReferencePtrOutput {
	return o.ToManagedIdentityReferencePtrOutputWithContext(context.Background())
}

func (o ManagedIdentityReferenceOutput) ToManagedIdentityReferencePtrOutputWithContext(ctx context.Context) ManagedIdentityReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityReference) *ManagedIdentityReference {
		return &v
	}).(ManagedIdentityReferencePtrOutput)
}

// The type of managed identity used.
func (o ManagedIdentityReferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityReference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
func (o ManagedIdentityReferenceOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityReference) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type ManagedIdentityReferencePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityReference)(nil)).Elem()
}

func (o ManagedIdentityReferencePtrOutput) ToManagedIdentityReferencePtrOutput() ManagedIdentityReferencePtrOutput {
	return o
}

func (o ManagedIdentityReferencePtrOutput) ToManagedIdentityReferencePtrOutputWithContext(ctx context.Context) ManagedIdentityReferencePtrOutput {
	return o
}

func (o ManagedIdentityReferencePtrOutput) Elem() ManagedIdentityReferenceOutput {
	return o.ApplyT(func(v *ManagedIdentityReference) ManagedIdentityReference {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityReference
		return ret
	}).(ManagedIdentityReferenceOutput)
}

// The type of managed identity used.
func (o ManagedIdentityReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityReference) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
func (o ManagedIdentityReferencePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityReference) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The properties of the Managed Identity.
type ManagedIdentityReferenceResponse struct {
	// The type of managed identity used.
	Type *string `pulumi:"type"`
	// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// The properties of the Managed Identity.
type ManagedIdentityReferenceResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityReferenceResponse)(nil)).Elem()
}

func (o ManagedIdentityReferenceResponseOutput) ToManagedIdentityReferenceResponseOutput() ManagedIdentityReferenceResponseOutput {
	return o
}

func (o ManagedIdentityReferenceResponseOutput) ToManagedIdentityReferenceResponseOutputWithContext(ctx context.Context) ManagedIdentityReferenceResponseOutput {
	return o
}

// The type of managed identity used.
func (o ManagedIdentityReferenceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityReferenceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
func (o ManagedIdentityReferenceResponseOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityReferenceResponse) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type ManagedIdentityReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityReferenceResponse)(nil)).Elem()
}

func (o ManagedIdentityReferenceResponsePtrOutput) ToManagedIdentityReferenceResponsePtrOutput() ManagedIdentityReferenceResponsePtrOutput {
	return o
}

func (o ManagedIdentityReferenceResponsePtrOutput) ToManagedIdentityReferenceResponsePtrOutputWithContext(ctx context.Context) ManagedIdentityReferenceResponsePtrOutput {
	return o
}

func (o ManagedIdentityReferenceResponsePtrOutput) Elem() ManagedIdentityReferenceResponseOutput {
	return o.ApplyT(func(v *ManagedIdentityReferenceResponse) ManagedIdentityReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityReferenceResponse
		return ret
	}).(ManagedIdentityReferenceResponseOutput)
}

// The type of managed identity used.
func (o ManagedIdentityReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The user identity ARM resource id if the managed identity type is 'UserAssigned'.
func (o ManagedIdentityReferenceResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The private endpoint connection of a Digital Twin.
type PrivateEndpointConnectionType struct {
	// The connection properties.
	Properties ConnectionProperties `pulumi:"properties"`
}

// PrivateEndpointConnectionTypeInput is an input type that accepts PrivateEndpointConnectionTypeArgs and PrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeInput` via:
//
//	PrivateEndpointConnectionTypeArgs{...}
type PrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput
	ToPrivateEndpointConnectionTypeOutputWithContext(context.Context) PrivateEndpointConnectionTypeOutput
}

// The private endpoint connection of a Digital Twin.
type PrivateEndpointConnectionTypeArgs struct {
	// The connection properties.
	Properties ConnectionPropertiesInput `pulumi:"properties"`
}

func (PrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return i.ToPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput)
}

// PrivateEndpointConnectionTypeArrayInput is an input type that accepts PrivateEndpointConnectionTypeArray and PrivateEndpointConnectionTypeArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeArrayInput` via:
//
//	PrivateEndpointConnectionTypeArray{ PrivateEndpointConnectionTypeArgs{...} }
type PrivateEndpointConnectionTypeArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeArrayOutput() PrivateEndpointConnectionTypeArrayOutput
	ToPrivateEndpointConnectionTypeArrayOutputWithContext(context.Context) PrivateEndpointConnectionTypeArrayOutput
}

type PrivateEndpointConnectionTypeArray []PrivateEndpointConnectionTypeInput

func (PrivateEndpointConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArray) ToPrivateEndpointConnectionTypeArrayOutput() PrivateEndpointConnectionTypeArrayOutput {
	return i.ToPrivateEndpointConnectionTypeArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArray) ToPrivateEndpointConnectionTypeArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeArrayOutput)
}

// The private endpoint connection of a Digital Twin.
type PrivateEndpointConnectionTypeOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return o
}

// The connection properties.
func (o PrivateEndpointConnectionTypeOutput) Properties() ConnectionPropertiesOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) ConnectionProperties { return v.Properties }).(ConnectionPropertiesOutput)
}

type PrivateEndpointConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeArrayOutput) ToPrivateEndpointConnectionTypeArrayOutput() PrivateEndpointConnectionTypeArrayOutput {
	return o
}

func (o PrivateEndpointConnectionTypeArrayOutput) ToPrivateEndpointConnectionTypeArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeArrayOutput {
	return o
}

func (o PrivateEndpointConnectionTypeArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionType {
		return vs[0].([]PrivateEndpointConnectionType)[vs[1].(int)]
	}).(PrivateEndpointConnectionTypeOutput)
}

// The private endpoint connection of a Digital Twin.
type PrivateEndpointConnectionResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The connection properties.
	Properties ConnectionPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the private endpoint connection.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The resource type.
	Type string `pulumi:"type"`
}

// The private endpoint connection of a Digital Twin.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The resource identifier.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The connection properties.
func (o PrivateEndpointConnectionResponseOutput) Properties() ConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) ConnectionPropertiesResponse { return v.Properties }).(ConnectionPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the private endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The resource type.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint property of a private endpoint connection.
type PrivateEndpointResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
}

// The private endpoint property of a private endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The resource identifier.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The resource identifier.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Properties related to ServiceBus.
type ServiceBus struct {
	// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
	DeadLetterSecret *string `pulumi:"deadLetterSecret"`
	// Dead letter storage URL for identity-based authentication.
	DeadLetterUri *string `pulumi:"deadLetterUri"`
	// The type of Digital Twins endpoint
	// Expected value is 'ServiceBus'.
	EndpointType string `pulumi:"endpointType"`
	// The URL of the ServiceBus namespace for identity-based authentication. It must include the protocol 'sb://'.
	EndpointUri *string `pulumi:"endpointUri"`
	// The ServiceBus Topic name for identity-based authentication.
	EntityPath *string `pulumi:"entityPath"`
	// Managed identity properties for the endpoint.
	Identity *ManagedIdentityReference `pulumi:"identity"`
	// PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	PrimaryConnectionString *string `pulumi:"primaryConnectionString"`
	// SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	SecondaryConnectionString *string `pulumi:"secondaryConnectionString"`
}

// Properties related to ServiceBus.
type ServiceBusResponse struct {
	// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Time when the Endpoint was added to DigitalTwinsInstance.
	CreatedTime string `pulumi:"createdTime"`
	// Dead letter storage secret for key-based authentication. Will be obfuscated during read.
	DeadLetterSecret *string `pulumi:"deadLetterSecret"`
	// Dead letter storage URL for identity-based authentication.
	DeadLetterUri *string `pulumi:"deadLetterUri"`
	// The type of Digital Twins endpoint
	// Expected value is 'ServiceBus'.
	EndpointType string `pulumi:"endpointType"`
	// The URL of the ServiceBus namespace for identity-based authentication. It must include the protocol 'sb://'.
	EndpointUri *string `pulumi:"endpointUri"`
	// The ServiceBus Topic name for identity-based authentication.
	EntityPath *string `pulumi:"entityPath"`
	// Managed identity properties for the endpoint.
	Identity *ManagedIdentityReferenceResponse `pulumi:"identity"`
	// PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	PrimaryConnectionString *string `pulumi:"primaryConnectionString"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
	SecondaryConnectionString *string `pulumi:"secondaryConnectionString"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The information about the user assigned identity.
type UserAssignedIdentityResponse struct {
	// The client id of the User Assigned Identity Resource.
	ClientId string `pulumi:"clientId"`
	// The object id of the User Assigned Identity Resource.
	PrincipalId string `pulumi:"principalId"`
}

// The information about the user assigned identity.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client id of the User Assigned Identity Resource.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The object id of the User Assigned Identity Resource.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureDataExplorerConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(AzureDataExplorerConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AzureDataExplorerConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionPropertiesPrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(ConnectionPropertiesPrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(ConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectionPropertiesResponsePrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(ConnectionPropertiesResponsePrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(DigitalTwinsIdentityOutput{})
	pulumi.RegisterOutputType(DigitalTwinsIdentityPtrOutput{})
	pulumi.RegisterOutputType(DigitalTwinsIdentityResponseOutput{})
	pulumi.RegisterOutputType(DigitalTwinsIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityReferenceOutput{})
	pulumi.RegisterOutputType(ManagedIdentityReferencePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityReferenceResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
