// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
type IdentityType string

const (
	IdentityTypeNone                         = IdentityType("None")
	IdentityTypeSystemAssigned               = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned                 = IdentityType("UserAssigned")
	IdentityType_SystemAssigned_UserAssigned = IdentityType("SystemAssigned, UserAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeNone
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
//	IdentityType_SystemAssigned_UserAssigned
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*IdentityType] {
	return pulumix.Output[*IdentityType]{
		OutputState: in.ToIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// This determines the format that Event Grid should expect for incoming events published to the topic.
type InputSchema string

const (
	InputSchemaEventGridSchema       = InputSchema("EventGridSchema")
	InputSchemaCustomEventSchema     = InputSchema("CustomEventSchema")
	InputSchema_CloudEventSchemaV1_0 = InputSchema("CloudEventSchemaV1_0")
)

func (InputSchema) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchema)(nil)).Elem()
}

func (e InputSchema) ToInputSchemaOutput() InputSchemaOutput {
	return pulumi.ToOutput(e).(InputSchemaOutput)
}

func (e InputSchema) ToInputSchemaOutputWithContext(ctx context.Context) InputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InputSchemaOutput)
}

func (e InputSchema) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return e.ToInputSchemaPtrOutputWithContext(context.Background())
}

func (e InputSchema) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return InputSchema(e).ToInputSchemaOutputWithContext(ctx).ToInputSchemaPtrOutputWithContext(ctx)
}

func (e InputSchema) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputSchema) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputSchema) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InputSchema) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InputSchemaOutput struct{ *pulumi.OutputState }

func (InputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchema)(nil)).Elem()
}

func (o InputSchemaOutput) ToInputSchemaOutput() InputSchemaOutput {
	return o
}

func (o InputSchemaOutput) ToInputSchemaOutputWithContext(ctx context.Context) InputSchemaOutput {
	return o
}

func (o InputSchemaOutput) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return o.ToInputSchemaPtrOutputWithContext(context.Background())
}

func (o InputSchemaOutput) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputSchema) *InputSchema {
		return &v
	}).(InputSchemaPtrOutput)
}

func (o InputSchemaOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InputSchemaOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputSchema) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InputSchemaOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputSchemaOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputSchema) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InputSchemaPtrOutput struct{ *pulumi.OutputState }

func (InputSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSchema)(nil)).Elem()
}

func (o InputSchemaPtrOutput) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return o
}

func (o InputSchemaPtrOutput) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return o
}

func (o InputSchemaPtrOutput) Elem() InputSchemaOutput {
	return o.ApplyT(func(v *InputSchema) InputSchema {
		if v != nil {
			return *v
		}
		var ret InputSchema
		return ret
	}).(InputSchemaOutput)
}

func (o InputSchemaPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputSchemaPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InputSchema) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InputSchemaInput is an input type that accepts values of the InputSchema enum
// A concrete instance of `InputSchemaInput` can be one of the following:
//
//	InputSchemaEventGridSchema
//	InputSchemaCustomEventSchema
//	InputSchema_CloudEventSchemaV1_0
type InputSchemaInput interface {
	pulumi.Input

	ToInputSchemaOutput() InputSchemaOutput
	ToInputSchemaOutputWithContext(context.Context) InputSchemaOutput
}

var inputSchemaPtrType = reflect.TypeOf((**InputSchema)(nil)).Elem()

type InputSchemaPtrInput interface {
	pulumi.Input

	ToInputSchemaPtrOutput() InputSchemaPtrOutput
	ToInputSchemaPtrOutputWithContext(context.Context) InputSchemaPtrOutput
}

type inputSchemaPtr string

func InputSchemaPtr(v string) InputSchemaPtrInput {
	return (*inputSchemaPtr)(&v)
}

func (*inputSchemaPtr) ElementType() reflect.Type {
	return inputSchemaPtrType
}

func (in *inputSchemaPtr) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return pulumi.ToOutput(in).(InputSchemaPtrOutput)
}

func (in *inputSchemaPtr) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InputSchemaPtrOutput)
}

func (in *inputSchemaPtr) ToOutput(ctx context.Context) pulumix.Output[*InputSchema] {
	return pulumix.Output[*InputSchema]{
		OutputState: in.ToInputSchemaPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of the custom mapping
type InputSchemaMappingType string

const (
	InputSchemaMappingTypeJson = InputSchemaMappingType("Json")
)

// Action to perform based on the match or no match of the IpMask.
type IpActionType string

const (
	IpActionTypeAllow = IpActionType("Allow")
)

func (IpActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*IpActionType)(nil)).Elem()
}

func (e IpActionType) ToIpActionTypeOutput() IpActionTypeOutput {
	return pulumi.ToOutput(e).(IpActionTypeOutput)
}

func (e IpActionType) ToIpActionTypeOutputWithContext(ctx context.Context) IpActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IpActionTypeOutput)
}

func (e IpActionType) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return e.ToIpActionTypePtrOutputWithContext(context.Background())
}

func (e IpActionType) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return IpActionType(e).ToIpActionTypeOutputWithContext(ctx).ToIpActionTypePtrOutputWithContext(ctx)
}

func (e IpActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IpActionTypeOutput struct{ *pulumi.OutputState }

func (IpActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpActionType)(nil)).Elem()
}

func (o IpActionTypeOutput) ToIpActionTypeOutput() IpActionTypeOutput {
	return o
}

func (o IpActionTypeOutput) ToIpActionTypeOutputWithContext(ctx context.Context) IpActionTypeOutput {
	return o
}

func (o IpActionTypeOutput) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return o.ToIpActionTypePtrOutputWithContext(context.Background())
}

func (o IpActionTypeOutput) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpActionType) *IpActionType {
		return &v
	}).(IpActionTypePtrOutput)
}

func (o IpActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpActionTypePtrOutput struct{ *pulumi.OutputState }

func (IpActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpActionType)(nil)).Elem()
}

func (o IpActionTypePtrOutput) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return o
}

func (o IpActionTypePtrOutput) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return o
}

func (o IpActionTypePtrOutput) Elem() IpActionTypeOutput {
	return o.ApplyT(func(v *IpActionType) IpActionType {
		if v != nil {
			return *v
		}
		var ret IpActionType
		return ret
	}).(IpActionTypeOutput)
}

func (o IpActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IpActionTypeInput is an input type that accepts values of the IpActionType enum
// A concrete instance of `IpActionTypeInput` can be one of the following:
//
//	IpActionTypeAllow
type IpActionTypeInput interface {
	pulumi.Input

	ToIpActionTypeOutput() IpActionTypeOutput
	ToIpActionTypeOutputWithContext(context.Context) IpActionTypeOutput
}

var ipActionTypePtrType = reflect.TypeOf((**IpActionType)(nil)).Elem()

type IpActionTypePtrInput interface {
	pulumi.Input

	ToIpActionTypePtrOutput() IpActionTypePtrOutput
	ToIpActionTypePtrOutputWithContext(context.Context) IpActionTypePtrOutput
}

type ipActionTypePtr string

func IpActionTypePtr(v string) IpActionTypePtrInput {
	return (*ipActionTypePtr)(&v)
}

func (*ipActionTypePtr) ElementType() reflect.Type {
	return ipActionTypePtrType
}

func (in *ipActionTypePtr) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return pulumi.ToOutput(in).(IpActionTypePtrOutput)
}

func (in *ipActionTypePtr) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IpActionTypePtrOutput)
}

func (in *ipActionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*IpActionType] {
	return pulumix.Output[*IpActionType]{
		OutputState: in.ToIpActionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Status of the connection.
type PersistedConnectionStatus string

const (
	PersistedConnectionStatusPending      = PersistedConnectionStatus("Pending")
	PersistedConnectionStatusApproved     = PersistedConnectionStatus("Approved")
	PersistedConnectionStatusRejected     = PersistedConnectionStatus("Rejected")
	PersistedConnectionStatusDisconnected = PersistedConnectionStatus("Disconnected")
)

func (PersistedConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistedConnectionStatus)(nil)).Elem()
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusOutput() PersistedConnectionStatusOutput {
	return pulumi.ToOutput(e).(PersistedConnectionStatusOutput)
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusOutputWithContext(ctx context.Context) PersistedConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PersistedConnectionStatusOutput)
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return e.ToPersistedConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return PersistedConnectionStatus(e).ToPersistedConnectionStatusOutputWithContext(ctx).ToPersistedConnectionStatusPtrOutputWithContext(ctx)
}

func (e PersistedConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistedConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistedConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PersistedConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PersistedConnectionStatusOutput struct{ *pulumi.OutputState }

func (PersistedConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistedConnectionStatus)(nil)).Elem()
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusOutput() PersistedConnectionStatusOutput {
	return o
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusOutputWithContext(ctx context.Context) PersistedConnectionStatusOutput {
	return o
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return o.ToPersistedConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersistedConnectionStatus) *PersistedConnectionStatus {
		return &v
	}).(PersistedConnectionStatusPtrOutput)
}

func (o PersistedConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistedConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PersistedConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistedConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PersistedConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PersistedConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistedConnectionStatus)(nil)).Elem()
}

func (o PersistedConnectionStatusPtrOutput) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return o
}

func (o PersistedConnectionStatusPtrOutput) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return o
}

func (o PersistedConnectionStatusPtrOutput) Elem() PersistedConnectionStatusOutput {
	return o.ApplyT(func(v *PersistedConnectionStatus) PersistedConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PersistedConnectionStatus
		return ret
	}).(PersistedConnectionStatusOutput)
}

func (o PersistedConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PersistedConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PersistedConnectionStatusInput is an input type that accepts values of the PersistedConnectionStatus enum
// A concrete instance of `PersistedConnectionStatusInput` can be one of the following:
//
//	PersistedConnectionStatusPending
//	PersistedConnectionStatusApproved
//	PersistedConnectionStatusRejected
//	PersistedConnectionStatusDisconnected
type PersistedConnectionStatusInput interface {
	pulumi.Input

	ToPersistedConnectionStatusOutput() PersistedConnectionStatusOutput
	ToPersistedConnectionStatusOutputWithContext(context.Context) PersistedConnectionStatusOutput
}

var persistedConnectionStatusPtrType = reflect.TypeOf((**PersistedConnectionStatus)(nil)).Elem()

type PersistedConnectionStatusPtrInput interface {
	pulumi.Input

	ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput
	ToPersistedConnectionStatusPtrOutputWithContext(context.Context) PersistedConnectionStatusPtrOutput
}

type persistedConnectionStatusPtr string

func PersistedConnectionStatusPtr(v string) PersistedConnectionStatusPtrInput {
	return (*persistedConnectionStatusPtr)(&v)
}

func (*persistedConnectionStatusPtr) ElementType() reflect.Type {
	return persistedConnectionStatusPtrType
}

func (in *persistedConnectionStatusPtr) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PersistedConnectionStatusPtrOutput)
}

func (in *persistedConnectionStatusPtr) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PersistedConnectionStatusPtrOutput)
}

func (in *persistedConnectionStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*PersistedConnectionStatus] {
	return pulumix.Output[*PersistedConnectionStatus]{
		OutputState: in.ToPersistedConnectionStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToOutput(ctx context.Context) pulumix.Output[*PublicNetworkAccess] {
	return pulumix.Output[*PublicNetworkAccess]{
		OutputState: in.ToPublicNetworkAccessPtrOutputWithContext(ctx).OutputState,
	}
}

// Provisioning state of the Private Endpoint Connection.
type ResourceProvisioningState string

const (
	ResourceProvisioningStateCreating  = ResourceProvisioningState("Creating")
	ResourceProvisioningStateUpdating  = ResourceProvisioningState("Updating")
	ResourceProvisioningStateDeleting  = ResourceProvisioningState("Deleting")
	ResourceProvisioningStateSucceeded = ResourceProvisioningState("Succeeded")
	ResourceProvisioningStateCanceled  = ResourceProvisioningState("Canceled")
	ResourceProvisioningStateFailed    = ResourceProvisioningState("Failed")
)

func (ResourceProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProvisioningState)(nil)).Elem()
}

func (e ResourceProvisioningState) ToResourceProvisioningStateOutput() ResourceProvisioningStateOutput {
	return pulumi.ToOutput(e).(ResourceProvisioningStateOutput)
}

func (e ResourceProvisioningState) ToResourceProvisioningStateOutputWithContext(ctx context.Context) ResourceProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceProvisioningStateOutput)
}

func (e ResourceProvisioningState) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return e.ToResourceProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ResourceProvisioningState) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return ResourceProvisioningState(e).ToResourceProvisioningStateOutputWithContext(ctx).ToResourceProvisioningStatePtrOutputWithContext(ctx)
}

func (e ResourceProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceProvisioningStateOutput struct{ *pulumi.OutputState }

func (ResourceProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProvisioningState)(nil)).Elem()
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStateOutput() ResourceProvisioningStateOutput {
	return o
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStateOutputWithContext(ctx context.Context) ResourceProvisioningStateOutput {
	return o
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return o.ToResourceProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceProvisioningState) *ResourceProvisioningState {
		return &v
	}).(ResourceProvisioningStatePtrOutput)
}

func (o ResourceProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ResourceProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceProvisioningState)(nil)).Elem()
}

func (o ResourceProvisioningStatePtrOutput) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return o
}

func (o ResourceProvisioningStatePtrOutput) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return o
}

func (o ResourceProvisioningStatePtrOutput) Elem() ResourceProvisioningStateOutput {
	return o.ApplyT(func(v *ResourceProvisioningState) ResourceProvisioningState {
		if v != nil {
			return *v
		}
		var ret ResourceProvisioningState
		return ret
	}).(ResourceProvisioningStateOutput)
}

func (o ResourceProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceProvisioningStateInput is an input type that accepts values of the ResourceProvisioningState enum
// A concrete instance of `ResourceProvisioningStateInput` can be one of the following:
//
//	ResourceProvisioningStateCreating
//	ResourceProvisioningStateUpdating
//	ResourceProvisioningStateDeleting
//	ResourceProvisioningStateSucceeded
//	ResourceProvisioningStateCanceled
//	ResourceProvisioningStateFailed
type ResourceProvisioningStateInput interface {
	pulumi.Input

	ToResourceProvisioningStateOutput() ResourceProvisioningStateOutput
	ToResourceProvisioningStateOutputWithContext(context.Context) ResourceProvisioningStateOutput
}

var resourceProvisioningStatePtrType = reflect.TypeOf((**ResourceProvisioningState)(nil)).Elem()

type ResourceProvisioningStatePtrInput interface {
	pulumi.Input

	ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput
	ToResourceProvisioningStatePtrOutputWithContext(context.Context) ResourceProvisioningStatePtrOutput
}

type resourceProvisioningStatePtr string

func ResourceProvisioningStatePtr(v string) ResourceProvisioningStatePtrInput {
	return (*resourceProvisioningStatePtr)(&v)
}

func (*resourceProvisioningStatePtr) ElementType() reflect.Type {
	return resourceProvisioningStatePtrType
}

func (in *resourceProvisioningStatePtr) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ResourceProvisioningStatePtrOutput)
}

func (in *resourceProvisioningStatePtr) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceProvisioningStatePtrOutput)
}

func (in *resourceProvisioningStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceProvisioningState] {
	return pulumix.Output[*ResourceProvisioningState]{
		OutputState: in.ToResourceProvisioningStatePtrOutputWithContext(ctx).OutputState,
	}
}

// The Sku name of the resource. The possible values are: Basic or Premium.
type Sku string

const (
	SkuBasic   = Sku("Basic")
	SkuPremium = Sku("Premium")
)

func (Sku) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (e Sku) ToSkuOutput() SkuOutput {
	return pulumi.ToOutput(e).(SkuOutput)
}

func (e Sku) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuOutput)
}

func (e Sku) ToSkuPtrOutput() SkuPtrOutput {
	return e.ToSkuPtrOutputWithContext(context.Background())
}

func (e Sku) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return Sku(e).ToSkuOutputWithContext(ctx).ToSkuPtrOutputWithContext(ctx)
}

func (e Sku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Sku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Sku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Sku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

func (o SkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Sku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Sku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

func (o SkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Sku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuInput is an input type that accepts values of the Sku enum
// A concrete instance of `SkuInput` can be one of the following:
//
//	SkuBasic
//	SkuPremium
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

var skuPtrType = reflect.TypeOf((**Sku)(nil)).Elem()

type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtr string

func SkuPtr(v string) SkuPtrInput {
	return (*skuPtr)(&v)
}

func (*skuPtr) ElementType() reflect.Type {
	return skuPtrType
}

func (in *skuPtr) ToSkuPtrOutput() SkuPtrOutput {
	return pulumi.ToOutput(in).(SkuPtrOutput)
}

func (in *skuPtr) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuPtrOutput)
}

func (in *skuPtr) ToOutput(ctx context.Context) pulumix.Output[*Sku] {
	return pulumix.Output[*Sku]{
		OutputState: in.ToSkuPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(InputSchemaOutput{})
	pulumi.RegisterOutputType(InputSchemaPtrOutput{})
	pulumi.RegisterOutputType(IpActionTypeOutput{})
	pulumi.RegisterOutputType(IpActionTypePtrOutput{})
	pulumi.RegisterOutputType(PersistedConnectionStatusOutput{})
	pulumi.RegisterOutputType(PersistedConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(ResourceProvisioningStateOutput{})
	pulumi.RegisterOutputType(ResourceProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
}
