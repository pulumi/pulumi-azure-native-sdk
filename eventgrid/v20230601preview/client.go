// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230601preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Client resource.
type Client struct {
	pulumi.CustomResourceState

	// Attributes for the client. Supported values are int, bool, string, string[].
	// Example:
	// "attributes": { "room": "345", "floor": 12, "deviceTypes": ["Fan", "Light"] }
	Attributes pulumi.AnyOutput `pulumi:"attributes"`
	// Authentication information for the client.
	Authentication ClientAuthenticationResponsePtrOutput `pulumi:"authentication"`
	// The name presented by the client for authentication. The default value is the name of the resource.
	AuthenticationName pulumi.StringPtrOutput `pulumi:"authenticationName"`
	// The client certificate authentication information.
	ClientCertificateAuthentication ClientCertificateAuthenticationResponsePtrOutput `pulumi:"clientCertificateAuthentication"`
	// Description for the Client resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the Client resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Indicates if the client is enabled or not. Default value is Enabled.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The system metadata relating to the Client resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewClient registers a new resource with the given unique name, arguments, and options.
func NewClient(ctx *pulumi.Context,
	name string, args *ClientArgs, opts ...pulumi.ResourceOption) (*Client, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.State == nil {
		args.State = pulumi.StringPtr("Enabled")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:eventgrid:Client"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Client
	err := ctx.RegisterResource("azure-native:eventgrid/v20230601preview:Client", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClient gets an existing Client resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientState, opts ...pulumi.ResourceOption) (*Client, error) {
	var resource Client
	err := ctx.ReadResource("azure-native:eventgrid/v20230601preview:Client", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Client resources.
type clientState struct {
}

type ClientState struct {
}

func (ClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientState)(nil)).Elem()
}

type clientArgs struct {
	// Attributes for the client. Supported values are int, bool, string, string[].
	// Example:
	// "attributes": { "room": "345", "floor": 12, "deviceTypes": ["Fan", "Light"] }
	Attributes interface{} `pulumi:"attributes"`
	// Authentication information for the client.
	Authentication *ClientAuthentication `pulumi:"authentication"`
	// The name presented by the client for authentication. The default value is the name of the resource.
	AuthenticationName *string `pulumi:"authenticationName"`
	// The client certificate authentication information.
	ClientCertificateAuthentication *ClientCertificateAuthentication `pulumi:"clientCertificateAuthentication"`
	// The client name.
	ClientName *string `pulumi:"clientName"`
	// Description for the Client resource.
	Description *string `pulumi:"description"`
	// Name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Indicates if the client is enabled or not. Default value is Enabled.
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a Client resource.
type ClientArgs struct {
	// Attributes for the client. Supported values are int, bool, string, string[].
	// Example:
	// "attributes": { "room": "345", "floor": 12, "deviceTypes": ["Fan", "Light"] }
	Attributes pulumi.Input
	// Authentication information for the client.
	Authentication ClientAuthenticationPtrInput
	// The name presented by the client for authentication. The default value is the name of the resource.
	AuthenticationName pulumi.StringPtrInput
	// The client certificate authentication information.
	ClientCertificateAuthentication ClientCertificateAuthenticationPtrInput
	// The client name.
	ClientName pulumi.StringPtrInput
	// Description for the Client resource.
	Description pulumi.StringPtrInput
	// Name of the namespace.
	NamespaceName pulumi.StringInput
	// The name of the resource group within the user's subscription.
	ResourceGroupName pulumi.StringInput
	// Indicates if the client is enabled or not. Default value is Enabled.
	State pulumi.StringPtrInput
}

func (ClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientArgs)(nil)).Elem()
}

type ClientInput interface {
	pulumi.Input

	ToClientOutput() ClientOutput
	ToClientOutputWithContext(ctx context.Context) ClientOutput
}

func (*Client) ElementType() reflect.Type {
	return reflect.TypeOf((**Client)(nil)).Elem()
}

func (i *Client) ToClientOutput() ClientOutput {
	return i.ToClientOutputWithContext(context.Background())
}

func (i *Client) ToClientOutputWithContext(ctx context.Context) ClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientOutput)
}

type ClientOutput struct{ *pulumi.OutputState }

func (ClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Client)(nil)).Elem()
}

func (o ClientOutput) ToClientOutput() ClientOutput {
	return o
}

func (o ClientOutput) ToClientOutputWithContext(ctx context.Context) ClientOutput {
	return o
}

// Attributes for the client. Supported values are int, bool, string, string[].
// Example:
// "attributes": { "room": "345", "floor": 12, "deviceTypes": ["Fan", "Light"] }
func (o ClientOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v *Client) pulumi.AnyOutput { return v.Attributes }).(pulumi.AnyOutput)
}

// Authentication information for the client.
func (o ClientOutput) Authentication() ClientAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *Client) ClientAuthenticationResponsePtrOutput { return v.Authentication }).(ClientAuthenticationResponsePtrOutput)
}

// The name presented by the client for authentication. The default value is the name of the resource.
func (o ClientOutput) AuthenticationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Client) pulumi.StringPtrOutput { return v.AuthenticationName }).(pulumi.StringPtrOutput)
}

// The client certificate authentication information.
func (o ClientOutput) ClientCertificateAuthentication() ClientCertificateAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *Client) ClientCertificateAuthenticationResponsePtrOutput {
		return v.ClientCertificateAuthentication
	}).(ClientCertificateAuthenticationResponsePtrOutput)
}

// Description for the Client resource.
func (o ClientOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Client) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o ClientOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Client) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the Client resource.
func (o ClientOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Client) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Indicates if the client is enabled or not. Default value is Enabled.
func (o ClientOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Client) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The system metadata relating to the Client resource.
func (o ClientOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Client) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the resource.
func (o ClientOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Client) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ClientOutput{})
}
