// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get properties of a CA certificate.
func LookupCaCertificate(ctx *pulumi.Context, args *LookupCaCertificateArgs, opts ...pulumi.InvokeOption) (*LookupCaCertificateResult, error) {
	var rv LookupCaCertificateResult
	err := ctx.Invoke("azure-native:eventgrid/v20230601preview:getCaCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCaCertificateArgs struct {
	// Name of the CA certificate.
	CaCertificateName string `pulumi:"caCertificateName"`
	// Name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The CA Certificate resource.
type LookupCaCertificateResult struct {
	// Description for the CA Certificate resource.
	Description *string `pulumi:"description"`
	// Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Certificate expiry time in UTC. This is a read-only field.
	ExpiryTimeInUtc string `pulumi:"expiryTimeInUtc"`
	// Fully qualified identifier of the resource.
	Id string `pulumi:"id"`
	// Certificate issue time in UTC. This is a read-only field.
	IssueTimeInUtc string `pulumi:"issueTimeInUtc"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// Provisioning state of the CA Certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The system metadata relating to the CaCertificate resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

func LookupCaCertificateOutput(ctx *pulumi.Context, args LookupCaCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupCaCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCaCertificateResult, error) {
			args := v.(LookupCaCertificateArgs)
			r, err := LookupCaCertificate(ctx, &args, opts...)
			var s LookupCaCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCaCertificateResultOutput)
}

type LookupCaCertificateOutputArgs struct {
	// Name of the CA certificate.
	CaCertificateName pulumi.StringInput `pulumi:"caCertificateName"`
	// Name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCaCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCaCertificateArgs)(nil)).Elem()
}

// The CA Certificate resource.
type LookupCaCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupCaCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCaCertificateResult)(nil)).Elem()
}

func (o LookupCaCertificateResultOutput) ToLookupCaCertificateResultOutput() LookupCaCertificateResultOutput {
	return o
}

func (o LookupCaCertificateResultOutput) ToLookupCaCertificateResultOutputWithContext(ctx context.Context) LookupCaCertificateResultOutput {
	return o
}

// Description for the CA Certificate resource.
func (o LookupCaCertificateResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
func (o LookupCaCertificateResultOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// Certificate expiry time in UTC. This is a read-only field.
func (o LookupCaCertificateResultOutput) ExpiryTimeInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) string { return v.ExpiryTimeInUtc }).(pulumi.StringOutput)
}

// Fully qualified identifier of the resource.
func (o LookupCaCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Certificate issue time in UTC. This is a read-only field.
func (o LookupCaCertificateResultOutput) IssueTimeInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) string { return v.IssueTimeInUtc }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupCaCertificateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the CA Certificate resource.
func (o LookupCaCertificateResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The system metadata relating to the CaCertificate resource.
func (o LookupCaCertificateResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the resource.
func (o LookupCaCertificateResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCaCertificateResultOutput{})
}
