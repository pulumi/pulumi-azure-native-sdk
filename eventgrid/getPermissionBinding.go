// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eventgrid

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get properties of a permission binding.
// Azure REST API version: 2023-06-01-preview.
//
// Other available API versions: 2023-12-15-preview, 2024-06-01-preview.
func LookupPermissionBinding(ctx *pulumi.Context, args *LookupPermissionBindingArgs, opts ...pulumi.InvokeOption) (*LookupPermissionBindingResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPermissionBindingResult
	err := ctx.Invoke("azure-native:eventgrid:getPermissionBinding", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPermissionBindingArgs struct {
	// Name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the permission binding.
	PermissionBindingName string `pulumi:"permissionBindingName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The Permission binding resource.
type LookupPermissionBindingResult struct {
	// The name of the client group resource that the permission is bound to.
	// The client group needs to be a resource under the same namespace the permission binding is a part of.
	ClientGroupName *string `pulumi:"clientGroupName"`
	// Description for the Permission Binding resource.
	Description *string `pulumi:"description"`
	// Fully qualified identifier of the resource.
	Id string `pulumi:"id"`
	// Name of the resource.
	Name string `pulumi:"name"`
	// The allowed permission.
	Permission *string `pulumi:"permission"`
	// Provisioning state of the PermissionBinding resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The system metadata relating to the PermissionBinding resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The name of the Topic Space resource that the permission is bound to.
	// The Topic space needs to be a resource under the same namespace the permission binding is a part of.
	TopicSpaceName *string `pulumi:"topicSpaceName"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

func LookupPermissionBindingOutput(ctx *pulumi.Context, args LookupPermissionBindingOutputArgs, opts ...pulumi.InvokeOption) LookupPermissionBindingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPermissionBindingResult, error) {
			args := v.(LookupPermissionBindingArgs)
			r, err := LookupPermissionBinding(ctx, &args, opts...)
			var s LookupPermissionBindingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPermissionBindingResultOutput)
}

type LookupPermissionBindingOutputArgs struct {
	// Name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Name of the permission binding.
	PermissionBindingName pulumi.StringInput `pulumi:"permissionBindingName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupPermissionBindingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionBindingArgs)(nil)).Elem()
}

// The Permission binding resource.
type LookupPermissionBindingResultOutput struct{ *pulumi.OutputState }

func (LookupPermissionBindingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionBindingResult)(nil)).Elem()
}

func (o LookupPermissionBindingResultOutput) ToLookupPermissionBindingResultOutput() LookupPermissionBindingResultOutput {
	return o
}

func (o LookupPermissionBindingResultOutput) ToLookupPermissionBindingResultOutputWithContext(ctx context.Context) LookupPermissionBindingResultOutput {
	return o
}

// The name of the client group resource that the permission is bound to.
// The client group needs to be a resource under the same namespace the permission binding is a part of.
func (o LookupPermissionBindingResultOutput) ClientGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) *string { return v.ClientGroupName }).(pulumi.StringPtrOutput)
}

// Description for the Permission Binding resource.
func (o LookupPermissionBindingResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified identifier of the resource.
func (o LookupPermissionBindingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupPermissionBindingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) string { return v.Name }).(pulumi.StringOutput)
}

// The allowed permission.
func (o LookupPermissionBindingResultOutput) Permission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) *string { return v.Permission }).(pulumi.StringPtrOutput)
}

// Provisioning state of the PermissionBinding resource.
func (o LookupPermissionBindingResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The system metadata relating to the PermissionBinding resource.
func (o LookupPermissionBindingResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The name of the Topic Space resource that the permission is bound to.
// The Topic space needs to be a resource under the same namespace the permission binding is a part of.
func (o LookupPermissionBindingResultOutput) TopicSpaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) *string { return v.TopicSpaceName }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o LookupPermissionBindingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionBindingResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPermissionBindingResultOutput{})
}
