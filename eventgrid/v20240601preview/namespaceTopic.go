// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240601preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Namespace topic details.
type NamespaceTopic struct {
	pulumi.CustomResourceState

	// Event retention for the namespace topic expressed in days. The property default value is 1 day.
	// Min event retention duration value is 1 day and max event retention duration value is 1 day.
	EventRetentionInDays pulumi.IntPtrOutput `pulumi:"eventRetentionInDays"`
	// This determines the format that is expected for incoming events published to the topic.
	InputSchema pulumi.StringPtrOutput `pulumi:"inputSchema"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the namespace topic.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Publisher type of the namespace topic.
	PublisherType pulumi.StringPtrOutput `pulumi:"publisherType"`
	// The system metadata relating to namespace topic resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNamespaceTopic registers a new resource with the given unique name, arguments, and options.
func NewNamespaceTopic(ctx *pulumi.Context,
	name string, args *NamespaceTopicArgs, opts ...pulumi.ResourceOption) (*NamespaceTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.InputSchema == nil {
		args.InputSchema = pulumi.StringPtr("CloudEventSchemaV1_0")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:eventgrid:NamespaceTopic"),
		},
		{
			Type: pulumi.String("azure-native:eventgrid/v20230601preview:NamespaceTopic"),
		},
		{
			Type: pulumi.String("azure-native:eventgrid/v20231215preview:NamespaceTopic"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource NamespaceTopic
	err := ctx.RegisterResource("azure-native:eventgrid/v20240601preview:NamespaceTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceTopic gets an existing NamespaceTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceTopicState, opts ...pulumi.ResourceOption) (*NamespaceTopic, error) {
	var resource NamespaceTopic
	err := ctx.ReadResource("azure-native:eventgrid/v20240601preview:NamespaceTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceTopic resources.
type namespaceTopicState struct {
}

type NamespaceTopicState struct {
}

func (NamespaceTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceTopicState)(nil)).Elem()
}

type namespaceTopicArgs struct {
	// Event retention for the namespace topic expressed in days. The property default value is 1 day.
	// Min event retention duration value is 1 day and max event retention duration value is 1 day.
	EventRetentionInDays *int `pulumi:"eventRetentionInDays"`
	// This determines the format that is expected for incoming events published to the topic.
	InputSchema *string `pulumi:"inputSchema"`
	// Name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// Publisher type of the namespace topic.
	PublisherType *string `pulumi:"publisherType"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the namespace topic.
	TopicName *string `pulumi:"topicName"`
}

// The set of arguments for constructing a NamespaceTopic resource.
type NamespaceTopicArgs struct {
	// Event retention for the namespace topic expressed in days. The property default value is 1 day.
	// Min event retention duration value is 1 day and max event retention duration value is 1 day.
	EventRetentionInDays pulumi.IntPtrInput
	// This determines the format that is expected for incoming events published to the topic.
	InputSchema pulumi.StringPtrInput
	// Name of the namespace.
	NamespaceName pulumi.StringInput
	// Publisher type of the namespace topic.
	PublisherType pulumi.StringPtrInput
	// The name of the resource group within the user's subscription.
	ResourceGroupName pulumi.StringInput
	// Name of the namespace topic.
	TopicName pulumi.StringPtrInput
}

func (NamespaceTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceTopicArgs)(nil)).Elem()
}

type NamespaceTopicInput interface {
	pulumi.Input

	ToNamespaceTopicOutput() NamespaceTopicOutput
	ToNamespaceTopicOutputWithContext(ctx context.Context) NamespaceTopicOutput
}

func (*NamespaceTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceTopic)(nil)).Elem()
}

func (i *NamespaceTopic) ToNamespaceTopicOutput() NamespaceTopicOutput {
	return i.ToNamespaceTopicOutputWithContext(context.Background())
}

func (i *NamespaceTopic) ToNamespaceTopicOutputWithContext(ctx context.Context) NamespaceTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceTopicOutput)
}

type NamespaceTopicOutput struct{ *pulumi.OutputState }

func (NamespaceTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceTopic)(nil)).Elem()
}

func (o NamespaceTopicOutput) ToNamespaceTopicOutput() NamespaceTopicOutput {
	return o
}

func (o NamespaceTopicOutput) ToNamespaceTopicOutputWithContext(ctx context.Context) NamespaceTopicOutput {
	return o
}

// Event retention for the namespace topic expressed in days. The property default value is 1 day.
// Min event retention duration value is 1 day and max event retention duration value is 1 day.
func (o NamespaceTopicOutput) EventRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NamespaceTopic) pulumi.IntPtrOutput { return v.EventRetentionInDays }).(pulumi.IntPtrOutput)
}

// This determines the format that is expected for incoming events published to the topic.
func (o NamespaceTopicOutput) InputSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceTopic) pulumi.StringPtrOutput { return v.InputSchema }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o NamespaceTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the namespace topic.
func (o NamespaceTopicOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceTopic) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Publisher type of the namespace topic.
func (o NamespaceTopicOutput) PublisherType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceTopic) pulumi.StringPtrOutput { return v.PublisherType }).(pulumi.StringPtrOutput)
}

// The system metadata relating to namespace topic resource.
func (o NamespaceTopicOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *NamespaceTopic) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Type of the resource.
func (o NamespaceTopicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NamespaceTopic) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NamespaceTopicOutput{})
}
