// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eventgrid

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List the two keys used to publish to a namespace.
// Azure REST API version: 2023-06-01-preview.
func ListNamespaceSharedAccessKeys(ctx *pulumi.Context, args *ListNamespaceSharedAccessKeysArgs, opts ...pulumi.InvokeOption) (*ListNamespaceSharedAccessKeysResult, error) {
	var rv ListNamespaceSharedAccessKeysResult
	err := ctx.Invoke("azure-native:eventgrid:listNamespaceSharedAccessKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListNamespaceSharedAccessKeysArgs struct {
	// Name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Shared access keys of the Namespace.
type ListNamespaceSharedAccessKeysResult struct {
	// Shared access key1 for the namespace.
	Key1 *string `pulumi:"key1"`
	// Shared access key2 for the namespace.
	Key2 *string `pulumi:"key2"`
}

func ListNamespaceSharedAccessKeysOutput(ctx *pulumi.Context, args ListNamespaceSharedAccessKeysOutputArgs, opts ...pulumi.InvokeOption) ListNamespaceSharedAccessKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListNamespaceSharedAccessKeysResult, error) {
			args := v.(ListNamespaceSharedAccessKeysArgs)
			r, err := ListNamespaceSharedAccessKeys(ctx, &args, opts...)
			var s ListNamespaceSharedAccessKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListNamespaceSharedAccessKeysResultOutput)
}

type ListNamespaceSharedAccessKeysOutputArgs struct {
	// Name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListNamespaceSharedAccessKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNamespaceSharedAccessKeysArgs)(nil)).Elem()
}

// Shared access keys of the Namespace.
type ListNamespaceSharedAccessKeysResultOutput struct{ *pulumi.OutputState }

func (ListNamespaceSharedAccessKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNamespaceSharedAccessKeysResult)(nil)).Elem()
}

func (o ListNamespaceSharedAccessKeysResultOutput) ToListNamespaceSharedAccessKeysResultOutput() ListNamespaceSharedAccessKeysResultOutput {
	return o
}

func (o ListNamespaceSharedAccessKeysResultOutput) ToListNamespaceSharedAccessKeysResultOutputWithContext(ctx context.Context) ListNamespaceSharedAccessKeysResultOutput {
	return o
}

// Shared access key1 for the namespace.
func (o ListNamespaceSharedAccessKeysResultOutput) Key1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListNamespaceSharedAccessKeysResult) *string { return v.Key1 }).(pulumi.StringPtrOutput)
}

// Shared access key2 for the namespace.
func (o ListNamespaceSharedAccessKeysResultOutput) Key2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListNamespaceSharedAccessKeysResult) *string { return v.Key2 }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListNamespaceSharedAccessKeysResultOutput{})
}
