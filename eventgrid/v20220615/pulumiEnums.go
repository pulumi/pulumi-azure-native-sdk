// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220615

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
type AdvancedFilterOperatorType string

const (
	AdvancedFilterOperatorTypeNumberIn                  = AdvancedFilterOperatorType("NumberIn")
	AdvancedFilterOperatorTypeNumberNotIn               = AdvancedFilterOperatorType("NumberNotIn")
	AdvancedFilterOperatorTypeNumberLessThan            = AdvancedFilterOperatorType("NumberLessThan")
	AdvancedFilterOperatorTypeNumberGreaterThan         = AdvancedFilterOperatorType("NumberGreaterThan")
	AdvancedFilterOperatorTypeNumberLessThanOrEquals    = AdvancedFilterOperatorType("NumberLessThanOrEquals")
	AdvancedFilterOperatorTypeNumberGreaterThanOrEquals = AdvancedFilterOperatorType("NumberGreaterThanOrEquals")
	AdvancedFilterOperatorTypeBoolEquals                = AdvancedFilterOperatorType("BoolEquals")
	AdvancedFilterOperatorTypeStringIn                  = AdvancedFilterOperatorType("StringIn")
	AdvancedFilterOperatorTypeStringNotIn               = AdvancedFilterOperatorType("StringNotIn")
	AdvancedFilterOperatorTypeStringBeginsWith          = AdvancedFilterOperatorType("StringBeginsWith")
	AdvancedFilterOperatorTypeStringEndsWith            = AdvancedFilterOperatorType("StringEndsWith")
	AdvancedFilterOperatorTypeStringContains            = AdvancedFilterOperatorType("StringContains")
	AdvancedFilterOperatorTypeNumberInRange             = AdvancedFilterOperatorType("NumberInRange")
	AdvancedFilterOperatorTypeNumberNotInRange          = AdvancedFilterOperatorType("NumberNotInRange")
	AdvancedFilterOperatorTypeStringNotBeginsWith       = AdvancedFilterOperatorType("StringNotBeginsWith")
	AdvancedFilterOperatorTypeStringNotEndsWith         = AdvancedFilterOperatorType("StringNotEndsWith")
	AdvancedFilterOperatorTypeStringNotContains         = AdvancedFilterOperatorType("StringNotContains")
	AdvancedFilterOperatorTypeIsNullOrUndefined         = AdvancedFilterOperatorType("IsNullOrUndefined")
	AdvancedFilterOperatorTypeIsNotNull                 = AdvancedFilterOperatorType("IsNotNull")
)

// Provisioning state of the channel.
type ChannelProvisioningState string

const (
	ChannelProvisioningStateCreating                              = ChannelProvisioningState("Creating")
	ChannelProvisioningStateUpdating                              = ChannelProvisioningState("Updating")
	ChannelProvisioningStateDeleting                              = ChannelProvisioningState("Deleting")
	ChannelProvisioningStateSucceeded                             = ChannelProvisioningState("Succeeded")
	ChannelProvisioningStateCanceled                              = ChannelProvisioningState("Canceled")
	ChannelProvisioningStateFailed                                = ChannelProvisioningState("Failed")
	ChannelProvisioningStateIdleDueToMirroredPartnerTopicDeletion = ChannelProvisioningState("IdleDueToMirroredPartnerTopicDeletion")
)

func (ChannelProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelProvisioningState)(nil)).Elem()
}

func (e ChannelProvisioningState) ToChannelProvisioningStateOutput() ChannelProvisioningStateOutput {
	return pulumi.ToOutput(e).(ChannelProvisioningStateOutput)
}

func (e ChannelProvisioningState) ToChannelProvisioningStateOutputWithContext(ctx context.Context) ChannelProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelProvisioningStateOutput)
}

func (e ChannelProvisioningState) ToChannelProvisioningStatePtrOutput() ChannelProvisioningStatePtrOutput {
	return e.ToChannelProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ChannelProvisioningState) ToChannelProvisioningStatePtrOutputWithContext(ctx context.Context) ChannelProvisioningStatePtrOutput {
	return ChannelProvisioningState(e).ToChannelProvisioningStateOutputWithContext(ctx).ToChannelProvisioningStatePtrOutputWithContext(ctx)
}

func (e ChannelProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelProvisioningStateOutput struct{ *pulumi.OutputState }

func (ChannelProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelProvisioningState)(nil)).Elem()
}

func (o ChannelProvisioningStateOutput) ToChannelProvisioningStateOutput() ChannelProvisioningStateOutput {
	return o
}

func (o ChannelProvisioningStateOutput) ToChannelProvisioningStateOutputWithContext(ctx context.Context) ChannelProvisioningStateOutput {
	return o
}

func (o ChannelProvisioningStateOutput) ToChannelProvisioningStatePtrOutput() ChannelProvisioningStatePtrOutput {
	return o.ToChannelProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ChannelProvisioningStateOutput) ToChannelProvisioningStatePtrOutputWithContext(ctx context.Context) ChannelProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelProvisioningState) *ChannelProvisioningState {
		return &v
	}).(ChannelProvisioningStatePtrOutput)
}

func (o ChannelProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ChannelProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelProvisioningState)(nil)).Elem()
}

func (o ChannelProvisioningStatePtrOutput) ToChannelProvisioningStatePtrOutput() ChannelProvisioningStatePtrOutput {
	return o
}

func (o ChannelProvisioningStatePtrOutput) ToChannelProvisioningStatePtrOutputWithContext(ctx context.Context) ChannelProvisioningStatePtrOutput {
	return o
}

func (o ChannelProvisioningStatePtrOutput) Elem() ChannelProvisioningStateOutput {
	return o.ApplyT(func(v *ChannelProvisioningState) ChannelProvisioningState {
		if v != nil {
			return *v
		}
		var ret ChannelProvisioningState
		return ret
	}).(ChannelProvisioningStateOutput)
}

func (o ChannelProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelProvisioningStateInput is an input type that accepts values of the ChannelProvisioningState enum
// A concrete instance of `ChannelProvisioningStateInput` can be one of the following:
//
//	ChannelProvisioningStateCreating
//	ChannelProvisioningStateUpdating
//	ChannelProvisioningStateDeleting
//	ChannelProvisioningStateSucceeded
//	ChannelProvisioningStateCanceled
//	ChannelProvisioningStateFailed
//	ChannelProvisioningStateIdleDueToMirroredPartnerTopicDeletion
type ChannelProvisioningStateInput interface {
	pulumi.Input

	ToChannelProvisioningStateOutput() ChannelProvisioningStateOutput
	ToChannelProvisioningStateOutputWithContext(context.Context) ChannelProvisioningStateOutput
}

var channelProvisioningStatePtrType = reflect.TypeOf((**ChannelProvisioningState)(nil)).Elem()

type ChannelProvisioningStatePtrInput interface {
	pulumi.Input

	ToChannelProvisioningStatePtrOutput() ChannelProvisioningStatePtrOutput
	ToChannelProvisioningStatePtrOutputWithContext(context.Context) ChannelProvisioningStatePtrOutput
}

type channelProvisioningStatePtr string

func ChannelProvisioningStatePtr(v string) ChannelProvisioningStatePtrInput {
	return (*channelProvisioningStatePtr)(&v)
}

func (*channelProvisioningStatePtr) ElementType() reflect.Type {
	return channelProvisioningStatePtrType
}

func (in *channelProvisioningStatePtr) ToChannelProvisioningStatePtrOutput() ChannelProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ChannelProvisioningStatePtrOutput)
}

func (in *channelProvisioningStatePtr) ToChannelProvisioningStatePtrOutputWithContext(ctx context.Context) ChannelProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelProvisioningStatePtrOutput)
}

// The type of the event channel which represents the direction flow of events.
type ChannelType string

const (
	ChannelTypePartnerTopic = ChannelType("PartnerTopic")
)

func (ChannelType) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelType)(nil)).Elem()
}

func (e ChannelType) ToChannelTypeOutput() ChannelTypeOutput {
	return pulumi.ToOutput(e).(ChannelTypeOutput)
}

func (e ChannelType) ToChannelTypeOutputWithContext(ctx context.Context) ChannelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelTypeOutput)
}

func (e ChannelType) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return e.ToChannelTypePtrOutputWithContext(context.Background())
}

func (e ChannelType) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return ChannelType(e).ToChannelTypeOutputWithContext(ctx).ToChannelTypePtrOutputWithContext(ctx)
}

func (e ChannelType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelTypeOutput struct{ *pulumi.OutputState }

func (ChannelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelType)(nil)).Elem()
}

func (o ChannelTypeOutput) ToChannelTypeOutput() ChannelTypeOutput {
	return o
}

func (o ChannelTypeOutput) ToChannelTypeOutputWithContext(ctx context.Context) ChannelTypeOutput {
	return o
}

func (o ChannelTypeOutput) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return o.ToChannelTypePtrOutputWithContext(context.Background())
}

func (o ChannelTypeOutput) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelType) *ChannelType {
		return &v
	}).(ChannelTypePtrOutput)
}

func (o ChannelTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelTypePtrOutput struct{ *pulumi.OutputState }

func (ChannelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelType)(nil)).Elem()
}

func (o ChannelTypePtrOutput) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return o
}

func (o ChannelTypePtrOutput) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return o
}

func (o ChannelTypePtrOutput) Elem() ChannelTypeOutput {
	return o.ApplyT(func(v *ChannelType) ChannelType {
		if v != nil {
			return *v
		}
		var ret ChannelType
		return ret
	}).(ChannelTypeOutput)
}

func (o ChannelTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelTypeInput is an input type that accepts values of the ChannelType enum
// A concrete instance of `ChannelTypeInput` can be one of the following:
//
//	ChannelTypePartnerTopic
type ChannelTypeInput interface {
	pulumi.Input

	ToChannelTypeOutput() ChannelTypeOutput
	ToChannelTypeOutputWithContext(context.Context) ChannelTypeOutput
}

var channelTypePtrType = reflect.TypeOf((**ChannelType)(nil)).Elem()

type ChannelTypePtrInput interface {
	pulumi.Input

	ToChannelTypePtrOutput() ChannelTypePtrOutput
	ToChannelTypePtrOutputWithContext(context.Context) ChannelTypePtrOutput
}

type channelTypePtr string

func ChannelTypePtr(v string) ChannelTypePtrInput {
	return (*channelTypePtr)(&v)
}

func (*channelTypePtr) ElementType() reflect.Type {
	return channelTypePtrType
}

func (in *channelTypePtr) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return pulumi.ToOutput(in).(ChannelTypePtrOutput)
}

func (in *channelTypePtr) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelTypePtrOutput)
}

// Data Residency Boundary of the resource.
type DataResidencyBoundary string

const (
	DataResidencyBoundaryWithinGeopair = DataResidencyBoundary("WithinGeopair")
	DataResidencyBoundaryWithinRegion  = DataResidencyBoundary("WithinRegion")
)

func (DataResidencyBoundary) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResidencyBoundary)(nil)).Elem()
}

func (e DataResidencyBoundary) ToDataResidencyBoundaryOutput() DataResidencyBoundaryOutput {
	return pulumi.ToOutput(e).(DataResidencyBoundaryOutput)
}

func (e DataResidencyBoundary) ToDataResidencyBoundaryOutputWithContext(ctx context.Context) DataResidencyBoundaryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataResidencyBoundaryOutput)
}

func (e DataResidencyBoundary) ToDataResidencyBoundaryPtrOutput() DataResidencyBoundaryPtrOutput {
	return e.ToDataResidencyBoundaryPtrOutputWithContext(context.Background())
}

func (e DataResidencyBoundary) ToDataResidencyBoundaryPtrOutputWithContext(ctx context.Context) DataResidencyBoundaryPtrOutput {
	return DataResidencyBoundary(e).ToDataResidencyBoundaryOutputWithContext(ctx).ToDataResidencyBoundaryPtrOutputWithContext(ctx)
}

func (e DataResidencyBoundary) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResidencyBoundary) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResidencyBoundary) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataResidencyBoundary) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataResidencyBoundaryOutput struct{ *pulumi.OutputState }

func (DataResidencyBoundaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResidencyBoundary)(nil)).Elem()
}

func (o DataResidencyBoundaryOutput) ToDataResidencyBoundaryOutput() DataResidencyBoundaryOutput {
	return o
}

func (o DataResidencyBoundaryOutput) ToDataResidencyBoundaryOutputWithContext(ctx context.Context) DataResidencyBoundaryOutput {
	return o
}

func (o DataResidencyBoundaryOutput) ToDataResidencyBoundaryPtrOutput() DataResidencyBoundaryPtrOutput {
	return o.ToDataResidencyBoundaryPtrOutputWithContext(context.Background())
}

func (o DataResidencyBoundaryOutput) ToDataResidencyBoundaryPtrOutputWithContext(ctx context.Context) DataResidencyBoundaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataResidencyBoundary) *DataResidencyBoundary {
		return &v
	}).(DataResidencyBoundaryPtrOutput)
}

func (o DataResidencyBoundaryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataResidencyBoundaryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResidencyBoundary) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataResidencyBoundaryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResidencyBoundaryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResidencyBoundary) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataResidencyBoundaryPtrOutput struct{ *pulumi.OutputState }

func (DataResidencyBoundaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataResidencyBoundary)(nil)).Elem()
}

func (o DataResidencyBoundaryPtrOutput) ToDataResidencyBoundaryPtrOutput() DataResidencyBoundaryPtrOutput {
	return o
}

func (o DataResidencyBoundaryPtrOutput) ToDataResidencyBoundaryPtrOutputWithContext(ctx context.Context) DataResidencyBoundaryPtrOutput {
	return o
}

func (o DataResidencyBoundaryPtrOutput) Elem() DataResidencyBoundaryOutput {
	return o.ApplyT(func(v *DataResidencyBoundary) DataResidencyBoundary {
		if v != nil {
			return *v
		}
		var ret DataResidencyBoundary
		return ret
	}).(DataResidencyBoundaryOutput)
}

func (o DataResidencyBoundaryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResidencyBoundaryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataResidencyBoundary) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataResidencyBoundaryInput is an input type that accepts values of the DataResidencyBoundary enum
// A concrete instance of `DataResidencyBoundaryInput` can be one of the following:
//
//	DataResidencyBoundaryWithinGeopair
//	DataResidencyBoundaryWithinRegion
type DataResidencyBoundaryInput interface {
	pulumi.Input

	ToDataResidencyBoundaryOutput() DataResidencyBoundaryOutput
	ToDataResidencyBoundaryOutputWithContext(context.Context) DataResidencyBoundaryOutput
}

var dataResidencyBoundaryPtrType = reflect.TypeOf((**DataResidencyBoundary)(nil)).Elem()

type DataResidencyBoundaryPtrInput interface {
	pulumi.Input

	ToDataResidencyBoundaryPtrOutput() DataResidencyBoundaryPtrOutput
	ToDataResidencyBoundaryPtrOutputWithContext(context.Context) DataResidencyBoundaryPtrOutput
}

type dataResidencyBoundaryPtr string

func DataResidencyBoundaryPtr(v string) DataResidencyBoundaryPtrInput {
	return (*dataResidencyBoundaryPtr)(&v)
}

func (*dataResidencyBoundaryPtr) ElementType() reflect.Type {
	return dataResidencyBoundaryPtrType
}

func (in *dataResidencyBoundaryPtr) ToDataResidencyBoundaryPtrOutput() DataResidencyBoundaryPtrOutput {
	return pulumi.ToOutput(in).(DataResidencyBoundaryPtrOutput)
}

func (in *dataResidencyBoundaryPtr) ToDataResidencyBoundaryPtrOutputWithContext(ctx context.Context) DataResidencyBoundaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataResidencyBoundaryPtrOutput)
}

// Type of the endpoint for the dead letter destination
type DeadLetterEndPointType string

const (
	DeadLetterEndPointTypeStorageBlob = DeadLetterEndPointType("StorageBlob")
)

// Type of the delivery attribute or header name.
type DeliveryAttributeMappingType string

const (
	DeliveryAttributeMappingTypeStatic  = DeliveryAttributeMappingType("Static")
	DeliveryAttributeMappingTypeDynamic = DeliveryAttributeMappingType("Dynamic")
)

// Type of the endpoint for the event subscription destination.
type EndpointType string

const (
	EndpointTypeWebHook          = EndpointType("WebHook")
	EndpointTypeEventHub         = EndpointType("EventHub")
	EndpointTypeStorageQueue     = EndpointType("StorageQueue")
	EndpointTypeHybridConnection = EndpointType("HybridConnection")
	EndpointTypeServiceBusQueue  = EndpointType("ServiceBusQueue")
	EndpointTypeServiceBusTopic  = EndpointType("ServiceBusTopic")
	EndpointTypeAzureFunction    = EndpointType("AzureFunction")
)

// The kind of event type used.
type EventDefinitionKind string

const (
	EventDefinitionKindInline = EventDefinitionKind("Inline")
)

func (EventDefinitionKind) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDefinitionKind)(nil)).Elem()
}

func (e EventDefinitionKind) ToEventDefinitionKindOutput() EventDefinitionKindOutput {
	return pulumi.ToOutput(e).(EventDefinitionKindOutput)
}

func (e EventDefinitionKind) ToEventDefinitionKindOutputWithContext(ctx context.Context) EventDefinitionKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventDefinitionKindOutput)
}

func (e EventDefinitionKind) ToEventDefinitionKindPtrOutput() EventDefinitionKindPtrOutput {
	return e.ToEventDefinitionKindPtrOutputWithContext(context.Background())
}

func (e EventDefinitionKind) ToEventDefinitionKindPtrOutputWithContext(ctx context.Context) EventDefinitionKindPtrOutput {
	return EventDefinitionKind(e).ToEventDefinitionKindOutputWithContext(ctx).ToEventDefinitionKindPtrOutputWithContext(ctx)
}

func (e EventDefinitionKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventDefinitionKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventDefinitionKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventDefinitionKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventDefinitionKindOutput struct{ *pulumi.OutputState }

func (EventDefinitionKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDefinitionKind)(nil)).Elem()
}

func (o EventDefinitionKindOutput) ToEventDefinitionKindOutput() EventDefinitionKindOutput {
	return o
}

func (o EventDefinitionKindOutput) ToEventDefinitionKindOutputWithContext(ctx context.Context) EventDefinitionKindOutput {
	return o
}

func (o EventDefinitionKindOutput) ToEventDefinitionKindPtrOutput() EventDefinitionKindPtrOutput {
	return o.ToEventDefinitionKindPtrOutputWithContext(context.Background())
}

func (o EventDefinitionKindOutput) ToEventDefinitionKindPtrOutputWithContext(ctx context.Context) EventDefinitionKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventDefinitionKind) *EventDefinitionKind {
		return &v
	}).(EventDefinitionKindPtrOutput)
}

func (o EventDefinitionKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventDefinitionKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventDefinitionKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventDefinitionKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventDefinitionKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventDefinitionKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventDefinitionKindPtrOutput struct{ *pulumi.OutputState }

func (EventDefinitionKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDefinitionKind)(nil)).Elem()
}

func (o EventDefinitionKindPtrOutput) ToEventDefinitionKindPtrOutput() EventDefinitionKindPtrOutput {
	return o
}

func (o EventDefinitionKindPtrOutput) ToEventDefinitionKindPtrOutputWithContext(ctx context.Context) EventDefinitionKindPtrOutput {
	return o
}

func (o EventDefinitionKindPtrOutput) Elem() EventDefinitionKindOutput {
	return o.ApplyT(func(v *EventDefinitionKind) EventDefinitionKind {
		if v != nil {
			return *v
		}
		var ret EventDefinitionKind
		return ret
	}).(EventDefinitionKindOutput)
}

func (o EventDefinitionKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventDefinitionKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventDefinitionKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventDefinitionKindInput is an input type that accepts values of the EventDefinitionKind enum
// A concrete instance of `EventDefinitionKindInput` can be one of the following:
//
//	EventDefinitionKindInline
type EventDefinitionKindInput interface {
	pulumi.Input

	ToEventDefinitionKindOutput() EventDefinitionKindOutput
	ToEventDefinitionKindOutputWithContext(context.Context) EventDefinitionKindOutput
}

var eventDefinitionKindPtrType = reflect.TypeOf((**EventDefinitionKind)(nil)).Elem()

type EventDefinitionKindPtrInput interface {
	pulumi.Input

	ToEventDefinitionKindPtrOutput() EventDefinitionKindPtrOutput
	ToEventDefinitionKindPtrOutputWithContext(context.Context) EventDefinitionKindPtrOutput
}

type eventDefinitionKindPtr string

func EventDefinitionKindPtr(v string) EventDefinitionKindPtrInput {
	return (*eventDefinitionKindPtr)(&v)
}

func (*eventDefinitionKindPtr) ElementType() reflect.Type {
	return eventDefinitionKindPtrType
}

func (in *eventDefinitionKindPtr) ToEventDefinitionKindPtrOutput() EventDefinitionKindPtrOutput {
	return pulumi.ToOutput(in).(EventDefinitionKindPtrOutput)
}

func (in *eventDefinitionKindPtr) ToEventDefinitionKindPtrOutputWithContext(ctx context.Context) EventDefinitionKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventDefinitionKindPtrOutput)
}

// The event delivery schema for the event subscription.
type EventDeliverySchema string

const (
	EventDeliverySchemaEventGridSchema       = EventDeliverySchema("EventGridSchema")
	EventDeliverySchemaCustomInputSchema     = EventDeliverySchema("CustomInputSchema")
	EventDeliverySchema_CloudEventSchemaV1_0 = EventDeliverySchema("CloudEventSchemaV1_0")
)

func (EventDeliverySchema) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDeliverySchema)(nil)).Elem()
}

func (e EventDeliverySchema) ToEventDeliverySchemaOutput() EventDeliverySchemaOutput {
	return pulumi.ToOutput(e).(EventDeliverySchemaOutput)
}

func (e EventDeliverySchema) ToEventDeliverySchemaOutputWithContext(ctx context.Context) EventDeliverySchemaOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventDeliverySchemaOutput)
}

func (e EventDeliverySchema) ToEventDeliverySchemaPtrOutput() EventDeliverySchemaPtrOutput {
	return e.ToEventDeliverySchemaPtrOutputWithContext(context.Background())
}

func (e EventDeliverySchema) ToEventDeliverySchemaPtrOutputWithContext(ctx context.Context) EventDeliverySchemaPtrOutput {
	return EventDeliverySchema(e).ToEventDeliverySchemaOutputWithContext(ctx).ToEventDeliverySchemaPtrOutputWithContext(ctx)
}

func (e EventDeliverySchema) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventDeliverySchema) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventDeliverySchema) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventDeliverySchema) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventDeliverySchemaOutput struct{ *pulumi.OutputState }

func (EventDeliverySchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDeliverySchema)(nil)).Elem()
}

func (o EventDeliverySchemaOutput) ToEventDeliverySchemaOutput() EventDeliverySchemaOutput {
	return o
}

func (o EventDeliverySchemaOutput) ToEventDeliverySchemaOutputWithContext(ctx context.Context) EventDeliverySchemaOutput {
	return o
}

func (o EventDeliverySchemaOutput) ToEventDeliverySchemaPtrOutput() EventDeliverySchemaPtrOutput {
	return o.ToEventDeliverySchemaPtrOutputWithContext(context.Background())
}

func (o EventDeliverySchemaOutput) ToEventDeliverySchemaPtrOutputWithContext(ctx context.Context) EventDeliverySchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventDeliverySchema) *EventDeliverySchema {
		return &v
	}).(EventDeliverySchemaPtrOutput)
}

func (o EventDeliverySchemaOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventDeliverySchemaOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventDeliverySchema) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventDeliverySchemaOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventDeliverySchemaOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventDeliverySchema) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventDeliverySchemaPtrOutput struct{ *pulumi.OutputState }

func (EventDeliverySchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDeliverySchema)(nil)).Elem()
}

func (o EventDeliverySchemaPtrOutput) ToEventDeliverySchemaPtrOutput() EventDeliverySchemaPtrOutput {
	return o
}

func (o EventDeliverySchemaPtrOutput) ToEventDeliverySchemaPtrOutputWithContext(ctx context.Context) EventDeliverySchemaPtrOutput {
	return o
}

func (o EventDeliverySchemaPtrOutput) Elem() EventDeliverySchemaOutput {
	return o.ApplyT(func(v *EventDeliverySchema) EventDeliverySchema {
		if v != nil {
			return *v
		}
		var ret EventDeliverySchema
		return ret
	}).(EventDeliverySchemaOutput)
}

func (o EventDeliverySchemaPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventDeliverySchemaPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventDeliverySchema) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventDeliverySchemaInput is an input type that accepts values of the EventDeliverySchema enum
// A concrete instance of `EventDeliverySchemaInput` can be one of the following:
//
//	EventDeliverySchemaEventGridSchema
//	EventDeliverySchemaCustomInputSchema
//	EventDeliverySchema_CloudEventSchemaV1_0
type EventDeliverySchemaInput interface {
	pulumi.Input

	ToEventDeliverySchemaOutput() EventDeliverySchemaOutput
	ToEventDeliverySchemaOutputWithContext(context.Context) EventDeliverySchemaOutput
}

var eventDeliverySchemaPtrType = reflect.TypeOf((**EventDeliverySchema)(nil)).Elem()

type EventDeliverySchemaPtrInput interface {
	pulumi.Input

	ToEventDeliverySchemaPtrOutput() EventDeliverySchemaPtrOutput
	ToEventDeliverySchemaPtrOutputWithContext(context.Context) EventDeliverySchemaPtrOutput
}

type eventDeliverySchemaPtr string

func EventDeliverySchemaPtr(v string) EventDeliverySchemaPtrInput {
	return (*eventDeliverySchemaPtr)(&v)
}

func (*eventDeliverySchemaPtr) ElementType() reflect.Type {
	return eventDeliverySchemaPtrType
}

func (in *eventDeliverySchemaPtr) ToEventDeliverySchemaPtrOutput() EventDeliverySchemaPtrOutput {
	return pulumi.ToOutput(in).(EventDeliverySchemaPtrOutput)
}

func (in *eventDeliverySchemaPtr) ToEventDeliverySchemaPtrOutputWithContext(ctx context.Context) EventDeliverySchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventDeliverySchemaPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
type EventSubscriptionIdentityType string

const (
	EventSubscriptionIdentityTypeSystemAssigned = EventSubscriptionIdentityType("SystemAssigned")
	EventSubscriptionIdentityTypeUserAssigned   = EventSubscriptionIdentityType("UserAssigned")
)

func (EventSubscriptionIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSubscriptionIdentityType)(nil)).Elem()
}

func (e EventSubscriptionIdentityType) ToEventSubscriptionIdentityTypeOutput() EventSubscriptionIdentityTypeOutput {
	return pulumi.ToOutput(e).(EventSubscriptionIdentityTypeOutput)
}

func (e EventSubscriptionIdentityType) ToEventSubscriptionIdentityTypeOutputWithContext(ctx context.Context) EventSubscriptionIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventSubscriptionIdentityTypeOutput)
}

func (e EventSubscriptionIdentityType) ToEventSubscriptionIdentityTypePtrOutput() EventSubscriptionIdentityTypePtrOutput {
	return e.ToEventSubscriptionIdentityTypePtrOutputWithContext(context.Background())
}

func (e EventSubscriptionIdentityType) ToEventSubscriptionIdentityTypePtrOutputWithContext(ctx context.Context) EventSubscriptionIdentityTypePtrOutput {
	return EventSubscriptionIdentityType(e).ToEventSubscriptionIdentityTypeOutputWithContext(ctx).ToEventSubscriptionIdentityTypePtrOutputWithContext(ctx)
}

func (e EventSubscriptionIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventSubscriptionIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventSubscriptionIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventSubscriptionIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventSubscriptionIdentityTypeOutput struct{ *pulumi.OutputState }

func (EventSubscriptionIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSubscriptionIdentityType)(nil)).Elem()
}

func (o EventSubscriptionIdentityTypeOutput) ToEventSubscriptionIdentityTypeOutput() EventSubscriptionIdentityTypeOutput {
	return o
}

func (o EventSubscriptionIdentityTypeOutput) ToEventSubscriptionIdentityTypeOutputWithContext(ctx context.Context) EventSubscriptionIdentityTypeOutput {
	return o
}

func (o EventSubscriptionIdentityTypeOutput) ToEventSubscriptionIdentityTypePtrOutput() EventSubscriptionIdentityTypePtrOutput {
	return o.ToEventSubscriptionIdentityTypePtrOutputWithContext(context.Background())
}

func (o EventSubscriptionIdentityTypeOutput) ToEventSubscriptionIdentityTypePtrOutputWithContext(ctx context.Context) EventSubscriptionIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSubscriptionIdentityType) *EventSubscriptionIdentityType {
		return &v
	}).(EventSubscriptionIdentityTypePtrOutput)
}

func (o EventSubscriptionIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventSubscriptionIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventSubscriptionIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventSubscriptionIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventSubscriptionIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventSubscriptionIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventSubscriptionIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (EventSubscriptionIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSubscriptionIdentityType)(nil)).Elem()
}

func (o EventSubscriptionIdentityTypePtrOutput) ToEventSubscriptionIdentityTypePtrOutput() EventSubscriptionIdentityTypePtrOutput {
	return o
}

func (o EventSubscriptionIdentityTypePtrOutput) ToEventSubscriptionIdentityTypePtrOutputWithContext(ctx context.Context) EventSubscriptionIdentityTypePtrOutput {
	return o
}

func (o EventSubscriptionIdentityTypePtrOutput) Elem() EventSubscriptionIdentityTypeOutput {
	return o.ApplyT(func(v *EventSubscriptionIdentityType) EventSubscriptionIdentityType {
		if v != nil {
			return *v
		}
		var ret EventSubscriptionIdentityType
		return ret
	}).(EventSubscriptionIdentityTypeOutput)
}

func (o EventSubscriptionIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventSubscriptionIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventSubscriptionIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventSubscriptionIdentityTypeInput is an input type that accepts values of the EventSubscriptionIdentityType enum
// A concrete instance of `EventSubscriptionIdentityTypeInput` can be one of the following:
//
//	EventSubscriptionIdentityTypeSystemAssigned
//	EventSubscriptionIdentityTypeUserAssigned
type EventSubscriptionIdentityTypeInput interface {
	pulumi.Input

	ToEventSubscriptionIdentityTypeOutput() EventSubscriptionIdentityTypeOutput
	ToEventSubscriptionIdentityTypeOutputWithContext(context.Context) EventSubscriptionIdentityTypeOutput
}

var eventSubscriptionIdentityTypePtrType = reflect.TypeOf((**EventSubscriptionIdentityType)(nil)).Elem()

type EventSubscriptionIdentityTypePtrInput interface {
	pulumi.Input

	ToEventSubscriptionIdentityTypePtrOutput() EventSubscriptionIdentityTypePtrOutput
	ToEventSubscriptionIdentityTypePtrOutputWithContext(context.Context) EventSubscriptionIdentityTypePtrOutput
}

type eventSubscriptionIdentityTypePtr string

func EventSubscriptionIdentityTypePtr(v string) EventSubscriptionIdentityTypePtrInput {
	return (*eventSubscriptionIdentityTypePtr)(&v)
}

func (*eventSubscriptionIdentityTypePtr) ElementType() reflect.Type {
	return eventSubscriptionIdentityTypePtrType
}

func (in *eventSubscriptionIdentityTypePtr) ToEventSubscriptionIdentityTypePtrOutput() EventSubscriptionIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(EventSubscriptionIdentityTypePtrOutput)
}

func (in *eventSubscriptionIdentityTypePtr) ToEventSubscriptionIdentityTypePtrOutputWithContext(ctx context.Context) EventSubscriptionIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventSubscriptionIdentityTypePtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
type IdentityType string

const (
	IdentityTypeNone                         = IdentityType("None")
	IdentityTypeSystemAssigned               = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned                 = IdentityType("UserAssigned")
	IdentityType_SystemAssigned_UserAssigned = IdentityType("SystemAssigned, UserAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeNone
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
//	IdentityType_SystemAssigned_UserAssigned
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

// This determines the format that Event Grid should expect for incoming events published to the topic.
type InputSchema string

const (
	InputSchemaEventGridSchema       = InputSchema("EventGridSchema")
	InputSchemaCustomEventSchema     = InputSchema("CustomEventSchema")
	InputSchema_CloudEventSchemaV1_0 = InputSchema("CloudEventSchemaV1_0")
)

func (InputSchema) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchema)(nil)).Elem()
}

func (e InputSchema) ToInputSchemaOutput() InputSchemaOutput {
	return pulumi.ToOutput(e).(InputSchemaOutput)
}

func (e InputSchema) ToInputSchemaOutputWithContext(ctx context.Context) InputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InputSchemaOutput)
}

func (e InputSchema) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return e.ToInputSchemaPtrOutputWithContext(context.Background())
}

func (e InputSchema) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return InputSchema(e).ToInputSchemaOutputWithContext(ctx).ToInputSchemaPtrOutputWithContext(ctx)
}

func (e InputSchema) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputSchema) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputSchema) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InputSchema) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InputSchemaOutput struct{ *pulumi.OutputState }

func (InputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSchema)(nil)).Elem()
}

func (o InputSchemaOutput) ToInputSchemaOutput() InputSchemaOutput {
	return o
}

func (o InputSchemaOutput) ToInputSchemaOutputWithContext(ctx context.Context) InputSchemaOutput {
	return o
}

func (o InputSchemaOutput) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return o.ToInputSchemaPtrOutputWithContext(context.Background())
}

func (o InputSchemaOutput) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputSchema) *InputSchema {
		return &v
	}).(InputSchemaPtrOutput)
}

func (o InputSchemaOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InputSchemaOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputSchema) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InputSchemaOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputSchemaOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputSchema) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InputSchemaPtrOutput struct{ *pulumi.OutputState }

func (InputSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSchema)(nil)).Elem()
}

func (o InputSchemaPtrOutput) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return o
}

func (o InputSchemaPtrOutput) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return o
}

func (o InputSchemaPtrOutput) Elem() InputSchemaOutput {
	return o.ApplyT(func(v *InputSchema) InputSchema {
		if v != nil {
			return *v
		}
		var ret InputSchema
		return ret
	}).(InputSchemaOutput)
}

func (o InputSchemaPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputSchemaPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InputSchema) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InputSchemaInput is an input type that accepts values of the InputSchema enum
// A concrete instance of `InputSchemaInput` can be one of the following:
//
//	InputSchemaEventGridSchema
//	InputSchemaCustomEventSchema
//	InputSchema_CloudEventSchemaV1_0
type InputSchemaInput interface {
	pulumi.Input

	ToInputSchemaOutput() InputSchemaOutput
	ToInputSchemaOutputWithContext(context.Context) InputSchemaOutput
}

var inputSchemaPtrType = reflect.TypeOf((**InputSchema)(nil)).Elem()

type InputSchemaPtrInput interface {
	pulumi.Input

	ToInputSchemaPtrOutput() InputSchemaPtrOutput
	ToInputSchemaPtrOutputWithContext(context.Context) InputSchemaPtrOutput
}

type inputSchemaPtr string

func InputSchemaPtr(v string) InputSchemaPtrInput {
	return (*inputSchemaPtr)(&v)
}

func (*inputSchemaPtr) ElementType() reflect.Type {
	return inputSchemaPtrType
}

func (in *inputSchemaPtr) ToInputSchemaPtrOutput() InputSchemaPtrOutput {
	return pulumi.ToOutput(in).(InputSchemaPtrOutput)
}

func (in *inputSchemaPtr) ToInputSchemaPtrOutputWithContext(ctx context.Context) InputSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InputSchemaPtrOutput)
}

// Type of the custom mapping
type InputSchemaMappingType string

const (
	InputSchemaMappingTypeJson = InputSchemaMappingType("Json")
)

// Action to perform based on the match or no match of the IpMask.
type IpActionType string

const (
	IpActionTypeAllow = IpActionType("Allow")
)

func (IpActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*IpActionType)(nil)).Elem()
}

func (e IpActionType) ToIpActionTypeOutput() IpActionTypeOutput {
	return pulumi.ToOutput(e).(IpActionTypeOutput)
}

func (e IpActionType) ToIpActionTypeOutputWithContext(ctx context.Context) IpActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IpActionTypeOutput)
}

func (e IpActionType) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return e.ToIpActionTypePtrOutputWithContext(context.Background())
}

func (e IpActionType) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return IpActionType(e).ToIpActionTypeOutputWithContext(ctx).ToIpActionTypePtrOutputWithContext(ctx)
}

func (e IpActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IpActionTypeOutput struct{ *pulumi.OutputState }

func (IpActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpActionType)(nil)).Elem()
}

func (o IpActionTypeOutput) ToIpActionTypeOutput() IpActionTypeOutput {
	return o
}

func (o IpActionTypeOutput) ToIpActionTypeOutputWithContext(ctx context.Context) IpActionTypeOutput {
	return o
}

func (o IpActionTypeOutput) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return o.ToIpActionTypePtrOutputWithContext(context.Background())
}

func (o IpActionTypeOutput) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpActionType) *IpActionType {
		return &v
	}).(IpActionTypePtrOutput)
}

func (o IpActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpActionTypePtrOutput struct{ *pulumi.OutputState }

func (IpActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpActionType)(nil)).Elem()
}

func (o IpActionTypePtrOutput) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return o
}

func (o IpActionTypePtrOutput) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return o
}

func (o IpActionTypePtrOutput) Elem() IpActionTypeOutput {
	return o.ApplyT(func(v *IpActionType) IpActionType {
		if v != nil {
			return *v
		}
		var ret IpActionType
		return ret
	}).(IpActionTypeOutput)
}

func (o IpActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IpActionTypeInput is an input type that accepts values of the IpActionType enum
// A concrete instance of `IpActionTypeInput` can be one of the following:
//
//	IpActionTypeAllow
type IpActionTypeInput interface {
	pulumi.Input

	ToIpActionTypeOutput() IpActionTypeOutput
	ToIpActionTypeOutputWithContext(context.Context) IpActionTypeOutput
}

var ipActionTypePtrType = reflect.TypeOf((**IpActionType)(nil)).Elem()

type IpActionTypePtrInput interface {
	pulumi.Input

	ToIpActionTypePtrOutput() IpActionTypePtrOutput
	ToIpActionTypePtrOutputWithContext(context.Context) IpActionTypePtrOutput
}

type ipActionTypePtr string

func IpActionTypePtr(v string) IpActionTypePtrInput {
	return (*ipActionTypePtr)(&v)
}

func (*ipActionTypePtr) ElementType() reflect.Type {
	return ipActionTypePtrType
}

func (in *ipActionTypePtr) ToIpActionTypePtrOutput() IpActionTypePtrOutput {
	return pulumi.ToOutput(in).(IpActionTypePtrOutput)
}

func (in *ipActionTypePtr) ToIpActionTypePtrOutputWithContext(ctx context.Context) IpActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IpActionTypePtrOutput)
}

// Provisioning state of the partner configuration.
type PartnerConfigurationProvisioningState string

const (
	PartnerConfigurationProvisioningStateCreating  = PartnerConfigurationProvisioningState("Creating")
	PartnerConfigurationProvisioningStateUpdating  = PartnerConfigurationProvisioningState("Updating")
	PartnerConfigurationProvisioningStateDeleting  = PartnerConfigurationProvisioningState("Deleting")
	PartnerConfigurationProvisioningStateSucceeded = PartnerConfigurationProvisioningState("Succeeded")
	PartnerConfigurationProvisioningStateCanceled  = PartnerConfigurationProvisioningState("Canceled")
	PartnerConfigurationProvisioningStateFailed    = PartnerConfigurationProvisioningState("Failed")
)

func (PartnerConfigurationProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerConfigurationProvisioningState)(nil)).Elem()
}

func (e PartnerConfigurationProvisioningState) ToPartnerConfigurationProvisioningStateOutput() PartnerConfigurationProvisioningStateOutput {
	return pulumi.ToOutput(e).(PartnerConfigurationProvisioningStateOutput)
}

func (e PartnerConfigurationProvisioningState) ToPartnerConfigurationProvisioningStateOutputWithContext(ctx context.Context) PartnerConfigurationProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnerConfigurationProvisioningStateOutput)
}

func (e PartnerConfigurationProvisioningState) ToPartnerConfigurationProvisioningStatePtrOutput() PartnerConfigurationProvisioningStatePtrOutput {
	return e.ToPartnerConfigurationProvisioningStatePtrOutputWithContext(context.Background())
}

func (e PartnerConfigurationProvisioningState) ToPartnerConfigurationProvisioningStatePtrOutputWithContext(ctx context.Context) PartnerConfigurationProvisioningStatePtrOutput {
	return PartnerConfigurationProvisioningState(e).ToPartnerConfigurationProvisioningStateOutputWithContext(ctx).ToPartnerConfigurationProvisioningStatePtrOutputWithContext(ctx)
}

func (e PartnerConfigurationProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnerConfigurationProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnerConfigurationProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnerConfigurationProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnerConfigurationProvisioningStateOutput struct{ *pulumi.OutputState }

func (PartnerConfigurationProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerConfigurationProvisioningState)(nil)).Elem()
}

func (o PartnerConfigurationProvisioningStateOutput) ToPartnerConfigurationProvisioningStateOutput() PartnerConfigurationProvisioningStateOutput {
	return o
}

func (o PartnerConfigurationProvisioningStateOutput) ToPartnerConfigurationProvisioningStateOutputWithContext(ctx context.Context) PartnerConfigurationProvisioningStateOutput {
	return o
}

func (o PartnerConfigurationProvisioningStateOutput) ToPartnerConfigurationProvisioningStatePtrOutput() PartnerConfigurationProvisioningStatePtrOutput {
	return o.ToPartnerConfigurationProvisioningStatePtrOutputWithContext(context.Background())
}

func (o PartnerConfigurationProvisioningStateOutput) ToPartnerConfigurationProvisioningStatePtrOutputWithContext(ctx context.Context) PartnerConfigurationProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnerConfigurationProvisioningState) *PartnerConfigurationProvisioningState {
		return &v
	}).(PartnerConfigurationProvisioningStatePtrOutput)
}

func (o PartnerConfigurationProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnerConfigurationProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnerConfigurationProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnerConfigurationProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnerConfigurationProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnerConfigurationProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnerConfigurationProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (PartnerConfigurationProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerConfigurationProvisioningState)(nil)).Elem()
}

func (o PartnerConfigurationProvisioningStatePtrOutput) ToPartnerConfigurationProvisioningStatePtrOutput() PartnerConfigurationProvisioningStatePtrOutput {
	return o
}

func (o PartnerConfigurationProvisioningStatePtrOutput) ToPartnerConfigurationProvisioningStatePtrOutputWithContext(ctx context.Context) PartnerConfigurationProvisioningStatePtrOutput {
	return o
}

func (o PartnerConfigurationProvisioningStatePtrOutput) Elem() PartnerConfigurationProvisioningStateOutput {
	return o.ApplyT(func(v *PartnerConfigurationProvisioningState) PartnerConfigurationProvisioningState {
		if v != nil {
			return *v
		}
		var ret PartnerConfigurationProvisioningState
		return ret
	}).(PartnerConfigurationProvisioningStateOutput)
}

func (o PartnerConfigurationProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnerConfigurationProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnerConfigurationProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnerConfigurationProvisioningStateInput is an input type that accepts values of the PartnerConfigurationProvisioningState enum
// A concrete instance of `PartnerConfigurationProvisioningStateInput` can be one of the following:
//
//	PartnerConfigurationProvisioningStateCreating
//	PartnerConfigurationProvisioningStateUpdating
//	PartnerConfigurationProvisioningStateDeleting
//	PartnerConfigurationProvisioningStateSucceeded
//	PartnerConfigurationProvisioningStateCanceled
//	PartnerConfigurationProvisioningStateFailed
type PartnerConfigurationProvisioningStateInput interface {
	pulumi.Input

	ToPartnerConfigurationProvisioningStateOutput() PartnerConfigurationProvisioningStateOutput
	ToPartnerConfigurationProvisioningStateOutputWithContext(context.Context) PartnerConfigurationProvisioningStateOutput
}

var partnerConfigurationProvisioningStatePtrType = reflect.TypeOf((**PartnerConfigurationProvisioningState)(nil)).Elem()

type PartnerConfigurationProvisioningStatePtrInput interface {
	pulumi.Input

	ToPartnerConfigurationProvisioningStatePtrOutput() PartnerConfigurationProvisioningStatePtrOutput
	ToPartnerConfigurationProvisioningStatePtrOutputWithContext(context.Context) PartnerConfigurationProvisioningStatePtrOutput
}

type partnerConfigurationProvisioningStatePtr string

func PartnerConfigurationProvisioningStatePtr(v string) PartnerConfigurationProvisioningStatePtrInput {
	return (*partnerConfigurationProvisioningStatePtr)(&v)
}

func (*partnerConfigurationProvisioningStatePtr) ElementType() reflect.Type {
	return partnerConfigurationProvisioningStatePtrType
}

func (in *partnerConfigurationProvisioningStatePtr) ToPartnerConfigurationProvisioningStatePtrOutput() PartnerConfigurationProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(PartnerConfigurationProvisioningStatePtrOutput)
}

func (in *partnerConfigurationProvisioningStatePtr) ToPartnerConfigurationProvisioningStatePtrOutputWithContext(ctx context.Context) PartnerConfigurationProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnerConfigurationProvisioningStatePtrOutput)
}

// Activation state of the partner topic.
type PartnerTopicActivationState string

const (
	PartnerTopicActivationStateNeverActivated = PartnerTopicActivationState("NeverActivated")
	PartnerTopicActivationStateActivated      = PartnerTopicActivationState("Activated")
	PartnerTopicActivationStateDeactivated    = PartnerTopicActivationState("Deactivated")
)

func (PartnerTopicActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerTopicActivationState)(nil)).Elem()
}

func (e PartnerTopicActivationState) ToPartnerTopicActivationStateOutput() PartnerTopicActivationStateOutput {
	return pulumi.ToOutput(e).(PartnerTopicActivationStateOutput)
}

func (e PartnerTopicActivationState) ToPartnerTopicActivationStateOutputWithContext(ctx context.Context) PartnerTopicActivationStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnerTopicActivationStateOutput)
}

func (e PartnerTopicActivationState) ToPartnerTopicActivationStatePtrOutput() PartnerTopicActivationStatePtrOutput {
	return e.ToPartnerTopicActivationStatePtrOutputWithContext(context.Background())
}

func (e PartnerTopicActivationState) ToPartnerTopicActivationStatePtrOutputWithContext(ctx context.Context) PartnerTopicActivationStatePtrOutput {
	return PartnerTopicActivationState(e).ToPartnerTopicActivationStateOutputWithContext(ctx).ToPartnerTopicActivationStatePtrOutputWithContext(ctx)
}

func (e PartnerTopicActivationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnerTopicActivationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnerTopicActivationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnerTopicActivationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnerTopicActivationStateOutput struct{ *pulumi.OutputState }

func (PartnerTopicActivationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerTopicActivationState)(nil)).Elem()
}

func (o PartnerTopicActivationStateOutput) ToPartnerTopicActivationStateOutput() PartnerTopicActivationStateOutput {
	return o
}

func (o PartnerTopicActivationStateOutput) ToPartnerTopicActivationStateOutputWithContext(ctx context.Context) PartnerTopicActivationStateOutput {
	return o
}

func (o PartnerTopicActivationStateOutput) ToPartnerTopicActivationStatePtrOutput() PartnerTopicActivationStatePtrOutput {
	return o.ToPartnerTopicActivationStatePtrOutputWithContext(context.Background())
}

func (o PartnerTopicActivationStateOutput) ToPartnerTopicActivationStatePtrOutputWithContext(ctx context.Context) PartnerTopicActivationStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnerTopicActivationState) *PartnerTopicActivationState {
		return &v
	}).(PartnerTopicActivationStatePtrOutput)
}

func (o PartnerTopicActivationStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnerTopicActivationStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnerTopicActivationState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnerTopicActivationStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnerTopicActivationStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnerTopicActivationState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnerTopicActivationStatePtrOutput struct{ *pulumi.OutputState }

func (PartnerTopicActivationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerTopicActivationState)(nil)).Elem()
}

func (o PartnerTopicActivationStatePtrOutput) ToPartnerTopicActivationStatePtrOutput() PartnerTopicActivationStatePtrOutput {
	return o
}

func (o PartnerTopicActivationStatePtrOutput) ToPartnerTopicActivationStatePtrOutputWithContext(ctx context.Context) PartnerTopicActivationStatePtrOutput {
	return o
}

func (o PartnerTopicActivationStatePtrOutput) Elem() PartnerTopicActivationStateOutput {
	return o.ApplyT(func(v *PartnerTopicActivationState) PartnerTopicActivationState {
		if v != nil {
			return *v
		}
		var ret PartnerTopicActivationState
		return ret
	}).(PartnerTopicActivationStateOutput)
}

func (o PartnerTopicActivationStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnerTopicActivationStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnerTopicActivationState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnerTopicActivationStateInput is an input type that accepts values of the PartnerTopicActivationState enum
// A concrete instance of `PartnerTopicActivationStateInput` can be one of the following:
//
//	PartnerTopicActivationStateNeverActivated
//	PartnerTopicActivationStateActivated
//	PartnerTopicActivationStateDeactivated
type PartnerTopicActivationStateInput interface {
	pulumi.Input

	ToPartnerTopicActivationStateOutput() PartnerTopicActivationStateOutput
	ToPartnerTopicActivationStateOutputWithContext(context.Context) PartnerTopicActivationStateOutput
}

var partnerTopicActivationStatePtrType = reflect.TypeOf((**PartnerTopicActivationState)(nil)).Elem()

type PartnerTopicActivationStatePtrInput interface {
	pulumi.Input

	ToPartnerTopicActivationStatePtrOutput() PartnerTopicActivationStatePtrOutput
	ToPartnerTopicActivationStatePtrOutputWithContext(context.Context) PartnerTopicActivationStatePtrOutput
}

type partnerTopicActivationStatePtr string

func PartnerTopicActivationStatePtr(v string) PartnerTopicActivationStatePtrInput {
	return (*partnerTopicActivationStatePtr)(&v)
}

func (*partnerTopicActivationStatePtr) ElementType() reflect.Type {
	return partnerTopicActivationStatePtrType
}

func (in *partnerTopicActivationStatePtr) ToPartnerTopicActivationStatePtrOutput() PartnerTopicActivationStatePtrOutput {
	return pulumi.ToOutput(in).(PartnerTopicActivationStatePtrOutput)
}

func (in *partnerTopicActivationStatePtr) ToPartnerTopicActivationStatePtrOutputWithContext(ctx context.Context) PartnerTopicActivationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnerTopicActivationStatePtrOutput)
}

// This determines if events published to this partner namespace should use the source attribute in the event payload
// or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.
type PartnerTopicRoutingMode string

const (
	PartnerTopicRoutingModeSourceEventAttribute = PartnerTopicRoutingMode("SourceEventAttribute")
	PartnerTopicRoutingModeChannelNameHeader    = PartnerTopicRoutingMode("ChannelNameHeader")
)

func (PartnerTopicRoutingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerTopicRoutingMode)(nil)).Elem()
}

func (e PartnerTopicRoutingMode) ToPartnerTopicRoutingModeOutput() PartnerTopicRoutingModeOutput {
	return pulumi.ToOutput(e).(PartnerTopicRoutingModeOutput)
}

func (e PartnerTopicRoutingMode) ToPartnerTopicRoutingModeOutputWithContext(ctx context.Context) PartnerTopicRoutingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnerTopicRoutingModeOutput)
}

func (e PartnerTopicRoutingMode) ToPartnerTopicRoutingModePtrOutput() PartnerTopicRoutingModePtrOutput {
	return e.ToPartnerTopicRoutingModePtrOutputWithContext(context.Background())
}

func (e PartnerTopicRoutingMode) ToPartnerTopicRoutingModePtrOutputWithContext(ctx context.Context) PartnerTopicRoutingModePtrOutput {
	return PartnerTopicRoutingMode(e).ToPartnerTopicRoutingModeOutputWithContext(ctx).ToPartnerTopicRoutingModePtrOutputWithContext(ctx)
}

func (e PartnerTopicRoutingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnerTopicRoutingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnerTopicRoutingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnerTopicRoutingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnerTopicRoutingModeOutput struct{ *pulumi.OutputState }

func (PartnerTopicRoutingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerTopicRoutingMode)(nil)).Elem()
}

func (o PartnerTopicRoutingModeOutput) ToPartnerTopicRoutingModeOutput() PartnerTopicRoutingModeOutput {
	return o
}

func (o PartnerTopicRoutingModeOutput) ToPartnerTopicRoutingModeOutputWithContext(ctx context.Context) PartnerTopicRoutingModeOutput {
	return o
}

func (o PartnerTopicRoutingModeOutput) ToPartnerTopicRoutingModePtrOutput() PartnerTopicRoutingModePtrOutput {
	return o.ToPartnerTopicRoutingModePtrOutputWithContext(context.Background())
}

func (o PartnerTopicRoutingModeOutput) ToPartnerTopicRoutingModePtrOutputWithContext(ctx context.Context) PartnerTopicRoutingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnerTopicRoutingMode) *PartnerTopicRoutingMode {
		return &v
	}).(PartnerTopicRoutingModePtrOutput)
}

func (o PartnerTopicRoutingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnerTopicRoutingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnerTopicRoutingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnerTopicRoutingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnerTopicRoutingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnerTopicRoutingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnerTopicRoutingModePtrOutput struct{ *pulumi.OutputState }

func (PartnerTopicRoutingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerTopicRoutingMode)(nil)).Elem()
}

func (o PartnerTopicRoutingModePtrOutput) ToPartnerTopicRoutingModePtrOutput() PartnerTopicRoutingModePtrOutput {
	return o
}

func (o PartnerTopicRoutingModePtrOutput) ToPartnerTopicRoutingModePtrOutputWithContext(ctx context.Context) PartnerTopicRoutingModePtrOutput {
	return o
}

func (o PartnerTopicRoutingModePtrOutput) Elem() PartnerTopicRoutingModeOutput {
	return o.ApplyT(func(v *PartnerTopicRoutingMode) PartnerTopicRoutingMode {
		if v != nil {
			return *v
		}
		var ret PartnerTopicRoutingMode
		return ret
	}).(PartnerTopicRoutingModeOutput)
}

func (o PartnerTopicRoutingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnerTopicRoutingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnerTopicRoutingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnerTopicRoutingModeInput is an input type that accepts values of the PartnerTopicRoutingMode enum
// A concrete instance of `PartnerTopicRoutingModeInput` can be one of the following:
//
//	PartnerTopicRoutingModeSourceEventAttribute
//	PartnerTopicRoutingModeChannelNameHeader
type PartnerTopicRoutingModeInput interface {
	pulumi.Input

	ToPartnerTopicRoutingModeOutput() PartnerTopicRoutingModeOutput
	ToPartnerTopicRoutingModeOutputWithContext(context.Context) PartnerTopicRoutingModeOutput
}

var partnerTopicRoutingModePtrType = reflect.TypeOf((**PartnerTopicRoutingMode)(nil)).Elem()

type PartnerTopicRoutingModePtrInput interface {
	pulumi.Input

	ToPartnerTopicRoutingModePtrOutput() PartnerTopicRoutingModePtrOutput
	ToPartnerTopicRoutingModePtrOutputWithContext(context.Context) PartnerTopicRoutingModePtrOutput
}

type partnerTopicRoutingModePtr string

func PartnerTopicRoutingModePtr(v string) PartnerTopicRoutingModePtrInput {
	return (*partnerTopicRoutingModePtr)(&v)
}

func (*partnerTopicRoutingModePtr) ElementType() reflect.Type {
	return partnerTopicRoutingModePtrType
}

func (in *partnerTopicRoutingModePtr) ToPartnerTopicRoutingModePtrOutput() PartnerTopicRoutingModePtrOutput {
	return pulumi.ToOutput(in).(PartnerTopicRoutingModePtrOutput)
}

func (in *partnerTopicRoutingModePtr) ToPartnerTopicRoutingModePtrOutputWithContext(ctx context.Context) PartnerTopicRoutingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnerTopicRoutingModePtrOutput)
}

// Status of the connection.
type PersistedConnectionStatus string

const (
	PersistedConnectionStatusPending      = PersistedConnectionStatus("Pending")
	PersistedConnectionStatusApproved     = PersistedConnectionStatus("Approved")
	PersistedConnectionStatusRejected     = PersistedConnectionStatus("Rejected")
	PersistedConnectionStatusDisconnected = PersistedConnectionStatus("Disconnected")
)

func (PersistedConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistedConnectionStatus)(nil)).Elem()
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusOutput() PersistedConnectionStatusOutput {
	return pulumi.ToOutput(e).(PersistedConnectionStatusOutput)
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusOutputWithContext(ctx context.Context) PersistedConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PersistedConnectionStatusOutput)
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return e.ToPersistedConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PersistedConnectionStatus) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return PersistedConnectionStatus(e).ToPersistedConnectionStatusOutputWithContext(ctx).ToPersistedConnectionStatusPtrOutputWithContext(ctx)
}

func (e PersistedConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistedConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistedConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PersistedConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PersistedConnectionStatusOutput struct{ *pulumi.OutputState }

func (PersistedConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistedConnectionStatus)(nil)).Elem()
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusOutput() PersistedConnectionStatusOutput {
	return o
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusOutputWithContext(ctx context.Context) PersistedConnectionStatusOutput {
	return o
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return o.ToPersistedConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusOutput) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersistedConnectionStatus) *PersistedConnectionStatus {
		return &v
	}).(PersistedConnectionStatusPtrOutput)
}

func (o PersistedConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistedConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PersistedConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistedConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PersistedConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PersistedConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistedConnectionStatus)(nil)).Elem()
}

func (o PersistedConnectionStatusPtrOutput) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return o
}

func (o PersistedConnectionStatusPtrOutput) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return o
}

func (o PersistedConnectionStatusPtrOutput) Elem() PersistedConnectionStatusOutput {
	return o.ApplyT(func(v *PersistedConnectionStatus) PersistedConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PersistedConnectionStatus
		return ret
	}).(PersistedConnectionStatusOutput)
}

func (o PersistedConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistedConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PersistedConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PersistedConnectionStatusInput is an input type that accepts values of the PersistedConnectionStatus enum
// A concrete instance of `PersistedConnectionStatusInput` can be one of the following:
//
//	PersistedConnectionStatusPending
//	PersistedConnectionStatusApproved
//	PersistedConnectionStatusRejected
//	PersistedConnectionStatusDisconnected
type PersistedConnectionStatusInput interface {
	pulumi.Input

	ToPersistedConnectionStatusOutput() PersistedConnectionStatusOutput
	ToPersistedConnectionStatusOutputWithContext(context.Context) PersistedConnectionStatusOutput
}

var persistedConnectionStatusPtrType = reflect.TypeOf((**PersistedConnectionStatus)(nil)).Elem()

type PersistedConnectionStatusPtrInput interface {
	pulumi.Input

	ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput
	ToPersistedConnectionStatusPtrOutputWithContext(context.Context) PersistedConnectionStatusPtrOutput
}

type persistedConnectionStatusPtr string

func PersistedConnectionStatusPtr(v string) PersistedConnectionStatusPtrInput {
	return (*persistedConnectionStatusPtr)(&v)
}

func (*persistedConnectionStatusPtr) ElementType() reflect.Type {
	return persistedConnectionStatusPtrType
}

func (in *persistedConnectionStatusPtr) ToPersistedConnectionStatusPtrOutput() PersistedConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PersistedConnectionStatusPtrOutput)
}

func (in *persistedConnectionStatusPtr) ToPersistedConnectionStatusPtrOutputWithContext(ctx context.Context) PersistedConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PersistedConnectionStatusPtrOutput)
}

// This determines if traffic is allowed over public network. By default it is enabled.
// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// The readiness state of the corresponding partner topic.
type ReadinessState string

const (
	ReadinessStateNeverActivated = ReadinessState("NeverActivated")
	ReadinessStateActivated      = ReadinessState("Activated")
)

func (ReadinessState) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadinessState)(nil)).Elem()
}

func (e ReadinessState) ToReadinessStateOutput() ReadinessStateOutput {
	return pulumi.ToOutput(e).(ReadinessStateOutput)
}

func (e ReadinessState) ToReadinessStateOutputWithContext(ctx context.Context) ReadinessStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReadinessStateOutput)
}

func (e ReadinessState) ToReadinessStatePtrOutput() ReadinessStatePtrOutput {
	return e.ToReadinessStatePtrOutputWithContext(context.Background())
}

func (e ReadinessState) ToReadinessStatePtrOutputWithContext(ctx context.Context) ReadinessStatePtrOutput {
	return ReadinessState(e).ToReadinessStateOutputWithContext(ctx).ToReadinessStatePtrOutputWithContext(ctx)
}

func (e ReadinessState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReadinessState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReadinessState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReadinessState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReadinessStateOutput struct{ *pulumi.OutputState }

func (ReadinessStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadinessState)(nil)).Elem()
}

func (o ReadinessStateOutput) ToReadinessStateOutput() ReadinessStateOutput {
	return o
}

func (o ReadinessStateOutput) ToReadinessStateOutputWithContext(ctx context.Context) ReadinessStateOutput {
	return o
}

func (o ReadinessStateOutput) ToReadinessStatePtrOutput() ReadinessStatePtrOutput {
	return o.ToReadinessStatePtrOutputWithContext(context.Background())
}

func (o ReadinessStateOutput) ToReadinessStatePtrOutputWithContext(ctx context.Context) ReadinessStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReadinessState) *ReadinessState {
		return &v
	}).(ReadinessStatePtrOutput)
}

func (o ReadinessStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReadinessStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReadinessState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReadinessStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReadinessStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReadinessState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReadinessStatePtrOutput struct{ *pulumi.OutputState }

func (ReadinessStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadinessState)(nil)).Elem()
}

func (o ReadinessStatePtrOutput) ToReadinessStatePtrOutput() ReadinessStatePtrOutput {
	return o
}

func (o ReadinessStatePtrOutput) ToReadinessStatePtrOutputWithContext(ctx context.Context) ReadinessStatePtrOutput {
	return o
}

func (o ReadinessStatePtrOutput) Elem() ReadinessStateOutput {
	return o.ApplyT(func(v *ReadinessState) ReadinessState {
		if v != nil {
			return *v
		}
		var ret ReadinessState
		return ret
	}).(ReadinessStateOutput)
}

func (o ReadinessStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReadinessStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReadinessState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReadinessStateInput is an input type that accepts values of the ReadinessState enum
// A concrete instance of `ReadinessStateInput` can be one of the following:
//
//	ReadinessStateNeverActivated
//	ReadinessStateActivated
type ReadinessStateInput interface {
	pulumi.Input

	ToReadinessStateOutput() ReadinessStateOutput
	ToReadinessStateOutputWithContext(context.Context) ReadinessStateOutput
}

var readinessStatePtrType = reflect.TypeOf((**ReadinessState)(nil)).Elem()

type ReadinessStatePtrInput interface {
	pulumi.Input

	ToReadinessStatePtrOutput() ReadinessStatePtrOutput
	ToReadinessStatePtrOutputWithContext(context.Context) ReadinessStatePtrOutput
}

type readinessStatePtr string

func ReadinessStatePtr(v string) ReadinessStatePtrInput {
	return (*readinessStatePtr)(&v)
}

func (*readinessStatePtr) ElementType() reflect.Type {
	return readinessStatePtrType
}

func (in *readinessStatePtr) ToReadinessStatePtrOutput() ReadinessStatePtrOutput {
	return pulumi.ToOutput(in).(ReadinessStatePtrOutput)
}

func (in *readinessStatePtr) ToReadinessStatePtrOutputWithContext(ctx context.Context) ReadinessStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReadinessStatePtrOutput)
}

// Provisioning state of the Private Endpoint Connection.
type ResourceProvisioningState string

const (
	ResourceProvisioningStateCreating  = ResourceProvisioningState("Creating")
	ResourceProvisioningStateUpdating  = ResourceProvisioningState("Updating")
	ResourceProvisioningStateDeleting  = ResourceProvisioningState("Deleting")
	ResourceProvisioningStateSucceeded = ResourceProvisioningState("Succeeded")
	ResourceProvisioningStateCanceled  = ResourceProvisioningState("Canceled")
	ResourceProvisioningStateFailed    = ResourceProvisioningState("Failed")
)

func (ResourceProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProvisioningState)(nil)).Elem()
}

func (e ResourceProvisioningState) ToResourceProvisioningStateOutput() ResourceProvisioningStateOutput {
	return pulumi.ToOutput(e).(ResourceProvisioningStateOutput)
}

func (e ResourceProvisioningState) ToResourceProvisioningStateOutputWithContext(ctx context.Context) ResourceProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceProvisioningStateOutput)
}

func (e ResourceProvisioningState) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return e.ToResourceProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ResourceProvisioningState) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return ResourceProvisioningState(e).ToResourceProvisioningStateOutputWithContext(ctx).ToResourceProvisioningStatePtrOutputWithContext(ctx)
}

func (e ResourceProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceProvisioningStateOutput struct{ *pulumi.OutputState }

func (ResourceProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProvisioningState)(nil)).Elem()
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStateOutput() ResourceProvisioningStateOutput {
	return o
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStateOutputWithContext(ctx context.Context) ResourceProvisioningStateOutput {
	return o
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return o.ToResourceProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ResourceProvisioningStateOutput) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceProvisioningState) *ResourceProvisioningState {
		return &v
	}).(ResourceProvisioningStatePtrOutput)
}

func (o ResourceProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ResourceProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceProvisioningState)(nil)).Elem()
}

func (o ResourceProvisioningStatePtrOutput) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return o
}

func (o ResourceProvisioningStatePtrOutput) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return o
}

func (o ResourceProvisioningStatePtrOutput) Elem() ResourceProvisioningStateOutput {
	return o.ApplyT(func(v *ResourceProvisioningState) ResourceProvisioningState {
		if v != nil {
			return *v
		}
		var ret ResourceProvisioningState
		return ret
	}).(ResourceProvisioningStateOutput)
}

func (o ResourceProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceProvisioningStateInput is an input type that accepts values of the ResourceProvisioningState enum
// A concrete instance of `ResourceProvisioningStateInput` can be one of the following:
//
//	ResourceProvisioningStateCreating
//	ResourceProvisioningStateUpdating
//	ResourceProvisioningStateDeleting
//	ResourceProvisioningStateSucceeded
//	ResourceProvisioningStateCanceled
//	ResourceProvisioningStateFailed
type ResourceProvisioningStateInput interface {
	pulumi.Input

	ToResourceProvisioningStateOutput() ResourceProvisioningStateOutput
	ToResourceProvisioningStateOutputWithContext(context.Context) ResourceProvisioningStateOutput
}

var resourceProvisioningStatePtrType = reflect.TypeOf((**ResourceProvisioningState)(nil)).Elem()

type ResourceProvisioningStatePtrInput interface {
	pulumi.Input

	ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput
	ToResourceProvisioningStatePtrOutputWithContext(context.Context) ResourceProvisioningStatePtrOutput
}

type resourceProvisioningStatePtr string

func ResourceProvisioningStatePtr(v string) ResourceProvisioningStatePtrInput {
	return (*resourceProvisioningStatePtr)(&v)
}

func (*resourceProvisioningStatePtr) ElementType() reflect.Type {
	return resourceProvisioningStatePtrType
}

func (in *resourceProvisioningStatePtr) ToResourceProvisioningStatePtrOutput() ResourceProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ResourceProvisioningStatePtrOutput)
}

func (in *resourceProvisioningStatePtr) ToResourceProvisioningStatePtrOutputWithContext(ctx context.Context) ResourceProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceProvisioningStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ChannelProvisioningStateOutput{})
	pulumi.RegisterOutputType(ChannelProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(ChannelTypeOutput{})
	pulumi.RegisterOutputType(ChannelTypePtrOutput{})
	pulumi.RegisterOutputType(DataResidencyBoundaryOutput{})
	pulumi.RegisterOutputType(DataResidencyBoundaryPtrOutput{})
	pulumi.RegisterOutputType(EventDefinitionKindOutput{})
	pulumi.RegisterOutputType(EventDefinitionKindPtrOutput{})
	pulumi.RegisterOutputType(EventDeliverySchemaOutput{})
	pulumi.RegisterOutputType(EventDeliverySchemaPtrOutput{})
	pulumi.RegisterOutputType(EventSubscriptionIdentityTypeOutput{})
	pulumi.RegisterOutputType(EventSubscriptionIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(InputSchemaOutput{})
	pulumi.RegisterOutputType(InputSchemaPtrOutput{})
	pulumi.RegisterOutputType(IpActionTypeOutput{})
	pulumi.RegisterOutputType(IpActionTypePtrOutput{})
	pulumi.RegisterOutputType(PartnerConfigurationProvisioningStateOutput{})
	pulumi.RegisterOutputType(PartnerConfigurationProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(PartnerTopicActivationStateOutput{})
	pulumi.RegisterOutputType(PartnerTopicActivationStatePtrOutput{})
	pulumi.RegisterOutputType(PartnerTopicRoutingModeOutput{})
	pulumi.RegisterOutputType(PartnerTopicRoutingModePtrOutput{})
	pulumi.RegisterOutputType(PersistedConnectionStatusOutput{})
	pulumi.RegisterOutputType(PersistedConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(ReadinessStateOutput{})
	pulumi.RegisterOutputType(ReadinessStatePtrOutput{})
	pulumi.RegisterOutputType(ResourceProvisioningStateOutput{})
	pulumi.RegisterOutputType(ResourceProvisioningStatePtrOutput{})
}
