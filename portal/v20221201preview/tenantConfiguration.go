// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The tenant configuration resource definition.
type TenantConfiguration struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties ConfigurationPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTenantConfiguration registers a new resource with the given unique name, arguments, and options.
func NewTenantConfiguration(ctx *pulumi.Context,
	name string, args *TenantConfigurationArgs, opts ...pulumi.ResourceOption) (*TenantConfiguration, error) {
	if args == nil {
		args = &TenantConfigurationArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:portal/v20190101preview:TenantConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:portal/v20200901preview:TenantConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:portal/v20250401preview:TenantConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:portal:TenantConfiguration"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TenantConfiguration
	err := ctx.RegisterResource("azure-native:portal/v20221201preview:TenantConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenantConfiguration gets an existing TenantConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenantConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenantConfigurationState, opts ...pulumi.ResourceOption) (*TenantConfiguration, error) {
	var resource TenantConfiguration
	err := ctx.ReadResource("azure-native:portal/v20221201preview:TenantConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TenantConfiguration resources.
type tenantConfigurationState struct {
}

type TenantConfigurationState struct {
}

func (TenantConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantConfigurationState)(nil)).Elem()
}

type tenantConfigurationArgs struct {
	// The name of the Configuration
	ConfigurationName *string `pulumi:"configurationName"`
	// The resource-specific properties for this resource.
	Properties *ConfigurationProperties `pulumi:"properties"`
}

// The set of arguments for constructing a TenantConfiguration resource.
type TenantConfigurationArgs struct {
	// The name of the Configuration
	ConfigurationName pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties ConfigurationPropertiesPtrInput
}

func (TenantConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantConfigurationArgs)(nil)).Elem()
}

type TenantConfigurationInput interface {
	pulumi.Input

	ToTenantConfigurationOutput() TenantConfigurationOutput
	ToTenantConfigurationOutputWithContext(ctx context.Context) TenantConfigurationOutput
}

func (*TenantConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantConfiguration)(nil)).Elem()
}

func (i *TenantConfiguration) ToTenantConfigurationOutput() TenantConfigurationOutput {
	return i.ToTenantConfigurationOutputWithContext(context.Background())
}

func (i *TenantConfiguration) ToTenantConfigurationOutputWithContext(ctx context.Context) TenantConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantConfigurationOutput)
}

type TenantConfigurationOutput struct{ *pulumi.OutputState }

func (TenantConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantConfiguration)(nil)).Elem()
}

func (o TenantConfigurationOutput) ToTenantConfigurationOutput() TenantConfigurationOutput {
	return o
}

func (o TenantConfigurationOutput) ToTenantConfigurationOutputWithContext(ctx context.Context) TenantConfigurationOutput {
	return o
}

// The name of the resource
func (o TenantConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TenantConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o TenantConfigurationOutput) Properties() ConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *TenantConfiguration) ConfigurationPropertiesResponseOutput { return v.Properties }).(ConfigurationPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o TenantConfigurationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *TenantConfiguration) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o TenantConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TenantConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TenantConfigurationOutput{})
}
