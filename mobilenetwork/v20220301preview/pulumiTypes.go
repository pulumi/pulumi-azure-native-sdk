// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Reference to an Attached Data Network resource.
type AttachedDataNetworkResourceId struct {
	// Attached Data Network resource ID.
	Id string `pulumi:"id"`
}

// AttachedDataNetworkResourceIdInput is an input type that accepts AttachedDataNetworkResourceIdArgs and AttachedDataNetworkResourceIdOutput values.
// You can construct a concrete instance of `AttachedDataNetworkResourceIdInput` via:
//
//	AttachedDataNetworkResourceIdArgs{...}
type AttachedDataNetworkResourceIdInput interface {
	pulumi.Input

	ToAttachedDataNetworkResourceIdOutput() AttachedDataNetworkResourceIdOutput
	ToAttachedDataNetworkResourceIdOutputWithContext(context.Context) AttachedDataNetworkResourceIdOutput
}

// Reference to an Attached Data Network resource.
type AttachedDataNetworkResourceIdArgs struct {
	// Attached Data Network resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (AttachedDataNetworkResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDataNetworkResourceId)(nil)).Elem()
}

func (i AttachedDataNetworkResourceIdArgs) ToAttachedDataNetworkResourceIdOutput() AttachedDataNetworkResourceIdOutput {
	return i.ToAttachedDataNetworkResourceIdOutputWithContext(context.Background())
}

func (i AttachedDataNetworkResourceIdArgs) ToAttachedDataNetworkResourceIdOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDataNetworkResourceIdOutput)
}

func (i AttachedDataNetworkResourceIdArgs) ToAttachedDataNetworkResourceIdPtrOutput() AttachedDataNetworkResourceIdPtrOutput {
	return i.ToAttachedDataNetworkResourceIdPtrOutputWithContext(context.Background())
}

func (i AttachedDataNetworkResourceIdArgs) ToAttachedDataNetworkResourceIdPtrOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDataNetworkResourceIdOutput).ToAttachedDataNetworkResourceIdPtrOutputWithContext(ctx)
}

// AttachedDataNetworkResourceIdPtrInput is an input type that accepts AttachedDataNetworkResourceIdArgs, AttachedDataNetworkResourceIdPtr and AttachedDataNetworkResourceIdPtrOutput values.
// You can construct a concrete instance of `AttachedDataNetworkResourceIdPtrInput` via:
//
//	        AttachedDataNetworkResourceIdArgs{...}
//
//	or:
//
//	        nil
type AttachedDataNetworkResourceIdPtrInput interface {
	pulumi.Input

	ToAttachedDataNetworkResourceIdPtrOutput() AttachedDataNetworkResourceIdPtrOutput
	ToAttachedDataNetworkResourceIdPtrOutputWithContext(context.Context) AttachedDataNetworkResourceIdPtrOutput
}

type attachedDataNetworkResourceIdPtrType AttachedDataNetworkResourceIdArgs

func AttachedDataNetworkResourceIdPtr(v *AttachedDataNetworkResourceIdArgs) AttachedDataNetworkResourceIdPtrInput {
	return (*attachedDataNetworkResourceIdPtrType)(v)
}

func (*attachedDataNetworkResourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDataNetworkResourceId)(nil)).Elem()
}

func (i *attachedDataNetworkResourceIdPtrType) ToAttachedDataNetworkResourceIdPtrOutput() AttachedDataNetworkResourceIdPtrOutput {
	return i.ToAttachedDataNetworkResourceIdPtrOutputWithContext(context.Background())
}

func (i *attachedDataNetworkResourceIdPtrType) ToAttachedDataNetworkResourceIdPtrOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDataNetworkResourceIdPtrOutput)
}

// Reference to an Attached Data Network resource.
type AttachedDataNetworkResourceIdOutput struct{ *pulumi.OutputState }

func (AttachedDataNetworkResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDataNetworkResourceId)(nil)).Elem()
}

func (o AttachedDataNetworkResourceIdOutput) ToAttachedDataNetworkResourceIdOutput() AttachedDataNetworkResourceIdOutput {
	return o
}

func (o AttachedDataNetworkResourceIdOutput) ToAttachedDataNetworkResourceIdOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdOutput {
	return o
}

func (o AttachedDataNetworkResourceIdOutput) ToAttachedDataNetworkResourceIdPtrOutput() AttachedDataNetworkResourceIdPtrOutput {
	return o.ToAttachedDataNetworkResourceIdPtrOutputWithContext(context.Background())
}

func (o AttachedDataNetworkResourceIdOutput) ToAttachedDataNetworkResourceIdPtrOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDataNetworkResourceId) *AttachedDataNetworkResourceId {
		return &v
	}).(AttachedDataNetworkResourceIdPtrOutput)
}

// Attached Data Network resource ID.
func (o AttachedDataNetworkResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDataNetworkResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type AttachedDataNetworkResourceIdPtrOutput struct{ *pulumi.OutputState }

func (AttachedDataNetworkResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDataNetworkResourceId)(nil)).Elem()
}

func (o AttachedDataNetworkResourceIdPtrOutput) ToAttachedDataNetworkResourceIdPtrOutput() AttachedDataNetworkResourceIdPtrOutput {
	return o
}

func (o AttachedDataNetworkResourceIdPtrOutput) ToAttachedDataNetworkResourceIdPtrOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdPtrOutput {
	return o
}

func (o AttachedDataNetworkResourceIdPtrOutput) Elem() AttachedDataNetworkResourceIdOutput {
	return o.ApplyT(func(v *AttachedDataNetworkResourceId) AttachedDataNetworkResourceId {
		if v != nil {
			return *v
		}
		var ret AttachedDataNetworkResourceId
		return ret
	}).(AttachedDataNetworkResourceIdOutput)
}

// Attached Data Network resource ID.
func (o AttachedDataNetworkResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDataNetworkResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to an Attached Data Network resource.
type AttachedDataNetworkResourceIdResponse struct {
	// Attached Data Network resource ID.
	Id string `pulumi:"id"`
}

// Reference to an Attached Data Network resource.
type AttachedDataNetworkResourceIdResponseOutput struct{ *pulumi.OutputState }

func (AttachedDataNetworkResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDataNetworkResourceIdResponse)(nil)).Elem()
}

func (o AttachedDataNetworkResourceIdResponseOutput) ToAttachedDataNetworkResourceIdResponseOutput() AttachedDataNetworkResourceIdResponseOutput {
	return o
}

func (o AttachedDataNetworkResourceIdResponseOutput) ToAttachedDataNetworkResourceIdResponseOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdResponseOutput {
	return o
}

// Attached Data Network resource ID.
func (o AttachedDataNetworkResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDataNetworkResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type AttachedDataNetworkResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (AttachedDataNetworkResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDataNetworkResourceIdResponse)(nil)).Elem()
}

func (o AttachedDataNetworkResourceIdResponsePtrOutput) ToAttachedDataNetworkResourceIdResponsePtrOutput() AttachedDataNetworkResourceIdResponsePtrOutput {
	return o
}

func (o AttachedDataNetworkResourceIdResponsePtrOutput) ToAttachedDataNetworkResourceIdResponsePtrOutputWithContext(ctx context.Context) AttachedDataNetworkResourceIdResponsePtrOutput {
	return o
}

func (o AttachedDataNetworkResourceIdResponsePtrOutput) Elem() AttachedDataNetworkResourceIdResponseOutput {
	return o.ApplyT(func(v *AttachedDataNetworkResourceIdResponse) AttachedDataNetworkResourceIdResponse {
		if v != nil {
			return *v
		}
		var ret AttachedDataNetworkResourceIdResponse
		return ret
	}).(AttachedDataNetworkResourceIdResponseOutput)
}

// Attached Data Network resource ID.
func (o AttachedDataNetworkResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDataNetworkResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to an Azure ARC custom location resource.
type CustomLocationResourceId struct {
	// Azure ARC custom location resource ID.
	Id string `pulumi:"id"`
}

// CustomLocationResourceIdInput is an input type that accepts CustomLocationResourceIdArgs and CustomLocationResourceIdOutput values.
// You can construct a concrete instance of `CustomLocationResourceIdInput` via:
//
//	CustomLocationResourceIdArgs{...}
type CustomLocationResourceIdInput interface {
	pulumi.Input

	ToCustomLocationResourceIdOutput() CustomLocationResourceIdOutput
	ToCustomLocationResourceIdOutputWithContext(context.Context) CustomLocationResourceIdOutput
}

// Reference to an Azure ARC custom location resource.
type CustomLocationResourceIdArgs struct {
	// Azure ARC custom location resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (CustomLocationResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLocationResourceId)(nil)).Elem()
}

func (i CustomLocationResourceIdArgs) ToCustomLocationResourceIdOutput() CustomLocationResourceIdOutput {
	return i.ToCustomLocationResourceIdOutputWithContext(context.Background())
}

func (i CustomLocationResourceIdArgs) ToCustomLocationResourceIdOutputWithContext(ctx context.Context) CustomLocationResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLocationResourceIdOutput)
}

func (i CustomLocationResourceIdArgs) ToCustomLocationResourceIdPtrOutput() CustomLocationResourceIdPtrOutput {
	return i.ToCustomLocationResourceIdPtrOutputWithContext(context.Background())
}

func (i CustomLocationResourceIdArgs) ToCustomLocationResourceIdPtrOutputWithContext(ctx context.Context) CustomLocationResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLocationResourceIdOutput).ToCustomLocationResourceIdPtrOutputWithContext(ctx)
}

// CustomLocationResourceIdPtrInput is an input type that accepts CustomLocationResourceIdArgs, CustomLocationResourceIdPtr and CustomLocationResourceIdPtrOutput values.
// You can construct a concrete instance of `CustomLocationResourceIdPtrInput` via:
//
//	        CustomLocationResourceIdArgs{...}
//
//	or:
//
//	        nil
type CustomLocationResourceIdPtrInput interface {
	pulumi.Input

	ToCustomLocationResourceIdPtrOutput() CustomLocationResourceIdPtrOutput
	ToCustomLocationResourceIdPtrOutputWithContext(context.Context) CustomLocationResourceIdPtrOutput
}

type customLocationResourceIdPtrType CustomLocationResourceIdArgs

func CustomLocationResourceIdPtr(v *CustomLocationResourceIdArgs) CustomLocationResourceIdPtrInput {
	return (*customLocationResourceIdPtrType)(v)
}

func (*customLocationResourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLocationResourceId)(nil)).Elem()
}

func (i *customLocationResourceIdPtrType) ToCustomLocationResourceIdPtrOutput() CustomLocationResourceIdPtrOutput {
	return i.ToCustomLocationResourceIdPtrOutputWithContext(context.Background())
}

func (i *customLocationResourceIdPtrType) ToCustomLocationResourceIdPtrOutputWithContext(ctx context.Context) CustomLocationResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLocationResourceIdPtrOutput)
}

// Reference to an Azure ARC custom location resource.
type CustomLocationResourceIdOutput struct{ *pulumi.OutputState }

func (CustomLocationResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLocationResourceId)(nil)).Elem()
}

func (o CustomLocationResourceIdOutput) ToCustomLocationResourceIdOutput() CustomLocationResourceIdOutput {
	return o
}

func (o CustomLocationResourceIdOutput) ToCustomLocationResourceIdOutputWithContext(ctx context.Context) CustomLocationResourceIdOutput {
	return o
}

func (o CustomLocationResourceIdOutput) ToCustomLocationResourceIdPtrOutput() CustomLocationResourceIdPtrOutput {
	return o.ToCustomLocationResourceIdPtrOutputWithContext(context.Background())
}

func (o CustomLocationResourceIdOutput) ToCustomLocationResourceIdPtrOutputWithContext(ctx context.Context) CustomLocationResourceIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomLocationResourceId) *CustomLocationResourceId {
		return &v
	}).(CustomLocationResourceIdPtrOutput)
}

// Azure ARC custom location resource ID.
func (o CustomLocationResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLocationResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type CustomLocationResourceIdPtrOutput struct{ *pulumi.OutputState }

func (CustomLocationResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLocationResourceId)(nil)).Elem()
}

func (o CustomLocationResourceIdPtrOutput) ToCustomLocationResourceIdPtrOutput() CustomLocationResourceIdPtrOutput {
	return o
}

func (o CustomLocationResourceIdPtrOutput) ToCustomLocationResourceIdPtrOutputWithContext(ctx context.Context) CustomLocationResourceIdPtrOutput {
	return o
}

func (o CustomLocationResourceIdPtrOutput) Elem() CustomLocationResourceIdOutput {
	return o.ApplyT(func(v *CustomLocationResourceId) CustomLocationResourceId {
		if v != nil {
			return *v
		}
		var ret CustomLocationResourceId
		return ret
	}).(CustomLocationResourceIdOutput)
}

// Azure ARC custom location resource ID.
func (o CustomLocationResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLocationResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to an Azure ARC custom location resource.
type CustomLocationResourceIdResponse struct {
	// Azure ARC custom location resource ID.
	Id string `pulumi:"id"`
}

// Reference to an Azure ARC custom location resource.
type CustomLocationResourceIdResponseOutput struct{ *pulumi.OutputState }

func (CustomLocationResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLocationResourceIdResponse)(nil)).Elem()
}

func (o CustomLocationResourceIdResponseOutput) ToCustomLocationResourceIdResponseOutput() CustomLocationResourceIdResponseOutput {
	return o
}

func (o CustomLocationResourceIdResponseOutput) ToCustomLocationResourceIdResponseOutputWithContext(ctx context.Context) CustomLocationResourceIdResponseOutput {
	return o
}

// Azure ARC custom location resource ID.
func (o CustomLocationResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLocationResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type CustomLocationResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomLocationResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLocationResourceIdResponse)(nil)).Elem()
}

func (o CustomLocationResourceIdResponsePtrOutput) ToCustomLocationResourceIdResponsePtrOutput() CustomLocationResourceIdResponsePtrOutput {
	return o
}

func (o CustomLocationResourceIdResponsePtrOutput) ToCustomLocationResourceIdResponsePtrOutputWithContext(ctx context.Context) CustomLocationResourceIdResponsePtrOutput {
	return o
}

func (o CustomLocationResourceIdResponsePtrOutput) Elem() CustomLocationResourceIdResponseOutput {
	return o.ApplyT(func(v *CustomLocationResourceIdResponse) CustomLocationResourceIdResponse {
		if v != nil {
			return *v
		}
		var ret CustomLocationResourceIdResponse
		return ret
	}).(CustomLocationResourceIdResponseOutput)
}

// Azure ARC custom location resource ID.
func (o CustomLocationResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLocationResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Interface properties
type InterfaceProperties struct {
	// The IPv4 address.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// The default IPv4 gateway (router).
	Ipv4Gateway *string `pulumi:"ipv4Gateway"`
	// The IPv4 subnet.
	Ipv4Subnet *string `pulumi:"ipv4Subnet"`
	// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge machine.
	Name string `pulumi:"name"`
}

// InterfacePropertiesInput is an input type that accepts InterfacePropertiesArgs and InterfacePropertiesOutput values.
// You can construct a concrete instance of `InterfacePropertiesInput` via:
//
//	InterfacePropertiesArgs{...}
type InterfacePropertiesInput interface {
	pulumi.Input

	ToInterfacePropertiesOutput() InterfacePropertiesOutput
	ToInterfacePropertiesOutputWithContext(context.Context) InterfacePropertiesOutput
}

// Interface properties
type InterfacePropertiesArgs struct {
	// The IPv4 address.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
	// The default IPv4 gateway (router).
	Ipv4Gateway pulumi.StringPtrInput `pulumi:"ipv4Gateway"`
	// The IPv4 subnet.
	Ipv4Subnet pulumi.StringPtrInput `pulumi:"ipv4Subnet"`
	// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge machine.
	Name pulumi.StringInput `pulumi:"name"`
}

func (InterfacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceProperties)(nil)).Elem()
}

func (i InterfacePropertiesArgs) ToInterfacePropertiesOutput() InterfacePropertiesOutput {
	return i.ToInterfacePropertiesOutputWithContext(context.Background())
}

func (i InterfacePropertiesArgs) ToInterfacePropertiesOutputWithContext(ctx context.Context) InterfacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfacePropertiesOutput)
}

// Interface properties
type InterfacePropertiesOutput struct{ *pulumi.OutputState }

func (InterfacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceProperties)(nil)).Elem()
}

func (o InterfacePropertiesOutput) ToInterfacePropertiesOutput() InterfacePropertiesOutput {
	return o
}

func (o InterfacePropertiesOutput) ToInterfacePropertiesOutputWithContext(ctx context.Context) InterfacePropertiesOutput {
	return o
}

// The IPv4 address.
func (o InterfacePropertiesOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceProperties) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// The default IPv4 gateway (router).
func (o InterfacePropertiesOutput) Ipv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceProperties) *string { return v.Ipv4Gateway }).(pulumi.StringPtrOutput)
}

// The IPv4 subnet.
func (o InterfacePropertiesOutput) Ipv4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceProperties) *string { return v.Ipv4Subnet }).(pulumi.StringPtrOutput)
}

// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge machine.
func (o InterfacePropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceProperties) string { return v.Name }).(pulumi.StringOutput)
}

// Interface properties
type InterfacePropertiesResponse struct {
	// The IPv4 address.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// The default IPv4 gateway (router).
	Ipv4Gateway *string `pulumi:"ipv4Gateway"`
	// The IPv4 subnet.
	Ipv4Subnet *string `pulumi:"ipv4Subnet"`
	// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge machine.
	Name string `pulumi:"name"`
}

// Interface properties
type InterfacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (InterfacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfacePropertiesResponse)(nil)).Elem()
}

func (o InterfacePropertiesResponseOutput) ToInterfacePropertiesResponseOutput() InterfacePropertiesResponseOutput {
	return o
}

func (o InterfacePropertiesResponseOutput) ToInterfacePropertiesResponseOutputWithContext(ctx context.Context) InterfacePropertiesResponseOutput {
	return o
}

// The IPv4 address.
func (o InterfacePropertiesResponseOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfacePropertiesResponse) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// The default IPv4 gateway (router).
func (o InterfacePropertiesResponseOutput) Ipv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfacePropertiesResponse) *string { return v.Ipv4Gateway }).(pulumi.StringPtrOutput)
}

// The IPv4 subnet.
func (o InterfacePropertiesResponseOutput) Ipv4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfacePropertiesResponse) *string { return v.Ipv4Subnet }).(pulumi.StringPtrOutput)
}

// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge machine.
func (o InterfacePropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InterfacePropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Reference to a Mobile Network resource.
type MobileNetworkResourceId struct {
	// Mobile Network resource ID.
	Id string `pulumi:"id"`
}

// MobileNetworkResourceIdInput is an input type that accepts MobileNetworkResourceIdArgs and MobileNetworkResourceIdOutput values.
// You can construct a concrete instance of `MobileNetworkResourceIdInput` via:
//
//	MobileNetworkResourceIdArgs{...}
type MobileNetworkResourceIdInput interface {
	pulumi.Input

	ToMobileNetworkResourceIdOutput() MobileNetworkResourceIdOutput
	ToMobileNetworkResourceIdOutputWithContext(context.Context) MobileNetworkResourceIdOutput
}

// Reference to a Mobile Network resource.
type MobileNetworkResourceIdArgs struct {
	// Mobile Network resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (MobileNetworkResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileNetworkResourceId)(nil)).Elem()
}

func (i MobileNetworkResourceIdArgs) ToMobileNetworkResourceIdOutput() MobileNetworkResourceIdOutput {
	return i.ToMobileNetworkResourceIdOutputWithContext(context.Background())
}

func (i MobileNetworkResourceIdArgs) ToMobileNetworkResourceIdOutputWithContext(ctx context.Context) MobileNetworkResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileNetworkResourceIdOutput)
}

func (i MobileNetworkResourceIdArgs) ToMobileNetworkResourceIdPtrOutput() MobileNetworkResourceIdPtrOutput {
	return i.ToMobileNetworkResourceIdPtrOutputWithContext(context.Background())
}

func (i MobileNetworkResourceIdArgs) ToMobileNetworkResourceIdPtrOutputWithContext(ctx context.Context) MobileNetworkResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileNetworkResourceIdOutput).ToMobileNetworkResourceIdPtrOutputWithContext(ctx)
}

// MobileNetworkResourceIdPtrInput is an input type that accepts MobileNetworkResourceIdArgs, MobileNetworkResourceIdPtr and MobileNetworkResourceIdPtrOutput values.
// You can construct a concrete instance of `MobileNetworkResourceIdPtrInput` via:
//
//	        MobileNetworkResourceIdArgs{...}
//
//	or:
//
//	        nil
type MobileNetworkResourceIdPtrInput interface {
	pulumi.Input

	ToMobileNetworkResourceIdPtrOutput() MobileNetworkResourceIdPtrOutput
	ToMobileNetworkResourceIdPtrOutputWithContext(context.Context) MobileNetworkResourceIdPtrOutput
}

type mobileNetworkResourceIdPtrType MobileNetworkResourceIdArgs

func MobileNetworkResourceIdPtr(v *MobileNetworkResourceIdArgs) MobileNetworkResourceIdPtrInput {
	return (*mobileNetworkResourceIdPtrType)(v)
}

func (*mobileNetworkResourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileNetworkResourceId)(nil)).Elem()
}

func (i *mobileNetworkResourceIdPtrType) ToMobileNetworkResourceIdPtrOutput() MobileNetworkResourceIdPtrOutput {
	return i.ToMobileNetworkResourceIdPtrOutputWithContext(context.Background())
}

func (i *mobileNetworkResourceIdPtrType) ToMobileNetworkResourceIdPtrOutputWithContext(ctx context.Context) MobileNetworkResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileNetworkResourceIdPtrOutput)
}

// Reference to a Mobile Network resource.
type MobileNetworkResourceIdOutput struct{ *pulumi.OutputState }

func (MobileNetworkResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileNetworkResourceId)(nil)).Elem()
}

func (o MobileNetworkResourceIdOutput) ToMobileNetworkResourceIdOutput() MobileNetworkResourceIdOutput {
	return o
}

func (o MobileNetworkResourceIdOutput) ToMobileNetworkResourceIdOutputWithContext(ctx context.Context) MobileNetworkResourceIdOutput {
	return o
}

func (o MobileNetworkResourceIdOutput) ToMobileNetworkResourceIdPtrOutput() MobileNetworkResourceIdPtrOutput {
	return o.ToMobileNetworkResourceIdPtrOutputWithContext(context.Background())
}

func (o MobileNetworkResourceIdOutput) ToMobileNetworkResourceIdPtrOutputWithContext(ctx context.Context) MobileNetworkResourceIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MobileNetworkResourceId) *MobileNetworkResourceId {
		return &v
	}).(MobileNetworkResourceIdPtrOutput)
}

// Mobile Network resource ID.
func (o MobileNetworkResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MobileNetworkResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type MobileNetworkResourceIdPtrOutput struct{ *pulumi.OutputState }

func (MobileNetworkResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileNetworkResourceId)(nil)).Elem()
}

func (o MobileNetworkResourceIdPtrOutput) ToMobileNetworkResourceIdPtrOutput() MobileNetworkResourceIdPtrOutput {
	return o
}

func (o MobileNetworkResourceIdPtrOutput) ToMobileNetworkResourceIdPtrOutputWithContext(ctx context.Context) MobileNetworkResourceIdPtrOutput {
	return o
}

func (o MobileNetworkResourceIdPtrOutput) Elem() MobileNetworkResourceIdOutput {
	return o.ApplyT(func(v *MobileNetworkResourceId) MobileNetworkResourceId {
		if v != nil {
			return *v
		}
		var ret MobileNetworkResourceId
		return ret
	}).(MobileNetworkResourceIdOutput)
}

// Mobile Network resource ID.
func (o MobileNetworkResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MobileNetworkResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to a Mobile Network resource.
type MobileNetworkResourceIdResponse struct {
	// Mobile Network resource ID.
	Id string `pulumi:"id"`
}

// Reference to a Mobile Network resource.
type MobileNetworkResourceIdResponseOutput struct{ *pulumi.OutputState }

func (MobileNetworkResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileNetworkResourceIdResponse)(nil)).Elem()
}

func (o MobileNetworkResourceIdResponseOutput) ToMobileNetworkResourceIdResponseOutput() MobileNetworkResourceIdResponseOutput {
	return o
}

func (o MobileNetworkResourceIdResponseOutput) ToMobileNetworkResourceIdResponseOutputWithContext(ctx context.Context) MobileNetworkResourceIdResponseOutput {
	return o
}

// Mobile Network resource ID.
func (o MobileNetworkResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MobileNetworkResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type MobileNetworkResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (MobileNetworkResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileNetworkResourceIdResponse)(nil)).Elem()
}

func (o MobileNetworkResourceIdResponsePtrOutput) ToMobileNetworkResourceIdResponsePtrOutput() MobileNetworkResourceIdResponsePtrOutput {
	return o
}

func (o MobileNetworkResourceIdResponsePtrOutput) ToMobileNetworkResourceIdResponsePtrOutputWithContext(ctx context.Context) MobileNetworkResourceIdResponsePtrOutput {
	return o
}

func (o MobileNetworkResourceIdResponsePtrOutput) Elem() MobileNetworkResourceIdResponseOutput {
	return o.ApplyT(func(v *MobileNetworkResourceIdResponse) MobileNetworkResourceIdResponse {
		if v != nil {
			return *v
		}
		var ret MobileNetworkResourceIdResponse
		return ret
	}).(MobileNetworkResourceIdResponseOutput)
}

// Mobile Network resource ID.
func (o MobileNetworkResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MobileNetworkResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to a SIM Policy resource.
type SimPolicyResourceId struct {
	// SIM Policy resource ID.
	Id string `pulumi:"id"`
}

// SimPolicyResourceIdInput is an input type that accepts SimPolicyResourceIdArgs and SimPolicyResourceIdOutput values.
// You can construct a concrete instance of `SimPolicyResourceIdInput` via:
//
//	SimPolicyResourceIdArgs{...}
type SimPolicyResourceIdInput interface {
	pulumi.Input

	ToSimPolicyResourceIdOutput() SimPolicyResourceIdOutput
	ToSimPolicyResourceIdOutputWithContext(context.Context) SimPolicyResourceIdOutput
}

// Reference to a SIM Policy resource.
type SimPolicyResourceIdArgs struct {
	// SIM Policy resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SimPolicyResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimPolicyResourceId)(nil)).Elem()
}

func (i SimPolicyResourceIdArgs) ToSimPolicyResourceIdOutput() SimPolicyResourceIdOutput {
	return i.ToSimPolicyResourceIdOutputWithContext(context.Background())
}

func (i SimPolicyResourceIdArgs) ToSimPolicyResourceIdOutputWithContext(ctx context.Context) SimPolicyResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimPolicyResourceIdOutput)
}

func (i SimPolicyResourceIdArgs) ToSimPolicyResourceIdPtrOutput() SimPolicyResourceIdPtrOutput {
	return i.ToSimPolicyResourceIdPtrOutputWithContext(context.Background())
}

func (i SimPolicyResourceIdArgs) ToSimPolicyResourceIdPtrOutputWithContext(ctx context.Context) SimPolicyResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimPolicyResourceIdOutput).ToSimPolicyResourceIdPtrOutputWithContext(ctx)
}

// SimPolicyResourceIdPtrInput is an input type that accepts SimPolicyResourceIdArgs, SimPolicyResourceIdPtr and SimPolicyResourceIdPtrOutput values.
// You can construct a concrete instance of `SimPolicyResourceIdPtrInput` via:
//
//	        SimPolicyResourceIdArgs{...}
//
//	or:
//
//	        nil
type SimPolicyResourceIdPtrInput interface {
	pulumi.Input

	ToSimPolicyResourceIdPtrOutput() SimPolicyResourceIdPtrOutput
	ToSimPolicyResourceIdPtrOutputWithContext(context.Context) SimPolicyResourceIdPtrOutput
}

type simPolicyResourceIdPtrType SimPolicyResourceIdArgs

func SimPolicyResourceIdPtr(v *SimPolicyResourceIdArgs) SimPolicyResourceIdPtrInput {
	return (*simPolicyResourceIdPtrType)(v)
}

func (*simPolicyResourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimPolicyResourceId)(nil)).Elem()
}

func (i *simPolicyResourceIdPtrType) ToSimPolicyResourceIdPtrOutput() SimPolicyResourceIdPtrOutput {
	return i.ToSimPolicyResourceIdPtrOutputWithContext(context.Background())
}

func (i *simPolicyResourceIdPtrType) ToSimPolicyResourceIdPtrOutputWithContext(ctx context.Context) SimPolicyResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimPolicyResourceIdPtrOutput)
}

// Reference to a SIM Policy resource.
type SimPolicyResourceIdOutput struct{ *pulumi.OutputState }

func (SimPolicyResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimPolicyResourceId)(nil)).Elem()
}

func (o SimPolicyResourceIdOutput) ToSimPolicyResourceIdOutput() SimPolicyResourceIdOutput {
	return o
}

func (o SimPolicyResourceIdOutput) ToSimPolicyResourceIdOutputWithContext(ctx context.Context) SimPolicyResourceIdOutput {
	return o
}

func (o SimPolicyResourceIdOutput) ToSimPolicyResourceIdPtrOutput() SimPolicyResourceIdPtrOutput {
	return o.ToSimPolicyResourceIdPtrOutputWithContext(context.Background())
}

func (o SimPolicyResourceIdOutput) ToSimPolicyResourceIdPtrOutputWithContext(ctx context.Context) SimPolicyResourceIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimPolicyResourceId) *SimPolicyResourceId {
		return &v
	}).(SimPolicyResourceIdPtrOutput)
}

// SIM Policy resource ID.
func (o SimPolicyResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SimPolicyResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type SimPolicyResourceIdPtrOutput struct{ *pulumi.OutputState }

func (SimPolicyResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimPolicyResourceId)(nil)).Elem()
}

func (o SimPolicyResourceIdPtrOutput) ToSimPolicyResourceIdPtrOutput() SimPolicyResourceIdPtrOutput {
	return o
}

func (o SimPolicyResourceIdPtrOutput) ToSimPolicyResourceIdPtrOutputWithContext(ctx context.Context) SimPolicyResourceIdPtrOutput {
	return o
}

func (o SimPolicyResourceIdPtrOutput) Elem() SimPolicyResourceIdOutput {
	return o.ApplyT(func(v *SimPolicyResourceId) SimPolicyResourceId {
		if v != nil {
			return *v
		}
		var ret SimPolicyResourceId
		return ret
	}).(SimPolicyResourceIdOutput)
}

// SIM Policy resource ID.
func (o SimPolicyResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimPolicyResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to a SIM Policy resource.
type SimPolicyResourceIdResponse struct {
	// SIM Policy resource ID.
	Id string `pulumi:"id"`
}

// Reference to a SIM Policy resource.
type SimPolicyResourceIdResponseOutput struct{ *pulumi.OutputState }

func (SimPolicyResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimPolicyResourceIdResponse)(nil)).Elem()
}

func (o SimPolicyResourceIdResponseOutput) ToSimPolicyResourceIdResponseOutput() SimPolicyResourceIdResponseOutput {
	return o
}

func (o SimPolicyResourceIdResponseOutput) ToSimPolicyResourceIdResponseOutputWithContext(ctx context.Context) SimPolicyResourceIdResponseOutput {
	return o
}

// SIM Policy resource ID.
func (o SimPolicyResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SimPolicyResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type SimPolicyResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (SimPolicyResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimPolicyResourceIdResponse)(nil)).Elem()
}

func (o SimPolicyResourceIdResponsePtrOutput) ToSimPolicyResourceIdResponsePtrOutput() SimPolicyResourceIdResponsePtrOutput {
	return o
}

func (o SimPolicyResourceIdResponsePtrOutput) ToSimPolicyResourceIdResponsePtrOutputWithContext(ctx context.Context) SimPolicyResourceIdResponsePtrOutput {
	return o
}

func (o SimPolicyResourceIdResponsePtrOutput) Elem() SimPolicyResourceIdResponseOutput {
	return o.ApplyT(func(v *SimPolicyResourceIdResponse) SimPolicyResourceIdResponse {
		if v != nil {
			return *v
		}
		var ret SimPolicyResourceIdResponse
		return ret
	}).(SimPolicyResourceIdResponseOutput)
}

// SIM Policy resource ID.
func (o SimPolicyResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimPolicyResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Static IP configuration for a sim, scoped to a particular attached data network and slice.
type SimStaticIpProperties struct {
	// The attached data network on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
	AttachedDataNetwork *AttachedDataNetworkResourceId `pulumi:"attachedDataNetwork"`
	// The network slice on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
	Slice *SliceResourceId `pulumi:"slice"`
	// The static IP configuration for the sim to use at the defined network scope.
	StaticIp *SimStaticIpPropertiesStaticIp `pulumi:"staticIp"`
}

// SimStaticIpPropertiesInput is an input type that accepts SimStaticIpPropertiesArgs and SimStaticIpPropertiesOutput values.
// You can construct a concrete instance of `SimStaticIpPropertiesInput` via:
//
//	SimStaticIpPropertiesArgs{...}
type SimStaticIpPropertiesInput interface {
	pulumi.Input

	ToSimStaticIpPropertiesOutput() SimStaticIpPropertiesOutput
	ToSimStaticIpPropertiesOutputWithContext(context.Context) SimStaticIpPropertiesOutput
}

// Static IP configuration for a sim, scoped to a particular attached data network and slice.
type SimStaticIpPropertiesArgs struct {
	// The attached data network on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
	AttachedDataNetwork AttachedDataNetworkResourceIdPtrInput `pulumi:"attachedDataNetwork"`
	// The network slice on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
	Slice SliceResourceIdPtrInput `pulumi:"slice"`
	// The static IP configuration for the sim to use at the defined network scope.
	StaticIp SimStaticIpPropertiesStaticIpPtrInput `pulumi:"staticIp"`
}

func (SimStaticIpPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimStaticIpProperties)(nil)).Elem()
}

func (i SimStaticIpPropertiesArgs) ToSimStaticIpPropertiesOutput() SimStaticIpPropertiesOutput {
	return i.ToSimStaticIpPropertiesOutputWithContext(context.Background())
}

func (i SimStaticIpPropertiesArgs) ToSimStaticIpPropertiesOutputWithContext(ctx context.Context) SimStaticIpPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimStaticIpPropertiesOutput)
}

// SimStaticIpPropertiesArrayInput is an input type that accepts SimStaticIpPropertiesArray and SimStaticIpPropertiesArrayOutput values.
// You can construct a concrete instance of `SimStaticIpPropertiesArrayInput` via:
//
//	SimStaticIpPropertiesArray{ SimStaticIpPropertiesArgs{...} }
type SimStaticIpPropertiesArrayInput interface {
	pulumi.Input

	ToSimStaticIpPropertiesArrayOutput() SimStaticIpPropertiesArrayOutput
	ToSimStaticIpPropertiesArrayOutputWithContext(context.Context) SimStaticIpPropertiesArrayOutput
}

type SimStaticIpPropertiesArray []SimStaticIpPropertiesInput

func (SimStaticIpPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimStaticIpProperties)(nil)).Elem()
}

func (i SimStaticIpPropertiesArray) ToSimStaticIpPropertiesArrayOutput() SimStaticIpPropertiesArrayOutput {
	return i.ToSimStaticIpPropertiesArrayOutputWithContext(context.Background())
}

func (i SimStaticIpPropertiesArray) ToSimStaticIpPropertiesArrayOutputWithContext(ctx context.Context) SimStaticIpPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimStaticIpPropertiesArrayOutput)
}

// Static IP configuration for a sim, scoped to a particular attached data network and slice.
type SimStaticIpPropertiesOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimStaticIpProperties)(nil)).Elem()
}

func (o SimStaticIpPropertiesOutput) ToSimStaticIpPropertiesOutput() SimStaticIpPropertiesOutput {
	return o
}

func (o SimStaticIpPropertiesOutput) ToSimStaticIpPropertiesOutputWithContext(ctx context.Context) SimStaticIpPropertiesOutput {
	return o
}

// The attached data network on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
func (o SimStaticIpPropertiesOutput) AttachedDataNetwork() AttachedDataNetworkResourceIdPtrOutput {
	return o.ApplyT(func(v SimStaticIpProperties) *AttachedDataNetworkResourceId { return v.AttachedDataNetwork }).(AttachedDataNetworkResourceIdPtrOutput)
}

// The network slice on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
func (o SimStaticIpPropertiesOutput) Slice() SliceResourceIdPtrOutput {
	return o.ApplyT(func(v SimStaticIpProperties) *SliceResourceId { return v.Slice }).(SliceResourceIdPtrOutput)
}

// The static IP configuration for the sim to use at the defined network scope.
func (o SimStaticIpPropertiesOutput) StaticIp() SimStaticIpPropertiesStaticIpPtrOutput {
	return o.ApplyT(func(v SimStaticIpProperties) *SimStaticIpPropertiesStaticIp { return v.StaticIp }).(SimStaticIpPropertiesStaticIpPtrOutput)
}

type SimStaticIpPropertiesArrayOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimStaticIpProperties)(nil)).Elem()
}

func (o SimStaticIpPropertiesArrayOutput) ToSimStaticIpPropertiesArrayOutput() SimStaticIpPropertiesArrayOutput {
	return o
}

func (o SimStaticIpPropertiesArrayOutput) ToSimStaticIpPropertiesArrayOutputWithContext(ctx context.Context) SimStaticIpPropertiesArrayOutput {
	return o
}

func (o SimStaticIpPropertiesArrayOutput) Index(i pulumi.IntInput) SimStaticIpPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimStaticIpProperties {
		return vs[0].([]SimStaticIpProperties)[vs[1].(int)]
	}).(SimStaticIpPropertiesOutput)
}

// Static IP configuration for a sim, scoped to a particular attached data network and slice.
type SimStaticIpPropertiesResponse struct {
	// The attached data network on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
	AttachedDataNetwork *AttachedDataNetworkResourceIdResponse `pulumi:"attachedDataNetwork"`
	// The network slice on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
	Slice *SliceResourceIdResponse `pulumi:"slice"`
	// The static IP configuration for the sim to use at the defined network scope.
	StaticIp *SimStaticIpPropertiesResponseStaticIp `pulumi:"staticIp"`
}

// Static IP configuration for a sim, scoped to a particular attached data network and slice.
type SimStaticIpPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimStaticIpPropertiesResponse)(nil)).Elem()
}

func (o SimStaticIpPropertiesResponseOutput) ToSimStaticIpPropertiesResponseOutput() SimStaticIpPropertiesResponseOutput {
	return o
}

func (o SimStaticIpPropertiesResponseOutput) ToSimStaticIpPropertiesResponseOutputWithContext(ctx context.Context) SimStaticIpPropertiesResponseOutput {
	return o
}

// The attached data network on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
func (o SimStaticIpPropertiesResponseOutput) AttachedDataNetwork() AttachedDataNetworkResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SimStaticIpPropertiesResponse) *AttachedDataNetworkResourceIdResponse {
		return v.AttachedDataNetwork
	}).(AttachedDataNetworkResourceIdResponsePtrOutput)
}

// The network slice on which the static IP address will be used. The combination of attachedDataNetwork and slice defines the network scope of the IP address.
func (o SimStaticIpPropertiesResponseOutput) Slice() SliceResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SimStaticIpPropertiesResponse) *SliceResourceIdResponse { return v.Slice }).(SliceResourceIdResponsePtrOutput)
}

// The static IP configuration for the sim to use at the defined network scope.
func (o SimStaticIpPropertiesResponseOutput) StaticIp() SimStaticIpPropertiesResponseStaticIpPtrOutput {
	return o.ApplyT(func(v SimStaticIpPropertiesResponse) *SimStaticIpPropertiesResponseStaticIp { return v.StaticIp }).(SimStaticIpPropertiesResponseStaticIpPtrOutput)
}

type SimStaticIpPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimStaticIpPropertiesResponse)(nil)).Elem()
}

func (o SimStaticIpPropertiesResponseArrayOutput) ToSimStaticIpPropertiesResponseArrayOutput() SimStaticIpPropertiesResponseArrayOutput {
	return o
}

func (o SimStaticIpPropertiesResponseArrayOutput) ToSimStaticIpPropertiesResponseArrayOutputWithContext(ctx context.Context) SimStaticIpPropertiesResponseArrayOutput {
	return o
}

func (o SimStaticIpPropertiesResponseArrayOutput) Index(i pulumi.IntInput) SimStaticIpPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimStaticIpPropertiesResponse {
		return vs[0].([]SimStaticIpPropertiesResponse)[vs[1].(int)]
	}).(SimStaticIpPropertiesResponseOutput)
}

// The static IP configuration for the sim to use at the defined network scope.
type SimStaticIpPropertiesResponseStaticIp struct {
	// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// The static IP configuration for the sim to use at the defined network scope.
type SimStaticIpPropertiesResponseStaticIpOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesResponseStaticIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimStaticIpPropertiesResponseStaticIp)(nil)).Elem()
}

func (o SimStaticIpPropertiesResponseStaticIpOutput) ToSimStaticIpPropertiesResponseStaticIpOutput() SimStaticIpPropertiesResponseStaticIpOutput {
	return o
}

func (o SimStaticIpPropertiesResponseStaticIpOutput) ToSimStaticIpPropertiesResponseStaticIpOutputWithContext(ctx context.Context) SimStaticIpPropertiesResponseStaticIpOutput {
	return o
}

// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
func (o SimStaticIpPropertiesResponseStaticIpOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimStaticIpPropertiesResponseStaticIp) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type SimStaticIpPropertiesResponseStaticIpPtrOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesResponseStaticIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimStaticIpPropertiesResponseStaticIp)(nil)).Elem()
}

func (o SimStaticIpPropertiesResponseStaticIpPtrOutput) ToSimStaticIpPropertiesResponseStaticIpPtrOutput() SimStaticIpPropertiesResponseStaticIpPtrOutput {
	return o
}

func (o SimStaticIpPropertiesResponseStaticIpPtrOutput) ToSimStaticIpPropertiesResponseStaticIpPtrOutputWithContext(ctx context.Context) SimStaticIpPropertiesResponseStaticIpPtrOutput {
	return o
}

func (o SimStaticIpPropertiesResponseStaticIpPtrOutput) Elem() SimStaticIpPropertiesResponseStaticIpOutput {
	return o.ApplyT(func(v *SimStaticIpPropertiesResponseStaticIp) SimStaticIpPropertiesResponseStaticIp {
		if v != nil {
			return *v
		}
		var ret SimStaticIpPropertiesResponseStaticIp
		return ret
	}).(SimStaticIpPropertiesResponseStaticIpOutput)
}

// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
func (o SimStaticIpPropertiesResponseStaticIpPtrOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimStaticIpPropertiesResponseStaticIp) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4Address
	}).(pulumi.StringPtrOutput)
}

// The static IP configuration for the sim to use at the defined network scope.
type SimStaticIpPropertiesStaticIp struct {
	// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// SimStaticIpPropertiesStaticIpInput is an input type that accepts SimStaticIpPropertiesStaticIpArgs and SimStaticIpPropertiesStaticIpOutput values.
// You can construct a concrete instance of `SimStaticIpPropertiesStaticIpInput` via:
//
//	SimStaticIpPropertiesStaticIpArgs{...}
type SimStaticIpPropertiesStaticIpInput interface {
	pulumi.Input

	ToSimStaticIpPropertiesStaticIpOutput() SimStaticIpPropertiesStaticIpOutput
	ToSimStaticIpPropertiesStaticIpOutputWithContext(context.Context) SimStaticIpPropertiesStaticIpOutput
}

// The static IP configuration for the sim to use at the defined network scope.
type SimStaticIpPropertiesStaticIpArgs struct {
	// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (SimStaticIpPropertiesStaticIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimStaticIpPropertiesStaticIp)(nil)).Elem()
}

func (i SimStaticIpPropertiesStaticIpArgs) ToSimStaticIpPropertiesStaticIpOutput() SimStaticIpPropertiesStaticIpOutput {
	return i.ToSimStaticIpPropertiesStaticIpOutputWithContext(context.Background())
}

func (i SimStaticIpPropertiesStaticIpArgs) ToSimStaticIpPropertiesStaticIpOutputWithContext(ctx context.Context) SimStaticIpPropertiesStaticIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimStaticIpPropertiesStaticIpOutput)
}

func (i SimStaticIpPropertiesStaticIpArgs) ToSimStaticIpPropertiesStaticIpPtrOutput() SimStaticIpPropertiesStaticIpPtrOutput {
	return i.ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(context.Background())
}

func (i SimStaticIpPropertiesStaticIpArgs) ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(ctx context.Context) SimStaticIpPropertiesStaticIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimStaticIpPropertiesStaticIpOutput).ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(ctx)
}

// SimStaticIpPropertiesStaticIpPtrInput is an input type that accepts SimStaticIpPropertiesStaticIpArgs, SimStaticIpPropertiesStaticIpPtr and SimStaticIpPropertiesStaticIpPtrOutput values.
// You can construct a concrete instance of `SimStaticIpPropertiesStaticIpPtrInput` via:
//
//	        SimStaticIpPropertiesStaticIpArgs{...}
//
//	or:
//
//	        nil
type SimStaticIpPropertiesStaticIpPtrInput interface {
	pulumi.Input

	ToSimStaticIpPropertiesStaticIpPtrOutput() SimStaticIpPropertiesStaticIpPtrOutput
	ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(context.Context) SimStaticIpPropertiesStaticIpPtrOutput
}

type simStaticIpPropertiesStaticIpPtrType SimStaticIpPropertiesStaticIpArgs

func SimStaticIpPropertiesStaticIpPtr(v *SimStaticIpPropertiesStaticIpArgs) SimStaticIpPropertiesStaticIpPtrInput {
	return (*simStaticIpPropertiesStaticIpPtrType)(v)
}

func (*simStaticIpPropertiesStaticIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimStaticIpPropertiesStaticIp)(nil)).Elem()
}

func (i *simStaticIpPropertiesStaticIpPtrType) ToSimStaticIpPropertiesStaticIpPtrOutput() SimStaticIpPropertiesStaticIpPtrOutput {
	return i.ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(context.Background())
}

func (i *simStaticIpPropertiesStaticIpPtrType) ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(ctx context.Context) SimStaticIpPropertiesStaticIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimStaticIpPropertiesStaticIpPtrOutput)
}

// The static IP configuration for the sim to use at the defined network scope.
type SimStaticIpPropertiesStaticIpOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesStaticIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimStaticIpPropertiesStaticIp)(nil)).Elem()
}

func (o SimStaticIpPropertiesStaticIpOutput) ToSimStaticIpPropertiesStaticIpOutput() SimStaticIpPropertiesStaticIpOutput {
	return o
}

func (o SimStaticIpPropertiesStaticIpOutput) ToSimStaticIpPropertiesStaticIpOutputWithContext(ctx context.Context) SimStaticIpPropertiesStaticIpOutput {
	return o
}

func (o SimStaticIpPropertiesStaticIpOutput) ToSimStaticIpPropertiesStaticIpPtrOutput() SimStaticIpPropertiesStaticIpPtrOutput {
	return o.ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(context.Background())
}

func (o SimStaticIpPropertiesStaticIpOutput) ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(ctx context.Context) SimStaticIpPropertiesStaticIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimStaticIpPropertiesStaticIp) *SimStaticIpPropertiesStaticIp {
		return &v
	}).(SimStaticIpPropertiesStaticIpPtrOutput)
}

// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
func (o SimStaticIpPropertiesStaticIpOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimStaticIpPropertiesStaticIp) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type SimStaticIpPropertiesStaticIpPtrOutput struct{ *pulumi.OutputState }

func (SimStaticIpPropertiesStaticIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimStaticIpPropertiesStaticIp)(nil)).Elem()
}

func (o SimStaticIpPropertiesStaticIpPtrOutput) ToSimStaticIpPropertiesStaticIpPtrOutput() SimStaticIpPropertiesStaticIpPtrOutput {
	return o
}

func (o SimStaticIpPropertiesStaticIpPtrOutput) ToSimStaticIpPropertiesStaticIpPtrOutputWithContext(ctx context.Context) SimStaticIpPropertiesStaticIpPtrOutput {
	return o
}

func (o SimStaticIpPropertiesStaticIpPtrOutput) Elem() SimStaticIpPropertiesStaticIpOutput {
	return o.ApplyT(func(v *SimStaticIpPropertiesStaticIp) SimStaticIpPropertiesStaticIp {
		if v != nil {
			return *v
		}
		var ret SimStaticIpPropertiesStaticIp
		return ret
	}).(SimStaticIpPropertiesStaticIpOutput)
}

// The IPv4 address assigned to the sim at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attachedDataNetwork.
func (o SimStaticIpPropertiesStaticIpPtrOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimStaticIpPropertiesStaticIp) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4Address
	}).(pulumi.StringPtrOutput)
}

// Reference to a Slice resource.
type SliceResourceId struct {
	// Slice resource ID.
	Id string `pulumi:"id"`
}

// SliceResourceIdInput is an input type that accepts SliceResourceIdArgs and SliceResourceIdOutput values.
// You can construct a concrete instance of `SliceResourceIdInput` via:
//
//	SliceResourceIdArgs{...}
type SliceResourceIdInput interface {
	pulumi.Input

	ToSliceResourceIdOutput() SliceResourceIdOutput
	ToSliceResourceIdOutputWithContext(context.Context) SliceResourceIdOutput
}

// Reference to a Slice resource.
type SliceResourceIdArgs struct {
	// Slice resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SliceResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SliceResourceId)(nil)).Elem()
}

func (i SliceResourceIdArgs) ToSliceResourceIdOutput() SliceResourceIdOutput {
	return i.ToSliceResourceIdOutputWithContext(context.Background())
}

func (i SliceResourceIdArgs) ToSliceResourceIdOutputWithContext(ctx context.Context) SliceResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SliceResourceIdOutput)
}

func (i SliceResourceIdArgs) ToSliceResourceIdPtrOutput() SliceResourceIdPtrOutput {
	return i.ToSliceResourceIdPtrOutputWithContext(context.Background())
}

func (i SliceResourceIdArgs) ToSliceResourceIdPtrOutputWithContext(ctx context.Context) SliceResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SliceResourceIdOutput).ToSliceResourceIdPtrOutputWithContext(ctx)
}

// SliceResourceIdPtrInput is an input type that accepts SliceResourceIdArgs, SliceResourceIdPtr and SliceResourceIdPtrOutput values.
// You can construct a concrete instance of `SliceResourceIdPtrInput` via:
//
//	        SliceResourceIdArgs{...}
//
//	or:
//
//	        nil
type SliceResourceIdPtrInput interface {
	pulumi.Input

	ToSliceResourceIdPtrOutput() SliceResourceIdPtrOutput
	ToSliceResourceIdPtrOutputWithContext(context.Context) SliceResourceIdPtrOutput
}

type sliceResourceIdPtrType SliceResourceIdArgs

func SliceResourceIdPtr(v *SliceResourceIdArgs) SliceResourceIdPtrInput {
	return (*sliceResourceIdPtrType)(v)
}

func (*sliceResourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SliceResourceId)(nil)).Elem()
}

func (i *sliceResourceIdPtrType) ToSliceResourceIdPtrOutput() SliceResourceIdPtrOutput {
	return i.ToSliceResourceIdPtrOutputWithContext(context.Background())
}

func (i *sliceResourceIdPtrType) ToSliceResourceIdPtrOutputWithContext(ctx context.Context) SliceResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SliceResourceIdPtrOutput)
}

// Reference to a Slice resource.
type SliceResourceIdOutput struct{ *pulumi.OutputState }

func (SliceResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SliceResourceId)(nil)).Elem()
}

func (o SliceResourceIdOutput) ToSliceResourceIdOutput() SliceResourceIdOutput {
	return o
}

func (o SliceResourceIdOutput) ToSliceResourceIdOutputWithContext(ctx context.Context) SliceResourceIdOutput {
	return o
}

func (o SliceResourceIdOutput) ToSliceResourceIdPtrOutput() SliceResourceIdPtrOutput {
	return o.ToSliceResourceIdPtrOutputWithContext(context.Background())
}

func (o SliceResourceIdOutput) ToSliceResourceIdPtrOutputWithContext(ctx context.Context) SliceResourceIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SliceResourceId) *SliceResourceId {
		return &v
	}).(SliceResourceIdPtrOutput)
}

// Slice resource ID.
func (o SliceResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SliceResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type SliceResourceIdPtrOutput struct{ *pulumi.OutputState }

func (SliceResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SliceResourceId)(nil)).Elem()
}

func (o SliceResourceIdPtrOutput) ToSliceResourceIdPtrOutput() SliceResourceIdPtrOutput {
	return o
}

func (o SliceResourceIdPtrOutput) ToSliceResourceIdPtrOutputWithContext(ctx context.Context) SliceResourceIdPtrOutput {
	return o
}

func (o SliceResourceIdPtrOutput) Elem() SliceResourceIdOutput {
	return o.ApplyT(func(v *SliceResourceId) SliceResourceId {
		if v != nil {
			return *v
		}
		var ret SliceResourceId
		return ret
	}).(SliceResourceIdOutput)
}

// Slice resource ID.
func (o SliceResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SliceResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to a Slice resource.
type SliceResourceIdResponse struct {
	// Slice resource ID.
	Id string `pulumi:"id"`
}

// Reference to a Slice resource.
type SliceResourceIdResponseOutput struct{ *pulumi.OutputState }

func (SliceResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SliceResourceIdResponse)(nil)).Elem()
}

func (o SliceResourceIdResponseOutput) ToSliceResourceIdResponseOutput() SliceResourceIdResponseOutput {
	return o
}

func (o SliceResourceIdResponseOutput) ToSliceResourceIdResponseOutputWithContext(ctx context.Context) SliceResourceIdResponseOutput {
	return o
}

// Slice resource ID.
func (o SliceResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SliceResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type SliceResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (SliceResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SliceResourceIdResponse)(nil)).Elem()
}

func (o SliceResourceIdResponsePtrOutput) ToSliceResourceIdResponsePtrOutput() SliceResourceIdResponsePtrOutput {
	return o
}

func (o SliceResourceIdResponsePtrOutput) ToSliceResourceIdResponsePtrOutputWithContext(ctx context.Context) SliceResourceIdResponsePtrOutput {
	return o
}

func (o SliceResourceIdResponsePtrOutput) Elem() SliceResourceIdResponseOutput {
	return o.ApplyT(func(v *SliceResourceIdResponse) SliceResourceIdResponse {
		if v != nil {
			return *v
		}
		var ret SliceResourceIdResponse
		return ret
	}).(SliceResourceIdResponseOutput)
}

// Slice resource ID.
func (o SliceResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SliceResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AttachedDataNetworkResourceIdOutput{})
	pulumi.RegisterOutputType(AttachedDataNetworkResourceIdPtrOutput{})
	pulumi.RegisterOutputType(AttachedDataNetworkResourceIdResponseOutput{})
	pulumi.RegisterOutputType(AttachedDataNetworkResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomLocationResourceIdOutput{})
	pulumi.RegisterOutputType(CustomLocationResourceIdPtrOutput{})
	pulumi.RegisterOutputType(CustomLocationResourceIdResponseOutput{})
	pulumi.RegisterOutputType(CustomLocationResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(InterfacePropertiesOutput{})
	pulumi.RegisterOutputType(InterfacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(MobileNetworkResourceIdOutput{})
	pulumi.RegisterOutputType(MobileNetworkResourceIdPtrOutput{})
	pulumi.RegisterOutputType(MobileNetworkResourceIdResponseOutput{})
	pulumi.RegisterOutputType(MobileNetworkResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(SimPolicyResourceIdOutput{})
	pulumi.RegisterOutputType(SimPolicyResourceIdPtrOutput{})
	pulumi.RegisterOutputType(SimPolicyResourceIdResponseOutput{})
	pulumi.RegisterOutputType(SimPolicyResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesArrayOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesResponseStaticIpOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesResponseStaticIpPtrOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesStaticIpOutput{})
	pulumi.RegisterOutputType(SimStaticIpPropertiesStaticIpPtrOutput{})
	pulumi.RegisterOutputType(SliceResourceIdOutput{})
	pulumi.RegisterOutputType(SliceResourceIdPtrOutput{})
	pulumi.RegisterOutputType(SliceResourceIdResponseOutput{})
	pulumi.RegisterOutputType(SliceResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
