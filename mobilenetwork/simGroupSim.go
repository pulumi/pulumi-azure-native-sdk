// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mobilenetwork

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SIM resource.
// Azure REST API version: 2024-04-01.
type SimGroupSim struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
	DeviceType pulumi.StringPtrOutput `pulumi:"deviceType"`
	// The integrated circuit card ID (ICCID) for the SIM.
	IntegratedCircuitCardIdentifier pulumi.StringPtrOutput `pulumi:"integratedCircuitCardIdentifier"`
	// The international mobile subscriber identity (IMSI) for the SIM.
	InternationalMobileSubscriberIdentity pulumi.StringOutput `pulumi:"internationalMobileSubscriberIdentity"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the SIM resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
	SimPolicy SimPolicyResourceIdResponsePtrOutput `pulumi:"simPolicy"`
	// The state of the SIM resource.
	SimState pulumi.StringOutput `pulumi:"simState"`
	// A dictionary of sites to the provisioning state of this SIM on that site.
	SiteProvisioningState pulumi.StringMapOutput `pulumi:"siteProvisioningState"`
	// A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
	StaticIpConfiguration SimStaticIpPropertiesResponseArrayOutput `pulumi:"staticIpConfiguration"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The public key fingerprint of the SIM vendor who provided this SIM, if any.
	VendorKeyFingerprint pulumi.StringOutput `pulumi:"vendorKeyFingerprint"`
	// The name of the SIM vendor who provided this SIM, if any.
	VendorName pulumi.StringOutput `pulumi:"vendorName"`
}

// NewSimGroupSim registers a new resource with the given unique name, arguments, and options.
func NewSimGroupSim(ctx *pulumi.Context,
	name string, args *SimGroupSimArgs, opts ...pulumi.ResourceOption) (*SimGroupSim, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InternationalMobileSubscriberIdentity == nil {
		return nil, errors.New("invalid value for required argument 'InternationalMobileSubscriberIdentity'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SimGroupName == nil {
		return nil, errors.New("invalid value for required argument 'SimGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20220401preview:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20220401preview:SimGroupSim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20221101:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20221101:SimGroupSim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20230601:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20230601:SimGroupSim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20230901:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20230901:SimGroupSim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20240201:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20240201:SimGroupSim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20240401:Sim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork/v20240401:SimGroupSim"),
		},
		{
			Type: pulumi.String("azure-native:mobilenetwork:Sim"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SimGroupSim
	err := ctx.RegisterResource("azure-native:mobilenetwork:SimGroupSim", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSimGroupSim gets an existing SimGroupSim resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSimGroupSim(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SimGroupSimState, opts ...pulumi.ResourceOption) (*SimGroupSim, error) {
	var resource SimGroupSim
	err := ctx.ReadResource("azure-native:mobilenetwork:SimGroupSim", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SimGroupSim resources.
type simGroupSimState struct {
}

type SimGroupSimState struct {
}

func (SimGroupSimState) ElementType() reflect.Type {
	return reflect.TypeOf((*simGroupSimState)(nil)).Elem()
}

type simGroupSimArgs struct {
	// The Ki value for the SIM.
	AuthenticationKey *string `pulumi:"authenticationKey"`
	// An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
	DeviceType *string `pulumi:"deviceType"`
	// The integrated circuit card ID (ICCID) for the SIM.
	IntegratedCircuitCardIdentifier *string `pulumi:"integratedCircuitCardIdentifier"`
	// The international mobile subscriber identity (IMSI) for the SIM.
	InternationalMobileSubscriberIdentity string `pulumi:"internationalMobileSubscriberIdentity"`
	// The Opc value for the SIM.
	OperatorKeyCode *string `pulumi:"operatorKeyCode"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the SIM Group.
	SimGroupName string `pulumi:"simGroupName"`
	// The name of the SIM.
	SimName *string `pulumi:"simName"`
	// The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
	SimPolicy *SimPolicyResourceId `pulumi:"simPolicy"`
	// A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
	StaticIpConfiguration []SimStaticIpProperties `pulumi:"staticIpConfiguration"`
}

// The set of arguments for constructing a SimGroupSim resource.
type SimGroupSimArgs struct {
	// The Ki value for the SIM.
	AuthenticationKey pulumi.StringPtrInput
	// An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
	DeviceType pulumi.StringPtrInput
	// The integrated circuit card ID (ICCID) for the SIM.
	IntegratedCircuitCardIdentifier pulumi.StringPtrInput
	// The international mobile subscriber identity (IMSI) for the SIM.
	InternationalMobileSubscriberIdentity pulumi.StringInput
	// The Opc value for the SIM.
	OperatorKeyCode pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the SIM Group.
	SimGroupName pulumi.StringInput
	// The name of the SIM.
	SimName pulumi.StringPtrInput
	// The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
	SimPolicy SimPolicyResourceIdPtrInput
	// A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
	StaticIpConfiguration SimStaticIpPropertiesArrayInput
}

func (SimGroupSimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*simGroupSimArgs)(nil)).Elem()
}

type SimGroupSimInput interface {
	pulumi.Input

	ToSimGroupSimOutput() SimGroupSimOutput
	ToSimGroupSimOutputWithContext(ctx context.Context) SimGroupSimOutput
}

func (*SimGroupSim) ElementType() reflect.Type {
	return reflect.TypeOf((**SimGroupSim)(nil)).Elem()
}

func (i *SimGroupSim) ToSimGroupSimOutput() SimGroupSimOutput {
	return i.ToSimGroupSimOutputWithContext(context.Background())
}

func (i *SimGroupSim) ToSimGroupSimOutputWithContext(ctx context.Context) SimGroupSimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimGroupSimOutput)
}

type SimGroupSimOutput struct{ *pulumi.OutputState }

func (SimGroupSimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimGroupSim)(nil)).Elem()
}

func (o SimGroupSimOutput) ToSimGroupSimOutput() SimGroupSimOutput {
	return o
}

func (o SimGroupSimOutput) ToSimGroupSimOutputWithContext(ctx context.Context) SimGroupSimOutput {
	return o
}

// The Azure API version of the resource.
func (o SimGroupSimOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value.
func (o SimGroupSimOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringPtrOutput { return v.DeviceType }).(pulumi.StringPtrOutput)
}

// The integrated circuit card ID (ICCID) for the SIM.
func (o SimGroupSimOutput) IntegratedCircuitCardIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringPtrOutput { return v.IntegratedCircuitCardIdentifier }).(pulumi.StringPtrOutput)
}

// The international mobile subscriber identity (IMSI) for the SIM.
func (o SimGroupSimOutput) InternationalMobileSubscriberIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.InternationalMobileSubscriberIdentity }).(pulumi.StringOutput)
}

// The name of the resource
func (o SimGroupSimOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the SIM resource.
func (o SimGroupSimOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM.
func (o SimGroupSimOutput) SimPolicy() SimPolicyResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *SimGroupSim) SimPolicyResourceIdResponsePtrOutput { return v.SimPolicy }).(SimPolicyResourceIdResponsePtrOutput)
}

// The state of the SIM resource.
func (o SimGroupSimOutput) SimState() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.SimState }).(pulumi.StringOutput)
}

// A dictionary of sites to the provisioning state of this SIM on that site.
func (o SimGroupSimOutput) SiteProvisioningState() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringMapOutput { return v.SiteProvisioningState }).(pulumi.StringMapOutput)
}

// A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
func (o SimGroupSimOutput) StaticIpConfiguration() SimStaticIpPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *SimGroupSim) SimStaticIpPropertiesResponseArrayOutput { return v.StaticIpConfiguration }).(SimStaticIpPropertiesResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SimGroupSimOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SimGroupSim) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SimGroupSimOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The public key fingerprint of the SIM vendor who provided this SIM, if any.
func (o SimGroupSimOutput) VendorKeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.VendorKeyFingerprint }).(pulumi.StringOutput)
}

// The name of the SIM vendor who provided this SIM, if any.
func (o SimGroupSimOutput) VendorName() pulumi.StringOutput {
	return o.ApplyT(func(v *SimGroupSim) pulumi.StringOutput { return v.VendorName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SimGroupSimOutput{})
}
