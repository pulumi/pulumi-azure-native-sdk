// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The SKU defining the throughput and SIM allowances for this packet core control plane deployment.
type BillingSku string

const (
	// Evaluation package plan
	BillingSkuEvaluationPackage = BillingSku("EvaluationPackage")
	// Flagship starter package plan
	BillingSkuFlagshipStarterPackage = BillingSku("FlagshipStarterPackage")
	// Edge site 2Gbps plan
	BillingSkuEdgeSite2GBPS = BillingSku("EdgeSite2GBPS")
	// Edge site 3Gbps plan
	BillingSkuEdgeSite3GBPS = BillingSku("EdgeSite3GBPS")
	// Edge site 4Gbps plan
	BillingSkuEdgeSite4GBPS = BillingSku("EdgeSite4GBPS")
	// Medium package plan
	BillingSkuMediumPackage = BillingSku("MediumPackage")
	// Large package plan
	BillingSkuLargePackage = BillingSku("LargePackage")
)

func (BillingSku) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingSku)(nil)).Elem()
}

func (e BillingSku) ToBillingSkuOutput() BillingSkuOutput {
	return pulumi.ToOutput(e).(BillingSkuOutput)
}

func (e BillingSku) ToBillingSkuOutputWithContext(ctx context.Context) BillingSkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BillingSkuOutput)
}

func (e BillingSku) ToBillingSkuPtrOutput() BillingSkuPtrOutput {
	return e.ToBillingSkuPtrOutputWithContext(context.Background())
}

func (e BillingSku) ToBillingSkuPtrOutputWithContext(ctx context.Context) BillingSkuPtrOutput {
	return BillingSku(e).ToBillingSkuOutputWithContext(ctx).ToBillingSkuPtrOutputWithContext(ctx)
}

func (e BillingSku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingSku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingSku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BillingSku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BillingSkuOutput struct{ *pulumi.OutputState }

func (BillingSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingSku)(nil)).Elem()
}

func (o BillingSkuOutput) ToBillingSkuOutput() BillingSkuOutput {
	return o
}

func (o BillingSkuOutput) ToBillingSkuOutputWithContext(ctx context.Context) BillingSkuOutput {
	return o
}

func (o BillingSkuOutput) ToBillingSkuPtrOutput() BillingSkuPtrOutput {
	return o.ToBillingSkuPtrOutputWithContext(context.Background())
}

func (o BillingSkuOutput) ToBillingSkuPtrOutputWithContext(ctx context.Context) BillingSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingSku) *BillingSku {
		return &v
	}).(BillingSkuPtrOutput)
}

func (o BillingSkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BillingSkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingSku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BillingSkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingSkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingSku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BillingSkuPtrOutput struct{ *pulumi.OutputState }

func (BillingSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingSku)(nil)).Elem()
}

func (o BillingSkuPtrOutput) ToBillingSkuPtrOutput() BillingSkuPtrOutput {
	return o
}

func (o BillingSkuPtrOutput) ToBillingSkuPtrOutputWithContext(ctx context.Context) BillingSkuPtrOutput {
	return o
}

func (o BillingSkuPtrOutput) Elem() BillingSkuOutput {
	return o.ApplyT(func(v *BillingSku) BillingSku {
		if v != nil {
			return *v
		}
		var ret BillingSku
		return ret
	}).(BillingSkuOutput)
}

func (o BillingSkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingSkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BillingSku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BillingSkuInput is an input type that accepts values of the BillingSku enum
// A concrete instance of `BillingSkuInput` can be one of the following:
//
//	BillingSkuEvaluationPackage
//	BillingSkuFlagshipStarterPackage
//	BillingSkuEdgeSite2GBPS
//	BillingSkuEdgeSite3GBPS
//	BillingSkuEdgeSite4GBPS
//	BillingSkuMediumPackage
//	BillingSkuLargePackage
type BillingSkuInput interface {
	pulumi.Input

	ToBillingSkuOutput() BillingSkuOutput
	ToBillingSkuOutputWithContext(context.Context) BillingSkuOutput
}

var billingSkuPtrType = reflect.TypeOf((**BillingSku)(nil)).Elem()

type BillingSkuPtrInput interface {
	pulumi.Input

	ToBillingSkuPtrOutput() BillingSkuPtrOutput
	ToBillingSkuPtrOutputWithContext(context.Context) BillingSkuPtrOutput
}

type billingSkuPtr string

func BillingSkuPtr(v string) BillingSkuPtrInput {
	return (*billingSkuPtr)(&v)
}

func (*billingSkuPtr) ElementType() reflect.Type {
	return billingSkuPtrType
}

func (in *billingSkuPtr) ToBillingSkuPtrOutput() BillingSkuPtrOutput {
	return pulumi.ToOutput(in).(BillingSkuPtrOutput)
}

func (in *billingSkuPtr) ToBillingSkuPtrOutputWithContext(ctx context.Context) BillingSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BillingSkuPtrOutput)
}

// The core network technology generation (5G core or EPC / 4G core).
type CoreNetworkType string

const (
	// 5G core
	CoreNetworkType_5GC = CoreNetworkType("5GC")
	// EPC / 4G core
	CoreNetworkTypeEPC = CoreNetworkType("EPC")
)

func (CoreNetworkType) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetworkType)(nil)).Elem()
}

func (e CoreNetworkType) ToCoreNetworkTypeOutput() CoreNetworkTypeOutput {
	return pulumi.ToOutput(e).(CoreNetworkTypeOutput)
}

func (e CoreNetworkType) ToCoreNetworkTypeOutputWithContext(ctx context.Context) CoreNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CoreNetworkTypeOutput)
}

func (e CoreNetworkType) ToCoreNetworkTypePtrOutput() CoreNetworkTypePtrOutput {
	return e.ToCoreNetworkTypePtrOutputWithContext(context.Background())
}

func (e CoreNetworkType) ToCoreNetworkTypePtrOutputWithContext(ctx context.Context) CoreNetworkTypePtrOutput {
	return CoreNetworkType(e).ToCoreNetworkTypeOutputWithContext(ctx).ToCoreNetworkTypePtrOutputWithContext(ctx)
}

func (e CoreNetworkType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CoreNetworkType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CoreNetworkType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CoreNetworkType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CoreNetworkTypeOutput struct{ *pulumi.OutputState }

func (CoreNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetworkType)(nil)).Elem()
}

func (o CoreNetworkTypeOutput) ToCoreNetworkTypeOutput() CoreNetworkTypeOutput {
	return o
}

func (o CoreNetworkTypeOutput) ToCoreNetworkTypeOutputWithContext(ctx context.Context) CoreNetworkTypeOutput {
	return o
}

func (o CoreNetworkTypeOutput) ToCoreNetworkTypePtrOutput() CoreNetworkTypePtrOutput {
	return o.ToCoreNetworkTypePtrOutputWithContext(context.Background())
}

func (o CoreNetworkTypeOutput) ToCoreNetworkTypePtrOutputWithContext(ctx context.Context) CoreNetworkTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CoreNetworkType) *CoreNetworkType {
		return &v
	}).(CoreNetworkTypePtrOutput)
}

func (o CoreNetworkTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CoreNetworkTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CoreNetworkType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CoreNetworkTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CoreNetworkTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CoreNetworkType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CoreNetworkTypePtrOutput struct{ *pulumi.OutputState }

func (CoreNetworkTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreNetworkType)(nil)).Elem()
}

func (o CoreNetworkTypePtrOutput) ToCoreNetworkTypePtrOutput() CoreNetworkTypePtrOutput {
	return o
}

func (o CoreNetworkTypePtrOutput) ToCoreNetworkTypePtrOutputWithContext(ctx context.Context) CoreNetworkTypePtrOutput {
	return o
}

func (o CoreNetworkTypePtrOutput) Elem() CoreNetworkTypeOutput {
	return o.ApplyT(func(v *CoreNetworkType) CoreNetworkType {
		if v != nil {
			return *v
		}
		var ret CoreNetworkType
		return ret
	}).(CoreNetworkTypeOutput)
}

func (o CoreNetworkTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CoreNetworkTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CoreNetworkType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CoreNetworkTypeInput is an input type that accepts values of the CoreNetworkType enum
// A concrete instance of `CoreNetworkTypeInput` can be one of the following:
//
//	CoreNetworkType_5GC
//	CoreNetworkTypeEPC
type CoreNetworkTypeInput interface {
	pulumi.Input

	ToCoreNetworkTypeOutput() CoreNetworkTypeOutput
	ToCoreNetworkTypeOutputWithContext(context.Context) CoreNetworkTypeOutput
}

var coreNetworkTypePtrType = reflect.TypeOf((**CoreNetworkType)(nil)).Elem()

type CoreNetworkTypePtrInput interface {
	pulumi.Input

	ToCoreNetworkTypePtrOutput() CoreNetworkTypePtrOutput
	ToCoreNetworkTypePtrOutputWithContext(context.Context) CoreNetworkTypePtrOutput
}

type coreNetworkTypePtr string

func CoreNetworkTypePtr(v string) CoreNetworkTypePtrInput {
	return (*coreNetworkTypePtr)(&v)
}

func (*coreNetworkTypePtr) ElementType() reflect.Type {
	return coreNetworkTypePtrType
}

func (in *coreNetworkTypePtr) ToCoreNetworkTypePtrOutput() CoreNetworkTypePtrOutput {
	return pulumi.ToOutput(in).(CoreNetworkTypePtrOutput)
}

func (in *coreNetworkTypePtr) ToCoreNetworkTypePtrOutputWithContext(ctx context.Context) CoreNetworkTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CoreNetworkTypePtrOutput)
}

// The type of identity that last modified the resource.
type CreatedByType string

const (
	CreatedByTypeUser            = CreatedByType("User")
	CreatedByTypeApplication     = CreatedByType("Application")
	CreatedByTypeManagedIdentity = CreatedByType("ManagedIdentity")
	CreatedByTypeKey             = CreatedByType("Key")
)

func (CreatedByType) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatedByType)(nil)).Elem()
}

func (e CreatedByType) ToCreatedByTypeOutput() CreatedByTypeOutput {
	return pulumi.ToOutput(e).(CreatedByTypeOutput)
}

func (e CreatedByType) ToCreatedByTypeOutputWithContext(ctx context.Context) CreatedByTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CreatedByTypeOutput)
}

func (e CreatedByType) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return e.ToCreatedByTypePtrOutputWithContext(context.Background())
}

func (e CreatedByType) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return CreatedByType(e).ToCreatedByTypeOutputWithContext(ctx).ToCreatedByTypePtrOutputWithContext(ctx)
}

func (e CreatedByType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreatedByType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreatedByType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CreatedByType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CreatedByTypeOutput struct{ *pulumi.OutputState }

func (CreatedByTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatedByType)(nil)).Elem()
}

func (o CreatedByTypeOutput) ToCreatedByTypeOutput() CreatedByTypeOutput {
	return o
}

func (o CreatedByTypeOutput) ToCreatedByTypeOutputWithContext(ctx context.Context) CreatedByTypeOutput {
	return o
}

func (o CreatedByTypeOutput) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return o.ToCreatedByTypePtrOutputWithContext(context.Background())
}

func (o CreatedByTypeOutput) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreatedByType) *CreatedByType {
		return &v
	}).(CreatedByTypePtrOutput)
}

func (o CreatedByTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CreatedByTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CreatedByType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CreatedByTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CreatedByTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CreatedByType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CreatedByTypePtrOutput struct{ *pulumi.OutputState }

func (CreatedByTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatedByType)(nil)).Elem()
}

func (o CreatedByTypePtrOutput) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return o
}

func (o CreatedByTypePtrOutput) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return o
}

func (o CreatedByTypePtrOutput) Elem() CreatedByTypeOutput {
	return o.ApplyT(func(v *CreatedByType) CreatedByType {
		if v != nil {
			return *v
		}
		var ret CreatedByType
		return ret
	}).(CreatedByTypeOutput)
}

func (o CreatedByTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CreatedByTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CreatedByType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CreatedByTypeInput is an input type that accepts values of the CreatedByType enum
// A concrete instance of `CreatedByTypeInput` can be one of the following:
//
//	CreatedByTypeUser
//	CreatedByTypeApplication
//	CreatedByTypeManagedIdentity
//	CreatedByTypeKey
type CreatedByTypeInput interface {
	pulumi.Input

	ToCreatedByTypeOutput() CreatedByTypeOutput
	ToCreatedByTypeOutputWithContext(context.Context) CreatedByTypeOutput
}

var createdByTypePtrType = reflect.TypeOf((**CreatedByType)(nil)).Elem()

type CreatedByTypePtrInput interface {
	pulumi.Input

	ToCreatedByTypePtrOutput() CreatedByTypePtrOutput
	ToCreatedByTypePtrOutputWithContext(context.Context) CreatedByTypePtrOutput
}

type createdByTypePtr string

func CreatedByTypePtr(v string) CreatedByTypePtrInput {
	return (*createdByTypePtr)(&v)
}

func (*createdByTypePtr) ElementType() reflect.Type {
	return createdByTypePtrType
}

func (in *createdByTypePtr) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return pulumi.ToOutput(in).(CreatedByTypePtrOutput)
}

func (in *createdByTypePtr) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CreatedByTypePtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Whether NAPT is enabled for connections to this attached data network.
type NaptEnabled string

const (
	// NAPT is enabled
	NaptEnabledEnabled = NaptEnabled("Enabled")
	// NAPT is disabled
	NaptEnabledDisabled = NaptEnabled("Disabled")
)

func (NaptEnabled) ElementType() reflect.Type {
	return reflect.TypeOf((*NaptEnabled)(nil)).Elem()
}

func (e NaptEnabled) ToNaptEnabledOutput() NaptEnabledOutput {
	return pulumi.ToOutput(e).(NaptEnabledOutput)
}

func (e NaptEnabled) ToNaptEnabledOutputWithContext(ctx context.Context) NaptEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NaptEnabledOutput)
}

func (e NaptEnabled) ToNaptEnabledPtrOutput() NaptEnabledPtrOutput {
	return e.ToNaptEnabledPtrOutputWithContext(context.Background())
}

func (e NaptEnabled) ToNaptEnabledPtrOutputWithContext(ctx context.Context) NaptEnabledPtrOutput {
	return NaptEnabled(e).ToNaptEnabledOutputWithContext(ctx).ToNaptEnabledPtrOutputWithContext(ctx)
}

func (e NaptEnabled) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NaptEnabled) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NaptEnabled) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NaptEnabled) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NaptEnabledOutput struct{ *pulumi.OutputState }

func (NaptEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NaptEnabled)(nil)).Elem()
}

func (o NaptEnabledOutput) ToNaptEnabledOutput() NaptEnabledOutput {
	return o
}

func (o NaptEnabledOutput) ToNaptEnabledOutputWithContext(ctx context.Context) NaptEnabledOutput {
	return o
}

func (o NaptEnabledOutput) ToNaptEnabledPtrOutput() NaptEnabledPtrOutput {
	return o.ToNaptEnabledPtrOutputWithContext(context.Background())
}

func (o NaptEnabledOutput) ToNaptEnabledPtrOutputWithContext(ctx context.Context) NaptEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NaptEnabled) *NaptEnabled {
		return &v
	}).(NaptEnabledPtrOutput)
}

func (o NaptEnabledOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NaptEnabledOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NaptEnabled) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NaptEnabledOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NaptEnabledOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NaptEnabled) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NaptEnabledPtrOutput struct{ *pulumi.OutputState }

func (NaptEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NaptEnabled)(nil)).Elem()
}

func (o NaptEnabledPtrOutput) ToNaptEnabledPtrOutput() NaptEnabledPtrOutput {
	return o
}

func (o NaptEnabledPtrOutput) ToNaptEnabledPtrOutputWithContext(ctx context.Context) NaptEnabledPtrOutput {
	return o
}

func (o NaptEnabledPtrOutput) Elem() NaptEnabledOutput {
	return o.ApplyT(func(v *NaptEnabled) NaptEnabled {
		if v != nil {
			return *v
		}
		var ret NaptEnabled
		return ret
	}).(NaptEnabledOutput)
}

func (o NaptEnabledPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NaptEnabledPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NaptEnabled) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NaptEnabledInput is an input type that accepts values of the NaptEnabled enum
// A concrete instance of `NaptEnabledInput` can be one of the following:
//
//	NaptEnabledEnabled
//	NaptEnabledDisabled
type NaptEnabledInput interface {
	pulumi.Input

	ToNaptEnabledOutput() NaptEnabledOutput
	ToNaptEnabledOutputWithContext(context.Context) NaptEnabledOutput
}

var naptEnabledPtrType = reflect.TypeOf((**NaptEnabled)(nil)).Elem()

type NaptEnabledPtrInput interface {
	pulumi.Input

	ToNaptEnabledPtrOutput() NaptEnabledPtrOutput
	ToNaptEnabledPtrOutputWithContext(context.Context) NaptEnabledPtrOutput
}

type naptEnabledPtr string

func NaptEnabledPtr(v string) NaptEnabledPtrInput {
	return (*naptEnabledPtr)(&v)
}

func (*naptEnabledPtr) ElementType() reflect.Type {
	return naptEnabledPtrType
}

func (in *naptEnabledPtr) ToNaptEnabledPtrOutput() NaptEnabledPtrOutput {
	return pulumi.ToOutput(in).(NaptEnabledPtrOutput)
}

func (in *naptEnabledPtr) ToNaptEnabledPtrOutputWithContext(ctx context.Context) NaptEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NaptEnabledPtrOutput)
}

// The default PDU session type, which is used if the UE does not request a specific session type.
type PduSessionType string

const (
	PduSessionTypeIPv4 = PduSessionType("IPv4")
	PduSessionTypeIPv6 = PduSessionType("IPv6")
)

func (PduSessionType) ElementType() reflect.Type {
	return reflect.TypeOf((*PduSessionType)(nil)).Elem()
}

func (e PduSessionType) ToPduSessionTypeOutput() PduSessionTypeOutput {
	return pulumi.ToOutput(e).(PduSessionTypeOutput)
}

func (e PduSessionType) ToPduSessionTypeOutputWithContext(ctx context.Context) PduSessionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PduSessionTypeOutput)
}

func (e PduSessionType) ToPduSessionTypePtrOutput() PduSessionTypePtrOutput {
	return e.ToPduSessionTypePtrOutputWithContext(context.Background())
}

func (e PduSessionType) ToPduSessionTypePtrOutputWithContext(ctx context.Context) PduSessionTypePtrOutput {
	return PduSessionType(e).ToPduSessionTypeOutputWithContext(ctx).ToPduSessionTypePtrOutputWithContext(ctx)
}

func (e PduSessionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PduSessionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PduSessionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PduSessionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PduSessionTypeOutput struct{ *pulumi.OutputState }

func (PduSessionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PduSessionType)(nil)).Elem()
}

func (o PduSessionTypeOutput) ToPduSessionTypeOutput() PduSessionTypeOutput {
	return o
}

func (o PduSessionTypeOutput) ToPduSessionTypeOutputWithContext(ctx context.Context) PduSessionTypeOutput {
	return o
}

func (o PduSessionTypeOutput) ToPduSessionTypePtrOutput() PduSessionTypePtrOutput {
	return o.ToPduSessionTypePtrOutputWithContext(context.Background())
}

func (o PduSessionTypeOutput) ToPduSessionTypePtrOutputWithContext(ctx context.Context) PduSessionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PduSessionType) *PduSessionType {
		return &v
	}).(PduSessionTypePtrOutput)
}

func (o PduSessionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PduSessionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PduSessionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PduSessionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PduSessionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PduSessionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PduSessionTypePtrOutput struct{ *pulumi.OutputState }

func (PduSessionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PduSessionType)(nil)).Elem()
}

func (o PduSessionTypePtrOutput) ToPduSessionTypePtrOutput() PduSessionTypePtrOutput {
	return o
}

func (o PduSessionTypePtrOutput) ToPduSessionTypePtrOutputWithContext(ctx context.Context) PduSessionTypePtrOutput {
	return o
}

func (o PduSessionTypePtrOutput) Elem() PduSessionTypeOutput {
	return o.ApplyT(func(v *PduSessionType) PduSessionType {
		if v != nil {
			return *v
		}
		var ret PduSessionType
		return ret
	}).(PduSessionTypeOutput)
}

func (o PduSessionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PduSessionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PduSessionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PduSessionTypeInput is an input type that accepts values of the PduSessionType enum
// A concrete instance of `PduSessionTypeInput` can be one of the following:
//
//	PduSessionTypeIPv4
//	PduSessionTypeIPv6
type PduSessionTypeInput interface {
	pulumi.Input

	ToPduSessionTypeOutput() PduSessionTypeOutput
	ToPduSessionTypeOutputWithContext(context.Context) PduSessionTypeOutput
}

var pduSessionTypePtrType = reflect.TypeOf((**PduSessionType)(nil)).Elem()

type PduSessionTypePtrInput interface {
	pulumi.Input

	ToPduSessionTypePtrOutput() PduSessionTypePtrOutput
	ToPduSessionTypePtrOutputWithContext(context.Context) PduSessionTypePtrOutput
}

type pduSessionTypePtr string

func PduSessionTypePtr(v string) PduSessionTypePtrInput {
	return (*pduSessionTypePtr)(&v)
}

func (*pduSessionTypePtr) ElementType() reflect.Type {
	return pduSessionTypePtrType
}

func (in *pduSessionTypePtr) ToPduSessionTypePtrOutput() PduSessionTypePtrOutput {
	return pulumi.ToOutput(in).(PduSessionTypePtrOutput)
}

func (in *pduSessionTypePtr) ToPduSessionTypePtrOutputWithContext(ctx context.Context) PduSessionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PduSessionTypePtrOutput)
}

// The platform type where packet core is deployed.
type PlatformType string

const (
	// If this option is chosen, you must set one of "azureStackEdgeDevice", "connectedCluster" or "customLocation". If multiple are set then "customLocation" will take precedence over "connectedCluster" which takes precedence over "azureStackEdgeDevice".
	PlatformType_AKS_HCI = PlatformType("AKS-HCI")
	// If this option is chosen, you must set one of "connectedCluster" or "customLocation". If multiple are set then "customLocation" will take precedence over "connectedCluster".
	PlatformTypeBaseVM = PlatformType("BaseVM")
)

func (PlatformType) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformType)(nil)).Elem()
}

func (e PlatformType) ToPlatformTypeOutput() PlatformTypeOutput {
	return pulumi.ToOutput(e).(PlatformTypeOutput)
}

func (e PlatformType) ToPlatformTypeOutputWithContext(ctx context.Context) PlatformTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlatformTypeOutput)
}

func (e PlatformType) ToPlatformTypePtrOutput() PlatformTypePtrOutput {
	return e.ToPlatformTypePtrOutputWithContext(context.Background())
}

func (e PlatformType) ToPlatformTypePtrOutputWithContext(ctx context.Context) PlatformTypePtrOutput {
	return PlatformType(e).ToPlatformTypeOutputWithContext(ctx).ToPlatformTypePtrOutputWithContext(ctx)
}

func (e PlatformType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlatformType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlatformType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlatformType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlatformTypeOutput struct{ *pulumi.OutputState }

func (PlatformTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformType)(nil)).Elem()
}

func (o PlatformTypeOutput) ToPlatformTypeOutput() PlatformTypeOutput {
	return o
}

func (o PlatformTypeOutput) ToPlatformTypeOutputWithContext(ctx context.Context) PlatformTypeOutput {
	return o
}

func (o PlatformTypeOutput) ToPlatformTypePtrOutput() PlatformTypePtrOutput {
	return o.ToPlatformTypePtrOutputWithContext(context.Background())
}

func (o PlatformTypeOutput) ToPlatformTypePtrOutputWithContext(ctx context.Context) PlatformTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlatformType) *PlatformType {
		return &v
	}).(PlatformTypePtrOutput)
}

func (o PlatformTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlatformTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlatformType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlatformTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlatformTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlatformType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlatformTypePtrOutput struct{ *pulumi.OutputState }

func (PlatformTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformType)(nil)).Elem()
}

func (o PlatformTypePtrOutput) ToPlatformTypePtrOutput() PlatformTypePtrOutput {
	return o
}

func (o PlatformTypePtrOutput) ToPlatformTypePtrOutputWithContext(ctx context.Context) PlatformTypePtrOutput {
	return o
}

func (o PlatformTypePtrOutput) Elem() PlatformTypeOutput {
	return o.ApplyT(func(v *PlatformType) PlatformType {
		if v != nil {
			return *v
		}
		var ret PlatformType
		return ret
	}).(PlatformTypeOutput)
}

func (o PlatformTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlatformTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlatformType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlatformTypeInput is an input type that accepts values of the PlatformType enum
// A concrete instance of `PlatformTypeInput` can be one of the following:
//
//	PlatformType_AKS_HCI
//	PlatformTypeBaseVM
type PlatformTypeInput interface {
	pulumi.Input

	ToPlatformTypeOutput() PlatformTypeOutput
	ToPlatformTypeOutputWithContext(context.Context) PlatformTypeOutput
}

var platformTypePtrType = reflect.TypeOf((**PlatformType)(nil)).Elem()

type PlatformTypePtrInput interface {
	pulumi.Input

	ToPlatformTypePtrOutput() PlatformTypePtrOutput
	ToPlatformTypePtrOutputWithContext(context.Context) PlatformTypePtrOutput
}

type platformTypePtr string

func PlatformTypePtr(v string) PlatformTypePtrInput {
	return (*platformTypePtr)(&v)
}

func (*platformTypePtr) ElementType() reflect.Type {
	return platformTypePtrType
}

func (in *platformTypePtr) ToPlatformTypePtrOutput() PlatformTypePtrOutput {
	return pulumi.ToOutput(in).(PlatformTypePtrOutput)
}

func (in *platformTypePtr) ToPlatformTypePtrOutputWithContext(ctx context.Context) PlatformTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlatformTypePtrOutput)
}

// Default QoS Flow preemption capability. The preemption capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
type PreemptionCapability string

const (
	// Cannot preempt
	PreemptionCapabilityNotPreempt = PreemptionCapability("NotPreempt")
	// May preempt
	PreemptionCapabilityMayPreempt = PreemptionCapability("MayPreempt")
)

func (PreemptionCapability) ElementType() reflect.Type {
	return reflect.TypeOf((*PreemptionCapability)(nil)).Elem()
}

func (e PreemptionCapability) ToPreemptionCapabilityOutput() PreemptionCapabilityOutput {
	return pulumi.ToOutput(e).(PreemptionCapabilityOutput)
}

func (e PreemptionCapability) ToPreemptionCapabilityOutputWithContext(ctx context.Context) PreemptionCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PreemptionCapabilityOutput)
}

func (e PreemptionCapability) ToPreemptionCapabilityPtrOutput() PreemptionCapabilityPtrOutput {
	return e.ToPreemptionCapabilityPtrOutputWithContext(context.Background())
}

func (e PreemptionCapability) ToPreemptionCapabilityPtrOutputWithContext(ctx context.Context) PreemptionCapabilityPtrOutput {
	return PreemptionCapability(e).ToPreemptionCapabilityOutputWithContext(ctx).ToPreemptionCapabilityPtrOutputWithContext(ctx)
}

func (e PreemptionCapability) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreemptionCapability) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreemptionCapability) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PreemptionCapability) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PreemptionCapabilityOutput struct{ *pulumi.OutputState }

func (PreemptionCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreemptionCapability)(nil)).Elem()
}

func (o PreemptionCapabilityOutput) ToPreemptionCapabilityOutput() PreemptionCapabilityOutput {
	return o
}

func (o PreemptionCapabilityOutput) ToPreemptionCapabilityOutputWithContext(ctx context.Context) PreemptionCapabilityOutput {
	return o
}

func (o PreemptionCapabilityOutput) ToPreemptionCapabilityPtrOutput() PreemptionCapabilityPtrOutput {
	return o.ToPreemptionCapabilityPtrOutputWithContext(context.Background())
}

func (o PreemptionCapabilityOutput) ToPreemptionCapabilityPtrOutputWithContext(ctx context.Context) PreemptionCapabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreemptionCapability) *PreemptionCapability {
		return &v
	}).(PreemptionCapabilityPtrOutput)
}

func (o PreemptionCapabilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PreemptionCapabilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreemptionCapability) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PreemptionCapabilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreemptionCapabilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreemptionCapability) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PreemptionCapabilityPtrOutput struct{ *pulumi.OutputState }

func (PreemptionCapabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreemptionCapability)(nil)).Elem()
}

func (o PreemptionCapabilityPtrOutput) ToPreemptionCapabilityPtrOutput() PreemptionCapabilityPtrOutput {
	return o
}

func (o PreemptionCapabilityPtrOutput) ToPreemptionCapabilityPtrOutputWithContext(ctx context.Context) PreemptionCapabilityPtrOutput {
	return o
}

func (o PreemptionCapabilityPtrOutput) Elem() PreemptionCapabilityOutput {
	return o.ApplyT(func(v *PreemptionCapability) PreemptionCapability {
		if v != nil {
			return *v
		}
		var ret PreemptionCapability
		return ret
	}).(PreemptionCapabilityOutput)
}

func (o PreemptionCapabilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreemptionCapabilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PreemptionCapability) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PreemptionCapabilityInput is an input type that accepts values of the PreemptionCapability enum
// A concrete instance of `PreemptionCapabilityInput` can be one of the following:
//
//	PreemptionCapabilityNotPreempt
//	PreemptionCapabilityMayPreempt
type PreemptionCapabilityInput interface {
	pulumi.Input

	ToPreemptionCapabilityOutput() PreemptionCapabilityOutput
	ToPreemptionCapabilityOutputWithContext(context.Context) PreemptionCapabilityOutput
}

var preemptionCapabilityPtrType = reflect.TypeOf((**PreemptionCapability)(nil)).Elem()

type PreemptionCapabilityPtrInput interface {
	pulumi.Input

	ToPreemptionCapabilityPtrOutput() PreemptionCapabilityPtrOutput
	ToPreemptionCapabilityPtrOutputWithContext(context.Context) PreemptionCapabilityPtrOutput
}

type preemptionCapabilityPtr string

func PreemptionCapabilityPtr(v string) PreemptionCapabilityPtrInput {
	return (*preemptionCapabilityPtr)(&v)
}

func (*preemptionCapabilityPtr) ElementType() reflect.Type {
	return preemptionCapabilityPtrType
}

func (in *preemptionCapabilityPtr) ToPreemptionCapabilityPtrOutput() PreemptionCapabilityPtrOutput {
	return pulumi.ToOutput(in).(PreemptionCapabilityPtrOutput)
}

func (in *preemptionCapabilityPtr) ToPreemptionCapabilityPtrOutputWithContext(ctx context.Context) PreemptionCapabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PreemptionCapabilityPtrOutput)
}

// Default QoS Flow preemption vulnerability. The preemption vulnerability of a QoS Flow controls whether it can be preempted by a QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
type PreemptionVulnerability string

const (
	// Cannot be preempted
	PreemptionVulnerabilityNotPreemptable = PreemptionVulnerability("NotPreemptable")
	// May be preempted
	PreemptionVulnerabilityPreemptable = PreemptionVulnerability("Preemptable")
)

func (PreemptionVulnerability) ElementType() reflect.Type {
	return reflect.TypeOf((*PreemptionVulnerability)(nil)).Elem()
}

func (e PreemptionVulnerability) ToPreemptionVulnerabilityOutput() PreemptionVulnerabilityOutput {
	return pulumi.ToOutput(e).(PreemptionVulnerabilityOutput)
}

func (e PreemptionVulnerability) ToPreemptionVulnerabilityOutputWithContext(ctx context.Context) PreemptionVulnerabilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PreemptionVulnerabilityOutput)
}

func (e PreemptionVulnerability) ToPreemptionVulnerabilityPtrOutput() PreemptionVulnerabilityPtrOutput {
	return e.ToPreemptionVulnerabilityPtrOutputWithContext(context.Background())
}

func (e PreemptionVulnerability) ToPreemptionVulnerabilityPtrOutputWithContext(ctx context.Context) PreemptionVulnerabilityPtrOutput {
	return PreemptionVulnerability(e).ToPreemptionVulnerabilityOutputWithContext(ctx).ToPreemptionVulnerabilityPtrOutputWithContext(ctx)
}

func (e PreemptionVulnerability) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreemptionVulnerability) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreemptionVulnerability) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PreemptionVulnerability) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PreemptionVulnerabilityOutput struct{ *pulumi.OutputState }

func (PreemptionVulnerabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreemptionVulnerability)(nil)).Elem()
}

func (o PreemptionVulnerabilityOutput) ToPreemptionVulnerabilityOutput() PreemptionVulnerabilityOutput {
	return o
}

func (o PreemptionVulnerabilityOutput) ToPreemptionVulnerabilityOutputWithContext(ctx context.Context) PreemptionVulnerabilityOutput {
	return o
}

func (o PreemptionVulnerabilityOutput) ToPreemptionVulnerabilityPtrOutput() PreemptionVulnerabilityPtrOutput {
	return o.ToPreemptionVulnerabilityPtrOutputWithContext(context.Background())
}

func (o PreemptionVulnerabilityOutput) ToPreemptionVulnerabilityPtrOutputWithContext(ctx context.Context) PreemptionVulnerabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreemptionVulnerability) *PreemptionVulnerability {
		return &v
	}).(PreemptionVulnerabilityPtrOutput)
}

func (o PreemptionVulnerabilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PreemptionVulnerabilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreemptionVulnerability) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PreemptionVulnerabilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreemptionVulnerabilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreemptionVulnerability) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PreemptionVulnerabilityPtrOutput struct{ *pulumi.OutputState }

func (PreemptionVulnerabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreemptionVulnerability)(nil)).Elem()
}

func (o PreemptionVulnerabilityPtrOutput) ToPreemptionVulnerabilityPtrOutput() PreemptionVulnerabilityPtrOutput {
	return o
}

func (o PreemptionVulnerabilityPtrOutput) ToPreemptionVulnerabilityPtrOutputWithContext(ctx context.Context) PreemptionVulnerabilityPtrOutput {
	return o
}

func (o PreemptionVulnerabilityPtrOutput) Elem() PreemptionVulnerabilityOutput {
	return o.ApplyT(func(v *PreemptionVulnerability) PreemptionVulnerability {
		if v != nil {
			return *v
		}
		var ret PreemptionVulnerability
		return ret
	}).(PreemptionVulnerabilityOutput)
}

func (o PreemptionVulnerabilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreemptionVulnerabilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PreemptionVulnerability) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PreemptionVulnerabilityInput is an input type that accepts values of the PreemptionVulnerability enum
// A concrete instance of `PreemptionVulnerabilityInput` can be one of the following:
//
//	PreemptionVulnerabilityNotPreemptable
//	PreemptionVulnerabilityPreemptable
type PreemptionVulnerabilityInput interface {
	pulumi.Input

	ToPreemptionVulnerabilityOutput() PreemptionVulnerabilityOutput
	ToPreemptionVulnerabilityOutputWithContext(context.Context) PreemptionVulnerabilityOutput
}

var preemptionVulnerabilityPtrType = reflect.TypeOf((**PreemptionVulnerability)(nil)).Elem()

type PreemptionVulnerabilityPtrInput interface {
	pulumi.Input

	ToPreemptionVulnerabilityPtrOutput() PreemptionVulnerabilityPtrOutput
	ToPreemptionVulnerabilityPtrOutputWithContext(context.Context) PreemptionVulnerabilityPtrOutput
}

type preemptionVulnerabilityPtr string

func PreemptionVulnerabilityPtr(v string) PreemptionVulnerabilityPtrInput {
	return (*preemptionVulnerabilityPtr)(&v)
}

func (*preemptionVulnerabilityPtr) ElementType() reflect.Type {
	return preemptionVulnerabilityPtrType
}

func (in *preemptionVulnerabilityPtr) ToPreemptionVulnerabilityPtrOutput() PreemptionVulnerabilityPtrOutput {
	return pulumi.ToOutput(in).(PreemptionVulnerabilityPtrOutput)
}

func (in *preemptionVulnerabilityPtr) ToPreemptionVulnerabilityPtrOutputWithContext(ctx context.Context) PreemptionVulnerabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PreemptionVulnerabilityPtrOutput)
}

// The direction of this flow.
type SdfDirection string

const (
	// Traffic flowing from the UE to the data network.
	SdfDirectionUplink = SdfDirection("Uplink")
	// Traffic flowing from the data network to the UE.
	SdfDirectionDownlink = SdfDirection("Downlink")
	// Traffic flowing both to and from the UE.
	SdfDirectionBidirectional = SdfDirection("Bidirectional")
)

func (SdfDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*SdfDirection)(nil)).Elem()
}

func (e SdfDirection) ToSdfDirectionOutput() SdfDirectionOutput {
	return pulumi.ToOutput(e).(SdfDirectionOutput)
}

func (e SdfDirection) ToSdfDirectionOutputWithContext(ctx context.Context) SdfDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SdfDirectionOutput)
}

func (e SdfDirection) ToSdfDirectionPtrOutput() SdfDirectionPtrOutput {
	return e.ToSdfDirectionPtrOutputWithContext(context.Background())
}

func (e SdfDirection) ToSdfDirectionPtrOutputWithContext(ctx context.Context) SdfDirectionPtrOutput {
	return SdfDirection(e).ToSdfDirectionOutputWithContext(ctx).ToSdfDirectionPtrOutputWithContext(ctx)
}

func (e SdfDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SdfDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SdfDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SdfDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SdfDirectionOutput struct{ *pulumi.OutputState }

func (SdfDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdfDirection)(nil)).Elem()
}

func (o SdfDirectionOutput) ToSdfDirectionOutput() SdfDirectionOutput {
	return o
}

func (o SdfDirectionOutput) ToSdfDirectionOutputWithContext(ctx context.Context) SdfDirectionOutput {
	return o
}

func (o SdfDirectionOutput) ToSdfDirectionPtrOutput() SdfDirectionPtrOutput {
	return o.ToSdfDirectionPtrOutputWithContext(context.Background())
}

func (o SdfDirectionOutput) ToSdfDirectionPtrOutputWithContext(ctx context.Context) SdfDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SdfDirection) *SdfDirection {
		return &v
	}).(SdfDirectionPtrOutput)
}

func (o SdfDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SdfDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdfDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SdfDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdfDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdfDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SdfDirectionPtrOutput struct{ *pulumi.OutputState }

func (SdfDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SdfDirection)(nil)).Elem()
}

func (o SdfDirectionPtrOutput) ToSdfDirectionPtrOutput() SdfDirectionPtrOutput {
	return o
}

func (o SdfDirectionPtrOutput) ToSdfDirectionPtrOutputWithContext(ctx context.Context) SdfDirectionPtrOutput {
	return o
}

func (o SdfDirectionPtrOutput) Elem() SdfDirectionOutput {
	return o.ApplyT(func(v *SdfDirection) SdfDirection {
		if v != nil {
			return *v
		}
		var ret SdfDirection
		return ret
	}).(SdfDirectionOutput)
}

func (o SdfDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdfDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SdfDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SdfDirectionInput is an input type that accepts values of the SdfDirection enum
// A concrete instance of `SdfDirectionInput` can be one of the following:
//
//	SdfDirectionUplink
//	SdfDirectionDownlink
//	SdfDirectionBidirectional
type SdfDirectionInput interface {
	pulumi.Input

	ToSdfDirectionOutput() SdfDirectionOutput
	ToSdfDirectionOutputWithContext(context.Context) SdfDirectionOutput
}

var sdfDirectionPtrType = reflect.TypeOf((**SdfDirection)(nil)).Elem()

type SdfDirectionPtrInput interface {
	pulumi.Input

	ToSdfDirectionPtrOutput() SdfDirectionPtrOutput
	ToSdfDirectionPtrOutputWithContext(context.Context) SdfDirectionPtrOutput
}

type sdfDirectionPtr string

func SdfDirectionPtr(v string) SdfDirectionPtrInput {
	return (*sdfDirectionPtr)(&v)
}

func (*sdfDirectionPtr) ElementType() reflect.Type {
	return sdfDirectionPtrType
}

func (in *sdfDirectionPtr) ToSdfDirectionPtrOutput() SdfDirectionPtrOutput {
	return pulumi.ToOutput(in).(SdfDirectionPtrOutput)
}

func (in *sdfDirectionPtr) ToSdfDirectionPtrOutputWithContext(ctx context.Context) SdfDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SdfDirectionPtrOutput)
}

// Determines whether flows that match this data flow policy rule are permitted.
type TrafficControlPermission string

const (
	// Traffic matching this rule is allowed to flow.
	TrafficControlPermissionEnabled = TrafficControlPermission("Enabled")
	// Traffic matching this rule is not allowed to flow.
	TrafficControlPermissionBlocked = TrafficControlPermission("Blocked")
)

func (TrafficControlPermission) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficControlPermission)(nil)).Elem()
}

func (e TrafficControlPermission) ToTrafficControlPermissionOutput() TrafficControlPermissionOutput {
	return pulumi.ToOutput(e).(TrafficControlPermissionOutput)
}

func (e TrafficControlPermission) ToTrafficControlPermissionOutputWithContext(ctx context.Context) TrafficControlPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrafficControlPermissionOutput)
}

func (e TrafficControlPermission) ToTrafficControlPermissionPtrOutput() TrafficControlPermissionPtrOutput {
	return e.ToTrafficControlPermissionPtrOutputWithContext(context.Background())
}

func (e TrafficControlPermission) ToTrafficControlPermissionPtrOutputWithContext(ctx context.Context) TrafficControlPermissionPtrOutput {
	return TrafficControlPermission(e).ToTrafficControlPermissionOutputWithContext(ctx).ToTrafficControlPermissionPtrOutputWithContext(ctx)
}

func (e TrafficControlPermission) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficControlPermission) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficControlPermission) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrafficControlPermission) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrafficControlPermissionOutput struct{ *pulumi.OutputState }

func (TrafficControlPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficControlPermission)(nil)).Elem()
}

func (o TrafficControlPermissionOutput) ToTrafficControlPermissionOutput() TrafficControlPermissionOutput {
	return o
}

func (o TrafficControlPermissionOutput) ToTrafficControlPermissionOutputWithContext(ctx context.Context) TrafficControlPermissionOutput {
	return o
}

func (o TrafficControlPermissionOutput) ToTrafficControlPermissionPtrOutput() TrafficControlPermissionPtrOutput {
	return o.ToTrafficControlPermissionPtrOutputWithContext(context.Background())
}

func (o TrafficControlPermissionOutput) ToTrafficControlPermissionPtrOutputWithContext(ctx context.Context) TrafficControlPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficControlPermission) *TrafficControlPermission {
		return &v
	}).(TrafficControlPermissionPtrOutput)
}

func (o TrafficControlPermissionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrafficControlPermissionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficControlPermission) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrafficControlPermissionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficControlPermissionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficControlPermission) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrafficControlPermissionPtrOutput struct{ *pulumi.OutputState }

func (TrafficControlPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficControlPermission)(nil)).Elem()
}

func (o TrafficControlPermissionPtrOutput) ToTrafficControlPermissionPtrOutput() TrafficControlPermissionPtrOutput {
	return o
}

func (o TrafficControlPermissionPtrOutput) ToTrafficControlPermissionPtrOutputWithContext(ctx context.Context) TrafficControlPermissionPtrOutput {
	return o
}

func (o TrafficControlPermissionPtrOutput) Elem() TrafficControlPermissionOutput {
	return o.ApplyT(func(v *TrafficControlPermission) TrafficControlPermission {
		if v != nil {
			return *v
		}
		var ret TrafficControlPermission
		return ret
	}).(TrafficControlPermissionOutput)
}

func (o TrafficControlPermissionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficControlPermissionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrafficControlPermission) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrafficControlPermissionInput is an input type that accepts values of the TrafficControlPermission enum
// A concrete instance of `TrafficControlPermissionInput` can be one of the following:
//
//	TrafficControlPermissionEnabled
//	TrafficControlPermissionBlocked
type TrafficControlPermissionInput interface {
	pulumi.Input

	ToTrafficControlPermissionOutput() TrafficControlPermissionOutput
	ToTrafficControlPermissionOutputWithContext(context.Context) TrafficControlPermissionOutput
}

var trafficControlPermissionPtrType = reflect.TypeOf((**TrafficControlPermission)(nil)).Elem()

type TrafficControlPermissionPtrInput interface {
	pulumi.Input

	ToTrafficControlPermissionPtrOutput() TrafficControlPermissionPtrOutput
	ToTrafficControlPermissionPtrOutputWithContext(context.Context) TrafficControlPermissionPtrOutput
}

type trafficControlPermissionPtr string

func TrafficControlPermissionPtr(v string) TrafficControlPermissionPtrInput {
	return (*trafficControlPermissionPtr)(&v)
}

func (*trafficControlPermissionPtr) ElementType() reflect.Type {
	return trafficControlPermissionPtrType
}

func (in *trafficControlPermissionPtr) ToTrafficControlPermissionPtrOutput() TrafficControlPermissionPtrOutput {
	return pulumi.ToOutput(in).(TrafficControlPermissionPtrOutput)
}

func (in *trafficControlPermissionPtr) ToTrafficControlPermissionPtrOutputWithContext(ctx context.Context) TrafficControlPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrafficControlPermissionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BillingSkuOutput{})
	pulumi.RegisterOutputType(BillingSkuPtrOutput{})
	pulumi.RegisterOutputType(CoreNetworkTypeOutput{})
	pulumi.RegisterOutputType(CoreNetworkTypePtrOutput{})
	pulumi.RegisterOutputType(CreatedByTypeOutput{})
	pulumi.RegisterOutputType(CreatedByTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(NaptEnabledOutput{})
	pulumi.RegisterOutputType(NaptEnabledPtrOutput{})
	pulumi.RegisterOutputType(PduSessionTypeOutput{})
	pulumi.RegisterOutputType(PduSessionTypePtrOutput{})
	pulumi.RegisterOutputType(PlatformTypeOutput{})
	pulumi.RegisterOutputType(PlatformTypePtrOutput{})
	pulumi.RegisterOutputType(PreemptionCapabilityOutput{})
	pulumi.RegisterOutputType(PreemptionCapabilityPtrOutput{})
	pulumi.RegisterOutputType(PreemptionVulnerabilityOutput{})
	pulumi.RegisterOutputType(PreemptionVulnerabilityPtrOutput{})
	pulumi.RegisterOutputType(SdfDirectionOutput{})
	pulumi.RegisterOutputType(SdfDirectionPtrOutput{})
	pulumi.RegisterOutputType(TrafficControlPermissionOutput{})
	pulumi.RegisterOutputType(TrafficControlPermissionPtrOutput{})
}
