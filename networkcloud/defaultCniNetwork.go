// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// API Version: 2022-12-12-preview.
type DefaultCniNetwork struct {
	pulumi.CustomResourceState

	// The resource ID of the Network Cloud cluster this default CNI network is associated with.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The autonomous system number that the fabric expects to peer with, derived from the associated L3 isolation domain.
	CniAsNumber pulumi.Float64Output `pulumi:"cniAsNumber"`
	// The Calico BGP configuration.
	CniBgpConfiguration CniBgpConfigurationResponsePtrOutput `pulumi:"cniBgpConfiguration"`
	// The more detailed status of the default CNI network.
	DetailedStatus pulumi.StringOutput `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage pulumi.StringOutput `pulumi:"detailedStatusMessage"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// The L3 isolation fabric BGP peering connectivity information necessary for BGP peering the Hybrid AKS Cluster with the switch fabric.
	FabricBgpPeers BgpPeerResponseArrayOutput `pulumi:"fabricBgpPeers"`
	// The list of Hybrid AKS cluster resource ID(s) that are associated with this default CNI network.
	HybridAksClustersAssociatedIds pulumi.StringArrayOutput `pulumi:"hybridAksClustersAssociatedIds"`
	// The name of the interface that will be present in the virtual machine to represent this network.
	InterfaceName pulumi.StringOutput `pulumi:"interfaceName"`
	// The type of the IP address allocation.
	IpAllocationType pulumi.StringPtrOutput `pulumi:"ipAllocationType"`
	// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
	// is IPV4 or DualStack.
	Ipv4ConnectedPrefix pulumi.StringPtrOutput `pulumi:"ipv4ConnectedPrefix"`
	// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
	// is IPV6 or DualStack.
	Ipv6ConnectedPrefix pulumi.StringPtrOutput `pulumi:"ipv6ConnectedPrefix"`
	// The resource ID of the Network Fabric l3IsolationDomain.
	L3IsolationDomainId pulumi.StringOutput `pulumi:"l3IsolationDomainId"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the default CNI network.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The VLAN from the l3IsolationDomain that is used for this network.
	Vlan pulumi.Float64Output `pulumi:"vlan"`
}

// NewDefaultCniNetwork registers a new resource with the given unique name, arguments, and options.
func NewDefaultCniNetwork(ctx *pulumi.Context,
	name string, args *DefaultCniNetworkArgs, opts ...pulumi.ResourceOption) (*DefaultCniNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.L3IsolationDomainId == nil {
		return nil, errors.New("invalid value for required argument 'L3IsolationDomainId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Vlan == nil {
		return nil, errors.New("invalid value for required argument 'Vlan'")
	}
	if args.IpAllocationType == nil {
		args.IpAllocationType = pulumi.StringPtr("DualStack")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:networkcloud/v20221212preview:DefaultCniNetwork"),
		},
	})
	opts = append(opts, aliases)
	var resource DefaultCniNetwork
	err := ctx.RegisterResource("azure-native:networkcloud:DefaultCniNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultCniNetwork gets an existing DefaultCniNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultCniNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultCniNetworkState, opts ...pulumi.ResourceOption) (*DefaultCniNetwork, error) {
	var resource DefaultCniNetwork
	err := ctx.ReadResource("azure-native:networkcloud:DefaultCniNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultCniNetwork resources.
type defaultCniNetworkState struct {
}

type DefaultCniNetworkState struct {
}

func (DefaultCniNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultCniNetworkState)(nil)).Elem()
}

type defaultCniNetworkArgs struct {
	// The Calico BGP configuration.
	CniBgpConfiguration *CniBgpConfiguration `pulumi:"cniBgpConfiguration"`
	// The name of the default CNI network.
	DefaultCniNetworkName *string `pulumi:"defaultCniNetworkName"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// The type of the IP address allocation.
	IpAllocationType *string `pulumi:"ipAllocationType"`
	// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
	// is IPV4 or DualStack.
	Ipv4ConnectedPrefix *string `pulumi:"ipv4ConnectedPrefix"`
	// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
	// is IPV6 or DualStack.
	Ipv6ConnectedPrefix *string `pulumi:"ipv6ConnectedPrefix"`
	// The resource ID of the Network Fabric l3IsolationDomain.
	L3IsolationDomainId string `pulumi:"l3IsolationDomainId"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The VLAN from the l3IsolationDomain that is used for this network.
	Vlan float64 `pulumi:"vlan"`
}

// The set of arguments for constructing a DefaultCniNetwork resource.
type DefaultCniNetworkArgs struct {
	// The Calico BGP configuration.
	CniBgpConfiguration CniBgpConfigurationPtrInput
	// The name of the default CNI network.
	DefaultCniNetworkName pulumi.StringPtrInput
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationInput
	// The type of the IP address allocation.
	IpAllocationType pulumi.StringPtrInput
	// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
	// is IPV4 or DualStack.
	Ipv4ConnectedPrefix pulumi.StringPtrInput
	// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
	// is IPV6 or DualStack.
	Ipv6ConnectedPrefix pulumi.StringPtrInput
	// The resource ID of the Network Fabric l3IsolationDomain.
	L3IsolationDomainId pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The VLAN from the l3IsolationDomain that is used for this network.
	Vlan pulumi.Float64Input
}

func (DefaultCniNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultCniNetworkArgs)(nil)).Elem()
}

type DefaultCniNetworkInput interface {
	pulumi.Input

	ToDefaultCniNetworkOutput() DefaultCniNetworkOutput
	ToDefaultCniNetworkOutputWithContext(ctx context.Context) DefaultCniNetworkOutput
}

func (*DefaultCniNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultCniNetwork)(nil)).Elem()
}

func (i *DefaultCniNetwork) ToDefaultCniNetworkOutput() DefaultCniNetworkOutput {
	return i.ToDefaultCniNetworkOutputWithContext(context.Background())
}

func (i *DefaultCniNetwork) ToDefaultCniNetworkOutputWithContext(ctx context.Context) DefaultCniNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultCniNetworkOutput)
}

type DefaultCniNetworkOutput struct{ *pulumi.OutputState }

func (DefaultCniNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultCniNetwork)(nil)).Elem()
}

func (o DefaultCniNetworkOutput) ToDefaultCniNetworkOutput() DefaultCniNetworkOutput {
	return o
}

func (o DefaultCniNetworkOutput) ToDefaultCniNetworkOutputWithContext(ctx context.Context) DefaultCniNetworkOutput {
	return o
}

// The resource ID of the Network Cloud cluster this default CNI network is associated with.
func (o DefaultCniNetworkOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The autonomous system number that the fabric expects to peer with, derived from the associated L3 isolation domain.
func (o DefaultCniNetworkOutput) CniAsNumber() pulumi.Float64Output {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.Float64Output { return v.CniAsNumber }).(pulumi.Float64Output)
}

// The Calico BGP configuration.
func (o DefaultCniNetworkOutput) CniBgpConfiguration() CniBgpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) CniBgpConfigurationResponsePtrOutput { return v.CniBgpConfiguration }).(CniBgpConfigurationResponsePtrOutput)
}

// The more detailed status of the default CNI network.
func (o DefaultCniNetworkOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o DefaultCniNetworkOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The extended location of the cluster associated with the resource.
func (o DefaultCniNetworkOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// The L3 isolation fabric BGP peering connectivity information necessary for BGP peering the Hybrid AKS Cluster with the switch fabric.
func (o DefaultCniNetworkOutput) FabricBgpPeers() BgpPeerResponseArrayOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) BgpPeerResponseArrayOutput { return v.FabricBgpPeers }).(BgpPeerResponseArrayOutput)
}

// The list of Hybrid AKS cluster resource ID(s) that are associated with this default CNI network.
func (o DefaultCniNetworkOutput) HybridAksClustersAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringArrayOutput { return v.HybridAksClustersAssociatedIds }).(pulumi.StringArrayOutput)
}

// The name of the interface that will be present in the virtual machine to represent this network.
func (o DefaultCniNetworkOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.InterfaceName }).(pulumi.StringOutput)
}

// The type of the IP address allocation.
func (o DefaultCniNetworkOutput) IpAllocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringPtrOutput { return v.IpAllocationType }).(pulumi.StringPtrOutput)
}

// The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
// is IPV4 or DualStack.
func (o DefaultCniNetworkOutput) Ipv4ConnectedPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringPtrOutput { return v.Ipv4ConnectedPrefix }).(pulumi.StringPtrOutput)
}

// The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type
// is IPV6 or DualStack.
func (o DefaultCniNetworkOutput) Ipv6ConnectedPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringPtrOutput { return v.Ipv6ConnectedPrefix }).(pulumi.StringPtrOutput)
}

// The resource ID of the Network Fabric l3IsolationDomain.
func (o DefaultCniNetworkOutput) L3IsolationDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.L3IsolationDomainId }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o DefaultCniNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o DefaultCniNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the default CNI network.
func (o DefaultCniNetworkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DefaultCniNetworkOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o DefaultCniNetworkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DefaultCniNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The VLAN from the l3IsolationDomain that is used for this network.
func (o DefaultCniNetworkOutput) Vlan() pulumi.Float64Output {
	return o.ApplyT(func(v *DefaultCniNetwork) pulumi.Float64Output { return v.Vlan }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(DefaultCniNetworkOutput{})
}
