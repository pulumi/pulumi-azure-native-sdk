// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the additional details related to the provided Hybrid AKS provisioned cluster.
// Azure REST API version: 2022-12-12-preview.
func LookupHybridAksCluster(ctx *pulumi.Context, args *LookupHybridAksClusterArgs, opts ...pulumi.InvokeOption) (*LookupHybridAksClusterResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupHybridAksClusterResult
	err := ctx.Invoke("azure-native:networkcloud:getHybridAksCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupHybridAksClusterArgs struct {
	// The name of the Hybrid AKS cluster.
	HybridAksClusterName string `pulumi:"hybridAksClusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The details are specific to the Network Cloud use of the Hybrid AKS cluster.
type LookupHybridAksClusterResult struct {
	// The list of resource IDs for the workload networks associated with the Hybrid AKS cluster. It can be any of l2Networks, l3Networks, or trunkedNetworks resources. This field will also contain one cloudServicesNetwork and one defaultCniNetwork.
	AssociatedNetworkIds []string `pulumi:"associatedNetworkIds"`
	// The resource ID of the associated cloud services network.
	CloudServicesNetworkId string `pulumi:"cloudServicesNetworkId"`
	// The resource ID of the Network Cloud cluster hosting the Hybrid AKS cluster.
	ClusterId string `pulumi:"clusterId"`
	// The number of control plane node VMs.
	ControlPlaneCount float64 `pulumi:"controlPlaneCount"`
	// The list of node configurations detailing associated VMs that are part of the control plane nodes of this Hybrid AKS cluster.
	ControlPlaneNodes []NodeConfigurationResponse `pulumi:"controlPlaneNodes"`
	// The resource ID of the associated default CNI network.
	DefaultCniNetworkId string `pulumi:"defaultCniNetworkId"`
	// The more detailed status of this Hybrid AKS cluster.
	DetailedStatus string `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage string `pulumi:"detailedStatusMessage"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The resource ID of the Hybrid AKS cluster that this additional information is for.
	HybridAksProvisionedClusterId string `pulumi:"hybridAksProvisionedClusterId"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of the Hybrid AKS cluster resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The resource IDs of volumes that are attached to the Hybrid AKS cluster.
	Volumes []string `pulumi:"volumes"`
	// The number of worker node VMs.
	WorkerCount float64 `pulumi:"workerCount"`
	// The list of node configurations detailing associated VMs that are part of the worker nodes of this Hybrid AKS cluster.
	WorkerNodes []NodeConfigurationResponse `pulumi:"workerNodes"`
}

func LookupHybridAksClusterOutput(ctx *pulumi.Context, args LookupHybridAksClusterOutputArgs, opts ...pulumi.InvokeOption) LookupHybridAksClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHybridAksClusterResult, error) {
			args := v.(LookupHybridAksClusterArgs)
			r, err := LookupHybridAksCluster(ctx, &args, opts...)
			var s LookupHybridAksClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHybridAksClusterResultOutput)
}

type LookupHybridAksClusterOutputArgs struct {
	// The name of the Hybrid AKS cluster.
	HybridAksClusterName pulumi.StringInput `pulumi:"hybridAksClusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupHybridAksClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHybridAksClusterArgs)(nil)).Elem()
}

// The details are specific to the Network Cloud use of the Hybrid AKS cluster.
type LookupHybridAksClusterResultOutput struct{ *pulumi.OutputState }

func (LookupHybridAksClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHybridAksClusterResult)(nil)).Elem()
}

func (o LookupHybridAksClusterResultOutput) ToLookupHybridAksClusterResultOutput() LookupHybridAksClusterResultOutput {
	return o
}

func (o LookupHybridAksClusterResultOutput) ToLookupHybridAksClusterResultOutputWithContext(ctx context.Context) LookupHybridAksClusterResultOutput {
	return o
}

// The list of resource IDs for the workload networks associated with the Hybrid AKS cluster. It can be any of l2Networks, l3Networks, or trunkedNetworks resources. This field will also contain one cloudServicesNetwork and one defaultCniNetwork.
func (o LookupHybridAksClusterResultOutput) AssociatedNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) []string { return v.AssociatedNetworkIds }).(pulumi.StringArrayOutput)
}

// The resource ID of the associated cloud services network.
func (o LookupHybridAksClusterResultOutput) CloudServicesNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.CloudServicesNetworkId }).(pulumi.StringOutput)
}

// The resource ID of the Network Cloud cluster hosting the Hybrid AKS cluster.
func (o LookupHybridAksClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The number of control plane node VMs.
func (o LookupHybridAksClusterResultOutput) ControlPlaneCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupHybridAksClusterResult) float64 { return v.ControlPlaneCount }).(pulumi.Float64Output)
}

// The list of node configurations detailing associated VMs that are part of the control plane nodes of this Hybrid AKS cluster.
func (o LookupHybridAksClusterResultOutput) ControlPlaneNodes() NodeConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) []NodeConfigurationResponse { return v.ControlPlaneNodes }).(NodeConfigurationResponseArrayOutput)
}

// The resource ID of the associated default CNI network.
func (o LookupHybridAksClusterResultOutput) DefaultCniNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.DefaultCniNetworkId }).(pulumi.StringOutput)
}

// The more detailed status of this Hybrid AKS cluster.
func (o LookupHybridAksClusterResultOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o LookupHybridAksClusterResultOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The extended location of the cluster associated with the resource.
func (o LookupHybridAksClusterResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// The resource ID of the Hybrid AKS cluster that this additional information is for.
func (o LookupHybridAksClusterResultOutput) HybridAksProvisionedClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.HybridAksProvisionedClusterId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupHybridAksClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupHybridAksClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupHybridAksClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the Hybrid AKS cluster resource.
func (o LookupHybridAksClusterResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupHybridAksClusterResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupHybridAksClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupHybridAksClusterResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) string { return v.Type }).(pulumi.StringOutput)
}

// The resource IDs of volumes that are attached to the Hybrid AKS cluster.
func (o LookupHybridAksClusterResultOutput) Volumes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) []string { return v.Volumes }).(pulumi.StringArrayOutput)
}

// The number of worker node VMs.
func (o LookupHybridAksClusterResultOutput) WorkerCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupHybridAksClusterResult) float64 { return v.WorkerCount }).(pulumi.Float64Output)
}

// The list of node configurations detailing associated VMs that are part of the worker nodes of this Hybrid AKS cluster.
func (o LookupHybridAksClusterResultOutput) WorkerNodes() NodeConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LookupHybridAksClusterResult) []NodeConfigurationResponse { return v.WorkerNodes }).(NodeConfigurationResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHybridAksClusterResultOutput{})
}
