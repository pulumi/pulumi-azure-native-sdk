// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type L3Network struct {
	pulumi.CustomResourceState

	// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
	AssociatedResourceIds pulumi.StringArrayOutput `pulumi:"associatedResourceIds"`
	// The resource ID of the Network Cloud cluster this L3 network is associated with.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The more detailed status of the L3 network.
	DetailedStatus pulumi.StringOutput `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage pulumi.StringOutput `pulumi:"detailedStatusMessage"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this L3 network.
	HybridAksClustersAssociatedIds pulumi.StringArrayOutput `pulumi:"hybridAksClustersAssociatedIds"`
	// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
	HybridAksIpamEnabled pulumi.StringPtrOutput `pulumi:"hybridAksIpamEnabled"`
	// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
	HybridAksPluginType pulumi.StringPtrOutput `pulumi:"hybridAksPluginType"`
	// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
	InterfaceName pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// The type of the IP address allocation, defaulted to "DualStack".
	IpAllocationType pulumi.StringPtrOutput `pulumi:"ipAllocationType"`
	// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
	// is IPV4 or DualStack.
	Ipv4ConnectedPrefix pulumi.StringPtrOutput `pulumi:"ipv4ConnectedPrefix"`
	// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
	// is IPV6 or DualStack.
	Ipv6ConnectedPrefix pulumi.StringPtrOutput `pulumi:"ipv6ConnectedPrefix"`
	// The resource ID of the Network Fabric l3IsolationDomain.
	L3IsolationDomainId pulumi.StringOutput `pulumi:"l3IsolationDomainId"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the L3 network.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this L3 network.
	VirtualMachinesAssociatedIds pulumi.StringArrayOutput `pulumi:"virtualMachinesAssociatedIds"`
	// The VLAN from the l3IsolationDomain that is used for this network.
	Vlan pulumi.Float64Output `pulumi:"vlan"`
}

// NewL3Network registers a new resource with the given unique name, arguments, and options.
func NewL3Network(ctx *pulumi.Context,
	name string, args *L3NetworkArgs, opts ...pulumi.ResourceOption) (*L3Network, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.L3IsolationDomainId == nil {
		return nil, errors.New("invalid value for required argument 'L3IsolationDomainId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Vlan == nil {
		return nil, errors.New("invalid value for required argument 'Vlan'")
	}
	if args.HybridAksIpamEnabled == nil {
		args.HybridAksIpamEnabled = pulumi.StringPtr("True")
	}
	if args.HybridAksPluginType == nil {
		args.HybridAksPluginType = pulumi.StringPtr("SRIOV")
	}
	if args.IpAllocationType == nil {
		args.IpAllocationType = pulumi.StringPtr("DualStack")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:networkcloud:L3Network"),
		},
		{
			Type: pulumi.String("azure-native:networkcloud/v20230501preview:L3Network"),
		},
		{
			Type: pulumi.String("azure-native:networkcloud/v20231001preview:L3Network"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource L3Network
	err := ctx.RegisterResource("azure-native:networkcloud/v20230701:L3Network", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetL3Network gets an existing L3Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetL3Network(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *L3NetworkState, opts ...pulumi.ResourceOption) (*L3Network, error) {
	var resource L3Network
	err := ctx.ReadResource("azure-native:networkcloud/v20230701:L3Network", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering L3Network resources.
type l3networkState struct {
}

type L3NetworkState struct {
}

func (L3NetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*l3networkState)(nil)).Elem()
}

type l3networkArgs struct {
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
	HybridAksIpamEnabled *string `pulumi:"hybridAksIpamEnabled"`
	// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
	HybridAksPluginType *string `pulumi:"hybridAksPluginType"`
	// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
	InterfaceName *string `pulumi:"interfaceName"`
	// The type of the IP address allocation, defaulted to "DualStack".
	IpAllocationType *string `pulumi:"ipAllocationType"`
	// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
	// is IPV4 or DualStack.
	Ipv4ConnectedPrefix *string `pulumi:"ipv4ConnectedPrefix"`
	// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
	// is IPV6 or DualStack.
	Ipv6ConnectedPrefix *string `pulumi:"ipv6ConnectedPrefix"`
	// The resource ID of the Network Fabric l3IsolationDomain.
	L3IsolationDomainId string `pulumi:"l3IsolationDomainId"`
	// The name of the L3 network.
	L3NetworkName *string `pulumi:"l3NetworkName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The VLAN from the l3IsolationDomain that is used for this network.
	Vlan float64 `pulumi:"vlan"`
}

// The set of arguments for constructing a L3Network resource.
type L3NetworkArgs struct {
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationInput
	// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
	HybridAksIpamEnabled pulumi.StringPtrInput
	// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
	HybridAksPluginType pulumi.StringPtrInput
	// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
	InterfaceName pulumi.StringPtrInput
	// The type of the IP address allocation, defaulted to "DualStack".
	IpAllocationType pulumi.StringPtrInput
	// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
	// is IPV4 or DualStack.
	Ipv4ConnectedPrefix pulumi.StringPtrInput
	// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
	// is IPV6 or DualStack.
	Ipv6ConnectedPrefix pulumi.StringPtrInput
	// The resource ID of the Network Fabric l3IsolationDomain.
	L3IsolationDomainId pulumi.StringInput
	// The name of the L3 network.
	L3NetworkName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The VLAN from the l3IsolationDomain that is used for this network.
	Vlan pulumi.Float64Input
}

func (L3NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*l3networkArgs)(nil)).Elem()
}

type L3NetworkInput interface {
	pulumi.Input

	ToL3NetworkOutput() L3NetworkOutput
	ToL3NetworkOutputWithContext(ctx context.Context) L3NetworkOutput
}

func (*L3Network) ElementType() reflect.Type {
	return reflect.TypeOf((**L3Network)(nil)).Elem()
}

func (i *L3Network) ToL3NetworkOutput() L3NetworkOutput {
	return i.ToL3NetworkOutputWithContext(context.Background())
}

func (i *L3Network) ToL3NetworkOutputWithContext(ctx context.Context) L3NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L3NetworkOutput)
}

type L3NetworkOutput struct{ *pulumi.OutputState }

func (L3NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**L3Network)(nil)).Elem()
}

func (o L3NetworkOutput) ToL3NetworkOutput() L3NetworkOutput {
	return o
}

func (o L3NetworkOutput) ToL3NetworkOutputWithContext(ctx context.Context) L3NetworkOutput {
	return o
}

// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
func (o L3NetworkOutput) AssociatedResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringArrayOutput { return v.AssociatedResourceIds }).(pulumi.StringArrayOutput)
}

// The resource ID of the Network Cloud cluster this L3 network is associated with.
func (o L3NetworkOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The more detailed status of the L3 network.
func (o L3NetworkOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o L3NetworkOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The extended location of the cluster associated with the resource.
func (o L3NetworkOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *L3Network) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this L3 network.
func (o L3NetworkOutput) HybridAksClustersAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringArrayOutput { return v.HybridAksClustersAssociatedIds }).(pulumi.StringArrayOutput)
}

// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
func (o L3NetworkOutput) HybridAksIpamEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringPtrOutput { return v.HybridAksIpamEnabled }).(pulumi.StringPtrOutput)
}

// Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
func (o L3NetworkOutput) HybridAksPluginType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringPtrOutput { return v.HybridAksPluginType }).(pulumi.StringPtrOutput)
}

// The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
func (o L3NetworkOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// The type of the IP address allocation, defaulted to "DualStack".
func (o L3NetworkOutput) IpAllocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringPtrOutput { return v.IpAllocationType }).(pulumi.StringPtrOutput)
}

// The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
// is IPV4 or DualStack.
func (o L3NetworkOutput) Ipv4ConnectedPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringPtrOutput { return v.Ipv4ConnectedPrefix }).(pulumi.StringPtrOutput)
}

// The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
// is IPV6 or DualStack.
func (o L3NetworkOutput) Ipv6ConnectedPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringPtrOutput { return v.Ipv6ConnectedPrefix }).(pulumi.StringPtrOutput)
}

// The resource ID of the Network Fabric l3IsolationDomain.
func (o L3NetworkOutput) L3IsolationDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.L3IsolationDomainId }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o L3NetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o L3NetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the L3 network.
func (o L3NetworkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o L3NetworkOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *L3Network) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o L3NetworkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o L3NetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this L3 network.
func (o L3NetworkOutput) VirtualMachinesAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *L3Network) pulumi.StringArrayOutput { return v.VirtualMachinesAssociatedIds }).(pulumi.StringArrayOutput)
}

// The VLAN from the l3IsolationDomain that is used for this network.
func (o L3NetworkOutput) Vlan() pulumi.Float64Output {
	return o.ApplyT(func(v *L3Network) pulumi.Float64Output { return v.Vlan }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(L3NetworkOutput{})
}
