// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get properties of the provided cloud services network.
func LookupCloudServicesNetwork(ctx *pulumi.Context, args *LookupCloudServicesNetworkArgs, opts ...pulumi.InvokeOption) (*LookupCloudServicesNetworkResult, error) {
	var rv LookupCloudServicesNetworkResult
	err := ctx.Invoke("azure-native:networkcloud/v20230701:getCloudServicesNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupCloudServicesNetworkArgs struct {
	// The name of the cloud services network.
	CloudServicesNetworkName string `pulumi:"cloudServicesNetworkName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Upon creation, the additional services that are provided by the platform will be allocated and
// represented in the status of this resource. All resources associated with this cloud services network will be part
// of the same layer 2 (L2) isolation domain. At least one service network must be created but may be reused across many
// virtual machines and/or Hybrid AKS clusters.
type LookupCloudServicesNetworkResult struct {
	// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
	AdditionalEgressEndpoints []EgressEndpointResponse `pulumi:"additionalEgressEndpoints"`
	// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
	AssociatedResourceIds []string `pulumi:"associatedResourceIds"`
	// The resource ID of the Network Cloud cluster this cloud services network is associated with.
	ClusterId string `pulumi:"clusterId"`
	// The more detailed status of the cloud services network.
	DetailedStatus string `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage string `pulumi:"detailedStatusMessage"`
	// The indicator of whether the platform default endpoints are allowed for the egress traffic.
	EnableDefaultEgressEndpoints *string `pulumi:"enableDefaultEgressEndpoints"`
	// The full list of additional and default egress endpoints that are currently enabled.
	EnabledEgressEndpoints []EgressEndpointResponse `pulumi:"enabledEgressEndpoints"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.
	HybridAksClustersAssociatedIds []string `pulumi:"hybridAksClustersAssociatedIds"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the interface that will be present in the virtual machine to represent this network.
	InterfaceName string `pulumi:"interfaceName"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of the cloud services network.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.
	VirtualMachinesAssociatedIds []string `pulumi:"virtualMachinesAssociatedIds"`
}

// Defaults sets the appropriate defaults for LookupCloudServicesNetworkResult
func (val *LookupCloudServicesNetworkResult) Defaults() *LookupCloudServicesNetworkResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDefaultEgressEndpoints == nil {
		enableDefaultEgressEndpoints_ := "True"
		tmp.EnableDefaultEgressEndpoints = &enableDefaultEgressEndpoints_
	}
	return &tmp
}

func LookupCloudServicesNetworkOutput(ctx *pulumi.Context, args LookupCloudServicesNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupCloudServicesNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudServicesNetworkResult, error) {
			args := v.(LookupCloudServicesNetworkArgs)
			r, err := LookupCloudServicesNetwork(ctx, &args, opts...)
			var s LookupCloudServicesNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudServicesNetworkResultOutput)
}

type LookupCloudServicesNetworkOutputArgs struct {
	// The name of the cloud services network.
	CloudServicesNetworkName pulumi.StringInput `pulumi:"cloudServicesNetworkName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCloudServicesNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudServicesNetworkArgs)(nil)).Elem()
}

// Upon creation, the additional services that are provided by the platform will be allocated and
// represented in the status of this resource. All resources associated with this cloud services network will be part
// of the same layer 2 (L2) isolation domain. At least one service network must be created but may be reused across many
// virtual machines and/or Hybrid AKS clusters.
type LookupCloudServicesNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupCloudServicesNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudServicesNetworkResult)(nil)).Elem()
}

func (o LookupCloudServicesNetworkResultOutput) ToLookupCloudServicesNetworkResultOutput() LookupCloudServicesNetworkResultOutput {
	return o
}

func (o LookupCloudServicesNetworkResultOutput) ToLookupCloudServicesNetworkResultOutputWithContext(ctx context.Context) LookupCloudServicesNetworkResultOutput {
	return o
}

// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
func (o LookupCloudServicesNetworkResultOutput) AdditionalEgressEndpoints() EgressEndpointResponseArrayOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) []EgressEndpointResponse { return v.AdditionalEgressEndpoints }).(EgressEndpointResponseArrayOutput)
}

// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
func (o LookupCloudServicesNetworkResultOutput) AssociatedResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) []string { return v.AssociatedResourceIds }).(pulumi.StringArrayOutput)
}

// The resource ID of the Network Cloud cluster this cloud services network is associated with.
func (o LookupCloudServicesNetworkResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The more detailed status of the cloud services network.
func (o LookupCloudServicesNetworkResultOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o LookupCloudServicesNetworkResultOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The indicator of whether the platform default endpoints are allowed for the egress traffic.
func (o LookupCloudServicesNetworkResultOutput) EnableDefaultEgressEndpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) *string { return v.EnableDefaultEgressEndpoints }).(pulumi.StringPtrOutput)
}

// The full list of additional and default egress endpoints that are currently enabled.
func (o LookupCloudServicesNetworkResultOutput) EnabledEgressEndpoints() EgressEndpointResponseArrayOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) []EgressEndpointResponse { return v.EnabledEgressEndpoints }).(EgressEndpointResponseArrayOutput)
}

// The extended location of the cluster associated with the resource.
func (o LookupCloudServicesNetworkResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.
func (o LookupCloudServicesNetworkResultOutput) HybridAksClustersAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) []string { return v.HybridAksClustersAssociatedIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupCloudServicesNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the interface that will be present in the virtual machine to represent this network.
func (o LookupCloudServicesNetworkResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupCloudServicesNetworkResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCloudServicesNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the cloud services network.
func (o LookupCloudServicesNetworkResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCloudServicesNetworkResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupCloudServicesNetworkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCloudServicesNetworkResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) string { return v.Type }).(pulumi.StringOutput)
}

// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.
func (o LookupCloudServicesNetworkResultOutput) VirtualMachinesAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudServicesNetworkResult) []string { return v.VirtualMachinesAssociatedIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudServicesNetworkResultOutput{})
}
