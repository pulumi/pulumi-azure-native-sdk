// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get properties of the provided the Kubernetes cluster feature.
//
// Uses Azure REST API version 2025-02-01.
//
// Other available API versions: 2024-06-01-preview, 2024-07-01, 2024-10-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native networkcloud [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupKubernetesClusterFeature(ctx *pulumi.Context, args *LookupKubernetesClusterFeatureArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesClusterFeatureResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupKubernetesClusterFeatureResult
	err := ctx.Invoke("azure-native:networkcloud:getKubernetesClusterFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKubernetesClusterFeatureArgs struct {
	// The name of the feature.
	FeatureName string `pulumi:"featureName"`
	// The name of the Kubernetes cluster.
	KubernetesClusterName string `pulumi:"kubernetesClusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

type LookupKubernetesClusterFeatureResult struct {
	// The lifecycle indicator of the feature.
	AvailabilityLifecycle string `pulumi:"availabilityLifecycle"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The detailed status of the feature.
	DetailedStatus string `pulumi:"detailedStatus"`
	// The descriptive message for the detailed status of the feature.
	DetailedStatusMessage string `pulumi:"detailedStatusMessage"`
	// Resource ETag.
	Etag string `pulumi:"etag"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The configured options for the feature.
	Options []StringKeyValuePairResponse `pulumi:"options"`
	// The provisioning state of the Kubernetes cluster feature.
	ProvisioningState string `pulumi:"provisioningState"`
	// The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle.
	Required string `pulumi:"required"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The version of the feature.
	Version string `pulumi:"version"`
}

func LookupKubernetesClusterFeatureOutput(ctx *pulumi.Context, args LookupKubernetesClusterFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupKubernetesClusterFeatureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKubernetesClusterFeatureResultOutput, error) {
			args := v.(LookupKubernetesClusterFeatureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:networkcloud:getKubernetesClusterFeature", args, LookupKubernetesClusterFeatureResultOutput{}, options).(LookupKubernetesClusterFeatureResultOutput), nil
		}).(LookupKubernetesClusterFeatureResultOutput)
}

type LookupKubernetesClusterFeatureOutputArgs struct {
	// The name of the feature.
	FeatureName pulumi.StringInput `pulumi:"featureName"`
	// The name of the Kubernetes cluster.
	KubernetesClusterName pulumi.StringInput `pulumi:"kubernetesClusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupKubernetesClusterFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesClusterFeatureArgs)(nil)).Elem()
}

type LookupKubernetesClusterFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupKubernetesClusterFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesClusterFeatureResult)(nil)).Elem()
}

func (o LookupKubernetesClusterFeatureResultOutput) ToLookupKubernetesClusterFeatureResultOutput() LookupKubernetesClusterFeatureResultOutput {
	return o
}

func (o LookupKubernetesClusterFeatureResultOutput) ToLookupKubernetesClusterFeatureResultOutputWithContext(ctx context.Context) LookupKubernetesClusterFeatureResultOutput {
	return o
}

// The lifecycle indicator of the feature.
func (o LookupKubernetesClusterFeatureResultOutput) AvailabilityLifecycle() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.AvailabilityLifecycle }).(pulumi.StringOutput)
}

// The Azure API version of the resource.
func (o LookupKubernetesClusterFeatureResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The detailed status of the feature.
func (o LookupKubernetesClusterFeatureResultOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message for the detailed status of the feature.
func (o LookupKubernetesClusterFeatureResultOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// Resource ETag.
func (o LookupKubernetesClusterFeatureResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupKubernetesClusterFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupKubernetesClusterFeatureResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupKubernetesClusterFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// The configured options for the feature.
func (o LookupKubernetesClusterFeatureResultOutput) Options() StringKeyValuePairResponseArrayOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) []StringKeyValuePairResponse { return v.Options }).(StringKeyValuePairResponseArrayOutput)
}

// The provisioning state of the Kubernetes cluster feature.
func (o LookupKubernetesClusterFeatureResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle.
func (o LookupKubernetesClusterFeatureResultOutput) Required() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Required }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupKubernetesClusterFeatureResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupKubernetesClusterFeatureResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupKubernetesClusterFeatureResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Type }).(pulumi.StringOutput)
}

// The version of the feature.
func (o LookupKubernetesClusterFeatureResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterFeatureResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubernetesClusterFeatureResultOutput{})
}
