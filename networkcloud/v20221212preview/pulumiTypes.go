// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221212preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type AdministrativeCredentials struct {
	// The password of the administrator of the device used during initialization.
	Password string `pulumi:"password"`
	// The username of the administrator of the device used during initialization.
	Username string `pulumi:"username"`
}

// AdministrativeCredentialsInput is an input type that accepts AdministrativeCredentialsArgs and AdministrativeCredentialsOutput values.
// You can construct a concrete instance of `AdministrativeCredentialsInput` via:
//
//	AdministrativeCredentialsArgs{...}
type AdministrativeCredentialsInput interface {
	pulumi.Input

	ToAdministrativeCredentialsOutput() AdministrativeCredentialsOutput
	ToAdministrativeCredentialsOutputWithContext(context.Context) AdministrativeCredentialsOutput
}

type AdministrativeCredentialsArgs struct {
	// The password of the administrator of the device used during initialization.
	Password pulumi.StringInput `pulumi:"password"`
	// The username of the administrator of the device used during initialization.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AdministrativeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdministrativeCredentials)(nil)).Elem()
}

func (i AdministrativeCredentialsArgs) ToAdministrativeCredentialsOutput() AdministrativeCredentialsOutput {
	return i.ToAdministrativeCredentialsOutputWithContext(context.Background())
}

func (i AdministrativeCredentialsArgs) ToAdministrativeCredentialsOutputWithContext(ctx context.Context) AdministrativeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdministrativeCredentialsOutput)
}

type AdministrativeCredentialsOutput struct{ *pulumi.OutputState }

func (AdministrativeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdministrativeCredentials)(nil)).Elem()
}

func (o AdministrativeCredentialsOutput) ToAdministrativeCredentialsOutput() AdministrativeCredentialsOutput {
	return o
}

func (o AdministrativeCredentialsOutput) ToAdministrativeCredentialsOutputWithContext(ctx context.Context) AdministrativeCredentialsOutput {
	return o
}

// The password of the administrator of the device used during initialization.
func (o AdministrativeCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AdministrativeCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The username of the administrator of the device used during initialization.
func (o AdministrativeCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AdministrativeCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type AdministrativeCredentialsResponse struct {
	// The password of the administrator of the device used during initialization.
	Password string `pulumi:"password"`
	// The username of the administrator of the device used during initialization.
	Username string `pulumi:"username"`
}

type AdministrativeCredentialsResponseOutput struct{ *pulumi.OutputState }

func (AdministrativeCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdministrativeCredentialsResponse)(nil)).Elem()
}

func (o AdministrativeCredentialsResponseOutput) ToAdministrativeCredentialsResponseOutput() AdministrativeCredentialsResponseOutput {
	return o
}

func (o AdministrativeCredentialsResponseOutput) ToAdministrativeCredentialsResponseOutputWithContext(ctx context.Context) AdministrativeCredentialsResponseOutput {
	return o
}

// The password of the administrator of the device used during initialization.
func (o AdministrativeCredentialsResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AdministrativeCredentialsResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The username of the administrator of the device used during initialization.
func (o AdministrativeCredentialsResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AdministrativeCredentialsResponse) string { return v.Username }).(pulumi.StringOutput)
}

type BareMetalMachineConfigurationData struct {
	// The credentials of the baseboard management controller on this bare metal machine.
	BmcCredentials AdministrativeCredentials `pulumi:"bmcCredentials"`
	// The MAC address of the BMC for this machine.
	BmcMacAddress string `pulumi:"bmcMacAddress"`
	// The MAC address associated with the PXE NIC card.
	BootMacAddress string `pulumi:"bootMacAddress"`
	// The free-form additional information about the machine, e.g. an asset tag.
	MachineDetails *string `pulumi:"machineDetails"`
	// The user-provided name for the bare metal machine created from this specification.
	// If not provided, the machine name will be generated programmatically.
	MachineName *string `pulumi:"machineName"`
	// The slot the physical machine is in the rack based on the BOM configuration.
	RackSlot float64 `pulumi:"rackSlot"`
	// The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.
	SerialNumber string `pulumi:"serialNumber"`
}

// BareMetalMachineConfigurationDataInput is an input type that accepts BareMetalMachineConfigurationDataArgs and BareMetalMachineConfigurationDataOutput values.
// You can construct a concrete instance of `BareMetalMachineConfigurationDataInput` via:
//
//	BareMetalMachineConfigurationDataArgs{...}
type BareMetalMachineConfigurationDataInput interface {
	pulumi.Input

	ToBareMetalMachineConfigurationDataOutput() BareMetalMachineConfigurationDataOutput
	ToBareMetalMachineConfigurationDataOutputWithContext(context.Context) BareMetalMachineConfigurationDataOutput
}

type BareMetalMachineConfigurationDataArgs struct {
	// The credentials of the baseboard management controller on this bare metal machine.
	BmcCredentials AdministrativeCredentialsInput `pulumi:"bmcCredentials"`
	// The MAC address of the BMC for this machine.
	BmcMacAddress pulumi.StringInput `pulumi:"bmcMacAddress"`
	// The MAC address associated with the PXE NIC card.
	BootMacAddress pulumi.StringInput `pulumi:"bootMacAddress"`
	// The free-form additional information about the machine, e.g. an asset tag.
	MachineDetails pulumi.StringPtrInput `pulumi:"machineDetails"`
	// The user-provided name for the bare metal machine created from this specification.
	// If not provided, the machine name will be generated programmatically.
	MachineName pulumi.StringPtrInput `pulumi:"machineName"`
	// The slot the physical machine is in the rack based on the BOM configuration.
	RackSlot pulumi.Float64Input `pulumi:"rackSlot"`
	// The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
}

func (BareMetalMachineConfigurationDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalMachineConfigurationData)(nil)).Elem()
}

func (i BareMetalMachineConfigurationDataArgs) ToBareMetalMachineConfigurationDataOutput() BareMetalMachineConfigurationDataOutput {
	return i.ToBareMetalMachineConfigurationDataOutputWithContext(context.Background())
}

func (i BareMetalMachineConfigurationDataArgs) ToBareMetalMachineConfigurationDataOutputWithContext(ctx context.Context) BareMetalMachineConfigurationDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalMachineConfigurationDataOutput)
}

// BareMetalMachineConfigurationDataArrayInput is an input type that accepts BareMetalMachineConfigurationDataArray and BareMetalMachineConfigurationDataArrayOutput values.
// You can construct a concrete instance of `BareMetalMachineConfigurationDataArrayInput` via:
//
//	BareMetalMachineConfigurationDataArray{ BareMetalMachineConfigurationDataArgs{...} }
type BareMetalMachineConfigurationDataArrayInput interface {
	pulumi.Input

	ToBareMetalMachineConfigurationDataArrayOutput() BareMetalMachineConfigurationDataArrayOutput
	ToBareMetalMachineConfigurationDataArrayOutputWithContext(context.Context) BareMetalMachineConfigurationDataArrayOutput
}

type BareMetalMachineConfigurationDataArray []BareMetalMachineConfigurationDataInput

func (BareMetalMachineConfigurationDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalMachineConfigurationData)(nil)).Elem()
}

func (i BareMetalMachineConfigurationDataArray) ToBareMetalMachineConfigurationDataArrayOutput() BareMetalMachineConfigurationDataArrayOutput {
	return i.ToBareMetalMachineConfigurationDataArrayOutputWithContext(context.Background())
}

func (i BareMetalMachineConfigurationDataArray) ToBareMetalMachineConfigurationDataArrayOutputWithContext(ctx context.Context) BareMetalMachineConfigurationDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalMachineConfigurationDataArrayOutput)
}

type BareMetalMachineConfigurationDataOutput struct{ *pulumi.OutputState }

func (BareMetalMachineConfigurationDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalMachineConfigurationData)(nil)).Elem()
}

func (o BareMetalMachineConfigurationDataOutput) ToBareMetalMachineConfigurationDataOutput() BareMetalMachineConfigurationDataOutput {
	return o
}

func (o BareMetalMachineConfigurationDataOutput) ToBareMetalMachineConfigurationDataOutputWithContext(ctx context.Context) BareMetalMachineConfigurationDataOutput {
	return o
}

// The credentials of the baseboard management controller on this bare metal machine.
func (o BareMetalMachineConfigurationDataOutput) BmcCredentials() AdministrativeCredentialsOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) AdministrativeCredentials { return v.BmcCredentials }).(AdministrativeCredentialsOutput)
}

// The MAC address of the BMC for this machine.
func (o BareMetalMachineConfigurationDataOutput) BmcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) string { return v.BmcMacAddress }).(pulumi.StringOutput)
}

// The MAC address associated with the PXE NIC card.
func (o BareMetalMachineConfigurationDataOutput) BootMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) string { return v.BootMacAddress }).(pulumi.StringOutput)
}

// The free-form additional information about the machine, e.g. an asset tag.
func (o BareMetalMachineConfigurationDataOutput) MachineDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) *string { return v.MachineDetails }).(pulumi.StringPtrOutput)
}

// The user-provided name for the bare metal machine created from this specification.
// If not provided, the machine name will be generated programmatically.
func (o BareMetalMachineConfigurationDataOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// The slot the physical machine is in the rack based on the BOM configuration.
func (o BareMetalMachineConfigurationDataOutput) RackSlot() pulumi.Float64Output {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) float64 { return v.RackSlot }).(pulumi.Float64Output)
}

// The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.
func (o BareMetalMachineConfigurationDataOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationData) string { return v.SerialNumber }).(pulumi.StringOutput)
}

type BareMetalMachineConfigurationDataArrayOutput struct{ *pulumi.OutputState }

func (BareMetalMachineConfigurationDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalMachineConfigurationData)(nil)).Elem()
}

func (o BareMetalMachineConfigurationDataArrayOutput) ToBareMetalMachineConfigurationDataArrayOutput() BareMetalMachineConfigurationDataArrayOutput {
	return o
}

func (o BareMetalMachineConfigurationDataArrayOutput) ToBareMetalMachineConfigurationDataArrayOutputWithContext(ctx context.Context) BareMetalMachineConfigurationDataArrayOutput {
	return o
}

func (o BareMetalMachineConfigurationDataArrayOutput) Index(i pulumi.IntInput) BareMetalMachineConfigurationDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalMachineConfigurationData {
		return vs[0].([]BareMetalMachineConfigurationData)[vs[1].(int)]
	}).(BareMetalMachineConfigurationDataOutput)
}

type BareMetalMachineConfigurationDataResponse struct {
	// The connection string for the baseboard management controller including IP address and protocol.
	BmcConnectionString string `pulumi:"bmcConnectionString"`
	// The credentials of the baseboard management controller on this bare metal machine.
	BmcCredentials AdministrativeCredentialsResponse `pulumi:"bmcCredentials"`
	// The MAC address of the BMC for this machine.
	BmcMacAddress string `pulumi:"bmcMacAddress"`
	// The MAC address associated with the PXE NIC card.
	BootMacAddress string `pulumi:"bootMacAddress"`
	// The free-form additional information about the machine, e.g. an asset tag.
	MachineDetails *string `pulumi:"machineDetails"`
	// The user-provided name for the bare metal machine created from this specification.
	// If not provided, the machine name will be generated programmatically.
	MachineName *string `pulumi:"machineName"`
	// The slot the physical machine is in the rack based on the BOM configuration.
	RackSlot float64 `pulumi:"rackSlot"`
	// The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.
	SerialNumber string `pulumi:"serialNumber"`
}

type BareMetalMachineConfigurationDataResponseOutput struct{ *pulumi.OutputState }

func (BareMetalMachineConfigurationDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalMachineConfigurationDataResponse)(nil)).Elem()
}

func (o BareMetalMachineConfigurationDataResponseOutput) ToBareMetalMachineConfigurationDataResponseOutput() BareMetalMachineConfigurationDataResponseOutput {
	return o
}

func (o BareMetalMachineConfigurationDataResponseOutput) ToBareMetalMachineConfigurationDataResponseOutputWithContext(ctx context.Context) BareMetalMachineConfigurationDataResponseOutput {
	return o
}

// The connection string for the baseboard management controller including IP address and protocol.
func (o BareMetalMachineConfigurationDataResponseOutput) BmcConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) string { return v.BmcConnectionString }).(pulumi.StringOutput)
}

// The credentials of the baseboard management controller on this bare metal machine.
func (o BareMetalMachineConfigurationDataResponseOutput) BmcCredentials() AdministrativeCredentialsResponseOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) AdministrativeCredentialsResponse {
		return v.BmcCredentials
	}).(AdministrativeCredentialsResponseOutput)
}

// The MAC address of the BMC for this machine.
func (o BareMetalMachineConfigurationDataResponseOutput) BmcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) string { return v.BmcMacAddress }).(pulumi.StringOutput)
}

// The MAC address associated with the PXE NIC card.
func (o BareMetalMachineConfigurationDataResponseOutput) BootMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) string { return v.BootMacAddress }).(pulumi.StringOutput)
}

// The free-form additional information about the machine, e.g. an asset tag.
func (o BareMetalMachineConfigurationDataResponseOutput) MachineDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) *string { return v.MachineDetails }).(pulumi.StringPtrOutput)
}

// The user-provided name for the bare metal machine created from this specification.
// If not provided, the machine name will be generated programmatically.
func (o BareMetalMachineConfigurationDataResponseOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// The slot the physical machine is in the rack based on the BOM configuration.
func (o BareMetalMachineConfigurationDataResponseOutput) RackSlot() pulumi.Float64Output {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) float64 { return v.RackSlot }).(pulumi.Float64Output)
}

// The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.
func (o BareMetalMachineConfigurationDataResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalMachineConfigurationDataResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

type BareMetalMachineConfigurationDataResponseArrayOutput struct{ *pulumi.OutputState }

func (BareMetalMachineConfigurationDataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalMachineConfigurationDataResponse)(nil)).Elem()
}

func (o BareMetalMachineConfigurationDataResponseArrayOutput) ToBareMetalMachineConfigurationDataResponseArrayOutput() BareMetalMachineConfigurationDataResponseArrayOutput {
	return o
}

func (o BareMetalMachineConfigurationDataResponseArrayOutput) ToBareMetalMachineConfigurationDataResponseArrayOutputWithContext(ctx context.Context) BareMetalMachineConfigurationDataResponseArrayOutput {
	return o
}

func (o BareMetalMachineConfigurationDataResponseArrayOutput) Index(i pulumi.IntInput) BareMetalMachineConfigurationDataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalMachineConfigurationDataResponse {
		return vs[0].([]BareMetalMachineConfigurationDataResponse)[vs[1].(int)]
	}).(BareMetalMachineConfigurationDataResponseOutput)
}

type BgpPeer struct {
	// The ASN (Autonomous System Number) of the BGP peer.
	AsNumber float64 `pulumi:"asNumber"`
	// The password for this peering neighbor. It defaults to no password if not specified.
	Password *string `pulumi:"password"`
	// The IPv4 or IPv6 address to peer with the associated CNI Network. The IP version type will drive a peering with the same version type from the Default CNI Network. For example, IPv4 to IPv4 or IPv6 to IPv6.
	PeerIp string `pulumi:"peerIp"`
}

// BgpPeerInput is an input type that accepts BgpPeerArgs and BgpPeerOutput values.
// You can construct a concrete instance of `BgpPeerInput` via:
//
//	BgpPeerArgs{...}
type BgpPeerInput interface {
	pulumi.Input

	ToBgpPeerOutput() BgpPeerOutput
	ToBgpPeerOutputWithContext(context.Context) BgpPeerOutput
}

type BgpPeerArgs struct {
	// The ASN (Autonomous System Number) of the BGP peer.
	AsNumber pulumi.Float64Input `pulumi:"asNumber"`
	// The password for this peering neighbor. It defaults to no password if not specified.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The IPv4 or IPv6 address to peer with the associated CNI Network. The IP version type will drive a peering with the same version type from the Default CNI Network. For example, IPv4 to IPv4 or IPv6 to IPv6.
	PeerIp pulumi.StringInput `pulumi:"peerIp"`
}

func (BgpPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeer)(nil)).Elem()
}

func (i BgpPeerArgs) ToBgpPeerOutput() BgpPeerOutput {
	return i.ToBgpPeerOutputWithContext(context.Background())
}

func (i BgpPeerArgs) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerOutput)
}

// BgpPeerArrayInput is an input type that accepts BgpPeerArray and BgpPeerArrayOutput values.
// You can construct a concrete instance of `BgpPeerArrayInput` via:
//
//	BgpPeerArray{ BgpPeerArgs{...} }
type BgpPeerArrayInput interface {
	pulumi.Input

	ToBgpPeerArrayOutput() BgpPeerArrayOutput
	ToBgpPeerArrayOutputWithContext(context.Context) BgpPeerArrayOutput
}

type BgpPeerArray []BgpPeerInput

func (BgpPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeer)(nil)).Elem()
}

func (i BgpPeerArray) ToBgpPeerArrayOutput() BgpPeerArrayOutput {
	return i.ToBgpPeerArrayOutputWithContext(context.Background())
}

func (i BgpPeerArray) ToBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerArrayOutput)
}

type BgpPeerOutput struct{ *pulumi.OutputState }

func (BgpPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeer)(nil)).Elem()
}

func (o BgpPeerOutput) ToBgpPeerOutput() BgpPeerOutput {
	return o
}

func (o BgpPeerOutput) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return o
}

// The ASN (Autonomous System Number) of the BGP peer.
func (o BgpPeerOutput) AsNumber() pulumi.Float64Output {
	return o.ApplyT(func(v BgpPeer) float64 { return v.AsNumber }).(pulumi.Float64Output)
}

// The password for this peering neighbor. It defaults to no password if not specified.
func (o BgpPeerOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpPeer) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The IPv4 or IPv6 address to peer with the associated CNI Network. The IP version type will drive a peering with the same version type from the Default CNI Network. For example, IPv4 to IPv4 or IPv6 to IPv6.
func (o BgpPeerOutput) PeerIp() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeer) string { return v.PeerIp }).(pulumi.StringOutput)
}

type BgpPeerArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeer)(nil)).Elem()
}

func (o BgpPeerArrayOutput) ToBgpPeerArrayOutput() BgpPeerArrayOutput {
	return o
}

func (o BgpPeerArrayOutput) ToBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeerArrayOutput {
	return o
}

func (o BgpPeerArrayOutput) Index(i pulumi.IntInput) BgpPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpPeer {
		return vs[0].([]BgpPeer)[vs[1].(int)]
	}).(BgpPeerOutput)
}

type BgpPeerResponse struct {
	// The ASN (Autonomous System Number) of the BGP peer.
	AsNumber float64 `pulumi:"asNumber"`
	// The IPv4 or IPv6 address to peer with the associated CNI Network. The IP version type will drive a peering with the same version type from the Default CNI Network. For example, IPv4 to IPv4 or IPv6 to IPv6.
	PeerIp string `pulumi:"peerIp"`
}

type BgpPeerResponseOutput struct{ *pulumi.OutputState }

func (BgpPeerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeerResponse)(nil)).Elem()
}

func (o BgpPeerResponseOutput) ToBgpPeerResponseOutput() BgpPeerResponseOutput {
	return o
}

func (o BgpPeerResponseOutput) ToBgpPeerResponseOutputWithContext(ctx context.Context) BgpPeerResponseOutput {
	return o
}

// The ASN (Autonomous System Number) of the BGP peer.
func (o BgpPeerResponseOutput) AsNumber() pulumi.Float64Output {
	return o.ApplyT(func(v BgpPeerResponse) float64 { return v.AsNumber }).(pulumi.Float64Output)
}

// The IPv4 or IPv6 address to peer with the associated CNI Network. The IP version type will drive a peering with the same version type from the Default CNI Network. For example, IPv4 to IPv4 or IPv6 to IPv6.
func (o BgpPeerResponseOutput) PeerIp() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerResponse) string { return v.PeerIp }).(pulumi.StringOutput)
}

type BgpPeerResponseArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeerResponse)(nil)).Elem()
}

func (o BgpPeerResponseArrayOutput) ToBgpPeerResponseArrayOutput() BgpPeerResponseArrayOutput {
	return o
}

func (o BgpPeerResponseArrayOutput) ToBgpPeerResponseArrayOutputWithContext(ctx context.Context) BgpPeerResponseArrayOutput {
	return o
}

func (o BgpPeerResponseArrayOutput) Index(i pulumi.IntInput) BgpPeerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpPeerResponse {
		return vs[0].([]BgpPeerResponse)[vs[1].(int)]
	}).(BgpPeerResponseOutput)
}

type ClusterAvailableUpgradeVersionResponse struct {
	// The indicator of whether the control plane will be impacted during the upgrade.
	ControlImpact string `pulumi:"controlImpact"`
	// The expected duration needed for this upgrade.
	ExpectedDuration string `pulumi:"expectedDuration"`
	// The impact description including the specific details and release notes.
	ImpactDescription string `pulumi:"impactDescription"`
	// The last date the version of the platform is supported.
	SupportExpiryDate string `pulumi:"supportExpiryDate"`
	// The target version this cluster will be upgraded to.
	TargetClusterVersion string `pulumi:"targetClusterVersion"`
	// The indicator of whether the workload will be impacted during the upgrade.
	WorkloadImpact string `pulumi:"workloadImpact"`
}

type ClusterAvailableUpgradeVersionResponseOutput struct{ *pulumi.OutputState }

func (ClusterAvailableUpgradeVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAvailableUpgradeVersionResponse)(nil)).Elem()
}

func (o ClusterAvailableUpgradeVersionResponseOutput) ToClusterAvailableUpgradeVersionResponseOutput() ClusterAvailableUpgradeVersionResponseOutput {
	return o
}

func (o ClusterAvailableUpgradeVersionResponseOutput) ToClusterAvailableUpgradeVersionResponseOutputWithContext(ctx context.Context) ClusterAvailableUpgradeVersionResponseOutput {
	return o
}

// The indicator of whether the control plane will be impacted during the upgrade.
func (o ClusterAvailableUpgradeVersionResponseOutput) ControlImpact() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAvailableUpgradeVersionResponse) string { return v.ControlImpact }).(pulumi.StringOutput)
}

// The expected duration needed for this upgrade.
func (o ClusterAvailableUpgradeVersionResponseOutput) ExpectedDuration() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAvailableUpgradeVersionResponse) string { return v.ExpectedDuration }).(pulumi.StringOutput)
}

// The impact description including the specific details and release notes.
func (o ClusterAvailableUpgradeVersionResponseOutput) ImpactDescription() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAvailableUpgradeVersionResponse) string { return v.ImpactDescription }).(pulumi.StringOutput)
}

// The last date the version of the platform is supported.
func (o ClusterAvailableUpgradeVersionResponseOutput) SupportExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAvailableUpgradeVersionResponse) string { return v.SupportExpiryDate }).(pulumi.StringOutput)
}

// The target version this cluster will be upgraded to.
func (o ClusterAvailableUpgradeVersionResponseOutput) TargetClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAvailableUpgradeVersionResponse) string { return v.TargetClusterVersion }).(pulumi.StringOutput)
}

// The indicator of whether the workload will be impacted during the upgrade.
func (o ClusterAvailableUpgradeVersionResponseOutput) WorkloadImpact() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAvailableUpgradeVersionResponse) string { return v.WorkloadImpact }).(pulumi.StringOutput)
}

type ClusterAvailableUpgradeVersionResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterAvailableUpgradeVersionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterAvailableUpgradeVersionResponse)(nil)).Elem()
}

func (o ClusterAvailableUpgradeVersionResponseArrayOutput) ToClusterAvailableUpgradeVersionResponseArrayOutput() ClusterAvailableUpgradeVersionResponseArrayOutput {
	return o
}

func (o ClusterAvailableUpgradeVersionResponseArrayOutput) ToClusterAvailableUpgradeVersionResponseArrayOutputWithContext(ctx context.Context) ClusterAvailableUpgradeVersionResponseArrayOutput {
	return o
}

func (o ClusterAvailableUpgradeVersionResponseArrayOutput) Index(i pulumi.IntInput) ClusterAvailableUpgradeVersionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterAvailableUpgradeVersionResponse {
		return vs[0].([]ClusterAvailableUpgradeVersionResponse)[vs[1].(int)]
	}).(ClusterAvailableUpgradeVersionResponseOutput)
}

type ClusterCapacityResponse struct {
	// The remaining appliance-based storage in GB available for workload use.
	AvailableApplianceStorageGB *float64 `pulumi:"availableApplianceStorageGB"`
	// The remaining number of cores that are available in this cluster for workload use.
	AvailableCoreCount *float64 `pulumi:"availableCoreCount"`
	// The remaining machine or host-based storage in GB available for workload use.
	AvailableHostStorageGB *float64 `pulumi:"availableHostStorageGB"`
	// The remaining memory in GB that are available in this cluster for workload use.
	AvailableMemoryGB *float64 `pulumi:"availableMemoryGB"`
	// The total appliance-based storage in GB supported by this cluster for workload use.
	TotalApplianceStorageGB *float64 `pulumi:"totalApplianceStorageGB"`
	// The total number of cores that are supported by this cluster for workload use.
	TotalCoreCount *float64 `pulumi:"totalCoreCount"`
	// The total machine or host-based storage in GB supported by this cluster for workload use.
	TotalHostStorageGB *float64 `pulumi:"totalHostStorageGB"`
	// The total memory supported by this cluster for workload use.
	TotalMemoryGB *float64 `pulumi:"totalMemoryGB"`
}

type ClusterCapacityResponseOutput struct{ *pulumi.OutputState }

func (ClusterCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCapacityResponse)(nil)).Elem()
}

func (o ClusterCapacityResponseOutput) ToClusterCapacityResponseOutput() ClusterCapacityResponseOutput {
	return o
}

func (o ClusterCapacityResponseOutput) ToClusterCapacityResponseOutputWithContext(ctx context.Context) ClusterCapacityResponseOutput {
	return o
}

// The remaining appliance-based storage in GB available for workload use.
func (o ClusterCapacityResponseOutput) AvailableApplianceStorageGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.AvailableApplianceStorageGB }).(pulumi.Float64PtrOutput)
}

// The remaining number of cores that are available in this cluster for workload use.
func (o ClusterCapacityResponseOutput) AvailableCoreCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.AvailableCoreCount }).(pulumi.Float64PtrOutput)
}

// The remaining machine or host-based storage in GB available for workload use.
func (o ClusterCapacityResponseOutput) AvailableHostStorageGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.AvailableHostStorageGB }).(pulumi.Float64PtrOutput)
}

// The remaining memory in GB that are available in this cluster for workload use.
func (o ClusterCapacityResponseOutput) AvailableMemoryGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.AvailableMemoryGB }).(pulumi.Float64PtrOutput)
}

// The total appliance-based storage in GB supported by this cluster for workload use.
func (o ClusterCapacityResponseOutput) TotalApplianceStorageGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.TotalApplianceStorageGB }).(pulumi.Float64PtrOutput)
}

// The total number of cores that are supported by this cluster for workload use.
func (o ClusterCapacityResponseOutput) TotalCoreCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.TotalCoreCount }).(pulumi.Float64PtrOutput)
}

// The total machine or host-based storage in GB supported by this cluster for workload use.
func (o ClusterCapacityResponseOutput) TotalHostStorageGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.TotalHostStorageGB }).(pulumi.Float64PtrOutput)
}

// The total memory supported by this cluster for workload use.
func (o ClusterCapacityResponseOutput) TotalMemoryGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterCapacityResponse) *float64 { return v.TotalMemoryGB }).(pulumi.Float64PtrOutput)
}

type CniBgpConfiguration struct {
	// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
	BgpPeers []BgpPeer `pulumi:"bgpPeers"`
	// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
	// communities that should be associated with that prefix when it is announced.
	CommunityAdvertisements []CommunityAdvertisement `pulumi:"communityAdvertisements"`
	// The password of the Calico node mesh. It defaults to a randomly-generated string when not provided.
	NodeMeshPassword *string `pulumi:"nodeMeshPassword"`
	// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
	ServiceExternalPrefixes []string `pulumi:"serviceExternalPrefixes"`
	// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
	// are within one of these blocks.
	ServiceLoadBalancerPrefixes []string `pulumi:"serviceLoadBalancerPrefixes"`
}

// CniBgpConfigurationInput is an input type that accepts CniBgpConfigurationArgs and CniBgpConfigurationOutput values.
// You can construct a concrete instance of `CniBgpConfigurationInput` via:
//
//	CniBgpConfigurationArgs{...}
type CniBgpConfigurationInput interface {
	pulumi.Input

	ToCniBgpConfigurationOutput() CniBgpConfigurationOutput
	ToCniBgpConfigurationOutputWithContext(context.Context) CniBgpConfigurationOutput
}

type CniBgpConfigurationArgs struct {
	// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
	BgpPeers BgpPeerArrayInput `pulumi:"bgpPeers"`
	// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
	// communities that should be associated with that prefix when it is announced.
	CommunityAdvertisements CommunityAdvertisementArrayInput `pulumi:"communityAdvertisements"`
	// The password of the Calico node mesh. It defaults to a randomly-generated string when not provided.
	NodeMeshPassword pulumi.StringPtrInput `pulumi:"nodeMeshPassword"`
	// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
	ServiceExternalPrefixes pulumi.StringArrayInput `pulumi:"serviceExternalPrefixes"`
	// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
	// are within one of these blocks.
	ServiceLoadBalancerPrefixes pulumi.StringArrayInput `pulumi:"serviceLoadBalancerPrefixes"`
}

func (CniBgpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CniBgpConfiguration)(nil)).Elem()
}

func (i CniBgpConfigurationArgs) ToCniBgpConfigurationOutput() CniBgpConfigurationOutput {
	return i.ToCniBgpConfigurationOutputWithContext(context.Background())
}

func (i CniBgpConfigurationArgs) ToCniBgpConfigurationOutputWithContext(ctx context.Context) CniBgpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CniBgpConfigurationOutput)
}

func (i CniBgpConfigurationArgs) ToCniBgpConfigurationPtrOutput() CniBgpConfigurationPtrOutput {
	return i.ToCniBgpConfigurationPtrOutputWithContext(context.Background())
}

func (i CniBgpConfigurationArgs) ToCniBgpConfigurationPtrOutputWithContext(ctx context.Context) CniBgpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CniBgpConfigurationOutput).ToCniBgpConfigurationPtrOutputWithContext(ctx)
}

// CniBgpConfigurationPtrInput is an input type that accepts CniBgpConfigurationArgs, CniBgpConfigurationPtr and CniBgpConfigurationPtrOutput values.
// You can construct a concrete instance of `CniBgpConfigurationPtrInput` via:
//
//	        CniBgpConfigurationArgs{...}
//
//	or:
//
//	        nil
type CniBgpConfigurationPtrInput interface {
	pulumi.Input

	ToCniBgpConfigurationPtrOutput() CniBgpConfigurationPtrOutput
	ToCniBgpConfigurationPtrOutputWithContext(context.Context) CniBgpConfigurationPtrOutput
}

type cniBgpConfigurationPtrType CniBgpConfigurationArgs

func CniBgpConfigurationPtr(v *CniBgpConfigurationArgs) CniBgpConfigurationPtrInput {
	return (*cniBgpConfigurationPtrType)(v)
}

func (*cniBgpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CniBgpConfiguration)(nil)).Elem()
}

func (i *cniBgpConfigurationPtrType) ToCniBgpConfigurationPtrOutput() CniBgpConfigurationPtrOutput {
	return i.ToCniBgpConfigurationPtrOutputWithContext(context.Background())
}

func (i *cniBgpConfigurationPtrType) ToCniBgpConfigurationPtrOutputWithContext(ctx context.Context) CniBgpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CniBgpConfigurationPtrOutput)
}

type CniBgpConfigurationOutput struct{ *pulumi.OutputState }

func (CniBgpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CniBgpConfiguration)(nil)).Elem()
}

func (o CniBgpConfigurationOutput) ToCniBgpConfigurationOutput() CniBgpConfigurationOutput {
	return o
}

func (o CniBgpConfigurationOutput) ToCniBgpConfigurationOutputWithContext(ctx context.Context) CniBgpConfigurationOutput {
	return o
}

func (o CniBgpConfigurationOutput) ToCniBgpConfigurationPtrOutput() CniBgpConfigurationPtrOutput {
	return o.ToCniBgpConfigurationPtrOutputWithContext(context.Background())
}

func (o CniBgpConfigurationOutput) ToCniBgpConfigurationPtrOutputWithContext(ctx context.Context) CniBgpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CniBgpConfiguration) *CniBgpConfiguration {
		return &v
	}).(CniBgpConfigurationPtrOutput)
}

// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
func (o CniBgpConfigurationOutput) BgpPeers() BgpPeerArrayOutput {
	return o.ApplyT(func(v CniBgpConfiguration) []BgpPeer { return v.BgpPeers }).(BgpPeerArrayOutput)
}

// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
// communities that should be associated with that prefix when it is announced.
func (o CniBgpConfigurationOutput) CommunityAdvertisements() CommunityAdvertisementArrayOutput {
	return o.ApplyT(func(v CniBgpConfiguration) []CommunityAdvertisement { return v.CommunityAdvertisements }).(CommunityAdvertisementArrayOutput)
}

// The password of the Calico node mesh. It defaults to a randomly-generated string when not provided.
func (o CniBgpConfigurationOutput) NodeMeshPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CniBgpConfiguration) *string { return v.NodeMeshPassword }).(pulumi.StringPtrOutput)
}

// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
func (o CniBgpConfigurationOutput) ServiceExternalPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CniBgpConfiguration) []string { return v.ServiceExternalPrefixes }).(pulumi.StringArrayOutput)
}

// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
// are within one of these blocks.
func (o CniBgpConfigurationOutput) ServiceLoadBalancerPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CniBgpConfiguration) []string { return v.ServiceLoadBalancerPrefixes }).(pulumi.StringArrayOutput)
}

type CniBgpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CniBgpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CniBgpConfiguration)(nil)).Elem()
}

func (o CniBgpConfigurationPtrOutput) ToCniBgpConfigurationPtrOutput() CniBgpConfigurationPtrOutput {
	return o
}

func (o CniBgpConfigurationPtrOutput) ToCniBgpConfigurationPtrOutputWithContext(ctx context.Context) CniBgpConfigurationPtrOutput {
	return o
}

func (o CniBgpConfigurationPtrOutput) Elem() CniBgpConfigurationOutput {
	return o.ApplyT(func(v *CniBgpConfiguration) CniBgpConfiguration {
		if v != nil {
			return *v
		}
		var ret CniBgpConfiguration
		return ret
	}).(CniBgpConfigurationOutput)
}

// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
func (o CniBgpConfigurationPtrOutput) BgpPeers() BgpPeerArrayOutput {
	return o.ApplyT(func(v *CniBgpConfiguration) []BgpPeer {
		if v == nil {
			return nil
		}
		return v.BgpPeers
	}).(BgpPeerArrayOutput)
}

// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
// communities that should be associated with that prefix when it is announced.
func (o CniBgpConfigurationPtrOutput) CommunityAdvertisements() CommunityAdvertisementArrayOutput {
	return o.ApplyT(func(v *CniBgpConfiguration) []CommunityAdvertisement {
		if v == nil {
			return nil
		}
		return v.CommunityAdvertisements
	}).(CommunityAdvertisementArrayOutput)
}

// The password of the Calico node mesh. It defaults to a randomly-generated string when not provided.
func (o CniBgpConfigurationPtrOutput) NodeMeshPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CniBgpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.NodeMeshPassword
	}).(pulumi.StringPtrOutput)
}

// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
func (o CniBgpConfigurationPtrOutput) ServiceExternalPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CniBgpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ServiceExternalPrefixes
	}).(pulumi.StringArrayOutput)
}

// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
// are within one of these blocks.
func (o CniBgpConfigurationPtrOutput) ServiceLoadBalancerPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CniBgpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ServiceLoadBalancerPrefixes
	}).(pulumi.StringArrayOutput)
}

type CniBgpConfigurationResponse struct {
	// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
	BgpPeers []BgpPeerResponse `pulumi:"bgpPeers"`
	// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
	// communities that should be associated with that prefix when it is announced.
	CommunityAdvertisements []CommunityAdvertisementResponse `pulumi:"communityAdvertisements"`
	// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
	ServiceExternalPrefixes []string `pulumi:"serviceExternalPrefixes"`
	// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
	// are within one of these blocks.
	ServiceLoadBalancerPrefixes []string `pulumi:"serviceLoadBalancerPrefixes"`
}

type CniBgpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CniBgpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CniBgpConfigurationResponse)(nil)).Elem()
}

func (o CniBgpConfigurationResponseOutput) ToCniBgpConfigurationResponseOutput() CniBgpConfigurationResponseOutput {
	return o
}

func (o CniBgpConfigurationResponseOutput) ToCniBgpConfigurationResponseOutputWithContext(ctx context.Context) CniBgpConfigurationResponseOutput {
	return o
}

// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
func (o CniBgpConfigurationResponseOutput) BgpPeers() BgpPeerResponseArrayOutput {
	return o.ApplyT(func(v CniBgpConfigurationResponse) []BgpPeerResponse { return v.BgpPeers }).(BgpPeerResponseArrayOutput)
}

// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
// communities that should be associated with that prefix when it is announced.
func (o CniBgpConfigurationResponseOutput) CommunityAdvertisements() CommunityAdvertisementResponseArrayOutput {
	return o.ApplyT(func(v CniBgpConfigurationResponse) []CommunityAdvertisementResponse { return v.CommunityAdvertisements }).(CommunityAdvertisementResponseArrayOutput)
}

// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
func (o CniBgpConfigurationResponseOutput) ServiceExternalPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CniBgpConfigurationResponse) []string { return v.ServiceExternalPrefixes }).(pulumi.StringArrayOutput)
}

// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
// are within one of these blocks.
func (o CniBgpConfigurationResponseOutput) ServiceLoadBalancerPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CniBgpConfigurationResponse) []string { return v.ServiceLoadBalancerPrefixes }).(pulumi.StringArrayOutput)
}

type CniBgpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (CniBgpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CniBgpConfigurationResponse)(nil)).Elem()
}

func (o CniBgpConfigurationResponsePtrOutput) ToCniBgpConfigurationResponsePtrOutput() CniBgpConfigurationResponsePtrOutput {
	return o
}

func (o CniBgpConfigurationResponsePtrOutput) ToCniBgpConfigurationResponsePtrOutputWithContext(ctx context.Context) CniBgpConfigurationResponsePtrOutput {
	return o
}

func (o CniBgpConfigurationResponsePtrOutput) Elem() CniBgpConfigurationResponseOutput {
	return o.ApplyT(func(v *CniBgpConfigurationResponse) CniBgpConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret CniBgpConfigurationResponse
		return ret
	}).(CniBgpConfigurationResponseOutput)
}

// The list of BgpPeer entities that the Hybrid AKS cluster will peer with in addition to peering that occurs automatically with the switch fabric.
func (o CniBgpConfigurationResponsePtrOutput) BgpPeers() BgpPeerResponseArrayOutput {
	return o.ApplyT(func(v *CniBgpConfigurationResponse) []BgpPeerResponse {
		if v == nil {
			return nil
		}
		return v.BgpPeers
	}).(BgpPeerResponseArrayOutput)
}

// The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the
// communities that should be associated with that prefix when it is announced.
func (o CniBgpConfigurationResponsePtrOutput) CommunityAdvertisements() CommunityAdvertisementResponseArrayOutput {
	return o.ApplyT(func(v *CniBgpConfigurationResponse) []CommunityAdvertisementResponse {
		if v == nil {
			return nil
		}
		return v.CommunityAdvertisements
	}).(CommunityAdvertisementResponseArrayOutput)
}

// The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.
func (o CniBgpConfigurationResponsePtrOutput) ServiceExternalPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CniBgpConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServiceExternalPrefixes
	}).(pulumi.StringArrayOutput)
}

// The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they
// are within one of these blocks.
func (o CniBgpConfigurationResponsePtrOutput) ServiceLoadBalancerPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CniBgpConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServiceLoadBalancerPrefixes
	}).(pulumi.StringArrayOutput)
}

type CommunityAdvertisement struct {
	// The list of community strings to announce with this prefix.
	Communities []string `pulumi:"communities"`
	// The subnet in CIDR format for which properties should be advertised.
	SubnetPrefix string `pulumi:"subnetPrefix"`
}

// CommunityAdvertisementInput is an input type that accepts CommunityAdvertisementArgs and CommunityAdvertisementOutput values.
// You can construct a concrete instance of `CommunityAdvertisementInput` via:
//
//	CommunityAdvertisementArgs{...}
type CommunityAdvertisementInput interface {
	pulumi.Input

	ToCommunityAdvertisementOutput() CommunityAdvertisementOutput
	ToCommunityAdvertisementOutputWithContext(context.Context) CommunityAdvertisementOutput
}

type CommunityAdvertisementArgs struct {
	// The list of community strings to announce with this prefix.
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// The subnet in CIDR format for which properties should be advertised.
	SubnetPrefix pulumi.StringInput `pulumi:"subnetPrefix"`
}

func (CommunityAdvertisementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityAdvertisement)(nil)).Elem()
}

func (i CommunityAdvertisementArgs) ToCommunityAdvertisementOutput() CommunityAdvertisementOutput {
	return i.ToCommunityAdvertisementOutputWithContext(context.Background())
}

func (i CommunityAdvertisementArgs) ToCommunityAdvertisementOutputWithContext(ctx context.Context) CommunityAdvertisementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityAdvertisementOutput)
}

// CommunityAdvertisementArrayInput is an input type that accepts CommunityAdvertisementArray and CommunityAdvertisementArrayOutput values.
// You can construct a concrete instance of `CommunityAdvertisementArrayInput` via:
//
//	CommunityAdvertisementArray{ CommunityAdvertisementArgs{...} }
type CommunityAdvertisementArrayInput interface {
	pulumi.Input

	ToCommunityAdvertisementArrayOutput() CommunityAdvertisementArrayOutput
	ToCommunityAdvertisementArrayOutputWithContext(context.Context) CommunityAdvertisementArrayOutput
}

type CommunityAdvertisementArray []CommunityAdvertisementInput

func (CommunityAdvertisementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityAdvertisement)(nil)).Elem()
}

func (i CommunityAdvertisementArray) ToCommunityAdvertisementArrayOutput() CommunityAdvertisementArrayOutput {
	return i.ToCommunityAdvertisementArrayOutputWithContext(context.Background())
}

func (i CommunityAdvertisementArray) ToCommunityAdvertisementArrayOutputWithContext(ctx context.Context) CommunityAdvertisementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommunityAdvertisementArrayOutput)
}

type CommunityAdvertisementOutput struct{ *pulumi.OutputState }

func (CommunityAdvertisementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityAdvertisement)(nil)).Elem()
}

func (o CommunityAdvertisementOutput) ToCommunityAdvertisementOutput() CommunityAdvertisementOutput {
	return o
}

func (o CommunityAdvertisementOutput) ToCommunityAdvertisementOutputWithContext(ctx context.Context) CommunityAdvertisementOutput {
	return o
}

// The list of community strings to announce with this prefix.
func (o CommunityAdvertisementOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CommunityAdvertisement) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The subnet in CIDR format for which properties should be advertised.
func (o CommunityAdvertisementOutput) SubnetPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v CommunityAdvertisement) string { return v.SubnetPrefix }).(pulumi.StringOutput)
}

type CommunityAdvertisementArrayOutput struct{ *pulumi.OutputState }

func (CommunityAdvertisementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityAdvertisement)(nil)).Elem()
}

func (o CommunityAdvertisementArrayOutput) ToCommunityAdvertisementArrayOutput() CommunityAdvertisementArrayOutput {
	return o
}

func (o CommunityAdvertisementArrayOutput) ToCommunityAdvertisementArrayOutputWithContext(ctx context.Context) CommunityAdvertisementArrayOutput {
	return o
}

func (o CommunityAdvertisementArrayOutput) Index(i pulumi.IntInput) CommunityAdvertisementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityAdvertisement {
		return vs[0].([]CommunityAdvertisement)[vs[1].(int)]
	}).(CommunityAdvertisementOutput)
}

type CommunityAdvertisementResponse struct {
	// The list of community strings to announce with this prefix.
	Communities []string `pulumi:"communities"`
	// The subnet in CIDR format for which properties should be advertised.
	SubnetPrefix string `pulumi:"subnetPrefix"`
}

type CommunityAdvertisementResponseOutput struct{ *pulumi.OutputState }

func (CommunityAdvertisementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommunityAdvertisementResponse)(nil)).Elem()
}

func (o CommunityAdvertisementResponseOutput) ToCommunityAdvertisementResponseOutput() CommunityAdvertisementResponseOutput {
	return o
}

func (o CommunityAdvertisementResponseOutput) ToCommunityAdvertisementResponseOutputWithContext(ctx context.Context) CommunityAdvertisementResponseOutput {
	return o
}

// The list of community strings to announce with this prefix.
func (o CommunityAdvertisementResponseOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CommunityAdvertisementResponse) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The subnet in CIDR format for which properties should be advertised.
func (o CommunityAdvertisementResponseOutput) SubnetPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v CommunityAdvertisementResponse) string { return v.SubnetPrefix }).(pulumi.StringOutput)
}

type CommunityAdvertisementResponseArrayOutput struct{ *pulumi.OutputState }

func (CommunityAdvertisementResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommunityAdvertisementResponse)(nil)).Elem()
}

func (o CommunityAdvertisementResponseArrayOutput) ToCommunityAdvertisementResponseArrayOutput() CommunityAdvertisementResponseArrayOutput {
	return o
}

func (o CommunityAdvertisementResponseArrayOutput) ToCommunityAdvertisementResponseArrayOutputWithContext(ctx context.Context) CommunityAdvertisementResponseArrayOutput {
	return o
}

func (o CommunityAdvertisementResponseArrayOutput) Index(i pulumi.IntInput) CommunityAdvertisementResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommunityAdvertisementResponse {
		return vs[0].([]CommunityAdvertisementResponse)[vs[1].(int)]
	}).(CommunityAdvertisementResponseOutput)
}

type ExtendedLocation struct {
	// The resource ID of the extended location on which the resource will be created.
	Name string `pulumi:"name"`
	// The extended location type, for example, CustomLocation.
	Type string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

type ExtendedLocationArgs struct {
	// The resource ID of the extended location on which the resource will be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The extended location type, for example, CustomLocation.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

// The resource ID of the extended location on which the resource will be created.
func (o ExtendedLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Name }).(pulumi.StringOutput)
}

// The extended location type, for example, CustomLocation.
func (o ExtendedLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationResponse struct {
	// The resource ID of the extended location on which the resource will be created.
	Name string `pulumi:"name"`
	// The extended location type, for example, CustomLocation.
	Type string `pulumi:"type"`
}

type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The resource ID of the extended location on which the resource will be created.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The extended location type, for example, CustomLocation.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedResourceGroupConfiguration struct {
	// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
	Location *string `pulumi:"location"`
	// The name for the managed resource group. If not specified, the unique name is automatically generated.
	Name *string `pulumi:"name"`
}

// ManagedResourceGroupConfigurationInput is an input type that accepts ManagedResourceGroupConfigurationArgs and ManagedResourceGroupConfigurationOutput values.
// You can construct a concrete instance of `ManagedResourceGroupConfigurationInput` via:
//
//	ManagedResourceGroupConfigurationArgs{...}
type ManagedResourceGroupConfigurationInput interface {
	pulumi.Input

	ToManagedResourceGroupConfigurationOutput() ManagedResourceGroupConfigurationOutput
	ToManagedResourceGroupConfigurationOutputWithContext(context.Context) ManagedResourceGroupConfigurationOutput
}

type ManagedResourceGroupConfigurationArgs struct {
	// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name for the managed resource group. If not specified, the unique name is automatically generated.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagedResourceGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationOutput() ManagedResourceGroupConfigurationOutput {
	return i.ToManagedResourceGroupConfigurationOutputWithContext(context.Background())
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedResourceGroupConfigurationOutput)
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return i.ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i ManagedResourceGroupConfigurationArgs) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedResourceGroupConfigurationOutput).ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx)
}

// ManagedResourceGroupConfigurationPtrInput is an input type that accepts ManagedResourceGroupConfigurationArgs, ManagedResourceGroupConfigurationPtr and ManagedResourceGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `ManagedResourceGroupConfigurationPtrInput` via:
//
//	        ManagedResourceGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type ManagedResourceGroupConfigurationPtrInput interface {
	pulumi.Input

	ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput
	ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Context) ManagedResourceGroupConfigurationPtrOutput
}

type managedResourceGroupConfigurationPtrType ManagedResourceGroupConfigurationArgs

func ManagedResourceGroupConfigurationPtr(v *ManagedResourceGroupConfigurationArgs) ManagedResourceGroupConfigurationPtrInput {
	return (*managedResourceGroupConfigurationPtrType)(v)
}

func (*managedResourceGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (i *managedResourceGroupConfigurationPtrType) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return i.ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *managedResourceGroupConfigurationPtrType) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedResourceGroupConfigurationPtrOutput)
}

type ManagedResourceGroupConfigurationOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationOutput() ManagedResourceGroupConfigurationOutput {
	return o
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationOutput {
	return o
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return o.ToManagedResourceGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o ManagedResourceGroupConfigurationOutput) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedResourceGroupConfiguration) *ManagedResourceGroupConfiguration {
		return &v
	}).(ManagedResourceGroupConfigurationPtrOutput)
}

// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
func (o ManagedResourceGroupConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name for the managed resource group. If not specified, the unique name is automatically generated.
func (o ManagedResourceGroupConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedResourceGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourceGroupConfiguration)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationPtrOutput) ToManagedResourceGroupConfigurationPtrOutput() ManagedResourceGroupConfigurationPtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationPtrOutput) ToManagedResourceGroupConfigurationPtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationPtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationPtrOutput) Elem() ManagedResourceGroupConfigurationOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfiguration) ManagedResourceGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret ManagedResourceGroupConfiguration
		return ret
	}).(ManagedResourceGroupConfigurationOutput)
}

// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
func (o ManagedResourceGroupConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name for the managed resource group. If not specified, the unique name is automatically generated.
func (o ManagedResourceGroupConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ManagedResourceGroupConfigurationResponse struct {
	// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
	Location *string `pulumi:"location"`
	// The name for the managed resource group. If not specified, the unique name is automatically generated.
	Name *string `pulumi:"name"`
}

type ManagedResourceGroupConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedResourceGroupConfigurationResponse)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationResponseOutput) ToManagedResourceGroupConfigurationResponseOutput() ManagedResourceGroupConfigurationResponseOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponseOutput) ToManagedResourceGroupConfigurationResponseOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationResponseOutput {
	return o
}

// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
func (o ManagedResourceGroupConfigurationResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfigurationResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name for the managed resource group. If not specified, the unique name is automatically generated.
func (o ManagedResourceGroupConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedResourceGroupConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagedResourceGroupConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedResourceGroupConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedResourceGroupConfigurationResponse)(nil)).Elem()
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) ToManagedResourceGroupConfigurationResponsePtrOutput() ManagedResourceGroupConfigurationResponsePtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) ToManagedResourceGroupConfigurationResponsePtrOutputWithContext(ctx context.Context) ManagedResourceGroupConfigurationResponsePtrOutput {
	return o
}

func (o ManagedResourceGroupConfigurationResponsePtrOutput) Elem() ManagedResourceGroupConfigurationResponseOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfigurationResponse) ManagedResourceGroupConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ManagedResourceGroupConfigurationResponse
		return ret
	}).(ManagedResourceGroupConfigurationResponseOutput)
}

// The location of the managed resource group. If not specified, the location of the parent resource is chosen.
func (o ManagedResourceGroupConfigurationResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The name for the managed resource group. If not specified, the unique name is automatically generated.
func (o ManagedResourceGroupConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedResourceGroupConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type NetworkAttachmentResponse struct {
	// The resource ID of the associated network attached to the virtual machine.
	// It can be one of cloudServicesNetwork, l3Network, l2Network or trunkedNetwork resources.
	AttachedNetworkId string `pulumi:"attachedNetworkId"`
	// The indicator of whether this is the default gateway.
	// Only one of the attached networks (including the CloudServicesNetwork attachment) for a single machine may be specified as True.
	DefaultGateway *string `pulumi:"defaultGateway"`
	// The IP allocation mechanism for the virtual machine.
	// Dynamic and Static are only valid for l3Network which may also specify Disabled.
	// Otherwise, Disabled is the only permitted value.
	IpAllocationMethod string `pulumi:"ipAllocationMethod"`
	// The IPv4 address of the virtual machine.
	//
	// This field is used only if the attached network has IPAllocationType of IPV4 or DualStack.
	//
	// If IPAllocationMethod is:
	// Static - this field must contain a user specified IPv4 address from within the subnet specified in the attached network.
	// Dynamic - this field is read-only, but will be populated with an address from within the subnet specified in the attached network.
	// Disabled - this field will be empty.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// The IPv6 address of the virtual machine.
	//
	// This field is used only if the attached network has IPAllocationType of IPV6 or DualStack.
	//
	// If IPAllocationMethod is:
	// Static - this field must contain an IPv6 address range from within the range specified in the attached network.
	// Dynamic - this field is read-only, but will be populated with an range from within the subnet specified in the attached network.
	// Disabled - this field will be empty.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// The MAC address of the interface for the virtual machine that corresponds to this network attachment.
	MacAddress string `pulumi:"macAddress"`
	// The associated network's interface name.
	// If specified, the network attachment name has a maximum length of 15 characters and must be unique to this virtual machine.
	// If the user doesn’t specify this value, the default interface name of the network resource will be used.
	// For a CloudServicesNetwork resource, this name will be ignored.
	NetworkAttachmentName *string `pulumi:"networkAttachmentName"`
}

type NetworkAttachmentResponseOutput struct{ *pulumi.OutputState }

func (NetworkAttachmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAttachmentResponse)(nil)).Elem()
}

func (o NetworkAttachmentResponseOutput) ToNetworkAttachmentResponseOutput() NetworkAttachmentResponseOutput {
	return o
}

func (o NetworkAttachmentResponseOutput) ToNetworkAttachmentResponseOutputWithContext(ctx context.Context) NetworkAttachmentResponseOutput {
	return o
}

// The resource ID of the associated network attached to the virtual machine.
// It can be one of cloudServicesNetwork, l3Network, l2Network or trunkedNetwork resources.
func (o NetworkAttachmentResponseOutput) AttachedNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) string { return v.AttachedNetworkId }).(pulumi.StringOutput)
}

// The indicator of whether this is the default gateway.
// Only one of the attached networks (including the CloudServicesNetwork attachment) for a single machine may be specified as True.
func (o NetworkAttachmentResponseOutput) DefaultGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) *string { return v.DefaultGateway }).(pulumi.StringPtrOutput)
}

// The IP allocation mechanism for the virtual machine.
// Dynamic and Static are only valid for l3Network which may also specify Disabled.
// Otherwise, Disabled is the only permitted value.
func (o NetworkAttachmentResponseOutput) IpAllocationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) string { return v.IpAllocationMethod }).(pulumi.StringOutput)
}

// The IPv4 address of the virtual machine.
//
// This field is used only if the attached network has IPAllocationType of IPV4 or DualStack.
//
// If IPAllocationMethod is:
// Static - this field must contain a user specified IPv4 address from within the subnet specified in the attached network.
// Dynamic - this field is read-only, but will be populated with an address from within the subnet specified in the attached network.
// Disabled - this field will be empty.
func (o NetworkAttachmentResponseOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// The IPv6 address of the virtual machine.
//
// This field is used only if the attached network has IPAllocationType of IPV6 or DualStack.
//
// If IPAllocationMethod is:
// Static - this field must contain an IPv6 address range from within the range specified in the attached network.
// Dynamic - this field is read-only, but will be populated with an range from within the subnet specified in the attached network.
// Disabled - this field will be empty.
func (o NetworkAttachmentResponseOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// The MAC address of the interface for the virtual machine that corresponds to this network attachment.
func (o NetworkAttachmentResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The associated network's interface name.
// If specified, the network attachment name has a maximum length of 15 characters and must be unique to this virtual machine.
// If the user doesn’t specify this value, the default interface name of the network resource will be used.
// For a CloudServicesNetwork resource, this name will be ignored.
func (o NetworkAttachmentResponseOutput) NetworkAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAttachmentResponse) *string { return v.NetworkAttachmentName }).(pulumi.StringPtrOutput)
}

type NetworkAttachmentResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAttachmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAttachmentResponse)(nil)).Elem()
}

func (o NetworkAttachmentResponseArrayOutput) ToNetworkAttachmentResponseArrayOutput() NetworkAttachmentResponseArrayOutput {
	return o
}

func (o NetworkAttachmentResponseArrayOutput) ToNetworkAttachmentResponseArrayOutputWithContext(ctx context.Context) NetworkAttachmentResponseArrayOutput {
	return o
}

func (o NetworkAttachmentResponseArrayOutput) Index(i pulumi.IntInput) NetworkAttachmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAttachmentResponse {
		return vs[0].([]NetworkAttachmentResponse)[vs[1].(int)]
	}).(NetworkAttachmentResponseOutput)
}

type NodeConfigurationResponse struct {
	// The resource ID of the agent pool that contains the nodes in this configuration.
	AgentPoolId string `pulumi:"agentPoolId"`
	// The name of the agent pool that contains the nodes in this configuration.
	AgentPoolName string `pulumi:"agentPoolName"`
	// The number of CPU cores in the virtual machine.
	CpuCores float64 `pulumi:"cpuCores"`
	// The root disk size of the virtual machine in GB.
	DiskSizeGB float64 `pulumi:"diskSizeGB"`
	// The memory size of the virtual machine in GB.
	MemorySizeGB float64 `pulumi:"memorySizeGB"`
	// Field deprecated, use agentPoolName instead. This field will be removed in a future version but will reflect the name of the agent pool that contains the nodes in this configuration.
	NodePoolName string `pulumi:"nodePoolName"`
	// The list of nodes that utilize this configuration.
	Nodes []NodeResponse `pulumi:"nodes"`
	// The number of virtual machines that use this configuration.
	VmCount float64 `pulumi:"vmCount"`
	// The name of the VM size supplied during the creation of the cluster.
	VmSize string `pulumi:"vmSize"`
}

type NodeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NodeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationResponse)(nil)).Elem()
}

func (o NodeConfigurationResponseOutput) ToNodeConfigurationResponseOutput() NodeConfigurationResponseOutput {
	return o
}

func (o NodeConfigurationResponseOutput) ToNodeConfigurationResponseOutputWithContext(ctx context.Context) NodeConfigurationResponseOutput {
	return o
}

// The resource ID of the agent pool that contains the nodes in this configuration.
func (o NodeConfigurationResponseOutput) AgentPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationResponse) string { return v.AgentPoolId }).(pulumi.StringOutput)
}

// The name of the agent pool that contains the nodes in this configuration.
func (o NodeConfigurationResponseOutput) AgentPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationResponse) string { return v.AgentPoolName }).(pulumi.StringOutput)
}

// The number of CPU cores in the virtual machine.
func (o NodeConfigurationResponseOutput) CpuCores() pulumi.Float64Output {
	return o.ApplyT(func(v NodeConfigurationResponse) float64 { return v.CpuCores }).(pulumi.Float64Output)
}

// The root disk size of the virtual machine in GB.
func (o NodeConfigurationResponseOutput) DiskSizeGB() pulumi.Float64Output {
	return o.ApplyT(func(v NodeConfigurationResponse) float64 { return v.DiskSizeGB }).(pulumi.Float64Output)
}

// The memory size of the virtual machine in GB.
func (o NodeConfigurationResponseOutput) MemorySizeGB() pulumi.Float64Output {
	return o.ApplyT(func(v NodeConfigurationResponse) float64 { return v.MemorySizeGB }).(pulumi.Float64Output)
}

// Field deprecated, use agentPoolName instead. This field will be removed in a future version but will reflect the name of the agent pool that contains the nodes in this configuration.
func (o NodeConfigurationResponseOutput) NodePoolName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationResponse) string { return v.NodePoolName }).(pulumi.StringOutput)
}

// The list of nodes that utilize this configuration.
func (o NodeConfigurationResponseOutput) Nodes() NodeResponseArrayOutput {
	return o.ApplyT(func(v NodeConfigurationResponse) []NodeResponse { return v.Nodes }).(NodeResponseArrayOutput)
}

// The number of virtual machines that use this configuration.
func (o NodeConfigurationResponseOutput) VmCount() pulumi.Float64Output {
	return o.ApplyT(func(v NodeConfigurationResponse) float64 { return v.VmCount }).(pulumi.Float64Output)
}

// The name of the VM size supplied during the creation of the cluster.
func (o NodeConfigurationResponseOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationResponse) string { return v.VmSize }).(pulumi.StringOutput)
}

type NodeConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationResponse)(nil)).Elem()
}

func (o NodeConfigurationResponseArrayOutput) ToNodeConfigurationResponseArrayOutput() NodeConfigurationResponseArrayOutput {
	return o
}

func (o NodeConfigurationResponseArrayOutput) ToNodeConfigurationResponseArrayOutputWithContext(ctx context.Context) NodeConfigurationResponseArrayOutput {
	return o
}

func (o NodeConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NodeConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationResponse {
		return vs[0].([]NodeConfigurationResponse)[vs[1].(int)]
	}).(NodeConfigurationResponseOutput)
}

type NodeResponse struct {
	// The resource ID of the bare metal machine that hosts this node.
	BareMetalMachineId string `pulumi:"bareMetalMachineId"`
	// The machine image last used to deploy this node.
	ImageId string `pulumi:"imageId"`
	// The list of network attachments to the virtual machine.
	NetworkAttachments []NetworkAttachmentResponse `pulumi:"networkAttachments"`
	// The name of this node, as realized in the Hybrid AKS cluster.
	NodeName string `pulumi:"nodeName"`
	// The power state (On | Off) of the node.
	PowerState string `pulumi:"powerState"`
}

type NodeResponseOutput struct{ *pulumi.OutputState }

func (NodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeResponse)(nil)).Elem()
}

func (o NodeResponseOutput) ToNodeResponseOutput() NodeResponseOutput {
	return o
}

func (o NodeResponseOutput) ToNodeResponseOutputWithContext(ctx context.Context) NodeResponseOutput {
	return o
}

// The resource ID of the bare metal machine that hosts this node.
func (o NodeResponseOutput) BareMetalMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v NodeResponse) string { return v.BareMetalMachineId }).(pulumi.StringOutput)
}

// The machine image last used to deploy this node.
func (o NodeResponseOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v NodeResponse) string { return v.ImageId }).(pulumi.StringOutput)
}

// The list of network attachments to the virtual machine.
func (o NodeResponseOutput) NetworkAttachments() NetworkAttachmentResponseArrayOutput {
	return o.ApplyT(func(v NodeResponse) []NetworkAttachmentResponse { return v.NetworkAttachments }).(NetworkAttachmentResponseArrayOutput)
}

// The name of this node, as realized in the Hybrid AKS cluster.
func (o NodeResponseOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeResponse) string { return v.NodeName }).(pulumi.StringOutput)
}

// The power state (On | Off) of the node.
func (o NodeResponseOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v NodeResponse) string { return v.PowerState }).(pulumi.StringOutput)
}

type NodeResponseArrayOutput struct{ *pulumi.OutputState }

func (NodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeResponse)(nil)).Elem()
}

func (o NodeResponseArrayOutput) ToNodeResponseArrayOutput() NodeResponseArrayOutput {
	return o
}

func (o NodeResponseArrayOutput) ToNodeResponseArrayOutputWithContext(ctx context.Context) NodeResponseArrayOutput {
	return o
}

func (o NodeResponseArrayOutput) Index(i pulumi.IntInput) NodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeResponse {
		return vs[0].([]NodeResponse)[vs[1].(int)]
	}).(NodeResponseOutput)
}

type RackDefinition struct {
	// The zone name used for this rack when created.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The unordered list of bare metal machine configuration.
	BareMetalMachineConfigurationData []BareMetalMachineConfigurationData `pulumi:"bareMetalMachineConfigurationData"`
	// The resource ID of the network rack that matches this rack definition.
	NetworkRackId string `pulumi:"networkRackId"`
	// The free-form description of the rack's location.
	RackLocation *string `pulumi:"rackLocation"`
	// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
	RackSerialNumber string `pulumi:"rackSerialNumber"`
	// The resource ID of the sku for the rack being added.
	RackSkuId string `pulumi:"rackSkuId"`
	// The list of storage appliance configuration data for this rack.
	StorageApplianceConfigurationData []StorageApplianceConfigurationData `pulumi:"storageApplianceConfigurationData"`
}

// RackDefinitionInput is an input type that accepts RackDefinitionArgs and RackDefinitionOutput values.
// You can construct a concrete instance of `RackDefinitionInput` via:
//
//	RackDefinitionArgs{...}
type RackDefinitionInput interface {
	pulumi.Input

	ToRackDefinitionOutput() RackDefinitionOutput
	ToRackDefinitionOutputWithContext(context.Context) RackDefinitionOutput
}

type RackDefinitionArgs struct {
	// The zone name used for this rack when created.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The unordered list of bare metal machine configuration.
	BareMetalMachineConfigurationData BareMetalMachineConfigurationDataArrayInput `pulumi:"bareMetalMachineConfigurationData"`
	// The resource ID of the network rack that matches this rack definition.
	NetworkRackId pulumi.StringInput `pulumi:"networkRackId"`
	// The free-form description of the rack's location.
	RackLocation pulumi.StringPtrInput `pulumi:"rackLocation"`
	// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
	RackSerialNumber pulumi.StringInput `pulumi:"rackSerialNumber"`
	// The resource ID of the sku for the rack being added.
	RackSkuId pulumi.StringInput `pulumi:"rackSkuId"`
	// The list of storage appliance configuration data for this rack.
	StorageApplianceConfigurationData StorageApplianceConfigurationDataArrayInput `pulumi:"storageApplianceConfigurationData"`
}

func (RackDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RackDefinition)(nil)).Elem()
}

func (i RackDefinitionArgs) ToRackDefinitionOutput() RackDefinitionOutput {
	return i.ToRackDefinitionOutputWithContext(context.Background())
}

func (i RackDefinitionArgs) ToRackDefinitionOutputWithContext(ctx context.Context) RackDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RackDefinitionOutput)
}

// RackDefinitionArrayInput is an input type that accepts RackDefinitionArray and RackDefinitionArrayOutput values.
// You can construct a concrete instance of `RackDefinitionArrayInput` via:
//
//	RackDefinitionArray{ RackDefinitionArgs{...} }
type RackDefinitionArrayInput interface {
	pulumi.Input

	ToRackDefinitionArrayOutput() RackDefinitionArrayOutput
	ToRackDefinitionArrayOutputWithContext(context.Context) RackDefinitionArrayOutput
}

type RackDefinitionArray []RackDefinitionInput

func (RackDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RackDefinition)(nil)).Elem()
}

func (i RackDefinitionArray) ToRackDefinitionArrayOutput() RackDefinitionArrayOutput {
	return i.ToRackDefinitionArrayOutputWithContext(context.Background())
}

func (i RackDefinitionArray) ToRackDefinitionArrayOutputWithContext(ctx context.Context) RackDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RackDefinitionArrayOutput)
}

type RackDefinitionOutput struct{ *pulumi.OutputState }

func (RackDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RackDefinition)(nil)).Elem()
}

func (o RackDefinitionOutput) ToRackDefinitionOutput() RackDefinitionOutput {
	return o
}

func (o RackDefinitionOutput) ToRackDefinitionOutputWithContext(ctx context.Context) RackDefinitionOutput {
	return o
}

// The zone name used for this rack when created.
func (o RackDefinitionOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RackDefinition) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The unordered list of bare metal machine configuration.
func (o RackDefinitionOutput) BareMetalMachineConfigurationData() BareMetalMachineConfigurationDataArrayOutput {
	return o.ApplyT(func(v RackDefinition) []BareMetalMachineConfigurationData { return v.BareMetalMachineConfigurationData }).(BareMetalMachineConfigurationDataArrayOutput)
}

// The resource ID of the network rack that matches this rack definition.
func (o RackDefinitionOutput) NetworkRackId() pulumi.StringOutput {
	return o.ApplyT(func(v RackDefinition) string { return v.NetworkRackId }).(pulumi.StringOutput)
}

// The free-form description of the rack's location.
func (o RackDefinitionOutput) RackLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RackDefinition) *string { return v.RackLocation }).(pulumi.StringPtrOutput)
}

// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
func (o RackDefinitionOutput) RackSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v RackDefinition) string { return v.RackSerialNumber }).(pulumi.StringOutput)
}

// The resource ID of the sku for the rack being added.
func (o RackDefinitionOutput) RackSkuId() pulumi.StringOutput {
	return o.ApplyT(func(v RackDefinition) string { return v.RackSkuId }).(pulumi.StringOutput)
}

// The list of storage appliance configuration data for this rack.
func (o RackDefinitionOutput) StorageApplianceConfigurationData() StorageApplianceConfigurationDataArrayOutput {
	return o.ApplyT(func(v RackDefinition) []StorageApplianceConfigurationData { return v.StorageApplianceConfigurationData }).(StorageApplianceConfigurationDataArrayOutput)
}

type RackDefinitionArrayOutput struct{ *pulumi.OutputState }

func (RackDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RackDefinition)(nil)).Elem()
}

func (o RackDefinitionArrayOutput) ToRackDefinitionArrayOutput() RackDefinitionArrayOutput {
	return o
}

func (o RackDefinitionArrayOutput) ToRackDefinitionArrayOutputWithContext(ctx context.Context) RackDefinitionArrayOutput {
	return o
}

func (o RackDefinitionArrayOutput) Index(i pulumi.IntInput) RackDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RackDefinition {
		return vs[0].([]RackDefinition)[vs[1].(int)]
	}).(RackDefinitionOutput)
}

type RackDefinitionResponse struct {
	// The zone name used for this rack when created.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The unordered list of bare metal machine configuration.
	BareMetalMachineConfigurationData []BareMetalMachineConfigurationDataResponse `pulumi:"bareMetalMachineConfigurationData"`
	// The resource ID of the network rack that matches this rack definition.
	NetworkRackId string `pulumi:"networkRackId"`
	// The free-form description of the rack's location.
	RackLocation *string `pulumi:"rackLocation"`
	// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
	RackSerialNumber string `pulumi:"rackSerialNumber"`
	// The resource ID of the sku for the rack being added.
	RackSkuId string `pulumi:"rackSkuId"`
	// The list of storage appliance configuration data for this rack.
	StorageApplianceConfigurationData []StorageApplianceConfigurationDataResponse `pulumi:"storageApplianceConfigurationData"`
}

type RackDefinitionResponseOutput struct{ *pulumi.OutputState }

func (RackDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RackDefinitionResponse)(nil)).Elem()
}

func (o RackDefinitionResponseOutput) ToRackDefinitionResponseOutput() RackDefinitionResponseOutput {
	return o
}

func (o RackDefinitionResponseOutput) ToRackDefinitionResponseOutputWithContext(ctx context.Context) RackDefinitionResponseOutput {
	return o
}

// The zone name used for this rack when created.
func (o RackDefinitionResponseOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RackDefinitionResponse) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The unordered list of bare metal machine configuration.
func (o RackDefinitionResponseOutput) BareMetalMachineConfigurationData() BareMetalMachineConfigurationDataResponseArrayOutput {
	return o.ApplyT(func(v RackDefinitionResponse) []BareMetalMachineConfigurationDataResponse {
		return v.BareMetalMachineConfigurationData
	}).(BareMetalMachineConfigurationDataResponseArrayOutput)
}

// The resource ID of the network rack that matches this rack definition.
func (o RackDefinitionResponseOutput) NetworkRackId() pulumi.StringOutput {
	return o.ApplyT(func(v RackDefinitionResponse) string { return v.NetworkRackId }).(pulumi.StringOutput)
}

// The free-form description of the rack's location.
func (o RackDefinitionResponseOutput) RackLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RackDefinitionResponse) *string { return v.RackLocation }).(pulumi.StringPtrOutput)
}

// The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
func (o RackDefinitionResponseOutput) RackSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v RackDefinitionResponse) string { return v.RackSerialNumber }).(pulumi.StringOutput)
}

// The resource ID of the sku for the rack being added.
func (o RackDefinitionResponseOutput) RackSkuId() pulumi.StringOutput {
	return o.ApplyT(func(v RackDefinitionResponse) string { return v.RackSkuId }).(pulumi.StringOutput)
}

// The list of storage appliance configuration data for this rack.
func (o RackDefinitionResponseOutput) StorageApplianceConfigurationData() StorageApplianceConfigurationDataResponseArrayOutput {
	return o.ApplyT(func(v RackDefinitionResponse) []StorageApplianceConfigurationDataResponse {
		return v.StorageApplianceConfigurationData
	}).(StorageApplianceConfigurationDataResponseArrayOutput)
}

type RackDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (RackDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RackDefinitionResponse)(nil)).Elem()
}

func (o RackDefinitionResponseArrayOutput) ToRackDefinitionResponseArrayOutput() RackDefinitionResponseArrayOutput {
	return o
}

func (o RackDefinitionResponseArrayOutput) ToRackDefinitionResponseArrayOutputWithContext(ctx context.Context) RackDefinitionResponseArrayOutput {
	return o
}

func (o RackDefinitionResponseArrayOutput) Index(i pulumi.IntInput) RackDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RackDefinitionResponse {
		return vs[0].([]RackDefinitionResponse)[vs[1].(int)]
	}).(RackDefinitionResponseOutput)
}

type ServicePrincipalInformation struct {
	// The application ID, also known as client ID, of the service principal.
	ApplicationId string `pulumi:"applicationId"`
	// The password of the service principal.
	Password string `pulumi:"password"`
	// The principal ID, also known as the object ID, of the service principal.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
	TenantId string `pulumi:"tenantId"`
}

// ServicePrincipalInformationInput is an input type that accepts ServicePrincipalInformationArgs and ServicePrincipalInformationOutput values.
// You can construct a concrete instance of `ServicePrincipalInformationInput` via:
//
//	ServicePrincipalInformationArgs{...}
type ServicePrincipalInformationInput interface {
	pulumi.Input

	ToServicePrincipalInformationOutput() ServicePrincipalInformationOutput
	ToServicePrincipalInformationOutputWithContext(context.Context) ServicePrincipalInformationOutput
}

type ServicePrincipalInformationArgs struct {
	// The application ID, also known as client ID, of the service principal.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The password of the service principal.
	Password pulumi.StringInput `pulumi:"password"`
	// The principal ID, also known as the object ID, of the service principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (ServicePrincipalInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalInformation)(nil)).Elem()
}

func (i ServicePrincipalInformationArgs) ToServicePrincipalInformationOutput() ServicePrincipalInformationOutput {
	return i.ToServicePrincipalInformationOutputWithContext(context.Background())
}

func (i ServicePrincipalInformationArgs) ToServicePrincipalInformationOutputWithContext(ctx context.Context) ServicePrincipalInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalInformationOutput)
}

func (i ServicePrincipalInformationArgs) ToServicePrincipalInformationPtrOutput() ServicePrincipalInformationPtrOutput {
	return i.ToServicePrincipalInformationPtrOutputWithContext(context.Background())
}

func (i ServicePrincipalInformationArgs) ToServicePrincipalInformationPtrOutputWithContext(ctx context.Context) ServicePrincipalInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalInformationOutput).ToServicePrincipalInformationPtrOutputWithContext(ctx)
}

// ServicePrincipalInformationPtrInput is an input type that accepts ServicePrincipalInformationArgs, ServicePrincipalInformationPtr and ServicePrincipalInformationPtrOutput values.
// You can construct a concrete instance of `ServicePrincipalInformationPtrInput` via:
//
//	        ServicePrincipalInformationArgs{...}
//
//	or:
//
//	        nil
type ServicePrincipalInformationPtrInput interface {
	pulumi.Input

	ToServicePrincipalInformationPtrOutput() ServicePrincipalInformationPtrOutput
	ToServicePrincipalInformationPtrOutputWithContext(context.Context) ServicePrincipalInformationPtrOutput
}

type servicePrincipalInformationPtrType ServicePrincipalInformationArgs

func ServicePrincipalInformationPtr(v *ServicePrincipalInformationArgs) ServicePrincipalInformationPtrInput {
	return (*servicePrincipalInformationPtrType)(v)
}

func (*servicePrincipalInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalInformation)(nil)).Elem()
}

func (i *servicePrincipalInformationPtrType) ToServicePrincipalInformationPtrOutput() ServicePrincipalInformationPtrOutput {
	return i.ToServicePrincipalInformationPtrOutputWithContext(context.Background())
}

func (i *servicePrincipalInformationPtrType) ToServicePrincipalInformationPtrOutputWithContext(ctx context.Context) ServicePrincipalInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalInformationPtrOutput)
}

type ServicePrincipalInformationOutput struct{ *pulumi.OutputState }

func (ServicePrincipalInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalInformation)(nil)).Elem()
}

func (o ServicePrincipalInformationOutput) ToServicePrincipalInformationOutput() ServicePrincipalInformationOutput {
	return o
}

func (o ServicePrincipalInformationOutput) ToServicePrincipalInformationOutputWithContext(ctx context.Context) ServicePrincipalInformationOutput {
	return o
}

func (o ServicePrincipalInformationOutput) ToServicePrincipalInformationPtrOutput() ServicePrincipalInformationPtrOutput {
	return o.ToServicePrincipalInformationPtrOutputWithContext(context.Background())
}

func (o ServicePrincipalInformationOutput) ToServicePrincipalInformationPtrOutputWithContext(ctx context.Context) ServicePrincipalInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePrincipalInformation) *ServicePrincipalInformation {
		return &v
	}).(ServicePrincipalInformationPtrOutput)
}

// The application ID, also known as client ID, of the service principal.
func (o ServicePrincipalInformationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformation) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The password of the service principal.
func (o ServicePrincipalInformationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformation) string { return v.Password }).(pulumi.StringOutput)
}

// The principal ID, also known as the object ID, of the service principal.
func (o ServicePrincipalInformationOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformation) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
func (o ServicePrincipalInformationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformation) string { return v.TenantId }).(pulumi.StringOutput)
}

type ServicePrincipalInformationPtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalInformation)(nil)).Elem()
}

func (o ServicePrincipalInformationPtrOutput) ToServicePrincipalInformationPtrOutput() ServicePrincipalInformationPtrOutput {
	return o
}

func (o ServicePrincipalInformationPtrOutput) ToServicePrincipalInformationPtrOutputWithContext(ctx context.Context) ServicePrincipalInformationPtrOutput {
	return o
}

func (o ServicePrincipalInformationPtrOutput) Elem() ServicePrincipalInformationOutput {
	return o.ApplyT(func(v *ServicePrincipalInformation) ServicePrincipalInformation {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalInformation
		return ret
	}).(ServicePrincipalInformationOutput)
}

// The application ID, also known as client ID, of the service principal.
func (o ServicePrincipalInformationPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformation) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The password of the service principal.
func (o ServicePrincipalInformationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformation) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The principal ID, also known as the object ID, of the service principal.
func (o ServicePrincipalInformationPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformation) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
func (o ServicePrincipalInformationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformation) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ServicePrincipalInformationResponse struct {
	// The application ID, also known as client ID, of the service principal.
	ApplicationId string `pulumi:"applicationId"`
	// The password of the service principal.
	Password string `pulumi:"password"`
	// The principal ID, also known as the object ID, of the service principal.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
	TenantId string `pulumi:"tenantId"`
}

type ServicePrincipalInformationResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalInformationResponse)(nil)).Elem()
}

func (o ServicePrincipalInformationResponseOutput) ToServicePrincipalInformationResponseOutput() ServicePrincipalInformationResponseOutput {
	return o
}

func (o ServicePrincipalInformationResponseOutput) ToServicePrincipalInformationResponseOutputWithContext(ctx context.Context) ServicePrincipalInformationResponseOutput {
	return o
}

// The application ID, also known as client ID, of the service principal.
func (o ServicePrincipalInformationResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformationResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The password of the service principal.
func (o ServicePrincipalInformationResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformationResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The principal ID, also known as the object ID, of the service principal.
func (o ServicePrincipalInformationResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformationResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
func (o ServicePrincipalInformationResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalInformationResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type ServicePrincipalInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalInformationResponse)(nil)).Elem()
}

func (o ServicePrincipalInformationResponsePtrOutput) ToServicePrincipalInformationResponsePtrOutput() ServicePrincipalInformationResponsePtrOutput {
	return o
}

func (o ServicePrincipalInformationResponsePtrOutput) ToServicePrincipalInformationResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalInformationResponsePtrOutput {
	return o
}

func (o ServicePrincipalInformationResponsePtrOutput) Elem() ServicePrincipalInformationResponseOutput {
	return o.ApplyT(func(v *ServicePrincipalInformationResponse) ServicePrincipalInformationResponse {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalInformationResponse
		return ret
	}).(ServicePrincipalInformationResponseOutput)
}

// The application ID, also known as client ID, of the service principal.
func (o ServicePrincipalInformationResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The password of the service principal.
func (o ServicePrincipalInformationResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The principal ID, also known as the object ID, of the service principal.
func (o ServicePrincipalInformationResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
func (o ServicePrincipalInformationResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type StorageApplianceConfigurationData struct {
	// The credentials of the administrative interface on this storage appliance.
	AdminCredentials AdministrativeCredentials `pulumi:"adminCredentials"`
	// The slot that storage appliance is in the rack based on the BOM configuration.
	RackSlot float64 `pulumi:"rackSlot"`
	// The serial number of the appliance.
	SerialNumber string `pulumi:"serialNumber"`
	// The user-provided name for the storage appliance that will be created from this specification.
	StorageApplianceName *string `pulumi:"storageApplianceName"`
}

// StorageApplianceConfigurationDataInput is an input type that accepts StorageApplianceConfigurationDataArgs and StorageApplianceConfigurationDataOutput values.
// You can construct a concrete instance of `StorageApplianceConfigurationDataInput` via:
//
//	StorageApplianceConfigurationDataArgs{...}
type StorageApplianceConfigurationDataInput interface {
	pulumi.Input

	ToStorageApplianceConfigurationDataOutput() StorageApplianceConfigurationDataOutput
	ToStorageApplianceConfigurationDataOutputWithContext(context.Context) StorageApplianceConfigurationDataOutput
}

type StorageApplianceConfigurationDataArgs struct {
	// The credentials of the administrative interface on this storage appliance.
	AdminCredentials AdministrativeCredentialsInput `pulumi:"adminCredentials"`
	// The slot that storage appliance is in the rack based on the BOM configuration.
	RackSlot pulumi.Float64Input `pulumi:"rackSlot"`
	// The serial number of the appliance.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// The user-provided name for the storage appliance that will be created from this specification.
	StorageApplianceName pulumi.StringPtrInput `pulumi:"storageApplianceName"`
}

func (StorageApplianceConfigurationDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageApplianceConfigurationData)(nil)).Elem()
}

func (i StorageApplianceConfigurationDataArgs) ToStorageApplianceConfigurationDataOutput() StorageApplianceConfigurationDataOutput {
	return i.ToStorageApplianceConfigurationDataOutputWithContext(context.Background())
}

func (i StorageApplianceConfigurationDataArgs) ToStorageApplianceConfigurationDataOutputWithContext(ctx context.Context) StorageApplianceConfigurationDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageApplianceConfigurationDataOutput)
}

// StorageApplianceConfigurationDataArrayInput is an input type that accepts StorageApplianceConfigurationDataArray and StorageApplianceConfigurationDataArrayOutput values.
// You can construct a concrete instance of `StorageApplianceConfigurationDataArrayInput` via:
//
//	StorageApplianceConfigurationDataArray{ StorageApplianceConfigurationDataArgs{...} }
type StorageApplianceConfigurationDataArrayInput interface {
	pulumi.Input

	ToStorageApplianceConfigurationDataArrayOutput() StorageApplianceConfigurationDataArrayOutput
	ToStorageApplianceConfigurationDataArrayOutputWithContext(context.Context) StorageApplianceConfigurationDataArrayOutput
}

type StorageApplianceConfigurationDataArray []StorageApplianceConfigurationDataInput

func (StorageApplianceConfigurationDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageApplianceConfigurationData)(nil)).Elem()
}

func (i StorageApplianceConfigurationDataArray) ToStorageApplianceConfigurationDataArrayOutput() StorageApplianceConfigurationDataArrayOutput {
	return i.ToStorageApplianceConfigurationDataArrayOutputWithContext(context.Background())
}

func (i StorageApplianceConfigurationDataArray) ToStorageApplianceConfigurationDataArrayOutputWithContext(ctx context.Context) StorageApplianceConfigurationDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageApplianceConfigurationDataArrayOutput)
}

type StorageApplianceConfigurationDataOutput struct{ *pulumi.OutputState }

func (StorageApplianceConfigurationDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageApplianceConfigurationData)(nil)).Elem()
}

func (o StorageApplianceConfigurationDataOutput) ToStorageApplianceConfigurationDataOutput() StorageApplianceConfigurationDataOutput {
	return o
}

func (o StorageApplianceConfigurationDataOutput) ToStorageApplianceConfigurationDataOutputWithContext(ctx context.Context) StorageApplianceConfigurationDataOutput {
	return o
}

// The credentials of the administrative interface on this storage appliance.
func (o StorageApplianceConfigurationDataOutput) AdminCredentials() AdministrativeCredentialsOutput {
	return o.ApplyT(func(v StorageApplianceConfigurationData) AdministrativeCredentials { return v.AdminCredentials }).(AdministrativeCredentialsOutput)
}

// The slot that storage appliance is in the rack based on the BOM configuration.
func (o StorageApplianceConfigurationDataOutput) RackSlot() pulumi.Float64Output {
	return o.ApplyT(func(v StorageApplianceConfigurationData) float64 { return v.RackSlot }).(pulumi.Float64Output)
}

// The serial number of the appliance.
func (o StorageApplianceConfigurationDataOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v StorageApplianceConfigurationData) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The user-provided name for the storage appliance that will be created from this specification.
func (o StorageApplianceConfigurationDataOutput) StorageApplianceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageApplianceConfigurationData) *string { return v.StorageApplianceName }).(pulumi.StringPtrOutput)
}

type StorageApplianceConfigurationDataArrayOutput struct{ *pulumi.OutputState }

func (StorageApplianceConfigurationDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageApplianceConfigurationData)(nil)).Elem()
}

func (o StorageApplianceConfigurationDataArrayOutput) ToStorageApplianceConfigurationDataArrayOutput() StorageApplianceConfigurationDataArrayOutput {
	return o
}

func (o StorageApplianceConfigurationDataArrayOutput) ToStorageApplianceConfigurationDataArrayOutputWithContext(ctx context.Context) StorageApplianceConfigurationDataArrayOutput {
	return o
}

func (o StorageApplianceConfigurationDataArrayOutput) Index(i pulumi.IntInput) StorageApplianceConfigurationDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageApplianceConfigurationData {
		return vs[0].([]StorageApplianceConfigurationData)[vs[1].(int)]
	}).(StorageApplianceConfigurationDataOutput)
}

type StorageApplianceConfigurationDataResponse struct {
	// The credentials of the administrative interface on this storage appliance.
	AdminCredentials AdministrativeCredentialsResponse `pulumi:"adminCredentials"`
	// The slot that storage appliance is in the rack based on the BOM configuration.
	RackSlot float64 `pulumi:"rackSlot"`
	// The serial number of the appliance.
	SerialNumber string `pulumi:"serialNumber"`
	// The user-provided name for the storage appliance that will be created from this specification.
	StorageApplianceName *string `pulumi:"storageApplianceName"`
}

type StorageApplianceConfigurationDataResponseOutput struct{ *pulumi.OutputState }

func (StorageApplianceConfigurationDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageApplianceConfigurationDataResponse)(nil)).Elem()
}

func (o StorageApplianceConfigurationDataResponseOutput) ToStorageApplianceConfigurationDataResponseOutput() StorageApplianceConfigurationDataResponseOutput {
	return o
}

func (o StorageApplianceConfigurationDataResponseOutput) ToStorageApplianceConfigurationDataResponseOutputWithContext(ctx context.Context) StorageApplianceConfigurationDataResponseOutput {
	return o
}

// The credentials of the administrative interface on this storage appliance.
func (o StorageApplianceConfigurationDataResponseOutput) AdminCredentials() AdministrativeCredentialsResponseOutput {
	return o.ApplyT(func(v StorageApplianceConfigurationDataResponse) AdministrativeCredentialsResponse {
		return v.AdminCredentials
	}).(AdministrativeCredentialsResponseOutput)
}

// The slot that storage appliance is in the rack based on the BOM configuration.
func (o StorageApplianceConfigurationDataResponseOutput) RackSlot() pulumi.Float64Output {
	return o.ApplyT(func(v StorageApplianceConfigurationDataResponse) float64 { return v.RackSlot }).(pulumi.Float64Output)
}

// The serial number of the appliance.
func (o StorageApplianceConfigurationDataResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v StorageApplianceConfigurationDataResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The user-provided name for the storage appliance that will be created from this specification.
func (o StorageApplianceConfigurationDataResponseOutput) StorageApplianceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageApplianceConfigurationDataResponse) *string { return v.StorageApplianceName }).(pulumi.StringPtrOutput)
}

type StorageApplianceConfigurationDataResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageApplianceConfigurationDataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageApplianceConfigurationDataResponse)(nil)).Elem()
}

func (o StorageApplianceConfigurationDataResponseArrayOutput) ToStorageApplianceConfigurationDataResponseArrayOutput() StorageApplianceConfigurationDataResponseArrayOutput {
	return o
}

func (o StorageApplianceConfigurationDataResponseArrayOutput) ToStorageApplianceConfigurationDataResponseArrayOutputWithContext(ctx context.Context) StorageApplianceConfigurationDataResponseArrayOutput {
	return o
}

func (o StorageApplianceConfigurationDataResponseArrayOutput) Index(i pulumi.IntInput) StorageApplianceConfigurationDataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageApplianceConfigurationDataResponse {
		return vs[0].([]StorageApplianceConfigurationDataResponse)[vs[1].(int)]
	}).(StorageApplianceConfigurationDataResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type ValidationThreshold struct {
	// Selection of how the type evaluation is applied to the cluster calculation.
	Grouping string `pulumi:"grouping"`
	// Selection of how the threshold should be evaluated.
	Type string `pulumi:"type"`
	// The numeric threshold value.
	Value float64 `pulumi:"value"`
}

// ValidationThresholdInput is an input type that accepts ValidationThresholdArgs and ValidationThresholdOutput values.
// You can construct a concrete instance of `ValidationThresholdInput` via:
//
//	ValidationThresholdArgs{...}
type ValidationThresholdInput interface {
	pulumi.Input

	ToValidationThresholdOutput() ValidationThresholdOutput
	ToValidationThresholdOutputWithContext(context.Context) ValidationThresholdOutput
}

type ValidationThresholdArgs struct {
	// Selection of how the type evaluation is applied to the cluster calculation.
	Grouping pulumi.StringInput `pulumi:"grouping"`
	// Selection of how the threshold should be evaluated.
	Type pulumi.StringInput `pulumi:"type"`
	// The numeric threshold value.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (ValidationThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationThreshold)(nil)).Elem()
}

func (i ValidationThresholdArgs) ToValidationThresholdOutput() ValidationThresholdOutput {
	return i.ToValidationThresholdOutputWithContext(context.Background())
}

func (i ValidationThresholdArgs) ToValidationThresholdOutputWithContext(ctx context.Context) ValidationThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidationThresholdOutput)
}

func (i ValidationThresholdArgs) ToValidationThresholdPtrOutput() ValidationThresholdPtrOutput {
	return i.ToValidationThresholdPtrOutputWithContext(context.Background())
}

func (i ValidationThresholdArgs) ToValidationThresholdPtrOutputWithContext(ctx context.Context) ValidationThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidationThresholdOutput).ToValidationThresholdPtrOutputWithContext(ctx)
}

// ValidationThresholdPtrInput is an input type that accepts ValidationThresholdArgs, ValidationThresholdPtr and ValidationThresholdPtrOutput values.
// You can construct a concrete instance of `ValidationThresholdPtrInput` via:
//
//	        ValidationThresholdArgs{...}
//
//	or:
//
//	        nil
type ValidationThresholdPtrInput interface {
	pulumi.Input

	ToValidationThresholdPtrOutput() ValidationThresholdPtrOutput
	ToValidationThresholdPtrOutputWithContext(context.Context) ValidationThresholdPtrOutput
}

type validationThresholdPtrType ValidationThresholdArgs

func ValidationThresholdPtr(v *ValidationThresholdArgs) ValidationThresholdPtrInput {
	return (*validationThresholdPtrType)(v)
}

func (*validationThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationThreshold)(nil)).Elem()
}

func (i *validationThresholdPtrType) ToValidationThresholdPtrOutput() ValidationThresholdPtrOutput {
	return i.ToValidationThresholdPtrOutputWithContext(context.Background())
}

func (i *validationThresholdPtrType) ToValidationThresholdPtrOutputWithContext(ctx context.Context) ValidationThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidationThresholdPtrOutput)
}

type ValidationThresholdOutput struct{ *pulumi.OutputState }

func (ValidationThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationThreshold)(nil)).Elem()
}

func (o ValidationThresholdOutput) ToValidationThresholdOutput() ValidationThresholdOutput {
	return o
}

func (o ValidationThresholdOutput) ToValidationThresholdOutputWithContext(ctx context.Context) ValidationThresholdOutput {
	return o
}

func (o ValidationThresholdOutput) ToValidationThresholdPtrOutput() ValidationThresholdPtrOutput {
	return o.ToValidationThresholdPtrOutputWithContext(context.Background())
}

func (o ValidationThresholdOutput) ToValidationThresholdPtrOutputWithContext(ctx context.Context) ValidationThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidationThreshold) *ValidationThreshold {
		return &v
	}).(ValidationThresholdPtrOutput)
}

// Selection of how the type evaluation is applied to the cluster calculation.
func (o ValidationThresholdOutput) Grouping() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationThreshold) string { return v.Grouping }).(pulumi.StringOutput)
}

// Selection of how the threshold should be evaluated.
func (o ValidationThresholdOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationThreshold) string { return v.Type }).(pulumi.StringOutput)
}

// The numeric threshold value.
func (o ValidationThresholdOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v ValidationThreshold) float64 { return v.Value }).(pulumi.Float64Output)
}

type ValidationThresholdPtrOutput struct{ *pulumi.OutputState }

func (ValidationThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationThreshold)(nil)).Elem()
}

func (o ValidationThresholdPtrOutput) ToValidationThresholdPtrOutput() ValidationThresholdPtrOutput {
	return o
}

func (o ValidationThresholdPtrOutput) ToValidationThresholdPtrOutputWithContext(ctx context.Context) ValidationThresholdPtrOutput {
	return o
}

func (o ValidationThresholdPtrOutput) Elem() ValidationThresholdOutput {
	return o.ApplyT(func(v *ValidationThreshold) ValidationThreshold {
		if v != nil {
			return *v
		}
		var ret ValidationThreshold
		return ret
	}).(ValidationThresholdOutput)
}

// Selection of how the type evaluation is applied to the cluster calculation.
func (o ValidationThresholdPtrOutput) Grouping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationThreshold) *string {
		if v == nil {
			return nil
		}
		return &v.Grouping
	}).(pulumi.StringPtrOutput)
}

// Selection of how the threshold should be evaluated.
func (o ValidationThresholdPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationThreshold) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The numeric threshold value.
func (o ValidationThresholdPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ValidationThreshold) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type ValidationThresholdResponse struct {
	// Selection of how the type evaluation is applied to the cluster calculation.
	Grouping string `pulumi:"grouping"`
	// Selection of how the threshold should be evaluated.
	Type string `pulumi:"type"`
	// The numeric threshold value.
	Value float64 `pulumi:"value"`
}

type ValidationThresholdResponseOutput struct{ *pulumi.OutputState }

func (ValidationThresholdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationThresholdResponse)(nil)).Elem()
}

func (o ValidationThresholdResponseOutput) ToValidationThresholdResponseOutput() ValidationThresholdResponseOutput {
	return o
}

func (o ValidationThresholdResponseOutput) ToValidationThresholdResponseOutputWithContext(ctx context.Context) ValidationThresholdResponseOutput {
	return o
}

// Selection of how the type evaluation is applied to the cluster calculation.
func (o ValidationThresholdResponseOutput) Grouping() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationThresholdResponse) string { return v.Grouping }).(pulumi.StringOutput)
}

// Selection of how the threshold should be evaluated.
func (o ValidationThresholdResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationThresholdResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The numeric threshold value.
func (o ValidationThresholdResponseOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v ValidationThresholdResponse) float64 { return v.Value }).(pulumi.Float64Output)
}

type ValidationThresholdResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidationThresholdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationThresholdResponse)(nil)).Elem()
}

func (o ValidationThresholdResponsePtrOutput) ToValidationThresholdResponsePtrOutput() ValidationThresholdResponsePtrOutput {
	return o
}

func (o ValidationThresholdResponsePtrOutput) ToValidationThresholdResponsePtrOutputWithContext(ctx context.Context) ValidationThresholdResponsePtrOutput {
	return o
}

func (o ValidationThresholdResponsePtrOutput) Elem() ValidationThresholdResponseOutput {
	return o.ApplyT(func(v *ValidationThresholdResponse) ValidationThresholdResponse {
		if v != nil {
			return *v
		}
		var ret ValidationThresholdResponse
		return ret
	}).(ValidationThresholdResponseOutput)
}

// Selection of how the type evaluation is applied to the cluster calculation.
func (o ValidationThresholdResponsePtrOutput) Grouping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationThresholdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Grouping
	}).(pulumi.StringPtrOutput)
}

// Selection of how the threshold should be evaluated.
func (o ValidationThresholdResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationThresholdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The numeric threshold value.
func (o ValidationThresholdResponsePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ValidationThresholdResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdministrativeCredentialsOutput{})
	pulumi.RegisterOutputType(AdministrativeCredentialsResponseOutput{})
	pulumi.RegisterOutputType(BareMetalMachineConfigurationDataOutput{})
	pulumi.RegisterOutputType(BareMetalMachineConfigurationDataArrayOutput{})
	pulumi.RegisterOutputType(BareMetalMachineConfigurationDataResponseOutput{})
	pulumi.RegisterOutputType(BareMetalMachineConfigurationDataResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerOutput{})
	pulumi.RegisterOutputType(BgpPeerArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerResponseOutput{})
	pulumi.RegisterOutputType(BgpPeerResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterAvailableUpgradeVersionResponseOutput{})
	pulumi.RegisterOutputType(ClusterAvailableUpgradeVersionResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterCapacityResponseOutput{})
	pulumi.RegisterOutputType(CniBgpConfigurationOutput{})
	pulumi.RegisterOutputType(CniBgpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CniBgpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CniBgpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(CommunityAdvertisementOutput{})
	pulumi.RegisterOutputType(CommunityAdvertisementArrayOutput{})
	pulumi.RegisterOutputType(CommunityAdvertisementResponseOutput{})
	pulumi.RegisterOutputType(CommunityAdvertisementResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ManagedResourceGroupConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkAttachmentResponseOutput{})
	pulumi.RegisterOutputType(NetworkAttachmentResponseArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NodeConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NodeResponseOutput{})
	pulumi.RegisterOutputType(NodeResponseArrayOutput{})
	pulumi.RegisterOutputType(RackDefinitionOutput{})
	pulumi.RegisterOutputType(RackDefinitionArrayOutput{})
	pulumi.RegisterOutputType(RackDefinitionResponseOutput{})
	pulumi.RegisterOutputType(RackDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalInformationOutput{})
	pulumi.RegisterOutputType(ServicePrincipalInformationPtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalInformationResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageApplianceConfigurationDataOutput{})
	pulumi.RegisterOutputType(StorageApplianceConfigurationDataArrayOutput{})
	pulumi.RegisterOutputType(StorageApplianceConfigurationDataResponseOutput{})
	pulumi.RegisterOutputType(StorageApplianceConfigurationDataResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(ValidationThresholdOutput{})
	pulumi.RegisterOutputType(ValidationThresholdPtrOutput{})
	pulumi.RegisterOutputType(ValidationThresholdResponseOutput{})
	pulumi.RegisterOutputType(ValidationThresholdResponsePtrOutput{})
}
