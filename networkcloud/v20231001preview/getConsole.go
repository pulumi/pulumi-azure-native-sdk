// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get properties of the provided virtual machine console.
func LookupConsole(ctx *pulumi.Context, args *LookupConsoleArgs, opts ...pulumi.InvokeOption) (*LookupConsoleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupConsoleResult
	err := ctx.Invoke("azure-native:networkcloud/v20231001preview:getConsole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConsoleArgs struct {
	// The name of the virtual machine console.
	ConsoleName string `pulumi:"consoleName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual machine.
	VirtualMachineName string `pulumi:"virtualMachineName"`
}

type LookupConsoleResult struct {
	// The more detailed status of the console.
	DetailedStatus string `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage string `pulumi:"detailedStatusMessage"`
	// The indicator of whether the console access is enabled.
	Enabled string `pulumi:"enabled"`
	// The date and time after which the key will be disallowed access.
	Expiration *string `pulumi:"expiration"`
	// The extended location of the cluster manager associated with the cluster this virtual machine is created on.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource ID of the private link service that is used to provide virtual machine console access.
	PrivateLinkServiceId string `pulumi:"privateLinkServiceId"`
	// The provisioning state of the virtual machine console.
	ProvisioningState string `pulumi:"provisioningState"`
	// The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
	SshPublicKey SshPublicKeyResponse `pulumi:"sshPublicKey"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The unique identifier for the virtual machine that is used to access the console.
	VirtualMachineAccessId string `pulumi:"virtualMachineAccessId"`
}

func LookupConsoleOutput(ctx *pulumi.Context, args LookupConsoleOutputArgs, opts ...pulumi.InvokeOption) LookupConsoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConsoleResult, error) {
			args := v.(LookupConsoleArgs)
			r, err := LookupConsole(ctx, &args, opts...)
			var s LookupConsoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConsoleResultOutput)
}

type LookupConsoleOutputArgs struct {
	// The name of the virtual machine console.
	ConsoleName pulumi.StringInput `pulumi:"consoleName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the virtual machine.
	VirtualMachineName pulumi.StringInput `pulumi:"virtualMachineName"`
}

func (LookupConsoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConsoleArgs)(nil)).Elem()
}

type LookupConsoleResultOutput struct{ *pulumi.OutputState }

func (LookupConsoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConsoleResult)(nil)).Elem()
}

func (o LookupConsoleResultOutput) ToLookupConsoleResultOutput() LookupConsoleResultOutput {
	return o
}

func (o LookupConsoleResultOutput) ToLookupConsoleResultOutputWithContext(ctx context.Context) LookupConsoleResultOutput {
	return o
}

// The more detailed status of the console.
func (o LookupConsoleResultOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o LookupConsoleResultOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The indicator of whether the console access is enabled.
func (o LookupConsoleResultOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.Enabled }).(pulumi.StringOutput)
}

// The date and time after which the key will be disallowed access.
func (o LookupConsoleResultOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConsoleResult) *string { return v.Expiration }).(pulumi.StringPtrOutput)
}

// The extended location of the cluster manager associated with the cluster this virtual machine is created on.
func (o LookupConsoleResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupConsoleResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupConsoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupConsoleResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupConsoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource ID of the private link service that is used to provide virtual machine console access.
func (o LookupConsoleResultOutput) PrivateLinkServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.PrivateLinkServiceId }).(pulumi.StringOutput)
}

// The provisioning state of the virtual machine console.
func (o LookupConsoleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
func (o LookupConsoleResultOutput) SshPublicKey() SshPublicKeyResponseOutput {
	return o.ApplyT(func(v LookupConsoleResult) SshPublicKeyResponse { return v.SshPublicKey }).(SshPublicKeyResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupConsoleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupConsoleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupConsoleResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConsoleResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupConsoleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.Type }).(pulumi.StringOutput)
}

// The unique identifier for the virtual machine that is used to access the console.
func (o LookupConsoleResultOutput) VirtualMachineAccessId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsoleResult) string { return v.VirtualMachineAccessId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConsoleResultOutput{})
}
