// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Upon creation, the additional services that are provided by the platform will be allocated and
// represented in the status of this resource. All resources associated with this cloud services network will be part
// of the same layer 2 (L2) isolation domain. At least one service network must be created but may be reused across many
// virtual machines and/or Hybrid AKS clusters.
// Azure REST API version: 2023-05-01-preview. Prior API version in Azure Native 1.x: 2022-12-12-preview
type CloudServicesNetwork struct {
	pulumi.CustomResourceState

	// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
	AdditionalEgressEndpoints EgressEndpointResponseArrayOutput `pulumi:"additionalEgressEndpoints"`
	// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
	AssociatedResourceIds pulumi.StringArrayOutput `pulumi:"associatedResourceIds"`
	// The resource ID of the Network Cloud cluster this cloud services network is associated with.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The more detailed status of the cloud services network.
	DetailedStatus pulumi.StringOutput `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage pulumi.StringOutput `pulumi:"detailedStatusMessage"`
	// The indicator of whether the platform default endpoints are allowed for the egress traffic.
	EnableDefaultEgressEndpoints pulumi.StringPtrOutput `pulumi:"enableDefaultEgressEndpoints"`
	// The full list of additional and default egress endpoints that are currently enabled.
	EnabledEgressEndpoints EgressEndpointResponseArrayOutput `pulumi:"enabledEgressEndpoints"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.
	HybridAksClustersAssociatedIds pulumi.StringArrayOutput `pulumi:"hybridAksClustersAssociatedIds"`
	// The name of the interface that will be present in the virtual machine to represent this network.
	InterfaceName pulumi.StringOutput `pulumi:"interfaceName"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the cloud services network.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.
	VirtualMachinesAssociatedIds pulumi.StringArrayOutput `pulumi:"virtualMachinesAssociatedIds"`
}

// NewCloudServicesNetwork registers a new resource with the given unique name, arguments, and options.
func NewCloudServicesNetwork(ctx *pulumi.Context,
	name string, args *CloudServicesNetworkArgs, opts ...pulumi.ResourceOption) (*CloudServicesNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.EnableDefaultEgressEndpoints == nil {
		args.EnableDefaultEgressEndpoints = pulumi.StringPtr("True")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:networkcloud/v20221212preview:CloudServicesNetwork"),
		},
		{
			Type: pulumi.String("azure-native:networkcloud/v20230501preview:CloudServicesNetwork"),
		},
		{
			Type: pulumi.String("azure-native:networkcloud/v20230701:CloudServicesNetwork"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CloudServicesNetwork
	err := ctx.RegisterResource("azure-native:networkcloud:CloudServicesNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudServicesNetwork gets an existing CloudServicesNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudServicesNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudServicesNetworkState, opts ...pulumi.ResourceOption) (*CloudServicesNetwork, error) {
	var resource CloudServicesNetwork
	err := ctx.ReadResource("azure-native:networkcloud:CloudServicesNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudServicesNetwork resources.
type cloudServicesNetworkState struct {
}

type CloudServicesNetworkState struct {
}

func (CloudServicesNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudServicesNetworkState)(nil)).Elem()
}

type cloudServicesNetworkArgs struct {
	// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
	AdditionalEgressEndpoints []EgressEndpoint `pulumi:"additionalEgressEndpoints"`
	// The name of the cloud services network.
	CloudServicesNetworkName *string `pulumi:"cloudServicesNetworkName"`
	// The indicator of whether the platform default endpoints are allowed for the egress traffic.
	EnableDefaultEgressEndpoints *string `pulumi:"enableDefaultEgressEndpoints"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CloudServicesNetwork resource.
type CloudServicesNetworkArgs struct {
	// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
	AdditionalEgressEndpoints EgressEndpointArrayInput
	// The name of the cloud services network.
	CloudServicesNetworkName pulumi.StringPtrInput
	// The indicator of whether the platform default endpoints are allowed for the egress traffic.
	EnableDefaultEgressEndpoints pulumi.StringPtrInput
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CloudServicesNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudServicesNetworkArgs)(nil)).Elem()
}

type CloudServicesNetworkInput interface {
	pulumi.Input

	ToCloudServicesNetworkOutput() CloudServicesNetworkOutput
	ToCloudServicesNetworkOutputWithContext(ctx context.Context) CloudServicesNetworkOutput
}

func (*CloudServicesNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServicesNetwork)(nil)).Elem()
}

func (i *CloudServicesNetwork) ToCloudServicesNetworkOutput() CloudServicesNetworkOutput {
	return i.ToCloudServicesNetworkOutputWithContext(context.Background())
}

func (i *CloudServicesNetwork) ToCloudServicesNetworkOutputWithContext(ctx context.Context) CloudServicesNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServicesNetworkOutput)
}

type CloudServicesNetworkOutput struct{ *pulumi.OutputState }

func (CloudServicesNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServicesNetwork)(nil)).Elem()
}

func (o CloudServicesNetworkOutput) ToCloudServicesNetworkOutput() CloudServicesNetworkOutput {
	return o
}

func (o CloudServicesNetworkOutput) ToCloudServicesNetworkOutputWithContext(ctx context.Context) CloudServicesNetworkOutput {
	return o
}

// The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
func (o CloudServicesNetworkOutput) AdditionalEgressEndpoints() EgressEndpointResponseArrayOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) EgressEndpointResponseArrayOutput { return v.AdditionalEgressEndpoints }).(EgressEndpointResponseArrayOutput)
}

// The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
func (o CloudServicesNetworkOutput) AssociatedResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringArrayOutput { return v.AssociatedResourceIds }).(pulumi.StringArrayOutput)
}

// The resource ID of the Network Cloud cluster this cloud services network is associated with.
func (o CloudServicesNetworkOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The more detailed status of the cloud services network.
func (o CloudServicesNetworkOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o CloudServicesNetworkOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The indicator of whether the platform default endpoints are allowed for the egress traffic.
func (o CloudServicesNetworkOutput) EnableDefaultEgressEndpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringPtrOutput { return v.EnableDefaultEgressEndpoints }).(pulumi.StringPtrOutput)
}

// The full list of additional and default egress endpoints that are currently enabled.
func (o CloudServicesNetworkOutput) EnabledEgressEndpoints() EgressEndpointResponseArrayOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) EgressEndpointResponseArrayOutput { return v.EnabledEgressEndpoints }).(EgressEndpointResponseArrayOutput)
}

// The extended location of the cluster associated with the resource.
func (o CloudServicesNetworkOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.
func (o CloudServicesNetworkOutput) HybridAksClustersAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringArrayOutput { return v.HybridAksClustersAssociatedIds }).(pulumi.StringArrayOutput)
}

// The name of the interface that will be present in the virtual machine to represent this network.
func (o CloudServicesNetworkOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.InterfaceName }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o CloudServicesNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o CloudServicesNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the cloud services network.
func (o CloudServicesNetworkOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CloudServicesNetworkOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CloudServicesNetworkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CloudServicesNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.
func (o CloudServicesNetworkOutput) VirtualMachinesAssociatedIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudServicesNetwork) pulumi.StringArrayOutput { return v.VirtualMachinesAssociatedIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudServicesNetworkOutput{})
}
