// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get metrics configuration of the provided cluster.
// Azure REST API version: 2023-05-01-preview.
func LookupMetricsConfiguration(ctx *pulumi.Context, args *LookupMetricsConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupMetricsConfigurationResult, error) {
	var rv LookupMetricsConfigurationResult
	err := ctx.Invoke("azure-native:networkcloud:getMetricsConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMetricsConfigurationArgs struct {
	// The name of the cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the metrics configuration for the cluster.
	MetricsConfigurationName string `pulumi:"metricsConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

type LookupMetricsConfigurationResult struct {
	// The interval in minutes by which metrics will be collected.
	CollectionInterval float64 `pulumi:"collectionInterval"`
	// The more detailed status of the metrics configuration.
	DetailedStatus string `pulumi:"detailedStatus"`
	// The descriptive message about the current detailed status.
	DetailedStatusMessage string `pulumi:"detailedStatusMessage"`
	// The list of metrics that are available for the cluster but disabled at the moment.
	DisabledMetrics []string `pulumi:"disabledMetrics"`
	// The list of metric names that have been chosen to be enabled in addition to the core set of enabled metrics.
	EnabledMetrics []string `pulumi:"enabledMetrics"`
	// The extended location of the cluster associated with the resource.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of the metrics configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupMetricsConfigurationOutput(ctx *pulumi.Context, args LookupMetricsConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupMetricsConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMetricsConfigurationResult, error) {
			args := v.(LookupMetricsConfigurationArgs)
			r, err := LookupMetricsConfiguration(ctx, &args, opts...)
			var s LookupMetricsConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMetricsConfigurationResultOutput)
}

type LookupMetricsConfigurationOutputArgs struct {
	// The name of the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the metrics configuration for the cluster.
	MetricsConfigurationName pulumi.StringInput `pulumi:"metricsConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupMetricsConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetricsConfigurationArgs)(nil)).Elem()
}

type LookupMetricsConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupMetricsConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetricsConfigurationResult)(nil)).Elem()
}

func (o LookupMetricsConfigurationResultOutput) ToLookupMetricsConfigurationResultOutput() LookupMetricsConfigurationResultOutput {
	return o
}

func (o LookupMetricsConfigurationResultOutput) ToLookupMetricsConfigurationResultOutputWithContext(ctx context.Context) LookupMetricsConfigurationResultOutput {
	return o
}

// The interval in minutes by which metrics will be collected.
func (o LookupMetricsConfigurationResultOutput) CollectionInterval() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) float64 { return v.CollectionInterval }).(pulumi.Float64Output)
}

// The more detailed status of the metrics configuration.
func (o LookupMetricsConfigurationResultOutput) DetailedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.DetailedStatus }).(pulumi.StringOutput)
}

// The descriptive message about the current detailed status.
func (o LookupMetricsConfigurationResultOutput) DetailedStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.DetailedStatusMessage }).(pulumi.StringOutput)
}

// The list of metrics that are available for the cluster but disabled at the moment.
func (o LookupMetricsConfigurationResultOutput) DisabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) []string { return v.DisabledMetrics }).(pulumi.StringArrayOutput)
}

// The list of metric names that have been chosen to be enabled in addition to the core set of enabled metrics.
func (o LookupMetricsConfigurationResultOutput) EnabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) []string { return v.EnabledMetrics }).(pulumi.StringArrayOutput)
}

// The extended location of the cluster associated with the resource.
func (o LookupMetricsConfigurationResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupMetricsConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupMetricsConfigurationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupMetricsConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the metrics configuration.
func (o LookupMetricsConfigurationResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupMetricsConfigurationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupMetricsConfigurationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupMetricsConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricsConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetricsConfigurationResultOutput{})
}
